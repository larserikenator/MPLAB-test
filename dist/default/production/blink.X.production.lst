

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Mar 15 23:14:57 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1454
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	stringtext5,global,class=STRCODE,delta=2
     9                           	psect	stringtext6,global,class=STRCODE,delta=2
    10                           	psect	stringtext7,global,class=STRCODE,delta=2
    11                           	psect	stringtext8,global,class=STRCODE,delta=2
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    16                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    17                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    20                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    22                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    23                           	psect	cstackBANK0h,global,class=BANK0,space=1,delta=1
    24                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    25                           	psect	text1,local,class=CODE,merge=1,delta=2
    26                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text3,local,class=CODE,merge=1,delta=2
    28                           	psect	text4,local,class=CODE,merge=1,delta=2
    29                           	psect	text5,local,class=CODE,merge=1,delta=2
    30                           	psect	text6,local,class=CODE,merge=1,delta=2
    31                           	psect	text7,local,class=CODE,merge=1,delta=2
    32                           	psect	text8,local,class=CODE,merge=1,delta=2
    33                           	psect	text9,local,class=CODE,merge=1,delta=2
    34                           	psect	text10,local,class=CODE,merge=1,delta=2
    35                           	psect	text11,local,class=CODE,merge=1,delta=2
    36                           	psect	text12,local,class=CODE,merge=1,delta=2
    37                           	psect	text13,local,class=CODE,merge=1,delta=2
    38                           	psect	text14,local,class=CODE,merge=1,delta=2
    39                           	psect	text15,local,class=CODE,merge=1,delta=2
    40                           	psect	swtext1,local,class=CONST,delta=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text18,local,class=CODE,merge=1,delta=2
    44                           	psect	text19,local,class=CODE,merge=1,delta=2
    45                           	psect	text20,local,class=CODE,merge=1,delta=2
    46                           	psect	text21,local,class=CODE,merge=1,delta=2
    47                           	psect	text22,local,class=CODE,merge=1,delta=2
    48                           	psect	text23,local,class=CODE,merge=1,delta=2
    49                           	psect	text24,local,class=CODE,merge=1,delta=2
    50                           	psect	text25,local,class=CODE,merge=1,delta=2
    51                           	psect	text26,local,class=CODE,merge=1,delta=2
    52                           	psect	text27,local,class=CODE,merge=1,delta=2
    53                           	psect	text28,local,class=CODE,merge=1,delta=2
    54                           	psect	text29,local,class=CODE,merge=1,delta=2
    55                           	psect	text30,local,class=CODE,merge=1,delta=2
    56                           	psect	text31,local,class=CODE,merge=1,delta=2
    57                           	psect	text32,local,class=CODE,merge=1,delta=2
    58                           	psect	text33,local,class=CODE,merge=1,delta=2
    59                           	psect	text34,local,class=CODE,merge=1,delta=2
    60                           	psect	text35,local,class=CODE,merge=1,delta=2
    61                           	psect	text36,local,class=CODE,merge=1,delta=2
    62                           	psect	text37,local,class=CODE,merge=1,delta=2
    63                           	psect	intentry,global,class=CODE,delta=2
    64                           	psect	text39,local,class=CODE,merge=1,delta=2
    65                           	psect	text40,local,class=CODE,merge=1,delta=2
    66                           	psect	text41,local,class=CODE,merge=1,delta=2
    67                           	psect	text42,local,class=CODE,merge=1,delta=2
    68                           	psect	text43,local,class=CODE,merge=1,delta=2
    69                           	psect	text44,local,class=CODE,merge=1,delta=2
    70                           	psect	text45,local,class=CODE,merge=1,delta=2
    71                           	psect	text46,local,class=CODE,merge=1,delta=2
    72                           	psect	text47,local,class=CODE,merge=1,delta=2
    73                           	psect	text48,local,class=CODE,merge=1,delta=2
    74                           	psect	text49,local,class=CODE,merge=1,delta=2
    75                           	psect	swtext2,local,class=CONST,delta=2
    76                           	psect	text50,local,class=CODE,merge=1,delta=2
    77                           	psect	text51,local,class=CODE,merge=1,delta=2
    78                           	psect	text52,local,class=CODE,merge=1,delta=2
    79                           	psect	text53,local,class=CODE,merge=1,delta=2
    80                           	psect	text54,local,class=CODE,merge=1,delta=2
    81                           	psect	text55,local,class=CODE,merge=1,delta=2
    82                           	psect	text56,local,class=CODE,merge=1,delta=2
    83                           	psect	text57,local,class=CODE,merge=1,delta=2
    84                           	psect	text58,local,class=CODE,merge=1,delta=2
    85                           	psect	text59,local,class=CODE,merge=1,delta=2
    86                           	psect	text60,local,class=CODE,merge=1,delta=2
    87                           	psect	text61,local,class=CODE,merge=1,delta=2
    88                           	psect	text62,local,class=CODE,merge=1,delta=2
    89                           	psect	text63,local,class=CODE,merge=1,delta=2
    90                           	psect	text64,local,class=CODE,merge=1,delta=2
    91                           	psect	text65,local,class=CODE,merge=1,delta=2
    92                           	dabs	1,0x120,32
    93                           	dabs	1,0xD0,32
    94                           	dabs	1,0x1A0,16
    95                           	dabs	1,0x140,48
    96                           	dabs	1,0x20,48,_BDT
    97                           	dabs	1,0x50,8,_SetupPkt
    98                           	dabs	1,0x58,8,_CtrlTrfData
    99                           	dabs	1,0x7E,2
   100  0000                     
   101                           ; Version 1.45
   102                           ; Generated 16/11/2017 GMT
   103                           ; 
   104                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   105                           ; All rights reserved.
   106                           ; 
   107                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   108                           ; 
   109                           ; Redistribution and use in source and binary forms, with or without modification, are
   110                           ; permitted provided that the following conditions are met:
   111                           ; 
   112                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   113                           ;        conditions and the following disclaimer.
   114                           ; 
   115                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   116                           ;        of conditions and the following disclaimer in the documentation and/or other
   117                           ;        materials provided with the distribution.
   118                           ; 
   119                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   120                           ;        software without specific prior written permission.
   121                           ; 
   122                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   123                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   124                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   125                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   126                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   127                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   128                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   129                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   130                           ; 
   131                           ; 
   132                           ; Code-generator required, PIC16F1454 Definitions
   133                           ; 
   134                           ; SFR Addresses
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000E                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  008C                     	;# 
   161  008E                     	;# 
   162  0091                     	;# 
   163  0092                     	;# 
   164  0095                     	;# 
   165  0096                     	;# 
   166  0097                     	;# 
   167  0098                     	;# 
   168  0099                     	;# 
   169  009A                     	;# 
   170  010C                     	;# 
   171  010E                     	;# 
   172  0116                     	;# 
   173  0117                     	;# 
   174  011D                     	;# 
   175  018C                     	;# 
   176  018E                     	;# 
   177  0191                     	;# 
   178  0191                     	;# 
   179  0192                     	;# 
   180  0193                     	;# 
   181  0193                     	;# 
   182  0194                     	;# 
   183  0195                     	;# 
   184  0196                     	;# 
   185  0197                     	;# 
   186  0199                     	;# 
   187  019A                     	;# 
   188  019B                     	;# 
   189  019B                     	;# 
   190  019C                     	;# 
   191  019D                     	;# 
   192  019E                     	;# 
   193  019F                     	;# 
   194  020C                     	;# 
   195  0211                     	;# 
   196  0211                     	;# 
   197  0212                     	;# 
   198  0212                     	;# 
   199  0213                     	;# 
   200  0213                     	;# 
   201  0214                     	;# 
   202  0214                     	;# 
   203  0215                     	;# 
   204  0215                     	;# 
   205  0215                     	;# 
   206  0216                     	;# 
   207  0216                     	;# 
   208  0217                     	;# 
   209  0217                     	;# 
   210  0391                     	;# 
   211  0392                     	;# 
   212  0393                     	;# 
   213  039A                     	;# 
   214  039B                     	;# 
   215  0611                     	;# 
   216  0612                     	;# 
   217  0613                     	;# 
   218  0613                     	;# 
   219  0614                     	;# 
   220  0615                     	;# 
   221  0616                     	;# 
   222  0616                     	;# 
   223  0E8E                     	;# 
   224  0E8F                     	;# 
   225  0E90                     	;# 
   226  0E91                     	;# 
   227  0E92                     	;# 
   228  0E93                     	;# 
   229  0E94                     	;# 
   230  0E94                     	;# 
   231  0E95                     	;# 
   232  0E96                     	;# 
   233  0E97                     	;# 
   234  0E98                     	;# 
   235  0E99                     	;# 
   236  0E9A                     	;# 
   237  0E9B                     	;# 
   238  0E9C                     	;# 
   239  0E9D                     	;# 
   240  0E9E                     	;# 
   241  0E9F                     	;# 
   242  0FE4                     	;# 
   243  0FE5                     	;# 
   244  0FE6                     	;# 
   245  0FE7                     	;# 
   246  0FE8                     	;# 
   247  0FE9                     	;# 
   248  0FEA                     	;# 
   249  0FEB                     	;# 
   250  0FED                     	;# 
   251  0FEE                     	;# 
   252  0FEF                     	;# 
   253  0000                     	;# 
   254  0001                     	;# 
   255  0002                     	;# 
   256  0003                     	;# 
   257  0004                     	;# 
   258  0005                     	;# 
   259  0006                     	;# 
   260  0007                     	;# 
   261  0008                     	;# 
   262  0009                     	;# 
   263  000A                     	;# 
   264  000B                     	;# 
   265  000C                     	;# 
   266  000E                     	;# 
   267  0011                     	;# 
   268  0012                     	;# 
   269  0015                     	;# 
   270  0016                     	;# 
   271  0016                     	;# 
   272  0017                     	;# 
   273  0018                     	;# 
   274  0019                     	;# 
   275  001A                     	;# 
   276  001B                     	;# 
   277  001C                     	;# 
   278  008C                     	;# 
   279  008E                     	;# 
   280  0091                     	;# 
   281  0092                     	;# 
   282  0095                     	;# 
   283  0096                     	;# 
   284  0097                     	;# 
   285  0098                     	;# 
   286  0099                     	;# 
   287  009A                     	;# 
   288  010C                     	;# 
   289  010E                     	;# 
   290  0116                     	;# 
   291  0117                     	;# 
   292  011D                     	;# 
   293  018C                     	;# 
   294  018E                     	;# 
   295  0191                     	;# 
   296  0191                     	;# 
   297  0192                     	;# 
   298  0193                     	;# 
   299  0193                     	;# 
   300  0194                     	;# 
   301  0195                     	;# 
   302  0196                     	;# 
   303  0197                     	;# 
   304  0199                     	;# 
   305  019A                     	;# 
   306  019B                     	;# 
   307  019B                     	;# 
   308  019C                     	;# 
   309  019D                     	;# 
   310  019E                     	;# 
   311  019F                     	;# 
   312  020C                     	;# 
   313  0211                     	;# 
   314  0211                     	;# 
   315  0212                     	;# 
   316  0212                     	;# 
   317  0213                     	;# 
   318  0213                     	;# 
   319  0214                     	;# 
   320  0214                     	;# 
   321  0215                     	;# 
   322  0215                     	;# 
   323  0215                     	;# 
   324  0216                     	;# 
   325  0216                     	;# 
   326  0217                     	;# 
   327  0217                     	;# 
   328  0391                     	;# 
   329  0392                     	;# 
   330  0393                     	;# 
   331  039A                     	;# 
   332  039B                     	;# 
   333  0611                     	;# 
   334  0612                     	;# 
   335  0613                     	;# 
   336  0613                     	;# 
   337  0614                     	;# 
   338  0615                     	;# 
   339  0616                     	;# 
   340  0616                     	;# 
   341  0E8E                     	;# 
   342  0E8F                     	;# 
   343  0E90                     	;# 
   344  0E91                     	;# 
   345  0E92                     	;# 
   346  0E93                     	;# 
   347  0E94                     	;# 
   348  0E94                     	;# 
   349  0E95                     	;# 
   350  0E96                     	;# 
   351  0E97                     	;# 
   352  0E98                     	;# 
   353  0E99                     	;# 
   354  0E9A                     	;# 
   355  0E9B                     	;# 
   356  0E9C                     	;# 
   357  0E9D                     	;# 
   358  0E9E                     	;# 
   359  0E9F                     	;# 
   360  0FE4                     	;# 
   361  0FE5                     	;# 
   362  0FE6                     	;# 
   363  0FE7                     	;# 
   364  0FE8                     	;# 
   365  0FE9                     	;# 
   366  0FEA                     	;# 
   367  0FEB                     	;# 
   368  0FED                     	;# 
   369  0FEE                     	;# 
   370  0FEF                     	;# 
   371  0000                     	;# 
   372  0001                     	;# 
   373  0002                     	;# 
   374  0003                     	;# 
   375  0004                     	;# 
   376  0005                     	;# 
   377  0006                     	;# 
   378  0007                     	;# 
   379  0008                     	;# 
   380  0009                     	;# 
   381  000A                     	;# 
   382  000B                     	;# 
   383  000C                     	;# 
   384  000E                     	;# 
   385  0011                     	;# 
   386  0012                     	;# 
   387  0015                     	;# 
   388  0016                     	;# 
   389  0016                     	;# 
   390  0017                     	;# 
   391  0018                     	;# 
   392  0019                     	;# 
   393  001A                     	;# 
   394  001B                     	;# 
   395  001C                     	;# 
   396  008C                     	;# 
   397  008E                     	;# 
   398  0091                     	;# 
   399  0092                     	;# 
   400  0095                     	;# 
   401  0096                     	;# 
   402  0097                     	;# 
   403  0098                     	;# 
   404  0099                     	;# 
   405  009A                     	;# 
   406  010C                     	;# 
   407  010E                     	;# 
   408  0116                     	;# 
   409  0117                     	;# 
   410  011D                     	;# 
   411  018C                     	;# 
   412  018E                     	;# 
   413  0191                     	;# 
   414  0191                     	;# 
   415  0192                     	;# 
   416  0193                     	;# 
   417  0193                     	;# 
   418  0194                     	;# 
   419  0195                     	;# 
   420  0196                     	;# 
   421  0197                     	;# 
   422  0199                     	;# 
   423  019A                     	;# 
   424  019B                     	;# 
   425  019B                     	;# 
   426  019C                     	;# 
   427  019D                     	;# 
   428  019E                     	;# 
   429  019F                     	;# 
   430  020C                     	;# 
   431  0211                     	;# 
   432  0211                     	;# 
   433  0212                     	;# 
   434  0212                     	;# 
   435  0213                     	;# 
   436  0213                     	;# 
   437  0214                     	;# 
   438  0214                     	;# 
   439  0215                     	;# 
   440  0215                     	;# 
   441  0215                     	;# 
   442  0216                     	;# 
   443  0216                     	;# 
   444  0217                     	;# 
   445  0217                     	;# 
   446  0391                     	;# 
   447  0392                     	;# 
   448  0393                     	;# 
   449  039A                     	;# 
   450  039B                     	;# 
   451  0611                     	;# 
   452  0612                     	;# 
   453  0613                     	;# 
   454  0613                     	;# 
   455  0614                     	;# 
   456  0615                     	;# 
   457  0616                     	;# 
   458  0616                     	;# 
   459  0E8E                     	;# 
   460  0E8F                     	;# 
   461  0E90                     	;# 
   462  0E91                     	;# 
   463  0E92                     	;# 
   464  0E93                     	;# 
   465  0E94                     	;# 
   466  0E94                     	;# 
   467  0E95                     	;# 
   468  0E96                     	;# 
   469  0E97                     	;# 
   470  0E98                     	;# 
   471  0E99                     	;# 
   472  0E9A                     	;# 
   473  0E9B                     	;# 
   474  0E9C                     	;# 
   475  0E9D                     	;# 
   476  0E9E                     	;# 
   477  0E9F                     	;# 
   478  0FE4                     	;# 
   479  0FE5                     	;# 
   480  0FE6                     	;# 
   481  0FE7                     	;# 
   482  0FE8                     	;# 
   483  0FE9                     	;# 
   484  0FEA                     	;# 
   485  0FEB                     	;# 
   486  0FED                     	;# 
   487  0FEE                     	;# 
   488  0FEF                     	;# 
   489  0000                     	;# 
   490  0001                     	;# 
   491  0002                     	;# 
   492  0003                     	;# 
   493  0004                     	;# 
   494  0005                     	;# 
   495  0006                     	;# 
   496  0007                     	;# 
   497  0008                     	;# 
   498  0009                     	;# 
   499  000A                     	;# 
   500  000B                     	;# 
   501  000C                     	;# 
   502  000E                     	;# 
   503  0011                     	;# 
   504  0012                     	;# 
   505  0015                     	;# 
   506  0016                     	;# 
   507  0016                     	;# 
   508  0017                     	;# 
   509  0018                     	;# 
   510  0019                     	;# 
   511  001A                     	;# 
   512  001B                     	;# 
   513  001C                     	;# 
   514  008C                     	;# 
   515  008E                     	;# 
   516  0091                     	;# 
   517  0092                     	;# 
   518  0095                     	;# 
   519  0096                     	;# 
   520  0097                     	;# 
   521  0098                     	;# 
   522  0099                     	;# 
   523  009A                     	;# 
   524  010C                     	;# 
   525  010E                     	;# 
   526  0116                     	;# 
   527  0117                     	;# 
   528  011D                     	;# 
   529  018C                     	;# 
   530  018E                     	;# 
   531  0191                     	;# 
   532  0191                     	;# 
   533  0192                     	;# 
   534  0193                     	;# 
   535  0193                     	;# 
   536  0194                     	;# 
   537  0195                     	;# 
   538  0196                     	;# 
   539  0197                     	;# 
   540  0199                     	;# 
   541  019A                     	;# 
   542  019B                     	;# 
   543  019B                     	;# 
   544  019C                     	;# 
   545  019D                     	;# 
   546  019E                     	;# 
   547  019F                     	;# 
   548  020C                     	;# 
   549  0211                     	;# 
   550  0211                     	;# 
   551  0212                     	;# 
   552  0212                     	;# 
   553  0213                     	;# 
   554  0213                     	;# 
   555  0214                     	;# 
   556  0214                     	;# 
   557  0215                     	;# 
   558  0215                     	;# 
   559  0215                     	;# 
   560  0216                     	;# 
   561  0216                     	;# 
   562  0217                     	;# 
   563  0217                     	;# 
   564  0391                     	;# 
   565  0392                     	;# 
   566  0393                     	;# 
   567  039A                     	;# 
   568  039B                     	;# 
   569  0611                     	;# 
   570  0612                     	;# 
   571  0613                     	;# 
   572  0613                     	;# 
   573  0614                     	;# 
   574  0615                     	;# 
   575  0616                     	;# 
   576  0616                     	;# 
   577  0E8E                     	;# 
   578  0E8F                     	;# 
   579  0E90                     	;# 
   580  0E91                     	;# 
   581  0E92                     	;# 
   582  0E93                     	;# 
   583  0E94                     	;# 
   584  0E94                     	;# 
   585  0E95                     	;# 
   586  0E96                     	;# 
   587  0E97                     	;# 
   588  0E98                     	;# 
   589  0E99                     	;# 
   590  0E9A                     	;# 
   591  0E9B                     	;# 
   592  0E9C                     	;# 
   593  0E9D                     	;# 
   594  0E9E                     	;# 
   595  0E9F                     	;# 
   596  0FE4                     	;# 
   597  0FE5                     	;# 
   598  0FE6                     	;# 
   599  0FE7                     	;# 
   600  0FE8                     	;# 
   601  0FE9                     	;# 
   602  0FEA                     	;# 
   603  0FEB                     	;# 
   604  0FED                     	;# 
   605  0FEE                     	;# 
   606  0FEF                     	;# 
   607  0000                     	;# 
   608  0001                     	;# 
   609  0002                     	;# 
   610  0003                     	;# 
   611  0004                     	;# 
   612  0005                     	;# 
   613  0006                     	;# 
   614  0007                     	;# 
   615  0008                     	;# 
   616  0009                     	;# 
   617  000A                     	;# 
   618  000B                     	;# 
   619  000C                     	;# 
   620  000E                     	;# 
   621  0011                     	;# 
   622  0012                     	;# 
   623  0015                     	;# 
   624  0016                     	;# 
   625  0016                     	;# 
   626  0017                     	;# 
   627  0018                     	;# 
   628  0019                     	;# 
   629  001A                     	;# 
   630  001B                     	;# 
   631  001C                     	;# 
   632  008C                     	;# 
   633  008E                     	;# 
   634  0091                     	;# 
   635  0092                     	;# 
   636  0095                     	;# 
   637  0096                     	;# 
   638  0097                     	;# 
   639  0098                     	;# 
   640  0099                     	;# 
   641  009A                     	;# 
   642  010C                     	;# 
   643  010E                     	;# 
   644  0116                     	;# 
   645  0117                     	;# 
   646  011D                     	;# 
   647  018C                     	;# 
   648  018E                     	;# 
   649  0191                     	;# 
   650  0191                     	;# 
   651  0192                     	;# 
   652  0193                     	;# 
   653  0193                     	;# 
   654  0194                     	;# 
   655  0195                     	;# 
   656  0196                     	;# 
   657  0197                     	;# 
   658  0199                     	;# 
   659  019A                     	;# 
   660  019B                     	;# 
   661  019B                     	;# 
   662  019C                     	;# 
   663  019D                     	;# 
   664  019E                     	;# 
   665  019F                     	;# 
   666  020C                     	;# 
   667  0211                     	;# 
   668  0211                     	;# 
   669  0212                     	;# 
   670  0212                     	;# 
   671  0213                     	;# 
   672  0213                     	;# 
   673  0214                     	;# 
   674  0214                     	;# 
   675  0215                     	;# 
   676  0215                     	;# 
   677  0215                     	;# 
   678  0216                     	;# 
   679  0216                     	;# 
   680  0217                     	;# 
   681  0217                     	;# 
   682  0391                     	;# 
   683  0392                     	;# 
   684  0393                     	;# 
   685  039A                     	;# 
   686  039B                     	;# 
   687  0611                     	;# 
   688  0612                     	;# 
   689  0613                     	;# 
   690  0613                     	;# 
   691  0614                     	;# 
   692  0615                     	;# 
   693  0616                     	;# 
   694  0616                     	;# 
   695  0E8E                     	;# 
   696  0E8F                     	;# 
   697  0E90                     	;# 
   698  0E91                     	;# 
   699  0E92                     	;# 
   700  0E93                     	;# 
   701  0E94                     	;# 
   702  0E94                     	;# 
   703  0E95                     	;# 
   704  0E96                     	;# 
   705  0E97                     	;# 
   706  0E98                     	;# 
   707  0E99                     	;# 
   708  0E9A                     	;# 
   709  0E9B                     	;# 
   710  0E9C                     	;# 
   711  0E9D                     	;# 
   712  0E9E                     	;# 
   713  0E9F                     	;# 
   714  0FE4                     	;# 
   715  0FE5                     	;# 
   716  0FE6                     	;# 
   717  0FE7                     	;# 
   718  0FE8                     	;# 
   719  0FE9                     	;# 
   720  0FEA                     	;# 
   721  0FEB                     	;# 
   722  0FED                     	;# 
   723  0FEE                     	;# 
   724  0FEF                     	;# 
   725  0000                     	;# 
   726  0001                     	;# 
   727  0002                     	;# 
   728  0003                     	;# 
   729  0004                     	;# 
   730  0005                     	;# 
   731  0006                     	;# 
   732  0007                     	;# 
   733  0008                     	;# 
   734  0009                     	;# 
   735  000A                     	;# 
   736  000B                     	;# 
   737  000C                     	;# 
   738  000E                     	;# 
   739  0011                     	;# 
   740  0012                     	;# 
   741  0015                     	;# 
   742  0016                     	;# 
   743  0016                     	;# 
   744  0017                     	;# 
   745  0018                     	;# 
   746  0019                     	;# 
   747  001A                     	;# 
   748  001B                     	;# 
   749  001C                     	;# 
   750  008C                     	;# 
   751  008E                     	;# 
   752  0091                     	;# 
   753  0092                     	;# 
   754  0095                     	;# 
   755  0096                     	;# 
   756  0097                     	;# 
   757  0098                     	;# 
   758  0099                     	;# 
   759  009A                     	;# 
   760  010C                     	;# 
   761  010E                     	;# 
   762  0116                     	;# 
   763  0117                     	;# 
   764  011D                     	;# 
   765  018C                     	;# 
   766  018E                     	;# 
   767  0191                     	;# 
   768  0191                     	;# 
   769  0192                     	;# 
   770  0193                     	;# 
   771  0193                     	;# 
   772  0194                     	;# 
   773  0195                     	;# 
   774  0196                     	;# 
   775  0197                     	;# 
   776  0199                     	;# 
   777  019A                     	;# 
   778  019B                     	;# 
   779  019B                     	;# 
   780  019C                     	;# 
   781  019D                     	;# 
   782  019E                     	;# 
   783  019F                     	;# 
   784  020C                     	;# 
   785  0211                     	;# 
   786  0211                     	;# 
   787  0212                     	;# 
   788  0212                     	;# 
   789  0213                     	;# 
   790  0213                     	;# 
   791  0214                     	;# 
   792  0214                     	;# 
   793  0215                     	;# 
   794  0215                     	;# 
   795  0215                     	;# 
   796  0216                     	;# 
   797  0216                     	;# 
   798  0217                     	;# 
   799  0217                     	;# 
   800  0391                     	;# 
   801  0392                     	;# 
   802  0393                     	;# 
   803  039A                     	;# 
   804  039B                     	;# 
   805  0611                     	;# 
   806  0612                     	;# 
   807  0613                     	;# 
   808  0613                     	;# 
   809  0614                     	;# 
   810  0615                     	;# 
   811  0616                     	;# 
   812  0616                     	;# 
   813  0E8E                     	;# 
   814  0E8F                     	;# 
   815  0E90                     	;# 
   816  0E91                     	;# 
   817  0E92                     	;# 
   818  0E93                     	;# 
   819  0E94                     	;# 
   820  0E94                     	;# 
   821  0E95                     	;# 
   822  0E96                     	;# 
   823  0E97                     	;# 
   824  0E98                     	;# 
   825  0E99                     	;# 
   826  0E9A                     	;# 
   827  0E9B                     	;# 
   828  0E9C                     	;# 
   829  0E9D                     	;# 
   830  0E9E                     	;# 
   831  0E9F                     	;# 
   832  0FE4                     	;# 
   833  0FE5                     	;# 
   834  0FE6                     	;# 
   835  0FE7                     	;# 
   836  0FE8                     	;# 
   837  0FE9                     	;# 
   838  0FEA                     	;# 
   839  0FEB                     	;# 
   840  0FED                     	;# 
   841  0FEE                     	;# 
   842  0FEF                     	;# 
   843  0000                     	;# 
   844  0001                     	;# 
   845  0002                     	;# 
   846  0003                     	;# 
   847  0004                     	;# 
   848  0005                     	;# 
   849  0006                     	;# 
   850  0007                     	;# 
   851  0008                     	;# 
   852  0009                     	;# 
   853  000A                     	;# 
   854  000B                     	;# 
   855  000C                     	;# 
   856  000E                     	;# 
   857  0011                     	;# 
   858  0012                     	;# 
   859  0015                     	;# 
   860  0016                     	;# 
   861  0016                     	;# 
   862  0017                     	;# 
   863  0018                     	;# 
   864  0019                     	;# 
   865  001A                     	;# 
   866  001B                     	;# 
   867  001C                     	;# 
   868  008C                     	;# 
   869  008E                     	;# 
   870  0091                     	;# 
   871  0092                     	;# 
   872  0095                     	;# 
   873  0096                     	;# 
   874  0097                     	;# 
   875  0098                     	;# 
   876  0099                     	;# 
   877  009A                     	;# 
   878  010C                     	;# 
   879  010E                     	;# 
   880  0116                     	;# 
   881  0117                     	;# 
   882  011D                     	;# 
   883  018C                     	;# 
   884  018E                     	;# 
   885  0191                     	;# 
   886  0191                     	;# 
   887  0192                     	;# 
   888  0193                     	;# 
   889  0193                     	;# 
   890  0194                     	;# 
   891  0195                     	;# 
   892  0196                     	;# 
   893  0197                     	;# 
   894  0199                     	;# 
   895  019A                     	;# 
   896  019B                     	;# 
   897  019B                     	;# 
   898  019C                     	;# 
   899  019D                     	;# 
   900  019E                     	;# 
   901  019F                     	;# 
   902  020C                     	;# 
   903  0211                     	;# 
   904  0211                     	;# 
   905  0212                     	;# 
   906  0212                     	;# 
   907  0213                     	;# 
   908  0213                     	;# 
   909  0214                     	;# 
   910  0214                     	;# 
   911  0215                     	;# 
   912  0215                     	;# 
   913  0215                     	;# 
   914  0216                     	;# 
   915  0216                     	;# 
   916  0217                     	;# 
   917  0217                     	;# 
   918  0391                     	;# 
   919  0392                     	;# 
   920  0393                     	;# 
   921  039A                     	;# 
   922  039B                     	;# 
   923  0611                     	;# 
   924  0612                     	;# 
   925  0613                     	;# 
   926  0613                     	;# 
   927  0614                     	;# 
   928  0615                     	;# 
   929  0616                     	;# 
   930  0616                     	;# 
   931  0E8E                     	;# 
   932  0E8F                     	;# 
   933  0E90                     	;# 
   934  0E91                     	;# 
   935  0E92                     	;# 
   936  0E93                     	;# 
   937  0E94                     	;# 
   938  0E94                     	;# 
   939  0E95                     	;# 
   940  0E96                     	;# 
   941  0E97                     	;# 
   942  0E98                     	;# 
   943  0E99                     	;# 
   944  0E9A                     	;# 
   945  0E9B                     	;# 
   946  0E9C                     	;# 
   947  0E9D                     	;# 
   948  0E9E                     	;# 
   949  0E9F                     	;# 
   950  0FE4                     	;# 
   951  0FE5                     	;# 
   952  0FE6                     	;# 
   953  0FE7                     	;# 
   954  0FE8                     	;# 
   955  0FE9                     	;# 
   956  0FEA                     	;# 
   957  0FEB                     	;# 
   958  0FED                     	;# 
   959  0FEE                     	;# 
   960  0FEF                     	;# 
   961  0000                     	;# 
   962  0001                     	;# 
   963  0002                     	;# 
   964  0003                     	;# 
   965  0004                     	;# 
   966  0005                     	;# 
   967  0006                     	;# 
   968  0007                     	;# 
   969  0008                     	;# 
   970  0009                     	;# 
   971  000A                     	;# 
   972  000B                     	;# 
   973  000C                     	;# 
   974  000E                     	;# 
   975  0011                     	;# 
   976  0012                     	;# 
   977  0015                     	;# 
   978  0016                     	;# 
   979  0016                     	;# 
   980  0017                     	;# 
   981  0018                     	;# 
   982  0019                     	;# 
   983  001A                     	;# 
   984  001B                     	;# 
   985  001C                     	;# 
   986  008C                     	;# 
   987  008E                     	;# 
   988  0091                     	;# 
   989  0092                     	;# 
   990  0095                     	;# 
   991  0096                     	;# 
   992  0097                     	;# 
   993  0098                     	;# 
   994  0099                     	;# 
   995  009A                     	;# 
   996  010C                     	;# 
   997  010E                     	;# 
   998  0116                     	;# 
   999  0117                     	;# 
  1000  011D                     	;# 
  1001  018C                     	;# 
  1002  018E                     	;# 
  1003  0191                     	;# 
  1004  0191                     	;# 
  1005  0192                     	;# 
  1006  0193                     	;# 
  1007  0193                     	;# 
  1008  0194                     	;# 
  1009  0195                     	;# 
  1010  0196                     	;# 
  1011  0197                     	;# 
  1012  0199                     	;# 
  1013  019A                     	;# 
  1014  019B                     	;# 
  1015  019B                     	;# 
  1016  019C                     	;# 
  1017  019D                     	;# 
  1018  019E                     	;# 
  1019  019F                     	;# 
  1020  020C                     	;# 
  1021  0211                     	;# 
  1022  0211                     	;# 
  1023  0212                     	;# 
  1024  0212                     	;# 
  1025  0213                     	;# 
  1026  0213                     	;# 
  1027  0214                     	;# 
  1028  0214                     	;# 
  1029  0215                     	;# 
  1030  0215                     	;# 
  1031  0215                     	;# 
  1032  0216                     	;# 
  1033  0216                     	;# 
  1034  0217                     	;# 
  1035  0217                     	;# 
  1036  0391                     	;# 
  1037  0392                     	;# 
  1038  0393                     	;# 
  1039  039A                     	;# 
  1040  039B                     	;# 
  1041  0611                     	;# 
  1042  0612                     	;# 
  1043  0613                     	;# 
  1044  0613                     	;# 
  1045  0614                     	;# 
  1046  0615                     	;# 
  1047  0616                     	;# 
  1048  0616                     	;# 
  1049  0E8E                     	;# 
  1050  0E8F                     	;# 
  1051  0E90                     	;# 
  1052  0E91                     	;# 
  1053  0E92                     	;# 
  1054  0E93                     	;# 
  1055  0E94                     	;# 
  1056  0E94                     	;# 
  1057  0E95                     	;# 
  1058  0E96                     	;# 
  1059  0E97                     	;# 
  1060  0E98                     	;# 
  1061  0E99                     	;# 
  1062  0E9A                     	;# 
  1063  0E9B                     	;# 
  1064  0E9C                     	;# 
  1065  0E9D                     	;# 
  1066  0E9E                     	;# 
  1067  0E9F                     	;# 
  1068  0FE4                     	;# 
  1069  0FE5                     	;# 
  1070  0FE6                     	;# 
  1071  0FE7                     	;# 
  1072  0FE8                     	;# 
  1073  0FE9                     	;# 
  1074  0FEA                     	;# 
  1075  0FEB                     	;# 
  1076  0FED                     	;# 
  1077  0FEE                     	;# 
  1078  0FEF                     	;_cdc_data_rx
  1079                           
  1080                           	psect	stringtext1
  1081  18AA                     __pstringtext1:	
  1082  18AA                     _USB_SD_Ptr:	
  1083  18AA  34A3               	retlw	low (_sd000| (0+32768))
  1084  18AB  3498               	retlw	high (_sd000| (0+32768))
  1085  18AC  3443               	retlw	low (_sd001| (0+32768))
  1086  18AD  3498               	retlw	high (_sd001| (0+32768))
  1087  18AE  3477               	retlw	low (_sd002| (0+32768))
  1088  18AF  3498               	retlw	high (_sd002| (0+32768))
  1089  18B0                     __end_of_USB_SD_Ptr:	
  1090                           
  1091                           	psect	stringtext2
  1092  18B0                     __pstringtext2:	
  1093  18B0                     _USB_CD_Ptr:	
  1094  18B0  3400               	retlw	low (_configDescriptor1| (0+32768))
  1095  18B1  3498               	retlw	high (_configDescriptor1| (0+32768))
  1096  18B2                     __end_of_USB_CD_Ptr:	
  1097                           
  1098                           	psect	stringtext3
  1099  1800                     __pstringtext3:	
  1100  1800                     _configDescriptor1:	
  1101  1800  3409               	retlw	9
  1102  1801  3402               	retlw	2
  1103  1802  3443               	retlw	67
  1104  1803  3400               	retlw	0
  1105  1804  3402               	retlw	2
  1106  1805  3401               	retlw	1
  1107  1806  3400               	retlw	0
  1108  1807  34C0               	retlw	192
  1109  1808  3432               	retlw	50
  1110  1809  3409               	retlw	9
  1111  180A  3404               	retlw	4
  1112  180B  3400               	retlw	0
  1113  180C  3400               	retlw	0
  1114  180D  3401               	retlw	1
  1115  180E  3402               	retlw	2
  1116  180F  3402               	retlw	2
  1117  1810  3401               	retlw	1
  1118  1811  3400               	retlw	0
  1119  1812  3405               	retlw	5
  1120  1813  3424               	retlw	36
  1121  1814  3400               	retlw	0
  1122  1815  3410               	retlw	16
  1123  1816  3401               	retlw	1
  1124  1817  3404               	retlw	4
  1125  1818  3424               	retlw	36
  1126  1819  3402               	retlw	2
  1127  181A  3402               	retlw	2
  1128  181B  3405               	retlw	5
  1129  181C  3424               	retlw	36
  1130  181D  3406               	retlw	6
  1131  181E  3400               	retlw	0
  1132  181F  3401               	retlw	1
  1133  1820  3405               	retlw	5
  1134  1821  3424               	retlw	36
  1135  1822  3401               	retlw	1
  1136  1823  3400               	retlw	0
  1137  1824  3401               	retlw	1
  1138  1825  3407               	retlw	7
  1139  1826  3405               	retlw	5
  1140  1827  3481               	retlw	129
  1141  1828  3403               	retlw	3
  1142  1829  340A               	retlw	10
  1143  182A  3400               	retlw	0
  1144  182B  3402               	retlw	2
  1145  182C  3409               	retlw	9
  1146  182D  3404               	retlw	4
  1147  182E  3401               	retlw	1
  1148  182F  3400               	retlw	0
  1149  1830  3402               	retlw	2
  1150  1831  340A               	retlw	10
  1151  1832  3400               	retlw	0
  1152  1833  3400               	retlw	0
  1153  1834  3400               	retlw	0
  1154  1835  3407               	retlw	7
  1155  1836  3405               	retlw	5
  1156  1837  3402               	retlw	2
  1157  1838  3402               	retlw	2
  1158  1839  3440               	retlw	64
  1159  183A  3400               	retlw	0
  1160  183B  3400               	retlw	0
  1161  183C  3407               	retlw	7
  1162  183D  3405               	retlw	5
  1163  183E  3482               	retlw	130
  1164  183F  3402               	retlw	2
  1165  1840  3440               	retlw	64
  1166  1841  3400               	retlw	0
  1167  1842  3400               	retlw	0
  1168  1843                     __end_of_configDescriptor1:	
  1169                           
  1170                           	psect	stringtext4
  1171  1843                     __pstringtext4:	
  1172  1843                     _sd001:	
  1173  1843  3434               	retlw	52
  1174  1844  3403               	retlw	3
  1175  1845  344D               	retlw	77
  1176  1846  3400               	retlw	0
  1177  1847  3469               	retlw	105
  1178  1848  3400               	retlw	0
  1179  1849  3463               	retlw	99
  1180  184A  3400               	retlw	0
  1181  184B  3472               	retlw	114
  1182  184C  3400               	retlw	0
  1183  184D  346F               	retlw	111
  1184  184E  3400               	retlw	0
  1185  184F  3463               	retlw	99
  1186  1850  3400               	retlw	0
  1187  1851  3468               	retlw	104
  1188  1852  3400               	retlw	0
  1189  1853  3469               	retlw	105
  1190  1854  3400               	retlw	0
  1191  1855  3470               	retlw	112
  1192  1856  3400               	retlw	0
  1193  1857  3420               	retlw	32
  1194  1858  3400               	retlw	0
  1195  1859  3454               	retlw	84
  1196  185A  3400               	retlw	0
  1197  185B  3465               	retlw	101
  1198  185C  3400               	retlw	0
  1199  185D  3463               	retlw	99
  1200  185E  3400               	retlw	0
  1201  185F  3468               	retlw	104
  1202  1860  3400               	retlw	0
  1203  1861  346E               	retlw	110
  1204  1862  3400               	retlw	0
  1205  1863  346F               	retlw	111
  1206  1864  3400               	retlw	0
  1207  1865  346C               	retlw	108
  1208  1866  3400               	retlw	0
  1209  1867  346F               	retlw	111
  1210  1868  3400               	retlw	0
  1211  1869  3467               	retlw	103
  1212  186A  3400               	retlw	0
  1213  186B  3479               	retlw	121
  1214  186C  3400               	retlw	0
  1215  186D  3420               	retlw	32
  1216  186E  3400               	retlw	0
  1217  186F  3449               	retlw	73
  1218  1870  3400               	retlw	0
  1219  1871  346E               	retlw	110
  1220  1872  3400               	retlw	0
  1221  1873  3463               	retlw	99
  1222  1874  3400               	retlw	0
  1223  1875  342E               	retlw	46
  1224  1876  3400               	retlw	0
  1225  1877                     __end_of_sd001:	
  1226                           
  1227                           	psect	stringtext5
  1228  1877                     __pstringtext5:	
  1229  1877                     _sd002:	
  1230  1877  341A               	retlw	26
  1231  1878  3403               	retlw	3
  1232  1879  3450               	retlw	80
  1233  187A  3400               	retlw	0
  1234  187B  3472               	retlw	114
  1235  187C  3400               	retlw	0
  1236  187D  346F               	retlw	111
  1237  187E  3400               	retlw	0
  1238  187F  3464               	retlw	100
  1239  1880  3400               	retlw	0
  1240  1881  3475               	retlw	117
  1241  1882  3400               	retlw	0
  1242  1883  3463               	retlw	99
  1243  1884  3400               	retlw	0
  1244  1885  3474               	retlw	116
  1245  1886  3400               	retlw	0
  1246  1887  3420               	retlw	32
  1247  1888  3400               	retlw	0
  1248  1889  344E               	retlw	78
  1249  188A  3400               	retlw	0
  1250  188B  3461               	retlw	97
  1251  188C  3400               	retlw	0
  1252  188D  346D               	retlw	109
  1253  188E  3400               	retlw	0
  1254  188F  3465               	retlw	101
  1255  1890  3400               	retlw	0
  1256  1891                     __end_of_sd002:	
  1257                           
  1258                           	psect	stringtext6
  1259  1891                     __pstringtext6:	
  1260  1891                     _device_dsc:	
  1261  1891  3412               	retlw	18
  1262  1892  3401               	retlw	1
  1263  1893  3400               	retlw	0
  1264  1894  3402               	retlw	2
  1265  1895  3402               	retlw	2
  1266  1896  3400               	retlw	0
  1267  1897  3400               	retlw	0
  1268  1898  3408               	retlw	8
  1269  1899  34D8               	retlw	216
  1270  189A  3404               	retlw	4
  1271  189B  340A               	retlw	10
  1272  189C  3400               	retlw	0
  1273  189D  3400               	retlw	0
  1274  189E  3401               	retlw	1
  1275  189F  3401               	retlw	1
  1276  18A0  3402               	retlw	2
  1277  18A1  3400               	retlw	0
  1278  18A2  3401               	retlw	1
  1279  18A3                     __end_of_device_dsc:	
  1280                           
  1281                           	psect	stringtext7
  1282  18A3                     __pstringtext7:	
  1283  18A3                     _sd000:	
  1284  18A3  3404               	retlw	4
  1285  18A4  3403               	retlw	3
  1286  18A5  3409               	retlw	9
  1287  18A6  3404               	retlw	4
  1288  18A7                     __end_of_sd000:	
  1289  20C0                     _cdc_data_rx	set	8384
  1290  2080                     _cdc_data_tx	set	8320
  1291  0012                     _PIR2bits	set	18
  1292  000B                     _INTCONbits	set	11
  1293  0073                     _RC3	set	115
  1294  0092                     _PIE2bits	set	146
  1295  0097                     _WDTCON	set	151
  1296  0098                     _OSCTUNE	set	152
  1297  0099                     _OSCCON	set	153
  1298  0095                     _OPTION_REGbits	set	149
  1299  008E                     _TRISC	set	142
  1300  008C                     _TRISA	set	140
  1301  04D6                     _PLLRDY	set	1238
  1302  0116                     _BORCON	set	278
  1303  011D                     _APFCON	set	285
  1304  010E                     _LATC	set	270
  1305  010C                     _LATA	set	268
  1306  018C                     _ANSELA	set	396
  1307  018E                     _ANSELC	set	398
  1308  020C                     _WPUA	set	524
  1309  039B                     _ACTCON	set	923
  1310  0E98                     _UEP0bits	set	3736
  1311  0E8E                     _UCON	set	3726
  1312  0E8F                     _USTAT	set	3727
  1313  0E92                     _UIEbits	set	3730
  1314  0E90                     _UIRbits	set	3728
  1315  0E96                     _UADDR	set	3734
  1316  0E8E                     _UCONbits	set	3726
  1317  0E92                     _UIE	set	3730
  1318  0E97                     _UEIE	set	3735
  1319  0E91                     _UCFG	set	3729
  1320  0E90                     _UIR	set	3728
  1321  0E93                     _UEIR	set	3731
  1322  0E99                     _UEP1	set	3737
  1323  0E98                     _UEP0	set	3736
  1324  18A7                     STR_1:	
  1325  18A7  344F               	retlw	79	;'O'
  1326  18A8  344E               	retlw	78	;'N'
  1327  18A9  3400               	retlw	0
  1328                           
  1329                           	psect	stringtext8
  1330  0000                     __pstringtext8:	
  1331                           
  1332                           ; #config settings
  1333  0000                     
  1334                           	psect	cinit
  1335  001A                     start_initialization:	
  1336  001A                     __initialization:	
  1337                           
  1338                           ; Clear objects allocated to BANK1
  1339  001A  0021               	movlb	1	; select bank1
  1340  001B  01C3               	clrf	__pbssBANK1& (0+127)
  1341  001C  01C4               	clrf	(__pbssBANK1+1)& (0+127)
  1342  001D  01C5               	clrf	(__pbssBANK1+2)& (0+127)
  1343  001E  01C6               	clrf	(__pbssBANK1+3)& (0+127)
  1344  001F  01C7               	clrf	(__pbssBANK1+4)& (0+127)
  1345  0020  01C8               	clrf	(__pbssBANK1+5)& (0+127)
  1346  0021  01C9               	clrf	(__pbssBANK1+6)& (0+127)
  1347                           
  1348                           ; Clear objects allocated to BANK3
  1349  0022  30B0               	movlw	low __pbssBANK3
  1350  0023  0084               	movwf	4
  1351  0024  3001               	movlw	high __pbssBANK3
  1352  0025  0085               	movwf	5
  1353  0026  303F               	movlw	63
  1354  0027  00FE               	movwf	btemp
  1355  0028  3000               	movlw	0
  1356  0029  00FF               	movwf	btemp+1
  1357  002A  319F  27E5  3180   	fcall	clear_ram0
  1358                           
  1359                           ; Clear objects allocated to BANK4
  1360  002D  3020               	movlw	low __pbssBANK4
  1361  002E  0084               	movwf	4
  1362  002F  3002               	movlw	high __pbssBANK4
  1363  0030  0085               	movwf	5
  1364  0031  301D               	movlw	29
  1365  0032  00FE               	movwf	btemp
  1366  0033  3000               	movlw	0
  1367  0034  00FF               	movwf	btemp+1
  1368  0035  319F  27E5  3180   	fcall	clear_ram0
  1369                           
  1370                           ; Clear objects allocated to BANK5
  1371  0038  30A0               	movlw	low __pbssBANK5
  1372  0039  0084               	movwf	4
  1373  003A  3002               	movlw	high __pbssBANK5
  1374  003B  0085               	movwf	5
  1375  003C  3040               	movlw	64
  1376  003D  00FE               	movwf	btemp
  1377  003E  3000               	movlw	0
  1378  003F  00FF               	movwf	btemp+1
  1379  0040  319F  27E5  3180   	fcall	clear_ram0
  1380                           
  1381                           ; Clear objects allocated to BANK6
  1382  0043  3020               	movlw	low __pbssBANK6
  1383  0044  0084               	movwf	4
  1384  0045  3003               	movlw	high __pbssBANK6
  1385  0046  0085               	movwf	5
  1386  0047  3040               	movlw	64
  1387  0048  00FE               	movwf	btemp
  1388  0049  3000               	movlw	0
  1389  004A  00FF               	movwf	btemp+1
  1390  004B  319F  27E5         	fcall	clear_ram0
  1391  004D                     end_of_initialization:	
  1392                           ;End of C runtime variable initialization code
  1393                           
  1394  004D                     __end_of__initialization:	
  1395  004D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1396  004E  0020               	movlb	0
  1397  004F  3190  283E         	ljmp	_main	;jump to C main() function
  1398                           
  1399                           	psect	bssBANK1
  1400  00C3                     __pbssBANK1:	
  1401  00C3                     _inPipes:	
  1402  00C3                     	ds	5
  1403  00C8                     _pBDTEntryEP0OutNext:	
  1404  00C8                     	ds	2
  1405                           
  1406                           	psect	bssBANK3
  1407  01B0                     __pbssBANK3:	
  1408  01B0                     _outPipes:	
  1409  01B0                     	ds	7
  1410  01B7                     _pBDTEntryIn:	
  1411  01B7                     	ds	6
  1412  01BD                     _pBDTEntryOut:	
  1413  01BD                     	ds	6
  1414  01C3                     _USB1msTickCount:	
  1415  01C3                     	ds	4
  1416  01C7                     _ep_data_out:	
  1417  01C7                     	ds	3
  1418  01CA                     _ep_data_in:	
  1419  01CA                     	ds	3
  1420  01CD                     _CDCDataInHandle:	
  1421  01CD                     	ds	2
  1422  01CF                     _CDCDataOutHandle:	
  1423  01CF                     	ds	2
  1424  01D1                     _pCDCDst:	
  1425  01D1                     	ds	2
  1426  01D3                     _pCDCSrc:	
  1427  01D3                     	ds	2
  1428  01D5                     _buttonPressed:	
  1429  01D5                     	ds	1
  1430  01D6                     _USBTicksSinceSuspendEnd:	
  1431  01D6                     	ds	1
  1432  01D7                     _USBDeferOUTDataStagePackets:	
  1433  01D7                     	ds	1
  1434  01D8                     _USBDeferINDataStagePackets:	
  1435  01D8                     	ds	1
  1436  01D9                     _USBStatusStageEnabledFlag2:	
  1437  01D9                     	ds	1
  1438  01DA                     _USBStatusStageEnabledFlag1:	
  1439  01DA                     	ds	1
  1440  01DB                     _USBDeferStatusStagePacket:	
  1441  01DB                     	ds	1
  1442  01DC                     _USBStatusStageTimeoutCounter:	
  1443  01DC                     	ds	1
  1444  01DD                     _BothEP0OutUOWNsSet:	
  1445  01DD                     	ds	1
  1446  01DE                     _endpoint_number:	
  1447  01DE                     	ds	1
  1448  01DF                     _USBBusIsSuspended:	
  1449  01DF                     	ds	1
  1450  01E0                     _RemoteWakeup:	
  1451  01E0                     	ds	1
  1452  01E1                     _pDst:	
  1453  01E1                     	ds	1
  1454  01E2                     _controlTransferState:	
  1455  01E2                     	ds	1
  1456  01E3                     _shortPacketStatus:	
  1457  01E3                     	ds	1
  1458  01E4                     _pBDTEntryEP0OutCurrent:	
  1459  01E4                     	ds	1
  1460  01E5                     _USBDeviceState:	
  1461  01E5                     	ds	1
  1462  01E6                     _control_signal_bitmap:	
  1463  01E6                     	ds	1
  1464  01E7                     _cdc_mem_type:	
  1465  01E7                     	ds	1
  1466  01E8                     _cdc_tx_len:	
  1467  01E8                     	ds	1
  1468  01E9                     _cdc_trf_state:	
  1469  01E9                     	ds	1
  1470  01EA                     _cdc_rx_len:	
  1471  01EA                     	ds	1
  1472  01EB                     _USBAlternateInterface:	
  1473  01EB                     	ds	2
  1474  01ED                     _USTATcopy:	
  1475  01ED                     	ds	1
  1476  01EE                     _USBActiveConfiguration:	
  1477  01EE                     	ds	1
  1478                           
  1479                           	psect	bssBANK4
  1480  0220                     __pbssBANK4:	
  1481  0220                     _cdc_notice:	
  1482  0220                     	ds	10
  1483  022A                     _BaudRateGen:	
  1484  022A                     	ds	4
  1485  022E                     _dummy_encapsulated_cmd_response:	
  1486  022E                     	ds	8
  1487  0236                     _line_coding:	
  1488  0236                     	ds	7
  1489                           
  1490                           	psect	bssBANK5
  1491  02A0                     __pbssBANK5:	
  1492  02A0                     _readBuffer:	
  1493  02A0                     	ds	64
  1494                           
  1495                           	psect	bssBANK6
  1496  0320                     __pbssBANK6:	
  1497  0320                     _writeBuffer:	
  1498  0320                     	ds	64
  1499                           
  1500                           	psect	clrtext
  1501  1FE5                     clear_ram0:	
  1502                           ;	Called with FSR0 containing the base address, and
  1503                           ;	btemp/btemp+1 has the size to clear
  1504                           
  1505  1FE5  0064               	clrwdt	;clear the watchdog before getting into this loop
  1506  1FE6                     clrloop0:	
  1507  1FE6  0180               	clrf	0	;clear RAM location pointed to by FSR
  1508  1FE7  3101               	addfsr 0,1
  1509  1FE8  3001               	movlw	1
  1510  1FE9  02FE               	subwf	126,f
  1511  1FEA  3000               	movlw	0
  1512  1FEB  3BFF               	subwfb	127,f
  1513  1FEC  087F               	movf	127,w
  1514  1FED  047E               	iorwf	126,w
  1515  1FEE  1903               	btfsc	3,2
  1516  1FEF  3400               	retlw	0	;all done for this memory range, return
  1517  1FF0  2FE6               	goto	clrloop0	;have we reached the end yet?
  1518                           
  1519                           	psect	cstackBANK4
  1520  023D                     __pcstackBANK4:	
  1521  023D                     ??_USBCtrlEPService:	
  1522                           
  1523                           ; 1 bytes @ 0x0
  1524  023D                     	ds	3
  1525  0240                     ??_USBDeviceTasks:	
  1526                           
  1527                           ; 1 bytes @ 0x3
  1528  0240                     	ds	2
  1529                           
  1530                           	psect	cstackBANK3
  1531  01EF                     __pcstackBANK3:	
  1532  01EF                     USBDeviceTasks@i:	
  1533                           
  1534                           ; 1 bytes @ 0x0
  1535  01EF                     	ds	1
  1536                           
  1537                           	psect	cstackBANK1
  1538  00A0                     __pcstackBANK1:	
  1539  00A0                     ??i1_USBCtrlEPService:	
  1540                           
  1541                           ; 1 bytes @ 0x0
  1542  00A0                     	ds	3
  1543  00A3                     ??i1_USBDeviceTasks:	
  1544                           
  1545                           ; 1 bytes @ 0x3
  1546  00A3                     	ds	2
  1547  00A5                     ??_INTERRUPT_InterruptManager:	
  1548                           
  1549                           ; 1 bytes @ 0x5
  1550  00A5                     	ds	1
  1551  00A6                     ??_OSCILLATOR_Initialize:	
  1552  00A6                     ??_WDT_Initialize:	
  1553                           ; 1 bytes @ 0x6
  1554                           
  1555  00A6                     ??_USBDeviceInit:	
  1556                           ; 1 bytes @ 0x6
  1557                           
  1558  00A6                     ??_USBDeviceAttach:	
  1559                           ; 1 bytes @ 0x6
  1560                           
  1561  00A6                     ??_USBIncrement1msInternalTimers:	
  1562                           ; 1 bytes @ 0x6
  1563                           
  1564  00A6                     ??_USBCtrlEPAllowStatusStage:	
  1565                           ; 1 bytes @ 0x6
  1566                           
  1567  00A6                     ??_USBStallHandler:	
  1568                           ; 1 bytes @ 0x6
  1569                           
  1570  00A6                     ?_USBConfigureEndpoint:	
  1571                           ; 1 bytes @ 0x6
  1572                           
  1573  00A6                     ??_USBCtrlTrfTxService:	
  1574                           ; 1 bytes @ 0x6
  1575                           
  1576  00A6                     ??_PIN_MANAGER_Initialize:	
  1577                           ; 1 bytes @ 0x6
  1578                           
  1579  00A6                     ??_USBCheckCDCRequest:	
  1580                           ; 1 bytes @ 0x6
  1581                           
  1582  00A6                     ?_putrsUSBUSART:	
  1583                           ; 1 bytes @ 0x6
  1584                           
  1585  00A6                     ??_USBStdGetDscHandler:	
  1586                           ; 1 bytes @ 0x6
  1587                           
  1588  00A6                     ??_USBStdGetStatusHandler:	
  1589                           ; 1 bytes @ 0x6
  1590                           
  1591  00A6                     ?_USBTransferOnePacket:	
  1592                           ; 1 bytes @ 0x6
  1593                           
  1594  00A6                     ?_memset:	
  1595                           ; 2 bytes @ 0x6
  1596                           
  1597  00A6                     ?_strcmp:	
  1598                           ; 2 bytes @ 0x6
  1599                           
  1600  00A6                     USBTransferOnePacket@dir:	
  1601                           ; 2 bytes @ 0x6
  1602                           
  1603  00A6                     USBConfigureEndpoint@direction:	
  1604                           ; 1 bytes @ 0x6
  1605                           
  1606  00A6                     putrsUSBUSART@data:	
  1607                           ; 1 bytes @ 0x6
  1608                           
  1609  00A6                     memset@p1:	
  1610                           ; 2 bytes @ 0x6
  1611                           
  1612  00A6                     strcmp@s2:	
  1613                           ; 2 bytes @ 0x6
  1614                           
  1615                           
  1616                           ; 2 bytes @ 0x6
  1617  00A6                     	ds	1
  1618  00A7                     ??_USBConfigureEndpoint:	
  1619  00A7                     USBDeviceInit@p:	
  1620                           ; 1 bytes @ 0x7
  1621                           
  1622  00A7                     USBTransferOnePacket@data:	
  1623                           ; 2 bytes @ 0x7
  1624                           
  1625  00A7                     USBStdGetStatusHandler@p:	
  1626                           ; 2 bytes @ 0x7
  1627                           
  1628                           
  1629                           ; 2 bytes @ 0x7
  1630  00A7                     	ds	1
  1631  00A8                     ??_strcmp:	
  1632  00A8                     ??_putrsUSBUSART:	
  1633                           ; 1 bytes @ 0x8
  1634                           
  1635  00A8                     ??_USBCtrlTrfRxService:	
  1636                           ; 1 bytes @ 0x8
  1637                           
  1638  00A8                     USBCtrlTrfTxService@byteToSend:	
  1639                           ; 1 bytes @ 0x8
  1640                           
  1641  00A8                     memset@c:	
  1642                           ; 1 bytes @ 0x8
  1643                           
  1644                           
  1645                           ; 2 bytes @ 0x8
  1646  00A8                     	ds	1
  1647  00A9                     ??_USBCtrlTrfInHandler:	
  1648  00A9                     ??_USBCtrlEPAllowDataStage:	
  1649                           ; 1 bytes @ 0x9
  1650                           
  1651  00A9                     USBDeviceInit@i_1423:	
  1652                           ; 1 bytes @ 0x9
  1653                           
  1654  00A9                     USBTransferOnePacket@len:	
  1655                           ; 1 bytes @ 0x9
  1656                           
  1657  00A9                     strcmp@r:	
  1658                           ; 1 bytes @ 0x9
  1659                           
  1660                           
  1661                           ; 1 bytes @ 0x9
  1662  00A9                     	ds	1
  1663  00AA                     ??_USBTransferOnePacket:	
  1664  00AA                     USBDeviceInit@i:	
  1665                           ; 1 bytes @ 0xA
  1666                           
  1667  00AA                     USBCtrlTrfRxService@i:	
  1668                           ; 1 bytes @ 0xA
  1669                           
  1670  00AA                     strcmp@s1:	
  1671                           ; 1 bytes @ 0xA
  1672                           
  1673  00AA                     memset@n:	
  1674                           ; 1 bytes @ 0xA
  1675                           
  1676                           
  1677                           ; 2 bytes @ 0xA
  1678  00AA                     	ds	1
  1679  00AB                     ??_SYSTEM_Initialize:	
  1680  00AB                     ??_USBCtrlEPServiceComplete:	
  1681                           ; 1 bytes @ 0xB
  1682                           
  1683  00AB                     USBConfigureEndpoint@EPNum:	
  1684                           ; 1 bytes @ 0xB
  1685                           
  1686  00AB                     USBCtrlTrfRxService@byteToRead:	
  1687                           ; 1 bytes @ 0xB
  1688                           
  1689  00AB                     USBCtrlTrfInHandler@lastDTS:	
  1690                           ; 1 bytes @ 0xB
  1691                           
  1692  00AB                     putrsUSBUSART@pData:	
  1693                           ; 1 bytes @ 0xB
  1694                           
  1695                           
  1696                           ; 2 bytes @ 0xB
  1697  00AB                     	ds	1
  1698  00AC                     ??_memset:	
  1699  00AC                     ??_USBCtrlTrfOutHandler:	
  1700                           ; 1 bytes @ 0xC
  1701                           
  1702  00AC                     USBConfigureEndpoint@handle:	
  1703                           ; 1 bytes @ 0xC
  1704                           
  1705  00AC                     memset@p:	
  1706                           ; 1 bytes @ 0xC
  1707                           
  1708                           
  1709                           ; 2 bytes @ 0xC
  1710  00AC                     	ds	1
  1711  00AD                     ?_USBEnableEndpoint:	
  1712  00AD                     putrsUSBUSART@len:	
  1713                           ; 1 bytes @ 0xD
  1714                           
  1715  00AD                     USBEnableEndpoint@options:	
  1716                           ; 1 bytes @ 0xD
  1717                           
  1718                           
  1719                           ; 1 bytes @ 0xD
  1720  00AD                     	ds	1
  1721  00AE                     ??_USBEnableEndpoint:	
  1722  00AE                     USBTransferOnePacket@ep:	
  1723                           ; 1 bytes @ 0xE
  1724                           
  1725                           
  1726                           ; 1 bytes @ 0xE
  1727  00AE                     	ds	1
  1728  00AF                     USBTransferOnePacket@handle:	
  1729                           
  1730                           ; 2 bytes @ 0xF
  1731  00AF                     	ds	1
  1732  00B0                     USBEnableEndpoint@p:	
  1733                           
  1734                           ; 2 bytes @ 0x10
  1735  00B0                     	ds	1
  1736  00B1                     ?_getsUSBUSART:	
  1737  00B1                     ??_CDCTxService:	
  1738                           ; 1 bytes @ 0x11
  1739                           
  1740  00B1                     getsUSBUSART@len:	
  1741                           ; 1 bytes @ 0x11
  1742                           
  1743                           
  1744                           ; 1 bytes @ 0x11
  1745  00B1                     	ds	1
  1746  00B2                     ??_getsUSBUSART:	
  1747  00B2                     CDCTxService@i:	
  1748                           ; 1 bytes @ 0x12
  1749                           
  1750  00B2                     USBEnableEndpoint@ep:	
  1751                           ; 1 bytes @ 0x12
  1752                           
  1753                           
  1754                           ; 1 bytes @ 0x12
  1755  00B2                     	ds	1
  1756  00B3                     ??_CDCInitEP:	
  1757  00B3                     CDCTxService@byte_to_send:	
  1758                           ; 1 bytes @ 0x13
  1759                           
  1760                           
  1761                           ; 1 bytes @ 0x13
  1762  00B3                     	ds	1
  1763  00B4                     ?_USER_USB_CALLBACK_EVENT_HANDLER:	
  1764  00B4                     getsUSBUSART@buffer:	
  1765                           ; 1 bytes @ 0x14
  1766                           
  1767  00B4                     USER_USB_CALLBACK_EVENT_HANDLER@event:	
  1768                           ; 1 bytes @ 0x14
  1769                           
  1770                           
  1771                           ; 2 bytes @ 0x14
  1772  00B4                     	ds	1
  1773  00B5                     ??_UserApplication:	
  1774                           
  1775                           ; 1 bytes @ 0x15
  1776  00B5                     	ds	1
  1777  00B6                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  1778                           
  1779                           ; 2 bytes @ 0x16
  1780  00B6                     	ds	1
  1781  00B7                     UserApplication@numBytesRead:	
  1782                           
  1783                           ; 1 bytes @ 0x17
  1784  00B7                     	ds	1
  1785  00B8                     USER_USB_CALLBACK_EVENT_HANDLER@size:	
  1786                           
  1787                           ; 2 bytes @ 0x18
  1788  00B8                     	ds	2
  1789  00BA                     ??_USBWakeFromSuspend:	
  1790  00BA                     ??_USBSuspend:	
  1791                           ; 1 bytes @ 0x1A
  1792                           
  1793  00BA                     ??_USBStdFeatureReqHandler:	
  1794                           ; 1 bytes @ 0x1A
  1795                           
  1796  00BA                     ??_USER_USB_CALLBACK_EVENT_HANDLER:	
  1797                           ; 1 bytes @ 0x1A
  1798                           
  1799  00BA                     ??_USBStdSetCfgHandler:	
  1800                           ; 1 bytes @ 0x1A
  1801                           
  1802                           
  1803                           ; 1 bytes @ 0x1A
  1804  00BA                     	ds	1
  1805  00BB                     USBStdSetCfgHandler@p:	
  1806                           
  1807                           ; 2 bytes @ 0x1B
  1808  00BB                     	ds	1
  1809  00BC                     USBStdFeatureReqHandler@pUEP:	
  1810                           
  1811                           ; 2 bytes @ 0x1C
  1812  00BC                     	ds	1
  1813  00BD                     USBStdSetCfgHandler@i_2095:	
  1814                           
  1815                           ; 1 bytes @ 0x1D
  1816  00BD                     	ds	1
  1817  00BE                     USBStdSetCfgHandler@i:	
  1818  00BE                     USBStdFeatureReqHandler@current_ep_data:	
  1819                           ; 1 bytes @ 0x1E
  1820                           
  1821                           
  1822                           ; 1 bytes @ 0x1E
  1823  00BE                     	ds	1
  1824  00BF                     USBStdFeatureReqHandler@p:	
  1825                           
  1826                           ; 2 bytes @ 0x1F
  1827  00BF                     	ds	2
  1828  00C1                     ??_USBCheckStdRequest:	
  1829                           
  1830                           ; 1 bytes @ 0x21
  1831  00C1                     	ds	1
  1832  00C2                     ??_USBCtrlTrfSetupHandler:	
  1833                           
  1834                           ; 1 bytes @ 0x22
  1835  00C2                     	ds	1
  1836  00C3                     ??_main:	
  1837                           
  1838                           	psect	cstackCOMMON
  1839  0070                     __pcstackCOMMON:	
  1840                           ; 1 bytes @ 0x23
  1841                           
  1842  0070                     ?_OSCILLATOR_Initialize:	
  1843  0070                     ?_WDT_Initialize:	
  1844                           ; 1 bytes @ 0x0
  1845                           
  1846  0070                     ?_USBDeviceInit:	
  1847                           ; 1 bytes @ 0x0
  1848                           
  1849  0070                     ?_USBDeviceAttach:	
  1850                           ; 1 bytes @ 0x0
  1851                           
  1852  0070                     ?_USBDeviceTasks:	
  1853                           ; 1 bytes @ 0x0
  1854                           
  1855  0070                     ?_USBWakeFromSuspend:	
  1856                           ; 1 bytes @ 0x0
  1857                           
  1858  0070                     ?_USBSuspend:	
  1859                           ; 1 bytes @ 0x0
  1860                           
  1861  0070                     ?_USBIncrement1msInternalTimers:	
  1862                           ; 1 bytes @ 0x0
  1863                           
  1864  0070                     ?_USBCtrlEPAllowStatusStage:	
  1865                           ; 1 bytes @ 0x0
  1866                           
  1867  0070                     ?_USBStallHandler:	
  1868                           ; 1 bytes @ 0x0
  1869                           
  1870  0070                     ?_USBCtrlEPService:	
  1871                           ; 1 bytes @ 0x0
  1872                           
  1873  0070                     ?_USBCtrlTrfTxService:	
  1874                           ; 1 bytes @ 0x0
  1875                           
  1876  0070                     ?_USBCtrlTrfSetupHandler:	
  1877                           ; 1 bytes @ 0x0
  1878                           
  1879  0070                     ?_USBCtrlTrfOutHandler:	
  1880                           ; 1 bytes @ 0x0
  1881                           
  1882  0070                     ?_USBCtrlTrfInHandler:	
  1883                           ; 1 bytes @ 0x0
  1884                           
  1885  0070                     ?_USBCheckStdRequest:	
  1886                           ; 1 bytes @ 0x0
  1887                           
  1888  0070                     ?_USBStdFeatureReqHandler:	
  1889                           ; 1 bytes @ 0x0
  1890                           
  1891  0070                     ?_UserApplication:	
  1892                           ; 1 bytes @ 0x0
  1893                           
  1894  0070                     ?_PIN_MANAGER_Initialize:	
  1895                           ; 1 bytes @ 0x0
  1896                           
  1897  0070                     ?_SYSTEM_Initialize:	
  1898                           ; 1 bytes @ 0x0
  1899                           
  1900  0070                     ?_INTERRUPT_InterruptManager:	
  1901                           ; 1 bytes @ 0x0
  1902                           
  1903  0070                     ?_USBCheckCDCRequest:	
  1904                           ; 1 bytes @ 0x0
  1905                           
  1906  0070                     ?_CDCInitEP:	
  1907                           ; 1 bytes @ 0x0
  1908                           
  1909  0070                     ?_CDCTxService:	
  1910                           ; 1 bytes @ 0x0
  1911                           
  1912  0070                     ?_USBCtrlEPAllowDataStage:	
  1913                           ; 1 bytes @ 0x0
  1914                           
  1915  0070                     ?_USBCtrlEPServiceComplete:	
  1916                           ; 1 bytes @ 0x0
  1917                           
  1918  0070                     ?_USBCtrlTrfRxService:	
  1919                           ; 1 bytes @ 0x0
  1920                           
  1921  0070                     ?_USBStdSetCfgHandler:	
  1922                           ; 1 bytes @ 0x0
  1923                           
  1924  0070                     ?_USBStdGetDscHandler:	
  1925                           ; 1 bytes @ 0x0
  1926                           
  1927  0070                     ?_USBStdGetStatusHandler:	
  1928                           ; 1 bytes @ 0x0
  1929                           
  1930  0070                     ?_main:	
  1931                           ; 1 bytes @ 0x0
  1932                           
  1933  0070                     ?i1_USBCheckCDCRequest:	
  1934                           ; 1 bytes @ 0x0
  1935                           
  1936  0070                     ??i1_USBCheckCDCRequest:	
  1937                           ; 1 bytes @ 0x0
  1938                           
  1939  0070                     ?i1_CDCInitEP:	
  1940                           ; 1 bytes @ 0x0
  1941                           
  1942  0070                     ?i1_USBDeviceInit:	
  1943                           ; 1 bytes @ 0x0
  1944                           
  1945  0070                     ??i1_USBDeviceInit:	
  1946                           ; 1 bytes @ 0x0
  1947                           
  1948  0070                     ?i1_USBDeviceTasks:	
  1949                           ; 1 bytes @ 0x0
  1950                           
  1951  0070                     ?i1_USBCtrlEPAllowStatusStage:	
  1952                           ; 1 bytes @ 0x0
  1953                           
  1954  0070                     ??i1_USBCtrlEPAllowStatusStage:	
  1955                           ; 1 bytes @ 0x0
  1956                           
  1957  0070                     ?i1_USBCtrlEPAllowDataStage:	
  1958                           ; 1 bytes @ 0x0
  1959                           
  1960  0070                     ?i1_USBConfigureEndpoint:	
  1961                           ; 1 bytes @ 0x0
  1962                           
  1963  0070                     ?i1_USBCtrlEPServiceComplete:	
  1964                           ; 1 bytes @ 0x0
  1965                           
  1966  0070                     ?i1_USBCtrlTrfTxService:	
  1967                           ; 1 bytes @ 0x0
  1968                           
  1969  0070                     ??i1_USBCtrlTrfTxService:	
  1970                           ; 1 bytes @ 0x0
  1971                           
  1972  0070                     ?i1_USBCtrlTrfRxService:	
  1973                           ; 1 bytes @ 0x0
  1974                           
  1975  0070                     ?i1_USBStdSetCfgHandler:	
  1976                           ; 1 bytes @ 0x0
  1977                           
  1978  0070                     ?i1_USBStdGetDscHandler:	
  1979                           ; 1 bytes @ 0x0
  1980                           
  1981  0070                     ??i1_USBStdGetDscHandler:	
  1982                           ; 1 bytes @ 0x0
  1983                           
  1984  0070                     ?i1_USBStdGetStatusHandler:	
  1985                           ; 1 bytes @ 0x0
  1986                           
  1987  0070                     ??i1_USBStdGetStatusHandler:	
  1988                           ; 1 bytes @ 0x0
  1989                           
  1990  0070                     ?i1_USBStallHandler:	
  1991                           ; 1 bytes @ 0x0
  1992                           
  1993  0070                     ??i1_USBStallHandler:	
  1994                           ; 1 bytes @ 0x0
  1995                           
  1996  0070                     ?i1_USBSuspend:	
  1997                           ; 1 bytes @ 0x0
  1998                           
  1999  0070                     ?i1_USBWakeFromSuspend:	
  2000                           ; 1 bytes @ 0x0
  2001                           
  2002  0070                     ?i1_USBCtrlEPService:	
  2003                           ; 1 bytes @ 0x0
  2004                           
  2005  0070                     ?i1_USBCtrlTrfSetupHandler:	
  2006                           ; 1 bytes @ 0x0
  2007                           
  2008  0070                     ?i1_USBCtrlTrfOutHandler:	
  2009                           ; 1 bytes @ 0x0
  2010                           
  2011  0070                     ?i1_USBCtrlTrfInHandler:	
  2012                           ; 1 bytes @ 0x0
  2013                           
  2014  0070                     ?i1_USBCheckStdRequest:	
  2015                           ; 1 bytes @ 0x0
  2016                           
  2017  0070                     ?i1_USBStdFeatureReqHandler:	
  2018                           ; 1 bytes @ 0x0
  2019                           
  2020  0070                     ?i1_USBIncrement1msInternalTimers:	
  2021                           ; 1 bytes @ 0x0
  2022                           
  2023  0070                     ??i1_USBIncrement1msInternalTimers:	
  2024                           ; 1 bytes @ 0x0
  2025                           
  2026  0070                     ?i1_memset:	
  2027                           ; 1 bytes @ 0x0
  2028                           
  2029  0070                     ?i1_USBTransferOnePacket:	
  2030                           ; 1 bytes @ 0x0
  2031                           
  2032  0070                     i1USBTransferOnePacket@dir:	
  2033                           ; 2 bytes @ 0x0
  2034                           
  2035  0070                     i1USBConfigureEndpoint@direction:	
  2036                           ; 1 bytes @ 0x0
  2037                           
  2038  0070                     i1memset@p1:	
  2039                           ; 1 bytes @ 0x0
  2040                           
  2041                           
  2042                           ; 2 bytes @ 0x0
  2043  0070                     	ds	1
  2044  0071                     ??i1_USBConfigureEndpoint:	
  2045  0071                     i1USBDeviceInit@p:	
  2046                           ; 1 bytes @ 0x1
  2047                           
  2048  0071                     i1USBTransferOnePacket@data:	
  2049                           ; 2 bytes @ 0x1
  2050                           
  2051  0071                     i1USBStdGetStatusHandler@p:	
  2052                           ; 2 bytes @ 0x1
  2053                           
  2054                           
  2055                           ; 2 bytes @ 0x1
  2056  0071                     	ds	1
  2057  0072                     ??i1_USBCtrlTrfRxService:	
  2058  0072                     i1USBCtrlTrfTxService@byteToSend:	
  2059                           ; 1 bytes @ 0x2
  2060                           
  2061  0072                     i1memset@c:	
  2062                           ; 1 bytes @ 0x2
  2063                           
  2064                           
  2065                           ; 2 bytes @ 0x2
  2066  0072                     	ds	1
  2067  0073                     ??i1_USBCtrlEPAllowDataStage:	
  2068  0073                     ??i1_USBCtrlTrfInHandler:	
  2069                           ; 1 bytes @ 0x3
  2070                           
  2071  0073                     i1USBDeviceInit@i_1423:	
  2072                           ; 1 bytes @ 0x3
  2073                           
  2074  0073                     i1USBTransferOnePacket@len:	
  2075                           ; 1 bytes @ 0x3
  2076                           
  2077                           
  2078                           ; 1 bytes @ 0x3
  2079  0073                     	ds	1
  2080  0074                     ??i1_USBTransferOnePacket:	
  2081  0074                     i1USBDeviceInit@i:	
  2082                           ; 1 bytes @ 0x4
  2083                           
  2084  0074                     i1USBCtrlTrfRxService@i:	
  2085                           ; 1 bytes @ 0x4
  2086                           
  2087  0074                     i1memset@n:	
  2088                           ; 1 bytes @ 0x4
  2089                           
  2090                           
  2091                           ; 2 bytes @ 0x4
  2092  0074                     	ds	1
  2093  0075                     ??i1_USBCtrlEPServiceComplete:	
  2094  0075                     i1USBConfigureEndpoint@EPNum:	
  2095                           ; 1 bytes @ 0x5
  2096                           
  2097  0075                     i1USBCtrlTrfRxService@byteToRead:	
  2098                           ; 1 bytes @ 0x5
  2099                           
  2100  0075                     i1USBCtrlTrfInHandler@lastDTS:	
  2101                           ; 1 bytes @ 0x5
  2102                           
  2103                           
  2104                           ; 1 bytes @ 0x5
  2105  0075                     	ds	1
  2106  0076                     ??i1_USBCtrlTrfOutHandler:	
  2107  0076                     ??i1_memset:	
  2108                           ; 1 bytes @ 0x6
  2109                           
  2110  0076                     i1USBConfigureEndpoint@handle:	
  2111                           ; 1 bytes @ 0x6
  2112                           
  2113  0076                     i1memset@p:	
  2114                           ; 1 bytes @ 0x6
  2115                           
  2116                           
  2117                           ; 2 bytes @ 0x6
  2118  0076                     	ds	1
  2119  0077                     ?i1_USBEnableEndpoint:	
  2120  0077                     i1USBEnableEndpoint@options:	
  2121                           ; 1 bytes @ 0x7
  2122                           
  2123                           
  2124                           ; 1 bytes @ 0x7
  2125  0077                     	ds	1
  2126  0078                     ??i1_USBEnableEndpoint:	
  2127  0078                     i1USBTransferOnePacket@ep:	
  2128                           ; 1 bytes @ 0x8
  2129                           
  2130                           
  2131                           ; 1 bytes @ 0x8
  2132  0078                     	ds	1
  2133  0079                     i1USBTransferOnePacket@handle:	
  2134                           
  2135                           ; 2 bytes @ 0x9
  2136  0079                     	ds	1
  2137  007A                     i1USBEnableEndpoint@p:	
  2138                           
  2139                           ; 2 bytes @ 0xA
  2140  007A                     	ds	2
  2141  007C                     i1USBEnableEndpoint@ep:	
  2142                           
  2143                           ; 1 bytes @ 0xC
  2144  007C                     	ds	1
  2145  007D                     ??i1_CDCInitEP:	
  2146                           
  2147                           ; 1 bytes @ 0xD
  2148  007D                     	ds	1
  2149  007E                     ??i1_USER_USB_CALLBACK_EVENT_HANDLER:	
  2150                           
  2151                           	psect	cstackBANK0h
  2152  0060                     __pcstackBANK0h:	
  2153                           ; 1 bytes @ 0xE
  2154                           
  2155  0060                     ?i1_USER_USB_CALLBACK_EVENT_HANDLER:	
  2156  0060                     i1USER_USB_CALLBACK_EVENT_HANDLER@event:	
  2157                           ; 1 bytes @ 0x0
  2158                           
  2159                           
  2160                           ; 2 bytes @ 0x0
  2161  0060                     	ds	2
  2162  0062                     i1USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  2163                           
  2164                           ; 2 bytes @ 0x2
  2165  0062                     	ds	2
  2166  0064                     i1USER_USB_CALLBACK_EVENT_HANDLER@size:	
  2167                           
  2168                           ; 2 bytes @ 0x4
  2169  0064                     	ds	2
  2170  0066                     ??i1_USBStdSetCfgHandler:	
  2171  0066                     ??i1_USBSuspend:	
  2172                           ; 1 bytes @ 0x6
  2173                           
  2174  0066                     ??i1_USBWakeFromSuspend:	
  2175                           ; 1 bytes @ 0x6
  2176                           
  2177  0066                     ??i1_USBStdFeatureReqHandler:	
  2178                           ; 1 bytes @ 0x6
  2179                           
  2180                           
  2181                           ; 1 bytes @ 0x6
  2182  0066                     	ds	1
  2183  0067                     i1USBStdSetCfgHandler@p:	
  2184                           
  2185                           ; 2 bytes @ 0x7
  2186  0067                     	ds	1
  2187  0068                     i1USBStdFeatureReqHandler@pUEP:	
  2188                           
  2189                           ; 2 bytes @ 0x8
  2190  0068                     	ds	1
  2191  0069                     i1USBStdSetCfgHandler@i_2095:	
  2192                           
  2193                           ; 1 bytes @ 0x9
  2194  0069                     	ds	1
  2195  006A                     i1USBStdSetCfgHandler@i:	
  2196  006A                     i1USBStdFeatureReqHandler@current_ep_data:	
  2197                           ; 1 bytes @ 0xA
  2198                           
  2199                           
  2200                           ; 1 bytes @ 0xA
  2201  006A                     	ds	1
  2202  006B                     i1USBStdFeatureReqHandler@p:	
  2203                           
  2204                           ; 2 bytes @ 0xB
  2205  006B                     	ds	2
  2206  006D                     ??i1_USBCheckStdRequest:	
  2207                           
  2208                           ; 1 bytes @ 0xD
  2209  006D                     	ds	1
  2210  006E                     ??i1_USBCtrlTrfSetupHandler:	
  2211                           
  2212                           ; 1 bytes @ 0xE
  2213  006E                     	ds	1
  2214  006F                     i1USBDeviceTasks@i:	
  2215                           
  2216                           ; 1 bytes @ 0xF
  2217  006F                     	ds	1
  2218                           
  2219                           	psect	maintext
  2220  103E                     __pmaintext:	
  2221 ;;
  2222 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2223 ;;
  2224 ;; *************** function _main *****************
  2225 ;; Defined at:
  2226 ;;		line 57 in file "main.c"
  2227 ;; Parameters:    Size  Location     Type
  2228 ;;		None
  2229 ;; Auto vars:     Size  Location     Type
  2230 ;;		None
  2231 ;; Return value:  Size  Location     Type
  2232 ;;                  1    wreg      void 
  2233 ;; Registers used:
  2234 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2235 ;; Tracked objects:
  2236 ;;		On entry : B1F/0
  2237 ;;		On exit  : 0/0
  2238 ;;		Unchanged: 0/0
  2239 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2244 ;;Total ram usage:        0 bytes
  2245 ;; Hardware stack levels required when called:   19
  2246 ;; This function calls:
  2247 ;;		_CDCInitEP
  2248 ;;		_SYSTEM_Initialize
  2249 ;;		_USBDeviceTasks
  2250 ;;		_UserApplication
  2251 ;; This function is called by:
  2252 ;;		Startup code after reset
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256                           
  2257                           ;psect for function _main
  2258  103E                     _main:	
  2259                           
  2260                           ;main.c: 61: SYSTEM_Initialize();
  2261                           
  2262                           ;incstack = 0
  2263 ;; hardware stack exceeded
  2264                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2265  103E  319F  27F1  3190   	fcall	_SYSTEM_Initialize
  2266                           
  2267                           ;main.c: 62: CDCInitEP();
  2268  1041  3193  235C  3190   	fcall	_CDCInitEP
  2269                           
  2270                           ;main.c: 63: RC3 = 0;
  2271  1044  0020               	movlb	0	; select bank0
  2272  1045  118E               	bcf	14,3	;volatile
  2273  1046                     l6610:	
  2274                           ;main.c: 80: while(1)
  2275                           
  2276                           
  2277                           ;main.c: 81: {
  2278                           ;main.c: 82: USBDeviceTasks();
  2279  1046  3182  22B7  3190   	fcall	_USBDeviceTasks
  2280                           
  2281                           ;main.c: 88: UserApplication();
  2282  1049  3193  2320  3190   	fcall	_UserApplication
  2283  104C  2846               	goto	l6610
  2284  104D                     __end_of_main:	
  2285                           
  2286                           	psect	text1
  2287  1320                     __ptext1:	
  2288 ;; *************** function _UserApplication *****************
  2289 ;; Defined at:
  2290 ;;		line 94 in file "main.c"
  2291 ;; Parameters:    Size  Location     Type
  2292 ;;		None
  2293 ;; Auto vars:     Size  Location     Type
  2294 ;;  numBytesRead    1   23[BANK1 ] unsigned char 
  2295 ;;  i               1    0        unsigned char 
  2296 ;; Return value:  Size  Location     Type
  2297 ;;                  1    wreg      void 
  2298 ;; Registers used:
  2299 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2300 ;; Tracked objects:
  2301 ;;		On entry : 0/0
  2302 ;;		On exit  : 0/0
  2303 ;;		Unchanged: 0/0
  2304 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2306 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2307 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2308 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2309 ;;Total ram usage:        3 bytes
  2310 ;; Hardware stack levels used:    1
  2311 ;; Hardware stack levels required when called:   12
  2312 ;; This function calls:
  2313 ;;		_CDCTxService
  2314 ;;		_getsUSBUSART
  2315 ;;		_putrsUSBUSART
  2316 ;;		_strcmp
  2317 ;; This function is called by:
  2318 ;;		_main
  2319 ;; This function uses a non-reentrant model
  2320 ;;
  2321                           
  2322                           
  2323                           ;psect for function _UserApplication
  2324  1320                     _UserApplication:	
  2325                           
  2326                           ;main.c: 103: if( USBDeviceState < CONFIGURED_STATE || UCONbits.SUSPND== 1 )
  2327                           
  2328                           ;incstack = 0
  2329                           ; Regs used in _UserApplication: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2330  1320  3020               	movlw	32
  2331  1321  0023               	movlb	3	; select bank3
  2332  1322  0265               	subwf	_USBDeviceState^(0+384),w	;volatile
  2333  1323  1C03               	skipc
  2334  1324  0008               	return
  2335  1325  003D               	movlb	29	; select bank29
  2336  1326  188E               	btfsc	14,1	;volatile
  2337  1327  0008               	return
  2338                           
  2339                           ;main.c: 106: }
  2340                           ;main.c: 108: if( (cdc_trf_state == 0) == 1)
  2341                           
  2342                           ;main.c: 104: {
  2343                           ;main.c: 105: return;
  2344  1328  0023               	movlb	3	; select bank3
  2345  1329  0869               	movf	_cdc_trf_state^(0+384),w
  2346  132A  1D03               	btfss	3,2
  2347  132B  2B59               	goto	l6586
  2348                           
  2349                           ;main.c: 109: {
  2350                           ;main.c: 110: uint8_t i;
  2351                           ;main.c: 111: uint8_t numBytesRead;
  2352                           ;main.c: 113: numBytesRead = getsUSBUSART(readBuffer, sizeof(readBuffer));
  2353  132C  3040               	movlw	64
  2354  132D  0021               	movlb	1	; select bank1
  2355  132E  00B5               	movwf	??_UserApplication^(0+128)
  2356  132F  0835               	movf	??_UserApplication^(0+128),w
  2357  1330  00B1               	movwf	getsUSBUSART@len^(0+128)
  2358  1331  30A0               	movlw	(low (_readBuffer| (0+512)))& (0+255)
  2359  1332  3196  2684  3193   	fcall	_getsUSBUSART
  2360  1335  0021               	movlb	1	; select bank1
  2361  1336  00B6               	movwf	(??_UserApplication+1)^(0+128)
  2362  1337  0836               	movf	(??_UserApplication+1)^(0+128),w
  2363  1338  00B7               	movwf	UserApplication@numBytesRead^(0+128)
  2364                           
  2365                           ;main.c: 114: if(numBytesRead > 0) {
  2366  1339  0837               	movf	UserApplication@numBytesRead^(0+128),w
  2367  133A  1903               	btfsc	3,2
  2368  133B  2B59               	goto	l6586
  2369                           
  2370                           ;main.c: 115: if(!strcmp(readBuffer, "ON")) RC3 = 1;
  2371  133C  30A7               	movlw	low (STR_1| (0+32768))
  2372  133D  00A6               	movwf	strcmp@s2^(0+128)
  2373  133E  3098               	movlw	high (STR_1| (0+32768))
  2374  133F  00A7               	movwf	(strcmp@s2^(0+128)+1)
  2375  1340  30A0               	movlw	(low (_readBuffer| (0+512)))& (0+255)
  2376  1341  3191  21C9  3193   	fcall	_strcmp
  2377  1344  0021               	movlb	1	; select bank1
  2378  1345  0826               	movf	?_strcmp^(0+128),w
  2379  1346  0427               	iorwf	(?_strcmp+1)^(0+128),w
  2380  1347  1D03               	btfss	3,2
  2381  1348  2B4C               	goto	l671
  2382  1349  0020               	movlb	0	; select bank0
  2383  134A  158E               	bsf	14,3	;volatile
  2384  134B  2B4E               	goto	l6584
  2385  134C                     l671:	
  2386                           
  2387                           ;main.c: 116: else RC3 = 0;
  2388  134C  0020               	movlb	0	; select bank0
  2389  134D  118E               	bcf	14,3	;volatile
  2390  134E                     l6584:	
  2391                           
  2392                           ;main.c: 118: putrsUSBUSART(numBytesRead);
  2393  134E  0021               	movlb	1	; select bank1
  2394  134F  0837               	movf	UserApplication@numBytesRead^(0+128),w
  2395  1350  00B5               	movwf	??_UserApplication^(0+128)
  2396  1351  01B6               	clrf	(??_UserApplication^(0+128)+1)
  2397  1352  0835               	movf	??_UserApplication^(0+128),w
  2398  1353  00A6               	movwf	putrsUSBUSART@data^(0+128)
  2399  1354  0836               	movf	(??_UserApplication+1)^(0+128),w
  2400  1355  00A7               	movwf	(putrsUSBUSART@data+1)^(0+128)
  2401  1356  3188  2000  3193   	fcall	_putrsUSBUSART
  2402  1359                     l6586:	
  2403                           
  2404                           ;main.c: 119: }
  2405                           ;main.c: 124: }
  2406                           ;main.c: 168: CDCTxService();
  2407  1359  3184  2488         	fcall	_CDCTxService
  2408  135B  0008               	return
  2409  135C                     __end_of_UserApplication:	
  2410                           
  2411                           	psect	text2
  2412  11C9                     __ptext2:	
  2413 ;; *************** function _strcmp *****************
  2414 ;; Defined at:
  2415 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
  2416 ;; Parameters:    Size  Location     Type
  2417 ;;  s1              1    wreg     PTR const unsigned char 
  2418 ;;		 -> readBuffer(64), 
  2419 ;;  s2              2    6[BANK1 ] PTR const unsigned char 
  2420 ;;		 -> STR_1(3), 
  2421 ;; Auto vars:     Size  Location     Type
  2422 ;;  s1              1   10[BANK1 ] PTR const unsigned char 
  2423 ;;		 -> readBuffer(64), 
  2424 ;;  r               1    9[BANK1 ] char 
  2425 ;; Return value:  Size  Location     Type
  2426 ;;                  2    6[BANK1 ] int 
  2427 ;; Registers used:
  2428 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  2429 ;; Tracked objects:
  2430 ;;		On entry : 0/0
  2431 ;;		On exit  : 0/0
  2432 ;;		Unchanged: 0/0
  2433 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2434 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2435 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2436 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2437 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  2438 ;;Total ram usage:        5 bytes
  2439 ;; Hardware stack levels used:    1
  2440 ;; Hardware stack levels required when called:   10
  2441 ;; This function calls:
  2442 ;;		Nothing
  2443 ;; This function is called by:
  2444 ;;		_UserApplication
  2445 ;; This function uses a non-reentrant model
  2446 ;;
  2447                           
  2448                           
  2449                           ;psect for function _strcmp
  2450  11C9                     _strcmp:	
  2451                           
  2452                           ;incstack = 0
  2453                           ; Regs used in _strcmp: [wreg-fsr1h+status,2+status,0+pclath]
  2454                           ;strcmp@s1 stored from wreg
  2455  11C9  0021               	movlb	1	; select bank1
  2456  11CA  00AA               	movwf	strcmp@s1^(0+128)
  2457  11CB  29D4               	goto	l4938
  2458  11CC                     l4936:	
  2459  11CC  3001               	movlw	1
  2460  11CD  00A8               	movwf	??_strcmp^(0+128)
  2461  11CE  0828               	movf	??_strcmp^(0+128),w
  2462  11CF  07AA               	addwf	strcmp@s1^(0+128),f
  2463  11D0  3001               	movlw	1
  2464  11D1  07A6               	addwf	strcmp@s2^(0+128),f
  2465  11D2  3000               	movlw	0
  2466  11D3  3DA7               	addwfc	(strcmp@s2+1)^(0+128),f
  2467  11D4                     l4938:	
  2468  11D4  082A               	movf	strcmp@s1^(0+128),w
  2469  11D5  0086               	movwf	6
  2470  11D6  3002               	movlw	2	; select bank4/5
  2471  11D7  0087               	movwf	7
  2472  11D8  0826               	movf	strcmp@s2^(0+128),w
  2473  11D9  0084               	movwf	4
  2474  11DA  0827               	movf	(strcmp@s2+1)^(0+128),w
  2475  11DB  0085               	movwf	5
  2476  11DC  0800               	movf	0,w	;code access
  2477  11DD  3AFF               	xorlw	255
  2478  11DE  3E01               	addlw	1
  2479  11DF  0701               	addwf	1,w
  2480  11E0  00A8               	movwf	??_strcmp^(0+128)
  2481  11E1  0828               	movf	??_strcmp^(0+128),w
  2482  11E2  00A9               	movwf	strcmp@r^(0+128)
  2483  11E3  0829               	movf	strcmp@r^(0+128),w
  2484  11E4  1D03               	btfss	3,2
  2485  11E5  29ED               	goto	l4942
  2486  11E6  082A               	movf	strcmp@s1^(0+128),w
  2487  11E7  0086               	movwf	6
  2488  11E8  3002               	movlw	2	; select bank4/5
  2489  11E9  0087               	movwf	7
  2490  11EA  0801               	movf	1,w
  2491  11EB  1D03               	btfss	3,2
  2492  11EC  29CC               	goto	l4936
  2493  11ED                     l4942:	
  2494  11ED  0829               	movf	strcmp@r^(0+128),w
  2495  11EE  00A6               	movwf	?_strcmp^(0+128)
  2496  11EF  01A7               	clrf	(?_strcmp+1)^(0+128)
  2497  11F0  1BA6               	btfsc	?_strcmp^(0+128),7
  2498  11F1  03A7               	decf	(?_strcmp+1)^(0+128),f
  2499  11F2  0008               	return
  2500  11F3                     __end_of_strcmp:	
  2501                           
  2502                           	psect	text3
  2503  0800                     __ptext3:	
  2504 ;; *************** function _putrsUSBUSART *****************
  2505 ;; Defined at:
  2506 ;;		line 725 in file "mcc_generated_files/usb/usb_device_cdc.c"
  2507 ;; Parameters:    Size  Location     Type
  2508 ;;  data            2    6[BANK1 ] PTR const unsigned char 
  2509 ;;		 -> ROM(8192), 
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;  pData           2   11[BANK1 ] PTR const unsigned char 
  2512 ;;		 -> ROM(8192), 
  2513 ;;  len             1   13[BANK1 ] unsigned char 
  2514 ;; Return value:  Size  Location     Type
  2515 ;;                  1    wreg      void 
  2516 ;; Registers used:
  2517 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2518 ;; Tracked objects:
  2519 ;;		On entry : 0/0
  2520 ;;		On exit  : 0/0
  2521 ;;		Unchanged: 0/0
  2522 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2523 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2524 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2525 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2526 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  2527 ;;Total ram usage:        8 bytes
  2528 ;; Hardware stack levels used:    1
  2529 ;; Hardware stack levels required when called:   10
  2530 ;; This function calls:
  2531 ;;		Nothing
  2532 ;; This function is called by:
  2533 ;;		_UserApplication
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           
  2537                           
  2538                           ;psect for function _putrsUSBUSART
  2539  0800                     _putrsUSBUSART:	
  2540                           
  2541                           ;usb_device_cdc.c: 727: uint8_t len;
  2542                           ;usb_device_cdc.c: 728: const const char *pData;
  2543                           ;usb_device_cdc.c: 753: {PIE2bits.USBIE = 0;};
  2544                           
  2545                           ;incstack = 0
  2546                           ; Regs used in _putrsUSBUSART: [wreg-fsr0h+status,2+status,0]
  2547  0800  0021               	movlb	1	; select bank1
  2548  0801  1112               	bcf	18,2	;volatile
  2549                           
  2550                           ;usb_device_cdc.c: 754: if(cdc_trf_state != 0)
  2551  0802  0023               	movlb	3	; select bank3
  2552  0803  0869               	movf	_cdc_trf_state^(0+384),w
  2553  0804  1903               	btfsc	3,2
  2554  0805  2809               	goto	l4776
  2555                           
  2556                           ;usb_device_cdc.c: 755: {
  2557                           ;usb_device_cdc.c: 756: {PIE2bits.USBIE = 1;};
  2558  0806  0021               	movlb	1	; select bank1
  2559  0807  1512               	bsf	18,2	;volatile
  2560                           
  2561                           ;usb_device_cdc.c: 757: return;
  2562  0808  0008               	return
  2563  0809                     l4776:	
  2564                           
  2565                           ;usb_device_cdc.c: 758: }
  2566                           ;usb_device_cdc.c: 764: len = 0;
  2567  0809  0021               	movlb	1	; select bank1
  2568  080A  01AD               	clrf	putrsUSBUSART@len^(0+128)
  2569                           
  2570                           ;usb_device_cdc.c: 765: pData = data;
  2571  080B  0827               	movf	(putrsUSBUSART@data+1)^(0+128),w
  2572  080C  00AC               	movwf	(putrsUSBUSART@pData+1)^(0+128)
  2573  080D  0826               	movf	putrsUSBUSART@data^(0+128),w
  2574  080E  00AB               	movwf	putrsUSBUSART@pData^(0+128)
  2575  080F                     l4780:	
  2576                           ;usb_device_cdc.c: 766: do
  2577                           
  2578                           
  2579                           ;usb_device_cdc.c: 767: {
  2580                           ;usb_device_cdc.c: 768: len++;
  2581  080F  3001               	movlw	1
  2582  0810  00A8               	movwf	??_putrsUSBUSART^(0+128)
  2583  0811  0828               	movf	??_putrsUSBUSART^(0+128),w
  2584  0812  07AD               	addwf	putrsUSBUSART@len^(0+128),f
  2585                           
  2586                           ;usb_device_cdc.c: 769: if(len == 255) break;
  2587  0813  0A2D               	incf	putrsUSBUSART@len^(0+128),w
  2588  0814  1903               	btfsc	3,2
  2589  0815  2824               	goto	l4788
  2590                           
  2591                           ;usb_device_cdc.c: 770: }while(*pData++);
  2592  0816  082C               	movf	(putrsUSBUSART@pData+1)^(0+128),w
  2593  0817  00A9               	movwf	(??_putrsUSBUSART^(0+128)+1)
  2594  0818  082B               	movf	putrsUSBUSART@pData^(0+128),w
  2595  0819  00A8               	movwf	??_putrsUSBUSART^(0+128)
  2596  081A  0AAB               	incf	putrsUSBUSART@pData^(0+128),f
  2597  081B  1903               	skipnz
  2598  081C  0AAC               	incf	(putrsUSBUSART@pData+1)^(0+128),f
  2599  081D  0828               	movf	??_putrsUSBUSART^(0+128),w
  2600  081E  0084               	movwf	4
  2601  081F  0829               	movf	(??_putrsUSBUSART+1)^(0+128),w
  2602  0820  0085               	movwf	5
  2603  0821  0012               	moviw fsr0++
  2604  0822  1D03               	btfss	3,2
  2605  0823  280F               	goto	l4780
  2606  0824                     l4788:	
  2607                           
  2608                           ;usb_device_cdc.c: 779: { pCDCSrc.bRom = (const uint8_t*)data; cdc_tx_len = len; cdc_mem
      +                          _type = 0x00; cdc_trf_state = 1; };
  2609  0824  0827               	movf	(putrsUSBUSART@data+1)^(0+128),w
  2610  0825  0023               	movlb	3	; select bank3
  2611  0826  00D4               	movwf	(_pCDCSrc+1)^(0+384)
  2612  0827  0021               	movlb	1	; select bank1
  2613  0828  0826               	movf	putrsUSBUSART@data^(0+128),w
  2614  0829  0023               	movlb	3	; select bank3
  2615  082A  00D3               	movwf	_pCDCSrc^(0+384)
  2616  082B  0021               	movlb	1	; select bank1
  2617  082C  082D               	movf	putrsUSBUSART@len^(0+128),w
  2618  082D  00A8               	movwf	??_putrsUSBUSART^(0+128)
  2619  082E  0828               	movf	??_putrsUSBUSART^(0+128),w
  2620  082F  0023               	movlb	3	; select bank3
  2621  0830  00E8               	movwf	_cdc_tx_len^(0+384)
  2622  0831  01E7               	clrf	_cdc_mem_type^(0+384)
  2623  0832  01E9               	clrf	_cdc_trf_state^(0+384)
  2624  0833  0AE9               	incf	_cdc_trf_state^(0+384),f
  2625                           
  2626                           ;usb_device_cdc.c: 780: {PIE2bits.USBIE = 1;};
  2627  0834  0021               	movlb	1	; select bank1
  2628  0835  1512               	bsf	18,2	;volatile
  2629  0836  0008               	return
  2630  0837                     __end_of_putrsUSBUSART:	
  2631                           
  2632                           	psect	text4
  2633  1684                     __ptext4:	
  2634 ;; *************** function _getsUSBUSART *****************
  2635 ;; Defined at:
  2636 ;;		line 484 in file "mcc_generated_files/usb/usb_device_cdc.c"
  2637 ;; Parameters:    Size  Location     Type
  2638 ;;  buffer          1    wreg     PTR unsigned char 
  2639 ;;		 -> readBuffer(64), 
  2640 ;;  len             1   17[BANK1 ] unsigned char 
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;  buffer          1   20[BANK1 ] PTR unsigned char 
  2643 ;;		 -> readBuffer(64), 
  2644 ;; Return value:  Size  Location     Type
  2645 ;;                  1    wreg      unsigned char 
  2646 ;; Registers used:
  2647 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2648 ;; Tracked objects:
  2649 ;;		On entry : 0/0
  2650 ;;		On exit  : 0/0
  2651 ;;		Unchanged: 0/0
  2652 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2653 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2654 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2655 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2656 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  2657 ;;Total ram usage:        4 bytes
  2658 ;; Hardware stack levels used:    1
  2659 ;; Hardware stack levels required when called:   11
  2660 ;; This function calls:
  2661 ;;		_USBTransferOnePacket
  2662 ;; This function is called by:
  2663 ;;		_UserApplication
  2664 ;; This function uses a non-reentrant model
  2665 ;;
  2666                           
  2667                           
  2668                           ;psect for function _getsUSBUSART
  2669  1684                     _getsUSBUSART:	
  2670                           
  2671                           ;incstack = 0
  2672                           ; Regs used in _getsUSBUSART: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2673                           ;getsUSBUSART@buffer stored from wreg
  2674  1684  0021               	movlb	1	; select bank1
  2675  1685  00B4               	movwf	getsUSBUSART@buffer^(0+128)
  2676                           
  2677                           ;usb_device_cdc.c: 486: cdc_rx_len = 0;
  2678  1686  0023               	movlb	3	; select bank3
  2679  1687  01EA               	clrf	_cdc_rx_len^(0+384)
  2680                           
  2681                           ;usb_device_cdc.c: 488: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
  2682  1688  084F               	movf	_CDCDataOutHandle^(0+384),w
  2683  1689  0450               	iorwf	(_CDCDataOutHandle+1)^(0+384),w
  2684  168A  1903               	btfsc	3,2
  2685  168B  2E92               	goto	l6306
  2686  168C  084F               	movf	_CDCDataOutHandle^(0+384),w
  2687  168D  0086               	movwf	6
  2688  168E  0850               	movf	(_CDCDataOutHandle+1)^(0+384),w
  2689  168F  0087               	movwf	7
  2690  1690  1B81               	btfsc	1,7
  2691  1691  2EDE               	goto	l6320
  2692  1692                     l6306:	
  2693                           
  2694                           ;usb_device_cdc.c: 489: {
  2695                           ;usb_device_cdc.c: 494: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
  2696  1692  084F               	movf	_CDCDataOutHandle^(0+384),w
  2697  1693  0086               	movwf	6
  2698  1694  0850               	movf	(_CDCDataOutHandle+1)^(0+384),w
  2699  1695  0087               	movwf	7
  2700  1696  3141               	addfsr 1,1
  2701  1697  0021               	movlb	1	; select bank1
  2702  1698  0831               	movf	getsUSBUSART@len^(0+128),w
  2703  1699  0201               	subwf	1,w
  2704  169A  1803               	skipnc
  2705  169B  2EA7               	goto	l6310
  2706                           
  2707                           ;usb_device_cdc.c: 495: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
  2708  169C  0023               	movlb	3	; select bank3
  2709  169D  084F               	movf	_CDCDataOutHandle^(0+384),w
  2710  169E  0086               	movwf	6
  2711  169F  0850               	movf	(_CDCDataOutHandle+1)^(0+384),w
  2712  16A0  0087               	movwf	7
  2713  16A1  3141               	addfsr 1,1
  2714  16A2  0801               	movf	1,w
  2715  16A3  0021               	movlb	1	; select bank1
  2716  16A4  00B2               	movwf	??_getsUSBUSART^(0+128)
  2717  16A5  0832               	movf	??_getsUSBUSART^(0+128),w
  2718  16A6  00B1               	movwf	getsUSBUSART@len^(0+128)
  2719  16A7                     l6310:	
  2720                           
  2721                           ;usb_device_cdc.c: 500: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
  2722  16A7  0023               	movlb	3	; select bank3
  2723  16A8  01EA               	clrf	_cdc_rx_len^(0+384)
  2724  16A9                     l6316:	
  2725  16A9  0021               	movlb	1	; select bank1
  2726  16AA  0831               	movf	getsUSBUSART@len^(0+128),w
  2727  16AB  0023               	movlb	3	; select bank3
  2728  16AC  026A               	subwf	_cdc_rx_len^(0+384),w
  2729  16AD  1803               	btfsc	3,0
  2730  16AE  2EC9               	goto	l6318
  2731                           
  2732                           ;usb_device_cdc.c: 501: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
  2733  16AF  086A               	movf	_cdc_rx_len^(0+384),w
  2734  16B0  3EC0               	addlw	192
  2735  16B1  0086               	movwf	6
  2736  16B2  0187               	clrf	7
  2737  16B3  3020               	movlw	32
  2738  16B4  3D87               	addwfc	7,f
  2739  16B5  0801               	movf	1,w
  2740  16B6  0021               	movlb	1	; select bank1
  2741  16B7  00B2               	movwf	??_getsUSBUSART^(0+128)
  2742  16B8  0023               	movlb	3	; select bank3
  2743  16B9  086A               	movf	_cdc_rx_len^(0+384),w
  2744  16BA  0021               	movlb	1	; select bank1
  2745  16BB  0734               	addwf	getsUSBUSART@buffer^(0+128),w
  2746  16BC  00B3               	movwf	(??_getsUSBUSART+1)^(0+128)
  2747  16BD  0833               	movf	(??_getsUSBUSART+1)^(0+128),w
  2748  16BE  0086               	movwf	6
  2749  16BF  3002               	movlw	2	; select bank4/5
  2750  16C0  0087               	movwf	7
  2751  16C1  0832               	movf	??_getsUSBUSART^(0+128),w
  2752  16C2  0081               	movwf	1
  2753  16C3  3001               	movlw	1
  2754  16C4  00B2               	movwf	??_getsUSBUSART^(0+128)
  2755  16C5  0832               	movf	??_getsUSBUSART^(0+128),w
  2756  16C6  0023               	movlb	3	; select bank3
  2757  16C7  07EA               	addwf	_cdc_rx_len^(0+384),f
  2758  16C8  2EA9               	goto	l6316
  2759  16C9                     l6318:	
  2760                           
  2761                           ;usb_device_cdc.c: 507: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  2762  16C9  0021               	movlb	1	; select bank1
  2763  16CA  01A6               	clrf	USBTransferOnePacket@dir^(0+128)
  2764  16CB  30C0               	movlw	192
  2765  16CC  00A7               	movwf	USBTransferOnePacket@data^(0+128)
  2766  16CD  3020               	movlw	32
  2767  16CE  00A8               	movwf	(USBTransferOnePacket@data^(0+128)+1)
  2768  16CF  3040               	movlw	64
  2769  16D0  00B2               	movwf	??_getsUSBUSART^(0+128)
  2770  16D1  0832               	movf	??_getsUSBUSART^(0+128),w
  2771  16D2  00A9               	movwf	USBTransferOnePacket@len^(0+128)
  2772  16D3  3002               	movlw	2
  2773  16D4  318D  252A         	fcall	_USBTransferOnePacket
  2774  16D6  0021               	movlb	1	; select bank1
  2775  16D7  0827               	movf	(?_USBTransferOnePacket+1)^(0+128),w
  2776  16D8  0023               	movlb	3	; select bank3
  2777  16D9  00D0               	movwf	(_CDCDataOutHandle+1)^(0+384)
  2778  16DA  0021               	movlb	1	; select bank1
  2779  16DB  0826               	movf	?_USBTransferOnePacket^(0+128),w
  2780  16DC  0023               	movlb	3	; select bank3
  2781  16DD  00CF               	movwf	_CDCDataOutHandle^(0+384)
  2782  16DE                     l6320:	
  2783                           
  2784                           ;usb_device_cdc.c: 509: }
  2785                           ;usb_device_cdc.c: 511: return cdc_rx_len;
  2786  16DE  086A               	movf	_cdc_rx_len^(0+384),w
  2787  16DF  0008               	return
  2788  16E0                     __end_of_getsUSBUSART:	
  2789                           
  2790                           	psect	text5
  2791  0488                     __ptext5:	
  2792 ;; *************** function _CDCTxService *****************
  2793 ;; Defined at:
  2794 ;;		line 835 in file "mcc_generated_files/usb/usb_device_cdc.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;		None
  2797 ;; Auto vars:     Size  Location     Type
  2798 ;;  byte_to_send    1   19[BANK1 ] unsigned char 
  2799 ;;  i               1   18[BANK1 ] unsigned char 
  2800 ;; Return value:  Size  Location     Type
  2801 ;;                  1    wreg      void 
  2802 ;; Registers used:
  2803 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2804 ;; Tracked objects:
  2805 ;;		On entry : 0/0
  2806 ;;		On exit  : 0/0
  2807 ;;		Unchanged: 0/0
  2808 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2810 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2811 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2812 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2813 ;;Total ram usage:        3 bytes
  2814 ;; Hardware stack levels used:    1
  2815 ;; Hardware stack levels required when called:   11
  2816 ;; This function calls:
  2817 ;;		_USBTransferOnePacket
  2818 ;; This function is called by:
  2819 ;;		_UserApplication
  2820 ;; This function uses a non-reentrant model
  2821 ;;
  2822                           
  2823                           
  2824                           ;psect for function _CDCTxService
  2825  0488                     _CDCTxService:	
  2826                           
  2827                           ;usb_device_cdc.c: 837: uint8_t byte_to_send;
  2828                           ;usb_device_cdc.c: 838: uint8_t i;
  2829                           ;usb_device_cdc.c: 840: {PIE2bits.USBIE = 0;};
  2830                           
  2831                           ;incstack = 0
  2832                           ; Regs used in _CDCTxService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2833  0488  0021               	movlb	1	; select bank1
  2834  0489  1112               	bcf	18,2	;volatile
  2835                           
  2836                           ;usb_device_cdc.c: 842: {};
  2837                           ;usb_device_cdc.c: 844: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
  2838  048A  0023               	movlb	3	; select bank3
  2839  048B  084D               	movf	_CDCDataInHandle^(0+384),w
  2840  048C  044E               	iorwf	(_CDCDataInHandle+1)^(0+384),w
  2841  048D  1903               	btfsc	3,2
  2842  048E  2C98               	goto	l6332
  2843  048F  084D               	movf	_CDCDataInHandle^(0+384),w
  2844  0490  0086               	movwf	6
  2845  0491  084E               	movf	(_CDCDataInHandle+1)^(0+384),w
  2846  0492  0087               	movwf	7
  2847  0493  1F81               	btfss	1,7
  2848  0494  2C98               	goto	l6332
  2849                           
  2850                           ;usb_device_cdc.c: 845: {
  2851                           ;usb_device_cdc.c: 846: {PIE2bits.USBIE = 1;};
  2852  0495  0021               	movlb	1	; select bank1
  2853  0496  1512               	bsf	18,2	;volatile
  2854                           
  2855                           ;usb_device_cdc.c: 847: return;
  2856  0497  0008               	return
  2857  0498                     l6332:	
  2858                           
  2859                           ;usb_device_cdc.c: 848: }
  2860                           ;usb_device_cdc.c: 855: if(cdc_trf_state == 3)
  2861  0498  3003               	movlw	3
  2862  0499  0023               	movlb	3	; select bank3
  2863  049A  0669               	xorwf	_cdc_trf_state^(0+384),w
  2864  049B  1903               	btfsc	3,2
  2865                           
  2866                           ;usb_device_cdc.c: 856: cdc_trf_state = 0;
  2867  049C  01E9               	clrf	_cdc_trf_state^(0+384)
  2868                           
  2869                           ;usb_device_cdc.c: 861: if(cdc_trf_state == 0)
  2870  049D  0869               	movf	_cdc_trf_state^(0+384),w
  2871  049E  1D03               	btfss	3,2
  2872  049F  2CA3               	goto	l6340
  2873                           
  2874                           ;usb_device_cdc.c: 862: {
  2875                           ;usb_device_cdc.c: 863: {PIE2bits.USBIE = 1;};
  2876  04A0  0021               	movlb	1	; select bank1
  2877  04A1  1512               	bsf	18,2	;volatile
  2878                           
  2879                           ;usb_device_cdc.c: 864: return;
  2880  04A2  0008               	return
  2881  04A3                     l6340:	
  2882                           
  2883                           ;usb_device_cdc.c: 865: }
  2884                           ;usb_device_cdc.c: 870: if(cdc_trf_state == 2)
  2885  04A3  3002               	movlw	2
  2886  04A4  0023               	movlb	3	; select bank3
  2887  04A5  0669               	xorwf	_cdc_trf_state^(0+384),w
  2888  04A6  1D03               	btfss	3,2
  2889  04A7  2CC3               	goto	l6346
  2890                           
  2891                           ;usb_device_cdc.c: 871: {
  2892                           ;usb_device_cdc.c: 872: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  2893  04A8  0021               	movlb	1	; select bank1
  2894  04A9  01A6               	clrf	USBTransferOnePacket@dir^(0+128)
  2895  04AA  0AA6               	incf	USBTransferOnePacket@dir^(0+128),f
  2896  04AB  3000               	movlw	0
  2897  04AC  00A7               	movwf	USBTransferOnePacket@data^(0+128)
  2898  04AD  3000               	movlw	0
  2899  04AE  00A8               	movwf	(USBTransferOnePacket@data+1)^(0+128)
  2900  04AF  01A9               	clrf	USBTransferOnePacket@len^(0+128)
  2901  04B0  3002               	movlw	2
  2902  04B1  318D  252A  3184   	fcall	_USBTransferOnePacket
  2903  04B4  0021               	movlb	1	; select bank1
  2904  04B5  0827               	movf	(?_USBTransferOnePacket+1)^(0+128),w
  2905  04B6  0023               	movlb	3	; select bank3
  2906  04B7  00CE               	movwf	(_CDCDataInHandle+1)^(0+384)
  2907  04B8  0021               	movlb	1	; select bank1
  2908  04B9  0826               	movf	?_USBTransferOnePacket^(0+128),w
  2909  04BA  0023               	movlb	3	; select bank3
  2910  04BB  00CD               	movwf	_CDCDataInHandle^(0+384)
  2911                           
  2912                           ;usb_device_cdc.c: 874: cdc_trf_state = 3;
  2913  04BC  3003               	movlw	3
  2914  04BD  0021               	movlb	1	; select bank1
  2915  04BE  00B1               	movwf	??_CDCTxService^(0+128)
  2916  04BF  0831               	movf	??_CDCTxService^(0+128),w
  2917  04C0  0023               	movlb	3	; select bank3
  2918  04C1  00E9               	movwf	_cdc_trf_state^(0+384)
  2919                           
  2920                           ;usb_device_cdc.c: 875: }
  2921  04C2  2D51               	goto	l6392
  2922  04C3                     l6346:	
  2923                           
  2924                           ;usb_device_cdc.c: 876: else if(cdc_trf_state == 1)
  2925  04C3  0369               	decf	_cdc_trf_state^(0+384),w
  2926  04C4  1D03               	btfss	3,2
  2927  04C5  2D51               	goto	l6392
  2928                           
  2929                           ;usb_device_cdc.c: 877: {
  2930                           ;usb_device_cdc.c: 881: if(cdc_tx_len > sizeof(cdc_data_tx))
  2931  04C6  3041               	movlw	65
  2932  04C7  0268               	subwf	_cdc_tx_len^(0+384),w
  2933  04C8  1C03               	skipc
  2934  04C9  2CCC               	goto	l6352
  2935                           
  2936                           ;usb_device_cdc.c: 882: byte_to_send = sizeof(cdc_data_tx);
  2937  04CA  3040               	movlw	64
  2938  04CB  2CCE               	goto	L1
  2939  04CC                     l6352:	
  2940                           
  2941                           ;usb_device_cdc.c: 883: else
  2942                           ;usb_device_cdc.c: 884: byte_to_send = cdc_tx_len;
  2943  04CC  0023               	movlb	3	; select bank3
  2944  04CD  0868               	movf	_cdc_tx_len^(0+384),w
  2945  04CE                     L1:	
  2946  04CE  0021               	movlb	1	; select bank1
  2947  04CF  00B1               	movwf	??_CDCTxService^(0+128)
  2948  04D0  0831               	movf	??_CDCTxService^(0+128),w
  2949  04D1  00B3               	movwf	CDCTxService@byte_to_send^(0+128)
  2950                           
  2951                           ;usb_device_cdc.c: 889: cdc_tx_len = cdc_tx_len - byte_to_send;
  2952  04D2  0333               	decf	CDCTxService@byte_to_send^(0+128),w
  2953  04D3  3AFF               	xorlw	255
  2954  04D4  0023               	movlb	3	; select bank3
  2955  04D5  0768               	addwf	_cdc_tx_len^(0+384),w
  2956  04D6  0021               	movlb	1	; select bank1
  2957  04D7  00B1               	movwf	??_CDCTxService^(0+128)
  2958  04D8  0831               	movf	??_CDCTxService^(0+128),w
  2959  04D9  0023               	movlb	3	; select bank3
  2960  04DA  00E8               	movwf	_cdc_tx_len^(0+384)
  2961                           
  2962                           ;usb_device_cdc.c: 891: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  2963  04DB  3020               	movlw	32
  2964  04DC  00D2               	movwf	(_pCDCDst+1)^(0+384)
  2965  04DD  3080               	movlw	128
  2966  04DE  00D1               	movwf	_pCDCDst^(0+384)
  2967                           
  2968                           ;usb_device_cdc.c: 893: i = byte_to_send;
  2969  04DF  0021               	movlb	1	; select bank1
  2970  04E0  0833               	movf	CDCTxService@byte_to_send^(0+128),w
  2971  04E1  00B1               	movwf	??_CDCTxService^(0+128)
  2972  04E2  0831               	movf	??_CDCTxService^(0+128),w
  2973  04E3  00B2               	movwf	CDCTxService@i^(0+128)
  2974                           
  2975                           ;usb_device_cdc.c: 894: if(cdc_mem_type == 0x00)
  2976  04E4  0023               	movlb	3	; select bank3
  2977  04E5  0867               	movf	_cdc_mem_type^(0+384),w
  2978  04E6  1903               	btfsc	3,2
  2979  04E7  2D05               	goto	l6370
  2980  04E8  2D26               	goto	l6380
  2981  04E9                     l6362:	
  2982                           ;usb_device_cdc.c: 895: {
  2983                           ;usb_device_cdc.c: 896: while(i)
  2984                           
  2985                           
  2986                           ;usb_device_cdc.c: 897: {
  2987                           ;usb_device_cdc.c: 898: *pCDCDst.bRam = *pCDCSrc.bRom;
  2988  04E9  0023               	movlb	3	; select bank3
  2989  04EA  0853               	movf	_pCDCSrc^(0+384),w
  2990  04EB  0084               	movwf	4
  2991  04EC  0854               	movf	(_pCDCSrc+1)^(0+384),w
  2992  04ED  0085               	movwf	5
  2993  04EE  0800               	movf	0,w	;code access
  2994  04EF  0021               	movlb	1	; select bank1
  2995  04F0  00B1               	movwf	??_CDCTxService^(0+128)
  2996  04F1  0023               	movlb	3	; select bank3
  2997  04F2  0851               	movf	_pCDCDst^(0+384),w
  2998  04F3  0086               	movwf	6
  2999  04F4  0852               	movf	(_pCDCDst+1)^(0+384),w
  3000  04F5  0087               	movwf	7
  3001  04F6  0021               	movlb	1	; select bank1
  3002  04F7  0831               	movf	??_CDCTxService^(0+128),w
  3003  04F8  0081               	movwf	1
  3004                           
  3005                           ;usb_device_cdc.c: 899: pCDCDst.bRam++;
  3006  04F9  3001               	movlw	1
  3007  04FA  0023               	movlb	3	; select bank3
  3008  04FB  07D1               	addwf	_pCDCDst^(0+384),f
  3009  04FC  3000               	movlw	0
  3010  04FD  3DD2               	addwfc	(_pCDCDst+1)^(0+384),f
  3011                           
  3012                           ;usb_device_cdc.c: 900: pCDCSrc.bRom++;
  3013  04FE  3001               	movlw	1
  3014  04FF  07D3               	addwf	_pCDCSrc^(0+384),f
  3015  0500  3000               	movlw	0
  3016  0501  3DD4               	addwfc	(_pCDCSrc+1)^(0+384),f
  3017                           
  3018                           ;usb_device_cdc.c: 901: i--;
  3019  0502  3001               	movlw	1
  3020  0503  0021               	movlb	1	; select bank1
  3021  0504  02B2               	subwf	CDCTxService@i^(0+128),f
  3022  0505                     l6370:	
  3023  0505  0021               	movlb	1	; select bank1
  3024  0506  0832               	movf	CDCTxService@i^(0+128),w
  3025  0507  1903               	btfsc	3,2
  3026  0508  2D2A               	goto	l6382
  3027  0509  2CE9               	goto	l6362
  3028  050A                     l6372:	
  3029                           ;usb_device_cdc.c: 904: else
  3030                           ;usb_device_cdc.c: 905: {
  3031                           ;usb_device_cdc.c: 906: while(i)
  3032                           
  3033                           ;usb_device_cdc.c: 902: }
  3034                           ;usb_device_cdc.c: 903: }
  3035                           
  3036                           
  3037                           ;usb_device_cdc.c: 907: {
  3038                           ;usb_device_cdc.c: 908: *pCDCDst.bRam = *pCDCSrc.bRam;
  3039  050A  0023               	movlb	3	; select bank3
  3040  050B  0853               	movf	_pCDCSrc^(0+384),w
  3041  050C  0084               	movwf	4
  3042  050D  0854               	movf	(_pCDCSrc+1)^(0+384),w
  3043  050E  0085               	movwf	5
  3044  050F  0800               	movf	0,w	;code access
  3045  0510  0021               	movlb	1	; select bank1
  3046  0511  00B1               	movwf	??_CDCTxService^(0+128)
  3047  0512  0023               	movlb	3	; select bank3
  3048  0513  0851               	movf	_pCDCDst^(0+384),w
  3049  0514  0086               	movwf	6
  3050  0515  0852               	movf	(_pCDCDst+1)^(0+384),w
  3051  0516  0087               	movwf	7
  3052  0517  0021               	movlb	1	; select bank1
  3053  0518  0831               	movf	??_CDCTxService^(0+128),w
  3054  0519  0081               	movwf	1
  3055                           
  3056                           ;usb_device_cdc.c: 909: pCDCDst.bRam++;
  3057  051A  3001               	movlw	1
  3058  051B  0023               	movlb	3	; select bank3
  3059  051C  07D1               	addwf	_pCDCDst^(0+384),f
  3060  051D  3000               	movlw	0
  3061  051E  3DD2               	addwfc	(_pCDCDst+1)^(0+384),f
  3062                           
  3063                           ;usb_device_cdc.c: 910: pCDCSrc.bRam++;
  3064  051F  3001               	movlw	1
  3065  0520  07D3               	addwf	_pCDCSrc^(0+384),f
  3066  0521  3000               	movlw	0
  3067  0522  3DD4               	addwfc	(_pCDCSrc+1)^(0+384),f
  3068                           
  3069                           ;usb_device_cdc.c: 911: i--;
  3070  0523  3001               	movlw	1
  3071  0524  0021               	movlb	1	; select bank1
  3072  0525  02B2               	subwf	CDCTxService@i^(0+128),f
  3073  0526                     l6380:	
  3074  0526  0021               	movlb	1	; select bank1
  3075  0527  0832               	movf	CDCTxService@i^(0+128),w
  3076  0528  1D03               	btfss	3,2
  3077  0529  2D0A               	goto	l6372
  3078  052A                     l6382:	
  3079                           
  3080                           ;usb_device_cdc.c: 912: }
  3081                           ;usb_device_cdc.c: 913: }
  3082                           ;usb_device_cdc.c: 919: if(cdc_tx_len == 0)
  3083  052A  0023               	movlb	3	; select bank3
  3084  052B  0868               	movf	_cdc_tx_len^(0+384),w
  3085  052C  1D03               	btfss	3,2
  3086  052D  2D3B               	goto	l6390
  3087                           
  3088                           ;usb_device_cdc.c: 920: {
  3089                           ;usb_device_cdc.c: 921: if(byte_to_send == 64)
  3090  052E  3040               	movlw	64
  3091  052F  0021               	movlb	1	; select bank1
  3092  0530  0633               	xorwf	CDCTxService@byte_to_send^(0+128),w
  3093  0531  1D03               	btfss	3,2
  3094  0532  2D35               	goto	l6388
  3095                           
  3096                           ;usb_device_cdc.c: 922: cdc_trf_state = 2;
  3097  0533  3002               	movlw	2
  3098  0534  2D37               	goto	L2
  3099  0535                     l6388:	
  3100                           
  3101                           ;usb_device_cdc.c: 923: else
  3102                           ;usb_device_cdc.c: 924: cdc_trf_state = 3;
  3103  0535  3003               	movlw	3
  3104  0536  0021               	movlb	1	; select bank1
  3105  0537                     L2:	
  3106  0537  00B1               	movwf	??_CDCTxService^(0+128)
  3107  0538  0831               	movf	??_CDCTxService^(0+128),w
  3108  0539  0023               	movlb	3	; select bank3
  3109  053A  00E9               	movwf	_cdc_trf_state^(0+384)
  3110  053B                     l6390:	
  3111                           
  3112                           ;usb_device_cdc.c: 925: }
  3113                           ;usb_device_cdc.c: 926: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  3114  053B  0021               	movlb	1	; select bank1
  3115  053C  01A6               	clrf	USBTransferOnePacket@dir^(0+128)
  3116  053D  0AA6               	incf	USBTransferOnePacket@dir^(0+128),f
  3117  053E  3080               	movlw	128
  3118  053F  00A7               	movwf	USBTransferOnePacket@data^(0+128)
  3119  0540  3020               	movlw	32
  3120  0541  00A8               	movwf	(USBTransferOnePacket@data^(0+128)+1)
  3121  0542  0833               	movf	CDCTxService@byte_to_send^(0+128),w
  3122  0543  00B1               	movwf	??_CDCTxService^(0+128)
  3123  0544  0831               	movf	??_CDCTxService^(0+128),w
  3124  0545  00A9               	movwf	USBTransferOnePacket@len^(0+128)
  3125  0546  3002               	movlw	2
  3126  0547  318D  252A         	fcall	_USBTransferOnePacket
  3127  0549  0021               	movlb	1	; select bank1
  3128  054A  0827               	movf	(?_USBTransferOnePacket+1)^(0+128),w
  3129  054B  0023               	movlb	3	; select bank3
  3130  054C  00CE               	movwf	(_CDCDataInHandle+1)^(0+384)
  3131  054D  0021               	movlb	1	; select bank1
  3132  054E  0826               	movf	?_USBTransferOnePacket^(0+128),w
  3133  054F  0023               	movlb	3	; select bank3
  3134  0550  00CD               	movwf	_CDCDataInHandle^(0+384)
  3135  0551                     l6392:	
  3136                           
  3137                           ;usb_device_cdc.c: 928: }
  3138                           ;usb_device_cdc.c: 930: {PIE2bits.USBIE = 1;};
  3139  0551  0021               	movlb	1	; select bank1
  3140  0552  1512               	bsf	18,2	;volatile
  3141  0553  0008               	return
  3142  0554                     __end_of_CDCTxService:	
  3143                           
  3144                           	psect	text6
  3145  02B7                     __ptext6:	
  3146 ;; *************** function _USBDeviceTasks *****************
  3147 ;; Defined at:
  3148 ;;		line 477 in file "mcc_generated_files/usb/usb_device.c"
  3149 ;; Parameters:    Size  Location     Type
  3150 ;;		None
  3151 ;; Auto vars:     Size  Location     Type
  3152 ;;  i               1    0[BANK3 ] unsigned char 
  3153 ;; Return value:  Size  Location     Type
  3154 ;;                  1    wreg      void 
  3155 ;; Registers used:
  3156 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3157 ;; Tracked objects:
  3158 ;;		On entry : 0/0
  3159 ;;		On exit  : 0/0
  3160 ;;		Unchanged: 0/0
  3161 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3163 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  3164 ;;      Temps:          0       0       0       0       0       2       0       0       0       0       0       0       
      +0       0
  3165 ;;      Totals:         0       0       0       0       1       2       0       0       0       0       0       0       
      +0       0
  3166 ;;Total ram usage:        3 bytes
  3167 ;; Hardware stack levels used:    1
  3168 ;; Hardware stack levels required when called:   18
  3169 ;; This function calls:
  3170 ;;		_USBCtrlEPAllowStatusStage
  3171 ;;		_USBCtrlEPService
  3172 ;;		_USBDeviceInit
  3173 ;;		_USBIncrement1msInternalTimers
  3174 ;;		_USBStallHandler
  3175 ;;		_USBSuspend
  3176 ;;		_USBWakeFromSuspend
  3177 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  3178 ;; This function is called by:
  3179 ;;		_main
  3180 ;; This function uses a non-reentrant model
  3181 ;;
  3182                           
  3183                           
  3184                           ;psect for function _USBDeviceTasks
  3185  02B7                     _USBDeviceTasks:	
  3186                           
  3187                           ;usb_device.c: 479: uint8_t i;
  3188                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
  3189                           
  3190                           ;incstack = 0
  3191 ;; hardware stack exceeded
  3192                           ; Regs used in _USBDeviceTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3193  02B7  0023               	movlb	3	; select bank3
  3194  02B8  0365               	decf	_USBDeviceState^(0+384),w	;volatile
  3195  02B9  1D03               	btfss	3,2
  3196  02BA  2AC7               	goto	l6480
  3197                           
  3198                           ;usb_device.c: 591: {
  3199                           ;usb_device.c: 601: if(!UCONbits.SE0)
  3200  02BB  003D               	movlb	29	; select bank29
  3201  02BC  1A8E               	btfsc	14,5	;volatile
  3202  02BD  2AC7               	goto	l6480
  3203                           
  3204                           ;usb_device.c: 602: {
  3205                           ;usb_device.c: 608: {UIR = 0;};
  3206  02BE  0190               	clrf	16	;volatile
  3207                           
  3208                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
  3209  02BF  1412               	bsf	18,0	;volatile
  3210                           
  3211                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
  3212  02C0  1612               	bsf	18,4	;volatile
  3213                           
  3214                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
  3215  02C1  3002               	movlw	2
  3216  02C2  0024               	movlb	4	; select bank4
  3217  02C3  00C0               	movwf	??_USBDeviceTasks^(0+512)
  3218  02C4  0840               	movf	??_USBDeviceTasks^(0+512),w
  3219  02C5  0023               	movlb	3	; select bank3
  3220  02C6  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
  3221  02C7                     l6480:	
  3222                           
  3223                           ;usb_device.c: 617: }
  3224                           ;usb_device.c: 618: }
  3225                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  3226  02C7  003D               	movlb	29	; select bank29
  3227  02C8  1910               	btfsc	16,2	;volatile
  3228  02C9  1D12               	btfss	18,2	;volatile
  3229  02CA  2AD4               	goto	l6488
  3230                           
  3231                           ;usb_device.c: 635: {
  3232                           ;usb_device.c: 636: (UIR &= 0xFB);
  3233  02CB  30FB               	movlw	251
  3234  02CC  0024               	movlb	4	; select bank4
  3235  02CD  00C0               	movwf	??_USBDeviceTasks^(0+512)
  3236  02CE  0840               	movf	??_USBDeviceTasks^(0+512),w
  3237  02CF  003D               	movlb	29	; select bank29
  3238  02D0  0590               	andwf	16,f	;volatile
  3239                           
  3240                           ;usb_device.c: 640: USBWakeFromSuspend();
  3241  02D1  3191  2161  3182   	fcall	_USBWakeFromSuspend
  3242  02D4                     l6488:	
  3243                           
  3244                           ;usb_device.c: 642: }
  3245                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
  3246  02D4  003D               	movlb	29	; select bank29
  3247  02D5  1C8E               	btfss	14,1	;volatile
  3248  02D6  2ADA               	goto	l375
  3249                           
  3250                           ;usb_device.c: 648: {
  3251                           ;usb_device.c: 649: PIR2bits.USBIF = 0;;
  3252  02D7  0020               	movlb	0	; select bank0
  3253  02D8  1112               	bcf	18,2	;volatile
  3254                           
  3255                           ;usb_device.c: 650: return;
  3256  02D9  0008               	return
  3257  02DA                     l375:	
  3258                           
  3259                           ;usb_device.c: 651: }
  3260                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
  3261  02DA  1810               	btfsc	16,0	;volatile
  3262  02DB  1C12               	btfss	18,0	;volatile
  3263  02DC  2AEE               	goto	l6502
  3264                           
  3265                           ;usb_device.c: 664: {
  3266                           ;usb_device.c: 665: USBDeviceInit();
  3267  02DD  3185  2554  3182   	fcall	_USBDeviceInit
  3268                           
  3269                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
  3270  02E0  0021               	movlb	1	; select bank1
  3271  02E1  1512               	bsf	18,2	;volatile
  3272                           
  3273                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
  3274  02E2  3004               	movlw	4
  3275  02E3  0024               	movlb	4	; select bank4
  3276  02E4  00C0               	movwf	??_USBDeviceTasks^(0+512)
  3277  02E5  0840               	movf	??_USBDeviceTasks^(0+512),w
  3278  02E6  0023               	movlb	3	; select bank3
  3279  02E7  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
  3280                           
  3281                           ;usb_device.c: 681: (UIR &= 0xFE);
  3282  02E8  30FE               	movlw	254
  3283  02E9  0024               	movlb	4	; select bank4
  3284  02EA  00C0               	movwf	??_USBDeviceTasks^(0+512)
  3285  02EB  0840               	movf	??_USBDeviceTasks^(0+512),w
  3286  02EC  003D               	movlb	29	; select bank29
  3287  02ED  0590               	andwf	16,f	;volatile
  3288  02EE                     l6502:	
  3289                           
  3290                           ;usb_device.c: 682: }
  3291                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  3292  02EE  1A10               	btfsc	16,4	;volatile
  3293  02EF  1E12               	btfss	18,4	;volatile
  3294  02F0  2AF4               	goto	l6508
  3295                           
  3296                           ;usb_device.c: 688: {
  3297                           ;usb_device.c: 694: USBSuspend();
  3298  02F1  3191  2102  3182   	fcall	_USBSuspend
  3299  02F4                     l6508:	
  3300                           
  3301                           ;usb_device.c: 696: }
  3302                           ;usb_device.c: 708: if(UIRbits.SOFIF)
  3303  02F4  003D               	movlb	29	; select bank29
  3304  02F5  1F10               	btfss	16,6	;volatile
  3305  02F6  2B1E               	goto	l6524
  3306                           
  3307                           ;usb_device.c: 709: {
  3308                           ;usb_device.c: 711: if(UIEbits.SOFIE)
  3309  02F7  1F12               	btfss	18,6	;volatile
  3310  02F8  2B09               	goto	l6514
  3311                           
  3312                           ;usb_device.c: 712: {
  3313                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  3314  02F9  3073               	movlw	115
  3315  02FA  0021               	movlb	1	; select bank1
  3316  02FB  00B4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  3317  02FC  3000               	movlw	0
  3318  02FD  00B5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)+1)
  3319  02FE  3000               	movlw	0
  3320  02FF  00B6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  3321  0300  3000               	movlw	0
  3322  0301  00B7               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  3323  0302  3001               	movlw	1
  3324  0303  00B8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  3325  0304  3000               	movlw	0
  3326  0305  00B9               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)+1)
  3327  0306  3192  224E  3182   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  3328  0309                     l6514:	
  3329                           
  3330                           ;usb_device.c: 714: }
  3331                           ;usb_device.c: 715: (UIR &= 0xBF);
  3332  0309  30BF               	movlw	191
  3333  030A  0024               	movlb	4	; select bank4
  3334  030B  00C0               	movwf	??_USBDeviceTasks^(0+512)
  3335  030C  0840               	movf	??_USBDeviceTasks^(0+512),w
  3336  030D  003D               	movlb	29	; select bank29
  3337  030E  0590               	andwf	16,f	;volatile
  3338                           
  3339                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
  3340  030F  3190  20AA  3182   	fcall	_USBIncrement1msInternalTimers
  3341                           
  3342                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
  3343  0312  0023               	movlb	3	; select bank3
  3344  0313  085C               	movf	_USBStatusStageTimeoutCounter^(0+384),w	;volatile
  3345  0314  1903               	btfsc	3,2
  3346  0315  2B18               	goto	l381
  3347                           
  3348                           ;usb_device.c: 736: {
  3349                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
  3350  0316  3001               	movlw	1
  3351  0317  02DC               	subwf	_USBStatusStageTimeoutCounter^(0+384),f	;volatile
  3352  0318                     l381:	
  3353                           
  3354                           ;usb_device.c: 738: }
  3355                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
  3356  0318  085C               	movf	_USBStatusStageTimeoutCounter^(0+384),w	;volatile
  3357  0319  1D03               	btfss	3,2
  3358  031A  2B1E               	goto	l6524
  3359                           
  3360                           ;usb_device.c: 745: {
  3361                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
  3362  031B  318B  232F  3182   	fcall	_USBCtrlEPAllowStatusStage
  3363  031E                     l6524:	
  3364                           
  3365                           ;usb_device.c: 747: }
  3366                           ;usb_device.c: 749: }
  3367                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
  3368  031E  003D               	movlb	29	; select bank29
  3369  031F  1A90               	btfsc	16,5	;volatile
  3370  0320  1E92               	btfss	18,5	;volatile
  3371  0321  2B25               	goto	l6530
  3372                           
  3373                           ;usb_device.c: 752: {
  3374                           ;usb_device.c: 753: USBStallHandler();
  3375  0322  3191  21F3  3182   	fcall	_USBStallHandler
  3376  0325                     l6530:	
  3377                           
  3378                           ;usb_device.c: 754: }
  3379                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
  3380  0325  003D               	movlb	29	; select bank29
  3381  0326  1890               	btfsc	16,1	;volatile
  3382  0327  1C92               	btfss	18,1	;volatile
  3383  0328  2B3B               	goto	l6538
  3384                           
  3385                           ;usb_device.c: 757: {
  3386                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  3387  0329  30FF               	movlw	255
  3388  032A  0021               	movlb	1	; select bank1
  3389  032B  00B4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  3390  032C  307F               	movlw	127
  3391  032D  00B5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)+1)
  3392  032E  3000               	movlw	0
  3393  032F  00B6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  3394  0330  3000               	movlw	0
  3395  0331  00B7               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  3396  0332  3001               	movlw	1
  3397  0333  00B8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  3398  0334  3000               	movlw	0
  3399  0335  00B9               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)+1)
  3400  0336  3192  224E  3182   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  3401                           
  3402                           ;usb_device.c: 759: {UEIR = 0;};
  3403  0339  003D               	movlb	29	; select bank29
  3404  033A  0193               	clrf	19	;volatile
  3405  033B                     l6538:	
  3406                           
  3407                           ;usb_device.c: 767: }
  3408                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
  3409  033B  3004               	movlw	4
  3410  033C  0023               	movlb	3	; select bank3
  3411  033D  0265               	subwf	_USBDeviceState^(0+384),w	;volatile
  3412  033E  1803               	skipnc
  3413  033F  2B43               	goto	l385
  3414                           
  3415                           ;usb_device.c: 775: {
  3416                           ;usb_device.c: 776: PIR2bits.USBIF = 0;;
  3417  0340  0020               	movlb	0	; select bank0
  3418  0341  1112               	bcf	18,2	;volatile
  3419                           
  3420                           ;usb_device.c: 777: return;
  3421  0342  0008               	return
  3422  0343                     l385:	
  3423                           
  3424                           ;usb_device.c: 778: }
  3425                           ;usb_device.c: 783: if(UIEbits.TRNIE)
  3426  0343  003D               	movlb	29	; select bank29
  3427  0344  1D92               	btfss	18,3	;volatile
  3428  0345  2B9D               	goto	l386
  3429                           
  3430                           ;usb_device.c: 784: {
  3431                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
  3432  0346  0023               	movlb	3	; select bank3
  3433  0347  01EF               	clrf	USBDeviceTasks@i^(0+384)
  3434  0348  3004               	movlw	4
  3435  0349  026F               	subwf	USBDeviceTasks@i^(0+384),w
  3436  034A  1803               	btfsc	3,0
  3437  034B  2B9D               	goto	l386
  3438  034C                     l387:	
  3439                           
  3440                           ;usb_device.c: 786: {
  3441                           ;usb_device.c: 787: if(UIRbits.TRNIF)
  3442  034C  003D               	movlb	29	; select bank29
  3443  034D  1D90               	btfss	16,3	;volatile
  3444  034E  2B9D               	goto	l386
  3445                           
  3446                           ;usb_device.c: 788: {
  3447                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
  3448  034F  080F               	movf	15,w	;volatile
  3449  0350  0024               	movlb	4	; select bank4
  3450  0351  00C0               	movwf	??_USBDeviceTasks^(0+512)
  3451  0352  0840               	movf	??_USBDeviceTasks^(0+512),w
  3452  0353  0023               	movlb	3	; select bank3
  3453  0354  00ED               	movwf	_USTATcopy^(0+384)	;volatile
  3454                           
  3455                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
  3456  0355  0C6D               	rrf	_USTATcopy^(0+384),w	;volatile
  3457  0356  0024               	movlb	4	; select bank4
  3458  0357  00C0               	movwf	??_USBDeviceTasks^(0+512)
  3459  0358  0CC0               	rrf	??_USBDeviceTasks^(0+512),f
  3460  0359  0C40               	rrf	??_USBDeviceTasks^(0+512),w
  3461  035A  390F               	andlw	15
  3462  035B  00C1               	movwf	(??_USBDeviceTasks+1)^(0+512)
  3463  035C  0841               	movf	(??_USBDeviceTasks+1)^(0+512),w
  3464  035D  0023               	movlb	3	; select bank3
  3465  035E  00DE               	movwf	_endpoint_number^(0+384)	;volatile
  3466                           
  3467                           ;usb_device.c: 793: (UIR &= 0xF7);
  3468  035F  30F7               	movlw	247
  3469  0360  0024               	movlb	4	; select bank4
  3470  0361  00C0               	movwf	??_USBDeviceTasks^(0+512)
  3471  0362  0840               	movf	??_USBDeviceTasks^(0+512),w
  3472  0363  003D               	movlb	29	; select bank29
  3473  0364  0590               	andwf	16,f	;volatile
  3474                           
  3475                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
  3476  0365  0023               	movlb	3	; select bank3
  3477  0366  196D               	btfsc	_USTATcopy^(0+384),2	;volatile
  3478  0367  2B6B               	goto	l6558
  3479                           
  3480                           ;usb_device.c: 799: {
  3481                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  3482  0368  085E               	movf	_endpoint_number^(0+384),w	;volatile
  3483  0369  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  3484  036A  2B6E               	goto	L3
  3485  036B                     l6558:	
  3486                           ;usb_device.c: 801: }
  3487                           
  3488                           
  3489                           ;usb_device.c: 802: else
  3490                           ;usb_device.c: 803: {
  3491                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  3492  036B  0023               	movlb	3	; select bank3
  3493  036C  085E               	movf	_endpoint_number^(0+384),w	;volatile
  3494  036D  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  3495  036E                     L3:	
  3496  036E  0086               	movwf	6
  3497  036F  3001               	movlw	1	; select bank3/4
  3498  0370  0087               	movwf	7
  3499  0371  0801               	movf	1,w
  3500  0372  3901               	andlw	1
  3501  0373  0024               	movlb	4	; select bank4
  3502  0374  00C0               	movwf	??_USBDeviceTasks^(0+512)
  3503  0375  3001               	movlw	1
  3504  0376  06C0               	xorwf	??_USBDeviceTasks^(0+512),f
  3505  0377  0801               	movf	1,w
  3506  0378  0640               	xorwf	??_USBDeviceTasks^(0+512),w
  3507  0379  39FE               	andlw	-2
  3508  037A  0640               	xorwf	??_USBDeviceTasks^(0+512),w
  3509  037B  0081               	movwf	1
  3510                           
  3511                           ;usb_device.c: 805: }
  3512                           ;usb_device.c: 810: if(endpoint_number == 0)
  3513  037C  0023               	movlb	3	; select bank3
  3514  037D  085E               	movf	_endpoint_number^(0+384),w	;volatile
  3515  037E  1D03               	btfss	3,2
  3516  037F  2B84               	goto	l6564
  3517                           
  3518                           ;usb_device.c: 811: {
  3519                           ;usb_device.c: 812: USBCtrlEPService();
  3520  0380  3196  2628  3182   	fcall	_USBCtrlEPService
  3521                           
  3522                           ;usb_device.c: 813: }
  3523  0383  2B93               	goto	l6566
  3524  0384                     l6564:	
  3525                           
  3526                           ;usb_device.c: 814: else
  3527                           ;usb_device.c: 815: {
  3528                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  3529  0384  3072               	movlw	114
  3530  0385  0021               	movlb	1	; select bank1
  3531  0386  00B4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  3532  0387  3000               	movlw	0
  3533  0388  00B5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)+1)
  3534  0389  30ED               	movlw	low _USTATcopy
  3535  038A  00B6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  3536  038B  3001               	movlw	high _USTATcopy
  3537  038C  00B7               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  3538  038D  3000               	movlw	0
  3539  038E  00B8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  3540  038F  00B9               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
  3541  0390  3192  224E  3182   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  3542  0393                     l6566:	
  3543                           ;usb_device.c: 819: else
  3544                           ;usb_device.c: 820: {
  3545                           ;usb_device.c: 821: break;
  3546                           
  3547                           ;usb_device.c: 817: }
  3548                           ;usb_device.c: 818: }
  3549                           
  3550  0393  3001               	movlw	1
  3551  0394  0024               	movlb	4	; select bank4
  3552  0395  00C0               	movwf	??_USBDeviceTasks^(0+512)
  3553  0396  0840               	movf	??_USBDeviceTasks^(0+512),w
  3554  0397  0023               	movlb	3	; select bank3
  3555  0398  07EF               	addwf	USBDeviceTasks@i^(0+384),f
  3556  0399  3004               	movlw	4
  3557  039A  026F               	subwf	USBDeviceTasks@i^(0+384),w
  3558  039B  1C03               	skipc
  3559  039C  2B4C               	goto	l387
  3560  039D                     l386:	
  3561                           
  3562                           ;usb_device.c: 822: }
  3563                           ;usb_device.c: 823: }
  3564                           ;usb_device.c: 824: }
  3565                           ;usb_device.c: 826: PIR2bits.USBIF = 0;;
  3566  039D  0020               	movlb	0	; select bank0
  3567  039E  1112               	bcf	18,2	;volatile
  3568  039F  0008               	return
  3569  03A0                     __end_of_USBDeviceTasks:	
  3570                           
  3571                           	psect	text7
  3572  1161                     __ptext7:	
  3573 ;; *************** function _USBWakeFromSuspend *****************
  3574 ;; Defined at:
  3575 ;;		line 2303 in file "mcc_generated_files/usb/usb_device.c"
  3576 ;; Parameters:    Size  Location     Type
  3577 ;;		None
  3578 ;; Auto vars:     Size  Location     Type
  3579 ;;		None
  3580 ;; Return value:  Size  Location     Type
  3581 ;;                  1    wreg      void 
  3582 ;; Registers used:
  3583 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3584 ;; Tracked objects:
  3585 ;;		On entry : 0/0
  3586 ;;		On exit  : 0/0
  3587 ;;		Unchanged: 0/0
  3588 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3591 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3592 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3593 ;;Total ram usage:        1 bytes
  3594 ;; Hardware stack levels used:    1
  3595 ;; Hardware stack levels required when called:   14
  3596 ;; This function calls:
  3597 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  3598 ;; This function is called by:
  3599 ;;		_USBDeviceTasks
  3600 ;; This function uses a non-reentrant model
  3601 ;;
  3602                           
  3603                           
  3604                           ;psect for function _USBWakeFromSuspend
  3605  1161                     _USBWakeFromSuspend:	
  3606                           
  3607                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
  3608                           
  3609                           ;incstack = 0
  3610                           ; Regs used in _USBWakeFromSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3611  1161  0023               	movlb	3	; select bank3
  3612  1162  01DF               	clrf	_USBBusIsSuspended^(0+384)	;volatile
  3613                           
  3614                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  3615  1163  3074               	movlw	116
  3616  1164  0021               	movlb	1	; select bank1
  3617  1165  00B4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  3618  1166  3000               	movlw	0
  3619  1167  00B5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)+1)
  3620  1168  3000               	movlw	0
  3621  1169  00B6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  3622  116A  3000               	movlw	0
  3623  116B  00B7               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  3624  116C  3000               	movlw	0
  3625  116D  00B8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  3626  116E  00B9               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
  3627  116F  3192  224E  3191   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  3628                           
  3629                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
  3630  1172  003D               	movlb	29	; select bank29
  3631  1173  108E               	bcf	14,1	;volatile
  3632                           
  3633                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
  3634  1174  1112               	bcf	18,2	;volatile
  3635  1175                     l6404:	
  3636                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
  3637                           
  3638  1175  1D10               	btfss	16,2	;volatile
  3639  1176  297E               	goto	l6406
  3640                           
  3641                           ;usb_device.c: 2343: {
  3642                           ;usb_device.c: 2344: (UIR &= 0xFB);
  3643  1177  30FB               	movlw	251
  3644  1178  0021               	movlb	1	; select bank1
  3645  1179  00BA               	movwf	??_USBWakeFromSuspend^(0+128)
  3646  117A  083A               	movf	??_USBWakeFromSuspend^(0+128),w
  3647  117B  003D               	movlb	29	; select bank29
  3648  117C  0590               	andwf	16,f	;volatile
  3649  117D  2975               	goto	l6404
  3650  117E                     l6406:	
  3651                           
  3652                           ;usb_device.c: 2345: }
  3653                           ;usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
  3654  117E  0023               	movlb	3	; select bank3
  3655  117F  01D6               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  3656  1180  0008               	return
  3657  1181                     __end_of_USBWakeFromSuspend:	
  3658                           
  3659                           	psect	text8
  3660  1102                     __ptext8:	
  3661 ;; *************** function _USBSuspend *****************
  3662 ;; Defined at:
  3663 ;;		line 2245 in file "mcc_generated_files/usb/usb_device.c"
  3664 ;; Parameters:    Size  Location     Type
  3665 ;;		None
  3666 ;; Auto vars:     Size  Location     Type
  3667 ;;		None
  3668 ;; Return value:  Size  Location     Type
  3669 ;;                  1    wreg      void 
  3670 ;; Registers used:
  3671 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3672 ;; Tracked objects:
  3673 ;;		On entry : 0/0
  3674 ;;		On exit  : 0/0
  3675 ;;		Unchanged: 0/0
  3676 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3679 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3680 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3681 ;;Total ram usage:        1 bytes
  3682 ;; Hardware stack levels used:    1
  3683 ;; Hardware stack levels required when called:   14
  3684 ;; This function calls:
  3685 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  3686 ;; This function is called by:
  3687 ;;		_USBDeviceTasks
  3688 ;; This function uses a non-reentrant model
  3689 ;;
  3690                           
  3691                           
  3692                           ;psect for function _USBSuspend
  3693  1102                     _USBSuspend:	
  3694                           
  3695                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
  3696                           
  3697                           ;incstack = 0
  3698                           ; Regs used in _USBSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3699  1102  003D               	movlb	29	; select bank29
  3700  1103  1512               	bsf	18,2	;volatile
  3701                           
  3702                           ;usb_device.c: 2271: (UIR &= 0xEF);
  3703  1104  30EF               	movlw	239
  3704  1105  0021               	movlb	1	; select bank1
  3705  1106  00BA               	movwf	??_USBSuspend^(0+128)
  3706  1107  083A               	movf	??_USBSuspend^(0+128),w
  3707  1108  003D               	movlb	29	; select bank29
  3708  1109  0590               	andwf	16,f	;volatile
  3709                           
  3710                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
  3711  110A  148E               	bsf	14,1	;volatile
  3712                           
  3713                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
  3714  110B  3001               	movlw	1
  3715  110C  0021               	movlb	1	; select bank1
  3716  110D  00BA               	movwf	??_USBSuspend^(0+128)
  3717  110E  083A               	movf	??_USBSuspend^(0+128),w
  3718  110F  0023               	movlb	3	; select bank3
  3719  1110  00DF               	movwf	_USBBusIsSuspended^(0+384)	;volatile
  3720                           
  3721                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
  3722  1111  01D6               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  3723                           
  3724                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  3725  1112  3075               	movlw	117
  3726  1113  0021               	movlb	1	; select bank1
  3727  1114  00B4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  3728  1115  3000               	movlw	0
  3729  1116  00B5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)+1)
  3730  1117  3000               	movlw	0
  3731  1118  00B6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  3732  1119  3000               	movlw	0
  3733  111A  00B7               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  3734  111B  3000               	movlw	0
  3735  111C  00B8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  3736  111D  00B9               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
  3737  111E  3192  224E         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  3738  1120  0008               	return
  3739  1121                     __end_of_USBSuspend:	
  3740                           
  3741                           	psect	text9
  3742  11F3                     __ptext9:	
  3743 ;; *************** function _USBStallHandler *****************
  3744 ;; Defined at:
  3745 ;;		line 2202 in file "mcc_generated_files/usb/usb_device.c"
  3746 ;; Parameters:    Size  Location     Type
  3747 ;;		None
  3748 ;; Auto vars:     Size  Location     Type
  3749 ;;		None
  3750 ;; Return value:  Size  Location     Type
  3751 ;;                  1    wreg      void 
  3752 ;; Registers used:
  3753 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3754 ;; Tracked objects:
  3755 ;;		On entry : 0/0
  3756 ;;		On exit  : 0/0
  3757 ;;		Unchanged: 0/0
  3758 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3761 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3762 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3763 ;;Total ram usage:        1 bytes
  3764 ;; Hardware stack levels used:    1
  3765 ;; Hardware stack levels required when called:   10
  3766 ;; This function calls:
  3767 ;;		Nothing
  3768 ;; This function is called by:
  3769 ;;		_USBDeviceTasks
  3770 ;; This function uses a non-reentrant model
  3771 ;;
  3772                           
  3773                           
  3774                           ;psect for function _USBStallHandler
  3775  11F3                     _USBStallHandler:	
  3776                           
  3777                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
  3778                           
  3779                           ;incstack = 0
  3780                           ; Regs used in _USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  3781  11F3  003D               	movlb	29	; select bank29
  3782  11F4  1C18               	btfss	24,0	;volatile
  3783  11F5  2A17               	goto	l6438
  3784                           
  3785                           ;usb_device.c: 2215: {
  3786                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  3787  11F6  0023               	movlb	3	; select bank3
  3788  11F7  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  3789  11F8  0086               	movwf	6
  3790  11F9  0187               	clrf	7
  3791  11FA  3080               	movlw	128
  3792  11FB  0601               	xorwf	1,w
  3793  11FC  1D03               	btfss	3,2
  3794  11FD  2A15               	goto	l6436
  3795  11FE  0837               	movf	_pBDTEntryIn^(0+384),w
  3796  11FF  0086               	movwf	6
  3797  1200  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  3798  1201  0087               	movwf	7
  3799  1202  3084               	movlw	132
  3800  1203  0601               	xorwf	1,w
  3801  1204  1D03               	btfss	3,2
  3802  1205  2A15               	goto	l6436
  3803                           
  3804                           ;usb_device.c: 2218: {
  3805                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  3806  1206  300C               	movlw	12
  3807  1207  0021               	movlb	1	; select bank1
  3808  1208  00A6               	movwf	??_USBStallHandler^(0+128)
  3809  1209  0023               	movlb	3	; select bank3
  3810  120A  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  3811  120B  0086               	movwf	6
  3812  120C  0187               	clrf	7
  3813  120D  0021               	movlb	1	; select bank1
  3814  120E  0826               	movf	??_USBStallHandler^(0+128),w
  3815  120F  0081               	movwf	1
  3816                           
  3817                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  3818  1210  0023               	movlb	3	; select bank3
  3819  1211  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  3820  1212  0086               	movwf	6
  3821  1213  0187               	clrf	7
  3822  1214  1781               	bsf	1,7
  3823  1215                     l6436:	
  3824                           
  3825                           ;usb_device.c: 2222: }
  3826                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
  3827  1215  003D               	movlb	29	; select bank29
  3828  1216  1018               	bcf	24,0	;volatile
  3829  1217                     l6438:	
  3830                           
  3831                           ;usb_device.c: 2224: }
  3832                           ;usb_device.c: 2226: (UIR &= 0xDF);
  3833  1217  30DF               	movlw	223
  3834  1218  0021               	movlb	1	; select bank1
  3835  1219  00A6               	movwf	??_USBStallHandler^(0+128)
  3836  121A  0826               	movf	??_USBStallHandler^(0+128),w
  3837  121B  003D               	movlb	29	; select bank29
  3838  121C  0590               	andwf	16,f	;volatile
  3839  121D  0008               	return
  3840  121E                     __end_of_USBStallHandler:	
  3841                           
  3842                           	psect	text10
  3843  10AA                     __ptext10:	
  3844 ;; *************** function _USBIncrement1msInternalTimers *****************
  3845 ;; Defined at:
  3846 ;;		line 3025 in file "mcc_generated_files/usb/usb_device.c"
  3847 ;; Parameters:    Size  Location     Type
  3848 ;;		None
  3849 ;; Auto vars:     Size  Location     Type
  3850 ;;		None
  3851 ;; Return value:  Size  Location     Type
  3852 ;;                  1    wreg      void 
  3853 ;; Registers used:
  3854 ;;		wreg, status,2, status,0
  3855 ;; Tracked objects:
  3856 ;;		On entry : 0/0
  3857 ;;		On exit  : 0/0
  3858 ;;		Unchanged: 0/0
  3859 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3862 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3863 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3864 ;;Total ram usage:        1 bytes
  3865 ;; Hardware stack levels used:    1
  3866 ;; Hardware stack levels required when called:   10
  3867 ;; This function calls:
  3868 ;;		Nothing
  3869 ;; This function is called by:
  3870 ;;		_USBDeviceTasks
  3871 ;; This function uses a non-reentrant model
  3872 ;;
  3873                           
  3874                           
  3875                           ;psect for function _USBIncrement1msInternalTimers
  3876  10AA                     _USBIncrement1msInternalTimers:	
  3877                           
  3878                           ;usb_device.c: 3033: USB1msTickCount++;
  3879                           
  3880                           ;incstack = 0
  3881                           ; Regs used in _USBIncrement1msInternalTimers: [wreg+status,2+status,0]
  3882  10AA  3001               	movlw	1
  3883  10AB  0023               	movlb	3	; select bank3
  3884  10AC  07C3               	addwf	_USB1msTickCount^(0+384),f	;volatile
  3885  10AD  3000               	movlw	0
  3886  10AE  3DC4               	addwfc	(_USB1msTickCount+1)^(0+384),f	;volatile
  3887  10AF  3000               	movlw	0
  3888  10B0  3DC5               	addwfc	(_USB1msTickCount+2)^(0+384),f	;volatile
  3889  10B1  3000               	movlw	0
  3890  10B2  3DC6               	addwfc	(_USB1msTickCount+3)^(0+384),f	;volatile
  3891                           
  3892                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
  3893  10B3  085F               	movf	_USBBusIsSuspended^(0+384),w	;volatile
  3894  10B4  1D03               	btfss	3,2
  3895  10B5  0008               	return
  3896                           
  3897                           ;usb_device.c: 3035: {
  3898                           ;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
  3899  10B6  3001               	movlw	1
  3900  10B7  0021               	movlb	1	; select bank1
  3901  10B8  00A6               	movwf	??_USBIncrement1msInternalTimers^(0+128)
  3902  10B9  0826               	movf	??_USBIncrement1msInternalTimers^(0+128),w
  3903  10BA  0023               	movlb	3	; select bank3
  3904  10BB  07D6               	addwf	_USBTicksSinceSuspendEnd^(0+384),f	;volatile
  3905                           
  3906                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
  3907  10BC  0856               	movf	_USBTicksSinceSuspendEnd^(0+384),w	;volatile
  3908  10BD  1D03               	btfss	3,2
  3909  10BE  0008               	return
  3910                           
  3911                           ;usb_device.c: 3039: {
  3912                           ;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
  3913  10BF  30FF               	movlw	255
  3914  10C0  0021               	movlb	1	; select bank1
  3915  10C1  00A6               	movwf	??_USBIncrement1msInternalTimers^(0+128)
  3916  10C2  0826               	movf	??_USBIncrement1msInternalTimers^(0+128),w
  3917  10C3  0023               	movlb	3	; select bank3
  3918  10C4  00D6               	movwf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  3919  10C5  0008               	return
  3920  10C6                     __end_of_USBIncrement1msInternalTimers:	
  3921                           
  3922                           	psect	text11
  3923  1628                     __ptext11:	
  3924 ;; *************** function _USBCtrlEPService *****************
  3925 ;; Defined at:
  3926 ;;		line 2372 in file "mcc_generated_files/usb/usb_device.c"
  3927 ;; Parameters:    Size  Location     Type
  3928 ;;		None
  3929 ;; Auto vars:     Size  Location     Type
  3930 ;;		None
  3931 ;; Return value:  Size  Location     Type
  3932 ;;                  1    wreg      void 
  3933 ;; Registers used:
  3934 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3935 ;; Tracked objects:
  3936 ;;		On entry : 0/0
  3937 ;;		On exit  : 0/0
  3938 ;;		Unchanged: 0/0
  3939 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3942 ;;      Temps:          0       0       0       0       0       3       0       0       0       0       0       0       
      +0       0
  3943 ;;      Totals:         0       0       0       0       0       3       0       0       0       0       0       0       
      +0       0
  3944 ;;Total ram usage:        3 bytes
  3945 ;; Hardware stack levels used:    1
  3946 ;; Hardware stack levels required when called:   17
  3947 ;; This function calls:
  3948 ;;		_USBCtrlTrfInHandler
  3949 ;;		_USBCtrlTrfOutHandler
  3950 ;;		_USBCtrlTrfSetupHandler
  3951 ;; This function is called by:
  3952 ;;		_USBDeviceTasks
  3953 ;; This function uses a non-reentrant model
  3954 ;;
  3955                           
  3956                           
  3957                           ;psect for function _USBCtrlEPService
  3958  1628                     _USBCtrlEPService:	
  3959                           
  3960                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
  3961                           
  3962                           ;incstack = 0
  3963 ;; hardware stack exceeded
  3964                           ; Regs used in _USBCtrlEPService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3965  1628  302D               	movlw	45
  3966  1629  0024               	movlb	4	; select bank4
  3967  162A  00BD               	movwf	??_USBCtrlEPService^(0+512)
  3968  162B  083D               	movf	??_USBCtrlEPService^(0+512),w
  3969  162C  0023               	movlb	3	; select bank3
  3970  162D  00DC               	movwf	_USBStatusStageTimeoutCounter^(0+384)	;volatile
  3971                           
  3972                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
  3973  162E  086D               	movf	_USTATcopy^(0+384),w	;volatile
  3974  162F  39FD               	andlw	253
  3975  1630  1D03               	btfss	3,2
  3976  1631  2E78               	goto	l6458
  3977                           
  3978                           ;usb_device.c: 2383: {
  3979                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  3980  1632  366D               	lsrf	_USTATcopy^(0+384),w	;volatile
  3981  1633  393F               	andlw	63
  3982  1634  0024               	movlb	4	; select bank4
  3983  1635  00BD               	movwf	??_USBCtrlEPService^(0+512)
  3984  1636  3001               	movlw	1
  3985  1637                     u6885:	
  3986  1637  35BD               	lslf	??_USBCtrlEPService^(0+512),f
  3987  1638  3EFF               	addlw	-1
  3988  1639  1D03               	skipz
  3989  163A  2E37               	goto	u6885
  3990  163B  353D               	lslf	??_USBCtrlEPService^(0+512),w
  3991  163C  3E20               	addlw	32
  3992  163D  00BE               	movwf	(??_USBCtrlEPService+1)^(0+512)
  3993  163E  083E               	movf	(??_USBCtrlEPService+1)^(0+512),w
  3994  163F  0023               	movlb	3	; select bank3
  3995  1640  00E4               	movwf	_pBDTEntryEP0OutCurrent^(0+384)
  3996                           
  3997                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  3998  1641  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  3999  1642  0021               	movlb	1	; select bank1
  4000  1643  00C8               	movwf	_pBDTEntryEP0OutNext^(0+128)
  4001  1644  39FF               	andlw	255
  4002  1645  1D03               	skipz
  4003  1646  3000               	movlw	0
  4004  1647  00C9               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
  4005                           
  4006                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
  4007  1648  3004               	movlw	4
  4008  1649  0648               	xorwf	_pBDTEntryEP0OutNext^(0+128),w
  4009  164A  00C8               	movwf	_pBDTEntryEP0OutNext^(0+128)
  4010  164B  3000               	movlw	0
  4011  164C  0649               	xorwf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  4012  164D  00C9               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
  4013                           
  4014                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  4015  164E  0023               	movlb	3	; select bank3
  4016  164F  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  4017  1650  0086               	movwf	6
  4018  1651  0187               	clrf	7
  4019  1652  0C01               	rrf	1,w
  4020  1653  0C89               	rrf	9,f
  4021  1654  390F               	andlw	15
  4022  1655  3A0D               	xorlw	13
  4023  1656  1D03               	skipz
  4024  1657  2E75               	goto	l6456
  4025                           
  4026                           ;usb_device.c: 2400: {
  4027                           ;usb_device.c: 2405: __builtin_memcpy((uint8_t*)&SetupPkt,(uint8_t*)((void *)(pBDTEntryE
      +                          P0OutCurrent->ADR)),8);
  4028  1658  3050               	movlw	80
  4029  1659  0086               	movwf	6
  4030  165A  0187               	clrf	7
  4031  165B  0023               	movlb	3	; select bank3
  4032  165C  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  4033  165D  3E02               	addlw	2
  4034  165E  0084               	movwf	4
  4035  165F  0185               	clrf	5
  4036  1660  3F00               	moviw [0]fsr0
  4037  1661  0024               	movlb	4	; select bank4
  4038  1662  00BD               	movwf	??_USBCtrlEPService^(0+512)
  4039  1663  3F01               	moviw [1]fsr0
  4040  1664  00BE               	movwf	(??_USBCtrlEPService^(0+512)+1)
  4041  1665  083D               	movf	??_USBCtrlEPService^(0+512),w
  4042  1666  0084               	movwf	4
  4043  1667  083E               	movf	(??_USBCtrlEPService+1)^(0+512),w
  4044  1668  0085               	movwf	5
  4045  1669  3008               	movlw	8
  4046  166A  00BF               	movwf	(??_USBCtrlEPService+2)^(0+512)
  4047  166B  083F               	movf	(??_USBCtrlEPService+2)^(0+512),w
  4048  166C  1903               	skipnz
  4049  166D  2E72               	goto	l6454
  4050  166E                     u690m0:	
  4051  166E  0012               	moviw fsr0++
  4052  166F  001E               	movwi fsr1++
  4053  1670  0BBF               	decfsz	(??_USBCtrlEPService+2)^(0+512),f
  4054  1671  2E6E               	goto	u690m0
  4055  1672                     l6454:	
  4056                           
  4057                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
  4058  1672  3194  241F         	fcall	_USBCtrlTrfSetupHandler
  4059                           
  4060                           ;usb_device.c: 2409: }
  4061  1674  0008               	return
  4062  1675                     l6456:	
  4063                           
  4064                           ;usb_device.c: 2410: else
  4065                           ;usb_device.c: 2411: {
  4066                           ;usb_device.c: 2413: USBCtrlTrfOutHandler();
  4067  1675  3192  22EA         	fcall	_USBCtrlTrfOutHandler
  4068                           
  4069                           ;usb_device.c: 2414: }
  4070                           ;usb_device.c: 2415: }
  4071  1677  0008               	return
  4072  1678                     l6458:	
  4073                           
  4074                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
  4075  1678  30FD               	movlw	253
  4076  1679  0023               	movlb	3	; select bank3
  4077  167A  056D               	andwf	_USTATcopy^(0+384),w	;volatile
  4078  167B  0024               	movlb	4	; select bank4
  4079  167C  00BD               	movwf	??_USBCtrlEPService^(0+512)
  4080  167D  3004               	movlw	4
  4081  167E  063D               	xorwf	??_USBCtrlEPService^(0+512),w
  4082  167F  1D03               	btfss	3,2
  4083  1680  0008               	return
  4084                           
  4085                           ;usb_device.c: 2417: {
  4086                           ;usb_device.c: 2420: USBCtrlTrfInHandler();
  4087  1681  3189  21D0         	fcall	_USBCtrlTrfInHandler
  4088  1683  0008               	return
  4089  1684                     __end_of_USBCtrlEPService:	
  4090                           
  4091                           	psect	text12
  4092  141F                     __ptext12:	
  4093 ;; *************** function _USBCtrlTrfSetupHandler *****************
  4094 ;; Defined at:
  4095 ;;		line 2465 in file "mcc_generated_files/usb/usb_device.c"
  4096 ;; Parameters:    Size  Location     Type
  4097 ;;		None
  4098 ;; Auto vars:     Size  Location     Type
  4099 ;;		None
  4100 ;; Return value:  Size  Location     Type
  4101 ;;                  1    wreg      void 
  4102 ;; Registers used:
  4103 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4104 ;; Tracked objects:
  4105 ;;		On entry : 0/0
  4106 ;;		On exit  : 0/0
  4107 ;;		Unchanged: 0/0
  4108 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4111 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4112 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4113 ;;Total ram usage:        1 bytes
  4114 ;; Hardware stack levels used:    1
  4115 ;; Hardware stack levels required when called:   16
  4116 ;; This function calls:
  4117 ;;		_USBCheckStdRequest
  4118 ;;		_USBCtrlEPServiceComplete
  4119 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4120 ;; This function is called by:
  4121 ;;		_USBCtrlEPService
  4122 ;; This function uses a non-reentrant model
  4123 ;;
  4124                           
  4125                           
  4126                           ;psect for function _USBCtrlTrfSetupHandler
  4127  141F                     _USBCtrlTrfSetupHandler:	
  4128                           
  4129                           ;usb_device.c: 2470: shortPacketStatus = 0;
  4130                           
  4131                           ;incstack = 0
  4132 ;; hardware stack exceeded
  4133                           ; Regs used in _USBCtrlTrfSetupHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4134  141F  0023               	movlb	3	; select bank3
  4135  1420  01E3               	clrf	_shortPacketStatus^(0+384)	;volatile
  4136                           
  4137                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
  4138  1421  01DB               	clrf	_USBDeferStatusStagePacket^(0+384)	;volatile
  4139                           
  4140                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
  4141  1422  01D8               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  4142                           
  4143                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
  4144  1423  01D7               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  4145                           
  4146                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
  4147  1424  01DD               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  4148                           
  4149                           ;usb_device.c: 2475: controlTransferState = 0;
  4150  1425  01E2               	clrf	_controlTransferState^(0+384)	;volatile
  4151                           
  4152                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  4153  1426  307F               	movlw	127
  4154  1427  0021               	movlb	1	; select bank1
  4155  1428  00C2               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
  4156  1429  0023               	movlb	3	; select bank3
  4157  142A  0837               	movf	_pBDTEntryIn^(0+384),w
  4158  142B  0086               	movwf	6
  4159  142C  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  4160  142D  0087               	movwf	7
  4161  142E  0021               	movlb	1	; select bank1
  4162  142F  0842               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
  4163  1430  0581               	andwf	1,f
  4164                           
  4165                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  4166  1431  3004               	movlw	4
  4167  1432  0023               	movlb	3	; select bank3
  4168  1433  0637               	xorwf	_pBDTEntryIn^(0+384),w
  4169  1434  00B7               	movwf	_pBDTEntryIn^(0+384)
  4170  1435  3000               	movlw	0
  4171  1436  0638               	xorwf	(_pBDTEntryIn+1)^(0+384),w
  4172  1437  00B8               	movwf	(_pBDTEntryIn+1)^(0+384)
  4173                           
  4174                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  4175  1438  307F               	movlw	127
  4176  1439  0021               	movlb	1	; select bank1
  4177  143A  00C2               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
  4178  143B  0023               	movlb	3	; select bank3
  4179  143C  0837               	movf	_pBDTEntryIn^(0+384),w
  4180  143D  0086               	movwf	6
  4181  143E  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  4182  143F  0087               	movwf	7
  4183  1440  0021               	movlb	1	; select bank1
  4184  1441  0842               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
  4185  1442  0581               	andwf	1,f
  4186                           
  4187                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  4188  1443  3004               	movlw	4
  4189  1444  0023               	movlb	3	; select bank3
  4190  1445  0637               	xorwf	_pBDTEntryIn^(0+384),w
  4191  1446  00B7               	movwf	_pBDTEntryIn^(0+384)
  4192  1447  3000               	movlw	0
  4193  1448  0638               	xorwf	(_pBDTEntryIn+1)^(0+384),w
  4194  1449  00B8               	movwf	(_pBDTEntryIn+1)^(0+384)
  4195                           
  4196                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  4197  144A  307F               	movlw	127
  4198  144B  0021               	movlb	1	; select bank1
  4199  144C  00C2               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
  4200  144D  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  4201  144E  0086               	movwf	6
  4202  144F  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  4203  1450  0087               	movwf	7
  4204  1451  0842               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
  4205  1452  0581               	andwf	1,f
  4206                           
  4207                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
  4208  1453  01C5               	clrf	(_inPipes^(0+128)+2)	;volatile
  4209                           
  4210                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
  4211  1454  01C6               	clrf	(_inPipes^(0+128)+3)	;volatile
  4212  1455  01C7               	clrf	((_inPipes+1)^(0+128)+3)	;volatile
  4213                           
  4214                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
  4215  1456  0023               	movlb	3	; select bank3
  4216  1457  01B2               	clrf	(_outPipes^(0+384)+2)	;volatile
  4217                           
  4218                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
  4219  1458  01B3               	clrf	(_outPipes^(0+384)+3)	;volatile
  4220  1459  01B4               	clrf	((_outPipes+1)^(0+384)+3)	;volatile
  4221                           
  4222                           ;usb_device.c: 2500: USBCheckStdRequest();
  4223  145A  3197  279F  3194   	fcall	_USBCheckStdRequest
  4224                           
  4225                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  4226  145D  3000               	movlw	0
  4227  145E  0021               	movlb	1	; select bank1
  4228  145F  00B5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
  4229  1460  3003               	movlw	3
  4230  1461  00B4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  4231  1462  3000               	movlw	0
  4232  1463  00B6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  4233  1464  3000               	movlw	0
  4234  1465  00B7               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  4235  1466  3000               	movlw	0
  4236  1467  00B8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  4237  1468  00B9               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
  4238  1469  3192  224E  3194   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4239                           
  4240                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
  4241  146C  3187  276A         	fcall	_USBCtrlEPServiceComplete
  4242  146E  0008               	return
  4243  146F                     __end_of_USBCtrlTrfSetupHandler:	
  4244                           
  4245                           	psect	text13
  4246  076A                     __ptext13:	
  4247 ;; *************** function _USBCtrlEPServiceComplete *****************
  4248 ;; Defined at:
  4249 ;;		line 1616 in file "mcc_generated_files/usb/usb_device.c"
  4250 ;; Parameters:    Size  Location     Type
  4251 ;;		None
  4252 ;; Auto vars:     Size  Location     Type
  4253 ;;		None
  4254 ;; Return value:  Size  Location     Type
  4255 ;;                  1    wreg      void 
  4256 ;; Registers used:
  4257 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4258 ;; Tracked objects:
  4259 ;;		On entry : 0/0
  4260 ;;		On exit  : 0/0
  4261 ;;		Unchanged: 0/0
  4262 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4265 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4266 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4267 ;;Total ram usage:        2 bytes
  4268 ;; Hardware stack levels used:    1
  4269 ;; Hardware stack levels required when called:   12
  4270 ;; This function calls:
  4271 ;;		_USBCtrlEPAllowDataStage
  4272 ;;		_USBCtrlEPAllowStatusStage
  4273 ;; This function is called by:
  4274 ;;		_USBCtrlTrfSetupHandler
  4275 ;; This function uses a non-reentrant model
  4276 ;;
  4277                           
  4278                           
  4279                           ;psect for function _USBCtrlEPServiceComplete
  4280  076A                     _USBCtrlEPServiceComplete:	
  4281                           
  4282                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
  4283                           
  4284                           ;incstack = 0
  4285                           ; Regs used in _USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4286  076A  003D               	movlb	29	; select bank29
  4287  076B  120E               	bcf	14,4	;volatile
  4288                           
  4289                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
  4290  076C  0021               	movlb	1	; select bank1
  4291  076D  1BC5               	btfsc	(_inPipes^(0+128)+2),7	;volatile
  4292  076E  2FB3               	goto	l449
  4293                           
  4294                           ;usb_device.c: 1629: {
  4295                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
  4296  076F  0023               	movlb	3	; select bank3
  4297  0770  1FB2               	btfss	(_outPipes^(0+384)+2),7	;volatile
  4298  0771  2F81               	goto	l6010
  4299                           
  4300                           ;usb_device.c: 1631: {
  4301                           ;usb_device.c: 1632: controlTransferState = 2;
  4302  0772  3002               	movlw	2
  4303  0773  0021               	movlb	1	; select bank1
  4304  0774  00AB               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  4305  0775  082B               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  4306  0776  0023               	movlb	3	; select bank3
  4307  0777  00E2               	movwf	_controlTransferState^(0+384)	;volatile
  4308                           
  4309                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
  4310  0778  0857               	movf	_USBDeferOUTDataStagePackets^(0+384),w	;volatile
  4311  0779  1D03               	btfss	3,2
  4312  077A  2F7D               	goto	l6006
  4313                           
  4314                           ;usb_device.c: 1644: {
  4315                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
  4316  077B  3196  26E0         	fcall	_USBCtrlEPAllowDataStage
  4317  077D                     l6006:	
  4318                           
  4319                           ;usb_device.c: 1646: }
  4320                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
  4321  077D  0023               	movlb	3	; select bank3
  4322  077E  01D9               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  4323                           
  4324                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
  4325  077F  01DA               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  4326                           
  4327                           ;usb_device.c: 1652: }
  4328  0780  0008               	return
  4329  0781                     l6010:	
  4330                           
  4331                           ;usb_device.c: 1653: else
  4332                           ;usb_device.c: 1654: {
  4333                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
  4334  0781  0021               	movlb	1	; select bank1
  4335  0782  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  4336  0783  3E01               	addlw	1
  4337  0784  00AB               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  4338  0785  3000               	movlw	0
  4339  0786  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  4340  0787  00AC               	movwf	(??_USBCtrlEPServiceComplete+1)^(0+128)
  4341  0788  082B               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  4342  0789  0086               	movwf	6
  4343  078A  082C               	movf	(??_USBCtrlEPServiceComplete+1)^(0+128),w
  4344  078B  0087               	movwf	7
  4345  078C  3008               	movlw	8
  4346  078D  0081               	movwf	1
  4347                           
  4348                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  4349  078E  3050               	movlw	80
  4350  078F  00AB               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  4351  0790  3000               	movlw	0
  4352  0791  00AC               	movwf	(??_USBCtrlEPServiceComplete^(0+128)+1)
  4353  0792  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  4354  0793  0086               	movwf	6
  4355  0794  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  4356  0795  0087               	movwf	7
  4357  0796  3142               	addfsr 1,2
  4358  0797  082B               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  4359  0798  3FC0               	movwi [0]fsr1
  4360  0799  082C               	movf	(??_USBCtrlEPServiceComplete^(0+128)+1),w
  4361  079A  3FC1               	movwi [1]fsr1
  4362                           
  4363                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  4364  079B  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  4365  079C  0086               	movwf	6
  4366  079D  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  4367  079E  0087               	movwf	7
  4368  079F  300C               	movlw	12
  4369  07A0  0081               	movwf	1
  4370                           
  4371                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  4372  07A1  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  4373  07A2  0086               	movwf	6
  4374  07A3  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  4375  07A4  0087               	movwf	7
  4376  07A5  1781               	bsf	1,7
  4377                           
  4378                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
  4379  07A6  0023               	movlb	3	; select bank3
  4380  07A7  0837               	movf	_pBDTEntryIn^(0+384),w
  4381  07A8  0086               	movwf	6
  4382  07A9  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  4383  07AA  0087               	movwf	7
  4384  07AB  3004               	movlw	4
  4385  07AC  0081               	movwf	1
  4386                           
  4387                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
  4388  07AD  0837               	movf	_pBDTEntryIn^(0+384),w
  4389  07AE  0086               	movwf	6
  4390  07AF  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  4391  07B0  0087               	movwf	7
  4392  07B1  1781               	bsf	1,7
  4393                           
  4394                           ;usb_device.c: 1665: }
  4395                           ;usb_device.c: 1666: }
  4396  07B2  0008               	return
  4397  07B3                     l449:	
  4398                           
  4399                           ;usb_device.c: 1667: else
  4400                           ;usb_device.c: 1668: {
  4401                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
  4402  07B3  0020               	movlb	0	; select bank0
  4403  07B4  1FD0               	btfss	80,7	;volatile
  4404  07B5  2FCB               	goto	l6036
  4405                           
  4406                           ;usb_device.c: 1670: {
  4407                           ;usb_device.c: 1671: controlTransferState = 1;
  4408  07B6  3001               	movlw	1
  4409  07B7  0021               	movlb	1	; select bank1
  4410  07B8  00AB               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  4411  07B9  082B               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  4412  07BA  0023               	movlb	3	; select bank3
  4413  07BB  00E2               	movwf	_controlTransferState^(0+384)	;volatile
  4414                           
  4415                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
  4416  07BC  0858               	movf	_USBDeferINDataStagePackets^(0+384),w	;volatile
  4417  07BD  1D03               	btfss	3,2
  4418  07BE  2FC2               	goto	l6028
  4419                           
  4420                           ;usb_device.c: 1686: {
  4421                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
  4422  07BF  3196  26E0  3187   	fcall	_USBCtrlEPAllowDataStage
  4423  07C2                     l6028:	
  4424                           
  4425                           ;usb_device.c: 1688: }
  4426                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
  4427  07C2  0023               	movlb	3	; select bank3
  4428  07C3  01D9               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  4429                           
  4430                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
  4431  07C4  01DA               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  4432                           
  4433                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
  4434  07C5  085B               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
  4435  07C6  1D03               	btfss	3,2
  4436  07C7  0008               	return
  4437                           
  4438                           ;usb_device.c: 1713: {
  4439                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
  4440  07C8  318B  232F         	fcall	_USBCtrlEPAllowStatusStage
  4441                           
  4442                           ;usb_device.c: 1715: }
  4443                           ;usb_device.c: 1716: }
  4444  07CA  0008               	return
  4445  07CB                     l6036:	
  4446                           
  4447                           ;usb_device.c: 1717: else
  4448                           ;usb_device.c: 1718: {
  4449                           ;usb_device.c: 1729: controlTransferState = 2;
  4450  07CB  3002               	movlw	2
  4451  07CC  0021               	movlb	1	; select bank1
  4452  07CD  00AB               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  4453  07CE  082B               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  4454  07CF  0023               	movlb	3	; select bank3
  4455  07D0  00E2               	movwf	_controlTransferState^(0+384)	;volatile
  4456                           
  4457                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
  4458  07D1  0021               	movlb	1	; select bank1
  4459  07D2  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  4460  07D3  3E01               	addlw	1
  4461  07D4  00AB               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  4462  07D5  3000               	movlw	0
  4463  07D6  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  4464  07D7  00AC               	movwf	(??_USBCtrlEPServiceComplete+1)^(0+128)
  4465  07D8  082B               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  4466  07D9  0086               	movwf	6
  4467  07DA  082C               	movf	(??_USBCtrlEPServiceComplete+1)^(0+128),w
  4468  07DB  0087               	movwf	7
  4469  07DC  3008               	movlw	8
  4470  07DD  0081               	movwf	1
  4471                           
  4472                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  4473  07DE  3050               	movlw	80
  4474  07DF  00AB               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  4475  07E0  3000               	movlw	0
  4476  07E1  00AC               	movwf	(??_USBCtrlEPServiceComplete^(0+128)+1)
  4477  07E2  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  4478  07E3  0086               	movwf	6
  4479  07E4  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  4480  07E5  0087               	movwf	7
  4481  07E6  3142               	addfsr 1,2
  4482  07E7  082B               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  4483  07E8  3FC0               	movwi [0]fsr1
  4484  07E9  082C               	movf	(??_USBCtrlEPServiceComplete^(0+128)+1),w
  4485  07EA  3FC1               	movwi [1]fsr1
  4486                           
  4487                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  4488  07EB  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  4489  07EC  0086               	movwf	6
  4490  07ED  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  4491  07EE  0087               	movwf	7
  4492  07EF  3004               	movlw	4
  4493  07F0  0081               	movwf	1
  4494                           
  4495                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  4496  07F1  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  4497  07F2  0086               	movwf	6
  4498  07F3  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  4499  07F4  0087               	movwf	7
  4500  07F5  1781               	bsf	1,7
  4501                           
  4502                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
  4503  07F6  0023               	movlb	3	; select bank3
  4504  07F7  01D9               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  4505                           
  4506                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
  4507  07F8  01DA               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  4508                           
  4509                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
  4510  07F9  085B               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
  4511  07FA  1D03               	btfss	3,2
  4512  07FB  0008               	return
  4513                           
  4514                           ;usb_device.c: 1741: {
  4515                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
  4516  07FC  318B  232F         	fcall	_USBCtrlEPAllowStatusStage
  4517  07FE  0008               	return
  4518  07FF                     __end_of_USBCtrlEPServiceComplete:	
  4519                           
  4520                           	psect	text14
  4521  16E0                     __ptext14:	
  4522 ;; *************** function _USBCtrlEPAllowDataStage *****************
  4523 ;; Defined at:
  4524 ;;		line 1488 in file "mcc_generated_files/usb/usb_device.c"
  4525 ;; Parameters:    Size  Location     Type
  4526 ;;		None
  4527 ;; Auto vars:     Size  Location     Type
  4528 ;;		None
  4529 ;; Return value:  Size  Location     Type
  4530 ;;                  1    wreg      void 
  4531 ;; Registers used:
  4532 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4533 ;; Tracked objects:
  4534 ;;		On entry : 0/0
  4535 ;;		On exit  : 0/0
  4536 ;;		Unchanged: 0/0
  4537 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4540 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4541 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4542 ;;Total ram usage:        2 bytes
  4543 ;; Hardware stack levels used:    1
  4544 ;; Hardware stack levels required when called:   11
  4545 ;; This function calls:
  4546 ;;		_USBCtrlTrfTxService
  4547 ;; This function is called by:
  4548 ;;		_USBCtrlEPServiceComplete
  4549 ;; This function uses a non-reentrant model
  4550 ;;
  4551                           
  4552                           
  4553                           ;psect for function _USBCtrlEPAllowDataStage
  4554  16E0                     _USBCtrlEPAllowDataStage:	
  4555                           
  4556                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
  4557                           
  4558                           ;incstack = 0
  4559                           ; Regs used in _USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4560  16E0  0023               	movlb	3	; select bank3
  4561  16E1  01D8               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  4562                           
  4563                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
  4564  16E2  01D7               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  4565                           
  4566                           ;usb_device.c: 1493: if(controlTransferState == 2)
  4567  16E3  3002               	movlw	2
  4568  16E4  0662               	xorwf	_controlTransferState^(0+384),w	;volatile
  4569  16E5  1D03               	btfss	3,2
  4570  16E6  2F0D               	goto	l5788
  4571                           
  4572                           ;usb_device.c: 1494: {
  4573                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
  4574  16E7  0021               	movlb	1	; select bank1
  4575  16E8  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  4576  16E9  3E01               	addlw	1
  4577  16EA  00A9               	movwf	??_USBCtrlEPAllowDataStage^(0+128)
  4578  16EB  3000               	movlw	0
  4579  16EC  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  4580  16ED  00AA               	movwf	(??_USBCtrlEPAllowDataStage+1)^(0+128)
  4581  16EE  0829               	movf	??_USBCtrlEPAllowDataStage^(0+128),w
  4582  16EF  0086               	movwf	6
  4583  16F0  082A               	movf	(??_USBCtrlEPAllowDataStage+1)^(0+128),w
  4584  16F1  0087               	movwf	7
  4585  16F2  3008               	movlw	8
  4586  16F3  0081               	movwf	1
  4587                           
  4588                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  4589  16F4  3058               	movlw	88
  4590  16F5  00A9               	movwf	??_USBCtrlEPAllowDataStage^(0+128)
  4591  16F6  3000               	movlw	0
  4592  16F7  00AA               	movwf	(??_USBCtrlEPAllowDataStage^(0+128)+1)
  4593  16F8  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  4594  16F9  0086               	movwf	6
  4595  16FA  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  4596  16FB  0087               	movwf	7
  4597  16FC  3142               	addfsr 1,2
  4598  16FD  0829               	movf	??_USBCtrlEPAllowDataStage^(0+128),w
  4599  16FE  3FC0               	movwi [0]fsr1
  4600  16FF  082A               	movf	(??_USBCtrlEPAllowDataStage^(0+128)+1),w
  4601  1700  3FC1               	movwi [1]fsr1
  4602                           
  4603                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  4604  1701  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  4605  1702  0086               	movwf	6
  4606  1703  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  4607  1704  0087               	movwf	7
  4608  1705  3048               	movlw	72
  4609  1706  0081               	movwf	1
  4610                           
  4611                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  4612  1707  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  4613  1708  0086               	movwf	6
  4614  1709  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  4615  170A  0087               	movwf	7
  4616  170B  1781               	bsf	1,7
  4617                           
  4618                           ;usb_device.c: 1500: }
  4619  170C  0008               	return
  4620  170D                     l5788:	
  4621                           
  4622                           ;usb_device.c: 1501: else
  4623                           ;usb_device.c: 1502: {
  4624                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  4625  170D  0021               	movlb	1	; select bank1
  4626  170E  0847               	movf	((_inPipes+1)^(0+128)+3),w	;volatile
  4627  170F  0020               	movlb	0	; select bank0
  4628  1710  0257               	subwf	87,w	;volatile
  4629  1711  1D03               	skipz
  4630  1712  2F17               	goto	u6045
  4631  1713  0021               	movlb	1	; select bank1
  4632  1714  0846               	movf	(_inPipes^(0+128)+3),w	;volatile
  4633  1715  0020               	movlb	0	; select bank0
  4634  1716  0256               	subwf	86,w	;volatile
  4635  1717                     u6045:	
  4636  1717  1803               	skipnc
  4637  1718  2F20               	goto	l5792
  4638                           
  4639                           ;usb_device.c: 1506: {
  4640                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
  4641  1719  0857               	movf	87,w	;volatile
  4642  171A  0021               	movlb	1	; select bank1
  4643  171B  00C7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  4644  171C  0020               	movlb	0	; select bank0
  4645  171D  0856               	movf	86,w	;volatile
  4646  171E  0021               	movlb	1	; select bank1
  4647  171F  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
  4648  1720                     l5792:	
  4649                           
  4650                           ;usb_device.c: 1508: }
  4651                           ;usb_device.c: 1509: USBCtrlTrfTxService();
  4652  1720  318A  22B5         	fcall	_USBCtrlTrfTxService
  4653                           
  4654                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  4655  1722  3058               	movlw	88
  4656  1723  0021               	movlb	1	; select bank1
  4657  1724  00A9               	movwf	??_USBCtrlEPAllowDataStage^(0+128)
  4658  1725  3000               	movlw	0
  4659  1726  00AA               	movwf	(??_USBCtrlEPAllowDataStage^(0+128)+1)
  4660  1727  0023               	movlb	3	; select bank3
  4661  1728  0837               	movf	_pBDTEntryIn^(0+384),w
  4662  1729  0086               	movwf	6
  4663  172A  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  4664  172B  0087               	movwf	7
  4665  172C  3142               	addfsr 1,2
  4666  172D  0021               	movlb	1	; select bank1
  4667  172E  0829               	movf	??_USBCtrlEPAllowDataStage^(0+128),w
  4668  172F  3FC0               	movwi [0]fsr1
  4669  1730  082A               	movf	(??_USBCtrlEPAllowDataStage^(0+128)+1),w
  4670  1731  3FC1               	movwi [1]fsr1
  4671                           
  4672                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  4673  1732  0023               	movlb	3	; select bank3
  4674  1733  0837               	movf	_pBDTEntryIn^(0+384),w
  4675  1734  0086               	movwf	6
  4676  1735  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  4677  1736  0087               	movwf	7
  4678  1737  3048               	movlw	72
  4679  1738  0081               	movwf	1
  4680                           
  4681                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
  4682  1739  0837               	movf	_pBDTEntryIn^(0+384),w
  4683  173A  0086               	movwf	6
  4684  173B  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  4685  173C  0087               	movwf	7
  4686  173D  1781               	bsf	1,7
  4687  173E  0008               	return
  4688  173F                     __end_of_USBCtrlEPAllowDataStage:	
  4689                           
  4690                           	psect	text15
  4691  179F                     __ptext15:	
  4692 ;; *************** function _USBCheckStdRequest *****************
  4693 ;; Defined at:
  4694 ;;		line 2686 in file "mcc_generated_files/usb/usb_device.c"
  4695 ;; Parameters:    Size  Location     Type
  4696 ;;		None
  4697 ;; Auto vars:     Size  Location     Type
  4698 ;;		None
  4699 ;; Return value:  Size  Location     Type
  4700 ;;                  1    wreg      void 
  4701 ;; Registers used:
  4702 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4703 ;; Tracked objects:
  4704 ;;		On entry : 0/0
  4705 ;;		On exit  : 0/0
  4706 ;;		Unchanged: 0/0
  4707 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4710 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4711 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4712 ;;Total ram usage:        1 bytes
  4713 ;; Hardware stack levels used:    1
  4714 ;; Hardware stack levels required when called:   15
  4715 ;; This function calls:
  4716 ;;		_USBStdFeatureReqHandler
  4717 ;;		_USBStdGetDscHandler
  4718 ;;		_USBStdGetStatusHandler
  4719 ;;		_USBStdSetCfgHandler
  4720 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4721 ;; This function is called by:
  4722 ;;		_USBCtrlTrfSetupHandler
  4723 ;; This function uses a non-reentrant model
  4724 ;;
  4725                           
  4726                           
  4727                           ;psect for function _USBCheckStdRequest
  4728  179F                     _USBCheckStdRequest:	
  4729                           
  4730                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
  4731                           
  4732                           ;incstack = 0
  4733 ;; hardware stack exceeded
  4734                           ; Regs used in _USBCheckStdRequest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4735  179F  0020               	movlb	0	; select bank0
  4736  17A0  0E50               	swapf	80,w	;volatile
  4737  17A1  0C89               	rrf	9,f
  4738  17A2  3903               	andlw	3
  4739  17A3  3A00               	xorlw	0
  4740  17A4  1D03               	btfss	3,2
  4741  17A5  0008               	return
  4742  17A6  2FF4               	goto	l6130
  4743  17A7                     l576:	
  4744                           ;usb_device.c: 2691: {
  4745                           ;usb_device.c: 2692: case 5:
  4746                           
  4747                           ;usb_device.c: 2690: switch(SetupPkt.bRequest)
  4748                           
  4749                           
  4750                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
  4751  17A7  0021               	movlb	1	; select bank1
  4752  17A8  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  4753                           
  4754                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
  4755  17A9  3008               	movlw	8
  4756  17AA  00C1               	movwf	??_USBCheckStdRequest^(0+128)
  4757  17AB  0841               	movf	??_USBCheckStdRequest^(0+128),w
  4758  17AC  0023               	movlb	3	; select bank3
  4759  17AD  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
  4760                           
  4761                           ;usb_device.c: 2696: break;
  4762  17AE  0008               	return
  4763  17AF                     l6100:	
  4764                           ;usb_device.c: 2697: case 6:
  4765                           
  4766                           
  4767                           ;usb_device.c: 2698: USBStdGetDscHandler();
  4768  17AF  318C  2428         	fcall	_USBStdGetDscHandler
  4769                           
  4770                           ;usb_device.c: 2699: break;
  4771  17B1  0008               	return
  4772  17B2                     l6102:	
  4773                           ;usb_device.c: 2700: case 9:
  4774                           
  4775                           
  4776                           ;usb_device.c: 2701: USBStdSetCfgHandler();
  4777  17B2  318E  263D         	fcall	_USBStdSetCfgHandler
  4778                           
  4779                           ;usb_device.c: 2702: break;
  4780  17B4  0008               	return
  4781  17B5                     l6104:	
  4782                           ;usb_device.c: 2703: case 8:
  4783                           
  4784                           
  4785                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  4786  17B5  30EE               	movlw	low _USBActiveConfiguration
  4787  17B6  0021               	movlb	1	; select bank1
  4788  17B7  00C3               	movwf	_inPipes^(0+128)	;volatile
  4789  17B8  3001               	movlw	high _USBActiveConfiguration
  4790  17B9  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
  4791                           
  4792                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  4793  17BA  1445               	bsf	(_inPipes^(0+128)+2),0	;volatile
  4794                           
  4795                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
  4796  17BB  3001               	movlw	1
  4797  17BC  00C1               	movwf	??_USBCheckStdRequest^(0+128)
  4798  17BD  0841               	movf	??_USBCheckStdRequest^(0+128),w
  4799  17BE  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
  4800                           
  4801                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
  4802  17BF  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  4803                           
  4804                           ;usb_device.c: 2708: break;
  4805  17C0  0008               	return
  4806  17C1                     l6112:	
  4807                           ;usb_device.c: 2709: case 0:
  4808                           
  4809                           
  4810                           ;usb_device.c: 2710: USBStdGetStatusHandler();
  4811  17C1  3195  2517         	fcall	_USBStdGetStatusHandler
  4812                           
  4813                           ;usb_device.c: 2711: break;
  4814  17C3  0008               	return
  4815  17C4                     l6114:	
  4816                           ;usb_device.c: 2712: case 1:
  4817                           
  4818                           
  4819                           ;usb_device.c: 2713: case 3:
  4820                           ;usb_device.c: 2714: USBStdFeatureReqHandler();
  4821  17C4  3180  2051         	fcall	_USBStdFeatureReqHandler
  4822                           
  4823                           ;usb_device.c: 2715: break;
  4824  17C6  0008               	return
  4825  17C7                     l6116:	
  4826                           ;usb_device.c: 2716: case 10:
  4827                           
  4828                           
  4829                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  4830  17C7  0020               	movlb	0	; select bank0
  4831  17C8  0854               	movf	84,w	;volatile
  4832  17C9  3EEB               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
  4833  17CA  0021               	movlb	1	; select bank1
  4834  17CB  00C3               	movwf	_inPipes^(0+128)	;volatile
  4835  17CC  3001               	movlw	1
  4836  17CD  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
  4837                           
  4838                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  4839  17CE  1445               	bsf	(_inPipes^(0+128)+2),0	;volatile
  4840                           
  4841                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
  4842  17CF  3001               	movlw	1
  4843  17D0  00C1               	movwf	??_USBCheckStdRequest^(0+128)
  4844  17D1  0841               	movf	??_USBCheckStdRequest^(0+128),w
  4845  17D2  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
  4846                           
  4847                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
  4848  17D3  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  4849                           
  4850                           ;usb_device.c: 2721: break;
  4851  17D4  0008               	return
  4852  17D5                     l585:	
  4853                           ;usb_device.c: 2722: case 11:
  4854                           
  4855                           
  4856                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
  4857  17D5  0021               	movlb	1	; select bank1
  4858  17D6  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  4859                           
  4860                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  4861  17D7  0020               	movlb	0	; select bank0
  4862  17D8  0852               	movf	82,w	;volatile
  4863  17D9  0021               	movlb	1	; select bank1
  4864  17DA  00C1               	movwf	??_USBCheckStdRequest^(0+128)
  4865  17DB  0020               	movlb	0	; select bank0
  4866  17DC  0854               	movf	84,w	;volatile
  4867  17DD  3EEB               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
  4868  17DE  0086               	movwf	6
  4869  17DF  3001               	movlw	1	; select bank3/4
  4870  17E0  0087               	movwf	7
  4871  17E1  0021               	movlb	1	; select bank1
  4872  17E2  0841               	movf	??_USBCheckStdRequest^(0+128),w
  4873  17E3  0081               	movwf	1
  4874                           
  4875                           ;usb_device.c: 2725: break;
  4876  17E4  0008               	return
  4877  17E5                     l6126:	
  4878                           ;usb_device.c: 2726: case 7:
  4879                           
  4880                           
  4881                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  4882  17E5  3000               	movlw	0
  4883  17E6  0021               	movlb	1	; select bank1
  4884  17E7  00B5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
  4885  17E8  3002               	movlw	2
  4886  17E9  00B4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  4887  17EA  3000               	movlw	0
  4888  17EB  00B6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  4889  17EC  3000               	movlw	0
  4890  17ED  00B7               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  4891  17EE  3000               	movlw	0
  4892  17EF  00B8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  4893  17F0  00B9               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
  4894  17F1  3192  224E         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4895                           
  4896                           ;usb_device.c: 2732: }
  4897                           
  4898                           ;usb_device.c: 2731: break;
  4899                           
  4900                           ;usb_device.c: 2730: default:
  4901                           
  4902                           ;usb_device.c: 2729: case 12:
  4903                           
  4904                           ;usb_device.c: 2728: break;
  4905  17F3  0008               	return
  4906  17F4                     l6130:	
  4907  17F4  0020               	movlb	0	; select bank0
  4908  17F5  0851               	movf	81,w	;volatile
  4909                           
  4910                           ; Switch size 1, requested type "space"
  4911                           ; Number of cases is 11, Range of values is 0 to 12
  4912                           ; switch strategies available:
  4913                           ; Name         Instructions Cycles
  4914                           ; direct_byte           32     6 (fixed)
  4915                           ; simple_byte           34    18 (average)
  4916                           ; jumptable            260     6 (fixed)
  4917                           ;	Chosen strategy is direct_byte
  4918  17F6  0084               	movwf	4
  4919  17F7  300D               	movlw	13
  4920  17F8  0204               	subwf	4,w
  4921  17F9  1803               	skipnc
  4922  17FA  0008               	return
  4923  17FB  3190               	movlp	high S6734
  4924  17FC  3504               	lslf	4,w
  4925  17FD  3E00               	addlw	low S6734
  4926  17FE  0082               	movwf	2
  4927  17FF                     l574:	
  4928  17FF  0008               	return
  4929  1800                     __end_of_USBCheckStdRequest:	
  4930                           
  4931                           	psect	swtext1
  4932  1000                     __pswtext1:	
  4933  1000                     S6734:	
  4934  1000  3197  2FC1         	ljmp	l6112
  4935  1002  3197  2FC4         	ljmp	l6114
  4936  1004  3197  2FFF         	ljmp	l574
  4937  1006  3197  2FC4         	ljmp	l6114
  4938  1008  3197  2FFF         	ljmp	l574
  4939  100A  3197  2FA7         	ljmp	l576
  4940  100C  3197  2FAF         	ljmp	l6100
  4941  100E  3197  2FE5         	ljmp	l6126
  4942  1010  3197  2FB5         	ljmp	l6104
  4943  1012  3197  2FB2         	ljmp	l6102
  4944  1014  3197  2FC7         	ljmp	l6116
  4945  1016  3197  2FD5         	ljmp	l585
  4946  1018  3197  2FFF         	ljmp	l574
  4947                           
  4948                           	psect	text16
  4949  0E3D                     __ptext16:	
  4950 ;; *************** function _USBStdSetCfgHandler *****************
  4951 ;; Defined at:
  4952 ;;		line 1968 in file "mcc_generated_files/usb/usb_device.c"
  4953 ;; Parameters:    Size  Location     Type
  4954 ;;		None
  4955 ;; Auto vars:     Size  Location     Type
  4956 ;;  p               2   27[BANK1 ] PTR unsigned char 
  4957 ;;		 -> UEP1(1), 
  4958 ;;  i               1   29[BANK1 ] unsigned char 
  4959 ;;  i               1   30[BANK1 ] unsigned char 
  4960 ;; Return value:  Size  Location     Type
  4961 ;;                  1    wreg      void 
  4962 ;; Registers used:
  4963 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4964 ;; Tracked objects:
  4965 ;;		On entry : 0/0
  4966 ;;		On exit  : 0/0
  4967 ;;		Unchanged: 0/0
  4968 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4970 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4971 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4972 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  4973 ;;Total ram usage:        5 bytes
  4974 ;; Hardware stack levels used:    1
  4975 ;; Hardware stack levels required when called:   14
  4976 ;; This function calls:
  4977 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4978 ;;		_memset
  4979 ;; This function is called by:
  4980 ;;		_USBCheckStdRequest
  4981 ;; This function uses a non-reentrant model
  4982 ;;
  4983                           
  4984                           
  4985                           ;psect for function _USBStdSetCfgHandler
  4986  0E3D                     _USBStdSetCfgHandler:	
  4987                           
  4988                           ;usb_device.c: 1970: uint8_t i;
  4989                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
  4990                           
  4991                           ;incstack = 0
  4992 ;; hardware stack exceeded
  4993                           ; Regs used in _USBStdSetCfgHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4994  0E3D  0021               	movlb	1	; select bank1
  4995  0E3E  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  4996                           
  4997                           ;usb_device.c: 1976: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 
      +                          0; };
  4998  0E3F  300E               	movlw	14
  4999  0E40  00BC               	movwf	(USBStdSetCfgHandler@p+1)^(0+128)
  5000  0E41  3099               	movlw	153
  5001  0E42  00BB               	movwf	USBStdSetCfgHandler@p^(0+128)
  5002  0E43  01BD               	clrf	USBStdSetCfgHandler@i_2095^(0+128)
  5003  0E44  3002               	movlw	2
  5004  0E45  023D               	subwf	USBStdSetCfgHandler@i_2095^(0+128),w
  5005  0E46  1803               	btfsc	3,0
  5006  0E47  2E59               	goto	l5816
  5007  0E48                     l5808:	
  5008  0E48  083B               	movf	USBStdSetCfgHandler@p^(0+128),w
  5009  0E49  0086               	movwf	6
  5010  0E4A  083C               	movf	(USBStdSetCfgHandler@p+1)^(0+128),w
  5011  0E4B  0087               	movwf	7
  5012  0E4C  0181               	clrf	1
  5013  0E4D  3001               	movlw	1
  5014  0E4E  07BB               	addwf	USBStdSetCfgHandler@p^(0+128),f
  5015  0E4F  3000               	movlw	0
  5016  0E50  3DBC               	addwfc	(USBStdSetCfgHandler@p+1)^(0+128),f
  5017  0E51  3001               	movlw	1
  5018  0E52  00BA               	movwf	??_USBStdSetCfgHandler^(0+128)
  5019  0E53  083A               	movf	??_USBStdSetCfgHandler^(0+128),w
  5020  0E54  07BD               	addwf	USBStdSetCfgHandler@i_2095^(0+128),f
  5021  0E55  3002               	movlw	2
  5022  0E56  023D               	subwf	USBStdSetCfgHandler@i_2095^(0+128),w
  5023  0E57  1C03               	skipc
  5024  0E58  2E48               	goto	l5808
  5025  0E59                     l5816:	
  5026                           
  5027                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  5028  0E59  3020               	movlw	32
  5029  0E5A  00A6               	movwf	memset@p1^(0+128)
  5030  0E5B  3000               	movlw	0
  5031  0E5C  00A7               	movwf	(memset@p1+1)^(0+128)
  5032  0E5D  3000               	movlw	0
  5033  0E5E  00A8               	movwf	memset@c^(0+128)
  5034  0E5F  00A9               	movwf	(memset@c+1)^(0+128)
  5035  0E60  3030               	movlw	48
  5036  0E61  00AA               	movwf	memset@n^(0+128)
  5037  0E62  3000               	movlw	0
  5038  0E63  00AB               	movwf	(memset@n^(0+128)+1)
  5039  0E64  3190  2091  318E   	fcall	_memset
  5040                           
  5041                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
  5042  0E67  003D               	movlb	29	; select bank29
  5043  0E68  170E               	bsf	14,6	;volatile
  5044                           
  5045                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
  5046  0E69  0021               	movlb	1	; select bank1
  5047  0E6A  01BE               	clrf	USBStdSetCfgHandler@i^(0+128)
  5048  0E6B  3003               	movlw	3
  5049  0E6C  023E               	subwf	USBStdSetCfgHandler@i^(0+128),w
  5050  0E6D  1803               	btfsc	3,0
  5051  0E6E  2E83               	goto	l5832
  5052  0E6F                     l5826:	
  5053                           
  5054                           ;usb_device.c: 1988: {
  5055                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
  5056  0E6F  083E               	movf	USBStdSetCfgHandler@i^(0+128),w
  5057  0E70  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  5058  0E71  0086               	movwf	6
  5059  0E72  3001               	movlw	1	; select bank3/4
  5060  0E73  0087               	movwf	7
  5061  0E74  0181               	clrf	1
  5062                           
  5063                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
  5064  0E75  083E               	movf	USBStdSetCfgHandler@i^(0+128),w
  5065  0E76  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  5066  0E77  0086               	movwf	6
  5067  0E78  3001               	movlw	1	; select bank3/4
  5068  0E79  0087               	movwf	7
  5069  0E7A  0181               	clrf	1
  5070  0E7B  3001               	movlw	1
  5071  0E7C  00BA               	movwf	??_USBStdSetCfgHandler^(0+128)
  5072  0E7D  083A               	movf	??_USBStdSetCfgHandler^(0+128),w
  5073  0E7E  07BE               	addwf	USBStdSetCfgHandler@i^(0+128),f
  5074  0E7F  3003               	movlw	3
  5075  0E80  023E               	subwf	USBStdSetCfgHandler@i^(0+128),w
  5076  0E81  1C03               	skipc
  5077  0E82  2E6F               	goto	l5826
  5078  0E83                     l5832:	
  5079                           
  5080                           ;usb_device.c: 1991: }
  5081                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
  5082  0E83  30EB               	movlw	low _USBAlternateInterface
  5083  0E84  00A6               	movwf	memset@p1^(0+128)
  5084  0E85  3001               	movlw	high _USBAlternateInterface
  5085  0E86  00A7               	movwf	(memset@p1+1)^(0+128)
  5086  0E87  3000               	movlw	0
  5087  0E88  00A8               	movwf	memset@c^(0+128)
  5088  0E89  00A9               	movwf	(memset@c+1)^(0+128)
  5089  0E8A  3002               	movlw	2
  5090  0E8B  00AA               	movwf	memset@n^(0+128)
  5091  0E8C  3000               	movlw	0
  5092  0E8D  00AB               	movwf	(memset@n^(0+128)+1)
  5093  0E8E  3190  2091  318E   	fcall	_memset
  5094                           
  5095                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
  5096  0E91  003D               	movlb	29	; select bank29
  5097  0E92  130E               	bcf	14,6	;volatile
  5098                           
  5099                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  5100  0E93  3028               	movlw	40
  5101  0E94  0023               	movlb	3	; select bank3
  5102  0E95  00B7               	movwf	_pBDTEntryIn^(0+384)
  5103  0E96  3000               	movlw	0
  5104  0E97  00B8               	movwf	(_pBDTEntryIn+1)^(0+384)
  5105                           
  5106                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  5107  0E98  3020               	movlw	32
  5108  0E99  0021               	movlb	1	; select bank1
  5109  0E9A  00BA               	movwf	??_USBStdSetCfgHandler^(0+128)
  5110  0E9B  083A               	movf	??_USBStdSetCfgHandler^(0+128),w
  5111  0E9C  0023               	movlb	3	; select bank3
  5112  0E9D  00E4               	movwf	_pBDTEntryEP0OutCurrent^(0+384)
  5113                           
  5114                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  5115  0E9E  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  5116  0E9F  0021               	movlb	1	; select bank1
  5117  0EA0  00C8               	movwf	_pBDTEntryEP0OutNext^(0+128)
  5118  0EA1  39FF               	andlw	255
  5119  0EA2  1D03               	skipz
  5120  0EA3  3000               	movlw	0
  5121  0EA4  00C9               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
  5122                           
  5123                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  5124  0EA5  0020               	movlb	0	; select bank0
  5125  0EA6  0852               	movf	82,w	;volatile
  5126  0EA7  0021               	movlb	1	; select bank1
  5127  0EA8  00BA               	movwf	??_USBStdSetCfgHandler^(0+128)
  5128  0EA9  083A               	movf	??_USBStdSetCfgHandler^(0+128),w
  5129  0EAA  0023               	movlb	3	; select bank3
  5130  0EAB  00EE               	movwf	_USBActiveConfiguration^(0+384)	;volatile
  5131                           
  5132                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
  5133  0EAC  086E               	movf	_USBActiveConfiguration^(0+384),w	;volatile
  5134  0EAD  1D03               	btfss	3,2
  5135  0EAE  2EB6               	goto	l5848
  5136                           
  5137                           ;usb_device.c: 2010: {
  5138                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
  5139  0EAF  3010               	movlw	16
  5140  0EB0  0021               	movlb	1	; select bank1
  5141  0EB1  00BA               	movwf	??_USBStdSetCfgHandler^(0+128)
  5142  0EB2  083A               	movf	??_USBStdSetCfgHandler^(0+128),w
  5143  0EB3  0023               	movlb	3	; select bank3
  5144  0EB4  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
  5145                           
  5146                           ;usb_device.c: 2013: }
  5147  0EB5  0008               	return
  5148  0EB6                     l5848:	
  5149                           
  5150                           ;usb_device.c: 2014: else
  5151                           ;usb_device.c: 2015: {
  5152                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  5153  0EB6  3000               	movlw	0
  5154  0EB7  0021               	movlb	1	; select bank1
  5155  0EB8  00B5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
  5156  0EB9  3001               	movlw	1
  5157  0EBA  00B4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  5158  0EBB  30EE               	movlw	low _USBActiveConfiguration
  5159  0EBC  00B6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  5160  0EBD  3001               	movlw	high _USBActiveConfiguration
  5161  0EBE  00B7               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  5162  0EBF  3001               	movlw	1
  5163  0EC0  00B8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  5164  0EC1  3000               	movlw	0
  5165  0EC2  00B9               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)+1)
  5166  0EC3  3192  224E         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5167                           
  5168                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
  5169  0EC5  3020               	movlw	32
  5170  0EC6  0021               	movlb	1	; select bank1
  5171  0EC7  00BA               	movwf	??_USBStdSetCfgHandler^(0+128)
  5172  0EC8  083A               	movf	??_USBStdSetCfgHandler^(0+128),w
  5173  0EC9  0023               	movlb	3	; select bank3
  5174  0ECA  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
  5175  0ECB  0008               	return
  5176  0ECC                     __end_of_USBStdSetCfgHandler:	
  5177                           
  5178                           	psect	text17
  5179  1091                     __ptext17:	
  5180 ;; *************** function _memset *****************
  5181 ;; Defined at:
  5182 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
  5183 ;; Parameters:    Size  Location     Type
  5184 ;;  p1              2    6[BANK1 ] PTR void 
  5185 ;;		 -> USBAlternateInterface(2), BDT(48), 
  5186 ;;  c               2    8[BANK1 ] int 
  5187 ;;  n               2   10[BANK1 ] unsigned int 
  5188 ;; Auto vars:     Size  Location     Type
  5189 ;;  p               2   12[BANK1 ] PTR unsigned char 
  5190 ;;		 -> USBAlternateInterface(2), BDT(48), 
  5191 ;; Return value:  Size  Location     Type
  5192 ;;                  2    6[BANK1 ] PTR void 
  5193 ;; Registers used:
  5194 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5195 ;; Tracked objects:
  5196 ;;		On entry : 0/0
  5197 ;;		On exit  : 0/0
  5198 ;;		Unchanged: 0/0
  5199 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5200 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  5201 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5203 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5204 ;;Total ram usage:        8 bytes
  5205 ;; Hardware stack levels used:    1
  5206 ;; Hardware stack levels required when called:   10
  5207 ;; This function calls:
  5208 ;;		Nothing
  5209 ;; This function is called by:
  5210 ;;		_USBStdSetCfgHandler
  5211 ;; This function uses a non-reentrant model
  5212 ;;
  5213                           
  5214                           
  5215                           ;psect for function _memset
  5216  1091                     _memset:	
  5217                           
  5218                           ;incstack = 0
  5219                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  5220  1091  0021               	movlb	1	; select bank1
  5221  1092  0827               	movf	(memset@p1+1)^(0+128),w
  5222  1093  00AD               	movwf	(memset@p+1)^(0+128)
  5223  1094  0826               	movf	memset@p1^(0+128),w
  5224  1095  00AC               	movwf	memset@p^(0+128)
  5225  1096                     l5738:	
  5226  1096  3001               	movlw	1
  5227  1097  02AA               	subwf	memset@n^(0+128),f
  5228  1098  3000               	movlw	0
  5229  1099  3BAB               	subwfb	(memset@n+1)^(0+128),f
  5230  109A  0A2A               	incf	memset@n^(0+128),w
  5231  109B  1903               	btfsc	3,2
  5232  109C  0A2B               	incf	(memset@n+1)^(0+128),w
  5233  109D  1903               	btfsc	3,2
  5234  109E  0008               	return
  5235  109F  082C               	movf	memset@p^(0+128),w
  5236  10A0  0086               	movwf	6
  5237  10A1  082D               	movf	(memset@p+1)^(0+128),w
  5238  10A2  0087               	movwf	7
  5239  10A3  0828               	movf	memset@c^(0+128),w
  5240  10A4  0081               	movwf	1
  5241  10A5  3001               	movlw	1
  5242  10A6  07AC               	addwf	memset@p^(0+128),f
  5243  10A7  3000               	movlw	0
  5244  10A8  3DAD               	addwfc	(memset@p+1)^(0+128),f
  5245  10A9  2896               	goto	l5738
  5246  10AA                     __end_of_memset:	
  5247                           ;	Return value of _memset is never used
  5248                           
  5249                           
  5250                           	psect	text18
  5251  1517                     __ptext18:	
  5252 ;; *************** function _USBStdGetStatusHandler *****************
  5253 ;; Defined at:
  5254 ;;		line 2129 in file "mcc_generated_files/usb/usb_device.c"
  5255 ;; Parameters:    Size  Location     Type
  5256 ;;		None
  5257 ;; Auto vars:     Size  Location     Type
  5258 ;;  p               2    7[BANK1 ] PTR struct __BDT
  5259 ;;		 -> RAM(4096), BDT(48), NULL(0), 
  5260 ;; Return value:  Size  Location     Type
  5261 ;;                  1    wreg      void 
  5262 ;; Registers used:
  5263 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5264 ;; Tracked objects:
  5265 ;;		On entry : 0/0
  5266 ;;		On exit  : 0/0
  5267 ;;		Unchanged: 0/0
  5268 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5270 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5271 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5272 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5273 ;;Total ram usage:        3 bytes
  5274 ;; Hardware stack levels used:    1
  5275 ;; Hardware stack levels required when called:   10
  5276 ;; This function calls:
  5277 ;;		Nothing
  5278 ;; This function is called by:
  5279 ;;		_USBCheckStdRequest
  5280 ;; This function uses a non-reentrant model
  5281 ;;
  5282                           
  5283                           
  5284                           ;psect for function _USBStdGetStatusHandler
  5285  1517                     _USBStdGetStatusHandler:	
  5286                           
  5287                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
  5288                           
  5289                           ;incstack = 0
  5290                           ; Regs used in _USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
  5291  1517  0020               	movlb	0	; select bank0
  5292  1518  01D8               	clrf	88	;volatile
  5293                           
  5294                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
  5295  1519  01D9               	clrf	89	;volatile
  5296                           
  5297                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
  5298  151A  2D57               	goto	l5904
  5299  151B                     l514:	
  5300                           ;usb_device.c: 2135: {
  5301                           ;usb_device.c: 2136: case (0x00):
  5302                           
  5303                           
  5304                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
  5305  151B  0021               	movlb	1	; select bank1
  5306  151C  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5307                           
  5308                           ;usb_device.c: 2145: }
  5309                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
  5310                           
  5311                           ;usb_device.c: 2143: {
  5312                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
  5313                           
  5314                           ;usb_device.c: 2142: if(0 == 1)
  5315  151D  0023               	movlb	3	; select bank3
  5316  151E  0360               	decf	_RemoteWakeup^(0+384),w	;volatile
  5317  151F  1D03               	btfss	3,2
  5318  1520  2D63               	goto	l517
  5319                           
  5320                           ;usb_device.c: 2148: {
  5321                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
  5322  1521  0020               	movlb	0	; select bank0
  5323  1522  14D8               	bsf	88,1	;volatile
  5324                           
  5325                           ;usb_device.c: 2150: }
  5326                           ;usb_device.c: 2151: break;
  5327  1523  2D63               	goto	l517
  5328  1524                     l518:	
  5329                           ;usb_device.c: 2152: case (0x01):
  5330                           
  5331                           
  5332                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
  5333  1524  0021               	movlb	1	; select bank1
  5334  1525  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5335                           
  5336                           ;usb_device.c: 2154: break;
  5337  1526  2D63               	goto	l517
  5338  1527                     l519:	
  5339                           ;usb_device.c: 2155: case (0x02):
  5340                           
  5341                           
  5342                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
  5343  1527  0021               	movlb	1	; select bank1
  5344  1528  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5345                           
  5346                           ;usb_device.c: 2160: {
  5347                           ;usb_device.c: 2161: BDT_ENTRY *p;
  5348                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
  5349  1529  0020               	movlb	0	; select bank0
  5350  152A  1BD4               	btfsc	84,7	;volatile
  5351  152B  2D38               	goto	l5894
  5352                           
  5353                           ;usb_device.c: 2164: {
  5354                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  5355  152C  0854               	movf	84,w	;volatile
  5356  152D  390F               	andlw	15
  5357  152E  0709               	addwf	9,w
  5358  152F  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  5359  1530  0086               	movwf	6
  5360  1531  3001               	movlw	1	; select bank3/4
  5361  1532  0087               	movwf	7
  5362  1533  3F40               	moviw [0]fsr1
  5363  1534  0021               	movlb	1	; select bank1
  5364  1535  00A7               	movwf	USBStdGetStatusHandler@p^(0+128)
  5365  1536  3F41               	moviw [1]fsr1
  5366  1537  2D44               	goto	L4
  5367  1538                     l5894:	
  5368                           ;usb_device.c: 2166: }
  5369                           
  5370                           
  5371                           ;usb_device.c: 2167: else
  5372                           ;usb_device.c: 2168: {
  5373                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  5374  1538  0020               	movlb	0	; select bank0
  5375  1539  0854               	movf	84,w	;volatile
  5376  153A  390F               	andlw	15
  5377  153B  0709               	addwf	9,w
  5378  153C  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  5379  153D  0086               	movwf	6
  5380  153E  3001               	movlw	1	; select bank3/4
  5381  153F  0087               	movwf	7
  5382  1540  3F40               	moviw [0]fsr1
  5383  1541  0021               	movlb	1	; select bank1
  5384  1542  00A7               	movwf	USBStdGetStatusHandler@p^(0+128)
  5385  1543  3F41               	moviw [1]fsr1
  5386  1544                     L4:	
  5387  1544  00A8               	movwf	(USBStdGetStatusHandler@p+1)^(0+128)
  5388                           
  5389                           ;usb_device.c: 2170: }
  5390                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  5391  1545  0827               	movf	USBStdGetStatusHandler@p^(0+128),w
  5392  1546  0086               	movwf	6
  5393  1547  0828               	movf	(USBStdGetStatusHandler@p+1)^(0+128),w
  5394  1548  0087               	movwf	7
  5395  1549  1F81               	btfss	1,7
  5396  154A  2D63               	goto	l517
  5397  154B  0827               	movf	USBStdGetStatusHandler@p^(0+128),w
  5398  154C  0086               	movwf	6
  5399  154D  0828               	movf	(USBStdGetStatusHandler@p+1)^(0+128),w
  5400  154E  0087               	movwf	7
  5401  154F  1D01               	btfss	1,2
  5402  1550  2D63               	goto	l517
  5403                           
  5404                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
  5405  1551  3001               	movlw	1
  5406  1552  00A6               	movwf	??_USBStdGetStatusHandler^(0+128)
  5407  1553  0826               	movf	??_USBStdGetStatusHandler^(0+128),w
  5408  1554  0020               	movlb	0	; select bank0
  5409  1555  00D8               	movwf	88	;volatile
  5410                           
  5411                           ;usb_device.c: 2175: }
  5412                           ;usb_device.c: 2176: }
  5413                           
  5414                           ;usb_device.c: 2174: break;
  5415  1556  2D63               	goto	l517
  5416  1557                     l5904:	
  5417  1557  0850               	movf	80,w	;volatile
  5418  1558  391F               	andlw	31
  5419                           
  5420                           ; Switch size 1, requested type "space"
  5421                           ; Number of cases is 3, Range of values is 0 to 2
  5422                           ; switch strategies available:
  5423                           ; Name         Instructions Cycles
  5424                           ; simple_byte           10     6 (average)
  5425                           ; direct_byte           12     6 (fixed)
  5426                           ; jumptable            260     6 (fixed)
  5427                           ;	Chosen strategy is simple_byte
  5428  1559  3A00               	xorlw	0	; case 0
  5429  155A  1903               	skipnz
  5430  155B  2D1B               	goto	l514
  5431  155C  3A01               	xorlw	1	; case 1
  5432  155D  1903               	skipnz
  5433  155E  2D24               	goto	l518
  5434  155F  3A03               	xorlw	3	; case 2
  5435  1560  1903               	skipnz
  5436  1561  2D27               	goto	l519
  5437  1562  2D63               	goto	l517
  5438  1563                     l517:	
  5439                           
  5440                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
  5441  1563  0021               	movlb	1	; select bank1
  5442  1564  1FC5               	btfss	(_inPipes^(0+128)+2),7	;volatile
  5443  1565  0008               	return
  5444                           
  5445                           ;usb_device.c: 2179: {
  5446                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  5447  1566  3058               	movlw	88
  5448  1567  00C3               	movwf	_inPipes^(0+128)	;volatile
  5449  1568  3000               	movlw	0
  5450  1569  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
  5451                           
  5452                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  5453  156A  1445               	bsf	(_inPipes^(0+128)+2),0	;volatile
  5454                           
  5455                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
  5456  156B  3002               	movlw	2
  5457  156C  00A6               	movwf	??_USBStdGetStatusHandler^(0+128)
  5458  156D  0826               	movf	??_USBStdGetStatusHandler^(0+128),w
  5459  156E  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
  5460  156F  0008               	return
  5461  1570                     __end_of_USBStdGetStatusHandler:	
  5462                           
  5463                           	psect	text19
  5464  0C28                     __ptext19:	
  5465 ;; *************** function _USBStdGetDscHandler *****************
  5466 ;; Defined at:
  5467 ;;		line 2043 in file "mcc_generated_files/usb/usb_device.c"
  5468 ;; Parameters:    Size  Location     Type
  5469 ;;		None
  5470 ;; Auto vars:     Size  Location     Type
  5471 ;;		None
  5472 ;; Return value:  Size  Location     Type
  5473 ;;                  1    wreg      void 
  5474 ;; Registers used:
  5475 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  5476 ;; Tracked objects:
  5477 ;;		On entry : 0/0
  5478 ;;		On exit  : 0/0
  5479 ;;		Unchanged: 0/0
  5480 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5483 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5484 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5485 ;;Total ram usage:        3 bytes
  5486 ;; Hardware stack levels used:    1
  5487 ;; Hardware stack levels required when called:   10
  5488 ;; This function calls:
  5489 ;;		Nothing
  5490 ;; This function is called by:
  5491 ;;		_USBCheckStdRequest
  5492 ;; This function uses a non-reentrant model
  5493 ;;
  5494                           
  5495                           
  5496                           ;psect for function _USBStdGetDscHandler
  5497  0C28                     _USBStdGetDscHandler:	
  5498                           
  5499                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
  5500                           
  5501                           ;incstack = 0
  5502                           ; Regs used in _USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
  5503  0C28  3080               	movlw	128
  5504  0C29  0020               	movlb	0	; select bank0
  5505  0C2A  0650               	xorwf	80,w	;volatile
  5506  0C2B  1D03               	btfss	3,2
  5507  0C2C  0008               	return
  5508                           
  5509                           ;usb_device.c: 2046: {
  5510                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  5511  0C2D  30C0               	movlw	192
  5512  0C2E  0021               	movlb	1	; select bank1
  5513  0C2F  00A6               	movwf	??_USBStdGetDscHandler^(0+128)
  5514  0C30  0826               	movf	??_USBStdGetDscHandler^(0+128),w
  5515  0C31  00C5               	movwf	(_inPipes^(0+128)+2)	;volatile
  5516                           
  5517                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
  5518  0C32  2C9A               	goto	l5882
  5519  0C33                     l5856:	
  5520                           ;usb_device.c: 2050: {
  5521                           ;usb_device.c: 2051: case 0x01:
  5522                           
  5523                           
  5524                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  5525  0C33  3091               	movlw	low (_device_dsc| (0+32768))
  5526  0C34  0021               	movlb	1	; select bank1
  5527  0C35  00C3               	movwf	_inPipes^(0+128)	;volatile
  5528  0C36  3098               	movlw	high (_device_dsc| (0+32768))
  5529  0C37  00C4               	movwf	(_inPipes^(0+128)+1)	;volatile
  5530                           
  5531                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
  5532  0C38  3000               	movlw	0
  5533  0C39  00C7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  5534  0C3A  3012               	movlw	18
  5535  0C3B  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
  5536                           
  5537                           ;usb_device.c: 2058: break;
  5538  0C3C  0008               	return
  5539  0C3D                     l5860:	
  5540                           ;usb_device.c: 2059: case 0x02:
  5541                           
  5542                           
  5543                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
  5544  0C3D  0020               	movlb	0	; select bank0
  5545  0C3E  0852               	movf	82,w	;volatile
  5546  0C3F  1D03               	btfss	3,2
  5547  0C40  2C70               	goto	l5868
  5548                           
  5549                           ;usb_device.c: 2064: {
  5550                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  5551  0C41  0852               	movf	82,w	;volatile
  5552  0C42  0021               	movlb	1	; select bank1
  5553  0C43  00A6               	movwf	??_USBStdGetDscHandler^(0+128)
  5554  0C44  01A7               	clrf	(??_USBStdGetDscHandler^(0+128)+1)
  5555  0C45  35A6               	lslf	??_USBStdGetDscHandler^(0+128),f
  5556  0C46  0DA7               	rlf	(??_USBStdGetDscHandler^(0+128)+1),f
  5557  0C47  30B0               	movlw	low (_USB_CD_Ptr| (0+32768))
  5558  0C48  0726               	addwf	??_USBStdGetDscHandler^(0+128),w
  5559  0C49  0084               	movwf	4
  5560  0C4A  3098               	movlw	high (_USB_CD_Ptr| (0+32768))
  5561  0C4B  3D27               	addwfc	(??_USBStdGetDscHandler+1)^(0+128),w
  5562  0C4C  0085               	movwf	5
  5563  0C4D  3F00               	moviw [0]fsr0
  5564  0C4E  00C3               	movwf	_inPipes^(0+128)	;volatile
  5565  0C4F  3F01               	moviw [1]fsr0
  5566  0C50  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
  5567                           
  5568                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  5569  0C51  0844               	movf	(_inPipes+1)^(0+128),w	;volatile
  5570  0C52  00A7               	movwf	(??_USBStdGetDscHandler^(0+128)+1)
  5571  0C53  0843               	movf	_inPipes^(0+128),w	;volatile
  5572  0C54  00A6               	movwf	??_USBStdGetDscHandler^(0+128)
  5573  0C55  3002               	movlw	2
  5574  0C56  0726               	addwf	??_USBStdGetDscHandler^(0+128),w
  5575  0C57  0084               	movwf	4
  5576  0C58  0827               	movf	(??_USBStdGetDscHandler^(0+128)+1),w
  5577  0C59  1803               	skipnc
  5578  0C5A  0A27               	incf	(??_USBStdGetDscHandler^(0+128)+1),w
  5579  0C5B  0085               	movwf	5
  5580  0C5C  0800               	movf	0,w	;code access
  5581  0C5D  00A8               	movwf	(??_USBStdGetDscHandler+2)^(0+128)
  5582  0C5E  0828               	movf	(??_USBStdGetDscHandler+2)^(0+128),w
  5583  0C5F  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
  5584                           
  5585                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  5586  0C60  0844               	movf	(_inPipes+1)^(0+128),w	;volatile
  5587  0C61  00A7               	movwf	(??_USBStdGetDscHandler^(0+128)+1)
  5588  0C62  0843               	movf	_inPipes^(0+128),w	;volatile
  5589  0C63  00A6               	movwf	??_USBStdGetDscHandler^(0+128)
  5590  0C64  3003               	movlw	3
  5591  0C65  0726               	addwf	??_USBStdGetDscHandler^(0+128),w
  5592  0C66  0084               	movwf	4
  5593  0C67  0827               	movf	(??_USBStdGetDscHandler^(0+128)+1),w
  5594  0C68  1803               	skipnc
  5595  0C69  0A27               	incf	(??_USBStdGetDscHandler^(0+128)+1),w
  5596  0C6A  0085               	movwf	5
  5597  0C6B  0800               	movf	0,w	;code access
  5598  0C6C  00A8               	movwf	(??_USBStdGetDscHandler+2)^(0+128)
  5599  0C6D  0828               	movf	(??_USBStdGetDscHandler+2)^(0+128),w
  5600  0C6E  00C7               	movwf	(_inPipes^(0+128)+4)	;volatile
  5601                           
  5602                           ;usb_device.c: 2076: }
  5603  0C6F  0008               	return
  5604  0C70                     l5868:	
  5605                           
  5606                           ;usb_device.c: 2077: else
  5607                           ;usb_device.c: 2078: {
  5608                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
  5609  0C70  0021               	movlb	1	; select bank1
  5610  0C71  01C5               	clrf	(_inPipes^(0+128)+2)	;volatile
  5611                           
  5612                           ;usb_device.c: 2080: }
  5613                           ;usb_device.c: 2081: break;
  5614  0C72  0008               	return
  5615  0C73                     l5870:	
  5616                           ;usb_device.c: 2082: case 0x03:
  5617                           
  5618                           
  5619                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
  5620  0C73  3003               	movlw	3
  5621  0C74  0020               	movlb	0	; select bank0
  5622  0C75  0252               	subwf	82,w	;volatile
  5623  0C76  1803               	skipnc
  5624  0C77  2C94               	goto	l5876
  5625                           
  5626                           ;usb_device.c: 2087: {
  5627                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  5628  0C78  0852               	movf	82,w	;volatile
  5629  0C79  0021               	movlb	1	; select bank1
  5630  0C7A  00A6               	movwf	??_USBStdGetDscHandler^(0+128)
  5631  0C7B  01A7               	clrf	(??_USBStdGetDscHandler^(0+128)+1)
  5632  0C7C  35A6               	lslf	??_USBStdGetDscHandler^(0+128),f
  5633  0C7D  0DA7               	rlf	(??_USBStdGetDscHandler^(0+128)+1),f
  5634  0C7E  30AA               	movlw	low (_USB_SD_Ptr| (0+32768))
  5635  0C7F  0726               	addwf	??_USBStdGetDscHandler^(0+128),w
  5636  0C80  0084               	movwf	4
  5637  0C81  3098               	movlw	high (_USB_SD_Ptr| (0+32768))
  5638  0C82  3D27               	addwfc	(??_USBStdGetDscHandler+1)^(0+128),w
  5639  0C83  0085               	movwf	5
  5640  0C84  3F00               	moviw [0]fsr0
  5641  0C85  00C3               	movwf	_inPipes^(0+128)	;volatile
  5642  0C86  3F01               	moviw [1]fsr0
  5643  0C87  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
  5644                           
  5645                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  5646  0C88  0843               	movf	_inPipes^(0+128),w	;volatile
  5647  0C89  0084               	movwf	4
  5648  0C8A  0844               	movf	(_inPipes+1)^(0+128),w	;volatile
  5649  0C8B  0085               	movwf	5
  5650  0C8C  0800               	movf	0,w	;code access
  5651  0C8D  00A6               	movwf	??_USBStdGetDscHandler^(0+128)
  5652  0C8E  01A7               	clrf	(??_USBStdGetDscHandler^(0+128)+1)
  5653  0C8F  0826               	movf	??_USBStdGetDscHandler^(0+128),w
  5654  0C90  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
  5655  0C91  0827               	movf	(??_USBStdGetDscHandler+1)^(0+128),w
  5656  0C92  00C7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  5657                           
  5658                           ;usb_device.c: 2092: }
  5659  0C93  0008               	return
  5660  0C94                     l5876:	
  5661                           
  5662                           ;usb_device.c: 2102: else
  5663                           ;usb_device.c: 2103: {
  5664                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
  5665  0C94  0021               	movlb	1	; select bank1
  5666  0C95  01C5               	clrf	(_inPipes^(0+128)+2)	;volatile
  5667                           
  5668                           ;usb_device.c: 2105: }
  5669                           ;usb_device.c: 2106: break;
  5670  0C96  0008               	return
  5671  0C97                     l5878:	
  5672                           ;usb_device.c: 2107: default:
  5673                           
  5674                           
  5675                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
  5676  0C97  0021               	movlb	1	; select bank1
  5677  0C98  01C5               	clrf	(_inPipes^(0+128)+2)	;volatile
  5678                           
  5679                           ;usb_device.c: 2110: }
  5680                           
  5681                           ;usb_device.c: 2109: break;
  5682  0C99  0008               	return
  5683  0C9A                     l5882:	
  5684  0C9A  0020               	movlb	0	; select bank0
  5685  0C9B  0853               	movf	83,w	;volatile
  5686                           
  5687                           ; Switch size 1, requested type "space"
  5688                           ; Number of cases is 3, Range of values is 1 to 3
  5689                           ; switch strategies available:
  5690                           ; Name         Instructions Cycles
  5691                           ; simple_byte           10     6 (average)
  5692                           ; direct_byte           15     9 (fixed)
  5693                           ; jumptable            263     9 (fixed)
  5694                           ;	Chosen strategy is simple_byte
  5695  0C9C  3A01               	xorlw	1	; case 1
  5696  0C9D  1903               	skipnz
  5697  0C9E  2C33               	goto	l5856
  5698  0C9F  3A03               	xorlw	3	; case 2
  5699  0CA0  1903               	skipnz
  5700  0CA1  2C3D               	goto	l5860
  5701  0CA2  3A01               	xorlw	1	; case 3
  5702  0CA3  1903               	skipnz
  5703  0CA4  2C73               	goto	l5870
  5704  0CA5  2C97               	goto	l5878
  5705  0CA6  0008               	return
  5706  0CA7                     __end_of_USBStdGetDscHandler:	
  5707                           
  5708                           	psect	text20
  5709  0051                     __ptext20:	
  5710 ;; *************** function _USBStdFeatureReqHandler *****************
  5711 ;; Defined at:
  5712 ;;		line 2754 in file "mcc_generated_files/usb/usb_device.c"
  5713 ;; Parameters:    Size  Location     Type
  5714 ;;		None
  5715 ;; Auto vars:     Size  Location     Type
  5716 ;;  p               2   31[BANK1 ] PTR struct __BDT
  5717 ;;		 -> RAM(4096), BDT(48), NULL(0), 
  5718 ;;  pUEP            2   28[BANK1 ] PTR unsigned char 
  5719 ;;		 -> UEP0(1), 
  5720 ;;  current_ep_d    1   30[BANK1 ] struct .
  5721 ;; Return value:  Size  Location     Type
  5722 ;;                  1    wreg      void 
  5723 ;; Registers used:
  5724 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5725 ;; Tracked objects:
  5726 ;;		On entry : 0/0
  5727 ;;		On exit  : 0/0
  5728 ;;		Unchanged: 0/0
  5729 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5731 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5732 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5733 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  5734 ;;Total ram usage:        7 bytes
  5735 ;; Hardware stack levels used:    1
  5736 ;; Hardware stack levels required when called:   14
  5737 ;; This function calls:
  5738 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5739 ;; This function is called by:
  5740 ;;		_USBCheckStdRequest
  5741 ;; This function uses a non-reentrant model
  5742 ;;
  5743                           
  5744                           
  5745                           ;psect for function _USBStdFeatureReqHandler
  5746  0051                     _USBStdFeatureReqHandler:	
  5747                           
  5748                           ;usb_device.c: 2756: BDT_ENTRY *p;
  5749                           ;usb_device.c: 2757: EP_STATUS current_ep_data;
  5750                           ;usb_device.c: 2761: unsigned char* pUEP;
  5751                           ;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&
  5752                           ;usb_device.c: 2800: (SetupPkt.Recipient == (0x00)))
  5753                           
  5754                           ;incstack = 0
  5755 ;; hardware stack exceeded
  5756                           ; Regs used in _USBStdFeatureReqHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5757  0051  0020               	movlb	0	; select bank0
  5758  0052  0352               	decf	82,w	;volatile
  5759  0053  1D03               	btfss	3,2
  5760  0054  286A               	goto	l5924
  5761  0055  0850               	movf	80,w	;volatile
  5762  0056  391F               	andlw	31
  5763  0057  3A00               	xorlw	0
  5764  0058  1D03               	skipz
  5765  0059  286A               	goto	l5924
  5766                           
  5767                           ;usb_device.c: 2801: {
  5768                           ;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
  5769  005A  0021               	movlb	1	; select bank1
  5770  005B  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5771                           
  5772                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
  5773  005C  3003               	movlw	3
  5774  005D  0020               	movlb	0	; select bank0
  5775  005E  0651               	xorwf	81,w	;volatile
  5776  005F  1D03               	btfss	3,2
  5777  0060  2868               	goto	l5922
  5778                           
  5779                           ;usb_device.c: 2804: RemoteWakeup = 1;
  5780  0061  3001               	movlw	1
  5781  0062  0021               	movlb	1	; select bank1
  5782  0063  00BA               	movwf	??_USBStdFeatureReqHandler^(0+128)
  5783  0064  083A               	movf	??_USBStdFeatureReqHandler^(0+128),w
  5784  0065  0023               	movlb	3	; select bank3
  5785  0066  00E0               	movwf	_RemoteWakeup^(0+384)	;volatile
  5786  0067  286A               	goto	l5924
  5787  0068                     l5922:	
  5788                           
  5789                           ;usb_device.c: 2805: else
  5790                           ;usb_device.c: 2806: RemoteWakeup = 0;
  5791  0068  0023               	movlb	3	; select bank3
  5792  0069  01E0               	clrf	_RemoteWakeup^(0+384)	;volatile
  5793  006A                     l5924:	
  5794                           
  5795                           ;usb_device.c: 2807: }
  5796                           ;usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&
  5797                           ;usb_device.c: 2811: (SetupPkt.Recipient == (0x02))&&
  5798                           ;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
  5799                           ;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
  5800  006A  0020               	movlb	0	; select bank0
  5801  006B  0852               	movf	82,w	;volatile
  5802  006C  1D03               	btfss	3,2
  5803  006D  0008               	return
  5804  006E  0850               	movf	80,w	;volatile
  5805  006F  391F               	andlw	31
  5806  0070  3A02               	xorlw	2
  5807  0071  1D03               	skipz
  5808  0072  0008               	return
  5809  0073  0854               	movf	84,w	;volatile
  5810  0074  390F               	andlw	15
  5811  0075  3A00               	xorlw	0
  5812  0076  1903               	skipnz
  5813  0077  0008               	return
  5814  0078  0854               	movf	84,w	;volatile
  5815  0079  390F               	andlw	15
  5816  007A  0021               	movlb	1	; select bank1
  5817  007B  00BA               	movwf	??_USBStdFeatureReqHandler^(0+128)
  5818  007C  3003               	movlw	3
  5819  007D  023A               	subwf	??_USBStdFeatureReqHandler^(0+128),w
  5820  007E  1803               	skipnc
  5821  007F  0008               	return
  5822  0080  3020               	movlw	32
  5823  0081  0023               	movlb	3	; select bank3
  5824  0082  0665               	xorwf	_USBDeviceState^(0+384),w	;volatile
  5825  0083  1D03               	btfss	3,2
  5826  0084  0008               	return
  5827                           
  5828                           ;usb_device.c: 2814: {
  5829                           ;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
  5830  0085  0021               	movlb	1	; select bank1
  5831  0086  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5832                           
  5833                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
  5834  0087  0020               	movlb	0	; select bank0
  5835  0088  1BD4               	btfsc	84,7	;volatile
  5836  0089  289B               	goto	l5938
  5837                           
  5838                           ;usb_device.c: 2821: {
  5839                           ;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  5840  008A  0854               	movf	84,w	;volatile
  5841  008B  390F               	andlw	15
  5842  008C  0709               	addwf	9,w
  5843  008D  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  5844  008E  0086               	movwf	6
  5845  008F  3001               	movlw	1	; select bank3/4
  5846  0090  0087               	movwf	7
  5847  0091  3F40               	moviw [0]fsr1
  5848  0092  0021               	movlb	1	; select bank1
  5849  0093  00BF               	movwf	USBStdFeatureReqHandler@p^(0+128)
  5850  0094  3F41               	moviw [1]fsr1
  5851  0095  00C0               	movwf	(USBStdFeatureReqHandler@p+1)^(0+128)
  5852                           
  5853                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  5854  0096  0020               	movlb	0	; select bank0
  5855  0097  0854               	movf	84,w	;volatile
  5856  0098  390F               	andlw	15
  5857  0099  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  5858  009A  28AC               	goto	L5
  5859  009B                     l5938:	
  5860                           ;usb_device.c: 2824: }
  5861                           
  5862                           
  5863                           ;usb_device.c: 2825: else
  5864                           ;usb_device.c: 2826: {
  5865                           ;usb_device.c: 2827: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  5866  009B  0020               	movlb	0	; select bank0
  5867  009C  0854               	movf	84,w	;volatile
  5868  009D  390F               	andlw	15
  5869  009E  0709               	addwf	9,w
  5870  009F  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  5871  00A0  0086               	movwf	6
  5872  00A1  3001               	movlw	1	; select bank3/4
  5873  00A2  0087               	movwf	7
  5874  00A3  3F40               	moviw [0]fsr1
  5875  00A4  0021               	movlb	1	; select bank1
  5876  00A5  00BF               	movwf	USBStdFeatureReqHandler@p^(0+128)
  5877  00A6  3F41               	moviw [1]fsr1
  5878  00A7  00C0               	movwf	(USBStdFeatureReqHandler@p+1)^(0+128)
  5879                           
  5880                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  5881  00A8  0020               	movlb	0	; select bank0
  5882  00A9  0854               	movf	84,w	;volatile
  5883  00AA  390F               	andlw	15
  5884  00AB  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  5885  00AC                     L5:	
  5886  00AC  0086               	movwf	6
  5887  00AD  3001               	movlw	1	; select bank3/4
  5888  00AE  0087               	movwf	7
  5889  00AF  0801               	movf	1,w
  5890  00B0  0021               	movlb	1	; select bank1
  5891  00B1  00BA               	movwf	??_USBStdFeatureReqHandler^(0+128)
  5892  00B2  083A               	movf	??_USBStdFeatureReqHandler^(0+128),w
  5893  00B3  00BE               	movwf	USBStdFeatureReqHandler@current_ep_data^(0+128)
  5894                           
  5895                           ;usb_device.c: 2829: }
  5896                           ;usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
  5897  00B4  183E               	btfsc	USBStdFeatureReqHandler@current_ep_data^(0+128),0
  5898  00B5  28C0               	goto	l5944
  5899                           
  5900                           ;usb_device.c: 2836: {
  5901                           ;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
  5902  00B6  30FB               	movlw	251
  5903  00B7  00BA               	movwf	??_USBStdFeatureReqHandler^(0+128)
  5904  00B8  30FF               	movlw	255
  5905  00B9  00BB               	movwf	(??_USBStdFeatureReqHandler^(0+128)+1)
  5906  00BA  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  5907  00BB  053A               	andwf	??_USBStdFeatureReqHandler^(0+128),w
  5908  00BC  00BF               	movwf	USBStdFeatureReqHandler@p^(0+128)
  5909  00BD  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  5910  00BE  053B               	andwf	(??_USBStdFeatureReqHandler+1)^(0+128),w
  5911  00BF  28C5               	goto	L6
  5912  00C0                     l5944:	
  5913                           ;usb_device.c: 2838: }
  5914                           
  5915                           
  5916                           ;usb_device.c: 2839: else
  5917                           ;usb_device.c: 2840: {
  5918                           ;usb_device.c: 2841: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
  5919  00C0  3004               	movlw	4
  5920  00C1  043F               	iorwf	USBStdFeatureReqHandler@p^(0+128),w
  5921  00C2  00BF               	movwf	USBStdFeatureReqHandler@p^(0+128)
  5922  00C3  3000               	movlw	0
  5923  00C4  0440               	iorwf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  5924  00C5                     L6:	
  5925  00C5  00C0               	movwf	(USBStdFeatureReqHandler@p+1)^(0+128)
  5926                           
  5927                           ;usb_device.c: 2842: }
  5928                           ;usb_device.c: 2847: if(SetupPkt.EPDir == 0)
  5929  00C6  0020               	movlb	0	; select bank0
  5930  00C7  1BD4               	btfsc	84,7	;volatile
  5931  00C8  28D6               	goto	l5950
  5932                           
  5933                           ;usb_device.c: 2848: {
  5934                           ;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  5935  00C9  0854               	movf	84,w	;volatile
  5936  00CA  390F               	andlw	15
  5937  00CB  0709               	addwf	9,w
  5938  00CC  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  5939  00CD  0086               	movwf	6
  5940  00CE  3001               	movlw	1	; select bank3/4
  5941  00CF  0087               	movwf	7
  5942  00D0  0021               	movlb	1	; select bank1
  5943  00D1  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  5944  00D2  3FC0               	movwi [0]fsr1
  5945  00D3  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  5946  00D4  3FC1               	movwi [1]fsr1
  5947                           
  5948                           ;usb_device.c: 2850: }
  5949  00D5  28E3               	goto	l5952
  5950  00D6                     l5950:	
  5951                           
  5952                           ;usb_device.c: 2851: else
  5953                           ;usb_device.c: 2852: {
  5954                           ;usb_device.c: 2853: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  5955  00D6  0020               	movlb	0	; select bank0
  5956  00D7  0854               	movf	84,w	;volatile
  5957  00D8  390F               	andlw	15
  5958  00D9  0709               	addwf	9,w
  5959  00DA  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  5960  00DB  0086               	movwf	6
  5961  00DC  3001               	movlw	1	; select bank3/4
  5962  00DD  0087               	movwf	7
  5963  00DE  0021               	movlb	1	; select bank1
  5964  00DF  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  5965  00E0  3FC0               	movwi [0]fsr1
  5966  00E1  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  5967  00E2  3FC1               	movwi [1]fsr1
  5968  00E3                     l5952:	
  5969                           
  5970                           ;usb_device.c: 2854: }
  5971                           ;usb_device.c: 2857: if(SetupPkt.bRequest == 3)
  5972  00E3  3003               	movlw	3
  5973  00E4  0020               	movlb	0	; select bank0
  5974  00E5  0651               	xorwf	81,w	;volatile
  5975  00E6  1D03               	btfss	3,2
  5976  00E7  2909               	goto	l5966
  5977                           
  5978                           ;usb_device.c: 2858: {
  5979                           ;usb_device.c: 2859: if(p->STAT.UOWN == 1)
  5980  00E8  0021               	movlb	1	; select bank1
  5981  00E9  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  5982  00EA  0086               	movwf	6
  5983  00EB  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  5984  00EC  0087               	movwf	7
  5985  00ED  1F81               	btfss	1,7
  5986  00EE  28FD               	goto	l5962
  5987                           
  5988                           ;usb_device.c: 2860: {
  5989                           ;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
  5990  00EF  0020               	movlb	0	; select bank0
  5991  00F0  1BD4               	btfsc	84,7	;volatile
  5992  00F1  28F6               	goto	l5960
  5993                           
  5994                           ;usb_device.c: 2864: {
  5995                           ;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  5996  00F2  0854               	movf	84,w	;volatile
  5997  00F3  390F               	andlw	15
  5998  00F4  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  5999  00F5  28F9               	goto	L7
  6000  00F6                     l5960:	
  6001                           ;usb_device.c: 2866: }
  6002                           
  6003                           
  6004                           ;usb_device.c: 2867: else
  6005                           ;usb_device.c: 2868: {
  6006                           ;usb_device.c: 2869: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  6007  00F6  0854               	movf	84,w	;volatile
  6008  00F7  390F               	andlw	15
  6009  00F8  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  6010  00F9                     L7:	
  6011  00F9  0086               	movwf	6
  6012  00FA  3001               	movlw	1	; select bank3/4
  6013  00FB  0087               	movwf	7
  6014  00FC  1481               	bsf	1,1
  6015  00FD                     l5962:	
  6016                           
  6017                           ;usb_device.c: 2870: }
  6018                           ;usb_device.c: 2871: }
  6019                           ;usb_device.c: 2874: p->STAT.Val |= 0x04;
  6020  00FD  0021               	movlb	1	; select bank1
  6021  00FE  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6022  00FF  0086               	movwf	6
  6023  0100  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6024  0101  0087               	movwf	7
  6025  0102  1501               	bsf	1,2
  6026                           
  6027                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
  6028  0103  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6029  0104  0086               	movwf	6
  6030  0105  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6031  0106  0087               	movwf	7
  6032  0107  1781               	bsf	1,7
  6033                           
  6034                           ;usb_device.c: 2876: }
  6035  0108  0008               	return
  6036  0109                     l5966:	
  6037                           
  6038                           ;usb_device.c: 2877: else
  6039                           ;usb_device.c: 2878: {
  6040                           ;usb_device.c: 2882: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  6041  0109  3004               	movlw	4
  6042  010A  0021               	movlb	1	; select bank1
  6043  010B  063F               	xorwf	USBStdFeatureReqHandler@p^(0+128),w
  6044  010C  00BF               	movwf	USBStdFeatureReqHandler@p^(0+128)
  6045  010D  3000               	movlw	0
  6046  010E  0640               	xorwf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6047  010F  00C0               	movwf	(USBStdFeatureReqHandler@p+1)^(0+128)
  6048                           
  6049                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
  6050  0110  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6051  0111  0086               	movwf	6
  6052  0112  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6053  0113  0087               	movwf	7
  6054  0114  1F81               	btfss	1,7
  6055  0115  2933               	goto	l5976
  6056                           
  6057                           ;usb_device.c: 2885: {
  6058                           ;usb_device.c: 2888: p->STAT.Val &= (~0x80);
  6059  0116  307F               	movlw	127
  6060  0117  00BA               	movwf	??_USBStdFeatureReqHandler^(0+128)
  6061  0118  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6062  0119  0086               	movwf	6
  6063  011A  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6064  011B  0087               	movwf	7
  6065  011C  083A               	movf	??_USBStdFeatureReqHandler^(0+128),w
  6066  011D  0581               	andwf	1,f
  6067                           
  6068                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
  6069  011E  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6070  011F  0086               	movwf	6
  6071  0120  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6072  0121  0087               	movwf	7
  6073  0122  1701               	bsf	1,6
  6074                           
  6075                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  6076  0123  3000               	movlw	0
  6077  0124  00B5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
  6078  0125  3005               	movlw	5
  6079  0126  00B4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  6080  0127  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6081  0128  00B7               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  6082  0129  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6083  012A  00B6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  6084  012B  3002               	movlw	2
  6085  012C  00B8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  6086  012D  3000               	movlw	0
  6087  012E  00B9               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)+1)
  6088  012F  3192  224E  3180   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6089                           
  6090                           ;usb_device.c: 2891: }
  6091  0132  2939               	goto	l5978
  6092  0133                     l5976:	
  6093                           
  6094                           ;usb_device.c: 2892: else
  6095                           ;usb_device.c: 2893: {
  6096                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
  6097  0133  0021               	movlb	1	; select bank1
  6098  0134  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6099  0135  0086               	movwf	6
  6100  0136  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6101  0137  0087               	movwf	7
  6102  0138  1701               	bsf	1,6
  6103  0139                     l5978:	
  6104                           
  6105                           ;usb_device.c: 2896: }
  6106                           ;usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  6107  0139  3004               	movlw	4
  6108  013A  0021               	movlb	1	; select bank1
  6109  013B  063F               	xorwf	USBStdFeatureReqHandler@p^(0+128),w
  6110  013C  00BF               	movwf	USBStdFeatureReqHandler@p^(0+128)
  6111  013D  3000               	movlw	0
  6112  013E  0640               	xorwf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6113  013F  00C0               	movwf	(USBStdFeatureReqHandler@p+1)^(0+128)
  6114                           
  6115                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  6116  0140  18BE               	btfsc	USBStdFeatureReqHandler@current_ep_data^(0+128),1
  6117  0141  2948               	goto	l610
  6118  0142  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6119  0143  0086               	movwf	6
  6120  0144  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6121  0145  0087               	movwf	7
  6122  0146  1F81               	btfss	1,7
  6123  0147  296F               	goto	l5990
  6124  0148                     l610:	
  6125                           
  6126                           ;usb_device.c: 2907: {
  6127                           ;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
  6128  0148  0020               	movlb	0	; select bank0
  6129  0149  1BD4               	btfsc	84,7	;volatile
  6130  014A  294F               	goto	l5986
  6131                           
  6132                           ;usb_device.c: 2909: {
  6133                           ;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  6134  014B  0854               	movf	84,w	;volatile
  6135  014C  390F               	andlw	15
  6136  014D  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  6137  014E  2952               	goto	L8
  6138  014F                     l5986:	
  6139                           ;usb_device.c: 2911: }
  6140                           
  6141                           
  6142                           ;usb_device.c: 2912: else
  6143                           ;usb_device.c: 2913: {
  6144                           ;usb_device.c: 2914: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  6145  014F  0854               	movf	84,w	;volatile
  6146  0150  390F               	andlw	15
  6147  0151  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  6148  0152                     L8:	
  6149  0152  0086               	movwf	6
  6150  0153  3001               	movlw	1	; select bank3/4
  6151  0154  0087               	movwf	7
  6152  0155  1081               	bcf	1,1
  6153                           
  6154                           ;usb_device.c: 2915: }
  6155                           ;usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  6156  0156  303B               	movlw	59
  6157  0157  0021               	movlb	1	; select bank1
  6158  0158  00BA               	movwf	??_USBStdFeatureReqHandler^(0+128)
  6159  0159  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6160  015A  0086               	movwf	6
  6161  015B  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6162  015C  0087               	movwf	7
  6163  015D  083A               	movf	??_USBStdFeatureReqHandler^(0+128),w
  6164  015E  0581               	andwf	1,f
  6165                           
  6166                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  6167  015F  3000               	movlw	0
  6168  0160  00B5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
  6169  0161  3005               	movlw	5
  6170  0162  00B4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  6171  0163  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6172  0164  00B7               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  6173  0165  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6174  0166  00B6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  6175  0167  3002               	movlw	2
  6176  0168  00B8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  6177  0169  3000               	movlw	0
  6178  016A  00B9               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)+1)
  6179  016B  3192  224E  3180   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6180                           
  6181                           ;usb_device.c: 2921: }
  6182  016E  2978               	goto	l5992
  6183  016F                     l5990:	
  6184                           
  6185                           ;usb_device.c: 2922: else
  6186                           ;usb_device.c: 2923: {
  6187                           ;usb_device.c: 2925: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  6188  016F  303B               	movlw	59
  6189  0170  0021               	movlb	1	; select bank1
  6190  0171  00BA               	movwf	??_USBStdFeatureReqHandler^(0+128)
  6191  0172  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6192  0173  0086               	movwf	6
  6193  0174  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6194  0175  0087               	movwf	7
  6195  0176  083A               	movf	??_USBStdFeatureReqHandler^(0+128),w
  6196  0177  0581               	andwf	1,f
  6197  0178                     l5992:	
  6198                           
  6199                           ;usb_device.c: 2926: }
  6200                           ;usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  6201  0178  0020               	movlb	0	; select bank0
  6202  0179  0854               	movf	84,w	;volatile
  6203  017A  390F               	andlw	15
  6204  017B  3E98               	addlw	152
  6205  017C  0021               	movlb	1	; select bank1
  6206  017D  00BA               	movwf	??_USBStdFeatureReqHandler^(0+128)
  6207  017E  01BB               	clrf	(??_USBStdFeatureReqHandler^(0+128)+1)
  6208  017F  300E               	movlw	14
  6209  0180  3DBB               	addwfc	(??_USBStdFeatureReqHandler^(0+128)+1),f
  6210  0181  083A               	movf	??_USBStdFeatureReqHandler^(0+128),w
  6211  0182  00BC               	movwf	USBStdFeatureReqHandler@pUEP^(0+128)
  6212  0183  083B               	movf	(??_USBStdFeatureReqHandler+1)^(0+128),w
  6213  0184  00BD               	movwf	(USBStdFeatureReqHandler@pUEP+1)^(0+128)
  6214                           
  6215                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
  6216  0185  30FE               	movlw	254
  6217  0186  00BA               	movwf	??_USBStdFeatureReqHandler^(0+128)
  6218  0187  083C               	movf	USBStdFeatureReqHandler@pUEP^(0+128),w
  6219  0188  0086               	movwf	6
  6220  0189  083D               	movf	(USBStdFeatureReqHandler@pUEP+1)^(0+128),w
  6221  018A  0087               	movwf	7
  6222  018B  083A               	movf	??_USBStdFeatureReqHandler^(0+128),w
  6223  018C  0581               	andwf	1,f
  6224  018D  0008               	return
  6225  018E                     __end_of_USBStdFeatureReqHandler:	
  6226                           
  6227                           	psect	text21
  6228  124E                     __ptext21:	
  6229 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  6230 ;; Defined at:
  6231 ;;		line 49 in file "mcc_generated_files/usb/usb_device_events.c"
  6232 ;; Parameters:    Size  Location     Type
  6233 ;;  event           2   20[BANK1 ] enum E40
  6234 ;;  pdata           2   22[BANK1 ] PTR void 
  6235 ;;		 -> RAM(4096), USTATcopy(1), USBActiveConfiguration(1), BDT(48), 
  6236 ;;		 -> NULL(0), 
  6237 ;;  size            2   24[BANK1 ] unsigned int 
  6238 ;; Auto vars:     Size  Location     Type
  6239 ;;		None
  6240 ;; Return value:  Size  Location     Type
  6241 ;;                  1    wreg      unsigned char 
  6242 ;; Registers used:
  6243 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6244 ;; Tracked objects:
  6245 ;;		On entry : 0/0
  6246 ;;		On exit  : 0/0
  6247 ;;		Unchanged: 0/0
  6248 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6249 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  6250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6252 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  6253 ;;Total ram usage:        6 bytes
  6254 ;; Hardware stack levels used:    1
  6255 ;; Hardware stack levels required when called:   13
  6256 ;; This function calls:
  6257 ;;		_CDCInitEP
  6258 ;;		_USBCheckCDCRequest
  6259 ;; This function is called by:
  6260 ;;		_USBDeviceTasks
  6261 ;;		_USBStdSetCfgHandler
  6262 ;;		_USBSuspend
  6263 ;;		_USBWakeFromSuspend
  6264 ;;		_USBCtrlTrfSetupHandler
  6265 ;;		_USBCheckStdRequest
  6266 ;;		_USBStdFeatureReqHandler
  6267 ;; This function uses a non-reentrant model
  6268 ;;
  6269                           
  6270                           
  6271                           ;psect for function _USER_USB_CALLBACK_EVENT_HANDLER
  6272  124E                     _USER_USB_CALLBACK_EVENT_HANDLER:	
  6273                           
  6274                           ;usb_device_events.c: 51: switch( (int) event )
  6275                           
  6276                           ;incstack = 0
  6277                           ; Regs used in _USER_USB_CALLBACK_EVENT_HANDLER: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  6278  124E  2A55               	goto	l5682
  6279  124F                     l5676:	
  6280                           ;usb_device_events.c: 75: case EVENT_CONFIGURED:
  6281                           
  6282                           ;usb_device_events.c: 73: break;
  6283                           
  6284                           ;usb_device_events.c: 68: case EVENT_RESUME:
  6285                           
  6286                           ;usb_device_events.c: 66: break;
  6287                           
  6288                           ;usb_device_events.c: 59: case EVENT_SUSPEND:
  6289                           
  6290                           ;usb_device_events.c: 57: break;
  6291                           
  6292                           ;usb_device_events.c: 56: case EVENT_SOF:
  6293                           
  6294                           ;usb_device_events.c: 54: break;
  6295                           
  6296                           ;usb_device_events.c: 52: {
  6297                           ;usb_device_events.c: 53: case EVENT_TRANSFER:
  6298                           
  6299                           
  6300                           ;usb_device_events.c: 76: CDCInitEP();
  6301  124F  3193  235C         	fcall	_CDCInitEP
  6302                           
  6303                           ;usb_device_events.c: 80: break;
  6304                           
  6305                           ;usb_device_events.c: 79: case EVENT_SET_DESCRIPTOR:
  6306                           
  6307                           ;usb_device_events.c: 77: break;
  6308  1251  0008               	return
  6309  1252                     l5678:	
  6310                           ;usb_device_events.c: 82: case EVENT_EP0_REQUEST:
  6311                           
  6312                           
  6313                           ;usb_device_events.c: 85: USBCheckCDCRequest();
  6314  1252  3188  2099         	fcall	_USBCheckCDCRequest
  6315                           
  6316                           ;usb_device_events.c: 96: }
  6317                           
  6318                           ;usb_device_events.c: 95: break;
  6319                           
  6320                           ;usb_device_events.c: 94: default:
  6321                           
  6322                           ;usb_device_events.c: 92: break;
  6323                           
  6324                           ;usb_device_events.c: 91: case EVENT_TRANSFER_TERMINATED:
  6325                           
  6326                           ;usb_device_events.c: 89: break;
  6327                           
  6328                           ;usb_device_events.c: 88: case EVENT_BUS_ERROR:
  6329                           
  6330                           ;usb_device_events.c: 86: break;
  6331  1254  0008               	return
  6332  1255                     l5682:	
  6333                           
  6334                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  6335                           ; Switch size 1, requested type "space"
  6336                           ; Number of cases is 2, Range of values is 0 to 127
  6337                           ; switch strategies available:
  6338                           ; Name         Instructions Cycles
  6339                           ; simple_byte            7     4 (average)
  6340                           ; direct_byte          262     6 (fixed)
  6341                           ; jumptable            260     6 (fixed)
  6342                           ;	Chosen strategy is simple_byte
  6343  1255  0021               	movlb	1	; select bank1
  6344  1256  0835               	movf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128),w
  6345  1257  3A00               	xorlw	0	; case 0
  6346  1258  1903               	skipnz
  6347  1259  2A5E               	goto	l6736
  6348  125A  3A7F               	xorlw	127	; case 127
  6349  125B  1903               	skipnz
  6350  125C  2A78               	goto	l6738
  6351  125D  2A7D               	goto	l226
  6352  125E                     l6736:	
  6353                           
  6354                           ; Switch size 1, requested type "space"
  6355                           ; Number of cases is 8, Range of values is 1 to 117
  6356                           ; switch strategies available:
  6357                           ; Name         Instructions Cycles
  6358                           ; simple_byte           25    13 (average)
  6359                           ; direct_byte          243     9 (fixed)
  6360                           ; jumptable            263     9 (fixed)
  6361                           ;	Chosen strategy is simple_byte
  6362  125E  0834               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128),w
  6363  125F  3A01               	xorlw	1	; case 1
  6364  1260  1903               	skipnz
  6365  1261  2A4F               	goto	l5676
  6366  1262  3A03               	xorlw	3	; case 2
  6367  1263  1903               	skipnz
  6368  1264  2A7D               	goto	l226
  6369  1265  3A01               	xorlw	1	; case 3
  6370  1266  1903               	skipnz
  6371  1267  2A52               	goto	l5678
  6372  1268  3A06               	xorlw	6	; case 5
  6373  1269  1903               	skipnz
  6374  126A  2A7D               	goto	l226
  6375  126B  3A77               	xorlw	119	; case 114
  6376  126C  1903               	skipnz
  6377  126D  2A7D               	goto	l226
  6378  126E  3A01               	xorlw	1	; case 115
  6379  126F  1903               	skipnz
  6380  1270  2A7D               	goto	l226
  6381  1271  3A07               	xorlw	7	; case 116
  6382  1272  1903               	skipnz
  6383  1273  2A7D               	goto	l226
  6384  1274  3A01               	xorlw	1	; case 117
  6385  1275  1903               	skipnz
  6386  1276  2A7D               	goto	l226
  6387  1277  2A7D               	goto	l226
  6388  1278                     l6738:	
  6389                           
  6390                           ; Switch size 1, requested type "space"
  6391                           ; Number of cases is 1, Range of values is 255 to 255
  6392                           ; switch strategies available:
  6393                           ; Name         Instructions Cycles
  6394                           ; simple_byte            4     3 (average)
  6395                           ; direct_byte            7     5 (fixed)
  6396                           ; jumptable            263     9 (fixed)
  6397                           ;	Chosen strategy is simple_byte
  6398  1278  0834               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128),w
  6399  1279  3AFF               	xorlw	255	; case 255
  6400  127A  1903               	skipnz
  6401  127B  2A7D               	goto	l226
  6402  127C  2A7D               	goto	l226
  6403  127D                     l226:	
  6404                           ;usb_device_events.c: 97: return 1;
  6405                           ;	Return value of _USER_USB_CALLBACK_EVENT_HANDLER is never used
  6406                           
  6407  127D  0008               	return
  6408  127E                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:	
  6409                           
  6410                           	psect	text22
  6411  0899                     __ptext22:	
  6412 ;; *************** function _USBCheckCDCRequest *****************
  6413 ;; Defined at:
  6414 ;;		line 146 in file "mcc_generated_files/usb/usb_device_cdc.c"
  6415 ;; Parameters:    Size  Location     Type
  6416 ;;		None
  6417 ;; Auto vars:     Size  Location     Type
  6418 ;;		None
  6419 ;; Return value:  Size  Location     Type
  6420 ;;                  1    wreg      void 
  6421 ;; Registers used:
  6422 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6423 ;; Tracked objects:
  6424 ;;		On entry : 0/0
  6425 ;;		On exit  : 0/0
  6426 ;;		Unchanged: 0/0
  6427 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6430 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6431 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6432 ;;Total ram usage:        1 bytes
  6433 ;; Hardware stack levels used:    1
  6434 ;; Hardware stack levels required when called:   10
  6435 ;; This function calls:
  6436 ;;		Nothing
  6437 ;; This function is called by:
  6438 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6439 ;; This function uses a non-reentrant model
  6440 ;;
  6441                           
  6442                           
  6443                           ;psect for function _USBCheckCDCRequest
  6444  0899                     _USBCheckCDCRequest:	
  6445                           
  6446                           ;usb_device_cdc.c: 151: if(SetupPkt.Recipient != (0x01)) return;
  6447                           
  6448                           ;incstack = 0
  6449                           ; Regs used in _USBCheckCDCRequest: [wreg-fsr0h+status,2+status,0]
  6450  0899  0020               	movlb	0	; select bank0
  6451  089A  0850               	movf	80,w	;volatile
  6452  089B  391F               	andlw	31
  6453  089C  3A01               	xorlw	1
  6454  089D  1D03               	btfss	3,2
  6455  089E  0008               	return
  6456                           
  6457                           ;usb_device_cdc.c: 156: if(SetupPkt.RequestType != (0x20>>5)) return;
  6458  089F  0E50               	swapf	80,w	;volatile
  6459  08A0  0C89               	rrf	9,f
  6460  08A1  3903               	andlw	3
  6461  08A2  3A01               	xorlw	1
  6462  08A3  1D03               	btfss	3,2
  6463  08A4  0008               	return
  6464                           
  6465                           ;usb_device_cdc.c: 162: if((SetupPkt.bIntfID != 0x0)&&
  6466                           ;usb_device_cdc.c: 163: (SetupPkt.bIntfID != 0x01)) return;
  6467  08A5  0854               	movf	84,w	;volatile
  6468  08A6  1903               	btfsc	3,2
  6469  08A7  28E9               	goto	l5654
  6470  08A8  0354               	decf	84,w	;volatile
  6471  08A9  1D03               	btfss	3,2
  6472  08AA  0008               	return
  6473  08AB  28E9               	goto	l5654
  6474  08AC                     l5624:	
  6475                           ;usb_device_cdc.c: 166: {
  6476                           ;usb_device_cdc.c: 168: case 0x00:
  6477                           
  6478                           ;usb_device_cdc.c: 165: switch(SetupPkt.bRequest)
  6479                           
  6480                           
  6481                           ;usb_device_cdc.c: 170: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  6482  08AC  302E               	movlw	low _dummy_encapsulated_cmd_response
  6483  08AD  0021               	movlb	1	; select bank1
  6484  08AE  00C3               	movwf	_inPipes^(0+128)	;volatile
  6485  08AF  3002               	movlw	high _dummy_encapsulated_cmd_response
  6486  08B0  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
  6487                           
  6488                           ;usb_device_cdc.c: 171: inPipes[0].wCount.Val = 0x08;
  6489  08B1  3000               	movlw	0
  6490  08B2  00C7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  6491  08B3  3008               	movlw	8
  6492  08B4  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
  6493                           
  6494                           ;usb_device_cdc.c: 172: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6495  08B5  1445               	bsf	(_inPipes^(0+128)+2),0	;volatile
  6496                           
  6497                           ;usb_device_cdc.c: 173: inPipes[0].info.bits.busy = 1;
  6498  08B6  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  6499                           
  6500                           ;usb_device_cdc.c: 174: break;
  6501  08B7  0008               	return
  6502  08B8                     l5632:	
  6503                           ;usb_device_cdc.c: 175: case 0x01:
  6504                           
  6505                           
  6506                           ;usb_device_cdc.c: 177: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  6507  08B8  302E               	movlw	low _dummy_encapsulated_cmd_response
  6508  08B9  0021               	movlb	1	; select bank1
  6509  08BA  00C3               	movwf	_inPipes^(0+128)	;volatile
  6510  08BB  3002               	movlw	high _dummy_encapsulated_cmd_response
  6511  08BC  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
  6512                           
  6513                           ;usb_device_cdc.c: 178: inPipes[0].info.bits.busy = 1;
  6514  08BD  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  6515                           
  6516                           ;usb_device_cdc.c: 179: break;
  6517  08BE  0008               	return
  6518  08BF                     l5636:	
  6519                           ;usb_device_cdc.c: 183: case 0x20:
  6520                           
  6521                           
  6522                           ;usb_device_cdc.c: 184: outPipes[0].wCount.Val = SetupPkt.wLength;
  6523  08BF  0020               	movlb	0	; select bank0
  6524  08C0  0857               	movf	87,w	;volatile
  6525  08C1  0023               	movlb	3	; select bank3
  6526  08C2  00B4               	movwf	((_outPipes+1)^(0+384)+3)	;volatile
  6527  08C3  0020               	movlb	0	; select bank0
  6528  08C4  0856               	movf	86,w	;volatile
  6529  08C5  0023               	movlb	3	; select bank3
  6530  08C6  00B3               	movwf	(_outPipes^(0+384)+3)	;volatile
  6531                           
  6532                           ;usb_device_cdc.c: 185: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
  6533  08C7  3036               	movlw	(low (_line_coding| (0+512)))& (0+255)
  6534  08C8  0021               	movlb	1	; select bank1
  6535  08C9  00A6               	movwf	??_USBCheckCDCRequest^(0+128)
  6536  08CA  0826               	movf	??_USBCheckCDCRequest^(0+128),w
  6537  08CB  0023               	movlb	3	; select bank3
  6538  08CC  00B0               	movwf	_outPipes^(0+384)	;volatile
  6539                           
  6540                           ;usb_device_cdc.c: 186: outPipes[0].pFunc = (0);
  6541  08CD  01B5               	clrf	(low ((_outPipes| (0+256)+5)))^(0+128)	;volatile
  6542  08CE  01B6               	clrf	((low ((_outPipes| (0+256)+5))+1))^(0+128)	;volatile
  6543                           
  6544                           ;usb_device_cdc.c: 187: outPipes[0].info.bits.busy = 1;
  6545  08CF  17B2               	bsf	(_outPipes^(0+384)+2),7	;volatile
  6546                           
  6547                           ;usb_device_cdc.c: 188: break;
  6548  08D0  0008               	return
  6549  08D1                     l5642:	
  6550                           ;usb_device_cdc.c: 190: case 0x21:
  6551                           
  6552                           
  6553                           ;usb_device_cdc.c: 191: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  6554  08D1  3036               	movlw	low _line_coding
  6555  08D2  0021               	movlb	1	; select bank1
  6556  08D3  00C3               	movwf	_inPipes^(0+128)	;volatile
  6557  08D4  3002               	movlw	high _line_coding
  6558  08D5  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
  6559  08D6  3000               	movlw	0
  6560  08D7  00C7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  6561  08D8  3007               	movlw	7
  6562  08D9  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
  6563  08DA  30C1               	movlw	193
  6564  08DB  00A6               	movwf	??_USBCheckCDCRequest^(0+128)
  6565  08DC  0826               	movf	??_USBCheckCDCRequest^(0+128),w
  6566  08DD  00C5               	movwf	(_inPipes^(0+128)+2)	;volatile
  6567                           
  6568                           ;usb_device_cdc.c: 195: break;
  6569  08DE  0008               	return
  6570  08DF                     l5648:	
  6571                           ;usb_device_cdc.c: 197: case 0x22:
  6572                           
  6573                           
  6574                           ;usb_device_cdc.c: 198: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
  6575  08DF  0020               	movlb	0	; select bank0
  6576  08E0  0852               	movf	82,w	;volatile
  6577  08E1  0021               	movlb	1	; select bank1
  6578  08E2  00A6               	movwf	??_USBCheckCDCRequest^(0+128)
  6579  08E3  0826               	movf	??_USBCheckCDCRequest^(0+128),w
  6580  08E4  0023               	movlb	3	; select bank3
  6581  08E5  00E6               	movwf	_control_signal_bitmap^(0+384)
  6582                           
  6583                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.busy = 1;
  6584  08E6  0021               	movlb	1	; select bank1
  6585  08E7  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  6586                           
  6587                           ;usb_device_cdc.c: 257: }
  6588                           
  6589                           ;usb_device_cdc.c: 256: break;
  6590                           
  6591                           ;usb_device_cdc.c: 255: default:
  6592                           
  6593                           ;usb_device_cdc.c: 231: break;
  6594  08E8  0008               	return
  6595  08E9                     l5654:	
  6596  08E9  0020               	movlb	0	; select bank0
  6597  08EA  0851               	movf	81,w	;volatile
  6598                           
  6599                           ; Switch size 1, requested type "space"
  6600                           ; Number of cases is 5, Range of values is 0 to 34
  6601                           ; switch strategies available:
  6602                           ; Name         Instructions Cycles
  6603                           ; simple_byte           16     9 (average)
  6604                           ; direct_byte           76     6 (fixed)
  6605                           ; jumptable            260     6 (fixed)
  6606                           ;	Chosen strategy is simple_byte
  6607  08EB  3A00               	xorlw	0	; case 0
  6608  08EC  1903               	skipnz
  6609  08ED  28AC               	goto	l5624
  6610  08EE  3A01               	xorlw	1	; case 1
  6611  08EF  1903               	skipnz
  6612  08F0  28B8               	goto	l5632
  6613  08F1  3A21               	xorlw	33	; case 32
  6614  08F2  1903               	skipnz
  6615  08F3  28BF               	goto	l5636
  6616  08F4  3A01               	xorlw	1	; case 33
  6617  08F5  1903               	skipnz
  6618  08F6  28D1               	goto	l5642
  6619  08F7  3A03               	xorlw	3	; case 34
  6620  08F8  1903               	skipnz
  6621  08F9  28DF               	goto	l5648
  6622  08FA  28FB               	goto	l121
  6623  08FB                     l121:	
  6624  08FB  0008               	return
  6625  08FC                     __end_of_USBCheckCDCRequest:	
  6626                           
  6627                           	psect	text23
  6628  135C                     __ptext23:	
  6629 ;; *************** function _CDCInitEP *****************
  6630 ;; Defined at:
  6631 ;;		line 293 in file "mcc_generated_files/usb/usb_device_cdc.c"
  6632 ;; Parameters:    Size  Location     Type
  6633 ;;		None
  6634 ;; Auto vars:     Size  Location     Type
  6635 ;;		None
  6636 ;; Return value:  Size  Location     Type
  6637 ;;                  1    wreg      void 
  6638 ;; Registers used:
  6639 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6640 ;; Tracked objects:
  6641 ;;		On entry : 0/0
  6642 ;;		On exit  : 0/0
  6643 ;;		Unchanged: 0/0
  6644 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6647 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6648 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6649 ;;Total ram usage:        1 bytes
  6650 ;; Hardware stack levels used:    1
  6651 ;; Hardware stack levels required when called:   12
  6652 ;; This function calls:
  6653 ;;		_USBEnableEndpoint
  6654 ;;		_USBTransferOnePacket
  6655 ;; This function is called by:
  6656 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6657 ;;		_main
  6658 ;; This function uses a non-reentrant model
  6659 ;;
  6660                           
  6661                           
  6662                           ;psect for function _CDCInitEP
  6663  135C                     _CDCInitEP:	
  6664                           
  6665                           ;usb_device_cdc.c: 296: line_coding.dwDTERate = 19200;
  6666                           
  6667                           ;incstack = 0
  6668                           ; Regs used in _CDCInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6669  135C  3000               	movlw	0
  6670  135D  0024               	movlb	4	; select bank4
  6671  135E  00B9               	movwf	(_line_coding+3)^(0+512)
  6672  135F  3000               	movlw	0
  6673  1360  00B8               	movwf	(_line_coding+2)^(0+512)
  6674  1361  304B               	movlw	75
  6675  1362  00B7               	movwf	(_line_coding+1)^(0+512)
  6676  1363  3000               	movlw	0
  6677  1364  00B6               	movwf	_line_coding^(0+512)
  6678                           
  6679                           ;usb_device_cdc.c: 297: line_coding.bCharFormat = 0x00;
  6680  1365  01BA               	clrf	(_line_coding^(0+512)+4)
  6681                           
  6682                           ;usb_device_cdc.c: 298: line_coding.bParityType = 0x00;
  6683  1366  01BB               	clrf	(_line_coding^(0+512)+5)
  6684                           
  6685                           ;usb_device_cdc.c: 299: line_coding.bDataBits = 0x08;
  6686  1367  3008               	movlw	8
  6687  1368  0021               	movlb	1	; select bank1
  6688  1369  00B3               	movwf	??_CDCInitEP^(0+128)
  6689  136A  0833               	movf	??_CDCInitEP^(0+128),w
  6690  136B  0024               	movlb	4	; select bank4
  6691  136C  00BC               	movwf	(_line_coding^(0+512)+6)
  6692                           
  6693                           ;usb_device_cdc.c: 301: cdc_rx_len = 0;
  6694  136D  0023               	movlb	3	; select bank3
  6695  136E  01EA               	clrf	_cdc_rx_len^(0+384)
  6696                           
  6697                           ;usb_device_cdc.c: 314: USBEnableEndpoint(1,0x02|0x10|0x08);
  6698  136F  301A               	movlw	26
  6699  1370  0021               	movlb	1	; select bank1
  6700  1371  00B3               	movwf	??_CDCInitEP^(0+128)
  6701  1372  0833               	movf	??_CDCInitEP^(0+128),w
  6702  1373  00AD               	movwf	USBEnableEndpoint@options^(0+128)
  6703  1374  3001               	movlw	1
  6704  1375  3191  2181  3193   	fcall	_USBEnableEndpoint
  6705                           
  6706                           ;usb_device_cdc.c: 315: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
  6707  1378  301E               	movlw	30
  6708  1379  0021               	movlb	1	; select bank1
  6709  137A  00B3               	movwf	??_CDCInitEP^(0+128)
  6710  137B  0833               	movf	??_CDCInitEP^(0+128),w
  6711  137C  00AD               	movwf	USBEnableEndpoint@options^(0+128)
  6712  137D  3002               	movlw	2
  6713  137E  3191  2181  3193   	fcall	_USBEnableEndpoint
  6714                           
  6715                           ;usb_device_cdc.c: 317: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  6716  1381  0021               	movlb	1	; select bank1
  6717  1382  01A6               	clrf	USBTransferOnePacket@dir^(0+128)
  6718  1383  30C0               	movlw	192
  6719  1384  00A7               	movwf	USBTransferOnePacket@data^(0+128)
  6720  1385  3020               	movlw	32
  6721  1386  00A8               	movwf	(USBTransferOnePacket@data^(0+128)+1)
  6722  1387  3040               	movlw	64
  6723  1388  00B3               	movwf	??_CDCInitEP^(0+128)
  6724  1389  0833               	movf	??_CDCInitEP^(0+128),w
  6725  138A  00A9               	movwf	USBTransferOnePacket@len^(0+128)
  6726  138B  3002               	movlw	2
  6727  138C  318D  252A         	fcall	_USBTransferOnePacket
  6728  138E  0021               	movlb	1	; select bank1
  6729  138F  0827               	movf	(?_USBTransferOnePacket+1)^(0+128),w
  6730  1390  0023               	movlb	3	; select bank3
  6731  1391  00D0               	movwf	(_CDCDataOutHandle+1)^(0+384)
  6732  1392  0021               	movlb	1	; select bank1
  6733  1393  0826               	movf	?_USBTransferOnePacket^(0+128),w
  6734  1394  0023               	movlb	3	; select bank3
  6735  1395  00CF               	movwf	_CDCDataOutHandle^(0+384)
  6736                           
  6737                           ;usb_device_cdc.c: 318: CDCDataInHandle = (0);
  6738  1396  01CD               	clrf	_CDCDataInHandle^(0+384)
  6739  1397  01CE               	clrf	(_CDCDataInHandle+1)^(0+384)
  6740                           
  6741                           ;usb_device_cdc.c: 345: cdc_trf_state = 0;
  6742  1398  01E9               	clrf	_cdc_trf_state^(0+384)
  6743  1399  0008               	return
  6744  139A                     __end_of_CDCInitEP:	
  6745                           
  6746                           	psect	text24
  6747  0D2A                     __ptext24:	
  6748 ;; *************** function _USBTransferOnePacket *****************
  6749 ;; Defined at:
  6750 ;;		line 995 in file "mcc_generated_files/usb/usb_device.c"
  6751 ;; Parameters:    Size  Location     Type
  6752 ;;  ep              1    wreg     unsigned char 
  6753 ;;  dir             1    6[BANK1 ] unsigned char 
  6754 ;;  data            2    7[BANK1 ] PTR unsigned char 
  6755 ;;		 -> cdc_data_tx(64), NULL(0), cdc_data_rx(64), 
  6756 ;;  len             1    9[BANK1 ] unsigned char 
  6757 ;; Auto vars:     Size  Location     Type
  6758 ;;  ep              1   14[BANK1 ] unsigned char 
  6759 ;;  handle          2   15[BANK1 ] PTR volatile struct __BD
  6760 ;;		 -> RAM(4096), BDT(48), NULL(0), 
  6761 ;; Return value:  Size  Location     Type
  6762 ;;                  2    6[BANK1 ] PTR void 
  6763 ;; Registers used:
  6764 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6765 ;; Tracked objects:
  6766 ;;		On entry : 0/0
  6767 ;;		On exit  : 0/0
  6768 ;;		Unchanged: 0/0
  6769 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6770 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6771 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6772 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6773 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0
  6774 ;;Total ram usage:       11 bytes
  6775 ;; Hardware stack levels used:    1
  6776 ;; Hardware stack levels required when called:   10
  6777 ;; This function calls:
  6778 ;;		Nothing
  6779 ;; This function is called by:
  6780 ;;		_CDCInitEP
  6781 ;;		_getsUSBUSART
  6782 ;;		_CDCTxService
  6783 ;;		_USBCDCEventHandler
  6784 ;; This function uses a non-reentrant model
  6785 ;;
  6786                           
  6787                           
  6788                           ;psect for function _USBTransferOnePacket
  6789  0D2A                     _USBTransferOnePacket:	
  6790                           
  6791                           ;incstack = 0
  6792                           ; Regs used in _USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
  6793                           ;USBTransferOnePacket@ep stored from wreg
  6794  0D2A  0021               	movlb	1	; select bank1
  6795  0D2B  00AE               	movwf	USBTransferOnePacket@ep^(0+128)
  6796                           
  6797                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  6798                           ;usb_device.c: 1000: if(dir != 0)
  6799  0D2C  0826               	movf	USBTransferOnePacket@dir^(0+128),w
  6800  0D2D  1903               	btfsc	3,2
  6801  0D2E  2D38               	goto	l5586
  6802                           
  6803                           ;usb_device.c: 1001: {
  6804                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  6805  0D2F  352E               	lslf	USBTransferOnePacket@ep^(0+128),w
  6806  0D30  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  6807  0D31  0086               	movwf	6
  6808  0D32  3001               	movlw	1	; select bank3/4
  6809  0D33  0087               	movwf	7
  6810  0D34  3F40               	moviw [0]fsr1
  6811  0D35  00AF               	movwf	USBTransferOnePacket@handle^(0+128)
  6812  0D36  3F41               	moviw [1]fsr1
  6813  0D37  2D40               	goto	L9
  6814  0D38                     l5586:	
  6815                           ;usb_device.c: 1004: }
  6816                           
  6817                           
  6818                           ;usb_device.c: 1005: else
  6819                           ;usb_device.c: 1006: {
  6820                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  6821  0D38  352E               	lslf	USBTransferOnePacket@ep^(0+128),w
  6822  0D39  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  6823  0D3A  0086               	movwf	6
  6824  0D3B  3001               	movlw	1	; select bank3/4
  6825  0D3C  0087               	movwf	7
  6826  0D3D  3F40               	moviw [0]fsr1
  6827  0D3E  00AF               	movwf	USBTransferOnePacket@handle^(0+128)
  6828  0D3F  3F41               	moviw [1]fsr1
  6829  0D40                     L9:	
  6830  0D40  00B0               	movwf	(USBTransferOnePacket@handle+1)^(0+128)
  6831                           
  6832                           ;usb_device.c: 1009: }
  6833                           ;usb_device.c: 1013: if(handle == 0)
  6834  0D41  082F               	movf	USBTransferOnePacket@handle^(0+128),w
  6835  0D42  0430               	iorwf	(USBTransferOnePacket@handle+1)^(0+128),w
  6836  0D43  1D03               	btfss	3,2
  6837  0D44  2D48               	goto	l5594
  6838                           
  6839                           ;usb_device.c: 1014: {
  6840                           ;usb_device.c: 1015: return 0;
  6841  0D45  01A6               	clrf	?_USBTransferOnePacket^(0+128)
  6842  0D46  01A7               	clrf	(?_USBTransferOnePacket+1)^(0+128)
  6843  0D47  0008               	return
  6844  0D48                     l5594:	
  6845                           
  6846                           ;usb_device.c: 1016: }
  6847                           ;usb_device.c: 1029: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
  6848  0D48  30FF               	movlw	255
  6849  0D49  0527               	andwf	USBTransferOnePacket@data^(0+128),w
  6850  0D4A  00AA               	movwf	??_USBTransferOnePacket^(0+128)
  6851  0D4B  307F               	movlw	127
  6852  0D4C  0528               	andwf	(USBTransferOnePacket@data+1)^(0+128),w
  6853  0D4D  00AB               	movwf	(??_USBTransferOnePacket+1)^(0+128)
  6854  0D4E  082F               	movf	USBTransferOnePacket@handle^(0+128),w
  6855  0D4F  0086               	movwf	6
  6856  0D50  0830               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  6857  0D51  0087               	movwf	7
  6858  0D52  3142               	addfsr 1,2
  6859  0D53  082A               	movf	??_USBTransferOnePacket^(0+128),w
  6860  0D54  3FC0               	movwi [0]fsr1
  6861  0D55  082B               	movf	(??_USBTransferOnePacket^(0+128)+1),w
  6862  0D56  3FC1               	movwi [1]fsr1
  6863                           
  6864                           ;usb_device.c: 1030: handle->CNT = len;
  6865  0D57  082F               	movf	USBTransferOnePacket@handle^(0+128),w
  6866  0D58  3E01               	addlw	1
  6867  0D59  00AA               	movwf	??_USBTransferOnePacket^(0+128)
  6868  0D5A  3000               	movlw	0
  6869  0D5B  3D30               	addwfc	(USBTransferOnePacket@handle+1)^(0+128),w
  6870  0D5C  00AB               	movwf	(??_USBTransferOnePacket+1)^(0+128)
  6871  0D5D  082A               	movf	??_USBTransferOnePacket^(0+128),w
  6872  0D5E  0086               	movwf	6
  6873  0D5F  082B               	movf	(??_USBTransferOnePacket+1)^(0+128),w
  6874  0D60  0087               	movwf	7
  6875  0D61  0829               	movf	USBTransferOnePacket@len^(0+128),w
  6876  0D62  0081               	movwf	1
  6877                           
  6878                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  6879  0D63  3040               	movlw	64
  6880  0D64  00AA               	movwf	??_USBTransferOnePacket^(0+128)
  6881  0D65  082F               	movf	USBTransferOnePacket@handle^(0+128),w
  6882  0D66  0086               	movwf	6
  6883  0D67  0830               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  6884  0D68  0087               	movwf	7
  6885  0D69  082A               	movf	??_USBTransferOnePacket^(0+128),w
  6886  0D6A  0581               	andwf	1,f
  6887                           
  6888                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  6889  0D6B  082F               	movf	USBTransferOnePacket@handle^(0+128),w
  6890  0D6C  0086               	movwf	6
  6891  0D6D  0830               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  6892  0D6E  0087               	movwf	7
  6893  0D6F  1581               	bsf	1,3
  6894                           
  6895                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  6896  0D70  082F               	movf	USBTransferOnePacket@handle^(0+128),w
  6897  0D71  0086               	movwf	6
  6898  0D72  0830               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  6899  0D73  0087               	movwf	7
  6900  0D74  1781               	bsf	1,7
  6901                           
  6902                           ;usb_device.c: 1036: if(dir != 0)
  6903  0D75  0826               	movf	USBTransferOnePacket@dir^(0+128),w
  6904  0D76  1903               	btfsc	3,2
  6905  0D77  2D91               	goto	l5604
  6906                           
  6907                           ;usb_device.c: 1037: {
  6908                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  6909  0D78  352E               	lslf	USBTransferOnePacket@ep^(0+128),w
  6910  0D79  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  6911  0D7A  0086               	movwf	6
  6912  0D7B  3001               	movlw	1	; select bank3/4
  6913  0D7C  0087               	movwf	7
  6914  0D7D  3F40               	moviw [0]fsr1
  6915  0D7E  00AA               	movwf	??_USBTransferOnePacket^(0+128)
  6916  0D7F  3F41               	moviw [1]fsr1
  6917  0D80  00AB               	movwf	(??_USBTransferOnePacket^(0+128)+1)
  6918  0D81  3004               	movlw	4
  6919  0D82  062A               	xorwf	??_USBTransferOnePacket^(0+128),w
  6920  0D83  00AC               	movwf	(??_USBTransferOnePacket+2)^(0+128)
  6921  0D84  3000               	movlw	0
  6922  0D85  062B               	xorwf	(??_USBTransferOnePacket+1)^(0+128),w
  6923  0D86  00AD               	movwf	(??_USBTransferOnePacket+3)^(0+128)
  6924  0D87  352E               	lslf	USBTransferOnePacket@ep^(0+128),w
  6925  0D88  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  6926  0D89  0086               	movwf	6
  6927  0D8A  3001               	movlw	1	; select bank3/4
  6928  0D8B  0087               	movwf	7
  6929  0D8C  082C               	movf	(??_USBTransferOnePacket+2)^(0+128),w
  6930  0D8D  3FC0               	movwi [0]fsr1
  6931  0D8E  082D               	movf	(??_USBTransferOnePacket+3)^(0+128),w
  6932  0D8F  3FC1               	movwi [1]fsr1
  6933                           
  6934                           ;usb_device.c: 1040: }
  6935  0D90  2DA9               	goto	l5606
  6936  0D91                     l5604:	
  6937                           
  6938                           ;usb_device.c: 1041: else
  6939                           ;usb_device.c: 1042: {
  6940                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  6941  0D91  352E               	lslf	USBTransferOnePacket@ep^(0+128),w
  6942  0D92  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  6943  0D93  0086               	movwf	6
  6944  0D94  3001               	movlw	1	; select bank3/4
  6945  0D95  0087               	movwf	7
  6946  0D96  3F40               	moviw [0]fsr1
  6947  0D97  00AA               	movwf	??_USBTransferOnePacket^(0+128)
  6948  0D98  3F41               	moviw [1]fsr1
  6949  0D99  00AB               	movwf	(??_USBTransferOnePacket^(0+128)+1)
  6950  0D9A  3004               	movlw	4
  6951  0D9B  062A               	xorwf	??_USBTransferOnePacket^(0+128),w
  6952  0D9C  00AC               	movwf	(??_USBTransferOnePacket+2)^(0+128)
  6953  0D9D  3000               	movlw	0
  6954  0D9E  062B               	xorwf	(??_USBTransferOnePacket+1)^(0+128),w
  6955  0D9F  00AD               	movwf	(??_USBTransferOnePacket+3)^(0+128)
  6956  0DA0  352E               	lslf	USBTransferOnePacket@ep^(0+128),w
  6957  0DA1  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  6958  0DA2  0086               	movwf	6
  6959  0DA3  3001               	movlw	1	; select bank3/4
  6960  0DA4  0087               	movwf	7
  6961  0DA5  082C               	movf	(??_USBTransferOnePacket+2)^(0+128),w
  6962  0DA6  3FC0               	movwi [0]fsr1
  6963  0DA7  082D               	movf	(??_USBTransferOnePacket+3)^(0+128),w
  6964  0DA8  3FC1               	movwi [1]fsr1
  6965  0DA9                     l5606:	
  6966                           
  6967                           ;usb_device.c: 1045: }
  6968                           ;usb_device.c: 1046: return (void*)handle;
  6969  0DA9  0830               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  6970  0DAA  00A7               	movwf	(?_USBTransferOnePacket+1)^(0+128)
  6971  0DAB  082F               	movf	USBTransferOnePacket@handle^(0+128),w
  6972  0DAC  00A6               	movwf	?_USBTransferOnePacket^(0+128)
  6973  0DAD  0008               	return
  6974  0DAE                     __end_of_USBTransferOnePacket:	
  6975                           
  6976                           	psect	text25
  6977  1181                     __ptext25:	
  6978 ;; *************** function _USBEnableEndpoint *****************
  6979 ;; Defined at:
  6980 ;;		line 878 in file "mcc_generated_files/usb/usb_device.c"
  6981 ;; Parameters:    Size  Location     Type
  6982 ;;  ep              1    wreg     unsigned char 
  6983 ;;  options         1   13[BANK1 ] unsigned char 
  6984 ;; Auto vars:     Size  Location     Type
  6985 ;;  ep              1   18[BANK1 ] unsigned char 
  6986 ;;  p               2   16[BANK1 ] PTR unsigned char 
  6987 ;;		 -> UEP0(1), 
  6988 ;; Return value:  Size  Location     Type
  6989 ;;                  1    wreg      void 
  6990 ;; Registers used:
  6991 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6992 ;; Tracked objects:
  6993 ;;		On entry : 0/0
  6994 ;;		On exit  : 0/0
  6995 ;;		Unchanged: 0/0
  6996 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6997 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6998 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6999 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7000 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  7001 ;;Total ram usage:        6 bytes
  7002 ;; Hardware stack levels used:    1
  7003 ;; Hardware stack levels required when called:   11
  7004 ;; This function calls:
  7005 ;;		_USBConfigureEndpoint
  7006 ;; This function is called by:
  7007 ;;		_CDCInitEP
  7008 ;; This function uses a non-reentrant model
  7009 ;;
  7010                           
  7011                           
  7012                           ;psect for function _USBEnableEndpoint
  7013  1181                     _USBEnableEndpoint:	
  7014                           
  7015                           ;incstack = 0
  7016                           ; Regs used in _USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7017                           ;USBEnableEndpoint@ep stored from wreg
  7018  1181  0021               	movlb	1	; select bank1
  7019  1182  00B2               	movwf	USBEnableEndpoint@ep^(0+128)
  7020                           
  7021                           ;usb_device.c: 880: unsigned char* p;
  7022                           ;usb_device.c: 884: if(options & 0x04)
  7023  1183  1D2D               	btfss	USBEnableEndpoint@options^(0+128),2
  7024  1184  298A               	goto	l5574
  7025                           
  7026                           ;usb_device.c: 885: {
  7027                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
  7028  1185  01A6               	clrf	USBConfigureEndpoint@direction^(0+128)
  7029  1186  0832               	movf	USBEnableEndpoint@ep^(0+128),w
  7030  1187  3193  23DC  3191   	fcall	_USBConfigureEndpoint
  7031  118A                     l5574:	
  7032                           
  7033                           ;usb_device.c: 887: }
  7034                           ;usb_device.c: 888: if(options & 0x02)
  7035  118A  0021               	movlb	1	; select bank1
  7036  118B  1CAD               	btfss	USBEnableEndpoint@options^(0+128),1
  7037  118C  2992               	goto	l5578
  7038                           
  7039                           ;usb_device.c: 889: {
  7040                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
  7041  118D  01A6               	clrf	USBConfigureEndpoint@direction^(0+128)
  7042  118E  0AA6               	incf	USBConfigureEndpoint@direction^(0+128),f
  7043  118F  0832               	movf	USBEnableEndpoint@ep^(0+128),w
  7044  1190  3193  23DC         	fcall	_USBConfigureEndpoint
  7045  1192                     l5578:	
  7046                           
  7047                           ;usb_device.c: 891: }
  7048                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
  7049  1192  0021               	movlb	1	; select bank1
  7050  1193  0832               	movf	USBEnableEndpoint@ep^(0+128),w
  7051  1194  3E98               	addlw	152
  7052  1195  00AE               	movwf	??_USBEnableEndpoint^(0+128)
  7053  1196  01AF               	clrf	(??_USBEnableEndpoint^(0+128)+1)
  7054  1197  300E               	movlw	14
  7055  1198  3DAF               	addwfc	(??_USBEnableEndpoint^(0+128)+1),f
  7056  1199  082E               	movf	??_USBEnableEndpoint^(0+128),w
  7057  119A  00B0               	movwf	USBEnableEndpoint@p^(0+128)
  7058  119B  082F               	movf	(??_USBEnableEndpoint+1)^(0+128),w
  7059  119C  00B1               	movwf	(USBEnableEndpoint@p+1)^(0+128)
  7060                           
  7061                           ;usb_device.c: 901: *p = options;
  7062  119D  0830               	movf	USBEnableEndpoint@p^(0+128),w
  7063  119E  0086               	movwf	6
  7064  119F  0831               	movf	(USBEnableEndpoint@p+1)^(0+128),w
  7065  11A0  0087               	movwf	7
  7066  11A1  082D               	movf	USBEnableEndpoint@options^(0+128),w
  7067  11A2  0081               	movwf	1
  7068  11A3  0008               	return
  7069  11A4                     __end_of_USBEnableEndpoint:	
  7070                           
  7071                           	psect	text26
  7072  13DC                     __ptext26:	
  7073 ;; *************** function _USBConfigureEndpoint *****************
  7074 ;; Defined at:
  7075 ;;		line 1543 in file "mcc_generated_files/usb/usb_device.c"
  7076 ;; Parameters:    Size  Location     Type
  7077 ;;  EPNum           1    wreg     unsigned char 
  7078 ;;  direction       1    6[BANK1 ] unsigned char 
  7079 ;; Auto vars:     Size  Location     Type
  7080 ;;  EPNum           1   11[BANK1 ] unsigned char 
  7081 ;;  handle          1   12[BANK1 ] PTR volatile struct __BD
  7082 ;;		 -> BDT(48), 
  7083 ;; Return value:  Size  Location     Type
  7084 ;;                  1    wreg      void 
  7085 ;; Registers used:
  7086 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7087 ;; Tracked objects:
  7088 ;;		On entry : 0/0
  7089 ;;		On exit  : 0/0
  7090 ;;		Unchanged: 0/0
  7091 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7092 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7093 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7094 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7095 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  7096 ;;Total ram usage:        7 bytes
  7097 ;; Hardware stack levels used:    1
  7098 ;; Hardware stack levels required when called:   10
  7099 ;; This function calls:
  7100 ;;		Nothing
  7101 ;; This function is called by:
  7102 ;;		_USBEnableEndpoint
  7103 ;; This function uses a non-reentrant model
  7104 ;;
  7105                           
  7106                           
  7107                           ;psect for function _USBConfigureEndpoint
  7108  13DC                     _USBConfigureEndpoint:	
  7109                           
  7110                           ;incstack = 0
  7111                           ; Regs used in _USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
  7112                           ;USBConfigureEndpoint@EPNum stored from wreg
  7113  13DC  0021               	movlb	1	; select bank1
  7114  13DD  00AB               	movwf	USBConfigureEndpoint@EPNum^(0+128)
  7115                           
  7116                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
  7117                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
  7118  13DE  3020               	movlw	32
  7119  13DF  00A7               	movwf	??_USBConfigureEndpoint^(0+128)
  7120  13E0  0827               	movf	??_USBConfigureEndpoint^(0+128),w
  7121  13E1  00AC               	movwf	USBConfigureEndpoint@handle^(0+128)
  7122                           
  7123                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
  7124  13E2  0826               	movf	USBConfigureEndpoint@direction^(0+128),w
  7125  13E3  00A7               	movwf	??_USBConfigureEndpoint^(0+128)
  7126  13E4  3001               	movlw	1
  7127  13E5                     u5795:	
  7128  13E5  35A7               	lslf	??_USBConfigureEndpoint^(0+128),f
  7129  13E6  0B89               	decfsz	9,f
  7130  13E7  2BE5               	goto	u5795
  7131  13E8  082B               	movf	USBConfigureEndpoint@EPNum^(0+128),w
  7132  13E9  00A8               	movwf	(??_USBConfigureEndpoint+1)^(0+128)
  7133  13EA  3001               	movlw	1
  7134  13EB                     u5805:	
  7135  13EB  35A8               	lslf	(??_USBConfigureEndpoint+1)^(0+128),f
  7136  13EC  3EFF               	addlw	-1
  7137  13ED  1D03               	skipz
  7138  13EE  2BEB               	goto	u5805
  7139  13EF  3528               	lslf	(??_USBConfigureEndpoint+1)^(0+128),w
  7140  13F0  0727               	addwf	??_USBConfigureEndpoint^(0+128),w
  7141  13F1  00A9               	movwf	(??_USBConfigureEndpoint+2)^(0+128)
  7142  13F2  3001               	movlw	1
  7143  13F3                     u5815:	
  7144  13F3  35A9               	lslf	(??_USBConfigureEndpoint+2)^(0+128),f
  7145  13F4  3EFF               	addlw	-1
  7146  13F5  1D03               	skipz
  7147  13F6  2BF3               	goto	u5815
  7148  13F7  3529               	lslf	(??_USBConfigureEndpoint+2)^(0+128),w
  7149  13F8  00AA               	movwf	(??_USBConfigureEndpoint+3)^(0+128)
  7150  13F9  082A               	movf	(??_USBConfigureEndpoint+3)^(0+128),w
  7151  13FA  07AC               	addwf	USBConfigureEndpoint@handle^(0+128),f
  7152                           
  7153                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
  7154  13FB  082C               	movf	USBConfigureEndpoint@handle^(0+128),w
  7155  13FC  0086               	movwf	6
  7156  13FD  0187               	clrf	7
  7157  13FE  1381               	bcf	1,7
  7158                           
  7159                           ;usb_device.c: 1557: if(direction == 0)
  7160  13FF  0826               	movf	USBConfigureEndpoint@direction^(0+128),w
  7161  1400  1D03               	btfss	3,2
  7162  1401  2C0C               	goto	l5564
  7163                           
  7164                           ;usb_device.c: 1558: {
  7165                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
  7166  1402  352B               	lslf	USBConfigureEndpoint@EPNum^(0+128),w
  7167  1403  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  7168  1404  0086               	movwf	6
  7169  1405  3001               	movlw	1	; select bank3/4
  7170  1406  0087               	movwf	7
  7171  1407  082C               	movf	USBConfigureEndpoint@handle^(0+128),w
  7172  1408  3FC0               	movwi [0]fsr1
  7173  1409  3000               	movlw	0
  7174  140A  3FC1               	movwi [1]fsr1
  7175                           
  7176                           ;usb_device.c: 1560: }
  7177  140B  2C15               	goto	l5566
  7178  140C                     l5564:	
  7179                           
  7180                           ;usb_device.c: 1561: else
  7181                           ;usb_device.c: 1562: {
  7182                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
  7183  140C  352B               	lslf	USBConfigureEndpoint@EPNum^(0+128),w
  7184  140D  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  7185  140E  0086               	movwf	6
  7186  140F  3001               	movlw	1	; select bank3/4
  7187  1410  0087               	movwf	7
  7188  1411  082C               	movf	USBConfigureEndpoint@handle^(0+128),w
  7189  1412  3FC0               	movwi [0]fsr1
  7190  1413  3000               	movlw	0
  7191  1414  3FC1               	movwi [1]fsr1
  7192  1415                     l5566:	
  7193                           
  7194                           ;usb_device.c: 1564: }
  7195                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
  7196  1415  082C               	movf	USBConfigureEndpoint@handle^(0+128),w
  7197  1416  0086               	movwf	6
  7198  1417  0187               	clrf	7
  7199  1418  1301               	bcf	1,6
  7200                           
  7201                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
  7202  1419  082C               	movf	USBConfigureEndpoint@handle^(0+128),w
  7203  141A  3E04               	addlw	4
  7204  141B  0086               	movwf	6
  7205  141C  0187               	clrf	7
  7206  141D  1701               	bsf	1,6
  7207  141E  0008               	return
  7208  141F                     __end_of_USBConfigureEndpoint:	
  7209                           
  7210                           	psect	text27
  7211  12EA                     __ptext27:	
  7212 ;; *************** function _USBCtrlTrfOutHandler *****************
  7213 ;; Defined at:
  7214 ;;		line 2538 in file "mcc_generated_files/usb/usb_device.c"
  7215 ;; Parameters:    Size  Location     Type
  7216 ;;		None
  7217 ;; Auto vars:     Size  Location     Type
  7218 ;;		None
  7219 ;; Return value:  Size  Location     Type
  7220 ;;                  1    wreg      void 
  7221 ;; Registers used:
  7222 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7223 ;; Tracked objects:
  7224 ;;		On entry : 0/0
  7225 ;;		On exit  : 0/0
  7226 ;;		Unchanged: 0/0
  7227 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7230 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7231 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7232 ;;Total ram usage:        2 bytes
  7233 ;; Hardware stack levels used:    1
  7234 ;; Hardware stack levels required when called:   12
  7235 ;; This function calls:
  7236 ;;		_USBCtrlTrfRxService
  7237 ;; This function is called by:
  7238 ;;		_USBCtrlEPService
  7239 ;; This function uses a non-reentrant model
  7240 ;;
  7241                           
  7242                           
  7243                           ;psect for function _USBCtrlTrfOutHandler
  7244  12EA                     _USBCtrlTrfOutHandler:	
  7245                           
  7246                           ;usb_device.c: 2540: if(controlTransferState == 2)
  7247                           
  7248                           ;incstack = 0
  7249                           ; Regs used in _USBCtrlTrfOutHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7250  12EA  3002               	movlw	2
  7251  12EB  0023               	movlb	3	; select bank3
  7252  12EC  0662               	xorwf	_controlTransferState^(0+384),w	;volatile
  7253  12ED  1D03               	btfss	3,2
  7254  12EE  2AF2               	goto	l6166
  7255                           
  7256                           ;usb_device.c: 2541: {
  7257                           ;usb_device.c: 2542: USBCtrlTrfRxService();
  7258  12EF  3186  260B         	fcall	_USBCtrlTrfRxService
  7259                           
  7260                           ;usb_device.c: 2543: }
  7261  12F1  0008               	return
  7262  12F2                     l6166:	
  7263                           
  7264                           ;usb_device.c: 2544: else
  7265                           ;usb_device.c: 2545: {
  7266                           ;usb_device.c: 2548: controlTransferState = 0;
  7267  12F2  0023               	movlb	3	; select bank3
  7268  12F3  01E2               	clrf	_controlTransferState^(0+384)	;volatile
  7269                           
  7270                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
  7271  12F4  085D               	movf	_BothEP0OutUOWNsSet^(0+384),w	;volatile
  7272  12F5  1D03               	btfss	3,2
  7273  12F6  2B1D               	goto	l6178
  7274                           
  7275                           ;usb_device.c: 2556: {
  7276                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 8;
  7277  12F7  0021               	movlb	1	; select bank1
  7278  12F8  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7279  12F9  3E01               	addlw	1
  7280  12FA  00AC               	movwf	??_USBCtrlTrfOutHandler^(0+128)
  7281  12FB  3000               	movlw	0
  7282  12FC  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7283  12FD  00AD               	movwf	(??_USBCtrlTrfOutHandler+1)^(0+128)
  7284  12FE  082C               	movf	??_USBCtrlTrfOutHandler^(0+128),w
  7285  12FF  0086               	movwf	6
  7286  1300  082D               	movf	(??_USBCtrlTrfOutHandler+1)^(0+128),w
  7287  1301  0087               	movwf	7
  7288  1302  3008               	movlw	8
  7289  1303  0081               	movwf	1
  7290                           
  7291                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  7292  1304  3050               	movlw	80
  7293  1305  00AC               	movwf	??_USBCtrlTrfOutHandler^(0+128)
  7294  1306  3000               	movlw	0
  7295  1307  00AD               	movwf	(??_USBCtrlTrfOutHandler^(0+128)+1)
  7296  1308  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7297  1309  0086               	movwf	6
  7298  130A  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7299  130B  0087               	movwf	7
  7300  130C  3142               	addfsr 1,2
  7301  130D  082C               	movf	??_USBCtrlTrfOutHandler^(0+128),w
  7302  130E  3FC0               	movwi [0]fsr1
  7303  130F  082D               	movf	(??_USBCtrlTrfOutHandler^(0+128)+1),w
  7304  1310  3FC1               	movwi [1]fsr1
  7305                           
  7306                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  7307  1311  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7308  1312  0086               	movwf	6
  7309  1313  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7310  1314  0087               	movwf	7
  7311  1315  300C               	movlw	12
  7312  1316  0081               	movwf	1
  7313                           
  7314                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7315  1317  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7316  1318  0086               	movwf	6
  7317  1319  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7318  131A  0087               	movwf	7
  7319  131B  1781               	bsf	1,7
  7320                           
  7321                           ;usb_device.c: 2561: }
  7322  131C  0008               	return
  7323  131D                     l6178:	
  7324                           
  7325                           ;usb_device.c: 2562: else
  7326                           ;usb_device.c: 2563: {
  7327                           ;usb_device.c: 2564: BothEP0OutUOWNsSet = 0;
  7328  131D  0023               	movlb	3	; select bank3
  7329  131E  01DD               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  7330  131F  0008               	return
  7331  1320                     __end_of_USBCtrlTrfOutHandler:	
  7332                           
  7333                           	psect	text28
  7334  060B                     __ptext28:	
  7335 ;; *************** function _USBCtrlTrfRxService *****************
  7336 ;; Defined at:
  7337 ;;		line 1852 in file "mcc_generated_files/usb/usb_device.c"
  7338 ;; Parameters:    Size  Location     Type
  7339 ;;		None
  7340 ;; Auto vars:     Size  Location     Type
  7341 ;;  byteToRead      1   11[BANK1 ] unsigned char 
  7342 ;;  i               1   10[BANK1 ] unsigned char 
  7343 ;; Return value:  Size  Location     Type
  7344 ;;                  1    wreg      void 
  7345 ;; Registers used:
  7346 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7347 ;; Tracked objects:
  7348 ;;		On entry : 0/0
  7349 ;;		On exit  : 0/0
  7350 ;;		Unchanged: 0/0
  7351 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7353 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7354 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7355 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7356 ;;Total ram usage:        4 bytes
  7357 ;; Hardware stack levels used:    1
  7358 ;; Hardware stack levels required when called:   11
  7359 ;; This function calls:
  7360 ;;		_USBCtrlEPAllowStatusStage
  7361 ;; This function is called by:
  7362 ;;		_USBCtrlTrfOutHandler
  7363 ;; This function uses a non-reentrant model
  7364 ;;
  7365                           
  7366                           
  7367                           ;psect for function _USBCtrlTrfRxService
  7368  060B                     _USBCtrlTrfRxService:	
  7369                           
  7370                           ;usb_device.c: 1854: uint8_t byteToRead;
  7371                           ;usb_device.c: 1855: uint8_t i;
  7372                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  7373                           
  7374                           ;incstack = 0
  7375                           ; Regs used in _USBCtrlTrfRxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7376  060B  0023               	movlb	3	; select bank3
  7377  060C  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  7378  060D  0086               	movwf	6
  7379  060E  0187               	clrf	7
  7380  060F  3F41               	moviw [1]fsr1
  7381  0610  0021               	movlb	1	; select bank1
  7382  0611  00AB               	movwf	USBCtrlTrfRxService@byteToRead^(0+128)
  7383                           
  7384                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
  7385  0612  082B               	movf	USBCtrlTrfRxService@byteToRead^(0+128),w
  7386  0613  00A8               	movwf	??_USBCtrlTrfRxService^(0+128)
  7387  0614  01A9               	clrf	(??_USBCtrlTrfRxService^(0+128)+1)
  7388  0615  0829               	movf	(??_USBCtrlTrfRxService+1)^(0+128),w
  7389  0616  0023               	movlb	3	; select bank3
  7390  0617  0234               	subwf	((_outPipes+1)^(0+384)+3),w	;volatile
  7391  0618  1D03               	skipz
  7392  0619  2E1E               	goto	u6435
  7393  061A  0021               	movlb	1	; select bank1
  7394  061B  0828               	movf	??_USBCtrlTrfRxService^(0+128),w
  7395  061C  0023               	movlb	3	; select bank3
  7396  061D  0233               	subwf	(_outPipes^(0+384)+3),w	;volatile
  7397  061E                     u6435:	
  7398  061E  1803               	skipnc
  7399  061F  2E25               	goto	l477
  7400                           
  7401                           ;usb_device.c: 1866: {
  7402                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
  7403  0620  0833               	movf	(_outPipes^(0+384)+3),w	;volatile
  7404  0621  0021               	movlb	1	; select bank1
  7405  0622  00A8               	movwf	??_USBCtrlTrfRxService^(0+128)
  7406  0623  0828               	movf	??_USBCtrlTrfRxService^(0+128),w
  7407  0624  00AB               	movwf	USBCtrlTrfRxService@byteToRead^(0+128)
  7408  0625                     l477:	
  7409                           
  7410                           ;usb_device.c: 1868: }
  7411                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
  7412  0625  0021               	movlb	1	; select bank1
  7413  0626  082B               	movf	USBCtrlTrfRxService@byteToRead^(0+128),w
  7414  0627  00A8               	movwf	??_USBCtrlTrfRxService^(0+128)
  7415  0628  01A9               	clrf	(??_USBCtrlTrfRxService^(0+128)+1)
  7416  0629  0828               	movf	??_USBCtrlTrfRxService^(0+128),w
  7417  062A  0023               	movlb	3	; select bank3
  7418  062B  02B3               	subwf	(_outPipes^(0+384)+3),f	;volatile
  7419  062C  0021               	movlb	1	; select bank1
  7420  062D  0829               	movf	(??_USBCtrlTrfRxService+1)^(0+128),w
  7421  062E  0023               	movlb	3	; select bank3
  7422  062F  3BB4               	subwfb	((_outPipes+1)^(0+384)+3),f	;volatile
  7423                           
  7424                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
  7425  0630  0021               	movlb	1	; select bank1
  7426  0631  01AA               	clrf	USBCtrlTrfRxService@i^(0+128)
  7427  0632                     l6066:	
  7428  0632  082B               	movf	USBCtrlTrfRxService@byteToRead^(0+128),w
  7429  0633  022A               	subwf	USBCtrlTrfRxService@i^(0+128),w
  7430  0634  1803               	btfsc	3,0
  7431  0635  2E4F               	goto	l6068
  7432                           
  7433                           ;usb_device.c: 1875: {
  7434                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  7435  0636  082A               	movf	USBCtrlTrfRxService@i^(0+128),w
  7436  0637  3E58               	addlw	88
  7437  0638  0086               	movwf	6
  7438  0639  0187               	clrf	7
  7439  063A  0801               	movf	1,w
  7440  063B  00A8               	movwf	??_USBCtrlTrfRxService^(0+128)
  7441  063C  0023               	movlb	3	; select bank3
  7442  063D  0830               	movf	_outPipes^(0+384),w	;volatile
  7443  063E  0086               	movwf	6
  7444  063F  3002               	movlw	2	; select bank4/5
  7445  0640  0087               	movwf	7
  7446  0641  0021               	movlb	1	; select bank1
  7447  0642  0828               	movf	??_USBCtrlTrfRxService^(0+128),w
  7448  0643  0081               	movwf	1
  7449  0644  3001               	movlw	1
  7450  0645  00A8               	movwf	??_USBCtrlTrfRxService^(0+128)
  7451  0646  0828               	movf	??_USBCtrlTrfRxService^(0+128),w
  7452  0647  0023               	movlb	3	; select bank3
  7453  0648  07B0               	addwf	_outPipes^(0+384),f	;volatile
  7454  0649  3001               	movlw	1
  7455  064A  0021               	movlb	1	; select bank1
  7456  064B  00A8               	movwf	??_USBCtrlTrfRxService^(0+128)
  7457  064C  0828               	movf	??_USBCtrlTrfRxService^(0+128),w
  7458  064D  07AA               	addwf	USBCtrlTrfRxService@i^(0+128),f
  7459  064E  2E32               	goto	l6066
  7460  064F                     l6068:	
  7461                           
  7462                           ;usb_device.c: 1877: }
  7463                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
  7464  064F  0023               	movlb	3	; select bank3
  7465  0650  0833               	movf	(_outPipes^(0+384)+3),w	;volatile
  7466  0651  0434               	iorwf	((_outPipes+1)^(0+384)+3),w	;volatile
  7467  0652  1903               	btfsc	3,2
  7468  0653  2E8E               	goto	l6080
  7469                           
  7470                           ;usb_device.c: 1882: {
  7471                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
  7472  0654  0021               	movlb	1	; select bank1
  7473  0655  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7474  0656  3E01               	addlw	1
  7475  0657  00A8               	movwf	??_USBCtrlTrfRxService^(0+128)
  7476  0658  3000               	movlw	0
  7477  0659  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7478  065A  00A9               	movwf	(??_USBCtrlTrfRxService+1)^(0+128)
  7479  065B  0828               	movf	??_USBCtrlTrfRxService^(0+128),w
  7480  065C  0086               	movwf	6
  7481  065D  0829               	movf	(??_USBCtrlTrfRxService+1)^(0+128),w
  7482  065E  0087               	movwf	7
  7483  065F  3008               	movlw	8
  7484  0660  0081               	movwf	1
  7485                           
  7486                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  7487  0661  3058               	movlw	88
  7488  0662  00A8               	movwf	??_USBCtrlTrfRxService^(0+128)
  7489  0663  3000               	movlw	0
  7490  0664  00A9               	movwf	(??_USBCtrlTrfRxService^(0+128)+1)
  7491  0665  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7492  0666  0086               	movwf	6
  7493  0667  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7494  0668  0087               	movwf	7
  7495  0669  3142               	addfsr 1,2
  7496  066A  0828               	movf	??_USBCtrlTrfRxService^(0+128),w
  7497  066B  3FC0               	movwi [0]fsr1
  7498  066C  0829               	movf	(??_USBCtrlTrfRxService^(0+128)+1),w
  7499  066D  3FC1               	movwi [1]fsr1
  7500                           
  7501                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  7502  066E  0023               	movlb	3	; select bank3
  7503  066F  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  7504  0670  0086               	movwf	6
  7505  0671  0187               	clrf	7
  7506  0672  1B01               	btfsc	1,6
  7507  0673  2E81               	goto	l6078
  7508                           
  7509                           ;usb_device.c: 1886: {
  7510                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  7511  0674  0021               	movlb	1	; select bank1
  7512  0675  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7513  0676  0086               	movwf	6
  7514  0677  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7515  0678  0087               	movwf	7
  7516  0679  3048               	movlw	72
  7517  067A  0081               	movwf	1
  7518                           
  7519                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7520  067B  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7521  067C  0086               	movwf	6
  7522  067D  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7523  067E  0087               	movwf	7
  7524  067F  1781               	bsf	1,7
  7525                           
  7526                           ;usb_device.c: 1889: }
  7527  0680  0008               	return
  7528  0681                     l6078:	
  7529                           
  7530                           ;usb_device.c: 1890: else
  7531                           ;usb_device.c: 1891: {
  7532                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
  7533  0681  0021               	movlb	1	; select bank1
  7534  0682  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7535  0683  0086               	movwf	6
  7536  0684  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7537  0685  0087               	movwf	7
  7538  0686  3008               	movlw	8
  7539  0687  0081               	movwf	1
  7540                           
  7541                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7542  0688  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7543  0689  0086               	movwf	6
  7544  068A  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7545  068B  0087               	movwf	7
  7546  068C  1781               	bsf	1,7
  7547                           
  7548                           ;usb_device.c: 1894: }
  7549                           ;usb_device.c: 1895: }
  7550  068D  0008               	return
  7551  068E                     l6080:	
  7552                           
  7553                           ;usb_device.c: 1896: else
  7554                           ;usb_device.c: 1897: {
  7555                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
  7556  068E  0021               	movlb	1	; select bank1
  7557  068F  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7558  0690  3E01               	addlw	1
  7559  0691  00A8               	movwf	??_USBCtrlTrfRxService^(0+128)
  7560  0692  3000               	movlw	0
  7561  0693  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7562  0694  00A9               	movwf	(??_USBCtrlTrfRxService+1)^(0+128)
  7563  0695  0828               	movf	??_USBCtrlTrfRxService^(0+128),w
  7564  0696  0086               	movwf	6
  7565  0697  0829               	movf	(??_USBCtrlTrfRxService+1)^(0+128),w
  7566  0698  0087               	movwf	7
  7567  0699  3008               	movlw	8
  7568  069A  0081               	movwf	1
  7569                           
  7570                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  7571  069B  3050               	movlw	80
  7572  069C  00A8               	movwf	??_USBCtrlTrfRxService^(0+128)
  7573  069D  3000               	movlw	0
  7574  069E  00A9               	movwf	(??_USBCtrlTrfRxService^(0+128)+1)
  7575  069F  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7576  06A0  0086               	movwf	6
  7577  06A1  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7578  06A2  0087               	movwf	7
  7579  06A3  3142               	addfsr 1,2
  7580  06A4  0828               	movf	??_USBCtrlTrfRxService^(0+128),w
  7581  06A5  3FC0               	movwi [0]fsr1
  7582  06A6  0829               	movf	(??_USBCtrlTrfRxService^(0+128)+1),w
  7583  06A7  3FC1               	movwi [1]fsr1
  7584                           
  7585                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  7586  06A8  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7587  06A9  0086               	movwf	6
  7588  06AA  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7589  06AB  0087               	movwf	7
  7590  06AC  3004               	movlw	4
  7591  06AD  0081               	movwf	1
  7592                           
  7593                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7594  06AE  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7595  06AF  0086               	movwf	6
  7596  06B0  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7597  06B1  0087               	movwf	7
  7598  06B2  1781               	bsf	1,7
  7599                           
  7600                           ;usb_device.c: 1915: {
  7601                           ;usb_device.c: 1921: outPipes[0].pFunc();
  7602  06B3  0023               	movlb	3	; select bank3
  7603  06B4  0835               	movf	(low ((_outPipes| (0+256)+5)))^(0+128),w	;volatile
  7604  06B5  0836               	movf	((low ((_outPipes| (0+256)+5))+1))^(0+128),w	;volatile
  7605                           
  7606                           ;usb_device.c: 1926: }
  7607                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
  7608  06B6  13B2               	bcf	(_outPipes^(0+384)+2),7	;volatile
  7609                           
  7610                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
  7611  06B7  085B               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
  7612  06B8  1D03               	btfss	3,2
  7613  06B9  0008               	return
  7614                           
  7615                           ;usb_device.c: 1942: {
  7616                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
  7617  06BA  318B  232F         	fcall	_USBCtrlEPAllowStatusStage
  7618  06BC  0008               	return
  7619  06BD                     __end_of_USBCtrlTrfRxService:	
  7620                           
  7621                           	psect	text29
  7622  0B2F                     __ptext29:	
  7623 ;; *************** function _USBCtrlEPAllowStatusStage *****************
  7624 ;; Defined at:
  7625 ;;		line 1416 in file "mcc_generated_files/usb/usb_device.c"
  7626 ;; Parameters:    Size  Location     Type
  7627 ;;		None
  7628 ;; Auto vars:     Size  Location     Type
  7629 ;;		None
  7630 ;; Return value:  Size  Location     Type
  7631 ;;                  1    wreg      void 
  7632 ;; Registers used:
  7633 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7634 ;; Tracked objects:
  7635 ;;		On entry : 0/0
  7636 ;;		On exit  : 0/0
  7637 ;;		Unchanged: 0/0
  7638 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7641 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7642 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7643 ;;Total ram usage:        2 bytes
  7644 ;; Hardware stack levels used:    1
  7645 ;; Hardware stack levels required when called:   10
  7646 ;; This function calls:
  7647 ;;		Nothing
  7648 ;; This function is called by:
  7649 ;;		_USBDeviceTasks
  7650 ;;		_USBCtrlEPServiceComplete
  7651 ;;		_USBCtrlTrfRxService
  7652 ;; This function uses a non-reentrant model
  7653 ;;
  7654                           
  7655                           
  7656                           ;psect for function _USBCtrlEPAllowStatusStage
  7657  0B2F                     _USBCtrlEPAllowStatusStage:	
  7658                           
  7659                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
  7660                           
  7661                           ;incstack = 0
  7662                           ; Regs used in _USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
  7663  0B2F  0023               	movlb	3	; select bank3
  7664  0B30  085A               	movf	_USBStatusStageEnabledFlag1^(0+384),w	;volatile
  7665  0B31  1D03               	btfss	3,2
  7666  0B32  0008               	return
  7667                           
  7668                           ;usb_device.c: 1424: {
  7669                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
  7670  0B33  3001               	movlw	1
  7671  0B34  0021               	movlb	1	; select bank1
  7672  0B35  00A6               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  7673  0B36  0826               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  7674  0B37  0023               	movlb	3	; select bank3
  7675  0B38  00DA               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  7676                           
  7677                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
  7678  0B39  0859               	movf	_USBStatusStageEnabledFlag2^(0+384),w	;volatile
  7679  0B3A  1D03               	btfss	3,2
  7680  0B3B  0008               	return
  7681                           
  7682                           ;usb_device.c: 1427: {
  7683                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
  7684  0B3C  3001               	movlw	1
  7685  0B3D  0021               	movlb	1	; select bank1
  7686  0B3E  00A6               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  7687  0B3F  0826               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  7688  0B40  0023               	movlb	3	; select bank3
  7689  0B41  00D9               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  7690                           
  7691                           ;usb_device.c: 1432: if(controlTransferState == 2)
  7692  0B42  3002               	movlw	2
  7693  0B43  0662               	xorwf	_controlTransferState^(0+384),w	;volatile
  7694  0B44  1D03               	btfss	3,2
  7695  0B45  2B58               	goto	l5756
  7696                           
  7697                           ;usb_device.c: 1433: {
  7698                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
  7699  0B46  0837               	movf	_pBDTEntryIn^(0+384),w
  7700  0B47  0086               	movwf	6
  7701  0B48  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  7702  0B49  0087               	movwf	7
  7703  0B4A  3141               	addfsr 1,1
  7704  0B4B  0181               	clrf	1
  7705                           
  7706                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  7707  0B4C  0837               	movf	_pBDTEntryIn^(0+384),w
  7708  0B4D  0086               	movwf	6
  7709  0B4E  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  7710  0B4F  0087               	movwf	7
  7711  0B50  3048               	movlw	72
  7712  0B51  0081               	movwf	1
  7713                           
  7714                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
  7715  0B52  0837               	movf	_pBDTEntryIn^(0+384),w
  7716  0B53  0086               	movwf	6
  7717  0B54  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  7718  0B55  0087               	movwf	7
  7719  0B56  1781               	bsf	1,7
  7720                           
  7721                           ;usb_device.c: 1437: }
  7722  0B57  0008               	return
  7723  0B58                     l5756:	
  7724                           
  7725                           ;usb_device.c: 1438: else if(controlTransferState == 1)
  7726  0B58  0362               	decf	_controlTransferState^(0+384),w	;volatile
  7727  0B59  1D03               	btfss	3,2
  7728  0B5A  0008               	return
  7729                           
  7730                           ;usb_device.c: 1439: {
  7731                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
  7732  0B5B  01DD               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  7733                           
  7734                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
  7735  0B5C  3008               	movlw	8
  7736  0B5D  0021               	movlb	1	; select bank1
  7737  0B5E  00A6               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  7738  0B5F  0023               	movlb	3	; select bank3
  7739  0B60  0A64               	incf	_pBDTEntryEP0OutCurrent^(0+384),w
  7740  0B61  0086               	movwf	6
  7741  0B62  0187               	clrf	7
  7742  0B63  0021               	movlb	1	; select bank1
  7743  0B64  0826               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  7744  0B65  0081               	movwf	1
  7745                           
  7746                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  7747  0B66  3050               	movlw	80
  7748  0B67  00A6               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  7749  0B68  3000               	movlw	0
  7750  0B69  00A7               	movwf	(??_USBCtrlEPAllowStatusStage^(0+128)+1)
  7751  0B6A  0023               	movlb	3	; select bank3
  7752  0B6B  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  7753  0B6C  3E02               	addlw	2
  7754  0B6D  0086               	movwf	6
  7755  0B6E  0187               	clrf	7
  7756  0B6F  0021               	movlb	1	; select bank1
  7757  0B70  0826               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  7758  0B71  3FC0               	movwi [0]fsr1
  7759  0B72  0827               	movf	(??_USBCtrlEPAllowStatusStage^(0+128)+1),w
  7760  0B73  3FC1               	movwi [1]fsr1
  7761                           
  7762                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
  7763  0B74  3004               	movlw	4
  7764  0B75  00A6               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  7765  0B76  0023               	movlb	3	; select bank3
  7766  0B77  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  7767  0B78  0086               	movwf	6
  7768  0B79  0187               	clrf	7
  7769  0B7A  0021               	movlb	1	; select bank1
  7770  0B7B  0826               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  7771  0B7C  0081               	movwf	1
  7772                           
  7773                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  7774  0B7D  0023               	movlb	3	; select bank3
  7775  0B7E  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  7776  0B7F  0086               	movwf	6
  7777  0B80  0187               	clrf	7
  7778  0B81  1781               	bsf	1,7
  7779                           
  7780                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
  7781  0B82  3001               	movlw	1
  7782  0B83  0021               	movlb	1	; select bank1
  7783  0B84  00A6               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  7784  0B85  0826               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  7785  0B86  0023               	movlb	3	; select bank3
  7786  0B87  00DD               	movwf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  7787                           
  7788                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
  7789  0B88  0021               	movlb	1	; select bank1
  7790  0B89  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7791  0B8A  3E01               	addlw	1
  7792  0B8B  00A6               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  7793  0B8C  3000               	movlw	0
  7794  0B8D  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7795  0B8E  00A7               	movwf	(??_USBCtrlEPAllowStatusStage+1)^(0+128)
  7796  0B8F  0826               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  7797  0B90  0086               	movwf	6
  7798  0B91  0827               	movf	(??_USBCtrlEPAllowStatusStage+1)^(0+128),w
  7799  0B92  0087               	movwf	7
  7800  0B93  3008               	movlw	8
  7801  0B94  0081               	movwf	1
  7802                           
  7803                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  7804  0B95  3050               	movlw	80
  7805  0B96  00A6               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  7806  0B97  3000               	movlw	0
  7807  0B98  00A7               	movwf	(??_USBCtrlEPAllowStatusStage^(0+128)+1)
  7808  0B99  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7809  0B9A  0086               	movwf	6
  7810  0B9B  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7811  0B9C  0087               	movwf	7
  7812  0B9D  3142               	addfsr 1,2
  7813  0B9E  0826               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  7814  0B9F  3FC0               	movwi [0]fsr1
  7815  0BA0  0827               	movf	(??_USBCtrlEPAllowStatusStage^(0+128)+1),w
  7816  0BA1  3FC1               	movwi [1]fsr1
  7817                           
  7818                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
  7819  0BA2  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7820  0BA3  0086               	movwf	6
  7821  0BA4  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7822  0BA5  0087               	movwf	7
  7823  0BA6  3080               	movlw	128
  7824  0BA7  0081               	movwf	1
  7825  0BA8  0008               	return
  7826  0BA9                     __end_of_USBCtrlEPAllowStatusStage:	
  7827                           
  7828                           	psect	text30
  7829  09D0                     __ptext30:	
  7830 ;; *************** function _USBCtrlTrfInHandler *****************
  7831 ;; Defined at:
  7832 ;;		line 2592 in file "mcc_generated_files/usb/usb_device.c"
  7833 ;; Parameters:    Size  Location     Type
  7834 ;;		None
  7835 ;; Auto vars:     Size  Location     Type
  7836 ;;  lastDTS         1   11[BANK1 ] unsigned char 
  7837 ;; Return value:  Size  Location     Type
  7838 ;;                  1    wreg      void 
  7839 ;; Registers used:
  7840 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7841 ;; Tracked objects:
  7842 ;;		On entry : 0/0
  7843 ;;		On exit  : 0/0
  7844 ;;		Unchanged: 0/0
  7845 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7847 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7848 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7849 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7850 ;;Total ram usage:        3 bytes
  7851 ;; Hardware stack levels used:    1
  7852 ;; Hardware stack levels required when called:   11
  7853 ;; This function calls:
  7854 ;;		_USBCtrlTrfTxService
  7855 ;; This function is called by:
  7856 ;;		_USBCtrlEPService
  7857 ;; This function uses a non-reentrant model
  7858 ;;
  7859                           
  7860                           
  7861                           ;psect for function _USBCtrlTrfInHandler
  7862  09D0                     _USBCtrlTrfInHandler:	
  7863                           
  7864                           ;usb_device.c: 2594: uint8_t lastDTS;
  7865                           ;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  7866                           
  7867                           ;incstack = 0
  7868                           ; Regs used in _USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7869  09D0  0023               	movlb	3	; select bank3
  7870  09D1  0837               	movf	_pBDTEntryIn^(0+384),w
  7871  09D2  0086               	movwf	6
  7872  09D3  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  7873  09D4  0087               	movwf	7
  7874  09D5  3000               	movlw	0
  7875  09D6  1B01               	btfsc	1,6
  7876  09D7  3001               	movlw	1
  7877  09D8  0021               	movlb	1	; select bank1
  7878  09D9  00AB               	movwf	USBCtrlTrfInHandler@lastDTS^(0+128)
  7879                           
  7880                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  7881  09DA  3004               	movlw	4
  7882  09DB  0023               	movlb	3	; select bank3
  7883  09DC  0637               	xorwf	_pBDTEntryIn^(0+384),w
  7884  09DD  00B7               	movwf	_pBDTEntryIn^(0+384)
  7885  09DE  3000               	movlw	0
  7886  09DF  0638               	xorwf	(_pBDTEntryIn+1)^(0+384),w
  7887  09E0  00B8               	movwf	(_pBDTEntryIn+1)^(0+384)
  7888                           
  7889                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
  7890  09E1  3008               	movlw	8
  7891  09E2  0665               	xorwf	_USBDeviceState^(0+384),w	;volatile
  7892  09E3  1D03               	btfss	3,2
  7893  09E4  29F5               	goto	l6194
  7894                           
  7895                           ;usb_device.c: 2605: {
  7896                           ;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
  7897  09E5  0020               	movlb	0	; select bank0
  7898  09E6  0852               	movf	82,w	;volatile
  7899  09E7  397F               	andlw	127
  7900  09E8  003D               	movlb	29	; select bank29
  7901  09E9  0096               	movwf	22	;volatile
  7902                           
  7903                           ;usb_device.c: 2607: if(UADDR != 0u)
  7904  09EA  0816               	movf	22,w	;volatile
  7905  09EB  1903               	btfsc	3,2
  7906  09EC  29EF               	goto	l6192
  7907                           
  7908                           ;usb_device.c: 2608: {
  7909                           ;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
  7910  09ED  3010               	movlw	16
  7911  09EE  29F0               	goto	L10
  7912  09EF                     l6192:	
  7913                           ;usb_device.c: 2610: }
  7914                           
  7915                           
  7916                           ;usb_device.c: 2611: else
  7917                           ;usb_device.c: 2612: {
  7918                           ;usb_device.c: 2613: USBDeviceState=DEFAULT_STATE;
  7919  09EF  3004               	movlw	4
  7920  09F0                     L10:	
  7921  09F0  0021               	movlb	1	; select bank1
  7922  09F1  00A9               	movwf	??_USBCtrlTrfInHandler^(0+128)
  7923  09F2  0829               	movf	??_USBCtrlTrfInHandler^(0+128),w
  7924  09F3  0023               	movlb	3	; select bank3
  7925  09F4  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
  7926  09F5                     l6194:	
  7927                           
  7928                           ;usb_device.c: 2614: }
  7929                           ;usb_device.c: 2615: }
  7930                           ;usb_device.c: 2618: if(controlTransferState == 1)
  7931  09F5  0362               	decf	_controlTransferState^(0+384),w	;volatile
  7932  09F6  1D03               	btfss	3,2
  7933  09F7  2A3A               	goto	l562
  7934                           
  7935                           ;usb_device.c: 2619: {
  7936                           ;usb_device.c: 2620: pBDTEntryIn[0]->ADR = (((uint16_t)(CtrlTrfData)) & 0x7FFF);
  7937  09F8  3058               	movlw	88
  7938  09F9  0021               	movlb	1	; select bank1
  7939  09FA  00A9               	movwf	??_USBCtrlTrfInHandler^(0+128)
  7940  09FB  3000               	movlw	0
  7941  09FC  00AA               	movwf	(??_USBCtrlTrfInHandler^(0+128)+1)
  7942  09FD  0023               	movlb	3	; select bank3
  7943  09FE  0837               	movf	_pBDTEntryIn^(0+384),w
  7944  09FF  0086               	movwf	6
  7945  0A00  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  7946  0A01  0087               	movwf	7
  7947  0A02  3142               	addfsr 1,2
  7948  0A03  0021               	movlb	1	; select bank1
  7949  0A04  0829               	movf	??_USBCtrlTrfInHandler^(0+128),w
  7950  0A05  3FC0               	movwi [0]fsr1
  7951  0A06  082A               	movf	(??_USBCtrlTrfInHandler^(0+128)+1),w
  7952  0A07  3FC1               	movwi [1]fsr1
  7953                           
  7954                           ;usb_device.c: 2621: USBCtrlTrfTxService();
  7955  0A08  318A  22B5  3189   	fcall	_USBCtrlTrfTxService
  7956                           
  7957                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
  7958  0A0B  3002               	movlw	2
  7959  0A0C  0023               	movlb	3	; select bank3
  7960  0A0D  0663               	xorwf	_shortPacketStatus^(0+384),w	;volatile
  7961  0A0E  1D03               	btfss	3,2
  7962  0A0F  2A1C               	goto	l6204
  7963                           
  7964                           ;usb_device.c: 2628: {
  7965                           ;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
  7966  0A10  0837               	movf	_pBDTEntryIn^(0+384),w
  7967  0A11  0086               	movwf	6
  7968  0A12  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  7969  0A13  0087               	movwf	7
  7970  0A14  3004               	movlw	4
  7971  0A15  0081               	movwf	1
  7972                           
  7973                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
  7974  0A16  0837               	movf	_pBDTEntryIn^(0+384),w
  7975  0A17  0086               	movwf	6
  7976  0A18  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  7977  0A19  0087               	movwf	7
  7978  0A1A  1781               	bsf	1,7
  7979                           
  7980                           ;usb_device.c: 2633: }
  7981  0A1B  0008               	return
  7982  0A1C                     l6204:	
  7983                           
  7984                           ;usb_device.c: 2634: else
  7985                           ;usb_device.c: 2635: {
  7986                           ;usb_device.c: 2636: if(lastDTS == 0)
  7987  0A1C  0021               	movlb	1	; select bank1
  7988  0A1D  082B               	movf	USBCtrlTrfInHandler@lastDTS^(0+128),w
  7989  0A1E  1D03               	btfss	3,2
  7990  0A1F  2A2D               	goto	l6208
  7991                           
  7992                           ;usb_device.c: 2637: {
  7993                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  7994  0A20  0023               	movlb	3	; select bank3
  7995  0A21  0837               	movf	_pBDTEntryIn^(0+384),w
  7996  0A22  0086               	movwf	6
  7997  0A23  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  7998  0A24  0087               	movwf	7
  7999  0A25  3048               	movlw	72
  8000  0A26  0081               	movwf	1
  8001                           
  8002                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
  8003  0A27  0837               	movf	_pBDTEntryIn^(0+384),w
  8004  0A28  0086               	movwf	6
  8005  0A29  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  8006  0A2A  0087               	movwf	7
  8007  0A2B  1781               	bsf	1,7
  8008                           
  8009                           ;usb_device.c: 2640: }
  8010  0A2C  0008               	return
  8011  0A2D                     l6208:	
  8012                           
  8013                           ;usb_device.c: 2641: else
  8014                           ;usb_device.c: 2642: {
  8015                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
  8016  0A2D  0023               	movlb	3	; select bank3
  8017  0A2E  0837               	movf	_pBDTEntryIn^(0+384),w
  8018  0A2F  0086               	movwf	6
  8019  0A30  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  8020  0A31  0087               	movwf	7
  8021  0A32  3008               	movlw	8
  8022  0A33  0081               	movwf	1
  8023                           
  8024                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
  8025  0A34  0837               	movf	_pBDTEntryIn^(0+384),w
  8026  0A35  0086               	movwf	6
  8027  0A36  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  8028  0A37  0087               	movwf	7
  8029  0A38  1781               	bsf	1,7
  8030                           
  8031                           ;usb_device.c: 2645: }
  8032                           ;usb_device.c: 2646: }
  8033                           ;usb_device.c: 2647: }
  8034  0A39  0008               	return
  8035  0A3A                     l562:	
  8036                           
  8037                           ;usb_device.c: 2648: else
  8038                           ;usb_device.c: 2649: {
  8039                           ;usb_device.c: 2653: if(outPipes[0].info.bits.busy == 1)
  8040  0A3A  1FB2               	btfss	(_outPipes^(0+384)+2),7	;volatile
  8041  0A3B  2A3F               	goto	l6212
  8042                           
  8043                           ;usb_device.c: 2656: {
  8044                           ;usb_device.c: 2657: outPipes[0].pFunc();
  8045  0A3C  0835               	movf	(low ((_outPipes| (0+256)+5)))^(0+128),w	;volatile
  8046  0A3D  0836               	movf	((low ((_outPipes| (0+256)+5))+1))^(0+128),w	;volatile
  8047                           
  8048                           ;usb_device.c: 2658: }
  8049                           ;usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
  8050  0A3E  13B2               	bcf	(_outPipes^(0+384)+2),7	;volatile
  8051  0A3F                     l6212:	
  8052                           
  8053                           ;usb_device.c: 2660: }
  8054                           ;usb_device.c: 2662: controlTransferState = 0;
  8055  0A3F  01E2               	clrf	_controlTransferState^(0+384)	;volatile
  8056  0A40  0008               	return
  8057  0A41                     __end_of_USBCtrlTrfInHandler:	
  8058                           
  8059                           	psect	text31
  8060  0AB5                     __ptext31:	
  8061 ;; *************** function _USBCtrlTrfTxService *****************
  8062 ;; Defined at:
  8063 ;;		line 1771 in file "mcc_generated_files/usb/usb_device.c"
  8064 ;; Parameters:    Size  Location     Type
  8065 ;;		None
  8066 ;; Auto vars:     Size  Location     Type
  8067 ;;  byteToSend      1    8[BANK1 ] unsigned char 
  8068 ;; Return value:  Size  Location     Type
  8069 ;;                  1    wreg      void 
  8070 ;; Registers used:
  8071 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  8072 ;; Tracked objects:
  8073 ;;		On entry : 0/0
  8074 ;;		On exit  : 0/0
  8075 ;;		Unchanged: 0/0
  8076 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8078 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8079 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8080 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8081 ;;Total ram usage:        3 bytes
  8082 ;; Hardware stack levels used:    1
  8083 ;; Hardware stack levels required when called:   10
  8084 ;; This function calls:
  8085 ;;		Nothing
  8086 ;; This function is called by:
  8087 ;;		_USBCtrlEPAllowDataStage
  8088 ;;		_USBCtrlTrfInHandler
  8089 ;; This function uses a non-reentrant model
  8090 ;;
  8091                           
  8092                           
  8093                           ;psect for function _USBCtrlTrfTxService
  8094  0AB5                     _USBCtrlTrfTxService:	
  8095                           
  8096                           ;usb_device.c: 1773: uint8_t byteToSend;
  8097                           ;usb_device.c: 1777: byteToSend = 8;
  8098                           
  8099                           ;incstack = 0
  8100                           ; Regs used in _USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
  8101  0AB5  3008               	movlw	8
  8102  0AB6  0021               	movlb	1	; select bank1
  8103  0AB7  00A6               	movwf	??_USBCtrlTrfTxService^(0+128)
  8104  0AB8  0826               	movf	??_USBCtrlTrfTxService^(0+128),w
  8105  0AB9  00A8               	movwf	USBCtrlTrfTxService@byteToSend^(0+128)
  8106                           
  8107                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
  8108  0ABA  3000               	movlw	0
  8109  0ABB  0247               	subwf	((_inPipes+1)^(0+128)+3),w	;volatile
  8110  0ABC  3008               	movlw	8
  8111  0ABD  1903               	skipnz
  8112  0ABE  0246               	subwf	(_inPipes^(0+128)+3),w	;volatile
  8113  0ABF  1803               	skipnc
  8114  0AC0  2AD4               	goto	l462
  8115                           
  8116                           ;usb_device.c: 1779: {
  8117                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
  8118  0AC1  0846               	movf	(_inPipes^(0+128)+3),w	;volatile
  8119  0AC2  00A6               	movwf	??_USBCtrlTrfTxService^(0+128)
  8120  0AC3  0826               	movf	??_USBCtrlTrfTxService^(0+128),w
  8121  0AC4  00A8               	movwf	USBCtrlTrfTxService@byteToSend^(0+128)
  8122                           
  8123                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
  8124  0AC5  0023               	movlb	3	; select bank3
  8125  0AC6  0863               	movf	_shortPacketStatus^(0+384),w	;volatile
  8126  0AC7  1D03               	btfss	3,2
  8127  0AC8  2ACB               	goto	l5700
  8128                           
  8129                           ;usb_device.c: 1788: {
  8130                           ;usb_device.c: 1789: shortPacketStatus = 1;
  8131  0AC9  3001               	movlw	1
  8132  0ACA  2ACF               	goto	L11
  8133  0ACB                     l5700:	
  8134                           ;usb_device.c: 1790: }
  8135                           
  8136                           
  8137                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
  8138  0ACB  0363               	decf	_shortPacketStatus^(0+384),w	;volatile
  8139  0ACC  1D03               	btfss	3,2
  8140  0ACD  2AD4               	goto	l462
  8141                           
  8142                           ;usb_device.c: 1792: {
  8143                           ;usb_device.c: 1793: shortPacketStatus = 2;
  8144  0ACE  3002               	movlw	2
  8145  0ACF                     L11:	
  8146  0ACF  0021               	movlb	1	; select bank1
  8147  0AD0  00A6               	movwf	??_USBCtrlTrfTxService^(0+128)
  8148  0AD1  0826               	movf	??_USBCtrlTrfTxService^(0+128),w
  8149  0AD2  0023               	movlb	3	; select bank3
  8150  0AD3  00E3               	movwf	_shortPacketStatus^(0+384)	;volatile
  8151  0AD4                     l462:	
  8152                           
  8153                           ;usb_device.c: 1794: }
  8154                           ;usb_device.c: 1795: }
  8155                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
  8156  0AD4  0021               	movlb	1	; select bank1
  8157  0AD5  0828               	movf	USBCtrlTrfTxService@byteToSend^(0+128),w
  8158  0AD6  00A6               	movwf	??_USBCtrlTrfTxService^(0+128)
  8159  0AD7  01A7               	clrf	(??_USBCtrlTrfTxService^(0+128)+1)
  8160  0AD8  0826               	movf	??_USBCtrlTrfTxService^(0+128),w
  8161  0AD9  02C6               	subwf	(_inPipes^(0+128)+3),f	;volatile
  8162  0ADA  0827               	movf	(??_USBCtrlTrfTxService+1)^(0+128),w
  8163  0ADB  3BC7               	subwfb	((_inPipes+1)^(0+128)+3),f	;volatile
  8164                           
  8165                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
  8166  0ADC  0023               	movlb	3	; select bank3
  8167  0ADD  0837               	movf	_pBDTEntryIn^(0+384),w
  8168  0ADE  3E01               	addlw	1
  8169  0ADF  0021               	movlb	1	; select bank1
  8170  0AE0  00A6               	movwf	??_USBCtrlTrfTxService^(0+128)
  8171  0AE1  3000               	movlw	0
  8172  0AE2  0023               	movlb	3	; select bank3
  8173  0AE3  3D38               	addwfc	(_pBDTEntryIn+1)^(0+384),w
  8174  0AE4  0021               	movlb	1	; select bank1
  8175  0AE5  00A7               	movwf	(??_USBCtrlTrfTxService+1)^(0+128)
  8176  0AE6  0826               	movf	??_USBCtrlTrfTxService^(0+128),w
  8177  0AE7  0086               	movwf	6
  8178  0AE8  0827               	movf	(??_USBCtrlTrfTxService+1)^(0+128),w
  8179  0AE9  0087               	movwf	7
  8180  0AEA  0828               	movf	USBCtrlTrfTxService@byteToSend^(0+128),w
  8181  0AEB  0081               	movwf	1
  8182                           
  8183                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
  8184  0AEC  3058               	movlw	88
  8185  0AED  00A6               	movwf	??_USBCtrlTrfTxService^(0+128)
  8186  0AEE  0826               	movf	??_USBCtrlTrfTxService^(0+128),w
  8187  0AEF  0023               	movlb	3	; select bank3
  8188  0AF0  00E1               	movwf	_pDst^(0+384)
  8189                           
  8190                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
  8191  0AF1  0021               	movlb	1	; select bank1
  8192  0AF2  1C45               	btfss	(_inPipes^(0+128)+2),0	;volatile
  8193  0AF3  2B0E               	goto	l5720
  8194  0AF4  2B2B               	goto	l5730
  8195  0AF5                     l5712:	
  8196                           ;usb_device.c: 1810: {
  8197                           ;usb_device.c: 1811: while(byteToSend)
  8198                           
  8199                           
  8200                           ;usb_device.c: 1812: {
  8201                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
  8202  0AF5  0843               	movf	_inPipes^(0+128),w	;volatile
  8203  0AF6  0084               	movwf	4
  8204  0AF7  0844               	movf	(_inPipes+1)^(0+128),w	;volatile
  8205  0AF8  0085               	movwf	5
  8206  0AF9  0800               	movf	0,w	;code access
  8207  0AFA  00A6               	movwf	??_USBCtrlTrfTxService^(0+128)
  8208  0AFB  0023               	movlb	3	; select bank3
  8209  0AFC  0861               	movf	_pDst^(0+384),w
  8210  0AFD  0086               	movwf	6
  8211  0AFE  0187               	clrf	7
  8212  0AFF  0021               	movlb	1	; select bank1
  8213  0B00  0826               	movf	??_USBCtrlTrfTxService^(0+128),w
  8214  0B01  0081               	movwf	1
  8215  0B02  3001               	movlw	1
  8216  0B03  07C3               	addwf	_inPipes^(0+128),f	;volatile
  8217  0B04  3000               	movlw	0
  8218  0B05  3DC4               	addwfc	(_inPipes+1)^(0+128),f	;volatile
  8219  0B06  3001               	movlw	1
  8220  0B07  00A6               	movwf	??_USBCtrlTrfTxService^(0+128)
  8221  0B08  0826               	movf	??_USBCtrlTrfTxService^(0+128),w
  8222  0B09  0023               	movlb	3	; select bank3
  8223  0B0A  07E1               	addwf	_pDst^(0+384),f
  8224                           
  8225                           ;usb_device.c: 1814: byteToSend--;
  8226  0B0B  3001               	movlw	1
  8227  0B0C  0021               	movlb	1	; select bank1
  8228  0B0D  02A8               	subwf	USBCtrlTrfTxService@byteToSend^(0+128),f
  8229  0B0E                     l5720:	
  8230  0B0E  0828               	movf	USBCtrlTrfTxService@byteToSend^(0+128),w
  8231  0B0F  1903               	btfsc	3,2
  8232  0B10  0008               	return
  8233  0B11  2AF5               	goto	l5712
  8234  0B12                     l5722:	
  8235                           ;usb_device.c: 1817: else
  8236                           ;usb_device.c: 1818: {
  8237                           ;usb_device.c: 1819: while(byteToSend)
  8238                           
  8239                           ;usb_device.c: 1815: }
  8240                           ;usb_device.c: 1816: }
  8241                           
  8242                           
  8243                           ;usb_device.c: 1820: {
  8244                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
  8245  0B12  0843               	movf	_inPipes^(0+128),w	;volatile
  8246  0B13  0084               	movwf	4
  8247  0B14  0844               	movf	(_inPipes+1)^(0+128),w	;volatile
  8248  0B15  0085               	movwf	5
  8249  0B16  0800               	movf	0,w	;code access
  8250  0B17  00A6               	movwf	??_USBCtrlTrfTxService^(0+128)
  8251  0B18  0023               	movlb	3	; select bank3
  8252  0B19  0861               	movf	_pDst^(0+384),w
  8253  0B1A  0086               	movwf	6
  8254  0B1B  0187               	clrf	7
  8255  0B1C  0021               	movlb	1	; select bank1
  8256  0B1D  0826               	movf	??_USBCtrlTrfTxService^(0+128),w
  8257  0B1E  0081               	movwf	1
  8258  0B1F  3001               	movlw	1
  8259  0B20  07C3               	addwf	_inPipes^(0+128),f	;volatile
  8260  0B21  3000               	movlw	0
  8261  0B22  3DC4               	addwfc	(_inPipes+1)^(0+128),f	;volatile
  8262  0B23  3001               	movlw	1
  8263  0B24  00A6               	movwf	??_USBCtrlTrfTxService^(0+128)
  8264  0B25  0826               	movf	??_USBCtrlTrfTxService^(0+128),w
  8265  0B26  0023               	movlb	3	; select bank3
  8266  0B27  07E1               	addwf	_pDst^(0+384),f
  8267                           
  8268                           ;usb_device.c: 1822: byteToSend--;
  8269  0B28  3001               	movlw	1
  8270  0B29  0021               	movlb	1	; select bank1
  8271  0B2A  02A8               	subwf	USBCtrlTrfTxService@byteToSend^(0+128),f
  8272  0B2B                     l5730:	
  8273  0B2B  0828               	movf	USBCtrlTrfTxService@byteToSend^(0+128),w
  8274  0B2C  1903               	btfsc	3,2
  8275  0B2D  0008               	return
  8276  0B2E  2B12               	goto	l5722
  8277  0B2F                     __end_of_USBCtrlTrfTxService:	
  8278                           
  8279                           	psect	text32
  8280  1FF1                     __ptext32:	
  8281 ;; *************** function _SYSTEM_Initialize *****************
  8282 ;; Defined at:
  8283 ;;		line 73 in file "mcc_generated_files/mcc.c"
  8284 ;; Parameters:    Size  Location     Type
  8285 ;;		None
  8286 ;; Auto vars:     Size  Location     Type
  8287 ;;		None
  8288 ;; Return value:  Size  Location     Type
  8289 ;;                  1    wreg      void 
  8290 ;; Registers used:
  8291 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8292 ;; Tracked objects:
  8293 ;;		On entry : 0/0
  8294 ;;		On exit  : 0/0
  8295 ;;		Unchanged: 0/0
  8296 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8301 ;;Total ram usage:        0 bytes
  8302 ;; Hardware stack levels used:    1
  8303 ;; Hardware stack levels required when called:   11
  8304 ;; This function calls:
  8305 ;;		_OSCILLATOR_Initialize
  8306 ;;		_PIN_MANAGER_Initialize
  8307 ;;		_USBDeviceAttach
  8308 ;;		_USBDeviceInit
  8309 ;;		_WDT_Initialize
  8310 ;; This function is called by:
  8311 ;;		_main
  8312 ;; This function uses a non-reentrant model
  8313 ;;
  8314                           
  8315                           
  8316                           ;psect for function _SYSTEM_Initialize
  8317  1FF1                     _SYSTEM_Initialize:	
  8318                           
  8319                           ;mcc.c: 76: PIN_MANAGER_Initialize();
  8320                           
  8321                           ;incstack = 0
  8322                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8323  1FF1  3190  204D  319F   	fcall	_PIN_MANAGER_Initialize
  8324                           
  8325                           ;mcc.c: 77: OSCILLATOR_Initialize();
  8326  1FF4  319F  27D9  319F   	fcall	_OSCILLATOR_Initialize
  8327                           
  8328                           ;mcc.c: 78: WDT_Initialize();
  8329  1FF7  3190  203A  319F   	fcall	_WDT_Initialize
  8330                           
  8331                           ;mcc.c: 79: USBDeviceInit();
  8332  1FFA  3185  2554  319F   	fcall	_USBDeviceInit
  8333                           
  8334                           ;mcc.c: 80: USBDeviceAttach();
  8335  1FFD  3190  20C6         	fcall	_USBDeviceAttach
  8336  1FFF  0008               	return
  8337  2000                     __end_of_SYSTEM_Initialize:	
  8338                           
  8339                           	psect	text33
  8340  103A                     __ptext33:	
  8341 ;; *************** function _WDT_Initialize *****************
  8342 ;; Defined at:
  8343 ;;		line 99 in file "mcc_generated_files/mcc.c"
  8344 ;; Parameters:    Size  Location     Type
  8345 ;;		None
  8346 ;; Auto vars:     Size  Location     Type
  8347 ;;		None
  8348 ;; Return value:  Size  Location     Type
  8349 ;;                  1    wreg      void 
  8350 ;; Registers used:
  8351 ;;		wreg
  8352 ;; Tracked objects:
  8353 ;;		On entry : 0/0
  8354 ;;		On exit  : 0/0
  8355 ;;		Unchanged: 0/0
  8356 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8361 ;;Total ram usage:        0 bytes
  8362 ;; Hardware stack levels used:    1
  8363 ;; Hardware stack levels required when called:   10
  8364 ;; This function calls:
  8365 ;;		Nothing
  8366 ;; This function is called by:
  8367 ;;		_SYSTEM_Initialize
  8368 ;; This function uses a non-reentrant model
  8369 ;;
  8370                           
  8371                           
  8372                           ;psect for function _WDT_Initialize
  8373  103A                     _WDT_Initialize:	
  8374                           
  8375                           ;mcc.c: 102: WDTCON = 0x16;
  8376                           
  8377                           ;incstack = 0
  8378                           ; Regs used in _WDT_Initialize: [wreg]
  8379  103A  3016               	movlw	22
  8380  103B  0021               	movlb	1	; select bank1
  8381  103C  0097               	movwf	23	;volatile
  8382  103D  0008               	return
  8383  103E                     __end_of_WDT_Initialize:	
  8384                           
  8385                           	psect	text34
  8386  0554                     __ptext34:	
  8387 ;; *************** function _USBDeviceInit *****************
  8388 ;; Defined at:
  8389 ;;		line 277 in file "mcc_generated_files/usb/usb_device.c"
  8390 ;; Parameters:    Size  Location     Type
  8391 ;;		None
  8392 ;; Auto vars:     Size  Location     Type
  8393 ;;  p               2    7[BANK1 ] PTR unsigned char 
  8394 ;;		 -> UEP1(1), 
  8395 ;;  i               1    9[BANK1 ] unsigned char 
  8396 ;;  i               1   10[BANK1 ] unsigned char 
  8397 ;; Return value:  Size  Location     Type
  8398 ;;                  1    wreg      void 
  8399 ;; Registers used:
  8400 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8401 ;; Tracked objects:
  8402 ;;		On entry : 0/0
  8403 ;;		On exit  : 0/0
  8404 ;;		Unchanged: 0/0
  8405 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8407 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8408 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8409 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  8410 ;;Total ram usage:        5 bytes
  8411 ;; Hardware stack levels used:    1
  8412 ;; Hardware stack levels required when called:   10
  8413 ;; This function calls:
  8414 ;;		Nothing
  8415 ;; This function is called by:
  8416 ;;		_SYSTEM_Initialize
  8417 ;;		_USBDeviceTasks
  8418 ;; This function uses a non-reentrant model
  8419 ;;
  8420                           
  8421                           
  8422                           ;psect for function _USBDeviceInit
  8423  0554                     _USBDeviceInit:	
  8424                           
  8425                           ;usb_device.c: 279: uint8_t i;
  8426                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  8427                           
  8428                           ;incstack = 0
  8429                           ; Regs used in _USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  8430  0554  0021               	movlb	1	; select bank1
  8431  0555  1112               	bcf	18,2	;volatile
  8432                           
  8433                           ;usb_device.c: 285: ;
  8434                           ;usb_device.c: 288: {UEIR = 0;};
  8435  0556  003D               	movlb	29	; select bank29
  8436  0557  0193               	clrf	19	;volatile
  8437                           
  8438                           ;usb_device.c: 291: {UIR = 0;};
  8439  0558  0190               	clrf	16	;volatile
  8440                           
  8441                           ;usb_device.c: 294: UEP0 = 0;
  8442  0559  0198               	clrf	24	;volatile
  8443                           
  8444                           ;usb_device.c: 296: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 0
      +                          ; };
  8445  055A  300E               	movlw	14
  8446  055B  0021               	movlb	1	; select bank1
  8447  055C  00A8               	movwf	(USBDeviceInit@p+1)^(0+128)
  8448  055D  3099               	movlw	153
  8449  055E  00A7               	movwf	USBDeviceInit@p^(0+128)
  8450  055F  01A9               	clrf	USBDeviceInit@i_1423^(0+128)
  8451  0560  3002               	movlw	2
  8452  0561  0229               	subwf	USBDeviceInit@i_1423^(0+128),w
  8453  0562  1803               	btfsc	3,0
  8454  0563  2D75               	goto	l6232
  8455  0564                     l6224:	
  8456  0564  0827               	movf	USBDeviceInit@p^(0+128),w
  8457  0565  0086               	movwf	6
  8458  0566  0828               	movf	(USBDeviceInit@p+1)^(0+128),w
  8459  0567  0087               	movwf	7
  8460  0568  0181               	clrf	1
  8461  0569  3001               	movlw	1
  8462  056A  07A7               	addwf	USBDeviceInit@p^(0+128),f
  8463  056B  3000               	movlw	0
  8464  056C  3DA8               	addwfc	(USBDeviceInit@p+1)^(0+128),f
  8465  056D  3001               	movlw	1
  8466  056E  00A6               	movwf	??_USBDeviceInit^(0+128)
  8467  056F  0826               	movf	??_USBDeviceInit^(0+128),w
  8468  0570  07A9               	addwf	USBDeviceInit@i_1423^(0+128),f
  8469  0571  3002               	movlw	2
  8470  0572  0229               	subwf	USBDeviceInit@i_1423^(0+128),w
  8471  0573  1C03               	skipc
  8472  0574  2D64               	goto	l6224
  8473  0575                     l6232:	
  8474                           
  8475                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  8476  0575  3016               	movlw	22
  8477  0576  003D               	movlb	29	; select bank29
  8478  0577  0091               	movwf	17	;volatile
  8479  0578  309F               	movlw	159
  8480  0579  0097               	movwf	23	;volatile
  8481  057A  307B               	movlw	123
  8482  057B  0092               	movwf	18	;volatile
  8483                           
  8484                           ;usb_device.c: 301: ;
  8485                           ;usb_device.c: 304: ;
  8486                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  8487  057C  0021               	movlb	1	; select bank1
  8488  057D  01AA               	clrf	USBDeviceInit@i^(0+128)
  8489  057E  300C               	movlw	12
  8490  057F  022A               	subwf	USBDeviceInit@i^(0+128),w
  8491  0580  1803               	btfsc	3,0
  8492  0581  2D9B               	goto	l364
  8493  0582                     l6240:	
  8494                           
  8495                           ;usb_device.c: 308: {
  8496                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  8497  0582  082A               	movf	USBDeviceInit@i^(0+128),w
  8498  0583  00A6               	movwf	??_USBDeviceInit^(0+128)
  8499  0584  3001               	movlw	1
  8500  0585                     u6605:	
  8501  0585  35A6               	lslf	??_USBDeviceInit^(0+128),f
  8502  0586  3EFF               	addlw	-1
  8503  0587  1D03               	skipz
  8504  0588  2D85               	goto	u6605
  8505  0589  3526               	lslf	??_USBDeviceInit^(0+128),w
  8506  058A  3E20               	addlw	32
  8507  058B  0086               	movwf	6
  8508  058C  0187               	clrf	7
  8509  058D  3000               	movlw	0
  8510  058E  3FC0               	movwi [0]fsr1
  8511  058F  3000               	movlw	0
  8512  0590  3FC1               	movwi [1]fsr1
  8513  0591  3FC2               	movwi [2]fsr1
  8514  0592  3FC3               	movwi [3]fsr1
  8515  0593  3001               	movlw	1
  8516  0594  00A6               	movwf	??_USBDeviceInit^(0+128)
  8517  0595  0826               	movf	??_USBDeviceInit^(0+128),w
  8518  0596  07AA               	addwf	USBDeviceInit@i^(0+128),f
  8519  0597  300C               	movlw	12
  8520  0598  022A               	subwf	USBDeviceInit@i^(0+128),w
  8521  0599  1C03               	skipc
  8522  059A  2D82               	goto	l6240
  8523  059B                     l364:	
  8524                           
  8525                           ;usb_device.c: 310: }
  8526                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  8527  059B  003D               	movlb	29	; select bank29
  8528  059C  170E               	bsf	14,6	;volatile
  8529                           
  8530                           ;usb_device.c: 316: UADDR = 0x00;
  8531  059D  0196               	clrf	22	;volatile
  8532                           
  8533                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  8534  059E  120E               	bcf	14,4	;volatile
  8535                           
  8536                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  8537  059F  130E               	bcf	14,6	;volatile
  8538  05A0                     l6252:	
  8539                           ;usb_device.c: 325: do
  8540                           
  8541                           
  8542                           ;usb_device.c: 326: {
  8543                           ;usb_device.c: 327: (UIR &= 0xF7);
  8544  05A0  30F7               	movlw	247
  8545  05A1  0021               	movlb	1	; select bank1
  8546  05A2  00A6               	movwf	??_USBDeviceInit^(0+128)
  8547  05A3  0826               	movf	??_USBDeviceInit^(0+128),w
  8548  05A4  003D               	movlb	29	; select bank29
  8549  05A5  0590               	andwf	16,f	;volatile
  8550                           
  8551                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  8552  05A6  0021               	movlb	1	; select bank1
  8553  05A7  01C5               	clrf	(_inPipes^(0+128)+2)	;volatile
  8554                           
  8555                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  8556  05A8  0023               	movlb	3	; select bank3
  8557  05A9  01B2               	clrf	(_outPipes^(0+384)+2)	;volatile
  8558                           
  8559                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  8560  05AA  01B3               	clrf	(_outPipes^(0+384)+3)	;volatile
  8561  05AB  01B4               	clrf	((_outPipes+1)^(0+384)+3)	;volatile
  8562                           
  8563                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  8564  05AC  003D               	movlb	29	; select bank29
  8565  05AD  1990               	btfsc	16,3	;volatile
  8566  05AE  2DA0               	goto	l6252
  8567                           
  8568                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  8569  05AF  3001               	movlw	1
  8570  05B0  0021               	movlb	1	; select bank1
  8571  05B1  00A6               	movwf	??_USBDeviceInit^(0+128)
  8572  05B2  0826               	movf	??_USBDeviceInit^(0+128),w
  8573  05B3  0023               	movlb	3	; select bank3
  8574  05B4  00DA               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  8575                           
  8576                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  8577  05B5  3001               	movlw	1
  8578  05B6  0021               	movlb	1	; select bank1
  8579  05B7  00A6               	movwf	??_USBDeviceInit^(0+128)
  8580  05B8  0826               	movf	??_USBDeviceInit^(0+128),w
  8581  05B9  0023               	movlb	3	; select bank3
  8582  05BA  00D9               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  8583                           
  8584                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  8585  05BB  01D8               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  8586                           
  8587                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  8588  05BC  01D7               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  8589                           
  8590                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  8591  05BD  01DF               	clrf	_USBBusIsSuspended^(0+384)	;volatile
  8592                           
  8593                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  8594  05BE  0021               	movlb	1	; select bank1
  8595  05BF  01AA               	clrf	USBDeviceInit@i^(0+128)
  8596  05C0  3003               	movlw	3
  8597  05C1  022A               	subwf	USBDeviceInit@i^(0+128),w
  8598  05C2  1803               	btfsc	3,0
  8599  05C3  2DE8               	goto	l6280
  8600  05C4                     l6274:	
  8601                           
  8602                           ;usb_device.c: 346: {
  8603                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  8604  05C4  352A               	lslf	USBDeviceInit@i^(0+128),w
  8605  05C5  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  8606  05C6  0086               	movwf	6
  8607  05C7  3001               	movlw	1	; select bank3/4
  8608  05C8  0087               	movwf	7
  8609  05C9  3000               	movlw	0
  8610  05CA  3FC0               	movwi [0]fsr1
  8611  05CB  3FC1               	movwi [1]fsr1
  8612                           
  8613                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  8614  05CC  352A               	lslf	USBDeviceInit@i^(0+128),w
  8615  05CD  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  8616  05CE  0086               	movwf	6
  8617  05CF  3001               	movlw	1	; select bank3/4
  8618  05D0  0087               	movwf	7
  8619  05D1  3000               	movlw	0
  8620  05D2  3FC0               	movwi [0]fsr1
  8621  05D3  3FC1               	movwi [1]fsr1
  8622                           
  8623                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  8624  05D4  082A               	movf	USBDeviceInit@i^(0+128),w
  8625  05D5  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  8626  05D6  0086               	movwf	6
  8627  05D7  3001               	movlw	1	; select bank3/4
  8628  05D8  0087               	movwf	7
  8629  05D9  0181               	clrf	1
  8630                           
  8631                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  8632  05DA  082A               	movf	USBDeviceInit@i^(0+128),w
  8633  05DB  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  8634  05DC  0086               	movwf	6
  8635  05DD  3001               	movlw	1	; select bank3/4
  8636  05DE  0087               	movwf	7
  8637  05DF  0181               	clrf	1
  8638  05E0  3001               	movlw	1
  8639  05E1  00A6               	movwf	??_USBDeviceInit^(0+128)
  8640  05E2  0826               	movf	??_USBDeviceInit^(0+128),w
  8641  05E3  07AA               	addwf	USBDeviceInit@i^(0+128),f
  8642  05E4  3003               	movlw	3
  8643  05E5  022A               	subwf	USBDeviceInit@i^(0+128),w
  8644  05E6  1C03               	skipc
  8645  05E7  2DC4               	goto	l6274
  8646  05E8                     l6280:	
  8647                           
  8648                           ;usb_device.c: 351: }
  8649                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  8650  05E8  3028               	movlw	40
  8651  05E9  0023               	movlb	3	; select bank3
  8652  05EA  00B7               	movwf	_pBDTEntryIn^(0+384)
  8653  05EB  3000               	movlw	0
  8654  05EC  00B8               	movwf	(_pBDTEntryIn+1)^(0+384)
  8655                           
  8656                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  8657  05ED  3016               	movlw	22
  8658  05EE  003D               	movlb	29	; select bank29
  8659  05EF  0098               	movwf	24	;volatile
  8660                           
  8661                           ;usb_device.c: 358: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  8662  05F0  3000               	movlw	0
  8663  05F1  0020               	movlb	0	; select bank0
  8664  05F2  00A3               	movwf	35	;volatile
  8665  05F3  3050               	movlw	80
  8666  05F4  00A2               	movwf	34	;volatile
  8667                           
  8668                           ;usb_device.c: 359: BDT[0].CNT = 8;
  8669  05F5  3008               	movlw	8
  8670  05F6  00A1               	movwf	33	;volatile
  8671                           
  8672                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  8673  05F7  3004               	movlw	4
  8674  05F8  0021               	movlb	1	; select bank1
  8675  05F9  00A6               	movwf	??_USBDeviceInit^(0+128)
  8676  05FA  0826               	movf	??_USBDeviceInit^(0+128),w
  8677  05FB  0020               	movlb	0	; select bank0
  8678  05FC  00A0               	movwf	32	;volatile
  8679                           
  8680                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  8681  05FD  17A0               	bsf	32,7	;volatile
  8682                           
  8683                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  8684  05FE  0023               	movlb	3	; select bank3
  8685  05FF  01EE               	clrf	_USBActiveConfiguration^(0+384)	;volatile
  8686                           
  8687                           ;usb_device.c: 366: USB1msTickCount = 0;
  8688  0600  3000               	movlw	0
  8689  0601  00C6               	movwf	(_USB1msTickCount+3)^(0+384)	;volatile
  8690  0602  3000               	movlw	0
  8691  0603  00C5               	movwf	(_USB1msTickCount+2)^(0+384)	;volatile
  8692  0604  3000               	movlw	0
  8693  0605  00C4               	movwf	(_USB1msTickCount+1)^(0+384)	;volatile
  8694  0606  3000               	movlw	0
  8695  0607  00C3               	movwf	_USB1msTickCount^(0+384)	;volatile
  8696                           
  8697                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  8698  0608  01D6               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  8699                           
  8700                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  8701  0609  01E5               	clrf	_USBDeviceState^(0+384)	;volatile
  8702  060A  0008               	return
  8703  060B                     __end_of_USBDeviceInit:	
  8704                           
  8705                           	psect	text35
  8706  10C6                     __ptext35:	
  8707 ;; *************** function _USBDeviceAttach *****************
  8708 ;; Defined at:
  8709 ;;		line 1352 in file "mcc_generated_files/usb/usb_device.c"
  8710 ;; Parameters:    Size  Location     Type
  8711 ;;		None
  8712 ;; Auto vars:     Size  Location     Type
  8713 ;;		None
  8714 ;; Return value:  Size  Location     Type
  8715 ;;                  1    wreg      void 
  8716 ;; Registers used:
  8717 ;;		wreg, status,2, status,0
  8718 ;; Tracked objects:
  8719 ;;		On entry : 0/0
  8720 ;;		On exit  : 0/0
  8721 ;;		Unchanged: 0/0
  8722 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8725 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8726 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8727 ;;Total ram usage:        1 bytes
  8728 ;; Hardware stack levels used:    1
  8729 ;; Hardware stack levels required when called:   10
  8730 ;; This function calls:
  8731 ;;		Nothing
  8732 ;; This function is called by:
  8733 ;;		_SYSTEM_Initialize
  8734 ;; This function uses a non-reentrant model
  8735 ;;
  8736                           
  8737                           
  8738                           ;psect for function _USBDeviceAttach
  8739  10C6                     _USBDeviceAttach:	
  8740                           
  8741                           ;usb_device.c: 1356: {
  8742                           ;usb_device.c: 1357: if(1 == 1)
  8743                           
  8744                           ;incstack = 0
  8745                           ; Regs used in _USBDeviceAttach: [wreg+status,2+status,0]
  8746  10C6  0023               	movlb	3	; select bank3
  8747  10C7  0865               	movf	_USBDeviceState^(0+384),w	;volatile
  8748  10C8  1D03               	btfss	3,2
  8749  10C9  0008               	return
  8750                           
  8751                           ;usb_device.c: 1358: {
  8752                           ;usb_device.c: 1360: UCON = 0;
  8753  10CA  003D               	movlb	29	; select bank29
  8754  10CB  018E               	clrf	14	;volatile
  8755                           
  8756                           ;usb_device.c: 1363: UIE = 0;
  8757  10CC  0192               	clrf	18	;volatile
  8758                           
  8759                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  8760  10CD  3016               	movlw	22
  8761  10CE  0091               	movwf	17	;volatile
  8762  10CF  309F               	movlw	159
  8763  10D0  0097               	movwf	23	;volatile
  8764  10D1  307B               	movlw	123
  8765  10D2  0092               	movwf	18	;volatile
  8766                           
  8767                           ;usb_device.c: 1369: {PIE2bits.USBIE = 1;INTCONbits.PEIE = 1; INTCONbits.GIE = 1;};
  8768  10D3  0021               	movlb	1	; select bank1
  8769  10D4  1512               	bsf	18,2	;volatile
  8770  10D5  170B               	bsf	11,6	;volatile
  8771  10D6  178B               	bsf	11,7	;volatile
  8772  10D7                     l424:	
  8773                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  8774                           
  8775  10D7  003D               	movlb	29	; select bank29
  8776  10D8  198E               	btfsc	14,3	;volatile
  8777  10D9  28DC               	goto	l4744
  8778  10DA  158E               	bsf	14,3	;volatile
  8779  10DB  28D7               	goto	l424
  8780  10DC                     l4744:	
  8781                           
  8782                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  8783  10DC  3001               	movlw	1
  8784  10DD  0021               	movlb	1	; select bank1
  8785  10DE  00A6               	movwf	??_USBDeviceAttach^(0+128)
  8786  10DF  0826               	movf	??_USBDeviceAttach^(0+128),w
  8787  10E0  0023               	movlb	3	; select bank3
  8788  10E1  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
  8789  10E2  0008               	return
  8790  10E3                     __end_of_USBDeviceAttach:	
  8791                           
  8792                           	psect	text36
  8793  104D                     __ptext36:	
  8794 ;; *************** function _PIN_MANAGER_Initialize *****************
  8795 ;; Defined at:
  8796 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  8797 ;; Parameters:    Size  Location     Type
  8798 ;;		None
  8799 ;; Auto vars:     Size  Location     Type
  8800 ;;		None
  8801 ;; Return value:  Size  Location     Type
  8802 ;;                  1    wreg      void 
  8803 ;; Registers used:
  8804 ;;		wreg, status,2
  8805 ;; Tracked objects:
  8806 ;;		On entry : 0/0
  8807 ;;		On exit  : 0/0
  8808 ;;		Unchanged: 0/0
  8809 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8814 ;;Total ram usage:        0 bytes
  8815 ;; Hardware stack levels used:    1
  8816 ;; Hardware stack levels required when called:   10
  8817 ;; This function calls:
  8818 ;;		Nothing
  8819 ;; This function is called by:
  8820 ;;		_SYSTEM_Initialize
  8821 ;; This function uses a non-reentrant model
  8822 ;;
  8823                           
  8824                           
  8825                           ;psect for function _PIN_MANAGER_Initialize
  8826  104D                     _PIN_MANAGER_Initialize:	
  8827                           
  8828                           ;pin_manager.c: 57: LATA = 0x00;
  8829                           
  8830                           ;incstack = 0
  8831                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8832  104D  0022               	movlb	2	; select bank2
  8833  104E  018C               	clrf	12	;volatile
  8834                           
  8835                           ;pin_manager.c: 58: LATC = 0x00;
  8836  104F  018E               	clrf	14	;volatile
  8837                           
  8838                           ;pin_manager.c: 63: TRISA = 0x30;
  8839  1050  3030               	movlw	48
  8840  1051  0021               	movlb	1	; select bank1
  8841  1052  008C               	movwf	12	;volatile
  8842                           
  8843                           ;pin_manager.c: 64: TRISC = 0x37;
  8844  1053  3037               	movlw	55
  8845  1054  008E               	movwf	14	;volatile
  8846                           
  8847                           ;pin_manager.c: 69: ANSELC = 0x0F;
  8848  1055  300F               	movlw	15
  8849  1056  0023               	movlb	3	; select bank3
  8850  1057  008E               	movwf	14	;volatile
  8851                           
  8852                           ;pin_manager.c: 70: ANSELA = 0x10;
  8853  1058  3010               	movlw	16
  8854  1059  008C               	movwf	12	;volatile
  8855                           
  8856                           ;pin_manager.c: 75: WPUA = 0x00;
  8857  105A  0024               	movlb	4	; select bank4
  8858  105B  018C               	clrf	12	;volatile
  8859                           
  8860                           ;pin_manager.c: 76: OPTION_REGbits.nWPUEN = 1;
  8861  105C  0021               	movlb	1	; select bank1
  8862  105D  1795               	bsf	21,7	;volatile
  8863                           
  8864                           ;pin_manager.c: 82: APFCON = 0x00;
  8865  105E  0022               	movlb	2	; select bank2
  8866  105F  019D               	clrf	29	;volatile
  8867  1060  0008               	return
  8868  1061                     __end_of_PIN_MANAGER_Initialize:	
  8869                           
  8870                           	psect	text37
  8871  1FD9                     __ptext37:	
  8872 ;; *************** function _OSCILLATOR_Initialize *****************
  8873 ;; Defined at:
  8874 ;;		line 83 in file "mcc_generated_files/mcc.c"
  8875 ;; Parameters:    Size  Location     Type
  8876 ;;		None
  8877 ;; Auto vars:     Size  Location     Type
  8878 ;;		None
  8879 ;; Return value:  Size  Location     Type
  8880 ;;                  1    wreg      void 
  8881 ;; Registers used:
  8882 ;;		wreg, status,2
  8883 ;; Tracked objects:
  8884 ;;		On entry : 0/0
  8885 ;;		On exit  : 0/0
  8886 ;;		Unchanged: 0/0
  8887 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8892 ;;Total ram usage:        0 bytes
  8893 ;; Hardware stack levels used:    1
  8894 ;; Hardware stack levels required when called:   10
  8895 ;; This function calls:
  8896 ;;		Nothing
  8897 ;; This function is called by:
  8898 ;;		_SYSTEM_Initialize
  8899 ;; This function uses a non-reentrant model
  8900 ;;
  8901                           
  8902                           
  8903                           ;psect for function _OSCILLATOR_Initialize
  8904  1FD9                     _OSCILLATOR_Initialize:	
  8905                           
  8906                           ;mcc.c: 86: OSCCON = 0x7C;
  8907                           
  8908                           ;incstack = 0
  8909                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8910  1FD9  307C               	movlw	124
  8911  1FDA  0021               	movlb	1	; select bank1
  8912  1FDB  0099               	movwf	25	;volatile
  8913                           
  8914                           ;mcc.c: 88: OSCTUNE = 0x00;
  8915  1FDC  0198               	clrf	24	;volatile
  8916                           
  8917                           ;mcc.c: 90: ACTCON = 0x00;
  8918  1FDD  0027               	movlb	7	; select bank7
  8919  1FDE  019B               	clrf	27	;volatile
  8920                           
  8921                           ;mcc.c: 92: BORCON = 0x00;
  8922  1FDF  0022               	movlb	2	; select bank2
  8923  1FE0  0196               	clrf	22	;volatile
  8924  1FE1                     l52:	
  8925                           ;mcc.c: 95: {
  8926                           
  8927                           ;mcc.c: 94: while(PLLRDY == 0)
  8928                           
  8929  1FE1  0021               	movlb	1	; select bank1
  8930  1FE2  1B1A               	btfsc	26,6	;volatile
  8931  1FE3  0008               	return
  8932  1FE4  2FE1               	goto	l52
  8933  1FE5                     __end_of_OSCILLATOR_Initialize:	
  8934                           
  8935                           	psect	intentry
  8936  0004                     __pintentry:	
  8937 ;; *************** function _INTERRUPT_InterruptManager *****************
  8938 ;; Defined at:
  8939 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  8940 ;; Parameters:    Size  Location     Type
  8941 ;;		None
  8942 ;; Auto vars:     Size  Location     Type
  8943 ;;		None
  8944 ;; Return value:  Size  Location     Type
  8945 ;;                  1    wreg      void 
  8946 ;; Registers used:
  8947 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8948 ;; Tracked objects:
  8949 ;;		On entry : 0/0
  8950 ;;		On exit  : 0/0
  8951 ;;		Unchanged: 0/0
  8952 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8955 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8956 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8957 ;;Total ram usage:        1 bytes
  8958 ;; Hardware stack levels used:    1
  8959 ;; Hardware stack levels required when called:    9
  8960 ;; This function calls:
  8961 ;;		i1_USBDeviceTasks
  8962 ;; This function is called by:
  8963 ;;		Interrupt level 1
  8964 ;; This function uses a non-reentrant model
  8965 ;;
  8966                           
  8967  0004                     _INTERRUPT_InterruptManager:	
  8968                           
  8969                           ;incstack = 0
  8970 ;; hardware stack exceeded
  8971  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  8972                           
  8973                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8974  0005  3180               	pagesel	$
  8975  0006  0020               	movlb	0	; select bank0
  8976  0007  087F               	movf	127,w
  8977  0008  0021               	movlb	1	; select bank1
  8978  0009  00A5               	movwf	??_INTERRUPT_InterruptManager^(0+128)
  8979                           
  8980                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1)
  8981  000A  1B0B               	btfsc	11,6	;volatile
  8982                           
  8983                           ;interrupt_manager.c: 55: {
  8984                           ;interrupt_manager.c: 56: if(PIE2bits.USBIE == 1 && PIR2bits.USBIF == 1)
  8985  000B  1D12               	btfss	18,2	;volatile
  8986  000C  2812               	goto	i1l75
  8987  000D  0020               	movlb	0	; select bank0
  8988  000E  1D12               	btfss	18,2	;volatile
  8989  000F  2812               	goto	i1l75
  8990                           
  8991                           ;interrupt_manager.c: 57: {
  8992                           ;interrupt_manager.c: 58: USBDeviceTasks();
  8993  0010  3183  23A0         	fcall	i1_USBDeviceTasks
  8994  0012                     i1l75:	
  8995                           ;interrupt_manager.c: 65: else
  8996                           ;interrupt_manager.c: 66: {
  8997                           
  8998                           ;interrupt_manager.c: 63: }
  8999                           ;interrupt_manager.c: 64: }
  9000                           
  9001                           ;interrupt_manager.c: 60: else
  9002                           ;interrupt_manager.c: 61: {
  9003                           
  9004                           ;interrupt_manager.c: 59: }
  9005                           
  9006  0012  0021               	movlb	1	; select bank1
  9007  0013  0825               	movf	??_INTERRUPT_InterruptManager^(0+128),w
  9008  0014  0020               	movlb	0	; select bank0
  9009  0015  00FF               	movwf	127
  9010  0016  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  9011  0017  0009               	retfie
  9012  0018                     __end_of_INTERRUPT_InterruptManager:	
  9013                           
  9014                           	psect	text39
  9015  03A0                     __ptext39:	
  9016 ;; *************** function i1_USBDeviceTasks *****************
  9017 ;; Defined at:
  9018 ;;		line 477 in file "mcc_generated_files/usb/usb_device.c"
  9019 ;; Parameters:    Size  Location     Type
  9020 ;;		None
  9021 ;; Auto vars:     Size  Location     Type
  9022 ;;  USBDeviceTas    1   15[BANK0h] unsigned char 
  9023 ;; Return value:  Size  Location     Type
  9024 ;;                  1    wreg      void 
  9025 ;; Registers used:
  9026 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9027 ;; Tracked objects:
  9028 ;;		On entry : 0/0
  9029 ;;		On exit  : 0/0
  9030 ;;		Unchanged: 0/0
  9031 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9033 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9034 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9035 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9036 ;;Total ram usage:        3 bytes
  9037 ;; Hardware stack levels used:    1
  9038 ;; Hardware stack levels required when called:    8
  9039 ;; This function calls:
  9040 ;;		i1_USBCtrlEPAllowStatusStage
  9041 ;;		i1_USBCtrlEPService
  9042 ;;		i1_USBDeviceInit
  9043 ;;		i1_USBIncrement1msInternalTimers
  9044 ;;		i1_USBStallHandler
  9045 ;;		i1_USBSuspend
  9046 ;;		i1_USBWakeFromSuspend
  9047 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
  9048 ;; This function is called by:
  9049 ;;		_INTERRUPT_InterruptManager
  9050 ;; This function uses a non-reentrant model
  9051 ;;
  9052                           
  9053                           
  9054                           ;psect for function i1_USBDeviceTasks
  9055  03A0                     i1_USBDeviceTasks:	
  9056                           
  9057                           ;usb_device.c: 479: uint8_t i;
  9058                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
  9059                           
  9060                           ;incstack = 0
  9061 ;; hardware stack exceeded
  9062                           ; Regs used in i1_USBDeviceTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9063  03A0  0023               	movlb	3	; select bank3
  9064  03A1  0365               	decf	_USBDeviceState^(0+384),w	;volatile
  9065  03A2  1D03               	btfss	3,2
  9066  03A3  2BB0               	goto	i1l5238
  9067                           
  9068                           ;usb_device.c: 591: {
  9069                           ;usb_device.c: 601: if(!UCONbits.SE0)
  9070  03A4  003D               	movlb	29	; select bank29
  9071  03A5  1A8E               	btfsc	14,5	;volatile
  9072  03A6  2BB0               	goto	i1l5238
  9073                           
  9074                           ;usb_device.c: 602: {
  9075                           ;usb_device.c: 608: {UIR = 0;};
  9076  03A7  0190               	clrf	16	;volatile
  9077                           
  9078                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
  9079  03A8  1412               	bsf	18,0	;volatile
  9080                           
  9081                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
  9082  03A9  1612               	bsf	18,4	;volatile
  9083                           
  9084                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
  9085  03AA  3002               	movlw	2
  9086  03AB  0021               	movlb	1	; select bank1
  9087  03AC  00A3               	movwf	??i1_USBDeviceTasks^(0+128)
  9088  03AD  0823               	movf	??i1_USBDeviceTasks^(0+128),w
  9089  03AE  0023               	movlb	3	; select bank3
  9090  03AF  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
  9091  03B0                     i1l5238:	
  9092                           
  9093                           ;usb_device.c: 617: }
  9094                           ;usb_device.c: 618: }
  9095                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  9096  03B0  003D               	movlb	29	; select bank29
  9097  03B1  1910               	btfsc	16,2	;volatile
  9098  03B2  1D12               	btfss	18,2	;volatile
  9099  03B3  2BBD               	goto	i1l5246
  9100                           
  9101                           ;usb_device.c: 635: {
  9102                           ;usb_device.c: 636: (UIR &= 0xFB);
  9103  03B4  30FB               	movlw	251
  9104  03B5  0021               	movlb	1	; select bank1
  9105  03B6  00A3               	movwf	??i1_USBDeviceTasks^(0+128)
  9106  03B7  0823               	movf	??i1_USBDeviceTasks^(0+128),w
  9107  03B8  003D               	movlb	29	; select bank29
  9108  03B9  0590               	andwf	16,f	;volatile
  9109                           
  9110                           ;usb_device.c: 640: USBWakeFromSuspend();
  9111  03BA  3191  2141  3183   	fcall	i1_USBWakeFromSuspend
  9112  03BD                     i1l5246:	
  9113                           
  9114                           ;usb_device.c: 642: }
  9115                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
  9116  03BD  003D               	movlb	29	; select bank29
  9117  03BE  1C8E               	btfss	14,1	;volatile
  9118  03BF  2BC3               	goto	i1l375
  9119                           
  9120                           ;usb_device.c: 648: {
  9121                           ;usb_device.c: 649: PIR2bits.USBIF = 0;;
  9122  03C0  0020               	movlb	0	; select bank0
  9123  03C1  1112               	bcf	18,2	;volatile
  9124                           
  9125                           ;usb_device.c: 650: return;
  9126  03C2  0008               	return
  9127  03C3                     i1l375:	
  9128                           
  9129                           ;usb_device.c: 651: }
  9130                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
  9131  03C3  1810               	btfsc	16,0	;volatile
  9132  03C4  1C12               	btfss	18,0	;volatile
  9133  03C5  2BD6               	goto	i1l5260
  9134                           
  9135                           ;usb_device.c: 664: {
  9136                           ;usb_device.c: 665: USBDeviceInit();
  9137  03C6  3186  26BD  3183   	fcall	i1_USBDeviceInit
  9138                           
  9139                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
  9140  03C9  0021               	movlb	1	; select bank1
  9141  03CA  1512               	bsf	18,2	;volatile
  9142                           
  9143                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
  9144  03CB  3004               	movlw	4
  9145  03CC  00A3               	movwf	??i1_USBDeviceTasks^(0+128)
  9146  03CD  0823               	movf	??i1_USBDeviceTasks^(0+128),w
  9147  03CE  0023               	movlb	3	; select bank3
  9148  03CF  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
  9149                           
  9150                           ;usb_device.c: 681: (UIR &= 0xFE);
  9151  03D0  30FE               	movlw	254
  9152  03D1  0021               	movlb	1	; select bank1
  9153  03D2  00A3               	movwf	??i1_USBDeviceTasks^(0+128)
  9154  03D3  0823               	movf	??i1_USBDeviceTasks^(0+128),w
  9155  03D4  003D               	movlb	29	; select bank29
  9156  03D5  0590               	andwf	16,f	;volatile
  9157  03D6                     i1l5260:	
  9158                           
  9159                           ;usb_device.c: 682: }
  9160                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  9161  03D6  1A10               	btfsc	16,4	;volatile
  9162  03D7  1E12               	btfss	18,4	;volatile
  9163  03D8  2BDC               	goto	i1l5266
  9164                           
  9165                           ;usb_device.c: 688: {
  9166                           ;usb_device.c: 694: USBSuspend();
  9167  03D9  3190  20E3  3183   	fcall	i1_USBSuspend
  9168  03DC                     i1l5266:	
  9169                           
  9170                           ;usb_device.c: 696: }
  9171                           ;usb_device.c: 708: if(UIRbits.SOFIF)
  9172  03DC  003D               	movlb	29	; select bank29
  9173  03DD  1F10               	btfss	16,6	;volatile
  9174  03DE  2C06               	goto	i1l5282
  9175                           
  9176                           ;usb_device.c: 709: {
  9177                           ;usb_device.c: 711: if(UIEbits.SOFIE)
  9178  03DF  1F12               	btfss	18,6	;volatile
  9179  03E0  2BF1               	goto	i1l5272
  9180                           
  9181                           ;usb_device.c: 712: {
  9182                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  9183  03E1  3073               	movlw	115
  9184  03E2  0020               	movlb	0	; select bank0
  9185  03E3  00E0               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
  9186  03E4  3000               	movlw	0
  9187  03E5  00E1               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
  9188  03E6  3000               	movlw	0
  9189  03E7  00E2               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
  9190  03E8  3000               	movlw	0
  9191  03E9  00E3               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  9192  03EA  3001               	movlw	1
  9193  03EB  00E4               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
  9194  03EC  3000               	movlw	0
  9195  03ED  00E5               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
  9196  03EE  3192  221E  3183   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
  9197  03F1                     i1l5272:	
  9198                           
  9199                           ;usb_device.c: 714: }
  9200                           ;usb_device.c: 715: (UIR &= 0xBF);
  9201  03F1  30BF               	movlw	191
  9202  03F2  0021               	movlb	1	; select bank1
  9203  03F3  00A3               	movwf	??i1_USBDeviceTasks^(0+128)
  9204  03F4  0823               	movf	??i1_USBDeviceTasks^(0+128),w
  9205  03F5  003D               	movlb	29	; select bank29
  9206  03F6  0590               	andwf	16,f	;volatile
  9207                           
  9208                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
  9209  03F7  3190  2079  3183   	fcall	i1_USBIncrement1msInternalTimers
  9210                           
  9211                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
  9212  03FA  0023               	movlb	3	; select bank3
  9213  03FB  085C               	movf	_USBStatusStageTimeoutCounter^(0+384),w	;volatile
  9214  03FC  1903               	btfsc	3,2
  9215  03FD  2C00               	goto	i1l381
  9216                           
  9217                           ;usb_device.c: 736: {
  9218                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
  9219  03FE  3001               	movlw	1
  9220  03FF  02DC               	subwf	_USBStatusStageTimeoutCounter^(0+384),f	;volatile
  9221  0400                     i1l381:	
  9222                           
  9223                           ;usb_device.c: 738: }
  9224                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
  9225  0400  085C               	movf	_USBStatusStageTimeoutCounter^(0+384),w	;volatile
  9226  0401  1D03               	btfss	3,2
  9227  0402  2C06               	goto	i1l5282
  9228                           
  9229                           ;usb_device.c: 745: {
  9230                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
  9231  0403  3189  2164  3183   	fcall	i1_USBCtrlEPAllowStatusStage
  9232  0406                     i1l5282:	
  9233                           
  9234                           ;usb_device.c: 747: }
  9235                           ;usb_device.c: 749: }
  9236                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
  9237  0406  003D               	movlb	29	; select bank29
  9238  0407  1A90               	btfsc	16,5	;volatile
  9239  0408  1E92               	btfss	18,5	;volatile
  9240  0409  2C0D               	goto	i1l5288
  9241                           
  9242                           ;usb_device.c: 752: {
  9243                           ;usb_device.c: 753: USBStallHandler();
  9244  040A  3191  21A4  3183   	fcall	i1_USBStallHandler
  9245  040D                     i1l5288:	
  9246                           
  9247                           ;usb_device.c: 754: }
  9248                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
  9249  040D  003D               	movlb	29	; select bank29
  9250  040E  1890               	btfsc	16,1	;volatile
  9251  040F  1C92               	btfss	18,1	;volatile
  9252  0410  2C23               	goto	i1l5296
  9253                           
  9254                           ;usb_device.c: 757: {
  9255                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  9256  0411  30FF               	movlw	255
  9257  0412  0020               	movlb	0	; select bank0
  9258  0413  00E0               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
  9259  0414  307F               	movlw	127
  9260  0415  00E1               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
  9261  0416  3000               	movlw	0
  9262  0417  00E2               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
  9263  0418  3000               	movlw	0
  9264  0419  00E3               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  9265  041A  3001               	movlw	1
  9266  041B  00E4               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
  9267  041C  3000               	movlw	0
  9268  041D  00E5               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
  9269  041E  3192  221E  3183   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
  9270                           
  9271                           ;usb_device.c: 759: {UEIR = 0;};
  9272  0421  003D               	movlb	29	; select bank29
  9273  0422  0193               	clrf	19	;volatile
  9274  0423                     i1l5296:	
  9275                           
  9276                           ;usb_device.c: 767: }
  9277                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
  9278  0423  3004               	movlw	4
  9279  0424  0023               	movlb	3	; select bank3
  9280  0425  0265               	subwf	_USBDeviceState^(0+384),w	;volatile
  9281  0426  1803               	skipnc
  9282  0427  2C2B               	goto	i1l385
  9283                           
  9284                           ;usb_device.c: 775: {
  9285                           ;usb_device.c: 776: PIR2bits.USBIF = 0;;
  9286  0428  0020               	movlb	0	; select bank0
  9287  0429  1112               	bcf	18,2	;volatile
  9288                           
  9289                           ;usb_device.c: 777: return;
  9290  042A  0008               	return
  9291  042B                     i1l385:	
  9292                           
  9293                           ;usb_device.c: 778: }
  9294                           ;usb_device.c: 783: if(UIEbits.TRNIE)
  9295  042B  003D               	movlb	29	; select bank29
  9296  042C  1D92               	btfss	18,3	;volatile
  9297  042D  2C85               	goto	i1l386
  9298                           
  9299                           ;usb_device.c: 784: {
  9300                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
  9301  042E  0020               	movlb	0	; select bank0
  9302  042F  01EF               	clrf	i1USBDeviceTasks@i
  9303  0430  3004               	movlw	4
  9304  0431  026F               	subwf	i1USBDeviceTasks@i,w
  9305  0432  1803               	btfsc	3,0
  9306  0433  2C85               	goto	i1l386
  9307  0434                     i1l387:	
  9308                           
  9309                           ;usb_device.c: 786: {
  9310                           ;usb_device.c: 787: if(UIRbits.TRNIF)
  9311  0434  003D               	movlb	29	; select bank29
  9312  0435  1D90               	btfss	16,3	;volatile
  9313  0436  2C85               	goto	i1l386
  9314                           
  9315                           ;usb_device.c: 788: {
  9316                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
  9317  0437  080F               	movf	15,w	;volatile
  9318  0438  0021               	movlb	1	; select bank1
  9319  0439  00A3               	movwf	??i1_USBDeviceTasks^(0+128)
  9320  043A  0823               	movf	??i1_USBDeviceTasks^(0+128),w
  9321  043B  0023               	movlb	3	; select bank3
  9322  043C  00ED               	movwf	_USTATcopy^(0+384)	;volatile
  9323                           
  9324                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
  9325  043D  0C6D               	rrf	_USTATcopy^(0+384),w	;volatile
  9326  043E  0021               	movlb	1	; select bank1
  9327  043F  00A3               	movwf	??i1_USBDeviceTasks^(0+128)
  9328  0440  0CA3               	rrf	??i1_USBDeviceTasks^(0+128),f
  9329  0441  0C23               	rrf	??i1_USBDeviceTasks^(0+128),w
  9330  0442  390F               	andlw	15
  9331  0443  00A4               	movwf	(??i1_USBDeviceTasks+1)^(0+128)
  9332  0444  0824               	movf	(??i1_USBDeviceTasks+1)^(0+128),w
  9333  0445  0023               	movlb	3	; select bank3
  9334  0446  00DE               	movwf	_endpoint_number^(0+384)	;volatile
  9335                           
  9336                           ;usb_device.c: 793: (UIR &= 0xF7);
  9337  0447  30F7               	movlw	247
  9338  0448  0021               	movlb	1	; select bank1
  9339  0449  00A3               	movwf	??i1_USBDeviceTasks^(0+128)
  9340  044A  0823               	movf	??i1_USBDeviceTasks^(0+128),w
  9341  044B  003D               	movlb	29	; select bank29
  9342  044C  0590               	andwf	16,f	;volatile
  9343                           
  9344                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
  9345  044D  0023               	movlb	3	; select bank3
  9346  044E  196D               	btfsc	_USTATcopy^(0+384),2	;volatile
  9347  044F  2C53               	goto	i1l5316
  9348                           
  9349                           ;usb_device.c: 799: {
  9350                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  9351  0450  085E               	movf	_endpoint_number^(0+384),w	;volatile
  9352  0451  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  9353  0452  2C56               	goto	L12
  9354  0453                     i1l5316:	
  9355                           ;usb_device.c: 801: }
  9356                           
  9357                           
  9358                           ;usb_device.c: 802: else
  9359                           ;usb_device.c: 803: {
  9360                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  9361  0453  0023               	movlb	3	; select bank3
  9362  0454  085E               	movf	_endpoint_number^(0+384),w	;volatile
  9363  0455  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  9364  0456                     L12:	
  9365  0456  0086               	movwf	6
  9366  0457  3001               	movlw	1	; select bank3/4
  9367  0458  0087               	movwf	7
  9368  0459  0801               	movf	1,w
  9369  045A  3901               	andlw	1
  9370  045B  0021               	movlb	1	; select bank1
  9371  045C  00A3               	movwf	??i1_USBDeviceTasks^(0+128)
  9372  045D  3001               	movlw	1
  9373  045E  06A3               	xorwf	??i1_USBDeviceTasks^(0+128),f
  9374  045F  0801               	movf	1,w
  9375  0460  0623               	xorwf	??i1_USBDeviceTasks^(0+128),w
  9376  0461  39FE               	andlw	-2
  9377  0462  0623               	xorwf	??i1_USBDeviceTasks^(0+128),w
  9378  0463  0081               	movwf	1
  9379                           
  9380                           ;usb_device.c: 805: }
  9381                           ;usb_device.c: 810: if(endpoint_number == 0)
  9382  0464  0023               	movlb	3	; select bank3
  9383  0465  085E               	movf	_endpoint_number^(0+384),w	;volatile
  9384  0466  1D03               	btfss	3,2
  9385  0467  2C6C               	goto	i1l5322
  9386                           
  9387                           ;usb_device.c: 811: {
  9388                           ;usb_device.c: 812: USBCtrlEPService();
  9389  0468  3195  25CC  3183   	fcall	i1_USBCtrlEPService
  9390                           
  9391                           ;usb_device.c: 813: }
  9392  046B  2C7B               	goto	i1l5324
  9393  046C                     i1l5322:	
  9394                           
  9395                           ;usb_device.c: 814: else
  9396                           ;usb_device.c: 815: {
  9397                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  9398  046C  3072               	movlw	114
  9399  046D  0020               	movlb	0	; select bank0
  9400  046E  00E0               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
  9401  046F  3000               	movlw	0
  9402  0470  00E1               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
  9403  0471  30ED               	movlw	low _USTATcopy
  9404  0472  00E2               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
  9405  0473  3001               	movlw	high _USTATcopy
  9406  0474  00E3               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  9407  0475  3000               	movlw	0
  9408  0476  00E4               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
  9409  0477  00E5               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
  9410  0478  3192  221E  3183   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
  9411  047B                     i1l5324:	
  9412                           ;usb_device.c: 819: else
  9413                           ;usb_device.c: 820: {
  9414                           ;usb_device.c: 821: break;
  9415                           
  9416                           ;usb_device.c: 817: }
  9417                           ;usb_device.c: 818: }
  9418                           
  9419  047B  3001               	movlw	1
  9420  047C  0021               	movlb	1	; select bank1
  9421  047D  00A3               	movwf	??i1_USBDeviceTasks^(0+128)
  9422  047E  0823               	movf	??i1_USBDeviceTasks^(0+128),w
  9423  047F  0020               	movlb	0	; select bank0
  9424  0480  07EF               	addwf	i1USBDeviceTasks@i,f
  9425  0481  3004               	movlw	4
  9426  0482  026F               	subwf	i1USBDeviceTasks@i,w
  9427  0483  1C03               	skipc
  9428  0484  2C34               	goto	i1l387
  9429  0485                     i1l386:	
  9430                           
  9431                           ;usb_device.c: 822: }
  9432                           ;usb_device.c: 823: }
  9433                           ;usb_device.c: 824: }
  9434                           ;usb_device.c: 826: PIR2bits.USBIF = 0;;
  9435  0485  0020               	movlb	0	; select bank0
  9436  0486  1112               	bcf	18,2	;volatile
  9437  0487  0008               	return
  9438  0488                     __end_ofi1_USBDeviceTasks:	
  9439                           
  9440                           	psect	text40
  9441  1141                     __ptext40:	
  9442 ;; *************** function i1_USBWakeFromSuspend *****************
  9443 ;; Defined at:
  9444 ;;		line 2303 in file "mcc_generated_files/usb/usb_device.c"
  9445 ;; Parameters:    Size  Location     Type
  9446 ;;		None
  9447 ;; Auto vars:     Size  Location     Type
  9448 ;;		None
  9449 ;; Return value:  Size  Location     Type
  9450 ;;                  1    wreg      void 
  9451 ;; Registers used:
  9452 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9453 ;; Tracked objects:
  9454 ;;		On entry : 0/0
  9455 ;;		On exit  : 0/0
  9456 ;;		Unchanged: 0/0
  9457 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9460 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9461 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9462 ;;Total ram usage:        1 bytes
  9463 ;; Hardware stack levels used:    1
  9464 ;; Hardware stack levels required when called:    4
  9465 ;; This function calls:
  9466 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
  9467 ;; This function is called by:
  9468 ;;		i1_USBDeviceTasks
  9469 ;; This function uses a non-reentrant model
  9470 ;;
  9471                           
  9472                           
  9473                           ;psect for function i1_USBWakeFromSuspend
  9474  1141                     i1_USBWakeFromSuspend:	
  9475                           
  9476                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
  9477                           
  9478                           ;incstack = 0
  9479                           ; Regs used in i1_USBWakeFromSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9480  1141  0023               	movlb	3	; select bank3
  9481  1142  01DF               	clrf	_USBBusIsSuspended^(0+384)	;volatile
  9482                           
  9483                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  9484  1143  3074               	movlw	116
  9485  1144  0020               	movlb	0	; select bank0
  9486  1145  00E0               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
  9487  1146  3000               	movlw	0
  9488  1147  00E1               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
  9489  1148  3000               	movlw	0
  9490  1149  00E2               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
  9491  114A  3000               	movlw	0
  9492  114B  00E3               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  9493  114C  3000               	movlw	0
  9494  114D  00E4               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
  9495  114E  00E5               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
  9496  114F  3192  221E  3191   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
  9497                           
  9498                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
  9499  1152  003D               	movlb	29	; select bank29
  9500  1153  108E               	bcf	14,1	;volatile
  9501                           
  9502                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
  9503  1154  1112               	bcf	18,2	;volatile
  9504  1155                     i1l5066:	
  9505                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
  9506                           
  9507  1155  1D10               	btfss	16,2	;volatile
  9508  1156  295E               	goto	i1l5068
  9509                           
  9510                           ;usb_device.c: 2343: {
  9511                           ;usb_device.c: 2344: (UIR &= 0xFB);
  9512  1157  30FB               	movlw	251
  9513  1158  0020               	movlb	0	; select bank0
  9514  1159  00E6               	movwf	??i1_USBWakeFromSuspend
  9515  115A  0866               	movf	??i1_USBWakeFromSuspend,w
  9516  115B  003D               	movlb	29	; select bank29
  9517  115C  0590               	andwf	16,f	;volatile
  9518  115D  2955               	goto	i1l5066
  9519  115E                     i1l5068:	
  9520                           
  9521                           ;usb_device.c: 2345: }
  9522                           ;usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
  9523  115E  0023               	movlb	3	; select bank3
  9524  115F  01D6               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  9525  1160  0008               	return
  9526  1161                     __end_ofi1_USBWakeFromSuspend:	
  9527                           
  9528                           	psect	text41
  9529  10E3                     __ptext41:	
  9530 ;; *************** function i1_USBSuspend *****************
  9531 ;; Defined at:
  9532 ;;		line 2245 in file "mcc_generated_files/usb/usb_device.c"
  9533 ;; Parameters:    Size  Location     Type
  9534 ;;		None
  9535 ;; Auto vars:     Size  Location     Type
  9536 ;;		None
  9537 ;; Return value:  Size  Location     Type
  9538 ;;                  1    wreg      void 
  9539 ;; Registers used:
  9540 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9541 ;; Tracked objects:
  9542 ;;		On entry : 0/0
  9543 ;;		On exit  : 0/0
  9544 ;;		Unchanged: 0/0
  9545 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9548 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9549 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9550 ;;Total ram usage:        1 bytes
  9551 ;; Hardware stack levels used:    1
  9552 ;; Hardware stack levels required when called:    4
  9553 ;; This function calls:
  9554 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
  9555 ;; This function is called by:
  9556 ;;		i1_USBDeviceTasks
  9557 ;; This function uses a non-reentrant model
  9558 ;;
  9559                           
  9560                           
  9561                           ;psect for function i1_USBSuspend
  9562  10E3                     i1_USBSuspend:	
  9563                           
  9564                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
  9565                           
  9566                           ;incstack = 0
  9567                           ; Regs used in i1_USBSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9568  10E3  003D               	movlb	29	; select bank29
  9569  10E4  1512               	bsf	18,2	;volatile
  9570                           
  9571                           ;usb_device.c: 2271: (UIR &= 0xEF);
  9572  10E5  30EF               	movlw	239
  9573  10E6  0020               	movlb	0	; select bank0
  9574  10E7  00E6               	movwf	??i1_USBSuspend
  9575  10E8  0866               	movf	??i1_USBSuspend,w
  9576  10E9  003D               	movlb	29	; select bank29
  9577  10EA  0590               	andwf	16,f	;volatile
  9578                           
  9579                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
  9580  10EB  148E               	bsf	14,1	;volatile
  9581                           
  9582                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
  9583  10EC  3001               	movlw	1
  9584  10ED  0020               	movlb	0	; select bank0
  9585  10EE  00E6               	movwf	??i1_USBSuspend
  9586  10EF  0866               	movf	??i1_USBSuspend,w
  9587  10F0  0023               	movlb	3	; select bank3
  9588  10F1  00DF               	movwf	_USBBusIsSuspended^(0+384)	;volatile
  9589                           
  9590                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
  9591  10F2  01D6               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  9592                           
  9593                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  9594  10F3  3075               	movlw	117
  9595  10F4  0020               	movlb	0	; select bank0
  9596  10F5  00E0               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
  9597  10F6  3000               	movlw	0
  9598  10F7  00E1               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
  9599  10F8  3000               	movlw	0
  9600  10F9  00E2               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
  9601  10FA  3000               	movlw	0
  9602  10FB  00E3               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  9603  10FC  3000               	movlw	0
  9604  10FD  00E4               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
  9605  10FE  00E5               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
  9606  10FF  3192  221E         	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
  9607  1101  0008               	return
  9608  1102                     __end_ofi1_USBSuspend:	
  9609                           
  9610                           	psect	text42
  9611  11A4                     __ptext42:	
  9612 ;; *************** function i1_USBStallHandler *****************
  9613 ;; Defined at:
  9614 ;;		line 2202 in file "mcc_generated_files/usb/usb_device.c"
  9615 ;; Parameters:    Size  Location     Type
  9616 ;;		None
  9617 ;; Auto vars:     Size  Location     Type
  9618 ;;		None
  9619 ;; Return value:  Size  Location     Type
  9620 ;;                  1    wreg      void 
  9621 ;; Registers used:
  9622 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9623 ;; Tracked objects:
  9624 ;;		On entry : 0/0
  9625 ;;		On exit  : 0/0
  9626 ;;		Unchanged: 0/0
  9627 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9630 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9631 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9632 ;;Total ram usage:        1 bytes
  9633 ;; Hardware stack levels used:    1
  9634 ;; This function calls:
  9635 ;;		Nothing
  9636 ;; This function is called by:
  9637 ;;		i1_USBDeviceTasks
  9638 ;; This function uses a non-reentrant model
  9639 ;;
  9640                           
  9641                           
  9642                           ;psect for function i1_USBStallHandler
  9643  11A4                     i1_USBStallHandler:	
  9644                           
  9645                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
  9646                           
  9647                           ;incstack = 0
  9648                           ; Regs used in i1_USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  9649  11A4  003D               	movlb	29	; select bank29
  9650  11A5  1C18               	btfss	24,0	;volatile
  9651  11A6  29C4               	goto	i1l5042
  9652                           
  9653                           ;usb_device.c: 2215: {
  9654                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  9655  11A7  0023               	movlb	3	; select bank3
  9656  11A8  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  9657  11A9  0086               	movwf	6
  9658  11AA  0187               	clrf	7
  9659  11AB  3080               	movlw	128
  9660  11AC  0601               	xorwf	1,w
  9661  11AD  1D03               	btfss	3,2
  9662  11AE  29C2               	goto	i1l5040
  9663  11AF  0837               	movf	_pBDTEntryIn^(0+384),w
  9664  11B0  0086               	movwf	6
  9665  11B1  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  9666  11B2  0087               	movwf	7
  9667  11B3  3084               	movlw	132
  9668  11B4  0601               	xorwf	1,w
  9669  11B5  1D03               	btfss	3,2
  9670  11B6  29C2               	goto	i1l5040
  9671                           
  9672                           ;usb_device.c: 2218: {
  9673                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9674  11B7  300C               	movlw	12
  9675  11B8  00F0               	movwf	??i1_USBStallHandler
  9676  11B9  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  9677  11BA  0086               	movwf	6
  9678  11BB  0187               	clrf	7
  9679  11BC  0870               	movf	??i1_USBStallHandler,w
  9680  11BD  0081               	movwf	1
  9681                           
  9682                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  9683  11BE  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  9684  11BF  0086               	movwf	6
  9685  11C0  0187               	clrf	7
  9686  11C1  1781               	bsf	1,7
  9687  11C2                     i1l5040:	
  9688                           
  9689                           ;usb_device.c: 2222: }
  9690                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
  9691  11C2  003D               	movlb	29	; select bank29
  9692  11C3  1018               	bcf	24,0	;volatile
  9693  11C4                     i1l5042:	
  9694                           
  9695                           ;usb_device.c: 2224: }
  9696                           ;usb_device.c: 2226: (UIR &= 0xDF);
  9697  11C4  30DF               	movlw	223
  9698  11C5  00F0               	movwf	??i1_USBStallHandler
  9699  11C6  0870               	movf	??i1_USBStallHandler,w
  9700  11C7  0590               	andwf	16,f	;volatile
  9701  11C8  0008               	return
  9702  11C9                     __end_ofi1_USBStallHandler:	
  9703                           
  9704                           	psect	text43
  9705  1079                     __ptext43:	
  9706 ;; *************** function i1_USBIncrement1msInternalTimers *****************
  9707 ;; Defined at:
  9708 ;;		line 3025 in file "mcc_generated_files/usb/usb_device.c"
  9709 ;; Parameters:    Size  Location     Type
  9710 ;;		None
  9711 ;; Auto vars:     Size  Location     Type
  9712 ;;		None
  9713 ;; Return value:  Size  Location     Type
  9714 ;;                  1    wreg      void 
  9715 ;; Registers used:
  9716 ;;		wreg, status,2, status,0
  9717 ;; Tracked objects:
  9718 ;;		On entry : 0/0
  9719 ;;		On exit  : 0/0
  9720 ;;		Unchanged: 0/0
  9721 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9724 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9725 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9726 ;;Total ram usage:        1 bytes
  9727 ;; Hardware stack levels used:    1
  9728 ;; This function calls:
  9729 ;;		Nothing
  9730 ;; This function is called by:
  9731 ;;		i1_USBDeviceTasks
  9732 ;; This function uses a non-reentrant model
  9733 ;;
  9734                           
  9735                           
  9736                           ;psect for function i1_USBIncrement1msInternalTimers
  9737  1079                     i1_USBIncrement1msInternalTimers:	
  9738                           
  9739                           ;usb_device.c: 3033: USB1msTickCount++;
  9740                           
  9741                           ;incstack = 0
  9742                           ; Regs used in i1_USBIncrement1msInternalTimers: [wreg+status,2+status,0]
  9743  1079  3001               	movlw	1
  9744  107A  0023               	movlb	3	; select bank3
  9745  107B  07C3               	addwf	_USB1msTickCount^(0+384),f	;volatile
  9746  107C  3000               	movlw	0
  9747  107D  3DC4               	addwfc	(_USB1msTickCount+1)^(0+384),f	;volatile
  9748  107E  3000               	movlw	0
  9749  107F  3DC5               	addwfc	(_USB1msTickCount+2)^(0+384),f	;volatile
  9750  1080  3000               	movlw	0
  9751  1081  3DC6               	addwfc	(_USB1msTickCount+3)^(0+384),f	;volatile
  9752                           
  9753                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
  9754  1082  085F               	movf	_USBBusIsSuspended^(0+384),w	;volatile
  9755  1083  1D03               	btfss	3,2
  9756  1084  0008               	return
  9757                           
  9758                           ;usb_device.c: 3035: {
  9759                           ;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
  9760  1085  3001               	movlw	1
  9761  1086  00F0               	movwf	??i1_USBIncrement1msInternalTimers
  9762  1087  0870               	movf	??i1_USBIncrement1msInternalTimers,w
  9763  1088  07D6               	addwf	_USBTicksSinceSuspendEnd^(0+384),f	;volatile
  9764                           
  9765                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
  9766  1089  0856               	movf	_USBTicksSinceSuspendEnd^(0+384),w	;volatile
  9767  108A  1D03               	btfss	3,2
  9768  108B  0008               	return
  9769                           
  9770                           ;usb_device.c: 3039: {
  9771                           ;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
  9772  108C  30FF               	movlw	255
  9773  108D  00F0               	movwf	??i1_USBIncrement1msInternalTimers
  9774  108E  0870               	movf	??i1_USBIncrement1msInternalTimers,w
  9775  108F  00D6               	movwf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  9776  1090  0008               	return
  9777  1091                     __end_ofi1_USBIncrement1msInternalTimers:	
  9778                           
  9779                           	psect	text44
  9780  06BD                     __ptext44:	
  9781 ;; *************** function i1_USBDeviceInit *****************
  9782 ;; Defined at:
  9783 ;;		line 277 in file "mcc_generated_files/usb/usb_device.c"
  9784 ;; Parameters:    Size  Location     Type
  9785 ;;		None
  9786 ;; Auto vars:     Size  Location     Type
  9787 ;;  USBDeviceIni    2    1[COMMON] PTR unsigned char 
  9788 ;;		 -> UEP1(1), 
  9789 ;;  USBDeviceIni    1    4[COMMON] unsigned char 
  9790 ;;  USBDeviceIni    1    3[COMMON] unsigned char 
  9791 ;; Return value:  Size  Location     Type
  9792 ;;                  1    wreg      void 
  9793 ;; Registers used:
  9794 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9795 ;; Tracked objects:
  9796 ;;		On entry : 0/0
  9797 ;;		On exit  : 0/0
  9798 ;;		Unchanged: 0/0
  9799 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9801 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9802 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9803 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9804 ;;Total ram usage:        5 bytes
  9805 ;; Hardware stack levels used:    1
  9806 ;; This function calls:
  9807 ;;		Nothing
  9808 ;; This function is called by:
  9809 ;;		i1_USBDeviceTasks
  9810 ;; This function uses a non-reentrant model
  9811 ;;
  9812                           
  9813                           
  9814                           ;psect for function i1_USBDeviceInit
  9815  06BD                     i1_USBDeviceInit:	
  9816                           
  9817                           ;usb_device.c: 279: uint8_t i;
  9818                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  9819                           
  9820                           ;incstack = 0
  9821                           ; Regs used in i1_USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  9822  06BD  0021               	movlb	1	; select bank1
  9823  06BE  1112               	bcf	18,2	;volatile
  9824                           
  9825                           ;usb_device.c: 285: ;
  9826                           ;usb_device.c: 288: {UEIR = 0;};
  9827  06BF  003D               	movlb	29	; select bank29
  9828  06C0  0193               	clrf	19	;volatile
  9829                           
  9830                           ;usb_device.c: 291: {UIR = 0;};
  9831  06C1  0190               	clrf	16	;volatile
  9832                           
  9833                           ;usb_device.c: 294: UEP0 = 0;
  9834  06C2  0198               	clrf	24	;volatile
  9835                           
  9836                           ;usb_device.c: 296: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 0
      +                          ; };
  9837  06C3  300E               	movlw	14
  9838  06C4  00F2               	movwf	i1USBDeviceInit@p+1
  9839  06C5  3099               	movlw	153
  9840  06C6  00F1               	movwf	i1USBDeviceInit@p
  9841  06C7  01F3               	clrf	i1USBDeviceInit@i_1423
  9842  06C8  3002               	movlw	2
  9843  06C9  0273               	subwf	i1USBDeviceInit@i_1423,w
  9844  06CA  1803               	btfsc	3,0
  9845  06CB  2EDD               	goto	i1l4964
  9846  06CC                     i1l4956:	
  9847  06CC  0871               	movf	i1USBDeviceInit@p,w
  9848  06CD  0086               	movwf	6
  9849  06CE  0872               	movf	i1USBDeviceInit@p+1,w
  9850  06CF  0087               	movwf	7
  9851  06D0  0181               	clrf	1
  9852  06D1  3001               	movlw	1
  9853  06D2  07F1               	addwf	i1USBDeviceInit@p,f
  9854  06D3  3000               	movlw	0
  9855  06D4  3DF2               	addwfc	i1USBDeviceInit@p+1,f
  9856  06D5  3001               	movlw	1
  9857  06D6  00F0               	movwf	??i1_USBDeviceInit
  9858  06D7  0870               	movf	??i1_USBDeviceInit,w
  9859  06D8  07F3               	addwf	i1USBDeviceInit@i_1423,f
  9860  06D9  3002               	movlw	2
  9861  06DA  0273               	subwf	i1USBDeviceInit@i_1423,w
  9862  06DB  1C03               	skipc
  9863  06DC  2ECC               	goto	i1l4956
  9864  06DD                     i1l4964:	
  9865                           
  9866                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  9867  06DD  3016               	movlw	22
  9868  06DE  003D               	movlb	29	; select bank29
  9869  06DF  0091               	movwf	17	;volatile
  9870  06E0  309F               	movlw	159
  9871  06E1  0097               	movwf	23	;volatile
  9872  06E2  307B               	movlw	123
  9873  06E3  0092               	movwf	18	;volatile
  9874                           
  9875                           ;usb_device.c: 301: ;
  9876                           ;usb_device.c: 304: ;
  9877                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  9878  06E4  01F4               	clrf	i1USBDeviceInit@i
  9879  06E5  300C               	movlw	12
  9880  06E6  0274               	subwf	i1USBDeviceInit@i,w
  9881  06E7  1803               	btfsc	3,0
  9882  06E8  2F02               	goto	i1l364
  9883  06E9                     i1l4972:	
  9884                           
  9885                           ;usb_device.c: 308: {
  9886                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  9887  06E9  0874               	movf	i1USBDeviceInit@i,w
  9888  06EA  00F0               	movwf	??i1_USBDeviceInit
  9889  06EB  3001               	movlw	1
  9890  06EC                     u492_25:	
  9891  06EC  35F0               	lslf	??i1_USBDeviceInit,f
  9892  06ED  3EFF               	addlw	-1
  9893  06EE  1D03               	skipz
  9894  06EF  2EEC               	goto	u492_25
  9895  06F0  3570               	lslf	??i1_USBDeviceInit,w
  9896  06F1  3E20               	addlw	32
  9897  06F2  0086               	movwf	6
  9898  06F3  0187               	clrf	7
  9899  06F4  3000               	movlw	0
  9900  06F5  3FC0               	movwi [0]fsr1
  9901  06F6  3000               	movlw	0
  9902  06F7  3FC1               	movwi [1]fsr1
  9903  06F8  3FC2               	movwi [2]fsr1
  9904  06F9  3FC3               	movwi [3]fsr1
  9905  06FA  3001               	movlw	1
  9906  06FB  00F0               	movwf	??i1_USBDeviceInit
  9907  06FC  0870               	movf	??i1_USBDeviceInit,w
  9908  06FD  07F4               	addwf	i1USBDeviceInit@i,f
  9909  06FE  300C               	movlw	12
  9910  06FF  0274               	subwf	i1USBDeviceInit@i,w
  9911  0700  1C03               	skipc
  9912  0701  2EE9               	goto	i1l4972
  9913  0702                     i1l364:	
  9914                           
  9915                           ;usb_device.c: 310: }
  9916                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  9917  0702  003D               	movlb	29	; select bank29
  9918  0703  170E               	bsf	14,6	;volatile
  9919                           
  9920                           ;usb_device.c: 316: UADDR = 0x00;
  9921  0704  0196               	clrf	22	;volatile
  9922                           
  9923                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  9924  0705  120E               	bcf	14,4	;volatile
  9925                           
  9926                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  9927  0706  130E               	bcf	14,6	;volatile
  9928  0707                     i1l4984:	
  9929                           ;usb_device.c: 325: do
  9930                           
  9931                           
  9932                           ;usb_device.c: 326: {
  9933                           ;usb_device.c: 327: (UIR &= 0xF7);
  9934  0707  30F7               	movlw	247
  9935  0708  00F0               	movwf	??i1_USBDeviceInit
  9936  0709  0870               	movf	??i1_USBDeviceInit,w
  9937  070A  0590               	andwf	16,f	;volatile
  9938                           
  9939                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  9940  070B  0021               	movlb	1	; select bank1
  9941  070C  01C5               	clrf	(_inPipes^(0+128)+2)	;volatile
  9942                           
  9943                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  9944  070D  0023               	movlb	3	; select bank3
  9945  070E  01B2               	clrf	(_outPipes^(0+384)+2)	;volatile
  9946                           
  9947                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  9948  070F  01B3               	clrf	(_outPipes^(0+384)+3)	;volatile
  9949  0710  01B4               	clrf	((_outPipes+1)^(0+384)+3)	;volatile
  9950                           
  9951                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  9952  0711  003D               	movlb	29	; select bank29
  9953  0712  1990               	btfsc	16,3	;volatile
  9954  0713  2F07               	goto	i1l4984
  9955                           
  9956                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  9957  0714  3001               	movlw	1
  9958  0715  00F0               	movwf	??i1_USBDeviceInit
  9959  0716  0870               	movf	??i1_USBDeviceInit,w
  9960  0717  0023               	movlb	3	; select bank3
  9961  0718  00DA               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  9962                           
  9963                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  9964  0719  3001               	movlw	1
  9965  071A  00F0               	movwf	??i1_USBDeviceInit
  9966  071B  0870               	movf	??i1_USBDeviceInit,w
  9967  071C  00D9               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  9968                           
  9969                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  9970  071D  01D8               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  9971                           
  9972                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  9973  071E  01D7               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  9974                           
  9975                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  9976  071F  01DF               	clrf	_USBBusIsSuspended^(0+384)	;volatile
  9977                           
  9978                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  9979  0720  01F4               	clrf	i1USBDeviceInit@i
  9980  0721  3003               	movlw	3
  9981  0722  0274               	subwf	i1USBDeviceInit@i,w
  9982  0723  1803               	btfsc	3,0
  9983  0724  2F49               	goto	i1l5012
  9984  0725                     i1l5006:	
  9985                           
  9986                           ;usb_device.c: 346: {
  9987                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  9988  0725  3574               	lslf	i1USBDeviceInit@i,w
  9989  0726  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  9990  0727  0086               	movwf	6
  9991  0728  3001               	movlw	1	; select bank3/4
  9992  0729  0087               	movwf	7
  9993  072A  3000               	movlw	0
  9994  072B  3FC0               	movwi [0]fsr1
  9995  072C  3FC1               	movwi [1]fsr1
  9996                           
  9997                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  9998  072D  3574               	lslf	i1USBDeviceInit@i,w
  9999  072E  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 10000  072F  0086               	movwf	6
 10001  0730  3001               	movlw	1	; select bank3/4
 10002  0731  0087               	movwf	7
 10003  0732  3000               	movlw	0
 10004  0733  3FC0               	movwi [0]fsr1
 10005  0734  3FC1               	movwi [1]fsr1
 10006                           
 10007                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 10008  0735  0874               	movf	i1USBDeviceInit@i,w
 10009  0736  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
 10010  0737  0086               	movwf	6
 10011  0738  3001               	movlw	1	; select bank3/4
 10012  0739  0087               	movwf	7
 10013  073A  0181               	clrf	1
 10014                           
 10015                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 10016  073B  0874               	movf	i1USBDeviceInit@i,w
 10017  073C  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
 10018  073D  0086               	movwf	6
 10019  073E  3001               	movlw	1	; select bank3/4
 10020  073F  0087               	movwf	7
 10021  0740  0181               	clrf	1
 10022  0741  3001               	movlw	1
 10023  0742  00F0               	movwf	??i1_USBDeviceInit
 10024  0743  0870               	movf	??i1_USBDeviceInit,w
 10025  0744  07F4               	addwf	i1USBDeviceInit@i,f
 10026  0745  3003               	movlw	3
 10027  0746  0274               	subwf	i1USBDeviceInit@i,w
 10028  0747  1C03               	skipc
 10029  0748  2F25               	goto	i1l5006
 10030  0749                     i1l5012:	
 10031                           
 10032                           ;usb_device.c: 351: }
 10033                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 10034  0749  3028               	movlw	40
 10035  074A  0023               	movlb	3	; select bank3
 10036  074B  00B7               	movwf	_pBDTEntryIn^(0+384)
 10037  074C  3000               	movlw	0
 10038  074D  00B8               	movwf	(_pBDTEntryIn+1)^(0+384)
 10039                           
 10040                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 10041  074E  3016               	movlw	22
 10042  074F  003D               	movlb	29	; select bank29
 10043  0750  0098               	movwf	24	;volatile
 10044                           
 10045                           ;usb_device.c: 358: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 10046  0751  3000               	movlw	0
 10047  0752  0020               	movlb	0	; select bank0
 10048  0753  00A3               	movwf	35	;volatile
 10049  0754  3050               	movlw	80
 10050  0755  00A2               	movwf	34	;volatile
 10051                           
 10052                           ;usb_device.c: 359: BDT[0].CNT = 8;
 10053  0756  3008               	movlw	8
 10054  0757  00A1               	movwf	33	;volatile
 10055                           
 10056                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 10057  0758  3004               	movlw	4
 10058  0759  00F0               	movwf	??i1_USBDeviceInit
 10059  075A  0870               	movf	??i1_USBDeviceInit,w
 10060  075B  00A0               	movwf	32	;volatile
 10061                           
 10062                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 10063  075C  17A0               	bsf	32,7	;volatile
 10064                           
 10065                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 10066  075D  0023               	movlb	3	; select bank3
 10067  075E  01EE               	clrf	_USBActiveConfiguration^(0+384)	;volatile
 10068                           
 10069                           ;usb_device.c: 366: USB1msTickCount = 0;
 10070  075F  3000               	movlw	0
 10071  0760  00C6               	movwf	(_USB1msTickCount+3)^(0+384)	;volatile
 10072  0761  3000               	movlw	0
 10073  0762  00C5               	movwf	(_USB1msTickCount+2)^(0+384)	;volatile
 10074  0763  3000               	movlw	0
 10075  0764  00C4               	movwf	(_USB1msTickCount+1)^(0+384)	;volatile
 10076  0765  3000               	movlw	0
 10077  0766  00C3               	movwf	_USB1msTickCount^(0+384)	;volatile
 10078                           
 10079                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 10080  0767  01D6               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
 10081                           
 10082                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 10083  0768  01E5               	clrf	_USBDeviceState^(0+384)	;volatile
 10084  0769  0008               	return
 10085  076A                     __end_ofi1_USBDeviceInit:	
 10086                           
 10087                           	psect	text45
 10088  15CC                     __ptext45:	
 10089 ;; *************** function i1_USBCtrlEPService *****************
 10090 ;; Defined at:
 10091 ;;		line 2372 in file "mcc_generated_files/usb/usb_device.c"
 10092 ;; Parameters:    Size  Location     Type
 10093 ;;		None
 10094 ;; Auto vars:     Size  Location     Type
 10095 ;;		None
 10096 ;; Return value:  Size  Location     Type
 10097 ;;                  1    wreg      void 
 10098 ;; Registers used:
 10099 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10100 ;; Tracked objects:
 10101 ;;		On entry : 0/0
 10102 ;;		On exit  : 0/0
 10103 ;;		Unchanged: 0/0
 10104 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10107 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10108 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10109 ;;Total ram usage:        3 bytes
 10110 ;; Hardware stack levels used:    1
 10111 ;; Hardware stack levels required when called:    7
 10112 ;; This function calls:
 10113 ;;		i1_USBCtrlTrfInHandler
 10114 ;;		i1_USBCtrlTrfOutHandler
 10115 ;;		i1_USBCtrlTrfSetupHandler
 10116 ;; This function is called by:
 10117 ;;		i1_USBDeviceTasks
 10118 ;; This function uses a non-reentrant model
 10119 ;;
 10120                           
 10121                           
 10122                           ;psect for function i1_USBCtrlEPService
 10123  15CC                     i1_USBCtrlEPService:	
 10124                           
 10125                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
 10126                           
 10127                           ;incstack = 0
 10128 ;; hardware stack exceeded
 10129                           ; Regs used in i1_USBCtrlEPService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10130  15CC  302D               	movlw	45
 10131  15CD  0021               	movlb	1	; select bank1
 10132  15CE  00A0               	movwf	??i1_USBCtrlEPService^(0+128)
 10133  15CF  0820               	movf	??i1_USBCtrlEPService^(0+128),w
 10134  15D0  0023               	movlb	3	; select bank3
 10135  15D1  00DC               	movwf	_USBStatusStageTimeoutCounter^(0+384)	;volatile
 10136                           
 10137                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
 10138  15D2  086D               	movf	_USTATcopy^(0+384),w	;volatile
 10139  15D3  39FD               	andlw	253
 10140  15D4  1D03               	btfss	3,2
 10141  15D5  2E1C               	goto	i1l5088
 10142                           
 10143                           ;usb_device.c: 2383: {
 10144                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 10145  15D6  366D               	lsrf	_USTATcopy^(0+384),w	;volatile
 10146  15D7  393F               	andlw	63
 10147  15D8  0021               	movlb	1	; select bank1
 10148  15D9  00A0               	movwf	??i1_USBCtrlEPService^(0+128)
 10149  15DA  3001               	movlw	1
 10150  15DB                     u502_25:	
 10151  15DB  35A0               	lslf	??i1_USBCtrlEPService^(0+128),f
 10152  15DC  3EFF               	addlw	-1
 10153  15DD  1D03               	skipz
 10154  15DE  2DDB               	goto	u502_25
 10155  15DF  3520               	lslf	??i1_USBCtrlEPService^(0+128),w
 10156  15E0  3E20               	addlw	32
 10157  15E1  00A1               	movwf	(??i1_USBCtrlEPService+1)^(0+128)
 10158  15E2  0821               	movf	(??i1_USBCtrlEPService+1)^(0+128),w
 10159  15E3  0023               	movlb	3	; select bank3
 10160  15E4  00E4               	movwf	_pBDTEntryEP0OutCurrent^(0+384)
 10161                           
 10162                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 10163  15E5  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 10164  15E6  0021               	movlb	1	; select bank1
 10165  15E7  00C8               	movwf	_pBDTEntryEP0OutNext^(0+128)
 10166  15E8  39FF               	andlw	255
 10167  15E9  1D03               	skipz
 10168  15EA  3000               	movlw	0
 10169  15EB  00C9               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
 10170                           
 10171                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 10172  15EC  3004               	movlw	4
 10173  15ED  0648               	xorwf	_pBDTEntryEP0OutNext^(0+128),w
 10174  15EE  00C8               	movwf	_pBDTEntryEP0OutNext^(0+128)
 10175  15EF  3000               	movlw	0
 10176  15F0  0649               	xorwf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10177  15F1  00C9               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
 10178                           
 10179                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 10180  15F2  0023               	movlb	3	; select bank3
 10181  15F3  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 10182  15F4  0086               	movwf	6
 10183  15F5  0187               	clrf	7
 10184  15F6  0C01               	rrf	1,w
 10185  15F7  0C89               	rrf	9,f
 10186  15F8  390F               	andlw	15
 10187  15F9  3A0D               	xorlw	13
 10188  15FA  1D03               	skipz
 10189  15FB  2E19               	goto	i1l5086
 10190                           
 10191                           ;usb_device.c: 2400: {
 10192                           ;usb_device.c: 2405: __builtin_memcpy((uint8_t*)&SetupPkt,(uint8_t*)((void *)(pBDTEntryE
      +                          P0OutCurrent->ADR)),8);
 10193  15FC  3050               	movlw	80
 10194  15FD  0086               	movwf	6
 10195  15FE  0187               	clrf	7
 10196  15FF  0023               	movlb	3	; select bank3
 10197  1600  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 10198  1601  3E02               	addlw	2
 10199  1602  0084               	movwf	4
 10200  1603  0185               	clrf	5
 10201  1604  3F00               	moviw [0]fsr0
 10202  1605  0021               	movlb	1	; select bank1
 10203  1606  00A0               	movwf	??i1_USBCtrlEPService^(0+128)
 10204  1607  3F01               	moviw [1]fsr0
 10205  1608  00A1               	movwf	(??i1_USBCtrlEPService^(0+128)+1)
 10206  1609  0820               	movf	??i1_USBCtrlEPService^(0+128),w
 10207  160A  0084               	movwf	4
 10208  160B  0821               	movf	(??i1_USBCtrlEPService+1)^(0+128),w
 10209  160C  0085               	movwf	5
 10210  160D  3008               	movlw	8
 10211  160E  00A2               	movwf	(??i1_USBCtrlEPService+2)^(0+128)
 10212  160F  0822               	movf	(??i1_USBCtrlEPService+2)^(0+128),w
 10213  1610  1903               	skipnz
 10214  1611  2E16               	goto	i1l5084
 10215  1612                     u504_2m0:	
 10216  1612  0012               	moviw fsr0++
 10217  1613  001E               	movwi fsr1++
 10218  1614  0BA2               	decfsz	(??i1_USBCtrlEPService+2)^(0+128),f
 10219  1615  2E12               	goto	u504_2m0
 10220  1616                     i1l5084:	
 10221                           
 10222                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
 10223  1616  3194  246F         	fcall	i1_USBCtrlTrfSetupHandler
 10224                           
 10225                           ;usb_device.c: 2409: }
 10226  1618  0008               	return
 10227  1619                     i1l5086:	
 10228                           
 10229                           ;usb_device.c: 2410: else
 10230                           ;usb_device.c: 2411: {
 10231                           ;usb_device.c: 2413: USBCtrlTrfOutHandler();
 10232  1619  3192  227E         	fcall	i1_USBCtrlTrfOutHandler
 10233                           
 10234                           ;usb_device.c: 2414: }
 10235                           ;usb_device.c: 2415: }
 10236  161B  0008               	return
 10237  161C                     i1l5088:	
 10238                           
 10239                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
 10240  161C  30FD               	movlw	253
 10241  161D  0023               	movlb	3	; select bank3
 10242  161E  056D               	andwf	_USTATcopy^(0+384),w	;volatile
 10243  161F  0021               	movlb	1	; select bank1
 10244  1620  00A0               	movwf	??i1_USBCtrlEPService^(0+128)
 10245  1621  3004               	movlw	4
 10246  1622  0620               	xorwf	??i1_USBCtrlEPService^(0+128),w
 10247  1623  1D03               	btfss	3,2
 10248  1624  0008               	return
 10249                           
 10250                           ;usb_device.c: 2417: {
 10251                           ;usb_device.c: 2420: USBCtrlTrfInHandler();
 10252  1625  3188  20FC         	fcall	i1_USBCtrlTrfInHandler
 10253  1627  0008               	return
 10254  1628                     __end_ofi1_USBCtrlEPService:	
 10255                           
 10256                           	psect	text46
 10257  146F                     __ptext46:	
 10258 ;; *************** function i1_USBCtrlTrfSetupHandler *****************
 10259 ;; Defined at:
 10260 ;;		line 2465 in file "mcc_generated_files/usb/usb_device.c"
 10261 ;; Parameters:    Size  Location     Type
 10262 ;;		None
 10263 ;; Auto vars:     Size  Location     Type
 10264 ;;		None
 10265 ;; Return value:  Size  Location     Type
 10266 ;;                  1    wreg      void 
 10267 ;; Registers used:
 10268 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10269 ;; Tracked objects:
 10270 ;;		On entry : 0/0
 10271 ;;		On exit  : 0/0
 10272 ;;		Unchanged: 0/0
 10273 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10276 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10277 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10278 ;;Total ram usage:        1 bytes
 10279 ;; Hardware stack levels used:    1
 10280 ;; Hardware stack levels required when called:    6
 10281 ;; This function calls:
 10282 ;;		i1_USBCheckStdRequest
 10283 ;;		i1_USBCtrlEPServiceComplete
 10284 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 10285 ;; This function is called by:
 10286 ;;		i1_USBCtrlEPService
 10287 ;; This function uses a non-reentrant model
 10288 ;;
 10289                           
 10290                           
 10291                           ;psect for function i1_USBCtrlTrfSetupHandler
 10292  146F                     i1_USBCtrlTrfSetupHandler:	
 10293                           
 10294                           ;usb_device.c: 2470: shortPacketStatus = 0;
 10295                           
 10296                           ;incstack = 0
 10297 ;; hardware stack exceeded
 10298                           ; Regs used in i1_USBCtrlTrfSetupHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10299  146F  0023               	movlb	3	; select bank3
 10300  1470  01E3               	clrf	_shortPacketStatus^(0+384)	;volatile
 10301                           
 10302                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
 10303  1471  01DB               	clrf	_USBDeferStatusStagePacket^(0+384)	;volatile
 10304                           
 10305                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
 10306  1472  01D8               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
 10307                           
 10308                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
 10309  1473  01D7               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
 10310                           
 10311                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
 10312  1474  01DD               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
 10313                           
 10314                           ;usb_device.c: 2475: controlTransferState = 0;
 10315  1475  01E2               	clrf	_controlTransferState^(0+384)	;volatile
 10316                           
 10317                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 10318  1476  307F               	movlw	127
 10319  1477  0020               	movlb	0	; select bank0
 10320  1478  00EE               	movwf	??i1_USBCtrlTrfSetupHandler
 10321  1479  0023               	movlb	3	; select bank3
 10322  147A  0837               	movf	_pBDTEntryIn^(0+384),w
 10323  147B  0086               	movwf	6
 10324  147C  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 10325  147D  0087               	movwf	7
 10326  147E  0020               	movlb	0	; select bank0
 10327  147F  086E               	movf	??i1_USBCtrlTrfSetupHandler,w
 10328  1480  0581               	andwf	1,f
 10329                           
 10330                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 10331  1481  3004               	movlw	4
 10332  1482  0023               	movlb	3	; select bank3
 10333  1483  0637               	xorwf	_pBDTEntryIn^(0+384),w
 10334  1484  00B7               	movwf	_pBDTEntryIn^(0+384)
 10335  1485  3000               	movlw	0
 10336  1486  0638               	xorwf	(_pBDTEntryIn+1)^(0+384),w
 10337  1487  00B8               	movwf	(_pBDTEntryIn+1)^(0+384)
 10338                           
 10339                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 10340  1488  307F               	movlw	127
 10341  1489  0020               	movlb	0	; select bank0
 10342  148A  00EE               	movwf	??i1_USBCtrlTrfSetupHandler
 10343  148B  0023               	movlb	3	; select bank3
 10344  148C  0837               	movf	_pBDTEntryIn^(0+384),w
 10345  148D  0086               	movwf	6
 10346  148E  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 10347  148F  0087               	movwf	7
 10348  1490  0020               	movlb	0	; select bank0
 10349  1491  086E               	movf	??i1_USBCtrlTrfSetupHandler,w
 10350  1492  0581               	andwf	1,f
 10351                           
 10352                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 10353  1493  3004               	movlw	4
 10354  1494  0023               	movlb	3	; select bank3
 10355  1495  0637               	xorwf	_pBDTEntryIn^(0+384),w
 10356  1496  00B7               	movwf	_pBDTEntryIn^(0+384)
 10357  1497  3000               	movlw	0
 10358  1498  0638               	xorwf	(_pBDTEntryIn+1)^(0+384),w
 10359  1499  00B8               	movwf	(_pBDTEntryIn+1)^(0+384)
 10360                           
 10361                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 10362  149A  307F               	movlw	127
 10363  149B  0020               	movlb	0	; select bank0
 10364  149C  00EE               	movwf	??i1_USBCtrlTrfSetupHandler
 10365  149D  0021               	movlb	1	; select bank1
 10366  149E  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10367  149F  0086               	movwf	6
 10368  14A0  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10369  14A1  0087               	movwf	7
 10370  14A2  0020               	movlb	0	; select bank0
 10371  14A3  086E               	movf	??i1_USBCtrlTrfSetupHandler,w
 10372  14A4  0581               	andwf	1,f
 10373                           
 10374                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
 10375  14A5  0021               	movlb	1	; select bank1
 10376  14A6  01C5               	clrf	(_inPipes^(0+128)+2)	;volatile
 10377                           
 10378                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
 10379  14A7  01C6               	clrf	(_inPipes^(0+128)+3)	;volatile
 10380  14A8  01C7               	clrf	((_inPipes+1)^(0+128)+3)	;volatile
 10381                           
 10382                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
 10383  14A9  0023               	movlb	3	; select bank3
 10384  14AA  01B2               	clrf	(_outPipes^(0+384)+2)	;volatile
 10385                           
 10386                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
 10387  14AB  01B3               	clrf	(_outPipes^(0+384)+3)	;volatile
 10388  14AC  01B4               	clrf	((_outPipes+1)^(0+384)+3)	;volatile
 10389                           
 10390                           ;usb_device.c: 2500: USBCheckStdRequest();
 10391  14AD  3188  2037  3194   	fcall	i1_USBCheckStdRequest
 10392                           
 10393                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 10394  14B0  3000               	movlw	0
 10395  14B1  0020               	movlb	0	; select bank0
 10396  14B2  00E1               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 10397  14B3  3003               	movlw	3
 10398  14B4  00E0               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 10399  14B5  3000               	movlw	0
 10400  14B6  00E2               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 10401  14B7  3000               	movlw	0
 10402  14B8  00E3               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 10403  14B9  3000               	movlw	0
 10404  14BA  00E4               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 10405  14BB  00E5               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 10406  14BC  3192  221E  3194   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 10407                           
 10408                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
 10409  14BF  318E  26CC         	fcall	i1_USBCtrlEPServiceComplete
 10410  14C1  0008               	return
 10411  14C2                     __end_ofi1_USBCtrlTrfSetupHandler:	
 10412                           
 10413                           	psect	text47
 10414  0ECC                     __ptext47:	
 10415 ;; *************** function i1_USBCtrlEPServiceComplete *****************
 10416 ;; Defined at:
 10417 ;;		line 1616 in file "mcc_generated_files/usb/usb_device.c"
 10418 ;; Parameters:    Size  Location     Type
 10419 ;;		None
 10420 ;; Auto vars:     Size  Location     Type
 10421 ;;		None
 10422 ;; Return value:  Size  Location     Type
 10423 ;;                  1    wreg      void 
 10424 ;; Registers used:
 10425 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10426 ;; Tracked objects:
 10427 ;;		On entry : 0/0
 10428 ;;		On exit  : 0/0
 10429 ;;		Unchanged: 0/0
 10430 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10433 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10434 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10435 ;;Total ram usage:        2 bytes
 10436 ;; Hardware stack levels used:    1
 10437 ;; Hardware stack levels required when called:    2
 10438 ;; This function calls:
 10439 ;;		i1_USBCtrlEPAllowDataStage
 10440 ;;		i1_USBCtrlEPAllowStatusStage
 10441 ;; This function is called by:
 10442 ;;		i1_USBCtrlTrfSetupHandler
 10443 ;; This function uses a non-reentrant model
 10444 ;;
 10445                           
 10446                           
 10447                           ;psect for function i1_USBCtrlEPServiceComplete
 10448  0ECC                     i1_USBCtrlEPServiceComplete:	
 10449                           
 10450                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 10451                           
 10452                           ;incstack = 0
 10453                           ; Regs used in i1_USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10454  0ECC  003D               	movlb	29	; select bank29
 10455  0ECD  120E               	bcf	14,4	;volatile
 10456                           
 10457                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 10458  0ECE  0021               	movlb	1	; select bank1
 10459  0ECF  1BC5               	btfsc	(_inPipes^(0+128)+2),7	;volatile
 10460  0ED0  2F13               	goto	i1l449
 10461                           
 10462                           ;usb_device.c: 1629: {
 10463                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 10464  0ED1  0023               	movlb	3	; select bank3
 10465  0ED2  1FB2               	btfss	(_outPipes^(0+384)+2),7	;volatile
 10466  0ED3  2EE1               	goto	i1l4338
 10467                           
 10468                           ;usb_device.c: 1631: {
 10469                           ;usb_device.c: 1632: controlTransferState = 2;
 10470  0ED4  3002               	movlw	2
 10471  0ED5  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 10472  0ED6  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 10473  0ED7  00E2               	movwf	_controlTransferState^(0+384)	;volatile
 10474                           
 10475                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 10476  0ED8  0857               	movf	_USBDeferOUTDataStagePackets^(0+384),w	;volatile
 10477  0ED9  1D03               	btfss	3,2
 10478  0EDA  2EDD               	goto	i1l4334
 10479                           
 10480                           ;usb_device.c: 1644: {
 10481                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 10482  0EDB  3195  2570         	fcall	i1_USBCtrlEPAllowDataStage
 10483  0EDD                     i1l4334:	
 10484                           
 10485                           ;usb_device.c: 1646: }
 10486                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 10487  0EDD  0023               	movlb	3	; select bank3
 10488  0EDE  01D9               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
 10489                           
 10490                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 10491  0EDF  01DA               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
 10492                           
 10493                           ;usb_device.c: 1652: }
 10494  0EE0  0008               	return
 10495  0EE1                     i1l4338:	
 10496                           
 10497                           ;usb_device.c: 1653: else
 10498                           ;usb_device.c: 1654: {
 10499                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
 10500  0EE1  0021               	movlb	1	; select bank1
 10501  0EE2  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10502  0EE3  3E01               	addlw	1
 10503  0EE4  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 10504  0EE5  3000               	movlw	0
 10505  0EE6  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10506  0EE7  00F6               	movwf	??i1_USBCtrlEPServiceComplete+1
 10507  0EE8  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 10508  0EE9  0086               	movwf	6
 10509  0EEA  0876               	movf	??i1_USBCtrlEPServiceComplete+1,w
 10510  0EEB  0087               	movwf	7
 10511  0EEC  3008               	movlw	8
 10512  0EED  0081               	movwf	1
 10513                           
 10514                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 10515  0EEE  3050               	movlw	80
 10516  0EEF  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 10517  0EF0  3000               	movlw	0
 10518  0EF1  00F6               	movwf	??i1_USBCtrlEPServiceComplete+1
 10519  0EF2  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10520  0EF3  0086               	movwf	6
 10521  0EF4  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10522  0EF5  0087               	movwf	7
 10523  0EF6  3142               	addfsr 1,2
 10524  0EF7  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 10525  0EF8  3FC0               	movwi [0]fsr1
 10526  0EF9  0876               	movf	??i1_USBCtrlEPServiceComplete+1,w
 10527  0EFA  3FC1               	movwi [1]fsr1
 10528                           
 10529                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 10530  0EFB  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10531  0EFC  0086               	movwf	6
 10532  0EFD  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10533  0EFE  0087               	movwf	7
 10534  0EFF  300C               	movlw	12
 10535  0F00  0081               	movwf	1
 10536                           
 10537                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 10538  0F01  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10539  0F02  0086               	movwf	6
 10540  0F03  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10541  0F04  0087               	movwf	7
 10542  0F05  1781               	bsf	1,7
 10543                           
 10544                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 10545  0F06  0023               	movlb	3	; select bank3
 10546  0F07  0837               	movf	_pBDTEntryIn^(0+384),w
 10547  0F08  0086               	movwf	6
 10548  0F09  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 10549  0F0A  0087               	movwf	7
 10550  0F0B  3004               	movlw	4
 10551  0F0C  0081               	movwf	1
 10552                           
 10553                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10554  0F0D  0837               	movf	_pBDTEntryIn^(0+384),w
 10555  0F0E  0086               	movwf	6
 10556  0F0F  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 10557  0F10  0087               	movwf	7
 10558  0F11  1781               	bsf	1,7
 10559                           
 10560                           ;usb_device.c: 1665: }
 10561                           ;usb_device.c: 1666: }
 10562  0F12  0008               	return
 10563  0F13                     i1l449:	
 10564                           
 10565                           ;usb_device.c: 1667: else
 10566                           ;usb_device.c: 1668: {
 10567                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 10568  0F13  0020               	movlb	0	; select bank0
 10569  0F14  1FD0               	btfss	80,7	;volatile
 10570  0F15  2F2A               	goto	i1l4364
 10571                           
 10572                           ;usb_device.c: 1670: {
 10573                           ;usb_device.c: 1671: controlTransferState = 1;
 10574  0F16  3001               	movlw	1
 10575  0F17  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 10576  0F18  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 10577  0F19  0023               	movlb	3	; select bank3
 10578  0F1A  00E2               	movwf	_controlTransferState^(0+384)	;volatile
 10579                           
 10580                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 10581  0F1B  0858               	movf	_USBDeferINDataStagePackets^(0+384),w	;volatile
 10582  0F1C  1D03               	btfss	3,2
 10583  0F1D  2F21               	goto	i1l4356
 10584                           
 10585                           ;usb_device.c: 1686: {
 10586                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 10587  0F1E  3195  2570  318E   	fcall	i1_USBCtrlEPAllowDataStage
 10588  0F21                     i1l4356:	
 10589                           
 10590                           ;usb_device.c: 1688: }
 10591                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 10592  0F21  0023               	movlb	3	; select bank3
 10593  0F22  01D9               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
 10594                           
 10595                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 10596  0F23  01DA               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
 10597                           
 10598                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 10599  0F24  085B               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
 10600  0F25  1D03               	btfss	3,2
 10601  0F26  0008               	return
 10602                           
 10603                           ;usb_device.c: 1713: {
 10604                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 10605  0F27  3189  2164         	fcall	i1_USBCtrlEPAllowStatusStage
 10606                           
 10607                           ;usb_device.c: 1715: }
 10608                           ;usb_device.c: 1716: }
 10609  0F29  0008               	return
 10610  0F2A                     i1l4364:	
 10611                           
 10612                           ;usb_device.c: 1717: else
 10613                           ;usb_device.c: 1718: {
 10614                           ;usb_device.c: 1729: controlTransferState = 2;
 10615  0F2A  3002               	movlw	2
 10616  0F2B  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 10617  0F2C  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 10618  0F2D  0023               	movlb	3	; select bank3
 10619  0F2E  00E2               	movwf	_controlTransferState^(0+384)	;volatile
 10620                           
 10621                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
 10622  0F2F  0021               	movlb	1	; select bank1
 10623  0F30  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10624  0F31  3E01               	addlw	1
 10625  0F32  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 10626  0F33  3000               	movlw	0
 10627  0F34  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10628  0F35  00F6               	movwf	??i1_USBCtrlEPServiceComplete+1
 10629  0F36  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 10630  0F37  0086               	movwf	6
 10631  0F38  0876               	movf	??i1_USBCtrlEPServiceComplete+1,w
 10632  0F39  0087               	movwf	7
 10633  0F3A  3008               	movlw	8
 10634  0F3B  0081               	movwf	1
 10635                           
 10636                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 10637  0F3C  3050               	movlw	80
 10638  0F3D  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 10639  0F3E  3000               	movlw	0
 10640  0F3F  00F6               	movwf	??i1_USBCtrlEPServiceComplete+1
 10641  0F40  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10642  0F41  0086               	movwf	6
 10643  0F42  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10644  0F43  0087               	movwf	7
 10645  0F44  3142               	addfsr 1,2
 10646  0F45  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 10647  0F46  3FC0               	movwi [0]fsr1
 10648  0F47  0876               	movf	??i1_USBCtrlEPServiceComplete+1,w
 10649  0F48  3FC1               	movwi [1]fsr1
 10650                           
 10651                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 10652  0F49  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10653  0F4A  0086               	movwf	6
 10654  0F4B  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10655  0F4C  0087               	movwf	7
 10656  0F4D  3004               	movlw	4
 10657  0F4E  0081               	movwf	1
 10658                           
 10659                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 10660  0F4F  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10661  0F50  0086               	movwf	6
 10662  0F51  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10663  0F52  0087               	movwf	7
 10664  0F53  1781               	bsf	1,7
 10665                           
 10666                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 10667  0F54  0023               	movlb	3	; select bank3
 10668  0F55  01D9               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
 10669                           
 10670                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 10671  0F56  01DA               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
 10672                           
 10673                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 10674  0F57  085B               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
 10675  0F58  1D03               	btfss	3,2
 10676  0F59  0008               	return
 10677                           
 10678                           ;usb_device.c: 1741: {
 10679                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 10680  0F5A  3189  2164         	fcall	i1_USBCtrlEPAllowStatusStage
 10681  0F5C  0008               	return
 10682  0F5D                     __end_ofi1_USBCtrlEPServiceComplete:	
 10683                           
 10684                           	psect	text48
 10685  1570                     __ptext48:	
 10686 ;; *************** function i1_USBCtrlEPAllowDataStage *****************
 10687 ;; Defined at:
 10688 ;;		line 1488 in file "mcc_generated_files/usb/usb_device.c"
 10689 ;; Parameters:    Size  Location     Type
 10690 ;;		None
 10691 ;; Auto vars:     Size  Location     Type
 10692 ;;		None
 10693 ;; Return value:  Size  Location     Type
 10694 ;;                  1    wreg      void 
 10695 ;; Registers used:
 10696 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10697 ;; Tracked objects:
 10698 ;;		On entry : 0/0
 10699 ;;		On exit  : 0/0
 10700 ;;		Unchanged: 0/0
 10701 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10704 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10705 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10706 ;;Total ram usage:        2 bytes
 10707 ;; Hardware stack levels used:    1
 10708 ;; Hardware stack levels required when called:    1
 10709 ;; This function calls:
 10710 ;;		i1_USBCtrlTrfTxService
 10711 ;; This function is called by:
 10712 ;;		i1_USBCtrlEPServiceComplete
 10713 ;; This function uses a non-reentrant model
 10714 ;;
 10715                           
 10716                           
 10717                           ;psect for function i1_USBCtrlEPAllowDataStage
 10718  1570                     i1_USBCtrlEPAllowDataStage:	
 10719                           
 10720                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 10721                           
 10722                           ;incstack = 0
 10723                           ; Regs used in i1_USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10724  1570  0023               	movlb	3	; select bank3
 10725  1571  01D8               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
 10726                           
 10727                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 10728  1572  01D7               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
 10729                           
 10730                           ;usb_device.c: 1493: if(controlTransferState == 2)
 10731  1573  3002               	movlw	2
 10732  1574  0662               	xorwf	_controlTransferState^(0+384),w	;volatile
 10733  1575  1D03               	btfss	3,2
 10734  1576  2D9D               	goto	i1l3976
 10735                           
 10736                           ;usb_device.c: 1494: {
 10737                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
 10738  1577  0021               	movlb	1	; select bank1
 10739  1578  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10740  1579  3E01               	addlw	1
 10741  157A  00F3               	movwf	??i1_USBCtrlEPAllowDataStage
 10742  157B  3000               	movlw	0
 10743  157C  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10744  157D  00F4               	movwf	??i1_USBCtrlEPAllowDataStage+1
 10745  157E  0873               	movf	??i1_USBCtrlEPAllowDataStage,w
 10746  157F  0086               	movwf	6
 10747  1580  0874               	movf	??i1_USBCtrlEPAllowDataStage+1,w
 10748  1581  0087               	movwf	7
 10749  1582  3008               	movlw	8
 10750  1583  0081               	movwf	1
 10751                           
 10752                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
 10753  1584  3058               	movlw	88
 10754  1585  00F3               	movwf	??i1_USBCtrlEPAllowDataStage
 10755  1586  3000               	movlw	0
 10756  1587  00F4               	movwf	??i1_USBCtrlEPAllowDataStage+1
 10757  1588  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10758  1589  0086               	movwf	6
 10759  158A  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10760  158B  0087               	movwf	7
 10761  158C  3142               	addfsr 1,2
 10762  158D  0873               	movf	??i1_USBCtrlEPAllowDataStage,w
 10763  158E  3FC0               	movwi [0]fsr1
 10764  158F  0874               	movf	??i1_USBCtrlEPAllowDataStage+1,w
 10765  1590  3FC1               	movwi [1]fsr1
 10766                           
 10767                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 10768  1591  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10769  1592  0086               	movwf	6
 10770  1593  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10771  1594  0087               	movwf	7
 10772  1595  3048               	movlw	72
 10773  1596  0081               	movwf	1
 10774                           
 10775                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 10776  1597  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 10777  1598  0086               	movwf	6
 10778  1599  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 10779  159A  0087               	movwf	7
 10780  159B  1781               	bsf	1,7
 10781                           
 10782                           ;usb_device.c: 1500: }
 10783  159C  0008               	return
 10784  159D                     i1l3976:	
 10785                           
 10786                           ;usb_device.c: 1501: else
 10787                           ;usb_device.c: 1502: {
 10788                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 10789  159D  0021               	movlb	1	; select bank1
 10790  159E  0847               	movf	((_inPipes+1)^(0+128)+3),w	;volatile
 10791  159F  0020               	movlb	0	; select bank0
 10792  15A0  0257               	subwf	87,w	;volatile
 10793  15A1  1D03               	skipz
 10794  15A2  2DA7               	goto	u372_25
 10795  15A3  0021               	movlb	1	; select bank1
 10796  15A4  0846               	movf	(_inPipes^(0+128)+3),w	;volatile
 10797  15A5  0020               	movlb	0	; select bank0
 10798  15A6  0256               	subwf	86,w	;volatile
 10799  15A7                     u372_25:	
 10800  15A7  1803               	skipnc
 10801  15A8  2DB0               	goto	i1l3980
 10802                           
 10803                           ;usb_device.c: 1506: {
 10804                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 10805  15A9  0857               	movf	87,w	;volatile
 10806  15AA  0021               	movlb	1	; select bank1
 10807  15AB  00C7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
 10808  15AC  0020               	movlb	0	; select bank0
 10809  15AD  0856               	movf	86,w	;volatile
 10810  15AE  0021               	movlb	1	; select bank1
 10811  15AF  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
 10812  15B0                     i1l3980:	
 10813                           
 10814                           ;usb_device.c: 1508: }
 10815                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 10816  15B0  318A  2241         	fcall	i1_USBCtrlTrfTxService
 10817                           
 10818                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
 10819  15B2  3058               	movlw	88
 10820  15B3  00F3               	movwf	??i1_USBCtrlEPAllowDataStage
 10821  15B4  3000               	movlw	0
 10822  15B5  00F4               	movwf	??i1_USBCtrlEPAllowDataStage+1
 10823  15B6  0023               	movlb	3	; select bank3
 10824  15B7  0837               	movf	_pBDTEntryIn^(0+384),w
 10825  15B8  0086               	movwf	6
 10826  15B9  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 10827  15BA  0087               	movwf	7
 10828  15BB  3142               	addfsr 1,2
 10829  15BC  0873               	movf	??i1_USBCtrlEPAllowDataStage,w
 10830  15BD  3FC0               	movwi [0]fsr1
 10831  15BE  0874               	movf	??i1_USBCtrlEPAllowDataStage+1,w
 10832  15BF  3FC1               	movwi [1]fsr1
 10833                           
 10834                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 10835  15C0  0837               	movf	_pBDTEntryIn^(0+384),w
 10836  15C1  0086               	movwf	6
 10837  15C2  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 10838  15C3  0087               	movwf	7
 10839  15C4  3048               	movlw	72
 10840  15C5  0081               	movwf	1
 10841                           
 10842                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10843  15C6  0837               	movf	_pBDTEntryIn^(0+384),w
 10844  15C7  0086               	movwf	6
 10845  15C8  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 10846  15C9  0087               	movwf	7
 10847  15CA  1781               	bsf	1,7
 10848  15CB  0008               	return
 10849  15CC                     __end_ofi1_USBCtrlEPAllowDataStage:	
 10850                           
 10851                           	psect	text49
 10852  0837                     __ptext49:	
 10853 ;; *************** function i1_USBCheckStdRequest *****************
 10854 ;; Defined at:
 10855 ;;		line 2686 in file "mcc_generated_files/usb/usb_device.c"
 10856 ;; Parameters:    Size  Location     Type
 10857 ;;		None
 10858 ;; Auto vars:     Size  Location     Type
 10859 ;;		None
 10860 ;; Return value:  Size  Location     Type
 10861 ;;                  1    wreg      void 
 10862 ;; Registers used:
 10863 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10864 ;; Tracked objects:
 10865 ;;		On entry : 0/0
 10866 ;;		On exit  : 0/0
 10867 ;;		Unchanged: 0/0
 10868 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10871 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10872 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10873 ;;Total ram usage:        1 bytes
 10874 ;; Hardware stack levels used:    1
 10875 ;; Hardware stack levels required when called:    5
 10876 ;; This function calls:
 10877 ;;		i1_USBStdFeatureReqHandler
 10878 ;;		i1_USBStdGetDscHandler
 10879 ;;		i1_USBStdGetStatusHandler
 10880 ;;		i1_USBStdSetCfgHandler
 10881 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 10882 ;; This function is called by:
 10883 ;;		i1_USBCtrlTrfSetupHandler
 10884 ;; This function uses a non-reentrant model
 10885 ;;
 10886                           
 10887                           
 10888                           ;psect for function i1_USBCheckStdRequest
 10889  0837                     i1_USBCheckStdRequest:	
 10890                           
 10891                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
 10892                           
 10893                           ;incstack = 0
 10894 ;; hardware stack exceeded
 10895                           ; Regs used in i1_USBCheckStdRequest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10896  0837  0020               	movlb	0	; select bank0
 10897  0838  0E50               	swapf	80,w	;volatile
 10898  0839  0C89               	rrf	9,f
 10899  083A  3903               	andlw	3
 10900  083B  3A00               	xorlw	0
 10901  083C  1D03               	btfss	3,2
 10902  083D  0008               	return
 10903  083E  288D               	goto	i1l4458
 10904  083F                     i1l576:	
 10905                           ;usb_device.c: 2691: {
 10906                           ;usb_device.c: 2692: case 5:
 10907                           
 10908                           ;usb_device.c: 2690: switch(SetupPkt.bRequest)
 10909                           
 10910                           
 10911                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
 10912  083F  0021               	movlb	1	; select bank1
 10913  0840  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 10914                           
 10915                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
 10916  0841  3008               	movlw	8
 10917  0842  0020               	movlb	0	; select bank0
 10918  0843  00ED               	movwf	??i1_USBCheckStdRequest
 10919  0844  086D               	movf	??i1_USBCheckStdRequest,w
 10920  0845  0023               	movlb	3	; select bank3
 10921  0846  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
 10922                           
 10923                           ;usb_device.c: 2696: break;
 10924  0847  0008               	return
 10925  0848                     i1l4428:	
 10926                           ;usb_device.c: 2697: case 6:
 10927                           
 10928                           
 10929                           ;usb_device.c: 2698: USBStdGetDscHandler();
 10930  0848  318B  23A9         	fcall	i1_USBStdGetDscHandler
 10931                           
 10932                           ;usb_device.c: 2699: break;
 10933  084A  0008               	return
 10934  084B                     i1l4430:	
 10935                           ;usb_device.c: 2700: case 9:
 10936                           
 10937                           
 10938                           ;usb_device.c: 2701: USBStdSetCfgHandler();
 10939  084B  318D  25AE         	fcall	i1_USBStdSetCfgHandler
 10940                           
 10941                           ;usb_device.c: 2702: break;
 10942  084D  0008               	return
 10943  084E                     i1l4432:	
 10944                           ;usb_device.c: 2703: case 8:
 10945                           
 10946                           
 10947                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 10948  084E  30EE               	movlw	low _USBActiveConfiguration
 10949  084F  0021               	movlb	1	; select bank1
 10950  0850  00C3               	movwf	_inPipes^(0+128)	;volatile
 10951  0851  3001               	movlw	high _USBActiveConfiguration
 10952  0852  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
 10953                           
 10954                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10955  0853  1445               	bsf	(_inPipes^(0+128)+2),0	;volatile
 10956                           
 10957                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
 10958  0854  3001               	movlw	1
 10959  0855  0020               	movlb	0	; select bank0
 10960  0856  00ED               	movwf	??i1_USBCheckStdRequest
 10961  0857  086D               	movf	??i1_USBCheckStdRequest,w
 10962  0858  0021               	movlb	1	; select bank1
 10963  0859  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
 10964                           
 10965                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
 10966  085A  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 10967                           
 10968                           ;usb_device.c: 2708: break;
 10969  085B  0008               	return
 10970  085C                     i1l4440:	
 10971                           ;usb_device.c: 2709: case 0:
 10972                           
 10973                           
 10974                           ;usb_device.c: 2710: USBStdGetStatusHandler();
 10975  085C  3194  24C2         	fcall	i1_USBStdGetStatusHandler
 10976                           
 10977                           ;usb_device.c: 2711: break;
 10978  085E  0008               	return
 10979  085F                     i1l4442:	
 10980                           ;usb_device.c: 2712: case 1:
 10981                           
 10982                           
 10983                           ;usb_device.c: 2713: case 3:
 10984                           ;usb_device.c: 2714: USBStdFeatureReqHandler();
 10985  085F  3181  218E         	fcall	i1_USBStdFeatureReqHandler
 10986                           
 10987                           ;usb_device.c: 2715: break;
 10988  0861  0008               	return
 10989  0862                     i1l4444:	
 10990                           ;usb_device.c: 2716: case 10:
 10991                           
 10992                           
 10993                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 10994  0862  0020               	movlb	0	; select bank0
 10995  0863  0854               	movf	84,w	;volatile
 10996  0864  3EEB               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
 10997  0865  0021               	movlb	1	; select bank1
 10998  0866  00C3               	movwf	_inPipes^(0+128)	;volatile
 10999  0867  3001               	movlw	1
 11000  0868  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
 11001                           
 11002                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11003  0869  1445               	bsf	(_inPipes^(0+128)+2),0	;volatile
 11004                           
 11005                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
 11006  086A  3001               	movlw	1
 11007  086B  0020               	movlb	0	; select bank0
 11008  086C  00ED               	movwf	??i1_USBCheckStdRequest
 11009  086D  086D               	movf	??i1_USBCheckStdRequest,w
 11010  086E  0021               	movlb	1	; select bank1
 11011  086F  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
 11012                           
 11013                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
 11014  0870  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 11015                           
 11016                           ;usb_device.c: 2721: break;
 11017  0871  0008               	return
 11018  0872                     i1l585:	
 11019                           ;usb_device.c: 2722: case 11:
 11020                           
 11021                           
 11022                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 11023  0872  0021               	movlb	1	; select bank1
 11024  0873  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 11025                           
 11026                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 11027  0874  0020               	movlb	0	; select bank0
 11028  0875  0852               	movf	82,w	;volatile
 11029  0876  00ED               	movwf	??i1_USBCheckStdRequest
 11030  0877  0854               	movf	84,w	;volatile
 11031  0878  3EEB               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
 11032  0879  0086               	movwf	6
 11033  087A  3001               	movlw	1	; select bank3/4
 11034  087B  0087               	movwf	7
 11035  087C  086D               	movf	??i1_USBCheckStdRequest,w
 11036  087D  0081               	movwf	1
 11037                           
 11038                           ;usb_device.c: 2725: break;
 11039  087E  0008               	return
 11040  087F                     i1l4454:	
 11041                           ;usb_device.c: 2726: case 7:
 11042                           
 11043                           
 11044                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 11045  087F  3000               	movlw	0
 11046  0880  00E1               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 11047  0881  3002               	movlw	2
 11048  0882  00E0               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 11049  0883  3000               	movlw	0
 11050  0884  00E2               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11051  0885  3000               	movlw	0
 11052  0886  00E3               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11053  0887  3000               	movlw	0
 11054  0888  00E4               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 11055  0889  00E5               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 11056  088A  3192  221E         	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 11057                           
 11058                           ;usb_device.c: 2732: }
 11059                           
 11060                           ;usb_device.c: 2731: break;
 11061                           
 11062                           ;usb_device.c: 2730: default:
 11063                           
 11064                           ;usb_device.c: 2729: case 12:
 11065                           
 11066                           ;usb_device.c: 2728: break;
 11067  088C  0008               	return
 11068  088D                     i1l4458:	
 11069  088D  0020               	movlb	0	; select bank0
 11070  088E  0851               	movf	81,w	;volatile
 11071                           
 11072                           ; Switch size 1, requested type "space"
 11073                           ; Number of cases is 11, Range of values is 0 to 12
 11074                           ; switch strategies available:
 11075                           ; Name         Instructions Cycles
 11076                           ; direct_byte           32     6 (fixed)
 11077                           ; simple_byte           34    18 (average)
 11078                           ; jumptable            260     6 (fixed)
 11079                           ;	Chosen strategy is direct_byte
 11080  088F  0084               	movwf	4
 11081  0890  300D               	movlw	13
 11082  0891  0204               	subwf	4,w
 11083  0892  1803               	skipnc
 11084  0893  0008               	return
 11085  0894  3190               	movlp	high i1S6740
 11086  0895  3504               	lslf	4,w
 11087  0896  3E1A               	addlw	low i1S6740
 11088  0897  0082               	movwf	2
 11089  0898                     i1l574:	
 11090  0898  0008               	return
 11091  0899                     __end_ofi1_USBCheckStdRequest:	
 11092                           
 11093                           	psect	swtext2
 11094  101A                     __pswtext2:	
 11095  101A                     i1S6740:	
 11096  101A  3188  285C         	ljmp	i1l4440
 11097  101C  3188  285F         	ljmp	i1l4442
 11098  101E  3188  2898         	ljmp	i1l574
 11099  1020  3188  285F         	ljmp	i1l4442
 11100  1022  3188  2898         	ljmp	i1l574
 11101  1024  3188  283F         	ljmp	i1l576
 11102  1026  3188  2848         	ljmp	i1l4428
 11103  1028  3188  287F         	ljmp	i1l4454
 11104  102A  3188  284E         	ljmp	i1l4432
 11105  102C  3188  284B         	ljmp	i1l4430
 11106  102E  3188  2862         	ljmp	i1l4444
 11107  1030  3188  2872         	ljmp	i1l585
 11108  1032  3188  2898         	ljmp	i1l574
 11109                           
 11110                           	psect	text50
 11111  0DAE                     __ptext50:	
 11112 ;; *************** function i1_USBStdSetCfgHandler *****************
 11113 ;; Defined at:
 11114 ;;		line 1968 in file "mcc_generated_files/usb/usb_device.c"
 11115 ;; Parameters:    Size  Location     Type
 11116 ;;		None
 11117 ;; Auto vars:     Size  Location     Type
 11118 ;;  USBStdSetCfg    2    7[BANK0h] PTR unsigned char 
 11119 ;;		 -> UEP1(1), 
 11120 ;;  USBStdSetCfg    1   10[BANK0h] unsigned char 
 11121 ;;  USBStdSetCfg    1    9[BANK0h] unsigned char 
 11122 ;; Return value:  Size  Location     Type
 11123 ;;                  1    wreg      void 
 11124 ;; Registers used:
 11125 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11126 ;; Tracked objects:
 11127 ;;		On entry : 0/0
 11128 ;;		On exit  : 0/0
 11129 ;;		Unchanged: 0/0
 11130 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11132 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11133 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11134 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11135 ;;Total ram usage:        5 bytes
 11136 ;; Hardware stack levels used:    1
 11137 ;; Hardware stack levels required when called:    4
 11138 ;; This function calls:
 11139 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 11140 ;;		i1_memset
 11141 ;; This function is called by:
 11142 ;;		i1_USBCheckStdRequest
 11143 ;; This function uses a non-reentrant model
 11144 ;;
 11145                           
 11146                           
 11147                           ;psect for function i1_USBStdSetCfgHandler
 11148  0DAE                     i1_USBStdSetCfgHandler:	
 11149                           
 11150                           ;usb_device.c: 1970: uint8_t i;
 11151                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 11152                           
 11153                           ;incstack = 0
 11154 ;; hardware stack exceeded
 11155                           ; Regs used in i1_USBStdSetCfgHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11156  0DAE  0021               	movlb	1	; select bank1
 11157  0DAF  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 11158                           
 11159                           ;usb_device.c: 1976: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 
      +                          0; };
 11160  0DB0  300E               	movlw	14
 11161  0DB1  0020               	movlb	0	; select bank0
 11162  0DB2  00E8               	movwf	i1USBStdSetCfgHandler@p+1
 11163  0DB3  3099               	movlw	153
 11164  0DB4  00E7               	movwf	i1USBStdSetCfgHandler@p
 11165  0DB5  01E9               	clrf	i1USBStdSetCfgHandler@i_2095
 11166  0DB6  3002               	movlw	2
 11167  0DB7  0269               	subwf	i1USBStdSetCfgHandler@i_2095,w
 11168  0DB8  1803               	btfsc	3,0
 11169  0DB9  2DCB               	goto	i1l4004
 11170  0DBA                     i1l3996:	
 11171  0DBA  0867               	movf	i1USBStdSetCfgHandler@p,w
 11172  0DBB  0086               	movwf	6
 11173  0DBC  0868               	movf	i1USBStdSetCfgHandler@p+1,w
 11174  0DBD  0087               	movwf	7
 11175  0DBE  0181               	clrf	1
 11176  0DBF  3001               	movlw	1
 11177  0DC0  07E7               	addwf	i1USBStdSetCfgHandler@p,f
 11178  0DC1  3000               	movlw	0
 11179  0DC2  3DE8               	addwfc	i1USBStdSetCfgHandler@p+1,f
 11180  0DC3  3001               	movlw	1
 11181  0DC4  00E6               	movwf	??i1_USBStdSetCfgHandler
 11182  0DC5  0866               	movf	??i1_USBStdSetCfgHandler,w
 11183  0DC6  07E9               	addwf	i1USBStdSetCfgHandler@i_2095,f
 11184  0DC7  3002               	movlw	2
 11185  0DC8  0269               	subwf	i1USBStdSetCfgHandler@i_2095,w
 11186  0DC9  1C03               	skipc
 11187  0DCA  2DBA               	goto	i1l3996
 11188  0DCB                     i1l4004:	
 11189                           
 11190                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 11191  0DCB  3020               	movlw	32
 11192  0DCC  00F0               	movwf	i1memset@p1
 11193  0DCD  3000               	movlw	0
 11194  0DCE  00F1               	movwf	i1memset@p1+1
 11195  0DCF  3000               	movlw	0
 11196  0DD0  00F2               	movwf	i1memset@c
 11197  0DD1  00F3               	movwf	i1memset@c+1
 11198  0DD2  3030               	movlw	48
 11199  0DD3  00F4               	movwf	i1memset@n
 11200  0DD4  3000               	movlw	0
 11201  0DD5  00F5               	movwf	i1memset@n+1
 11202  0DD6  3190  2061  318D   	fcall	i1_memset
 11203                           
 11204                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 11205  0DD9  003D               	movlb	29	; select bank29
 11206  0DDA  170E               	bsf	14,6	;volatile
 11207                           
 11208                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
 11209  0DDB  0020               	movlb	0	; select bank0
 11210  0DDC  01EA               	clrf	i1USBStdSetCfgHandler@i
 11211  0DDD  3003               	movlw	3
 11212  0DDE  026A               	subwf	i1USBStdSetCfgHandler@i,w
 11213  0DDF  1803               	btfsc	3,0
 11214  0DE0  2DF5               	goto	i1l4020
 11215  0DE1                     i1l4014:	
 11216                           
 11217                           ;usb_device.c: 1988: {
 11218                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 11219  0DE1  086A               	movf	i1USBStdSetCfgHandler@i,w
 11220  0DE2  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
 11221  0DE3  0086               	movwf	6
 11222  0DE4  3001               	movlw	1	; select bank3/4
 11223  0DE5  0087               	movwf	7
 11224  0DE6  0181               	clrf	1
 11225                           
 11226                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 11227  0DE7  086A               	movf	i1USBStdSetCfgHandler@i,w
 11228  0DE8  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
 11229  0DE9  0086               	movwf	6
 11230  0DEA  3001               	movlw	1	; select bank3/4
 11231  0DEB  0087               	movwf	7
 11232  0DEC  0181               	clrf	1
 11233  0DED  3001               	movlw	1
 11234  0DEE  00E6               	movwf	??i1_USBStdSetCfgHandler
 11235  0DEF  0866               	movf	??i1_USBStdSetCfgHandler,w
 11236  0DF0  07EA               	addwf	i1USBStdSetCfgHandler@i,f
 11237  0DF1  3003               	movlw	3
 11238  0DF2  026A               	subwf	i1USBStdSetCfgHandler@i,w
 11239  0DF3  1C03               	skipc
 11240  0DF4  2DE1               	goto	i1l4014
 11241  0DF5                     i1l4020:	
 11242                           
 11243                           ;usb_device.c: 1991: }
 11244                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 11245  0DF5  30EB               	movlw	low _USBAlternateInterface
 11246  0DF6  00F0               	movwf	i1memset@p1
 11247  0DF7  3001               	movlw	high _USBAlternateInterface
 11248  0DF8  00F1               	movwf	i1memset@p1+1
 11249  0DF9  3000               	movlw	0
 11250  0DFA  00F2               	movwf	i1memset@c
 11251  0DFB  00F3               	movwf	i1memset@c+1
 11252  0DFC  3002               	movlw	2
 11253  0DFD  00F4               	movwf	i1memset@n
 11254  0DFE  3000               	movlw	0
 11255  0DFF  00F5               	movwf	i1memset@n+1
 11256  0E00  3190  2061  318D   	fcall	i1_memset
 11257                           
 11258                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 11259  0E03  003D               	movlb	29	; select bank29
 11260  0E04  130E               	bcf	14,6	;volatile
 11261                           
 11262                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 11263  0E05  3028               	movlw	40
 11264  0E06  0023               	movlb	3	; select bank3
 11265  0E07  00B7               	movwf	_pBDTEntryIn^(0+384)
 11266  0E08  3000               	movlw	0
 11267  0E09  00B8               	movwf	(_pBDTEntryIn+1)^(0+384)
 11268                           
 11269                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 11270  0E0A  3020               	movlw	32
 11271  0E0B  0020               	movlb	0	; select bank0
 11272  0E0C  00E6               	movwf	??i1_USBStdSetCfgHandler
 11273  0E0D  0866               	movf	??i1_USBStdSetCfgHandler,w
 11274  0E0E  0023               	movlb	3	; select bank3
 11275  0E0F  00E4               	movwf	_pBDTEntryEP0OutCurrent^(0+384)
 11276                           
 11277                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 11278  0E10  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 11279  0E11  0021               	movlb	1	; select bank1
 11280  0E12  00C8               	movwf	_pBDTEntryEP0OutNext^(0+128)
 11281  0E13  39FF               	andlw	255
 11282  0E14  1D03               	skipz
 11283  0E15  3000               	movlw	0
 11284  0E16  00C9               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
 11285                           
 11286                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 11287  0E17  0020               	movlb	0	; select bank0
 11288  0E18  0852               	movf	82,w	;volatile
 11289  0E19  00E6               	movwf	??i1_USBStdSetCfgHandler
 11290  0E1A  0866               	movf	??i1_USBStdSetCfgHandler,w
 11291  0E1B  0023               	movlb	3	; select bank3
 11292  0E1C  00EE               	movwf	_USBActiveConfiguration^(0+384)	;volatile
 11293                           
 11294                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 11295  0E1D  086E               	movf	_USBActiveConfiguration^(0+384),w	;volatile
 11296  0E1E  1D03               	btfss	3,2
 11297  0E1F  2E27               	goto	i1l4036
 11298                           
 11299                           ;usb_device.c: 2010: {
 11300                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 11301  0E20  3010               	movlw	16
 11302  0E21  0020               	movlb	0	; select bank0
 11303  0E22  00E6               	movwf	??i1_USBStdSetCfgHandler
 11304  0E23  0866               	movf	??i1_USBStdSetCfgHandler,w
 11305  0E24  0023               	movlb	3	; select bank3
 11306  0E25  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
 11307                           
 11308                           ;usb_device.c: 2013: }
 11309  0E26  0008               	return
 11310  0E27                     i1l4036:	
 11311                           
 11312                           ;usb_device.c: 2014: else
 11313                           ;usb_device.c: 2015: {
 11314                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 11315  0E27  3000               	movlw	0
 11316  0E28  0020               	movlb	0	; select bank0
 11317  0E29  00E1               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 11318  0E2A  3001               	movlw	1
 11319  0E2B  00E0               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 11320  0E2C  30EE               	movlw	low _USBActiveConfiguration
 11321  0E2D  00E2               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11322  0E2E  3001               	movlw	high _USBActiveConfiguration
 11323  0E2F  00E3               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11324  0E30  3001               	movlw	1
 11325  0E31  00E4               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 11326  0E32  3000               	movlw	0
 11327  0E33  00E5               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 11328  0E34  3192  221E         	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 11329                           
 11330                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 11331  0E36  3020               	movlw	32
 11332  0E37  0020               	movlb	0	; select bank0
 11333  0E38  00E6               	movwf	??i1_USBStdSetCfgHandler
 11334  0E39  0866               	movf	??i1_USBStdSetCfgHandler,w
 11335  0E3A  0023               	movlb	3	; select bank3
 11336  0E3B  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
 11337  0E3C  0008               	return
 11338  0E3D                     __end_ofi1_USBStdSetCfgHandler:	
 11339                           
 11340                           	psect	text51
 11341  1061                     __ptext51:	
 11342 ;; *************** function i1_memset *****************
 11343 ;; Defined at:
 11344 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
 11345 ;; Parameters:    Size  Location     Type
 11346 ;;  p1              2    0[COMMON] PTR void 
 11347 ;;		 -> USBAlternateInterface(2), BDT(48), 
 11348 ;;  c               2    2[COMMON] int 
 11349 ;;  n               2    4[COMMON] unsigned int 
 11350 ;; Auto vars:     Size  Location     Type
 11351 ;;  memset          2    6[COMMON] PTR unsigned char 
 11352 ;;		 -> USBAlternateInterface(2), BDT(48), 
 11353 ;; Return value:  Size  Location     Type
 11354 ;;                  1    wreg      PTR void 
 11355 ;; Registers used:
 11356 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11357 ;; Tracked objects:
 11358 ;;		On entry : 0/0
 11359 ;;		On exit  : 0/0
 11360 ;;		Unchanged: 0/0
 11361 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11362 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11363 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11365 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11366 ;;Total ram usage:        8 bytes
 11367 ;; Hardware stack levels used:    1
 11368 ;; This function calls:
 11369 ;;		Nothing
 11370 ;; This function is called by:
 11371 ;;		i1_USBStdSetCfgHandler
 11372 ;; This function uses a non-reentrant model
 11373 ;;
 11374                           
 11375                           
 11376                           ;psect for function i1_memset
 11377  1061                     i1_memset:	
 11378                           
 11379                           ;incstack = 0
 11380                           ; Regs used in i1_memset: [wreg+fsr1l+fsr1h+status,2+status,0]
 11381  1061  0871               	movf	i1memset@p1+1,w
 11382  1062  00F7               	movwf	i1memset@p+1
 11383  1063  0870               	movf	i1memset@p1,w
 11384  1064  00F6               	movwf	i1memset@p
 11385  1065                     i1l3670:	
 11386  1065  3001               	movlw	1
 11387  1066  02F4               	subwf	i1memset@n,f
 11388  1067  3000               	movlw	0
 11389  1068  3BF5               	subwfb	i1memset@n+1,f
 11390  1069  0A74               	incf	i1memset@n,w
 11391  106A  1903               	btfsc	3,2
 11392  106B  0A75               	incf	i1memset@n+1,w
 11393  106C  1903               	btfsc	3,2
 11394  106D  0008               	return
 11395  106E  0876               	movf	i1memset@p,w
 11396  106F  0086               	movwf	6
 11397  1070  0877               	movf	i1memset@p+1,w
 11398  1071  0087               	movwf	7
 11399  1072  0872               	movf	i1memset@c,w
 11400  1073  0081               	movwf	1
 11401  1074  3001               	movlw	1
 11402  1075  07F6               	addwf	i1memset@p,f
 11403  1076  3000               	movlw	0
 11404  1077  3DF7               	addwfc	i1memset@p+1,f
 11405  1078  2865               	goto	i1l3670
 11406  1079                     __end_ofi1_memset:	
 11407                           ;	Return value of i1_memset is never used
 11408                           
 11409                           
 11410                           	psect	text52
 11411  14C2                     __ptext52:	
 11412 ;; *************** function i1_USBStdGetStatusHandler *****************
 11413 ;; Defined at:
 11414 ;;		line 2129 in file "mcc_generated_files/usb/usb_device.c"
 11415 ;; Parameters:    Size  Location     Type
 11416 ;;		None
 11417 ;; Auto vars:     Size  Location     Type
 11418 ;;  USBStdGetSta    2    1[COMMON] PTR struct __BDT
 11419 ;;		 -> RAM(4096), BDT(48), NULL(0), 
 11420 ;; Return value:  Size  Location     Type
 11421 ;;                  1    wreg      void 
 11422 ;; Registers used:
 11423 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 11424 ;; Tracked objects:
 11425 ;;		On entry : 0/0
 11426 ;;		On exit  : 0/0
 11427 ;;		Unchanged: 0/0
 11428 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11430 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11431 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11432 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11433 ;;Total ram usage:        3 bytes
 11434 ;; Hardware stack levels used:    1
 11435 ;; This function calls:
 11436 ;;		Nothing
 11437 ;; This function is called by:
 11438 ;;		i1_USBCheckStdRequest
 11439 ;; This function uses a non-reentrant model
 11440 ;;
 11441                           
 11442                           
 11443                           ;psect for function i1_USBStdGetStatusHandler
 11444  14C2                     i1_USBStdGetStatusHandler:	
 11445                           
 11446                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 11447                           
 11448                           ;incstack = 0
 11449                           ; Regs used in i1_USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
 11450  14C2  0020               	movlb	0	; select bank0
 11451  14C3  01D8               	clrf	88	;volatile
 11452                           
 11453                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 11454  14C4  01D9               	clrf	89	;volatile
 11455                           
 11456                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 11457  14C5  2CFE               	goto	i1l4092
 11458  14C6                     i1l514:	
 11459                           ;usb_device.c: 2135: {
 11460                           ;usb_device.c: 2136: case (0x00):
 11461                           
 11462                           
 11463                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 11464  14C6  0021               	movlb	1	; select bank1
 11465  14C7  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 11466                           
 11467                           ;usb_device.c: 2145: }
 11468                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 11469                           
 11470                           ;usb_device.c: 2143: {
 11471                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 11472                           
 11473                           ;usb_device.c: 2142: if(0 == 1)
 11474  14C8  0023               	movlb	3	; select bank3
 11475  14C9  0360               	decf	_RemoteWakeup^(0+384),w	;volatile
 11476  14CA  1D03               	btfss	3,2
 11477  14CB  2D0A               	goto	i1l517
 11478                           
 11479                           ;usb_device.c: 2148: {
 11480                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 11481  14CC  0020               	movlb	0	; select bank0
 11482  14CD  14D8               	bsf	88,1	;volatile
 11483                           
 11484                           ;usb_device.c: 2150: }
 11485                           ;usb_device.c: 2151: break;
 11486  14CE  2D0A               	goto	i1l517
 11487  14CF                     i1l518:	
 11488                           ;usb_device.c: 2152: case (0x01):
 11489                           
 11490                           
 11491                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 11492  14CF  0021               	movlb	1	; select bank1
 11493  14D0  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 11494                           
 11495                           ;usb_device.c: 2154: break;
 11496  14D1  2D0A               	goto	i1l517
 11497  14D2                     i1l519:	
 11498                           ;usb_device.c: 2155: case (0x02):
 11499                           
 11500                           
 11501                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 11502  14D2  0021               	movlb	1	; select bank1
 11503  14D3  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 11504                           
 11505                           ;usb_device.c: 2160: {
 11506                           ;usb_device.c: 2161: BDT_ENTRY *p;
 11507                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 11508  14D4  0020               	movlb	0	; select bank0
 11509  14D5  1BD4               	btfsc	84,7	;volatile
 11510  14D6  2CE2               	goto	i1l4082
 11511                           
 11512                           ;usb_device.c: 2164: {
 11513                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 11514  14D7  0854               	movf	84,w	;volatile
 11515  14D8  390F               	andlw	15
 11516  14D9  0709               	addwf	9,w
 11517  14DA  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 11518  14DB  0086               	movwf	6
 11519  14DC  3001               	movlw	1	; select bank3/4
 11520  14DD  0087               	movwf	7
 11521  14DE  3F40               	moviw [0]fsr1
 11522  14DF  00F1               	movwf	i1USBStdGetStatusHandler@p
 11523  14E0  3F41               	moviw [1]fsr1
 11524  14E1  2CEC               	goto	L13
 11525  14E2                     i1l4082:	
 11526                           ;usb_device.c: 2166: }
 11527                           
 11528                           
 11529                           ;usb_device.c: 2167: else
 11530                           ;usb_device.c: 2168: {
 11531                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 11532  14E2  0854               	movf	84,w	;volatile
 11533  14E3  390F               	andlw	15
 11534  14E4  0709               	addwf	9,w
 11535  14E5  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 11536  14E6  0086               	movwf	6
 11537  14E7  3001               	movlw	1	; select bank3/4
 11538  14E8  0087               	movwf	7
 11539  14E9  3F40               	moviw [0]fsr1
 11540  14EA  00F1               	movwf	i1USBStdGetStatusHandler@p
 11541  14EB  3F41               	moviw [1]fsr1
 11542  14EC                     L13:	
 11543  14EC  00F2               	movwf	i1USBStdGetStatusHandler@p+1
 11544                           
 11545                           ;usb_device.c: 2170: }
 11546                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 11547  14ED  0871               	movf	i1USBStdGetStatusHandler@p,w
 11548  14EE  0086               	movwf	6
 11549  14EF  0872               	movf	i1USBStdGetStatusHandler@p+1,w
 11550  14F0  0087               	movwf	7
 11551  14F1  1F81               	btfss	1,7
 11552  14F2  2D0A               	goto	i1l517
 11553  14F3  0871               	movf	i1USBStdGetStatusHandler@p,w
 11554  14F4  0086               	movwf	6
 11555  14F5  0872               	movf	i1USBStdGetStatusHandler@p+1,w
 11556  14F6  0087               	movwf	7
 11557  14F7  1D01               	btfss	1,2
 11558  14F8  2D0A               	goto	i1l517
 11559                           
 11560                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 11561  14F9  3001               	movlw	1
 11562  14FA  00F0               	movwf	??i1_USBStdGetStatusHandler
 11563  14FB  0870               	movf	??i1_USBStdGetStatusHandler,w
 11564  14FC  00D8               	movwf	88	;volatile
 11565                           
 11566                           ;usb_device.c: 2175: }
 11567                           ;usb_device.c: 2176: }
 11568                           
 11569                           ;usb_device.c: 2174: break;
 11570  14FD  2D0A               	goto	i1l517
 11571  14FE                     i1l4092:	
 11572  14FE  0850               	movf	80,w	;volatile
 11573  14FF  391F               	andlw	31
 11574                           
 11575                           ; Switch size 1, requested type "space"
 11576                           ; Number of cases is 3, Range of values is 0 to 2
 11577                           ; switch strategies available:
 11578                           ; Name         Instructions Cycles
 11579                           ; simple_byte           10     6 (average)
 11580                           ; direct_byte           12     6 (fixed)
 11581                           ; jumptable            260     6 (fixed)
 11582                           ;	Chosen strategy is simple_byte
 11583  1500  3A00               	xorlw	0	; case 0
 11584  1501  1903               	skipnz
 11585  1502  2CC6               	goto	i1l514
 11586  1503  3A01               	xorlw	1	; case 1
 11587  1504  1903               	skipnz
 11588  1505  2CCF               	goto	i1l518
 11589  1506  3A03               	xorlw	3	; case 2
 11590  1507  1903               	skipnz
 11591  1508  2CD2               	goto	i1l519
 11592  1509  2D0A               	goto	i1l517
 11593  150A                     i1l517:	
 11594                           
 11595                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 11596  150A  0021               	movlb	1	; select bank1
 11597  150B  1FC5               	btfss	(_inPipes^(0+128)+2),7	;volatile
 11598  150C  0008               	return
 11599                           
 11600                           ;usb_device.c: 2179: {
 11601                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 11602  150D  3058               	movlw	88
 11603  150E  00C3               	movwf	_inPipes^(0+128)	;volatile
 11604  150F  3000               	movlw	0
 11605  1510  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
 11606                           
 11607                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11608  1511  1445               	bsf	(_inPipes^(0+128)+2),0	;volatile
 11609                           
 11610                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 11611  1512  3002               	movlw	2
 11612  1513  00F0               	movwf	??i1_USBStdGetStatusHandler
 11613  1514  0870               	movf	??i1_USBStdGetStatusHandler,w
 11614  1515  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
 11615  1516  0008               	return
 11616  1517                     __end_ofi1_USBStdGetStatusHandler:	
 11617                           
 11618                           	psect	text53
 11619  0BA9                     __ptext53:	
 11620 ;; *************** function i1_USBStdGetDscHandler *****************
 11621 ;; Defined at:
 11622 ;;		line 2043 in file "mcc_generated_files/usb/usb_device.c"
 11623 ;; Parameters:    Size  Location     Type
 11624 ;;		None
 11625 ;; Auto vars:     Size  Location     Type
 11626 ;;		None
 11627 ;; Return value:  Size  Location     Type
 11628 ;;                  1    wreg      void 
 11629 ;; Registers used:
 11630 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 11631 ;; Tracked objects:
 11632 ;;		On entry : 0/0
 11633 ;;		On exit  : 0/0
 11634 ;;		Unchanged: 0/0
 11635 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11638 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11639 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11640 ;;Total ram usage:        3 bytes
 11641 ;; Hardware stack levels used:    1
 11642 ;; This function calls:
 11643 ;;		Nothing
 11644 ;; This function is called by:
 11645 ;;		i1_USBCheckStdRequest
 11646 ;; This function uses a non-reentrant model
 11647 ;;
 11648                           
 11649                           
 11650                           ;psect for function i1_USBStdGetDscHandler
 11651  0BA9                     i1_USBStdGetDscHandler:	
 11652                           
 11653                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 11654                           
 11655                           ;incstack = 0
 11656                           ; Regs used in i1_USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
 11657  0BA9  3080               	movlw	128
 11658  0BAA  0020               	movlb	0	; select bank0
 11659  0BAB  0650               	xorwf	80,w	;volatile
 11660  0BAC  1D03               	btfss	3,2
 11661  0BAD  0008               	return
 11662                           
 11663                           ;usb_device.c: 2046: {
 11664                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 11665  0BAE  30C0               	movlw	192
 11666  0BAF  00F0               	movwf	??i1_USBStdGetDscHandler
 11667  0BB0  0870               	movf	??i1_USBStdGetDscHandler,w
 11668  0BB1  0021               	movlb	1	; select bank1
 11669  0BB2  00C5               	movwf	(_inPipes^(0+128)+2)	;volatile
 11670                           
 11671                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 11672  0BB3  2C1B               	goto	i1l4070
 11673  0BB4                     i1l4044:	
 11674                           ;usb_device.c: 2050: {
 11675                           ;usb_device.c: 2051: case 0x01:
 11676                           
 11677                           
 11678                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 11679  0BB4  3091               	movlw	low (_device_dsc| (0+32768))
 11680  0BB5  0021               	movlb	1	; select bank1
 11681  0BB6  00C3               	movwf	_inPipes^(0+128)	;volatile
 11682  0BB7  3098               	movlw	high (_device_dsc| (0+32768))
 11683  0BB8  00C4               	movwf	(_inPipes^(0+128)+1)	;volatile
 11684                           
 11685                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 11686  0BB9  3000               	movlw	0
 11687  0BBA  00C7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
 11688  0BBB  3012               	movlw	18
 11689  0BBC  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
 11690                           
 11691                           ;usb_device.c: 2058: break;
 11692  0BBD  0008               	return
 11693  0BBE                     i1l4048:	
 11694                           ;usb_device.c: 2059: case 0x02:
 11695                           
 11696                           
 11697                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 11698  0BBE  0020               	movlb	0	; select bank0
 11699  0BBF  0852               	movf	82,w	;volatile
 11700  0BC0  1D03               	btfss	3,2
 11701  0BC1  2BF1               	goto	i1l4056
 11702                           
 11703                           ;usb_device.c: 2064: {
 11704                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 11705  0BC2  0852               	movf	82,w	;volatile
 11706  0BC3  00F0               	movwf	??i1_USBStdGetDscHandler
 11707  0BC4  01F1               	clrf	??i1_USBStdGetDscHandler+1
 11708  0BC5  35F0               	lslf	??i1_USBStdGetDscHandler,f
 11709  0BC6  0DF1               	rlf	??i1_USBStdGetDscHandler+1,f
 11710  0BC7  30B0               	movlw	low (_USB_CD_Ptr| (0+32768))
 11711  0BC8  0770               	addwf	??i1_USBStdGetDscHandler,w
 11712  0BC9  0084               	movwf	4
 11713  0BCA  3098               	movlw	high (_USB_CD_Ptr| (0+32768))
 11714  0BCB  3D71               	addwfc	??i1_USBStdGetDscHandler+1,w
 11715  0BCC  0085               	movwf	5
 11716  0BCD  3F00               	moviw [0]fsr0
 11717  0BCE  0021               	movlb	1	; select bank1
 11718  0BCF  00C3               	movwf	_inPipes^(0+128)	;volatile
 11719  0BD0  3F01               	moviw [1]fsr0
 11720  0BD1  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
 11721                           
 11722                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 11723  0BD2  0844               	movf	(_inPipes+1)^(0+128),w	;volatile
 11724  0BD3  00F1               	movwf	??i1_USBStdGetDscHandler+1
 11725  0BD4  0843               	movf	_inPipes^(0+128),w	;volatile
 11726  0BD5  00F0               	movwf	??i1_USBStdGetDscHandler
 11727  0BD6  3002               	movlw	2
 11728  0BD7  0770               	addwf	??i1_USBStdGetDscHandler,w
 11729  0BD8  0084               	movwf	4
 11730  0BD9  0871               	movf	??i1_USBStdGetDscHandler+1,w
 11731  0BDA  1803               	skipnc
 11732  0BDB  0A71               	incf	??i1_USBStdGetDscHandler+1,w
 11733  0BDC  0085               	movwf	5
 11734  0BDD  0800               	movf	0,w	;code access
 11735  0BDE  00F2               	movwf	??i1_USBStdGetDscHandler+2
 11736  0BDF  0872               	movf	??i1_USBStdGetDscHandler+2,w
 11737  0BE0  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
 11738                           
 11739                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 11740  0BE1  0844               	movf	(_inPipes+1)^(0+128),w	;volatile
 11741  0BE2  00F1               	movwf	??i1_USBStdGetDscHandler+1
 11742  0BE3  0843               	movf	_inPipes^(0+128),w	;volatile
 11743  0BE4  00F0               	movwf	??i1_USBStdGetDscHandler
 11744  0BE5  3003               	movlw	3
 11745  0BE6  0770               	addwf	??i1_USBStdGetDscHandler,w
 11746  0BE7  0084               	movwf	4
 11747  0BE8  0871               	movf	??i1_USBStdGetDscHandler+1,w
 11748  0BE9  1803               	skipnc
 11749  0BEA  0A71               	incf	??i1_USBStdGetDscHandler+1,w
 11750  0BEB  0085               	movwf	5
 11751  0BEC  0800               	movf	0,w	;code access
 11752  0BED  00F2               	movwf	??i1_USBStdGetDscHandler+2
 11753  0BEE  0872               	movf	??i1_USBStdGetDscHandler+2,w
 11754  0BEF  00C7               	movwf	(_inPipes^(0+128)+4)	;volatile
 11755                           
 11756                           ;usb_device.c: 2076: }
 11757  0BF0  0008               	return
 11758  0BF1                     i1l4056:	
 11759                           
 11760                           ;usb_device.c: 2077: else
 11761                           ;usb_device.c: 2078: {
 11762                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 11763  0BF1  0021               	movlb	1	; select bank1
 11764  0BF2  01C5               	clrf	(_inPipes^(0+128)+2)	;volatile
 11765                           
 11766                           ;usb_device.c: 2080: }
 11767                           ;usb_device.c: 2081: break;
 11768  0BF3  0008               	return
 11769  0BF4                     i1l4058:	
 11770                           ;usb_device.c: 2082: case 0x03:
 11771                           
 11772                           
 11773                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 11774  0BF4  3003               	movlw	3
 11775  0BF5  0020               	movlb	0	; select bank0
 11776  0BF6  0252               	subwf	82,w	;volatile
 11777  0BF7  1803               	skipnc
 11778  0BF8  2C15               	goto	i1l4064
 11779                           
 11780                           ;usb_device.c: 2087: {
 11781                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 11782  0BF9  0852               	movf	82,w	;volatile
 11783  0BFA  00F0               	movwf	??i1_USBStdGetDscHandler
 11784  0BFB  01F1               	clrf	??i1_USBStdGetDscHandler+1
 11785  0BFC  35F0               	lslf	??i1_USBStdGetDscHandler,f
 11786  0BFD  0DF1               	rlf	??i1_USBStdGetDscHandler+1,f
 11787  0BFE  30AA               	movlw	low (_USB_SD_Ptr| (0+32768))
 11788  0BFF  0770               	addwf	??i1_USBStdGetDscHandler,w
 11789  0C00  0084               	movwf	4
 11790  0C01  3098               	movlw	high (_USB_SD_Ptr| (0+32768))
 11791  0C02  3D71               	addwfc	??i1_USBStdGetDscHandler+1,w
 11792  0C03  0085               	movwf	5
 11793  0C04  3F00               	moviw [0]fsr0
 11794  0C05  0021               	movlb	1	; select bank1
 11795  0C06  00C3               	movwf	_inPipes^(0+128)	;volatile
 11796  0C07  3F01               	moviw [1]fsr0
 11797  0C08  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
 11798                           
 11799                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 11800  0C09  0843               	movf	_inPipes^(0+128),w	;volatile
 11801  0C0A  0084               	movwf	4
 11802  0C0B  0844               	movf	(_inPipes+1)^(0+128),w	;volatile
 11803  0C0C  0085               	movwf	5
 11804  0C0D  0800               	movf	0,w	;code access
 11805  0C0E  00F0               	movwf	??i1_USBStdGetDscHandler
 11806  0C0F  01F1               	clrf	??i1_USBStdGetDscHandler+1
 11807  0C10  0870               	movf	??i1_USBStdGetDscHandler,w
 11808  0C11  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
 11809  0C12  0871               	movf	??i1_USBStdGetDscHandler+1,w
 11810  0C13  00C7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
 11811                           
 11812                           ;usb_device.c: 2092: }
 11813  0C14  0008               	return
 11814  0C15                     i1l4064:	
 11815                           
 11816                           ;usb_device.c: 2102: else
 11817                           ;usb_device.c: 2103: {
 11818                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 11819  0C15  0021               	movlb	1	; select bank1
 11820  0C16  01C5               	clrf	(_inPipes^(0+128)+2)	;volatile
 11821                           
 11822                           ;usb_device.c: 2105: }
 11823                           ;usb_device.c: 2106: break;
 11824  0C17  0008               	return
 11825  0C18                     i1l4066:	
 11826                           ;usb_device.c: 2107: default:
 11827                           
 11828                           
 11829                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 11830  0C18  0021               	movlb	1	; select bank1
 11831  0C19  01C5               	clrf	(_inPipes^(0+128)+2)	;volatile
 11832                           
 11833                           ;usb_device.c: 2110: }
 11834                           
 11835                           ;usb_device.c: 2109: break;
 11836  0C1A  0008               	return
 11837  0C1B                     i1l4070:	
 11838  0C1B  0020               	movlb	0	; select bank0
 11839  0C1C  0853               	movf	83,w	;volatile
 11840                           
 11841                           ; Switch size 1, requested type "space"
 11842                           ; Number of cases is 3, Range of values is 1 to 3
 11843                           ; switch strategies available:
 11844                           ; Name         Instructions Cycles
 11845                           ; simple_byte           10     6 (average)
 11846                           ; direct_byte           15     9 (fixed)
 11847                           ; jumptable            263     9 (fixed)
 11848                           ;	Chosen strategy is simple_byte
 11849  0C1D  3A01               	xorlw	1	; case 1
 11850  0C1E  1903               	skipnz
 11851  0C1F  2BB4               	goto	i1l4044
 11852  0C20  3A03               	xorlw	3	; case 2
 11853  0C21  1903               	skipnz
 11854  0C22  2BBE               	goto	i1l4048
 11855  0C23  3A01               	xorlw	1	; case 3
 11856  0C24  1903               	skipnz
 11857  0C25  2BF4               	goto	i1l4058
 11858  0C26  2C18               	goto	i1l4066
 11859  0C27  0008               	return
 11860  0C28                     __end_ofi1_USBStdGetDscHandler:	
 11861                           
 11862                           	psect	text54
 11863  018E                     __ptext54:	
 11864 ;; *************** function i1_USBStdFeatureReqHandler *****************
 11865 ;; Defined at:
 11866 ;;		line 2754 in file "mcc_generated_files/usb/usb_device.c"
 11867 ;; Parameters:    Size  Location     Type
 11868 ;;		None
 11869 ;; Auto vars:     Size  Location     Type
 11870 ;;  USBStdFeatur    2   11[BANK0h] PTR struct __BDT
 11871 ;;		 -> RAM(4096), BDT(48), NULL(0), 
 11872 ;;  USBStdFeatur    2    8[BANK0h] PTR unsigned char 
 11873 ;;		 -> UEP0(1), 
 11874 ;;  USBStdFeatur    1   10[BANK0h] struct .
 11875 ;; Return value:  Size  Location     Type
 11876 ;;                  1    wreg      void 
 11877 ;; Registers used:
 11878 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11879 ;; Tracked objects:
 11880 ;;		On entry : 0/0
 11881 ;;		On exit  : 0/0
 11882 ;;		Unchanged: 0/0
 11883 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11885 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11886 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11887 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11888 ;;Total ram usage:        7 bytes
 11889 ;; Hardware stack levels used:    1
 11890 ;; Hardware stack levels required when called:    4
 11891 ;; This function calls:
 11892 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 11893 ;; This function is called by:
 11894 ;;		i1_USBCheckStdRequest
 11895 ;; This function uses a non-reentrant model
 11896 ;;
 11897                           
 11898                           
 11899                           ;psect for function i1_USBStdFeatureReqHandler
 11900  018E                     i1_USBStdFeatureReqHandler:	
 11901                           
 11902                           ;usb_device.c: 2756: BDT_ENTRY *p;
 11903                           ;usb_device.c: 2757: EP_STATUS current_ep_data;
 11904                           ;usb_device.c: 2761: unsigned char* pUEP;
 11905                           ;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&
 11906                           ;usb_device.c: 2800: (SetupPkt.Recipient == (0x00)))
 11907                           
 11908                           ;incstack = 0
 11909 ;; hardware stack exceeded
 11910                           ; Regs used in i1_USBStdFeatureReqHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11911  018E  0020               	movlb	0	; select bank0
 11912  018F  0352               	decf	82,w	;volatile
 11913  0190  1D03               	btfss	3,2
 11914  0191  29A6               	goto	i1l4112
 11915  0192  0850               	movf	80,w	;volatile
 11916  0193  391F               	andlw	31
 11917  0194  3A00               	xorlw	0
 11918  0195  1D03               	skipz
 11919  0196  29A6               	goto	i1l4112
 11920                           
 11921                           ;usb_device.c: 2801: {
 11922                           ;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
 11923  0197  0021               	movlb	1	; select bank1
 11924  0198  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 11925                           
 11926                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
 11927  0199  3003               	movlw	3
 11928  019A  0020               	movlb	0	; select bank0
 11929  019B  0651               	xorwf	81,w	;volatile
 11930  019C  1D03               	btfss	3,2
 11931  019D  29A4               	goto	i1l4110
 11932                           
 11933                           ;usb_device.c: 2804: RemoteWakeup = 1;
 11934  019E  3001               	movlw	1
 11935  019F  00E6               	movwf	??i1_USBStdFeatureReqHandler
 11936  01A0  0866               	movf	??i1_USBStdFeatureReqHandler,w
 11937  01A1  0023               	movlb	3	; select bank3
 11938  01A2  00E0               	movwf	_RemoteWakeup^(0+384)	;volatile
 11939  01A3  29A6               	goto	i1l4112
 11940  01A4                     i1l4110:	
 11941                           
 11942                           ;usb_device.c: 2805: else
 11943                           ;usb_device.c: 2806: RemoteWakeup = 0;
 11944  01A4  0023               	movlb	3	; select bank3
 11945  01A5  01E0               	clrf	_RemoteWakeup^(0+384)	;volatile
 11946  01A6                     i1l4112:	
 11947                           
 11948                           ;usb_device.c: 2807: }
 11949                           ;usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&
 11950                           ;usb_device.c: 2811: (SetupPkt.Recipient == (0x02))&&
 11951                           ;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 11952                           ;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
 11953  01A6  0020               	movlb	0	; select bank0
 11954  01A7  0852               	movf	82,w	;volatile
 11955  01A8  1D03               	btfss	3,2
 11956  01A9  0008               	return
 11957  01AA  0850               	movf	80,w	;volatile
 11958  01AB  391F               	andlw	31
 11959  01AC  3A02               	xorlw	2
 11960  01AD  1D03               	skipz
 11961  01AE  0008               	return
 11962  01AF  0854               	movf	84,w	;volatile
 11963  01B0  390F               	andlw	15
 11964  01B1  3A00               	xorlw	0
 11965  01B2  1903               	skipnz
 11966  01B3  0008               	return
 11967  01B4  0854               	movf	84,w	;volatile
 11968  01B5  390F               	andlw	15
 11969  01B6  00E6               	movwf	??i1_USBStdFeatureReqHandler
 11970  01B7  3003               	movlw	3
 11971  01B8  0266               	subwf	??i1_USBStdFeatureReqHandler,w
 11972  01B9  1803               	skipnc
 11973  01BA  0008               	return
 11974  01BB  3020               	movlw	32
 11975  01BC  0023               	movlb	3	; select bank3
 11976  01BD  0665               	xorwf	_USBDeviceState^(0+384),w	;volatile
 11977  01BE  1D03               	btfss	3,2
 11978  01BF  0008               	return
 11979                           
 11980                           ;usb_device.c: 2814: {
 11981                           ;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
 11982  01C0  0021               	movlb	1	; select bank1
 11983  01C1  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 11984                           
 11985                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
 11986  01C2  0020               	movlb	0	; select bank0
 11987  01C3  1BD4               	btfsc	84,7	;volatile
 11988  01C4  29D4               	goto	i1l4126
 11989                           
 11990                           ;usb_device.c: 2821: {
 11991                           ;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 11992  01C5  0854               	movf	84,w	;volatile
 11993  01C6  390F               	andlw	15
 11994  01C7  0709               	addwf	9,w
 11995  01C8  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 11996  01C9  0086               	movwf	6
 11997  01CA  3001               	movlw	1	; select bank3/4
 11998  01CB  0087               	movwf	7
 11999  01CC  3F40               	moviw [0]fsr1
 12000  01CD  00EB               	movwf	i1USBStdFeatureReqHandler@p
 12001  01CE  3F41               	moviw [1]fsr1
 12002  01CF  00EC               	movwf	i1USBStdFeatureReqHandler@p+1
 12003                           
 12004                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 12005  01D0  0854               	movf	84,w	;volatile
 12006  01D1  390F               	andlw	15
 12007  01D2  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
 12008  01D3  29E2               	goto	L14
 12009  01D4                     i1l4126:	
 12010                           ;usb_device.c: 2824: }
 12011                           
 12012                           
 12013                           ;usb_device.c: 2825: else
 12014                           ;usb_device.c: 2826: {
 12015                           ;usb_device.c: 2827: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 12016  01D4  0854               	movf	84,w	;volatile
 12017  01D5  390F               	andlw	15
 12018  01D6  0709               	addwf	9,w
 12019  01D7  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 12020  01D8  0086               	movwf	6
 12021  01D9  3001               	movlw	1	; select bank3/4
 12022  01DA  0087               	movwf	7
 12023  01DB  3F40               	moviw [0]fsr1
 12024  01DC  00EB               	movwf	i1USBStdFeatureReqHandler@p
 12025  01DD  3F41               	moviw [1]fsr1
 12026  01DE  00EC               	movwf	i1USBStdFeatureReqHandler@p+1
 12027                           
 12028                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 12029  01DF  0854               	movf	84,w	;volatile
 12030  01E0  390F               	andlw	15
 12031  01E1  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
 12032  01E2                     L14:	
 12033  01E2  0086               	movwf	6
 12034  01E3  3001               	movlw	1	; select bank3/4
 12035  01E4  0087               	movwf	7
 12036  01E5  0801               	movf	1,w
 12037  01E6  00E6               	movwf	??i1_USBStdFeatureReqHandler
 12038  01E7  0866               	movf	??i1_USBStdFeatureReqHandler,w
 12039  01E8  00EA               	movwf	i1USBStdFeatureReqHandler@current_ep_data
 12040                           
 12041                           ;usb_device.c: 2829: }
 12042                           ;usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
 12043  01E9  186A               	btfsc	i1USBStdFeatureReqHandler@current_ep_data,0
 12044  01EA  29F5               	goto	i1l4132
 12045                           
 12046                           ;usb_device.c: 2836: {
 12047                           ;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 12048  01EB  30FB               	movlw	251
 12049  01EC  00E6               	movwf	??i1_USBStdFeatureReqHandler
 12050  01ED  30FF               	movlw	255
 12051  01EE  00E7               	movwf	??i1_USBStdFeatureReqHandler+1
 12052  01EF  086B               	movf	i1USBStdFeatureReqHandler@p,w
 12053  01F0  0566               	andwf	??i1_USBStdFeatureReqHandler,w
 12054  01F1  00EB               	movwf	i1USBStdFeatureReqHandler@p
 12055  01F2  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 12056  01F3  0567               	andwf	??i1_USBStdFeatureReqHandler+1,w
 12057  01F4  29FA               	goto	L15
 12058  01F5                     i1l4132:	
 12059                           ;usb_device.c: 2838: }
 12060                           
 12061                           
 12062                           ;usb_device.c: 2839: else
 12063                           ;usb_device.c: 2840: {
 12064                           ;usb_device.c: 2841: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
 12065  01F5  3004               	movlw	4
 12066  01F6  046B               	iorwf	i1USBStdFeatureReqHandler@p,w
 12067  01F7  00EB               	movwf	i1USBStdFeatureReqHandler@p
 12068  01F8  3000               	movlw	0
 12069  01F9  046C               	iorwf	i1USBStdFeatureReqHandler@p+1,w
 12070  01FA                     L15:	
 12071  01FA  00EC               	movwf	i1USBStdFeatureReqHandler@p+1
 12072                           
 12073                           ;usb_device.c: 2842: }
 12074                           ;usb_device.c: 2847: if(SetupPkt.EPDir == 0)
 12075  01FB  1BD4               	btfsc	84,7	;volatile
 12076  01FC  2A09               	goto	i1l4138
 12077                           
 12078                           ;usb_device.c: 2848: {
 12079                           ;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 12080  01FD  0854               	movf	84,w	;volatile
 12081  01FE  390F               	andlw	15
 12082  01FF  0709               	addwf	9,w
 12083  0200  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 12084  0201  0086               	movwf	6
 12085  0202  3001               	movlw	1	; select bank3/4
 12086  0203  0087               	movwf	7
 12087  0204  086B               	movf	i1USBStdFeatureReqHandler@p,w
 12088  0205  3FC0               	movwi [0]fsr1
 12089  0206  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 12090  0207  3FC1               	movwi [1]fsr1
 12091                           
 12092                           ;usb_device.c: 2850: }
 12093  0208  2A14               	goto	i1l4140
 12094  0209                     i1l4138:	
 12095                           
 12096                           ;usb_device.c: 2851: else
 12097                           ;usb_device.c: 2852: {
 12098                           ;usb_device.c: 2853: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 12099  0209  0854               	movf	84,w	;volatile
 12100  020A  390F               	andlw	15
 12101  020B  0709               	addwf	9,w
 12102  020C  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 12103  020D  0086               	movwf	6
 12104  020E  3001               	movlw	1	; select bank3/4
 12105  020F  0087               	movwf	7
 12106  0210  086B               	movf	i1USBStdFeatureReqHandler@p,w
 12107  0211  3FC0               	movwi [0]fsr1
 12108  0212  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 12109  0213  3FC1               	movwi [1]fsr1
 12110  0214                     i1l4140:	
 12111                           
 12112                           ;usb_device.c: 2854: }
 12113                           ;usb_device.c: 2857: if(SetupPkt.bRequest == 3)
 12114  0214  3003               	movlw	3
 12115  0215  0651               	xorwf	81,w	;volatile
 12116  0216  1D03               	btfss	3,2
 12117  0217  2A36               	goto	i1l4154
 12118                           
 12119                           ;usb_device.c: 2858: {
 12120                           ;usb_device.c: 2859: if(p->STAT.UOWN == 1)
 12121  0218  086B               	movf	i1USBStdFeatureReqHandler@p,w
 12122  0219  0086               	movwf	6
 12123  021A  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 12124  021B  0087               	movwf	7
 12125  021C  1F81               	btfss	1,7
 12126  021D  2A2B               	goto	i1l4150
 12127                           
 12128                           ;usb_device.c: 2860: {
 12129                           ;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
 12130  021E  1BD4               	btfsc	84,7	;volatile
 12131  021F  2A24               	goto	i1l4148
 12132                           
 12133                           ;usb_device.c: 2864: {
 12134                           ;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 12135  0220  0854               	movf	84,w	;volatile
 12136  0221  390F               	andlw	15
 12137  0222  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
 12138  0223  2A27               	goto	L16
 12139  0224                     i1l4148:	
 12140                           ;usb_device.c: 2866: }
 12141                           
 12142                           
 12143                           ;usb_device.c: 2867: else
 12144                           ;usb_device.c: 2868: {
 12145                           ;usb_device.c: 2869: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 12146  0224  0854               	movf	84,w	;volatile
 12147  0225  390F               	andlw	15
 12148  0226  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
 12149  0227                     L16:	
 12150  0227  0086               	movwf	6
 12151  0228  3001               	movlw	1	; select bank3/4
 12152  0229  0087               	movwf	7
 12153  022A  1481               	bsf	1,1
 12154  022B                     i1l4150:	
 12155                           
 12156                           ;usb_device.c: 2870: }
 12157                           ;usb_device.c: 2871: }
 12158                           ;usb_device.c: 2874: p->STAT.Val |= 0x04;
 12159  022B  086B               	movf	i1USBStdFeatureReqHandler@p,w
 12160  022C  0086               	movwf	6
 12161  022D  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 12162  022E  0087               	movwf	7
 12163  022F  1501               	bsf	1,2
 12164                           
 12165                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
 12166  0230  086B               	movf	i1USBStdFeatureReqHandler@p,w
 12167  0231  0086               	movwf	6
 12168  0232  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 12169  0233  0087               	movwf	7
 12170  0234  1781               	bsf	1,7
 12171                           
 12172                           ;usb_device.c: 2876: }
 12173  0235  0008               	return
 12174  0236                     i1l4154:	
 12175                           
 12176                           ;usb_device.c: 2877: else
 12177                           ;usb_device.c: 2878: {
 12178                           ;usb_device.c: 2882: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 12179  0236  3004               	movlw	4
 12180  0237  066B               	xorwf	i1USBStdFeatureReqHandler@p,w
 12181  0238  00EB               	movwf	i1USBStdFeatureReqHandler@p
 12182  0239  3000               	movlw	0
 12183  023A  066C               	xorwf	i1USBStdFeatureReqHandler@p+1,w
 12184  023B  00EC               	movwf	i1USBStdFeatureReqHandler@p+1
 12185                           
 12186                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
 12187  023C  086B               	movf	i1USBStdFeatureReqHandler@p,w
 12188  023D  0086               	movwf	6
 12189  023E  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 12190  023F  0087               	movwf	7
 12191  0240  1F81               	btfss	1,7
 12192  0241  2A5F               	goto	i1l4164
 12193                           
 12194                           ;usb_device.c: 2885: {
 12195                           ;usb_device.c: 2888: p->STAT.Val &= (~0x80);
 12196  0242  307F               	movlw	127
 12197  0243  00E6               	movwf	??i1_USBStdFeatureReqHandler
 12198  0244  086B               	movf	i1USBStdFeatureReqHandler@p,w
 12199  0245  0086               	movwf	6
 12200  0246  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 12201  0247  0087               	movwf	7
 12202  0248  0866               	movf	??i1_USBStdFeatureReqHandler,w
 12203  0249  0581               	andwf	1,f
 12204                           
 12205                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
 12206  024A  086B               	movf	i1USBStdFeatureReqHandler@p,w
 12207  024B  0086               	movwf	6
 12208  024C  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 12209  024D  0087               	movwf	7
 12210  024E  1701               	bsf	1,6
 12211                           
 12212                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 12213  024F  3000               	movlw	0
 12214  0250  00E1               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 12215  0251  3005               	movlw	5
 12216  0252  00E0               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 12217  0253  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 12218  0254  00E3               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 12219  0255  086B               	movf	i1USBStdFeatureReqHandler@p,w
 12220  0256  00E2               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 12221  0257  3002               	movlw	2
 12222  0258  00E4               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 12223  0259  3000               	movlw	0
 12224  025A  00E5               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 12225  025B  3192  221E  3181   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 12226                           
 12227                           ;usb_device.c: 2891: }
 12228  025E  2A65               	goto	i1l4166
 12229  025F                     i1l4164:	
 12230                           
 12231                           ;usb_device.c: 2892: else
 12232                           ;usb_device.c: 2893: {
 12233                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
 12234  025F  0020               	movlb	0	; select bank0
 12235  0260  086B               	movf	i1USBStdFeatureReqHandler@p,w
 12236  0261  0086               	movwf	6
 12237  0262  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 12238  0263  0087               	movwf	7
 12239  0264  1701               	bsf	1,6
 12240  0265                     i1l4166:	
 12241                           
 12242                           ;usb_device.c: 2896: }
 12243                           ;usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 12244  0265  3004               	movlw	4
 12245  0266  0020               	movlb	0	; select bank0
 12246  0267  066B               	xorwf	i1USBStdFeatureReqHandler@p,w
 12247  0268  00EB               	movwf	i1USBStdFeatureReqHandler@p
 12248  0269  3000               	movlw	0
 12249  026A  066C               	xorwf	i1USBStdFeatureReqHandler@p+1,w
 12250  026B  00EC               	movwf	i1USBStdFeatureReqHandler@p+1
 12251                           
 12252                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 12253  026C  18EA               	btfsc	i1USBStdFeatureReqHandler@current_ep_data,1
 12254  026D  2A74               	goto	i1l610
 12255  026E  086B               	movf	i1USBStdFeatureReqHandler@p,w
 12256  026F  0086               	movwf	6
 12257  0270  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 12258  0271  0087               	movwf	7
 12259  0272  1F81               	btfss	1,7
 12260  0273  2A99               	goto	i1l4178
 12261  0274                     i1l610:	
 12262                           
 12263                           ;usb_device.c: 2907: {
 12264                           ;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
 12265  0274  1BD4               	btfsc	84,7	;volatile
 12266  0275  2A7A               	goto	i1l4174
 12267                           
 12268                           ;usb_device.c: 2909: {
 12269                           ;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 12270  0276  0854               	movf	84,w	;volatile
 12271  0277  390F               	andlw	15
 12272  0278  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
 12273  0279  2A7D               	goto	L17
 12274  027A                     i1l4174:	
 12275                           ;usb_device.c: 2911: }
 12276                           
 12277                           
 12278                           ;usb_device.c: 2912: else
 12279                           ;usb_device.c: 2913: {
 12280                           ;usb_device.c: 2914: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 12281  027A  0854               	movf	84,w	;volatile
 12282  027B  390F               	andlw	15
 12283  027C  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
 12284  027D                     L17:	
 12285  027D  0086               	movwf	6
 12286  027E  3001               	movlw	1	; select bank3/4
 12287  027F  0087               	movwf	7
 12288  0280  1081               	bcf	1,1
 12289                           
 12290                           ;usb_device.c: 2915: }
 12291                           ;usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 12292  0281  303B               	movlw	59
 12293  0282  00E6               	movwf	??i1_USBStdFeatureReqHandler
 12294  0283  086B               	movf	i1USBStdFeatureReqHandler@p,w
 12295  0284  0086               	movwf	6
 12296  0285  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 12297  0286  0087               	movwf	7
 12298  0287  0866               	movf	??i1_USBStdFeatureReqHandler,w
 12299  0288  0581               	andwf	1,f
 12300                           
 12301                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 12302  0289  3000               	movlw	0
 12303  028A  00E1               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 12304  028B  3005               	movlw	5
 12305  028C  00E0               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 12306  028D  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 12307  028E  00E3               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 12308  028F  086B               	movf	i1USBStdFeatureReqHandler@p,w
 12309  0290  00E2               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 12310  0291  3002               	movlw	2
 12311  0292  00E4               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 12312  0293  3000               	movlw	0
 12313  0294  00E5               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 12314  0295  3192  221E  3181   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 12315                           
 12316                           ;usb_device.c: 2921: }
 12317  0298  2AA2               	goto	i1l4180
 12318  0299                     i1l4178:	
 12319                           
 12320                           ;usb_device.c: 2922: else
 12321                           ;usb_device.c: 2923: {
 12322                           ;usb_device.c: 2925: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 12323  0299  303B               	movlw	59
 12324  029A  0020               	movlb	0	; select bank0
 12325  029B  00E6               	movwf	??i1_USBStdFeatureReqHandler
 12326  029C  086B               	movf	i1USBStdFeatureReqHandler@p,w
 12327  029D  0086               	movwf	6
 12328  029E  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 12329  029F  0087               	movwf	7
 12330  02A0  0866               	movf	??i1_USBStdFeatureReqHandler,w
 12331  02A1  0581               	andwf	1,f
 12332  02A2                     i1l4180:	
 12333                           
 12334                           ;usb_device.c: 2926: }
 12335                           ;usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 12336  02A2  0020               	movlb	0	; select bank0
 12337  02A3  0854               	movf	84,w	;volatile
 12338  02A4  390F               	andlw	15
 12339  02A5  3E98               	addlw	152
 12340  02A6  00E6               	movwf	??i1_USBStdFeatureReqHandler
 12341  02A7  01E7               	clrf	??i1_USBStdFeatureReqHandler+1
 12342  02A8  300E               	movlw	14
 12343  02A9  3DE7               	addwfc	??i1_USBStdFeatureReqHandler+1,f
 12344  02AA  0866               	movf	??i1_USBStdFeatureReqHandler,w
 12345  02AB  00E8               	movwf	i1USBStdFeatureReqHandler@pUEP
 12346  02AC  0867               	movf	??i1_USBStdFeatureReqHandler+1,w
 12347  02AD  00E9               	movwf	i1USBStdFeatureReqHandler@pUEP+1
 12348                           
 12349                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
 12350  02AE  30FE               	movlw	254
 12351  02AF  00E6               	movwf	??i1_USBStdFeatureReqHandler
 12352  02B0  0868               	movf	i1USBStdFeatureReqHandler@pUEP,w
 12353  02B1  0086               	movwf	6
 12354  02B2  0869               	movf	i1USBStdFeatureReqHandler@pUEP+1,w
 12355  02B3  0087               	movwf	7
 12356  02B4  0866               	movf	??i1_USBStdFeatureReqHandler,w
 12357  02B5  0581               	andwf	1,f
 12358  02B6  0008               	return
 12359  02B7                     __end_ofi1_USBStdFeatureReqHandler:	
 12360                           
 12361                           	psect	text55
 12362  121E                     __ptext55:	
 12363 ;; *************** function i1_USER_USB_CALLBACK_EVENT_HANDLER *****************
 12364 ;; Defined at:
 12365 ;;		line 49 in file "mcc_generated_files/usb/usb_device_events.c"
 12366 ;; Parameters:    Size  Location     Type
 12367 ;;  event           2    0[BANK0h] enum E40
 12368 ;;  pdata           2    2[BANK0h] PTR void 
 12369 ;;		 -> RAM(4096), USTATcopy(1), USBActiveConfiguration(1), BDT(48), 
 12370 ;;		 -> NULL(0), 
 12371 ;;  size            2    4[BANK0h] unsigned int 
 12372 ;; Auto vars:     Size  Location     Type
 12373 ;;		None
 12374 ;; Return value:  Size  Location     Type
 12375 ;;                  1    wreg      unsigned char 
 12376 ;; Registers used:
 12377 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12378 ;; Tracked objects:
 12379 ;;		On entry : 0/0
 12380 ;;		On exit  : 0/0
 12381 ;;		Unchanged: 0/0
 12382 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12383 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12386 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12387 ;;Total ram usage:        6 bytes
 12388 ;; Hardware stack levels used:    1
 12389 ;; Hardware stack levels required when called:    3
 12390 ;; This function calls:
 12391 ;;		i1_CDCInitEP
 12392 ;;		i1_USBCheckCDCRequest
 12393 ;; This function is called by:
 12394 ;;		i1_USBDeviceTasks
 12395 ;;		i1_USBStdSetCfgHandler
 12396 ;;		i1_USBSuspend
 12397 ;;		i1_USBWakeFromSuspend
 12398 ;;		i1_USBCtrlTrfSetupHandler
 12399 ;;		i1_USBCheckStdRequest
 12400 ;;		i1_USBStdFeatureReqHandler
 12401 ;; This function uses a non-reentrant model
 12402 ;;
 12403                           
 12404                           
 12405                           ;psect for function i1_USER_USB_CALLBACK_EVENT_HANDLER
 12406  121E                     i1_USER_USB_CALLBACK_EVENT_HANDLER:	
 12407                           
 12408                           ;usb_device_events.c: 51: switch( (int) event )
 12409                           
 12410                           ;incstack = 0
 12411                           ; Regs used in i1_USER_USB_CALLBACK_EVENT_HANDLER: [wreg-fsr1h+status,2+status,0+pclath+
      +                          cstack]
 12412  121E  2A25               	goto	i1l3614
 12413  121F                     i1l3608:	
 12414                           ;usb_device_events.c: 75: case EVENT_CONFIGURED:
 12415                           
 12416                           ;usb_device_events.c: 73: break;
 12417                           
 12418                           ;usb_device_events.c: 68: case EVENT_RESUME:
 12419                           
 12420                           ;usb_device_events.c: 66: break;
 12421                           
 12422                           ;usb_device_events.c: 59: case EVENT_SUSPEND:
 12423                           
 12424                           ;usb_device_events.c: 57: break;
 12425                           
 12426                           ;usb_device_events.c: 56: case EVENT_SOF:
 12427                           
 12428                           ;usb_device_events.c: 54: break;
 12429                           
 12430                           ;usb_device_events.c: 52: {
 12431                           ;usb_device_events.c: 53: case EVENT_TRANSFER:
 12432                           
 12433                           
 12434                           ;usb_device_events.c: 76: CDCInitEP();
 12435  121F  3192  22B4         	fcall	i1_CDCInitEP
 12436                           
 12437                           ;usb_device_events.c: 80: break;
 12438                           
 12439                           ;usb_device_events.c: 79: case EVENT_SET_DESCRIPTOR:
 12440                           
 12441                           ;usb_device_events.c: 77: break;
 12442  1221  0008               	return
 12443  1222                     i1l3610:	
 12444                           ;usb_device_events.c: 82: case EVENT_EP0_REQUEST:
 12445                           
 12446                           
 12447                           ;usb_device_events.c: 85: USBCheckCDCRequest();
 12448  1222  3197  273F         	fcall	i1_USBCheckCDCRequest
 12449                           
 12450                           ;usb_device_events.c: 96: }
 12451                           
 12452                           ;usb_device_events.c: 95: break;
 12453                           
 12454                           ;usb_device_events.c: 94: default:
 12455                           
 12456                           ;usb_device_events.c: 92: break;
 12457                           
 12458                           ;usb_device_events.c: 91: case EVENT_TRANSFER_TERMINATED:
 12459                           
 12460                           ;usb_device_events.c: 89: break;
 12461                           
 12462                           ;usb_device_events.c: 88: case EVENT_BUS_ERROR:
 12463                           
 12464                           ;usb_device_events.c: 86: break;
 12465  1224  0008               	return
 12466  1225                     i1l3614:	
 12467                           
 12468                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 12469                           ; Switch size 1, requested type "space"
 12470                           ; Number of cases is 2, Range of values is 0 to 127
 12471                           ; switch strategies available:
 12472                           ; Name         Instructions Cycles
 12473                           ; simple_byte            7     4 (average)
 12474                           ; direct_byte          262     6 (fixed)
 12475                           ; jumptable            260     6 (fixed)
 12476                           ;	Chosen strategy is simple_byte
 12477  1225  0020               	movlb	0	; select bank0
 12478  1226  0861               	movf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1,w
 12479  1227  3A00               	xorlw	0	; case 0
 12480  1228  1903               	skipnz
 12481  1229  2A2E               	goto	i1l6742
 12482  122A  3A7F               	xorlw	127	; case 127
 12483  122B  1903               	skipnz
 12484  122C  2A48               	goto	i1l6744
 12485  122D  2A4D               	goto	i1l226
 12486  122E                     i1l6742:	
 12487                           
 12488                           ; Switch size 1, requested type "space"
 12489                           ; Number of cases is 8, Range of values is 1 to 117
 12490                           ; switch strategies available:
 12491                           ; Name         Instructions Cycles
 12492                           ; simple_byte           25    13 (average)
 12493                           ; direct_byte          243     9 (fixed)
 12494                           ; jumptable            263     9 (fixed)
 12495                           ;	Chosen strategy is simple_byte
 12496  122E  0860               	movf	i1USER_USB_CALLBACK_EVENT_HANDLER@event,w
 12497  122F  3A01               	xorlw	1	; case 1
 12498  1230  1903               	skipnz
 12499  1231  2A1F               	goto	i1l3608
 12500  1232  3A03               	xorlw	3	; case 2
 12501  1233  1903               	skipnz
 12502  1234  2A4D               	goto	i1l226
 12503  1235  3A01               	xorlw	1	; case 3
 12504  1236  1903               	skipnz
 12505  1237  2A22               	goto	i1l3610
 12506  1238  3A06               	xorlw	6	; case 5
 12507  1239  1903               	skipnz
 12508  123A  2A4D               	goto	i1l226
 12509  123B  3A77               	xorlw	119	; case 114
 12510  123C  1903               	skipnz
 12511  123D  2A4D               	goto	i1l226
 12512  123E  3A01               	xorlw	1	; case 115
 12513  123F  1903               	skipnz
 12514  1240  2A4D               	goto	i1l226
 12515  1241  3A07               	xorlw	7	; case 116
 12516  1242  1903               	skipnz
 12517  1243  2A4D               	goto	i1l226
 12518  1244  3A01               	xorlw	1	; case 117
 12519  1245  1903               	skipnz
 12520  1246  2A4D               	goto	i1l226
 12521  1247  2A4D               	goto	i1l226
 12522  1248                     i1l6744:	
 12523                           
 12524                           ; Switch size 1, requested type "space"
 12525                           ; Number of cases is 1, Range of values is 255 to 255
 12526                           ; switch strategies available:
 12527                           ; Name         Instructions Cycles
 12528                           ; simple_byte            4     3 (average)
 12529                           ; direct_byte            7     5 (fixed)
 12530                           ; jumptable            263     9 (fixed)
 12531                           ;	Chosen strategy is simple_byte
 12532  1248  0860               	movf	i1USER_USB_CALLBACK_EVENT_HANDLER@event,w
 12533  1249  3AFF               	xorlw	255	; case 255
 12534  124A  1903               	skipnz
 12535  124B  2A4D               	goto	i1l226
 12536  124C  2A4D               	goto	i1l226
 12537  124D                     i1l226:	
 12538                           ;usb_device_events.c: 97: return 1;
 12539                           ;	Return value of i1_USER_USB_CALLBACK_EVENT_HANDLER is never used
 12540                           
 12541  124D  0008               	return
 12542  124E                     __end_ofi1_USER_USB_CALLBACK_EVENT_HANDLER:	
 12543                           
 12544                           	psect	text56
 12545  173F                     __ptext56:	
 12546 ;; *************** function i1_USBCheckCDCRequest *****************
 12547 ;; Defined at:
 12548 ;;		line 146 in file "mcc_generated_files/usb/usb_device_cdc.c"
 12549 ;; Parameters:    Size  Location     Type
 12550 ;;		None
 12551 ;; Auto vars:     Size  Location     Type
 12552 ;;		None
 12553 ;; Return value:  Size  Location     Type
 12554 ;;                  1    wreg      void 
 12555 ;; Registers used:
 12556 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 12557 ;; Tracked objects:
 12558 ;;		On entry : 0/0
 12559 ;;		On exit  : 0/0
 12560 ;;		Unchanged: 0/0
 12561 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12564 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12565 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12566 ;;Total ram usage:        1 bytes
 12567 ;; Hardware stack levels used:    1
 12568 ;; This function calls:
 12569 ;;		Nothing
 12570 ;; This function is called by:
 12571 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 12572 ;; This function uses a non-reentrant model
 12573 ;;
 12574                           
 12575                           
 12576                           ;psect for function i1_USBCheckCDCRequest
 12577  173F                     i1_USBCheckCDCRequest:	
 12578                           
 12579                           ;usb_device_cdc.c: 151: if(SetupPkt.Recipient != (0x01)) return;
 12580                           
 12581                           ;incstack = 0
 12582                           ; Regs used in i1_USBCheckCDCRequest: [wreg-fsr0h+status,2+status,0]
 12583  173F  0020               	movlb	0	; select bank0
 12584  1740  0850               	movf	80,w	;volatile
 12585  1741  391F               	andlw	31
 12586  1742  3A01               	xorlw	1
 12587  1743  1D03               	btfss	3,2
 12588  1744  0008               	return
 12589                           
 12590                           ;usb_device_cdc.c: 156: if(SetupPkt.RequestType != (0x20>>5)) return;
 12591  1745  0E50               	swapf	80,w	;volatile
 12592  1746  0C89               	rrf	9,f
 12593  1747  3903               	andlw	3
 12594  1748  3A01               	xorlw	1
 12595  1749  1D03               	btfss	3,2
 12596  174A  0008               	return
 12597                           
 12598                           ;usb_device_cdc.c: 162: if((SetupPkt.bIntfID != 0x0)&&
 12599                           ;usb_device_cdc.c: 163: (SetupPkt.bIntfID != 0x01)) return;
 12600  174B  0854               	movf	84,w	;volatile
 12601  174C  1903               	btfsc	3,2
 12602  174D  2F8C               	goto	i1l3520
 12603  174E  0354               	decf	84,w	;volatile
 12604  174F  1D03               	btfss	3,2
 12605  1750  0008               	return
 12606  1751  2F8C               	goto	i1l3520
 12607  1752                     i1l3490:	
 12608                           ;usb_device_cdc.c: 166: {
 12609                           ;usb_device_cdc.c: 168: case 0x00:
 12610                           
 12611                           ;usb_device_cdc.c: 165: switch(SetupPkt.bRequest)
 12612                           
 12613                           
 12614                           ;usb_device_cdc.c: 170: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 12615  1752  302E               	movlw	low _dummy_encapsulated_cmd_response
 12616  1753  0021               	movlb	1	; select bank1
 12617  1754  00C3               	movwf	_inPipes^(0+128)	;volatile
 12618  1755  3002               	movlw	high _dummy_encapsulated_cmd_response
 12619  1756  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
 12620                           
 12621                           ;usb_device_cdc.c: 171: inPipes[0].wCount.Val = 0x08;
 12622  1757  3000               	movlw	0
 12623  1758  00C7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
 12624  1759  3008               	movlw	8
 12625  175A  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
 12626                           
 12627                           ;usb_device_cdc.c: 172: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 12628  175B  1445               	bsf	(_inPipes^(0+128)+2),0	;volatile
 12629                           
 12630                           ;usb_device_cdc.c: 173: inPipes[0].info.bits.busy = 1;
 12631  175C  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 12632                           
 12633                           ;usb_device_cdc.c: 174: break;
 12634  175D  0008               	return
 12635  175E                     i1l3498:	
 12636                           ;usb_device_cdc.c: 175: case 0x01:
 12637                           
 12638                           
 12639                           ;usb_device_cdc.c: 177: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 12640  175E  302E               	movlw	low _dummy_encapsulated_cmd_response
 12641  175F  0021               	movlb	1	; select bank1
 12642  1760  00C3               	movwf	_inPipes^(0+128)	;volatile
 12643  1761  3002               	movlw	high _dummy_encapsulated_cmd_response
 12644  1762  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
 12645                           
 12646                           ;usb_device_cdc.c: 178: inPipes[0].info.bits.busy = 1;
 12647  1763  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 12648                           
 12649                           ;usb_device_cdc.c: 179: break;
 12650  1764  0008               	return
 12651  1765                     i1l3502:	
 12652                           ;usb_device_cdc.c: 183: case 0x20:
 12653                           
 12654                           
 12655                           ;usb_device_cdc.c: 184: outPipes[0].wCount.Val = SetupPkt.wLength;
 12656  1765  0020               	movlb	0	; select bank0
 12657  1766  0857               	movf	87,w	;volatile
 12658  1767  0023               	movlb	3	; select bank3
 12659  1768  00B4               	movwf	((_outPipes+1)^(0+384)+3)	;volatile
 12660  1769  0020               	movlb	0	; select bank0
 12661  176A  0856               	movf	86,w	;volatile
 12662  176B  0023               	movlb	3	; select bank3
 12663  176C  00B3               	movwf	(_outPipes^(0+384)+3)	;volatile
 12664                           
 12665                           ;usb_device_cdc.c: 185: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 12666  176D  3036               	movlw	(low (_line_coding| (0+512)))& (0+255)
 12667  176E  00F0               	movwf	??i1_USBCheckCDCRequest
 12668  176F  0870               	movf	??i1_USBCheckCDCRequest,w
 12669  1770  00B0               	movwf	_outPipes^(0+384)	;volatile
 12670                           
 12671                           ;usb_device_cdc.c: 186: outPipes[0].pFunc = (0);
 12672  1771  01B5               	clrf	(low ((_outPipes| (0+256)+5)))^(0+128)	;volatile
 12673  1772  01B6               	clrf	((low ((_outPipes| (0+256)+5))+1))^(0+128)	;volatile
 12674                           
 12675                           ;usb_device_cdc.c: 187: outPipes[0].info.bits.busy = 1;
 12676  1773  17B2               	bsf	(_outPipes^(0+384)+2),7	;volatile
 12677                           
 12678                           ;usb_device_cdc.c: 188: break;
 12679  1774  0008               	return
 12680  1775                     i1l3508:	
 12681                           ;usb_device_cdc.c: 190: case 0x21:
 12682                           
 12683                           
 12684                           ;usb_device_cdc.c: 191: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 12685  1775  3036               	movlw	low _line_coding
 12686  1776  0021               	movlb	1	; select bank1
 12687  1777  00C3               	movwf	_inPipes^(0+128)	;volatile
 12688  1778  3002               	movlw	high _line_coding
 12689  1779  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
 12690  177A  3000               	movlw	0
 12691  177B  00C7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
 12692  177C  3007               	movlw	7
 12693  177D  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
 12694  177E  30C1               	movlw	193
 12695  177F  00F0               	movwf	??i1_USBCheckCDCRequest
 12696  1780  0870               	movf	??i1_USBCheckCDCRequest,w
 12697  1781  00C5               	movwf	(_inPipes^(0+128)+2)	;volatile
 12698                           
 12699                           ;usb_device_cdc.c: 195: break;
 12700  1782  0008               	return
 12701  1783                     i1l3514:	
 12702                           ;usb_device_cdc.c: 197: case 0x22:
 12703                           
 12704                           
 12705                           ;usb_device_cdc.c: 198: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 12706  1783  0020               	movlb	0	; select bank0
 12707  1784  0852               	movf	82,w	;volatile
 12708  1785  00F0               	movwf	??i1_USBCheckCDCRequest
 12709  1786  0870               	movf	??i1_USBCheckCDCRequest,w
 12710  1787  0023               	movlb	3	; select bank3
 12711  1788  00E6               	movwf	_control_signal_bitmap^(0+384)
 12712                           
 12713                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.busy = 1;
 12714  1789  0021               	movlb	1	; select bank1
 12715  178A  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 12716                           
 12717                           ;usb_device_cdc.c: 257: }
 12718                           
 12719                           ;usb_device_cdc.c: 256: break;
 12720                           
 12721                           ;usb_device_cdc.c: 255: default:
 12722                           
 12723                           ;usb_device_cdc.c: 231: break;
 12724  178B  0008               	return
 12725  178C                     i1l3520:	
 12726  178C  0020               	movlb	0	; select bank0
 12727  178D  0851               	movf	81,w	;volatile
 12728                           
 12729                           ; Switch size 1, requested type "space"
 12730                           ; Number of cases is 5, Range of values is 0 to 34
 12731                           ; switch strategies available:
 12732                           ; Name         Instructions Cycles
 12733                           ; simple_byte           16     9 (average)
 12734                           ; direct_byte           76     6 (fixed)
 12735                           ; jumptable            260     6 (fixed)
 12736                           ;	Chosen strategy is simple_byte
 12737  178E  3A00               	xorlw	0	; case 0
 12738  178F  1903               	skipnz
 12739  1790  2F52               	goto	i1l3490
 12740  1791  3A01               	xorlw	1	; case 1
 12741  1792  1903               	skipnz
 12742  1793  2F5E               	goto	i1l3498
 12743  1794  3A21               	xorlw	33	; case 32
 12744  1795  1903               	skipnz
 12745  1796  2F65               	goto	i1l3502
 12746  1797  3A01               	xorlw	1	; case 33
 12747  1798  1903               	skipnz
 12748  1799  2F75               	goto	i1l3508
 12749  179A  3A03               	xorlw	3	; case 34
 12750  179B  1903               	skipnz
 12751  179C  2F83               	goto	i1l3514
 12752  179D  2F9E               	goto	i1l121
 12753  179E                     i1l121:	
 12754  179E  0008               	return
 12755  179F                     __end_ofi1_USBCheckCDCRequest:	
 12756                           
 12757                           	psect	text57
 12758  12B4                     __ptext57:	
 12759 ;; *************** function i1_CDCInitEP *****************
 12760 ;; Defined at:
 12761 ;;		line 293 in file "mcc_generated_files/usb/usb_device_cdc.c"
 12762 ;; Parameters:    Size  Location     Type
 12763 ;;		None
 12764 ;; Auto vars:     Size  Location     Type
 12765 ;;		None
 12766 ;; Return value:  Size  Location     Type
 12767 ;;                  1    wreg      void 
 12768 ;; Registers used:
 12769 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12770 ;; Tracked objects:
 12771 ;;		On entry : 0/0
 12772 ;;		On exit  : 0/0
 12773 ;;		Unchanged: 0/0
 12774 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12777 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12778 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12779 ;;Total ram usage:        1 bytes
 12780 ;; Hardware stack levels used:    1
 12781 ;; Hardware stack levels required when called:    2
 12782 ;; This function calls:
 12783 ;;		i1_USBEnableEndpoint
 12784 ;;		i1_USBTransferOnePacket
 12785 ;; This function is called by:
 12786 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 12787 ;; This function uses a non-reentrant model
 12788 ;;
 12789                           
 12790                           
 12791                           ;psect for function i1_CDCInitEP
 12792  12B4                     i1_CDCInitEP:	
 12793                           
 12794                           ;usb_device_cdc.c: 296: line_coding.dwDTERate = 19200;
 12795                           
 12796                           ;incstack = 0
 12797                           ; Regs used in i1_CDCInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12798  12B4  3000               	movlw	0
 12799  12B5  0024               	movlb	4	; select bank4
 12800  12B6  00B9               	movwf	(_line_coding+3)^(0+512)
 12801  12B7  3000               	movlw	0
 12802  12B8  00B8               	movwf	(_line_coding+2)^(0+512)
 12803  12B9  304B               	movlw	75
 12804  12BA  00B7               	movwf	(_line_coding+1)^(0+512)
 12805  12BB  3000               	movlw	0
 12806  12BC  00B6               	movwf	_line_coding^(0+512)
 12807                           
 12808                           ;usb_device_cdc.c: 297: line_coding.bCharFormat = 0x00;
 12809  12BD  01BA               	clrf	(_line_coding^(0+512)+4)
 12810                           
 12811                           ;usb_device_cdc.c: 298: line_coding.bParityType = 0x00;
 12812  12BE  01BB               	clrf	(_line_coding^(0+512)+5)
 12813                           
 12814                           ;usb_device_cdc.c: 299: line_coding.bDataBits = 0x08;
 12815  12BF  3008               	movlw	8
 12816  12C0  00FD               	movwf	??i1_CDCInitEP
 12817  12C1  087D               	movf	??i1_CDCInitEP,w
 12818  12C2  00BC               	movwf	(_line_coding^(0+512)+6)
 12819                           
 12820                           ;usb_device_cdc.c: 301: cdc_rx_len = 0;
 12821  12C3  0023               	movlb	3	; select bank3
 12822  12C4  01EA               	clrf	_cdc_rx_len^(0+384)
 12823                           
 12824                           ;usb_device_cdc.c: 314: USBEnableEndpoint(1,0x02|0x10|0x08);
 12825  12C5  301A               	movlw	26
 12826  12C6  00FD               	movwf	??i1_CDCInitEP
 12827  12C7  087D               	movf	??i1_CDCInitEP,w
 12828  12C8  00F7               	movwf	i1USBEnableEndpoint@options
 12829  12C9  3001               	movlw	1
 12830  12CA  3191  2121  3192   	fcall	i1_USBEnableEndpoint
 12831                           
 12832                           ;usb_device_cdc.c: 315: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 12833  12CD  301E               	movlw	30
 12834  12CE  00FD               	movwf	??i1_CDCInitEP
 12835  12CF  087D               	movf	??i1_CDCInitEP,w
 12836  12D0  00F7               	movwf	i1USBEnableEndpoint@options
 12837  12D1  3002               	movlw	2
 12838  12D2  3191  2121  3192   	fcall	i1_USBEnableEndpoint
 12839                           
 12840                           ;usb_device_cdc.c: 317: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 12841  12D5  01F0               	clrf	i1USBTransferOnePacket@dir
 12842  12D6  30C0               	movlw	192
 12843  12D7  00F1               	movwf	i1USBTransferOnePacket@data
 12844  12D8  3020               	movlw	32
 12845  12D9  00F2               	movwf	i1USBTransferOnePacket@data+1
 12846  12DA  3040               	movlw	64
 12847  12DB  00FD               	movwf	??i1_CDCInitEP
 12848  12DC  087D               	movf	??i1_CDCInitEP,w
 12849  12DD  00F3               	movwf	i1USBTransferOnePacket@len
 12850  12DE  3002               	movlw	2
 12851  12DF  318C  24A7         	fcall	i1_USBTransferOnePacket
 12852  12E1  0871               	movf	?i1_USBTransferOnePacket+1,w
 12853  12E2  0023               	movlb	3	; select bank3
 12854  12E3  00D0               	movwf	(_CDCDataOutHandle+1)^(0+384)
 12855  12E4  0870               	movf	?i1_USBTransferOnePacket,w
 12856  12E5  00CF               	movwf	_CDCDataOutHandle^(0+384)
 12857                           
 12858                           ;usb_device_cdc.c: 318: CDCDataInHandle = (0);
 12859  12E6  01CD               	clrf	_CDCDataInHandle^(0+384)
 12860  12E7  01CE               	clrf	(_CDCDataInHandle+1)^(0+384)
 12861                           
 12862                           ;usb_device_cdc.c: 345: cdc_trf_state = 0;
 12863  12E8  01E9               	clrf	_cdc_trf_state^(0+384)
 12864  12E9  0008               	return
 12865  12EA                     __end_ofi1_CDCInitEP:	
 12866                           
 12867                           	psect	text58
 12868  0CA7                     __ptext58:	
 12869 ;; *************** function i1_USBTransferOnePacket *****************
 12870 ;; Defined at:
 12871 ;;		line 995 in file "mcc_generated_files/usb/usb_device.c"
 12872 ;; Parameters:    Size  Location     Type
 12873 ;;  ep              1    wreg     unsigned char 
 12874 ;;  dir             1    0[COMMON] unsigned char 
 12875 ;;  data            2    1[COMMON] PTR unsigned char 
 12876 ;;		 -> cdc_data_tx(64), NULL(0), cdc_data_rx(64), 
 12877 ;;  len             1    3[COMMON] unsigned char 
 12878 ;; Auto vars:     Size  Location     Type
 12879 ;;  ep              1    8[COMMON] unsigned char 
 12880 ;;  USBTransferO    2    9[COMMON] PTR volatile struct __BD
 12881 ;;		 -> RAM(4096), BDT(48), NULL(0), 
 12882 ;; Return value:  Size  Location     Type
 12883 ;;                  2    0[COMMON] PTR void 
 12884 ;; Registers used:
 12885 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12886 ;; Tracked objects:
 12887 ;;		On entry : 0/0
 12888 ;;		On exit  : 0/0
 12889 ;;		Unchanged: 0/0
 12890 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12891 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12892 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12893 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12894 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12895 ;;Total ram usage:       11 bytes
 12896 ;; Hardware stack levels used:    1
 12897 ;; This function calls:
 12898 ;;		Nothing
 12899 ;; This function is called by:
 12900 ;;		i1_CDCInitEP
 12901 ;; This function uses a non-reentrant model
 12902 ;;
 12903                           
 12904                           
 12905                           ;psect for function i1_USBTransferOnePacket
 12906  0CA7                     i1_USBTransferOnePacket:	
 12907                           
 12908                           ;incstack = 0
 12909                           ; Regs used in i1_USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
 12910                           ;i1USBTransferOnePacket@ep stored from wreg
 12911  0CA7  00F8               	movwf	i1USBTransferOnePacket@ep
 12912                           
 12913                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 12914                           ;usb_device.c: 1000: if(dir != 0)
 12915  0CA8  0870               	movf	i1USBTransferOnePacket@dir,w
 12916  0CA9  1903               	btfsc	3,2
 12917  0CAA  2CB4               	goto	i1l3388
 12918                           
 12919                           ;usb_device.c: 1001: {
 12920                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 12921  0CAB  3578               	lslf	i1USBTransferOnePacket@ep,w
 12922  0CAC  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 12923  0CAD  0086               	movwf	6
 12924  0CAE  3001               	movlw	1	; select bank3/4
 12925  0CAF  0087               	movwf	7
 12926  0CB0  3F40               	moviw [0]fsr1
 12927  0CB1  00F9               	movwf	i1USBTransferOnePacket@handle
 12928  0CB2  3F41               	moviw [1]fsr1
 12929  0CB3  2CBC               	goto	L18
 12930  0CB4                     i1l3388:	
 12931                           ;usb_device.c: 1004: }
 12932                           
 12933                           
 12934                           ;usb_device.c: 1005: else
 12935                           ;usb_device.c: 1006: {
 12936                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 12937  0CB4  3578               	lslf	i1USBTransferOnePacket@ep,w
 12938  0CB5  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 12939  0CB6  0086               	movwf	6
 12940  0CB7  3001               	movlw	1	; select bank3/4
 12941  0CB8  0087               	movwf	7
 12942  0CB9  3F40               	moviw [0]fsr1
 12943  0CBA  00F9               	movwf	i1USBTransferOnePacket@handle
 12944  0CBB  3F41               	moviw [1]fsr1
 12945  0CBC                     L18:	
 12946  0CBC  00FA               	movwf	i1USBTransferOnePacket@handle+1
 12947                           
 12948                           ;usb_device.c: 1009: }
 12949                           ;usb_device.c: 1013: if(handle == 0)
 12950  0CBD  0879               	movf	i1USBTransferOnePacket@handle,w
 12951  0CBE  047A               	iorwf	i1USBTransferOnePacket@handle+1,w
 12952  0CBF  1D03               	btfss	3,2
 12953  0CC0  2CC4               	goto	i1l3396
 12954                           
 12955                           ;usb_device.c: 1014: {
 12956                           ;usb_device.c: 1015: return 0;
 12957  0CC1  01F0               	clrf	?i1_USBTransferOnePacket
 12958  0CC2  01F1               	clrf	?i1_USBTransferOnePacket+1
 12959  0CC3  0008               	return
 12960  0CC4                     i1l3396:	
 12961                           
 12962                           ;usb_device.c: 1016: }
 12963                           ;usb_device.c: 1029: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
 12964  0CC4  30FF               	movlw	255
 12965  0CC5  0571               	andwf	i1USBTransferOnePacket@data,w
 12966  0CC6  00F4               	movwf	??i1_USBTransferOnePacket
 12967  0CC7  307F               	movlw	127
 12968  0CC8  0572               	andwf	i1USBTransferOnePacket@data+1,w
 12969  0CC9  00F5               	movwf	??i1_USBTransferOnePacket+1
 12970  0CCA  0879               	movf	i1USBTransferOnePacket@handle,w
 12971  0CCB  0086               	movwf	6
 12972  0CCC  087A               	movf	i1USBTransferOnePacket@handle+1,w
 12973  0CCD  0087               	movwf	7
 12974  0CCE  3142               	addfsr 1,2
 12975  0CCF  0874               	movf	??i1_USBTransferOnePacket,w
 12976  0CD0  3FC0               	movwi [0]fsr1
 12977  0CD1  0875               	movf	??i1_USBTransferOnePacket+1,w
 12978  0CD2  3FC1               	movwi [1]fsr1
 12979                           
 12980                           ;usb_device.c: 1030: handle->CNT = len;
 12981  0CD3  0879               	movf	i1USBTransferOnePacket@handle,w
 12982  0CD4  3E01               	addlw	1
 12983  0CD5  00F4               	movwf	??i1_USBTransferOnePacket
 12984  0CD6  3000               	movlw	0
 12985  0CD7  3D7A               	addwfc	i1USBTransferOnePacket@handle+1,w
 12986  0CD8  00F5               	movwf	??i1_USBTransferOnePacket+1
 12987  0CD9  0874               	movf	??i1_USBTransferOnePacket,w
 12988  0CDA  0086               	movwf	6
 12989  0CDB  0875               	movf	??i1_USBTransferOnePacket+1,w
 12990  0CDC  0087               	movwf	7
 12991  0CDD  0873               	movf	i1USBTransferOnePacket@len,w
 12992  0CDE  0081               	movwf	1
 12993                           
 12994                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 12995  0CDF  3040               	movlw	64
 12996  0CE0  00F4               	movwf	??i1_USBTransferOnePacket
 12997  0CE1  0879               	movf	i1USBTransferOnePacket@handle,w
 12998  0CE2  0086               	movwf	6
 12999  0CE3  087A               	movf	i1USBTransferOnePacket@handle+1,w
 13000  0CE4  0087               	movwf	7
 13001  0CE5  0874               	movf	??i1_USBTransferOnePacket,w
 13002  0CE6  0581               	andwf	1,f
 13003                           
 13004                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 13005  0CE7  0879               	movf	i1USBTransferOnePacket@handle,w
 13006  0CE8  0086               	movwf	6
 13007  0CE9  087A               	movf	i1USBTransferOnePacket@handle+1,w
 13008  0CEA  0087               	movwf	7
 13009  0CEB  1581               	bsf	1,3
 13010                           
 13011                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 13012  0CEC  0879               	movf	i1USBTransferOnePacket@handle,w
 13013  0CED  0086               	movwf	6
 13014  0CEE  087A               	movf	i1USBTransferOnePacket@handle+1,w
 13015  0CEF  0087               	movwf	7
 13016  0CF0  1781               	bsf	1,7
 13017                           
 13018                           ;usb_device.c: 1036: if(dir != 0)
 13019  0CF1  0870               	movf	i1USBTransferOnePacket@dir,w
 13020  0CF2  1903               	btfsc	3,2
 13021  0CF3  2D0D               	goto	i1l3406
 13022                           
 13023                           ;usb_device.c: 1037: {
 13024                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
 13025  0CF4  3578               	lslf	i1USBTransferOnePacket@ep,w
 13026  0CF5  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 13027  0CF6  0086               	movwf	6
 13028  0CF7  3001               	movlw	1	; select bank3/4
 13029  0CF8  0087               	movwf	7
 13030  0CF9  3F40               	moviw [0]fsr1
 13031  0CFA  00F4               	movwf	??i1_USBTransferOnePacket
 13032  0CFB  3F41               	moviw [1]fsr1
 13033  0CFC  00F5               	movwf	??i1_USBTransferOnePacket+1
 13034  0CFD  3004               	movlw	4
 13035  0CFE  0674               	xorwf	??i1_USBTransferOnePacket,w
 13036  0CFF  00F6               	movwf	??i1_USBTransferOnePacket+2
 13037  0D00  3000               	movlw	0
 13038  0D01  0675               	xorwf	??i1_USBTransferOnePacket+1,w
 13039  0D02  00F7               	movwf	??i1_USBTransferOnePacket+3
 13040  0D03  3578               	lslf	i1USBTransferOnePacket@ep,w
 13041  0D04  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 13042  0D05  0086               	movwf	6
 13043  0D06  3001               	movlw	1	; select bank3/4
 13044  0D07  0087               	movwf	7
 13045  0D08  0876               	movf	??i1_USBTransferOnePacket+2,w
 13046  0D09  3FC0               	movwi [0]fsr1
 13047  0D0A  0877               	movf	??i1_USBTransferOnePacket+3,w
 13048  0D0B  3FC1               	movwi [1]fsr1
 13049                           
 13050                           ;usb_device.c: 1040: }
 13051  0D0C  2D25               	goto	i1l3408
 13052  0D0D                     i1l3406:	
 13053                           
 13054                           ;usb_device.c: 1041: else
 13055                           ;usb_device.c: 1042: {
 13056                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
 13057  0D0D  3578               	lslf	i1USBTransferOnePacket@ep,w
 13058  0D0E  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 13059  0D0F  0086               	movwf	6
 13060  0D10  3001               	movlw	1	; select bank3/4
 13061  0D11  0087               	movwf	7
 13062  0D12  3F40               	moviw [0]fsr1
 13063  0D13  00F4               	movwf	??i1_USBTransferOnePacket
 13064  0D14  3F41               	moviw [1]fsr1
 13065  0D15  00F5               	movwf	??i1_USBTransferOnePacket+1
 13066  0D16  3004               	movlw	4
 13067  0D17  0674               	xorwf	??i1_USBTransferOnePacket,w
 13068  0D18  00F6               	movwf	??i1_USBTransferOnePacket+2
 13069  0D19  3000               	movlw	0
 13070  0D1A  0675               	xorwf	??i1_USBTransferOnePacket+1,w
 13071  0D1B  00F7               	movwf	??i1_USBTransferOnePacket+3
 13072  0D1C  3578               	lslf	i1USBTransferOnePacket@ep,w
 13073  0D1D  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 13074  0D1E  0086               	movwf	6
 13075  0D1F  3001               	movlw	1	; select bank3/4
 13076  0D20  0087               	movwf	7
 13077  0D21  0876               	movf	??i1_USBTransferOnePacket+2,w
 13078  0D22  3FC0               	movwi [0]fsr1
 13079  0D23  0877               	movf	??i1_USBTransferOnePacket+3,w
 13080  0D24  3FC1               	movwi [1]fsr1
 13081  0D25                     i1l3408:	
 13082                           
 13083                           ;usb_device.c: 1045: }
 13084                           ;usb_device.c: 1046: return (void*)handle;
 13085  0D25  087A               	movf	i1USBTransferOnePacket@handle+1,w
 13086  0D26  00F1               	movwf	?i1_USBTransferOnePacket+1
 13087  0D27  0879               	movf	i1USBTransferOnePacket@handle,w
 13088  0D28  00F0               	movwf	?i1_USBTransferOnePacket
 13089  0D29  0008               	return
 13090  0D2A                     __end_ofi1_USBTransferOnePacket:	
 13091                           
 13092                           	psect	text59
 13093  1121                     __ptext59:	
 13094 ;; *************** function i1_USBEnableEndpoint *****************
 13095 ;; Defined at:
 13096 ;;		line 878 in file "mcc_generated_files/usb/usb_device.c"
 13097 ;; Parameters:    Size  Location     Type
 13098 ;;  ep              1    wreg     unsigned char 
 13099 ;;  options         1    7[COMMON] unsigned char 
 13100 ;; Auto vars:     Size  Location     Type
 13101 ;;  ep              1   12[COMMON] unsigned char 
 13102 ;;  USBEnableEnd    2   10[COMMON] PTR unsigned char 
 13103 ;;		 -> UEP0(1), 
 13104 ;; Return value:  Size  Location     Type
 13105 ;;                  1    wreg      void 
 13106 ;; Registers used:
 13107 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13108 ;; Tracked objects:
 13109 ;;		On entry : 0/0
 13110 ;;		On exit  : 0/0
 13111 ;;		Unchanged: 0/0
 13112 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13113 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13114 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13115 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13116 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13117 ;;Total ram usage:        6 bytes
 13118 ;; Hardware stack levels used:    1
 13119 ;; Hardware stack levels required when called:    1
 13120 ;; This function calls:
 13121 ;;		i1_USBConfigureEndpoint
 13122 ;; This function is called by:
 13123 ;;		i1_CDCInitEP
 13124 ;; This function uses a non-reentrant model
 13125 ;;
 13126                           
 13127                           
 13128                           ;psect for function i1_USBEnableEndpoint
 13129  1121                     i1_USBEnableEndpoint:	
 13130                           
 13131                           ;incstack = 0
 13132                           ; Regs used in i1_USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13133                           ;i1USBEnableEndpoint@ep stored from wreg
 13134  1121  00FC               	movwf	i1USBEnableEndpoint@ep
 13135                           
 13136                           ;usb_device.c: 880: unsigned char* p;
 13137                           ;usb_device.c: 884: if(options & 0x04)
 13138  1122  1D77               	btfss	i1USBEnableEndpoint@options,2
 13139  1123  2929               	goto	i1l3376
 13140                           
 13141                           ;usb_device.c: 885: {
 13142                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 13143  1124  01F0               	clrf	i1USBConfigureEndpoint@direction
 13144  1125  087C               	movf	i1USBEnableEndpoint@ep,w
 13145  1126  3193  239A  3191   	fcall	i1_USBConfigureEndpoint
 13146  1129                     i1l3376:	
 13147                           
 13148                           ;usb_device.c: 887: }
 13149                           ;usb_device.c: 888: if(options & 0x02)
 13150  1129  1CF7               	btfss	i1USBEnableEndpoint@options,1
 13151  112A  2930               	goto	i1l3380
 13152                           
 13153                           ;usb_device.c: 889: {
 13154                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 13155  112B  01F0               	clrf	i1USBConfigureEndpoint@direction
 13156  112C  0AF0               	incf	i1USBConfigureEndpoint@direction,f
 13157  112D  087C               	movf	i1USBEnableEndpoint@ep,w
 13158  112E  3193  239A         	fcall	i1_USBConfigureEndpoint
 13159  1130                     i1l3380:	
 13160                           
 13161                           ;usb_device.c: 891: }
 13162                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 13163  1130  087C               	movf	i1USBEnableEndpoint@ep,w
 13164  1131  3E98               	addlw	152
 13165  1132  00F8               	movwf	??i1_USBEnableEndpoint
 13166  1133  01F9               	clrf	??i1_USBEnableEndpoint+1
 13167  1134  300E               	movlw	14
 13168  1135  3DF9               	addwfc	??i1_USBEnableEndpoint+1,f
 13169  1136  0878               	movf	??i1_USBEnableEndpoint,w
 13170  1137  00FA               	movwf	i1USBEnableEndpoint@p
 13171  1138  0879               	movf	??i1_USBEnableEndpoint+1,w
 13172  1139  00FB               	movwf	i1USBEnableEndpoint@p+1
 13173                           
 13174                           ;usb_device.c: 901: *p = options;
 13175  113A  087A               	movf	i1USBEnableEndpoint@p,w
 13176  113B  0086               	movwf	6
 13177  113C  087B               	movf	i1USBEnableEndpoint@p+1,w
 13178  113D  0087               	movwf	7
 13179  113E  0877               	movf	i1USBEnableEndpoint@options,w
 13180  113F  0081               	movwf	1
 13181  1140  0008               	return
 13182  1141                     __end_ofi1_USBEnableEndpoint:	
 13183                           
 13184                           	psect	text60
 13185  139A                     __ptext60:	
 13186 ;; *************** function i1_USBConfigureEndpoint *****************
 13187 ;; Defined at:
 13188 ;;		line 1543 in file "mcc_generated_files/usb/usb_device.c"
 13189 ;; Parameters:    Size  Location     Type
 13190 ;;  EPNum           1    wreg     unsigned char 
 13191 ;;  direction       1    0[COMMON] unsigned char 
 13192 ;; Auto vars:     Size  Location     Type
 13193 ;;  EPNum           1    5[COMMON] unsigned char 
 13194 ;;  USBConfigure    1    6[COMMON] PTR volatile struct __BD
 13195 ;;		 -> BDT(48), 
 13196 ;; Return value:  Size  Location     Type
 13197 ;;                  1    wreg      void 
 13198 ;; Registers used:
 13199 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13200 ;; Tracked objects:
 13201 ;;		On entry : 0/0
 13202 ;;		On exit  : 0/0
 13203 ;;		Unchanged: 0/0
 13204 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13205 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13206 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13207 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13208 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13209 ;;Total ram usage:        7 bytes
 13210 ;; Hardware stack levels used:    1
 13211 ;; This function calls:
 13212 ;;		Nothing
 13213 ;; This function is called by:
 13214 ;;		i1_USBEnableEndpoint
 13215 ;; This function uses a non-reentrant model
 13216 ;;
 13217                           
 13218                           
 13219                           ;psect for function i1_USBConfigureEndpoint
 13220  139A                     i1_USBConfigureEndpoint:	
 13221                           
 13222                           ;incstack = 0
 13223                           ; Regs used in i1_USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
 13224                           ;i1USBConfigureEndpoint@EPNum stored from wreg
 13225  139A  00F5               	movwf	i1USBConfigureEndpoint@EPNum
 13226                           
 13227                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 13228                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 13229  139B  3020               	movlw	32
 13230  139C  00F1               	movwf	??i1_USBConfigureEndpoint
 13231  139D  0871               	movf	??i1_USBConfigureEndpoint,w
 13232  139E  00F6               	movwf	i1USBConfigureEndpoint@handle
 13233                           
 13234                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 13235  139F  0870               	movf	i1USBConfigureEndpoint@direction,w
 13236  13A0  00F1               	movwf	??i1_USBConfigureEndpoint
 13237  13A1  3001               	movlw	1
 13238  13A2                     u294_25:	
 13239  13A2  35F1               	lslf	??i1_USBConfigureEndpoint,f
 13240  13A3  0B89               	decfsz	9,f
 13241  13A4  2BA2               	goto	u294_25
 13242  13A5  0875               	movf	i1USBConfigureEndpoint@EPNum,w
 13243  13A6  00F2               	movwf	??i1_USBConfigureEndpoint+1
 13244  13A7  3001               	movlw	1
 13245  13A8                     u295_25:	
 13246  13A8  35F2               	lslf	??i1_USBConfigureEndpoint+1,f
 13247  13A9  3EFF               	addlw	-1
 13248  13AA  1D03               	skipz
 13249  13AB  2BA8               	goto	u295_25
 13250  13AC  3572               	lslf	??i1_USBConfigureEndpoint+1,w
 13251  13AD  0771               	addwf	??i1_USBConfigureEndpoint,w
 13252  13AE  00F3               	movwf	??i1_USBConfigureEndpoint+2
 13253  13AF  3001               	movlw	1
 13254  13B0                     u296_25:	
 13255  13B0  35F3               	lslf	??i1_USBConfigureEndpoint+2,f
 13256  13B1  3EFF               	addlw	-1
 13257  13B2  1D03               	skipz
 13258  13B3  2BB0               	goto	u296_25
 13259  13B4  3573               	lslf	??i1_USBConfigureEndpoint+2,w
 13260  13B5  00F4               	movwf	??i1_USBConfigureEndpoint+3
 13261  13B6  0874               	movf	??i1_USBConfigureEndpoint+3,w
 13262  13B7  07F6               	addwf	i1USBConfigureEndpoint@handle,f
 13263                           
 13264                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 13265  13B8  0876               	movf	i1USBConfigureEndpoint@handle,w
 13266  13B9  0086               	movwf	6
 13267  13BA  0187               	clrf	7
 13268  13BB  1381               	bcf	1,7
 13269                           
 13270                           ;usb_device.c: 1557: if(direction == 0)
 13271  13BC  0870               	movf	i1USBConfigureEndpoint@direction,w
 13272  13BD  1D03               	btfss	3,2
 13273  13BE  2BC9               	goto	i1l3326
 13274                           
 13275                           ;usb_device.c: 1558: {
 13276                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 13277  13BF  3575               	lslf	i1USBConfigureEndpoint@EPNum,w
 13278  13C0  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 13279  13C1  0086               	movwf	6
 13280  13C2  3001               	movlw	1	; select bank3/4
 13281  13C3  0087               	movwf	7
 13282  13C4  0876               	movf	i1USBConfigureEndpoint@handle,w
 13283  13C5  3FC0               	movwi [0]fsr1
 13284  13C6  3000               	movlw	0
 13285  13C7  3FC1               	movwi [1]fsr1
 13286                           
 13287                           ;usb_device.c: 1560: }
 13288  13C8  2BD2               	goto	i1l3328
 13289  13C9                     i1l3326:	
 13290                           
 13291                           ;usb_device.c: 1561: else
 13292                           ;usb_device.c: 1562: {
 13293                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 13294  13C9  3575               	lslf	i1USBConfigureEndpoint@EPNum,w
 13295  13CA  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 13296  13CB  0086               	movwf	6
 13297  13CC  3001               	movlw	1	; select bank3/4
 13298  13CD  0087               	movwf	7
 13299  13CE  0876               	movf	i1USBConfigureEndpoint@handle,w
 13300  13CF  3FC0               	movwi [0]fsr1
 13301  13D0  3000               	movlw	0
 13302  13D1  3FC1               	movwi [1]fsr1
 13303  13D2                     i1l3328:	
 13304                           
 13305                           ;usb_device.c: 1564: }
 13306                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 13307  13D2  0876               	movf	i1USBConfigureEndpoint@handle,w
 13308  13D3  0086               	movwf	6
 13309  13D4  0187               	clrf	7
 13310  13D5  1301               	bcf	1,6
 13311                           
 13312                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 13313  13D6  0876               	movf	i1USBConfigureEndpoint@handle,w
 13314  13D7  3E04               	addlw	4
 13315  13D8  0086               	movwf	6
 13316  13D9  0187               	clrf	7
 13317  13DA  1701               	bsf	1,6
 13318  13DB  0008               	return
 13319  13DC                     __end_ofi1_USBConfigureEndpoint:	
 13320                           
 13321                           	psect	text61
 13322  127E                     __ptext61:	
 13323 ;; *************** function i1_USBCtrlTrfOutHandler *****************
 13324 ;; Defined at:
 13325 ;;		line 2538 in file "mcc_generated_files/usb/usb_device.c"
 13326 ;; Parameters:    Size  Location     Type
 13327 ;;		None
 13328 ;; Auto vars:     Size  Location     Type
 13329 ;;		None
 13330 ;; Return value:  Size  Location     Type
 13331 ;;                  1    wreg      void 
 13332 ;; Registers used:
 13333 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13334 ;; Tracked objects:
 13335 ;;		On entry : 0/0
 13336 ;;		On exit  : 0/0
 13337 ;;		Unchanged: 0/0
 13338 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13341 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13342 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13343 ;;Total ram usage:        2 bytes
 13344 ;; Hardware stack levels used:    1
 13345 ;; Hardware stack levels required when called:    2
 13346 ;; This function calls:
 13347 ;;		i1_USBCtrlTrfRxService
 13348 ;; This function is called by:
 13349 ;;		i1_USBCtrlEPService
 13350 ;; This function uses a non-reentrant model
 13351 ;;
 13352                           
 13353                           
 13354                           ;psect for function i1_USBCtrlTrfOutHandler
 13355  127E                     i1_USBCtrlTrfOutHandler:	
 13356                           
 13357                           ;usb_device.c: 2540: if(controlTransferState == 2)
 13358                           
 13359                           ;incstack = 0
 13360                           ; Regs used in i1_USBCtrlTrfOutHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 13361  127E  3002               	movlw	2
 13362  127F  0023               	movlb	3	; select bank3
 13363  1280  0662               	xorwf	_controlTransferState^(0+384),w	;volatile
 13364  1281  1D03               	btfss	3,2
 13365  1282  2A86               	goto	i1l4572
 13366                           
 13367                           ;usb_device.c: 2541: {
 13368                           ;usb_device.c: 2542: USBCtrlTrfRxService();
 13369  1283  318F  275D         	fcall	i1_USBCtrlTrfRxService
 13370                           
 13371                           ;usb_device.c: 2543: }
 13372  1285  0008               	return
 13373  1286                     i1l4572:	
 13374                           
 13375                           ;usb_device.c: 2544: else
 13376                           ;usb_device.c: 2545: {
 13377                           ;usb_device.c: 2548: controlTransferState = 0;
 13378  1286  0023               	movlb	3	; select bank3
 13379  1287  01E2               	clrf	_controlTransferState^(0+384)	;volatile
 13380                           
 13381                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
 13382  1288  085D               	movf	_BothEP0OutUOWNsSet^(0+384),w	;volatile
 13383  1289  1D03               	btfss	3,2
 13384  128A  2AB1               	goto	i1l4584
 13385                           
 13386                           ;usb_device.c: 2556: {
 13387                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 8;
 13388  128B  0021               	movlb	1	; select bank1
 13389  128C  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13390  128D  3E01               	addlw	1
 13391  128E  00F6               	movwf	??i1_USBCtrlTrfOutHandler
 13392  128F  3000               	movlw	0
 13393  1290  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13394  1291  00F7               	movwf	??i1_USBCtrlTrfOutHandler+1
 13395  1292  0876               	movf	??i1_USBCtrlTrfOutHandler,w
 13396  1293  0086               	movwf	6
 13397  1294  0877               	movf	??i1_USBCtrlTrfOutHandler+1,w
 13398  1295  0087               	movwf	7
 13399  1296  3008               	movlw	8
 13400  1297  0081               	movwf	1
 13401                           
 13402                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 13403  1298  3050               	movlw	80
 13404  1299  00F6               	movwf	??i1_USBCtrlTrfOutHandler
 13405  129A  3000               	movlw	0
 13406  129B  00F7               	movwf	??i1_USBCtrlTrfOutHandler+1
 13407  129C  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13408  129D  0086               	movwf	6
 13409  129E  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13410  129F  0087               	movwf	7
 13411  12A0  3142               	addfsr 1,2
 13412  12A1  0876               	movf	??i1_USBCtrlTrfOutHandler,w
 13413  12A2  3FC0               	movwi [0]fsr1
 13414  12A3  0877               	movf	??i1_USBCtrlTrfOutHandler+1,w
 13415  12A4  3FC1               	movwi [1]fsr1
 13416                           
 13417                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 13418  12A5  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13419  12A6  0086               	movwf	6
 13420  12A7  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13421  12A8  0087               	movwf	7
 13422  12A9  300C               	movlw	12
 13423  12AA  0081               	movwf	1
 13424                           
 13425                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13426  12AB  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13427  12AC  0086               	movwf	6
 13428  12AD  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13429  12AE  0087               	movwf	7
 13430  12AF  1781               	bsf	1,7
 13431                           
 13432                           ;usb_device.c: 2561: }
 13433  12B0  0008               	return
 13434  12B1                     i1l4584:	
 13435                           
 13436                           ;usb_device.c: 2562: else
 13437                           ;usb_device.c: 2563: {
 13438                           ;usb_device.c: 2564: BothEP0OutUOWNsSet = 0;
 13439  12B1  0023               	movlb	3	; select bank3
 13440  12B2  01DD               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
 13441  12B3  0008               	return
 13442  12B4                     __end_ofi1_USBCtrlTrfOutHandler:	
 13443                           
 13444                           	psect	text62
 13445  0F5D                     __ptext62:	
 13446 ;; *************** function i1_USBCtrlTrfRxService *****************
 13447 ;; Defined at:
 13448 ;;		line 1852 in file "mcc_generated_files/usb/usb_device.c"
 13449 ;; Parameters:    Size  Location     Type
 13450 ;;		None
 13451 ;; Auto vars:     Size  Location     Type
 13452 ;;  USBCtrlTrfRx    1    5[COMMON] unsigned char 
 13453 ;;  USBCtrlTrfRx    1    4[COMMON] unsigned char 
 13454 ;; Return value:  Size  Location     Type
 13455 ;;                  1    wreg      void 
 13456 ;; Registers used:
 13457 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13458 ;; Tracked objects:
 13459 ;;		On entry : 0/0
 13460 ;;		On exit  : 0/0
 13461 ;;		Unchanged: 0/0
 13462 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13464 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13465 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13466 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13467 ;;Total ram usage:        4 bytes
 13468 ;; Hardware stack levels used:    1
 13469 ;; Hardware stack levels required when called:    1
 13470 ;; This function calls:
 13471 ;;		i1_USBCtrlEPAllowStatusStage
 13472 ;; This function is called by:
 13473 ;;		i1_USBCtrlTrfOutHandler
 13474 ;; This function uses a non-reentrant model
 13475 ;;
 13476                           
 13477                           
 13478                           ;psect for function i1_USBCtrlTrfRxService
 13479  0F5D                     i1_USBCtrlTrfRxService:	
 13480                           
 13481                           ;usb_device.c: 1854: uint8_t byteToRead;
 13482                           ;usb_device.c: 1855: uint8_t i;
 13483                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 13484                           
 13485                           ;incstack = 0
 13486                           ; Regs used in i1_USBCtrlTrfRxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 13487  0F5D  0023               	movlb	3	; select bank3
 13488  0F5E  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 13489  0F5F  0086               	movwf	6
 13490  0F60  0187               	clrf	7
 13491  0F61  3F41               	moviw [1]fsr1
 13492  0F62  00F5               	movwf	i1USBCtrlTrfRxService@byteToRead
 13493                           
 13494                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 13495  0F63  0875               	movf	i1USBCtrlTrfRxService@byteToRead,w
 13496  0F64  00F2               	movwf	??i1_USBCtrlTrfRxService
 13497  0F65  01F3               	clrf	??i1_USBCtrlTrfRxService+1
 13498  0F66  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 13499  0F67  0234               	subwf	((_outPipes+1)^(0+384)+3),w	;volatile
 13500  0F68  1D03               	skipz
 13501  0F69  2F6C               	goto	u424_25
 13502  0F6A  0872               	movf	??i1_USBCtrlTrfRxService,w
 13503  0F6B  0233               	subwf	(_outPipes^(0+384)+3),w	;volatile
 13504  0F6C                     u424_25:	
 13505  0F6C  1803               	skipnc
 13506  0F6D  2F72               	goto	i1l477
 13507                           
 13508                           ;usb_device.c: 1866: {
 13509                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 13510  0F6E  0833               	movf	(_outPipes^(0+384)+3),w	;volatile
 13511  0F6F  00F2               	movwf	??i1_USBCtrlTrfRxService
 13512  0F70  0872               	movf	??i1_USBCtrlTrfRxService,w
 13513  0F71  00F5               	movwf	i1USBCtrlTrfRxService@byteToRead
 13514  0F72                     i1l477:	
 13515                           
 13516                           ;usb_device.c: 1868: }
 13517                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 13518  0F72  0875               	movf	i1USBCtrlTrfRxService@byteToRead,w
 13519  0F73  00F2               	movwf	??i1_USBCtrlTrfRxService
 13520  0F74  01F3               	clrf	??i1_USBCtrlTrfRxService+1
 13521  0F75  0872               	movf	??i1_USBCtrlTrfRxService,w
 13522  0F76  02B3               	subwf	(_outPipes^(0+384)+3),f	;volatile
 13523  0F77  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 13524  0F78  3BB4               	subwfb	((_outPipes+1)^(0+384)+3),f	;volatile
 13525                           
 13526                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 13527  0F79  01F4               	clrf	i1USBCtrlTrfRxService@i
 13528  0F7A                     i1l4394:	
 13529  0F7A  0875               	movf	i1USBCtrlTrfRxService@byteToRead,w
 13530  0F7B  0274               	subwf	i1USBCtrlTrfRxService@i,w
 13531  0F7C  1803               	btfsc	3,0
 13532  0F7D  2F93               	goto	i1l4396
 13533                           
 13534                           ;usb_device.c: 1875: {
 13535                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 13536  0F7E  0874               	movf	i1USBCtrlTrfRxService@i,w
 13537  0F7F  3E58               	addlw	88
 13538  0F80  0086               	movwf	6
 13539  0F81  0187               	clrf	7
 13540  0F82  0801               	movf	1,w
 13541  0F83  00F2               	movwf	??i1_USBCtrlTrfRxService
 13542  0F84  0830               	movf	_outPipes^(0+384),w	;volatile
 13543  0F85  0086               	movwf	6
 13544  0F86  3002               	movlw	2	; select bank4/5
 13545  0F87  0087               	movwf	7
 13546  0F88  0872               	movf	??i1_USBCtrlTrfRxService,w
 13547  0F89  0081               	movwf	1
 13548  0F8A  3001               	movlw	1
 13549  0F8B  00F2               	movwf	??i1_USBCtrlTrfRxService
 13550  0F8C  0872               	movf	??i1_USBCtrlTrfRxService,w
 13551  0F8D  07B0               	addwf	_outPipes^(0+384),f	;volatile
 13552  0F8E  3001               	movlw	1
 13553  0F8F  00F2               	movwf	??i1_USBCtrlTrfRxService
 13554  0F90  0872               	movf	??i1_USBCtrlTrfRxService,w
 13555  0F91  07F4               	addwf	i1USBCtrlTrfRxService@i,f
 13556  0F92  2F7A               	goto	i1l4394
 13557  0F93                     i1l4396:	
 13558                           
 13559                           ;usb_device.c: 1877: }
 13560                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 13561  0F93  0833               	movf	(_outPipes^(0+384)+3),w	;volatile
 13562  0F94  0434               	iorwf	((_outPipes+1)^(0+384)+3),w	;volatile
 13563  0F95  1903               	btfsc	3,2
 13564  0F96  2FD1               	goto	i1l4408
 13565                           
 13566                           ;usb_device.c: 1882: {
 13567                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 13568  0F97  0021               	movlb	1	; select bank1
 13569  0F98  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13570  0F99  3E01               	addlw	1
 13571  0F9A  00F2               	movwf	??i1_USBCtrlTrfRxService
 13572  0F9B  3000               	movlw	0
 13573  0F9C  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13574  0F9D  00F3               	movwf	??i1_USBCtrlTrfRxService+1
 13575  0F9E  0872               	movf	??i1_USBCtrlTrfRxService,w
 13576  0F9F  0086               	movwf	6
 13577  0FA0  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 13578  0FA1  0087               	movwf	7
 13579  0FA2  3008               	movlw	8
 13580  0FA3  0081               	movwf	1
 13581                           
 13582                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
 13583  0FA4  3058               	movlw	88
 13584  0FA5  00F2               	movwf	??i1_USBCtrlTrfRxService
 13585  0FA6  3000               	movlw	0
 13586  0FA7  00F3               	movwf	??i1_USBCtrlTrfRxService+1
 13587  0FA8  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13588  0FA9  0086               	movwf	6
 13589  0FAA  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13590  0FAB  0087               	movwf	7
 13591  0FAC  3142               	addfsr 1,2
 13592  0FAD  0872               	movf	??i1_USBCtrlTrfRxService,w
 13593  0FAE  3FC0               	movwi [0]fsr1
 13594  0FAF  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 13595  0FB0  3FC1               	movwi [1]fsr1
 13596                           
 13597                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 13598  0FB1  0023               	movlb	3	; select bank3
 13599  0FB2  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 13600  0FB3  0086               	movwf	6
 13601  0FB4  0187               	clrf	7
 13602  0FB5  1B01               	btfsc	1,6
 13603  0FB6  2FC4               	goto	i1l4406
 13604                           
 13605                           ;usb_device.c: 1886: {
 13606                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 13607  0FB7  0021               	movlb	1	; select bank1
 13608  0FB8  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13609  0FB9  0086               	movwf	6
 13610  0FBA  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13611  0FBB  0087               	movwf	7
 13612  0FBC  3048               	movlw	72
 13613  0FBD  0081               	movwf	1
 13614                           
 13615                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13616  0FBE  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13617  0FBF  0086               	movwf	6
 13618  0FC0  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13619  0FC1  0087               	movwf	7
 13620  0FC2  1781               	bsf	1,7
 13621                           
 13622                           ;usb_device.c: 1889: }
 13623  0FC3  0008               	return
 13624  0FC4                     i1l4406:	
 13625                           
 13626                           ;usb_device.c: 1890: else
 13627                           ;usb_device.c: 1891: {
 13628                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 13629  0FC4  0021               	movlb	1	; select bank1
 13630  0FC5  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13631  0FC6  0086               	movwf	6
 13632  0FC7  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13633  0FC8  0087               	movwf	7
 13634  0FC9  3008               	movlw	8
 13635  0FCA  0081               	movwf	1
 13636                           
 13637                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13638  0FCB  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13639  0FCC  0086               	movwf	6
 13640  0FCD  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13641  0FCE  0087               	movwf	7
 13642  0FCF  1781               	bsf	1,7
 13643                           
 13644                           ;usb_device.c: 1894: }
 13645                           ;usb_device.c: 1895: }
 13646  0FD0  0008               	return
 13647  0FD1                     i1l4408:	
 13648                           
 13649                           ;usb_device.c: 1896: else
 13650                           ;usb_device.c: 1897: {
 13651                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 13652  0FD1  0021               	movlb	1	; select bank1
 13653  0FD2  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13654  0FD3  3E01               	addlw	1
 13655  0FD4  00F2               	movwf	??i1_USBCtrlTrfRxService
 13656  0FD5  3000               	movlw	0
 13657  0FD6  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13658  0FD7  00F3               	movwf	??i1_USBCtrlTrfRxService+1
 13659  0FD8  0872               	movf	??i1_USBCtrlTrfRxService,w
 13660  0FD9  0086               	movwf	6
 13661  0FDA  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 13662  0FDB  0087               	movwf	7
 13663  0FDC  3008               	movlw	8
 13664  0FDD  0081               	movwf	1
 13665                           
 13666                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 13667  0FDE  3050               	movlw	80
 13668  0FDF  00F2               	movwf	??i1_USBCtrlTrfRxService
 13669  0FE0  3000               	movlw	0
 13670  0FE1  00F3               	movwf	??i1_USBCtrlTrfRxService+1
 13671  0FE2  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13672  0FE3  0086               	movwf	6
 13673  0FE4  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13674  0FE5  0087               	movwf	7
 13675  0FE6  3142               	addfsr 1,2
 13676  0FE7  0872               	movf	??i1_USBCtrlTrfRxService,w
 13677  0FE8  3FC0               	movwi [0]fsr1
 13678  0FE9  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 13679  0FEA  3FC1               	movwi [1]fsr1
 13680                           
 13681                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 13682  0FEB  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13683  0FEC  0086               	movwf	6
 13684  0FED  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13685  0FEE  0087               	movwf	7
 13686  0FEF  3004               	movlw	4
 13687  0FF0  0081               	movwf	1
 13688                           
 13689                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13690  0FF1  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13691  0FF2  0086               	movwf	6
 13692  0FF3  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13693  0FF4  0087               	movwf	7
 13694  0FF5  1781               	bsf	1,7
 13695                           
 13696                           ;usb_device.c: 1915: {
 13697                           ;usb_device.c: 1921: outPipes[0].pFunc();
 13698  0FF6  0023               	movlb	3	; select bank3
 13699  0FF7  0835               	movf	(low ((_outPipes| (0+256)+5)))^(0+128),w	;volatile
 13700  0FF8  0836               	movf	((low ((_outPipes| (0+256)+5))+1))^(0+128),w	;volatile
 13701                           
 13702                           ;usb_device.c: 1926: }
 13703                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 13704  0FF9  13B2               	bcf	(_outPipes^(0+384)+2),7	;volatile
 13705                           
 13706                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 13707  0FFA  085B               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
 13708  0FFB  1D03               	btfss	3,2
 13709  0FFC  0008               	return
 13710                           
 13711                           ;usb_device.c: 1942: {
 13712                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 13713  0FFD  3189  2164         	fcall	i1_USBCtrlEPAllowStatusStage
 13714  0FFF  0008               	return
 13715  1000                     __end_ofi1_USBCtrlTrfRxService:	
 13716                           
 13717                           	psect	text63
 13718  0964                     __ptext63:	
 13719 ;; *************** function i1_USBCtrlEPAllowStatusStage *****************
 13720 ;; Defined at:
 13721 ;;		line 1416 in file "mcc_generated_files/usb/usb_device.c"
 13722 ;; Parameters:    Size  Location     Type
 13723 ;;		None
 13724 ;; Auto vars:     Size  Location     Type
 13725 ;;		None
 13726 ;; Return value:  Size  Location     Type
 13727 ;;                  1    wreg      void 
 13728 ;; Registers used:
 13729 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13730 ;; Tracked objects:
 13731 ;;		On entry : 0/0
 13732 ;;		On exit  : 0/0
 13733 ;;		Unchanged: 0/0
 13734 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13737 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13738 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13739 ;;Total ram usage:        2 bytes
 13740 ;; Hardware stack levels used:    1
 13741 ;; This function calls:
 13742 ;;		Nothing
 13743 ;; This function is called by:
 13744 ;;		i1_USBDeviceTasks
 13745 ;;		i1_USBCtrlEPServiceComplete
 13746 ;;		i1_USBCtrlTrfRxService
 13747 ;; This function uses a non-reentrant model
 13748 ;;
 13749                           
 13750                           
 13751                           ;psect for function i1_USBCtrlEPAllowStatusStage
 13752  0964                     i1_USBCtrlEPAllowStatusStage:	
 13753                           
 13754                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 13755                           
 13756                           ;incstack = 0
 13757                           ; Regs used in i1_USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
 13758  0964  0023               	movlb	3	; select bank3
 13759  0965  085A               	movf	_USBStatusStageEnabledFlag1^(0+384),w	;volatile
 13760  0966  1D03               	btfss	3,2
 13761  0967  0008               	return
 13762                           
 13763                           ;usb_device.c: 1424: {
 13764                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 13765  0968  3001               	movlw	1
 13766  0969  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 13767  096A  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 13768  096B  00DA               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
 13769                           
 13770                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 13771  096C  0859               	movf	_USBStatusStageEnabledFlag2^(0+384),w	;volatile
 13772  096D  1D03               	btfss	3,2
 13773  096E  0008               	return
 13774                           
 13775                           ;usb_device.c: 1427: {
 13776                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 13777  096F  3001               	movlw	1
 13778  0970  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 13779  0971  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 13780  0972  00D9               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
 13781                           
 13782                           ;usb_device.c: 1432: if(controlTransferState == 2)
 13783  0973  3002               	movlw	2
 13784  0974  0662               	xorwf	_controlTransferState^(0+384),w	;volatile
 13785  0975  1D03               	btfss	3,2
 13786  0976  2989               	goto	i1l3944
 13787                           
 13788                           ;usb_device.c: 1433: {
 13789                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 13790  0977  0837               	movf	_pBDTEntryIn^(0+384),w
 13791  0978  0086               	movwf	6
 13792  0979  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 13793  097A  0087               	movwf	7
 13794  097B  3141               	addfsr 1,1
 13795  097C  0181               	clrf	1
 13796                           
 13797                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 13798  097D  0837               	movf	_pBDTEntryIn^(0+384),w
 13799  097E  0086               	movwf	6
 13800  097F  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 13801  0980  0087               	movwf	7
 13802  0981  3048               	movlw	72
 13803  0982  0081               	movwf	1
 13804                           
 13805                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13806  0983  0837               	movf	_pBDTEntryIn^(0+384),w
 13807  0984  0086               	movwf	6
 13808  0985  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 13809  0986  0087               	movwf	7
 13810  0987  1781               	bsf	1,7
 13811                           
 13812                           ;usb_device.c: 1437: }
 13813  0988  0008               	return
 13814  0989                     i1l3944:	
 13815                           
 13816                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 13817  0989  0362               	decf	_controlTransferState^(0+384),w	;volatile
 13818  098A  1D03               	btfss	3,2
 13819  098B  0008               	return
 13820                           
 13821                           ;usb_device.c: 1439: {
 13822                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 13823  098C  01DD               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
 13824                           
 13825                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 13826  098D  3008               	movlw	8
 13827  098E  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 13828  098F  0A64               	incf	_pBDTEntryEP0OutCurrent^(0+384),w
 13829  0990  0086               	movwf	6
 13830  0991  0187               	clrf	7
 13831  0992  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 13832  0993  0081               	movwf	1
 13833                           
 13834                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 13835  0994  3050               	movlw	80
 13836  0995  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 13837  0996  3000               	movlw	0
 13838  0997  00F1               	movwf	??i1_USBCtrlEPAllowStatusStage+1
 13839  0998  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 13840  0999  3E02               	addlw	2
 13841  099A  0086               	movwf	6
 13842  099B  0187               	clrf	7
 13843  099C  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 13844  099D  3FC0               	movwi [0]fsr1
 13845  099E  0871               	movf	??i1_USBCtrlEPAllowStatusStage+1,w
 13846  099F  3FC1               	movwi [1]fsr1
 13847                           
 13848                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 13849  09A0  3004               	movlw	4
 13850  09A1  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 13851  09A2  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 13852  09A3  0086               	movwf	6
 13853  09A4  0187               	clrf	7
 13854  09A5  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 13855  09A6  0081               	movwf	1
 13856                           
 13857                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 13858  09A7  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 13859  09A8  0086               	movwf	6
 13860  09A9  0187               	clrf	7
 13861  09AA  1781               	bsf	1,7
 13862                           
 13863                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 13864  09AB  3001               	movlw	1
 13865  09AC  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 13866  09AD  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 13867  09AE  00DD               	movwf	_BothEP0OutUOWNsSet^(0+384)	;volatile
 13868                           
 13869                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 13870  09AF  0021               	movlb	1	; select bank1
 13871  09B0  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13872  09B1  3E01               	addlw	1
 13873  09B2  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 13874  09B3  3000               	movlw	0
 13875  09B4  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13876  09B5  00F1               	movwf	??i1_USBCtrlEPAllowStatusStage+1
 13877  09B6  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 13878  09B7  0086               	movwf	6
 13879  09B8  0871               	movf	??i1_USBCtrlEPAllowStatusStage+1,w
 13880  09B9  0087               	movwf	7
 13881  09BA  3008               	movlw	8
 13882  09BB  0081               	movwf	1
 13883                           
 13884                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 13885  09BC  3050               	movlw	80
 13886  09BD  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 13887  09BE  3000               	movlw	0
 13888  09BF  00F1               	movwf	??i1_USBCtrlEPAllowStatusStage+1
 13889  09C0  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13890  09C1  0086               	movwf	6
 13891  09C2  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13892  09C3  0087               	movwf	7
 13893  09C4  3142               	addfsr 1,2
 13894  09C5  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 13895  09C6  3FC0               	movwi [0]fsr1
 13896  09C7  0871               	movf	??i1_USBCtrlEPAllowStatusStage+1,w
 13897  09C8  3FC1               	movwi [1]fsr1
 13898                           
 13899                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 13900  09C9  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 13901  09CA  0086               	movwf	6
 13902  09CB  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 13903  09CC  0087               	movwf	7
 13904  09CD  3080               	movlw	128
 13905  09CE  0081               	movwf	1
 13906  09CF  0008               	return
 13907  09D0                     __end_ofi1_USBCtrlEPAllowStatusStage:	
 13908                           
 13909                           	psect	text64
 13910  08FC                     __ptext64:	
 13911 ;; *************** function i1_USBCtrlTrfInHandler *****************
 13912 ;; Defined at:
 13913 ;;		line 2592 in file "mcc_generated_files/usb/usb_device.c"
 13914 ;; Parameters:    Size  Location     Type
 13915 ;;		None
 13916 ;; Auto vars:     Size  Location     Type
 13917 ;;  USBCtrlTrfIn    1    5[COMMON] unsigned char 
 13918 ;; Return value:  Size  Location     Type
 13919 ;;                  1    wreg      void 
 13920 ;; Registers used:
 13921 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13922 ;; Tracked objects:
 13923 ;;		On entry : 0/0
 13924 ;;		On exit  : 0/0
 13925 ;;		Unchanged: 0/0
 13926 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13928 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13929 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13930 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13931 ;;Total ram usage:        3 bytes
 13932 ;; Hardware stack levels used:    1
 13933 ;; Hardware stack levels required when called:    1
 13934 ;; This function calls:
 13935 ;;		i1_USBCtrlTrfTxService
 13936 ;; This function is called by:
 13937 ;;		i1_USBCtrlEPService
 13938 ;; This function uses a non-reentrant model
 13939 ;;
 13940                           
 13941                           
 13942                           ;psect for function i1_USBCtrlTrfInHandler
 13943  08FC                     i1_USBCtrlTrfInHandler:	
 13944                           
 13945                           ;usb_device.c: 2594: uint8_t lastDTS;
 13946                           ;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 13947                           
 13948                           ;incstack = 0
 13949                           ; Regs used in i1_USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13950  08FC  0023               	movlb	3	; select bank3
 13951  08FD  0837               	movf	_pBDTEntryIn^(0+384),w
 13952  08FE  0086               	movwf	6
 13953  08FF  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 13954  0900  0087               	movwf	7
 13955  0901  3000               	movlw	0
 13956  0902  1B01               	btfsc	1,6
 13957  0903  3001               	movlw	1
 13958  0904  00F5               	movwf	i1USBCtrlTrfInHandler@lastDTS
 13959                           
 13960                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 13961  0905  3004               	movlw	4
 13962  0906  0637               	xorwf	_pBDTEntryIn^(0+384),w
 13963  0907  00B7               	movwf	_pBDTEntryIn^(0+384)
 13964  0908  3000               	movlw	0
 13965  0909  0638               	xorwf	(_pBDTEntryIn+1)^(0+384),w
 13966  090A  00B8               	movwf	(_pBDTEntryIn+1)^(0+384)
 13967                           
 13968                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
 13969  090B  3008               	movlw	8
 13970  090C  0665               	xorwf	_USBDeviceState^(0+384),w	;volatile
 13971  090D  1D03               	btfss	3,2
 13972  090E  291E               	goto	i1l4600
 13973                           
 13974                           ;usb_device.c: 2605: {
 13975                           ;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
 13976  090F  0020               	movlb	0	; select bank0
 13977  0910  0852               	movf	82,w	;volatile
 13978  0911  397F               	andlw	127
 13979  0912  003D               	movlb	29	; select bank29
 13980  0913  0096               	movwf	22	;volatile
 13981                           
 13982                           ;usb_device.c: 2607: if(UADDR != 0u)
 13983  0914  0816               	movf	22,w	;volatile
 13984  0915  1903               	btfsc	3,2
 13985  0916  2919               	goto	i1l4598
 13986                           
 13987                           ;usb_device.c: 2608: {
 13988                           ;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
 13989  0917  3010               	movlw	16
 13990  0918  291A               	goto	L19
 13991  0919                     i1l4598:	
 13992                           ;usb_device.c: 2610: }
 13993                           
 13994                           
 13995                           ;usb_device.c: 2611: else
 13996                           ;usb_device.c: 2612: {
 13997                           ;usb_device.c: 2613: USBDeviceState=DEFAULT_STATE;
 13998  0919  3004               	movlw	4
 13999  091A                     L19:	
 14000  091A  00F3               	movwf	??i1_USBCtrlTrfInHandler
 14001  091B  0873               	movf	??i1_USBCtrlTrfInHandler,w
 14002  091C  0023               	movlb	3	; select bank3
 14003  091D  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
 14004  091E                     i1l4600:	
 14005                           
 14006                           ;usb_device.c: 2614: }
 14007                           ;usb_device.c: 2615: }
 14008                           ;usb_device.c: 2618: if(controlTransferState == 1)
 14009  091E  0362               	decf	_controlTransferState^(0+384),w	;volatile
 14010  091F  1D03               	btfss	3,2
 14011  0920  295D               	goto	i1l562
 14012                           
 14013                           ;usb_device.c: 2619: {
 14014                           ;usb_device.c: 2620: pBDTEntryIn[0]->ADR = (((uint16_t)(CtrlTrfData)) & 0x7FFF);
 14015  0921  3058               	movlw	88
 14016  0922  00F3               	movwf	??i1_USBCtrlTrfInHandler
 14017  0923  3000               	movlw	0
 14018  0924  00F4               	movwf	??i1_USBCtrlTrfInHandler+1
 14019  0925  0837               	movf	_pBDTEntryIn^(0+384),w
 14020  0926  0086               	movwf	6
 14021  0927  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 14022  0928  0087               	movwf	7
 14023  0929  3142               	addfsr 1,2
 14024  092A  0873               	movf	??i1_USBCtrlTrfInHandler,w
 14025  092B  3FC0               	movwi [0]fsr1
 14026  092C  0874               	movf	??i1_USBCtrlTrfInHandler+1,w
 14027  092D  3FC1               	movwi [1]fsr1
 14028                           
 14029                           ;usb_device.c: 2621: USBCtrlTrfTxService();
 14030  092E  318A  2241  3188   	fcall	i1_USBCtrlTrfTxService
 14031                           
 14032                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
 14033  0931  3002               	movlw	2
 14034  0932  0023               	movlb	3	; select bank3
 14035  0933  0663               	xorwf	_shortPacketStatus^(0+384),w	;volatile
 14036  0934  1D03               	btfss	3,2
 14037  0935  2942               	goto	i1l4610
 14038                           
 14039                           ;usb_device.c: 2628: {
 14040                           ;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
 14041  0936  0837               	movf	_pBDTEntryIn^(0+384),w
 14042  0937  0086               	movwf	6
 14043  0938  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 14044  0939  0087               	movwf	7
 14045  093A  3004               	movlw	4
 14046  093B  0081               	movwf	1
 14047                           
 14048                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
 14049  093C  0837               	movf	_pBDTEntryIn^(0+384),w
 14050  093D  0086               	movwf	6
 14051  093E  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 14052  093F  0087               	movwf	7
 14053  0940  1781               	bsf	1,7
 14054                           
 14055                           ;usb_device.c: 2633: }
 14056  0941  0008               	return
 14057  0942                     i1l4610:	
 14058                           
 14059                           ;usb_device.c: 2634: else
 14060                           ;usb_device.c: 2635: {
 14061                           ;usb_device.c: 2636: if(lastDTS == 0)
 14062  0942  0875               	movf	i1USBCtrlTrfInHandler@lastDTS,w
 14063  0943  1D03               	btfss	3,2
 14064  0944  2951               	goto	i1l4614
 14065                           
 14066                           ;usb_device.c: 2637: {
 14067                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 14068  0945  0837               	movf	_pBDTEntryIn^(0+384),w
 14069  0946  0086               	movwf	6
 14070  0947  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 14071  0948  0087               	movwf	7
 14072  0949  3048               	movlw	72
 14073  094A  0081               	movwf	1
 14074                           
 14075                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
 14076  094B  0837               	movf	_pBDTEntryIn^(0+384),w
 14077  094C  0086               	movwf	6
 14078  094D  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 14079  094E  0087               	movwf	7
 14080  094F  1781               	bsf	1,7
 14081                           
 14082                           ;usb_device.c: 2640: }
 14083  0950  0008               	return
 14084  0951                     i1l4614:	
 14085                           
 14086                           ;usb_device.c: 2641: else
 14087                           ;usb_device.c: 2642: {
 14088                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 14089  0951  0837               	movf	_pBDTEntryIn^(0+384),w
 14090  0952  0086               	movwf	6
 14091  0953  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 14092  0954  0087               	movwf	7
 14093  0955  3008               	movlw	8
 14094  0956  0081               	movwf	1
 14095                           
 14096                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
 14097  0957  0837               	movf	_pBDTEntryIn^(0+384),w
 14098  0958  0086               	movwf	6
 14099  0959  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 14100  095A  0087               	movwf	7
 14101  095B  1781               	bsf	1,7
 14102                           
 14103                           ;usb_device.c: 2645: }
 14104                           ;usb_device.c: 2646: }
 14105                           ;usb_device.c: 2647: }
 14106  095C  0008               	return
 14107  095D                     i1l562:	
 14108                           
 14109                           ;usb_device.c: 2648: else
 14110                           ;usb_device.c: 2649: {
 14111                           ;usb_device.c: 2653: if(outPipes[0].info.bits.busy == 1)
 14112  095D  1FB2               	btfss	(_outPipes^(0+384)+2),7	;volatile
 14113  095E  2962               	goto	i1l4618
 14114                           
 14115                           ;usb_device.c: 2656: {
 14116                           ;usb_device.c: 2657: outPipes[0].pFunc();
 14117  095F  0835               	movf	(low ((_outPipes| (0+256)+5)))^(0+128),w	;volatile
 14118  0960  0836               	movf	((low ((_outPipes| (0+256)+5))+1))^(0+128),w	;volatile
 14119                           
 14120                           ;usb_device.c: 2658: }
 14121                           ;usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
 14122  0961  13B2               	bcf	(_outPipes^(0+384)+2),7	;volatile
 14123  0962                     i1l4618:	
 14124                           
 14125                           ;usb_device.c: 2660: }
 14126                           ;usb_device.c: 2662: controlTransferState = 0;
 14127  0962  01E2               	clrf	_controlTransferState^(0+384)	;volatile
 14128  0963  0008               	return
 14129  0964                     __end_ofi1_USBCtrlTrfInHandler:	
 14130                           
 14131                           	psect	text65
 14132  0A41                     __ptext65:	
 14133 ;; *************** function i1_USBCtrlTrfTxService *****************
 14134 ;; Defined at:
 14135 ;;		line 1771 in file "mcc_generated_files/usb/usb_device.c"
 14136 ;; Parameters:    Size  Location     Type
 14137 ;;		None
 14138 ;; Auto vars:     Size  Location     Type
 14139 ;;  USBCtrlTrfTx    1    2[COMMON] unsigned char 
 14140 ;; Return value:  Size  Location     Type
 14141 ;;                  1    wreg      void 
 14142 ;; Registers used:
 14143 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 14144 ;; Tracked objects:
 14145 ;;		On entry : 0/0
 14146 ;;		On exit  : 0/0
 14147 ;;		Unchanged: 0/0
 14148 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14150 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14151 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14152 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14153 ;;Total ram usage:        3 bytes
 14154 ;; Hardware stack levels used:    1
 14155 ;; This function calls:
 14156 ;;		Nothing
 14157 ;; This function is called by:
 14158 ;;		i1_USBCtrlEPAllowDataStage
 14159 ;;		i1_USBCtrlTrfInHandler
 14160 ;; This function uses a non-reentrant model
 14161 ;;
 14162                           
 14163                           
 14164                           ;psect for function i1_USBCtrlTrfTxService
 14165  0A41                     i1_USBCtrlTrfTxService:	
 14166                           
 14167                           ;usb_device.c: 1773: uint8_t byteToSend;
 14168                           ;usb_device.c: 1777: byteToSend = 8;
 14169                           
 14170                           ;incstack = 0
 14171                           ; Regs used in i1_USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
 14172  0A41  3008               	movlw	8
 14173  0A42  00F0               	movwf	??i1_USBCtrlTrfTxService
 14174  0A43  0870               	movf	??i1_USBCtrlTrfTxService,w
 14175  0A44  00F2               	movwf	i1USBCtrlTrfTxService@byteToSend
 14176                           
 14177                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 14178  0A45  3000               	movlw	0
 14179  0A46  0021               	movlb	1	; select bank1
 14180  0A47  0247               	subwf	((_inPipes+1)^(0+128)+3),w	;volatile
 14181  0A48  3008               	movlw	8
 14182  0A49  1903               	skipnz
 14183  0A4A  0246               	subwf	(_inPipes^(0+128)+3),w	;volatile
 14184  0A4B  1803               	skipnc
 14185  0A4C  2A5E               	goto	i1l462
 14186                           
 14187                           ;usb_device.c: 1779: {
 14188                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 14189  0A4D  0846               	movf	(_inPipes^(0+128)+3),w	;volatile
 14190  0A4E  00F0               	movwf	??i1_USBCtrlTrfTxService
 14191  0A4F  0870               	movf	??i1_USBCtrlTrfTxService,w
 14192  0A50  00F2               	movwf	i1USBCtrlTrfTxService@byteToSend
 14193                           
 14194                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 14195  0A51  0023               	movlb	3	; select bank3
 14196  0A52  0863               	movf	_shortPacketStatus^(0+384),w	;volatile
 14197  0A53  1D03               	btfss	3,2
 14198  0A54  2A57               	goto	i1l3632
 14199                           
 14200                           ;usb_device.c: 1788: {
 14201                           ;usb_device.c: 1789: shortPacketStatus = 1;
 14202  0A55  3001               	movlw	1
 14203  0A56  2A5B               	goto	L20
 14204  0A57                     i1l3632:	
 14205                           ;usb_device.c: 1790: }
 14206                           
 14207                           
 14208                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 14209  0A57  0363               	decf	_shortPacketStatus^(0+384),w	;volatile
 14210  0A58  1D03               	btfss	3,2
 14211  0A59  2A5E               	goto	i1l462
 14212                           
 14213                           ;usb_device.c: 1792: {
 14214                           ;usb_device.c: 1793: shortPacketStatus = 2;
 14215  0A5A  3002               	movlw	2
 14216  0A5B                     L20:	
 14217  0A5B  00F0               	movwf	??i1_USBCtrlTrfTxService
 14218  0A5C  0870               	movf	??i1_USBCtrlTrfTxService,w
 14219  0A5D  00E3               	movwf	_shortPacketStatus^(0+384)	;volatile
 14220  0A5E                     i1l462:	
 14221                           
 14222                           ;usb_device.c: 1794: }
 14223                           ;usb_device.c: 1795: }
 14224                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 14225  0A5E  0872               	movf	i1USBCtrlTrfTxService@byteToSend,w
 14226  0A5F  00F0               	movwf	??i1_USBCtrlTrfTxService
 14227  0A60  01F1               	clrf	??i1_USBCtrlTrfTxService+1
 14228  0A61  0870               	movf	??i1_USBCtrlTrfTxService,w
 14229  0A62  0021               	movlb	1	; select bank1
 14230  0A63  02C6               	subwf	(_inPipes^(0+128)+3),f	;volatile
 14231  0A64  0871               	movf	??i1_USBCtrlTrfTxService+1,w
 14232  0A65  3BC7               	subwfb	((_inPipes+1)^(0+128)+3),f	;volatile
 14233                           
 14234                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 14235  0A66  0023               	movlb	3	; select bank3
 14236  0A67  0837               	movf	_pBDTEntryIn^(0+384),w
 14237  0A68  3E01               	addlw	1
 14238  0A69  00F0               	movwf	??i1_USBCtrlTrfTxService
 14239  0A6A  3000               	movlw	0
 14240  0A6B  3D38               	addwfc	(_pBDTEntryIn+1)^(0+384),w
 14241  0A6C  00F1               	movwf	??i1_USBCtrlTrfTxService+1
 14242  0A6D  0870               	movf	??i1_USBCtrlTrfTxService,w
 14243  0A6E  0086               	movwf	6
 14244  0A6F  0871               	movf	??i1_USBCtrlTrfTxService+1,w
 14245  0A70  0087               	movwf	7
 14246  0A71  0872               	movf	i1USBCtrlTrfTxService@byteToSend,w
 14247  0A72  0081               	movwf	1
 14248                           
 14249                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 14250  0A73  3058               	movlw	88
 14251  0A74  00F0               	movwf	??i1_USBCtrlTrfTxService
 14252  0A75  0870               	movf	??i1_USBCtrlTrfTxService,w
 14253  0A76  00E1               	movwf	_pDst^(0+384)
 14254                           
 14255                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 14256  0A77  0021               	movlb	1	; select bank1
 14257  0A78  1C45               	btfss	(_inPipes^(0+128)+2),0	;volatile
 14258  0A79  2A94               	goto	i1l3652
 14259  0A7A  2AB1               	goto	i1l3662
 14260  0A7B                     i1l3644:	
 14261                           ;usb_device.c: 1810: {
 14262                           ;usb_device.c: 1811: while(byteToSend)
 14263                           
 14264                           
 14265                           ;usb_device.c: 1812: {
 14266                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 14267  0A7B  0021               	movlb	1	; select bank1
 14268  0A7C  0843               	movf	_inPipes^(0+128),w	;volatile
 14269  0A7D  0084               	movwf	4
 14270  0A7E  0844               	movf	(_inPipes+1)^(0+128),w	;volatile
 14271  0A7F  0085               	movwf	5
 14272  0A80  0800               	movf	0,w	;code access
 14273  0A81  00F0               	movwf	??i1_USBCtrlTrfTxService
 14274  0A82  0023               	movlb	3	; select bank3
 14275  0A83  0861               	movf	_pDst^(0+384),w
 14276  0A84  0086               	movwf	6
 14277  0A85  0187               	clrf	7
 14278  0A86  0870               	movf	??i1_USBCtrlTrfTxService,w
 14279  0A87  0081               	movwf	1
 14280  0A88  3001               	movlw	1
 14281  0A89  0021               	movlb	1	; select bank1
 14282  0A8A  07C3               	addwf	_inPipes^(0+128),f	;volatile
 14283  0A8B  3000               	movlw	0
 14284  0A8C  3DC4               	addwfc	(_inPipes+1)^(0+128),f	;volatile
 14285  0A8D  3001               	movlw	1
 14286  0A8E  00F0               	movwf	??i1_USBCtrlTrfTxService
 14287  0A8F  0870               	movf	??i1_USBCtrlTrfTxService,w
 14288  0A90  0023               	movlb	3	; select bank3
 14289  0A91  07E1               	addwf	_pDst^(0+384),f
 14290                           
 14291                           ;usb_device.c: 1814: byteToSend--;
 14292  0A92  3001               	movlw	1
 14293  0A93  02F2               	subwf	i1USBCtrlTrfTxService@byteToSend,f
 14294  0A94                     i1l3652:	
 14295  0A94  0872               	movf	i1USBCtrlTrfTxService@byteToSend,w
 14296  0A95  1903               	btfsc	3,2
 14297  0A96  0008               	return
 14298  0A97  2A7B               	goto	i1l3644
 14299  0A98                     i1l3654:	
 14300                           ;usb_device.c: 1817: else
 14301                           ;usb_device.c: 1818: {
 14302                           ;usb_device.c: 1819: while(byteToSend)
 14303                           
 14304                           ;usb_device.c: 1815: }
 14305                           ;usb_device.c: 1816: }
 14306                           
 14307                           
 14308                           ;usb_device.c: 1820: {
 14309                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 14310  0A98  0021               	movlb	1	; select bank1
 14311  0A99  0843               	movf	_inPipes^(0+128),w	;volatile
 14312  0A9A  0084               	movwf	4
 14313  0A9B  0844               	movf	(_inPipes+1)^(0+128),w	;volatile
 14314  0A9C  0085               	movwf	5
 14315  0A9D  0800               	movf	0,w	;code access
 14316  0A9E  00F0               	movwf	??i1_USBCtrlTrfTxService
 14317  0A9F  0023               	movlb	3	; select bank3
 14318  0AA0  0861               	movf	_pDst^(0+384),w
 14319  0AA1  0086               	movwf	6
 14320  0AA2  0187               	clrf	7
 14321  0AA3  0870               	movf	??i1_USBCtrlTrfTxService,w
 14322  0AA4  0081               	movwf	1
 14323  0AA5  3001               	movlw	1
 14324  0AA6  0021               	movlb	1	; select bank1
 14325  0AA7  07C3               	addwf	_inPipes^(0+128),f	;volatile
 14326  0AA8  3000               	movlw	0
 14327  0AA9  3DC4               	addwfc	(_inPipes+1)^(0+128),f	;volatile
 14328  0AAA  3001               	movlw	1
 14329  0AAB  00F0               	movwf	??i1_USBCtrlTrfTxService
 14330  0AAC  0870               	movf	??i1_USBCtrlTrfTxService,w
 14331  0AAD  0023               	movlb	3	; select bank3
 14332  0AAE  07E1               	addwf	_pDst^(0+384),f
 14333                           
 14334                           ;usb_device.c: 1822: byteToSend--;
 14335  0AAF  3001               	movlw	1
 14336  0AB0  02F2               	subwf	i1USBCtrlTrfTxService@byteToSend,f
 14337  0AB1                     i1l3662:	
 14338  0AB1  0872               	movf	i1USBCtrlTrfTxService@byteToSend,w
 14339  0AB2  1903               	btfsc	3,2
 14340  0AB3  0008               	return
 14341  0AB4  2A98               	goto	i1l3654
 14342  0AB5                     __end_ofi1_USBCtrlTrfTxService:	
 14343  007E                     btemp	set	126	;btemp
 14344  007E                     int$flags	set	126
 14345  007E                     wtemp0	set	126


Data Sizes:
    Strings     3
    Constant    175
    Data        0
    BSS         227
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0h           16     16      16
    BANK1            48     35      42
    BANK2             0      0       0
    BANK3            64      1      64
    BANK4            80      5      34
    BANK5            80      0      64
    BANK6            80      0      64
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    __builtin_memcpy$1	PTR const void  size(2) Largest target is 4096
		 -> CtrlTrfData(BANK0h[8]), RAM(DATA[4096]), SetupPkt(ABS[8]), 

    __builtin_memcpy$0	PTR void  size(1) Largest target is 8
		 -> SetupPkt(ABS[8]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), USTATcopy(BANK3[1]), USBActiveConfiguration(BANK3[1]), BDT(ABS[48]), 
		 -> NULL(NULL[0]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 64
		 -> readBuffer(BANK5[64]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(ABS[48]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(ABS[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    sp____builtin_memcpy	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(ABS[48]), 

    USBStdSetCfgHandler@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    pDst	PTR volatile unsigned char  size(1) Largest target is 8
		 -> CtrlTrfData(BANK0h[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(1) Largest target is 48
		 -> BDT(ABS[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(1) Largest target is 48
		 -> BDT(ABS[48]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAM[64]), NULL(NULL[0]), cdc_data_rx(BIGRAM[64]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    USBDeviceInit@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[26]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    putrsUSBUSART@data	PTR const unsigned char  size(2) Largest target is 8192
		 -> ROM(CODE[8192]), 

    putrsUSBUSART@pData	PTR const unsigned char  size(2) Largest target is 8192
		 -> ROM(CODE[8192]), 

    getsUSBUSART@buffer	PTR unsigned char  size(1) Largest target is 64
		 -> readBuffer(BANK5[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    S475$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S465$wRam	PTR unsigned int  size(1) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(1) Largest target is 0

    S465$bRam	PTR unsigned char  size(1) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S440$wRom	PTR const unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S440$wRam	PTR unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S440$bRom	PTR const unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S440$bRam	PTR unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S207_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S207_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S207_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S207_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    i1_USBCtrlEPServiceComplete->i1_USBCtrlEPAllowDataStage
    i1_USBCtrlEPAllowDataStage->i1_USBCtrlTrfTxService
    i1_USER_USB_CALLBACK_EVENT_HANDLER->i1_CDCInitEP
    i1_CDCInitEP->i1_USBEnableEndpoint
    i1_USBEnableEndpoint->i1_USBConfigureEndpoint
    i1_USBCtrlTrfOutHandler->i1_USBCtrlTrfRxService
    i1_USBCtrlTrfRxService->i1_USBCtrlEPAllowStatusStage
    i1_USBCtrlTrfInHandler->i1_USBCtrlTrfTxService

Critical Paths under _main in BANK0h

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0h

    _INTERRUPT_InterruptManager->i1_USBDeviceTasks
    i1_USBWakeFromSuspend->i1_USER_USB_CALLBACK_EVENT_HANDLER
    i1_USBSuspend->i1_USER_USB_CALLBACK_EVENT_HANDLER
    i1_USBCtrlEPService->i1_USBCtrlTrfSetupHandler
    i1_USBCtrlTrfSetupHandler->i1_USBCheckStdRequest
    i1_USBCheckStdRequest->i1_USBStdFeatureReqHandler
    i1_USBStdSetCfgHandler->i1_USER_USB_CALLBACK_EVENT_HANDLER
    i1_USBStdFeatureReqHandler->i1_USER_USB_CALLBACK_EVENT_HANDLER

Critical Paths under _main in BANK1

    _UserApplication->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPService->_USBCtrlTrfSetupHandler
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCtrlEPServiceComplete->_USBCtrlEPAllowDataStage
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_CDCInitEP
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USBCtrlEPAllowStatusStage
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _SYSTEM_Initialize->_USBDeviceInit

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    _INTERRUPT_InterruptManager->i1_USBDeviceTasks
    i1_USBDeviceTasks->i1_USBCtrlEPService

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_USBDeviceTasks

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    _main->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   54479
                          _CDCInitEP
                  _SYSTEM_Initialize
                     _USBDeviceTasks
                    _UserApplication
 ---------------------------------------------------------------------------------
 (1) _UserApplication                                      4     4      0    5109
                                             21 BANK1      3     3      0
                       _CDCTxService
                       _getsUSBUSART
                      _putrsUSBUSART
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               5     3      2     216
                                              6 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (2) _putrsUSBUSART                                        8     6      2     202
                                              6 BANK1      8     6      2
 ---------------------------------------------------------------------------------
 (2) _getsUSBUSART                                         4     3      1    2332
                                             17 BANK1      4     3      1
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (2) _CDCTxService                                         3     3      0    2294
                                             17 BANK1      3     3      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       3     3      0   45929
                                              0 BANK3      1     1      0
                                              3 BANK4      2     2      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   1     1      0    6196
                                             26 BANK1      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           1     1      0    6196
                                             26 BANK1      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      1     1      0       0
                                              6 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBIncrement1msInternalTimers                        1     1      0       0
                                              6 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     3     3      0   26877
                                              0 BANK4      3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               1     1      0   26540
                                             34 BANK1      1     1      0
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             2     2      0     136
                                             11 BANK1      2     2      0
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              2     2      0     136
                                              9 BANK1      2     2      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   1     1      0   20208
                                             33 BANK1      1     1      0
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  5     5      0    7070
                                             26 BANK1      5     5      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6     639
                                              6 BANK1      8     2      6
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               3     3      0      68
                                              6 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  3     3      0       0
                                              6 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              7     7      0    6874
                                             26 BANK1      7     7      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USER_USB_CALLBACK_EVENT_HANDLER                      6     0      6    6196
                                             20 BANK1      6     0      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (3) _USBCheckCDCRequest                                   1     1      0       0
                                              6 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (3) _CDCInitEP                                            1     1      0    3045
                                             19 BANK1      1     1      0
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                11     7      4    2093
                                              6 BANK1     11     7      4
 ---------------------------------------------------------------------------------
 (4) _USBEnableEndpoint                                    6     5      1     952
                                             13 BANK1      6     5      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (5) _USBConfigureEndpoint                                 7     6      1     524
                                              6 BANK1      7     6      1
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 2     2      0     167
                                             12 BANK1      2     2      0
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  4     4      0     167
                                              8 BANK1      4     4      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            2     2      0       0
                                              6 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  3     3      0     170
                                              9 BANK1      3     3      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfTxService                                  3     3      0     136
                                              6 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     396
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        5     5      0     396
                                              6 BANK1      5     5      0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceAttach                                      1     1      0       0
                                              6 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          1     1      0   13677
                                              5 BANK1      1     1      0
                   i1_USBDeviceTasks
 ---------------------------------------------------------------------------------
 (11) i1_USBDeviceTasks                                    3     3      0   13677
                                             15 BANK0h     1     1      0
                                              3 BANK1      2     2      0
        i1_USBCtrlEPAllowStatusStage
                 i1_USBCtrlEPService
                    i1_USBDeviceInit
    i1_USBIncrement1msInternalTimers
                  i1_USBStallHandler
                       i1_USBSuspend
               i1_USBWakeFromSuspend
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) i1_USBWakeFromSuspend                                1     1      0    1737
                                              6 BANK0h     1     1      0
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) i1_USBSuspend                                        1     1      0    1737
                                              6 BANK0h     1     1      0
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) i1_USBStallHandler                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) i1_USBIncrement1msInternalTimers                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) i1_USBDeviceInit                                     5     5      0     272
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (12) i1_USBCtrlEPService                                  3     3      0    8148
                                              0 BANK1      3     3      0
              i1_USBCtrlTrfInHandler
             i1_USBCtrlTrfOutHandler
           i1_USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (13) i1_USBCtrlTrfSetupHandler                            1     1      0    7919
                                             14 BANK0h     1     1      0
               i1_USBCheckStdRequest
         i1_USBCtrlEPServiceComplete
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (14) i1_USBCtrlEPServiceComplete                          2     2      0      92
                                              5 COMMON     2     2      0
          i1_USBCtrlEPAllowDataStage
        i1_USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) i1_USBCtrlEPAllowDataStage                           2     2      0      92
                                              3 COMMON     2     2      0
              i1_USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (14) i1_USBCheckStdRequest                                1     1      0    6090
                                             13 BANK0h     1     1      0
          i1_USBStdFeatureReqHandler
              i1_USBStdGetDscHandler
           i1_USBStdGetStatusHandler
              i1_USBStdSetCfgHandler
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) i1_USBStdSetCfgHandler                               5     5      0    2099
                                              6 BANK0h     5     5      0
  i1_USER_USB_CALLBACK_EVENT_HANDLER
                           i1_memset
 ---------------------------------------------------------------------------------
 (16) i1_memset                                            8     2      6     202
                                              0 COMMON     8     2      6
 ---------------------------------------------------------------------------------
 (15) i1_USBStdGetStatusHandler                            3     3      0      46
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (15) i1_USBStdGetDscHandler                               3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (15) i1_USBStdFeatureReqHandler                           7     7      0    2208
                                              6 BANK0h     7     7      0
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) i1_USER_USB_CALLBACK_EVENT_HANDLER                   6     0      6    1737
                                              0 BANK0h     6     0      6
                        i1_CDCInitEP
               i1_USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (13) i1_USBCheckCDCRequest                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) i1_CDCInitEP                                         1     1      0     935
                                             13 COMMON     1     1      0
                i1_USBEnableEndpoint
             i1_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (14) i1_USBTransferOnePacket                             11     7      4     454
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (14) i1_USBEnableEndpoint                                 6     5      1     481
                                              7 COMMON     6     5      1
             i1_USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (15) i1_USBConfigureEndpoint                              7     6      1     274
                                              0 COMMON     7     6      1
 ---------------------------------------------------------------------------------
 (13) i1_USBCtrlTrfOutHandler                              2     2      0     114
                                              6 COMMON     2     2      0
              i1_USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (14) i1_USBCtrlTrfRxService                               4     4      0     114
                                              2 COMMON     4     4      0
        i1_USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) i1_USBCtrlEPAllowStatusStage                         2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (13) i1_USBCtrlTrfInHandler                               3     3      0     115
                                              3 COMMON     3     3      0
              i1_USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (16) i1_USBCtrlTrfTxService                               3     3      0      92
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CDCInitEP
     _USBEnableEndpoint
       _USBConfigureEndpoint
     _USBTransferOnePacket
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _USBDeviceAttach
     _USBDeviceInit
     _WDT_Initialize
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _USBCheckCDCRequest
     _USBDeviceInit
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _USBCheckCDCRequest
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _USBCheckCDCRequest
     _USER_USB_CALLBACK_EVENT_HANDLER
       _CDCInitEP
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBTransferOnePacket
       _USBCheckCDCRequest
   _UserApplication
     _CDCTxService
       _USBTransferOnePacket
     _getsUSBUSART
       _USBTransferOnePacket
     _putrsUSBUSART
     _strcmp

 _INTERRUPT_InterruptManager (ROOT)
   i1_USBDeviceTasks
     i1_USBCtrlEPAllowStatusStage
     i1_USBCtrlEPService
       i1_USBCtrlTrfInHandler
         i1_USBCtrlTrfTxService
       i1_USBCtrlTrfOutHandler
         i1_USBCtrlTrfRxService
           i1_USBCtrlEPAllowStatusStage
       i1_USBCtrlTrfSetupHandler
         i1_USBCheckStdRequest
           i1_USBStdFeatureReqHandler
             i1_USER_USB_CALLBACK_EVENT_HANDLER
               i1_CDCInitEP
                 i1_USBEnableEndpoint
                   i1_USBConfigureEndpoint
                 i1_USBTransferOnePacket
               i1_USBCheckCDCRequest
           i1_USBStdGetDscHandler
           i1_USBStdGetStatusHandler
           i1_USBStdSetCfgHandler
             i1_USER_USB_CALLBACK_EVENT_HANDLER
               i1_CDCInitEP
                 i1_USBEnableEndpoint
                   i1_USBConfigureEndpoint
                 i1_USBTransferOnePacket
               i1_USBCheckCDCRequest
             i1_memset
           i1_USER_USB_CALLBACK_EVENT_HANDLER
             i1_CDCInitEP
               i1_USBEnableEndpoint
                 i1_USBConfigureEndpoint
               i1_USBTransferOnePacket
             i1_USBCheckCDCRequest
         i1_USBCtrlEPServiceComplete
           i1_USBCtrlEPAllowDataStage
             i1_USBCtrlTrfTxService
           i1_USBCtrlEPAllowStatusStage
         i1_USER_USB_CALLBACK_EVENT_HANDLER
           i1_CDCInitEP
             i1_USBEnableEndpoint
               i1_USBConfigureEndpoint
             i1_USBTransferOnePacket
           i1_USBCheckCDCRequest
     i1_USBDeviceInit
     i1_USBIncrement1msInternalTimers
     i1_USBStallHandler
     i1_USBSuspend
       i1_USER_USB_CALLBACK_EVENT_HANDLER
         i1_CDCInitEP
           i1_USBEnableEndpoint
             i1_USBConfigureEndpoint
           i1_USBTransferOnePacket
         i1_USBCheckCDCRequest
     i1_USBWakeFromSuspend
       i1_USER_USB_CALLBACK_EVENT_HANDLER
         i1_CDCInitEP
           i1_USBEnableEndpoint
             i1_USBConfigureEndpoint
           i1_USBTransferOnePacket
         i1_USBCheckCDCRequest
     i1_USER_USB_CALLBACK_EVENT_HANDLER
       i1_CDCInitEP
         i1_USBEnableEndpoint
           i1_USBConfigureEndpoint
         i1_USBTransferOnePacket
       i1_USBCheckCDCRequest

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0h           10      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0h              10     10      10       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               30     23      2A       7       87.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2                0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               40      1      40      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      5      22      13       42.5%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      40      15       80.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0      40      17       80.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     12A      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     12A      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Mar 15 23:14:57 2018

                                _USB_SD_Ptr 18AA                                           pc 0002  
                               __CFG_CP$OFF 0000                                          l52 1FE1  
                             _USBDeviceInit 0554                          __size_of_CDCInitEP 003E  
                               __CFG_LVP$ON 0000      i1USER_USB_CALLBACK_EVENT_HANDLER@event 0060  
      USER_USB_CALLBACK_EVENT_HANDLER@event 00B4      i1USER_USB_CALLBACK_EVENT_HANDLER@pdata 0062  
      USER_USB_CALLBACK_EVENT_HANDLER@pdata 00B6                                         l121 08FB  
                                       l226 127D                 __end_of_USBStdGetDscHandler 0CA7  
                                       l424 10D7                                         l610 0148  
                                       l514 151B                                         l364 059B  
                                       l517 1563                                         l381 0318  
                                       l462 0AD4                                         l518 1524  
                                       l519 1527                                         l375 02DA  
                                       l449 07B3                                         l385 0343  
                                       l562 0A3A                                         l386 039D  
                                       l387 034C                                         l477 0625  
                                       l574 17FF                                         l671 134C  
                                       l576 17A7                                         l585 17D5  
                                       _BDT 0020                                         _RC3 0073  
                                       _UIE 0E92                                         _UIR 0E90  
                  i1_USBStdGetStatusHandler 14C2                                  _USBSuspend 1102  
                      USBStdSetCfgHandler@i 00BE                        USBStdSetCfgHandler@p 00BB  
                              __CFG_BORV$LO 0000                                         wreg 0009  
                            _USBDeviceTasks 02B7                                __CFG_IESO$ON 0000  
                            _USBDeviceState 01E5                                        S6734 1000  
                     ??_USBCtrlTrfRxService 00A8                              ??_getsUSBUSART 00B2  
                  USBEnableEndpoint@options 00AD                  USBConfigureEndpoint@handle 00AC  
                                      l6010 0781                                        l6100 17AF  
                                      l6102 17B2                                        l6006 077D  
                                      l6112 17C1                                        l6104 17B5  
                                      l6114 17C4                                        l6130 17F4  
                                      l6212 0A3F                                        l6204 0A1C  
                                      l6116 17C7                                        l6028 07C2  
                                      l6036 07CB                                        l6126 17E5  
                                      l6310 16A7                                        l6240 0582  
                                      l6232 0575                                        l6224 0564  
                                      l6208 0A2D                                        l6080 068E  
                                      l6320 16DE                                        l6066 0632  
                                      l6306 1692                                        l6252 05A0  
                                      l5700 0ACB                                        l6068 064F  
                                      l5604 0D91                                        l6404 1175  
                                      l6340 04A3                                        l6332 0498  
                                      l6316 16A9                                        l6078 0681  
                                      l6166 12F2                                        l5606 0DA9  
                                      l6406 117E                                        l6502 02EE  
                                      l6318 16C9                                        l4744 10DC  
                                      l6280 05E8                                        l5712 0AF5  
                                      l5720 0B0E                                        l6192 09EF  
                                      l5632 08B8                                        l5624 08AC  
                                      l6352 04CC                                        l6274 05C4  
                                      l5722 0B12                                        l5730 0B2B  
                                      l6194 09F5                                        l6178 131D  
                                      l5642 08D1                                        l6530 0325  
                                      l6514 0309                                        l6362 04E9  
                                      l6370 0505                                        l6346 04C3  
                                      l6610 1046                                        l5564 140C  
                                      l5636 08BF                                        l6436 1215  
                                      l6524 031E                                        l6508 02F4  
                                      l6372 050A                                        l6380 0526  
                                      l4780 080F                                        l5566 1415  
                                      l5574 118A                                        l5654 08E9  
                                      l6454 1672                                        l6438 1217  
                                      l6390 053B                                        l6382 052A  
                                      l4942 11ED                                        l5648 08DF  
                                      l5904 1557                                        l5832 0E83  
                                      l5816 0E59                                        l5808 0E48  
                                      l6456 1675                                        l6480 02C7  
                                      l6392 0551                                        l4776 0809  
                                      l4936 11CC                                        l5578 1192  
                                      l5594 0D48                                        l5586 0D38  
                                      l5682 1255                                        l5922 0068  
                                      l5738 1096                                        l5826 0E6F  
                                      l6458 1678                                        l6538 033B  
                                      l4938 11D4                                        l5756 0B58  
                                      l5676 124F                                        l5924 006A  
                                      l5860 0C3D                                        l6564 0384  
                                      l6388 0535                                        l4788 0824  
                                      l5678 1252                                        l5950 00D6  
                                      l5870 0C73                                        l6566 0393  
                                      l6558 036B                                        l6736 125E  
                                      l5960 00F6                                        l5952 00E3  
                                      l5944 00C0                                        l5856 0C33  
                                      l5848 0EB6                                        l5792 1720  
                                      l6488 02D4                                        l6584 134E  
                                      l6738 1278                                        l5962 00FD  
                                      l5938 009B                                        l5882 0C9A  
                                      l6586 1359                                        l5876 0C94  
                                      l5868 0C70                                        l5788 170D  
                                      l5990 016F                                        l5966 0109  
                                      l5878 0C97                                        l5894 1538  
                                      l5992 0178                                        l5976 0133  
                                      l5986 014F                                        l5978 0139  
                                      STR_1 18A7                                        _LATA 010C  
                                      _LATC 010E                                        u6045 1717  
                                      i1l75 0012                                        u6435 061E  
                                      u6605 0585                                        u5805 13EB  
                                      u5815 13F3                       ??_USBCtrlTrfTxService 00A6  
                                      _UCFG 0E91                                        u5795 13E5  
                                      _UEP0 0E98                                        _UEP1 0E99  
                                      _UEIE 0E97                                        u6885 1637  
                                      _UEIR 0E93                                        _UCON 0E8E  
                              ?i1_CDCInitEP 0070                                        _WPUA 020C  
           i1USBCtrlTrfTxService@byteToSend 0072                                __CFG_WRT$OFF 0000  
                             __CFG_FCMEN$ON 0000                             _CDCDataInHandle 01CD  
  i1USBStdFeatureReqHandler@current_ep_data 006A      USBStdFeatureReqHandler@current_ep_data 00BE  
                                      _pDst 01E1                                        _main 103E  
                                      fsr0h 0005                                        fsr1h 0007  
                                      indf0 0000                                        fsr0l 0004  
                                      indf1 0001                                 _BaudRateGen 022A  
                                      fsr1l 0006                             _USBDeviceAttach 10C6  
                                      btemp 007E                               __CFG_BOREN$ON 0000  
                   ?i1_USBCtrlTrfOutHandler 0070                                        start 0018  
            __size_ofi1_USBCtrlTrfRxService 00A3               __end_ofi1_USBCtrlTrfRxService 1000  
                __end_of_USBCheckStdRequest 1800                      ??_USBCtrlTrfOutHandler 00AC  
                             __CFG_MCLRE$ON 0000                         USBDeviceInit@i_1423 00A9  
                 ??_USBStdFeatureReqHandler 00BA              __size_ofi1_USBCtrlTrfTxService 0074  
                     i1_USBStdGetDscHandler 0BA9                      __size_of_putrsUSBUSART 0037  
             __end_ofi1_USBCtrlTrfTxService 0AB5                    ??_USBStdGetStatusHandler 00A6  
                            ?_USBDeviceInit 0070              __size_of_OSCILLATOR_Initialize 000C  
             __end_of_OSCILLATOR_Initialize 1FE5                                 _writeBuffer 0320  
                                     ?_main 0070                  i1USBEnableEndpoint@options 0077  
                             __CFG_WDTE$OFF 0000           __size_of_USBCtrlEPServiceComplete 0095  
                    __end_of_USBDeviceTasks 03A0                   ?_USBCtrlEPServiceComplete 0070  
                      i1_USBCheckStdRequest 0837                                       i1l121 179E  
                                     i1l226 124D                                       i1l610 0274  
                                     i1l514 14C6                                       i1l364 0702  
                                     i1l517 150A                                       i1l381 0400  
                                     i1l462 0A5E                                       i1l518 14CF  
                                     i1l519 14D2                                       i1l375 03C3  
                                     i1l449 0F13                                       i1l385 042B  
                                     i1l562 095D                                       i1l386 0485  
                                     i1l387 0434                                       i1l477 0F72  
                                     i1l574 0898                                       i1l576 083F  
                                     i1l585 0872                                       _UADDR 0E96  
                                     u690m0 166E                                       _TRISA 008C  
                                     _TRISC 008E                                       _USTAT 0E8F  
                                i1memset@p1 0070          __size_of_USBCtrlEPAllowStatusStage 007A  
           __end_of_USBCtrlEPAllowDataStage 173F                                       _sd000 18A3  
                                     _sd001 1843                                       _sd002 1877  
   __end_ofi1_USBIncrement1msInternalTimers 1091    __size_ofi1_USBIncrement1msInternalTimers 0018  
         ??i1_USBIncrement1msInternalTimers 0070            ?i1_USBIncrement1msInternalTimers 0070  
            ?_USBIncrement1msInternalTimers 0070             i1_USBIncrement1msInternalTimers 1079  
                            _WDT_Initialize 103A            __end_ofi1_USBCtrlTrfSetupHandler 14C2  
                         __end_of_CDCInitEP 139A              __end_ofi1_USBCtrlTrfOutHandler 12B4  
                                     status 0003                                       wtemp0 007E  
               UserApplication@numBytesRead 00B7                            __end_ofi1_memset 1079  
        __size_ofi1_USBCtrlEPAllowDataStage 005C                   __size_ofi1_USBDeviceTasks 00E8  
                ?i1_USBCtrlEPAllowDataStage 0070                __size_of_USBStdSetCfgHandler 008F  
                           __initialization 001A                                __end_of_main 104D  
                     _control_signal_bitmap 01E6                              __CFG_LPBOR$OFF 0000  
               ?_INTERRUPT_InterruptManager 0070                   __size_of_USBCtrlEPService 005C  
                                    ??_main 00C3                       ?i1_USBCheckStdRequest 0070  
                           ?_USBDeviceTasks 0070                                 ?_USBSuspend 0070  
                       __CFG_USBLSCLK$48MHz 0000                             i1_USBDeviceInit 06BD  
                    __end_of_WDT_Initialize 103E                                _cdc_mem_type 01E7  
                             _putrsUSBUSART 0800                     __end_of_USBDeviceAttach 10E3  
                          _CDCDataOutHandle 01CF                                      _ACTCON 039B  
                                    i1S6740 101A                                      _APFCON 011D  
                                    _ANSELA 018C                                      _ANSELC 018E  
                           getsUSBUSART@len 00B1                                      _BORCON 0116  
                     __size_of_CDCTxService 00CC                                      i1l4020 0DF5  
                                    i1l4004 0DCB                                      i1l4110 01A4  
                                    i1l4014 0DE1                                      i1l4112 01A6  
                                    i1l4140 0214                                      i1l4132 01F5  
                                    i1l4044 0BB4                                      i1l4036 0E27  
                                    i1l5012 0749                                      i1l3326 13C9  
                                    i1l3406 0D0D                                      i1l3502 1765  
                                    i1l4150 022B                                      i1l4126 01D4  
                                    i1l4070 0C1B                                      i1l5006 0725  
                                    i1l3328 13D2                                      i1l3408 0D25  
                                    i1l3520 178C                                      i1l4064 0C15  
                                    i1l4056 0BF1                                      i1l4048 0BBE  
                                    i1l5040 11C2                                      i1l3514 1783  
                                    i1l3610 1222                                      i1l4154 0236  
                                    i1l4138 0209                                      i1l4066 0C18  
                                    i1l4058 0BF4                                      i1l4082 14E2  
                                    i1l5042 11C4                                      i1l3380 1130  
                                    i1l3508 1775                                      i1l4180 02A2  
                                    i1l4164 025F                                      i1l4148 0224  
                                    i1l4092 14FE                                      i1l4406 0FC4  
                                    i1l3614 1225                                      i1l4174 027A  
                                    i1l4166 0265                                      i1l4430 084B  
                                    i1l4334 0EDD                                      i1l3632 0A57  
                                    i1l4600 091E                                      i1l4408 0FD1  
                                    i1l3376 1129                                      i1l3608 121F  
                                    i1l4440 085C                                      i1l4432 084E  
                                    i1l4610 0942                                      i1l3490 1752  
                                    i1l4178 0299                                      i1l4442 085F  
                                    i1l4338 0EE1                                      i1l5066 1155  
                                    i1l5322 046C                                      i1l3644 0A7B  
                                    i1l3652 0A94                                      i1l3396 0CC4  
                                    i1l3388 0CB4                                      i1l4444 0862  
                                    i1l4428 0848                                      i1l4356 0F21  
                                    i1l4364 0F2A                                      i1l5084 1616  
                                    i1l5068 115E                                      i1l5324 047B  
                                    i1l5316 0453                                      i1l5260 03D6  
                                    i1l3654 0A98                                      i1l3662 0AB1  
                                    i1l4614 0951                                      i1l3670 1065  
                                    i1l4454 087F                                      i1l5086 1619  
                                    i1l5246 03BD                                      i1l5238 03B0  
                                    i1l5088 161C                                      i1l5272 03F1  
                                    i1l4618 0962                                      i1l4394 0F7A  
                                    i1l3498 175E                                      i1l4458 088D  
                                    i1l5282 0406                                      i1l5266 03DC  
                                    i1l4396 0F93                                      i1l4572 1286  
                                    i1l3944 0989                                      i1l4584 12B1  
                                    i1l5296 0423                                      i1l5288 040D  
                                    i1l3980 15B0                                      i1l4598 0919  
                                    i1l3976 159D                                      i1l3996 0DBA  
                                    i1l4972 06E9                                      i1l4964 06DD  
                                    i1l4956 06CC                                      i1l6742 122E  
                                    i1l6744 1248                                      i1l4984 0707  
                                    u502_25 15DB                                      u424_25 0F6C  
                                    u372_25 15A7                                      u294_25 13A2  
                                    u295_25 13A8                                      u296_25 13B0  
                                    _OSCCON 0099                                      u492_25 06EC  
                                    _PLLRDY 04D6                               CDCTxService@i 00B2  
                                    _WDTCON 0097                i1USBTransferOnePacket@handle 0079  
                            __CFG_PWRTE$OFF 0000                           _shortPacketStatus 01E3  
         __end_ofi1_USBCtrlEPAllowDataStage 15CC                      ?i1_USBStdGetDscHandler 0070  
                           USBDeviceTasks@i 01EF                 USBStdFeatureReqHandler@pUEP 00BC  
                  USBTransferOnePacket@data 00A7                  USBCtrlTrfInHandler@lastDTS 00AB  
                           ??_USBDeviceInit 00A6                              __CFG_STVREN$ON 0000  
                      __end_of_getsUSBUSART 16E0               __size_ofi1_USBWakeFromSuspend 0020  
                         _USBEnableEndpoint 1181             __size_of_USBStdGetStatusHandler 0059  
                   ??i1_USBStdSetCfgHandler 0066                                      _memset 1091  
             __size_ofi1_USBCheckCDCRequest 0060                        i1USBEnableEndpoint@p 007A  
                        ?_USBEnableEndpoint 00AD                                      _strcmp 11C9  
             __size_of_USBTransferOnePacket 0084                                _CDCTxService 0488  
                           ?_WDT_Initialize 0070                              ?_putrsUSBUSART 00A6  
                       ??_USBEnableEndpoint 00AE                i1USBConfigureEndpoint@handle 0076  
                __end_ofi1_USBCtrlEPService 1628                                 _CtrlTrfData 0058  
                         i1_USBStallHandler 11A4                        _controlTransferState 01E2  
                         _SYSTEM_Initialize 1FF1                     __end_of__initialization 004D  
                i1USBTransferOnePacket@data 0071                          ?i1_USBStallHandler 0070  
                  i1_USBCtrlTrfSetupHandler 146F                        __size_ofi1_CDCInitEP 0036  
                        ?_SYSTEM_Initialize 0070                    __size_of_USBStallHandler 002B  
                            __pcstackBANK0h 0060                      i1USBCtrlTrfRxService@i 0074  
                       __size_of_USBSuspend 001F                              __pcstackCOMMON 0070  
                 __end_of_USBEnableEndpoint 11A4                         ??i1_USBStallHandler 0070  
                             __end_of_sd000 18A7                               __end_of_sd001 1877  
                             __end_of_sd002 1891                  ??i1_USBStdGetStatusHandler 0070  
                       ??_SYSTEM_Initialize 00AB            __size_of_USBCtrlEPAllowDataStage 005F  
             __size_of_USBConfigureEndpoint 0043                     __end_ofi1_USBDeviceInit 076A  
               __end_of_USBCtrlTrfInHandler 0A41                      ??i1_USBCheckStdRequest 006D  
                            _OPTION_REGbits 0095                                   ?i1_memset 0070  
                                _cdc_notice 0220                                  _cdc_rx_len 01EA  
                                _cdc_tx_len 01E8                   __end_ofi1_USBStallHandler 11C9  
                  ??_USBCtrlTrfSetupHandler 00C2                     _USBTicksSinceSuspendEnd 01D6  
                          ?_USBDeviceAttach 0070                   __end_of_SYSTEM_Initialize 2000  
                    _USBStdGetStatusHandler 1517                               _buttonPressed 01D5  
                                __pbssBANK1 00C3                                  __pbssBANK3 01B0  
                                __pbssBANK4 0220                                  __pbssBANK5 02A0  
                                __pbssBANK6 0320                            i1_USBDeviceTasks 03A0  
               __size_of_USBWakeFromSuspend 0020                               ?i1_USBSuspend 0070  
                               _pBDTEntryIn 01B7                    __size_of_UserApplication 003C  
          __end_of_USBCtrlEPServiceComplete 07FF                       i1_USBCtrlTrfInHandler 08FC  
              ??i1_USBCtrlEPServiceComplete 0075                 __size_of_USBCheckCDCRequest 0063  
                                __pmaintext 103E                        USBCtrlTrfRxService@i 00AA  
                           __CFG_PLLMULT$3x 0000                                  __pintentry 0004  
              __size_ofi1_USBEnableEndpoint 0020                                     ?_memset 00A6  
                                _device_dsc 1891                            _USBCtrlEPService 1628  
                                _ep_data_in 01CA                                     ?_strcmp 00A6  
               __end_of_USBCtrlTrfRxService 06BD                          _USBCheckStdRequest 179F  
                         _configDescriptor1 1800                             ??_putrsUSBUSART 00A8  
                                ??i1_memset 0076                 __end_of_USBCtrlTrfTxService 0B2F  
                                   u504_2m0 1612                         _USBStdSetCfgHandler 0E3D  
                                   _OSCTUNE 0098                         ?_USBCheckStdRequest 0070  
              __size_of_USBStdGetDscHandler 007F                                     _UIEbits 0E92  
       __size_ofi1_USBCtrlEPServiceComplete 0091                                     _UIRbits 0E90  
                             _cdc_trf_state 01E9                    ??i1_USBTransferOnePacket 0074  
                            ??i1_USBSuspend 0066                                     _pCDCDst 01D1  
                                   _pCDCSrc 01D3                       __size_of_getsUSBUSART 005C  
               ??i1_USBCtrlEPAllowDataStage 0073             ??_USBIncrement1msInternalTimers 00A6  
                      ?_USBStdSetCfgHandler 0070                                   _CDCInitEP 135C  
              i1USBCtrlTrfInHandler@lastDTS 0075                  __size_of_USBEnableEndpoint 0023  
                                _readBuffer 02A0                        ??_USBCheckStdRequest 00C1  
                     i1_USBCtrlTrfRxService 0F5D               __size_of_USBCtrlTrfOutHandler 0036  
                          ??_USBDeviceTasks 0240                           ??_USBStallHandler 00A6  
                          ?i1_USBDeviceInit 0070                       i1_USBCtrlTrfTxService 0A41  
                        getsUSBUSART@buffer 00B4                             __size_of_memset 0019  
                 __end_of_configDescriptor1 1843                                     __ptext1 1320  
                                   __ptext2 11C9                                     __ptext3 0800  
                                   __ptext4 1684                                     __ptext5 0488  
                                   __ptext6 02B7                                     __ptext7 1161  
                                   __ptext8 1102                                     __ptext9 11F3  
                                   _inPipes 00C3                 _USBDeferOUTDataStagePackets 01D7  
                           __size_of_strcmp 002A                       _OSCILLATOR_Initialize 1FD9  
                              ??_USBSuspend 00BA                    ??_PIN_MANAGER_Initialize 00A6  
                     i1USBEnableEndpoint@ep 007C                  __size_ofi1_USBStallHandler 0025  
                        __end_of_USB_CD_Ptr 18B2                  __size_of_SYSTEM_Initialize 000F  
           __size_of_USBCtrlTrfSetupHandler 0050                                     clrloop0 1FE6  
                  ??i1_USBConfigureEndpoint 0071                        end_of_initialization 004D  
                              _getsUSBUSART 1684                          __end_of_USB_SD_Ptr 18B0  
                       _pBDTEntryEP0OutNext 00C8                                     memset@c 00A8  
                                   memset@n 00AA                                     memset@p 00AC  
                           _USB1msTickCount 01C3             _dummy_encapsulated_cmd_response 022E  
                   ??i1_USBStdGetDscHandler 0070                    ?_USBStdFeatureReqHandler 0070  
                    ?i1_USBCtrlTrfInHandler 0070                       ??_USBStdSetCfgHandler 00BA  
                                ?_CDCInitEP 0070                          __end_of_USBSuspend 1121  
                   _USBCtrlEPAllowDataStage 16E0                    _USBCtrlEPServiceComplete 076A  
                         ??_UserApplication 00B5                                     strcmp@r 00A9  
                _USBStatusStageEnabledFlag1 01DA                  _USBStatusStageEnabledFlag2 01D9  
                          ??_WDT_Initialize 00A6                          USBEnableEndpoint@p 00B0  
            __size_ofi1_USBStdSetCfgHandler 008F               __end_ofi1_USBStdSetCfgHandler 0E3D  
                 i1_USBCtrlEPAllowDataStage 1570                            __CFG_FOSC$INTOSC 0000  
                        _BothEP0OutUOWNsSet 01DD                  ??i1_USBCtrlTrfSetupHandler 006E  
                 USBStdSetCfgHandler@i_2095 00BD                __end_ofi1_USBWakeFromSuspend 1161  
                 USBConfigureEndpoint@EPNum 00AB                ?i1_USBCtrlEPAllowStatusStage 0070  
                ?_USBCtrlEPAllowStatusStage 0070                __end_ofi1_USBCheckCDCRequest 179F  
     i1USER_USB_CALLBACK_EVENT_HANDLER@size 0064         USER_USB_CALLBACK_EVENT_HANDLER@size 00B8  
                                 _USTATcopy 01ED                    i1USBTransferOnePacket@ep 0078  
              __end_of_USBTransferOnePacket 0DAE             __size_ofi1_USBTransferOnePacket 0083  
        __end_ofi1_USBCtrlEPServiceComplete 0F5D                  i1_USBCtrlEPServiceComplete 0ECC  
                        i1_USBCtrlEPService 15CC                          __CFG_PLLEN$ENABLED 0000  
                     i1USBDeviceInit@i_1423 0073                      ?i1_USBCtrlTrfRxService 0070  
                    _USBCtrlTrfSetupHandler 141F                      ?i1_USBCtrlTrfTxService 0070  
                     __end_of_USBDeviceInit 060B       __end_of_USBIncrement1msInternalTimers 10C6  
    __size_of_USBIncrement1msInternalTimers 001C               _USBIncrement1msInternalTimers 10AA  
                                 i1memset@c 0072                                   i1memset@n 0074  
                                 i1memset@p 0076                         ?i1_USBCtrlEPService 0070  
                    ?_OSCILLATOR_Initialize 0070                          putrsUSBUSART@pData 00AB  
                            __end_of_memset 10AA                           _USBBusIsSuspended 01DF  
                      __end_ofi1_USBSuspend 1102                    __end_ofi1_USBDeviceTasks 0488  
                            __end_of_strcmp 11F3                         start_initialization 001A  
                   ?_USBStdGetStatusHandler 0070               USBCtrlTrfRxService@byteToRead 00AB  
           __size_of_PIN_MANAGER_Initialize 0014                    ??i1_USBCtrlTrfOutHandler 0076  
                         __size_ofi1_memset 0018                                 _cdc_data_rx 20C0  
                               _cdc_data_tx 2080                __end_of_USBConfigureEndpoint 141F  
           __end_of_USBStdFeatureReqHandler 018E                         i1_USBEnableEndpoint 1121  
           __size_ofi1_USBConfigureEndpoint 0042                               ??i1_CDCInitEP 007D  
         __end_of_USBCtrlEPAllowStatusStage 0BA9                        ??i1_USBCtrlEPService 00A0  
             ??i1_USBCtrlEPAllowStatusStage 0070                    __end_of_USBCtrlEPService 1684  
             i1USBStdFeatureReqHandler@pUEP 0068                   ??_USBCtrlEPAllowDataStage 00A9  
                               ??_CDCInitEP 00B3                              USBDeviceInit@i 00AA  
                            USBDeviceInit@p 00A7                 i1USBStdSetCfgHandler@i_2095 0069  
                    _pBDTEntryEP0OutCurrent 01E4          __size_ofi1_USBStdFeatureReqHandler 0129  
                   USBTransferOnePacket@dir 00A6                     USBTransferOnePacket@len 00A9  
                ?i1_USBStdFeatureReqHandler 0070                 i1USBConfigureEndpoint@EPNum 0075  
                       _USBStdGetDscHandler 0C28                        ?i1_USBEnableEndpoint 0077  
                                  ??_memset 00AC                      i1_USBTransferOnePacket 0CA7  
                                  ??_strcmp 00A8               __size_ofi1_USBCheckStdRequest 0062  
                    _USBActiveConfiguration 01EE              __end_of_USBStdGetStatusHandler 1570  
                 i1USBTransferOnePacket@dir 0070                   i1USBTransferOnePacket@len 0073  
                                 ___latbits 0002                               __pcstackBANK1 00A0  
                             __pcstackBANK3 01EF                __size_of_USBCtrlTrfInHandler 0071  
                             __pcstackBANK4 023D           __size_ofi1_USBStdGetStatusHandler 0055  
                 ?i1_USBStdGetStatusHandler 0070                        ?_USBStdGetDscHandler 0070  
                __end_of_USBWakeFromSuspend 1181                             _USBStallHandler 11F3  
                              _pBDTEntryOut 01BD                  __end_of_USBCheckCDCRequest 08FC  
                  __size_of_USBDeviceAttach 001D                         __end_ofi1_CDCInitEP 12EA  
                    _PIN_MANAGER_Initialize 104D                       ??i1_USBEnableEndpoint 0078  
                    i1_USBConfigureEndpoint 139A           __end_ofi1_USBStdFeatureReqHandler 02B7  
                      i1_USBWakeFromSuspend 1141        __size_ofi1_USBCtrlEPAllowStatusStage 006C  
                      i1_USBCheckCDCRequest 173F                ??_INTERRUPT_InterruptManager 00A5  
                                 __pswtext1 1000                                   __pswtext2 101A  
                      _USBTransferOnePacket 0D2A                       __end_of_putrsUSBUSART 0837  
              __end_of_USBCtrlTrfOutHandler 1320                       ??_USBStdGetDscHandler 00A6  
                               _ep_data_out 01C7             __size_ofi1_USBCtrlTrfOutHandler 0036  
              __size_of_USBCtrlTrfRxService 00B2               USBConfigureEndpoint@direction 00A6  
           i1USBCtrlTrfRxService@byteToRead 0075                     ??i1_USBCtrlTrfInHandler 0073  
              __size_of_USBCtrlTrfTxService 007A                             _UserApplication 1320  
                ??_USBCtrlEPServiceComplete 00AB                                   clear_ram0 1FE5  
                                  _PIE2bits 0092              __size_ofi1_USBStdGetDscHandler 007F  
             __end_ofi1_USBStdGetDscHandler 0C28         __size_of_INTERRUPT_InterruptManager 0014  
                                  _PIR2bits 0012                                    _UEP0bits 0E98  
                _USBDeferINDataStagePackets 01D8                       ?i1_USBWakeFromSuspend 0070  
               __size_of_USBCheckStdRequest 0061                                    _UCONbits 0E8E  
                     ?i1_USBCheckCDCRequest 0070                        _USBConfigureEndpoint 13DC  
                     __size_ofi1_USBSuspend 001F            __size_of_USBStdFeatureReqHandler 013D  
                     ?_USBTransferOnePacket 00A6                               ?_CDCTxService 0070  
                                  i1_memset 1061                                _RemoteWakeup 01E0  
                  __size_ofi1_USBDeviceInit 00AD                     __end_of_USBStallHandler 121E  
                         putrsUSBUSART@data 00A6                 ??_USBCtrlEPAllowStatusStage 00A6  
               __end_of_USBStdSetCfgHandler 0ECC                                 i1_CDCInitEP 12B4  
                        __end_of_device_dsc 18A3                     ??i1_USBCtrlTrfRxService 0072  
                         i1USBDeviceTasks@i 006F                     ?_USBCtrlTrfSetupHandler 0070  
               ?i1_USBCtrlEPServiceComplete 0070                                i1_USBSuspend 10E3  
                   USBStdGetStatusHandler@p 00A7                     ??i1_USBCtrlTrfTxService 0070  
                    USBTransferOnePacket@ep 00AE                      i1_USBCtrlTrfOutHandler 127E  
                                  _SetupPkt 0050                     ??_OSCILLATOR_Initialize 00A6  
                     ?_USBConfigureEndpoint 00A6                           ??_USBDeviceAttach 00A6  
                 i1USBStdGetStatusHandler@p 0071                                 _line_coding 0236  
                            ??_CDCTxService 00B1                       i1_USBStdSetCfgHandler 0DAE  
                         ?i1_USBDeviceTasks 0070                     __size_of_USBDeviceTasks 00E9  
                                  __ptext10 10AA                                    __ptext11 1628  
                                  __ptext20 0051                                    __ptext12 141F  
                                  __ptext21 124E                                    __ptext13 076A  
                                  __ptext30 09D0                                    __ptext22 0899  
                                  __ptext14 16E0                                    __ptext31 0AB5  
                                  __ptext23 135C                                    __ptext15 179F  
                                  __ptext40 1141                                    __ptext32 1FF1  
                                  __ptext24 0D2A                                    __ptext16 0E3D  
                                  __ptext41 10E3                                    __ptext33 103A  
                                  __ptext25 1181                                    __ptext17 1091  
                                  __ptext50 0DAE                                    __ptext42 11A4  
                                  __ptext34 0554                                    __ptext26 13DC  
                                  __ptext18 1517                                    __ptext51 1061  
                                  __ptext43 1079                                    __ptext35 10C6  
                                  __ptext27 12EA                                    __ptext19 0C28  
                                  __ptext60 139A                                    __ptext52 14C2  
                                  __ptext44 06BD                                    __ptext36 104D  
                                  __ptext28 060B                                    __ptext61 127E  
                                  __ptext53 0BA9                                    __ptext45 15CC  
                                  __ptext37 1FD9                                    __ptext29 0B2F  
                                  __ptext62 0F5D                                    __ptext54 018E  
                                  __ptext46 146F                                    __ptext63 0964  
                                  __ptext55 121E                                    __ptext47 0ECC  
                                  __ptext39 03A0                                    __ptext64 08FC  
                                  __ptext56 173F                                    __ptext48 1570  
                                  __ptext65 0A41                                    __ptext57 12B4  
                                  __ptext49 0837                                    __ptext58 0CA7  
                                  __ptext59 1121                          ??i1_USBDeviceTasks 00A3  
                   __end_of_UserApplication 135C              __end_of_USBCtrlTrfSetupHandler 146F  
                             __size_of_main 000F                           ?_USBCtrlEPService 0070  
           i1USBConfigureEndpoint@direction 0070                          ??_USBCtrlEPService 023D  
                       _USBCtrlTrfInHandler 09D0           __size_ofi1_USBCtrlTrfSetupHandler 0053  
                    ??i1_USBWakeFromSuspend 0066                   ?i1_USBCtrlTrfSetupHandler 0070  
                                  _outPipes 01B0                 ??i1_USBStdFeatureReqHandler 0066  
                    ??i1_USBCheckCDCRequest 0070                        _USBCtrlTrfOutHandler 12EA  
                                  int$flags 007E                     ?i1_USBTransferOnePacket 0070  
                 _USBCtrlEPAllowStatusStage 0B2F            __end_ofi1_USBStdGetStatusHandler 1517  
        __end_of_INTERRUPT_InterruptManager 0018                  _INTERRUPT_InterruptManager 0004  
                    ??_USBTransferOnePacket 00AA                            putrsUSBUSART@len 00AD  
                 _USBDeferStatusStagePacket 01DB                    CDCTxService@byte_to_send 00B3  
                          i1USBDeviceInit@i 0074                            i1USBDeviceInit@p 0071  
                                _INTCONbits 000B                        ?_USBCtrlTrfInHandler 0070  
             USBCtrlTrfTxService@byteToSend 00A8                                    memset@p1 00A6  
                          ?_USBStallHandler 0070                    USBStdFeatureReqHandler@p 00BF  
                   __size_of_WDT_Initialize 0004                                    intlevel1 0000  
                    __size_of_USBDeviceInit 00B7                 __size_ofi1_USBCtrlEPService 005C  
 __end_ofi1_USER_USB_CALLBACK_EVENT_HANDLER 124E  __size_ofi1_USER_USB_CALLBACK_EVENT_HANDLER 0030  
   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 127E    __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0030  
        ?i1_USER_USB_CALLBACK_EVENT_HANDLER 0060         ??i1_USER_USB_CALLBACK_EVENT_HANDLER 007E  
         ??_USER_USB_CALLBACK_EVENT_HANDLER 00BA            ?_USER_USB_CALLBACK_EVENT_HANDLER 00B4  
         i1_USER_USB_CALLBACK_EVENT_HANDLER 121E             _USER_USB_CALLBACK_EVENT_HANDLER 124E  
                         ??i1_USBDeviceInit 0070                __end_ofi1_USBCheckStdRequest 0899  
                   ?_PIN_MANAGER_Initialize 0070                           __CFG_CLKOUTEN$OFF 0000  
                   ?i1_USBConfigureEndpoint 0070              __end_ofi1_USBTransferOnePacket 0D2A  
                    ??_USBConfigureEndpoint 00A7                       ?_USBCtrlTrfOutHandler 0070  
                      __CFG_CPUDIV$NOCLKDIV 0000                         _USBCtrlTrfRxService 060B  
                        _USBWakeFromSuspend 1161                     _USBStdFeatureReqHandler 0051  
                        _USBCheckCDCRequest 0899                         _USBCtrlTrfTxService 0AB5  
                             __pstringtext1 18AA                               __pstringtext2 18B0  
                             __pstringtext3 1800                               __pstringtext4 1843  
                             __pstringtext5 1877                               __pstringtext6 1891  
                             __pstringtext7 18A3                               __pstringtext8 0000  
                i1USBStdFeatureReqHandler@p 006B                      ?i1_USBStdSetCfgHandler 0070  
                    i1USBStdSetCfgHandler@i 006A                      i1USBStdSetCfgHandler@p 0067  
                       ?_USBWakeFromSuspend 0070                                    strcmp@s1 00AA  
                                  strcmp@s2 00A6                       ??_USBCtrlTrfInHandler 00A9  
                     _USBAlternateInterface 01EB                         ?_USBCheckCDCRequest 0070  
                       USBEnableEndpoint@ep 00B2                   i1_USBStdFeatureReqHandler 018E  
                           _endpoint_number 01DE         __end_ofi1_USBCtrlEPAllowStatusStage 09D0  
               i1_USBCtrlEPAllowStatusStage 0964                        ?_USBCtrlTrfRxService 0070  
                          ?_UserApplication 0070                               ?_getsUSBUSART 00B1  
            __end_of_PIN_MANAGER_Initialize 1061                    ?_USBCtrlEPAllowDataStage 0070  
                      ?_USBCtrlTrfTxService 0070              __size_ofi1_USBCtrlTrfInHandler 0068  
              _USBStatusStageTimeoutCounter 01DC               __end_ofi1_USBCtrlTrfInHandler 0964  
            __end_ofi1_USBConfigureEndpoint 13DC                        ??_USBWakeFromSuspend 00BA  
               __end_ofi1_USBEnableEndpoint 1141                  USBTransferOnePacket@handle 00AF  
                      __end_of_CDCTxService 0554                        ??_USBCheckCDCRequest 00A6  
                                _USB_CD_Ptr 18B0  
