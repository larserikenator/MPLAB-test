

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Mar 17 17:18:43 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1454
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK5,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	cinit,global,class=CODE,merge=1,delta=2
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    18                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1
    19                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    20                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1
    21                           	psect	inittext,global,class=CODE,delta=2
    22                           	psect	clrtext,global,class=CODE,delta=2
    23                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    24                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    25                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    26                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    27                           	psect	cstackBANK0h,global,class=BANK0,space=1,delta=1
    28                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    29                           	psect	text1,local,class=CODE,merge=1,delta=2
    30                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text7,local,class=CODE,merge=1,delta=2
    36                           	psect	text8,local,class=CODE,merge=1,delta=2
    37                           	psect	text9,local,class=CODE,merge=1,delta=2
    38                           	psect	text10,local,class=CODE,merge=1,delta=2
    39                           	psect	text11,local,class=CODE,merge=1,delta=2
    40                           	psect	text12,local,class=CODE,merge=1,delta=2
    41                           	psect	text13,local,class=CODE,merge=1,delta=2
    42                           	psect	text14,local,class=CODE,merge=1,delta=2
    43                           	psect	text15,local,class=CODE,merge=1,delta=2
    44                           	psect	text16,local,class=CODE,merge=1,delta=2
    45                           	psect	text17,local,class=CODE,merge=1,delta=2
    46                           	psect	text18,local,class=CODE,merge=1,delta=2
    47                           	psect	swtext1,local,class=CONST,delta=2
    48                           	psect	text19,local,class=CODE,merge=1,delta=2
    49                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text21,local,class=CODE,merge=1,delta=2
    51                           	psect	text22,local,class=CODE,merge=1,delta=2
    52                           	psect	text23,local,class=CODE,merge=1,delta=2
    53                           	psect	text24,local,class=CODE,merge=1,delta=2
    54                           	psect	text25,local,class=CODE,merge=1,delta=2
    55                           	psect	text26,local,class=CODE,merge=1,delta=2
    56                           	psect	text27,local,class=CODE,merge=1,delta=2
    57                           	psect	text28,local,class=CODE,merge=1,delta=2
    58                           	psect	text29,local,class=CODE,merge=1,delta=2
    59                           	psect	text30,local,class=CODE,merge=1,delta=2
    60                           	psect	text31,local,class=CODE,merge=1,delta=2
    61                           	psect	text32,local,class=CODE,merge=1,delta=2
    62                           	psect	text33,local,class=CODE,merge=1,delta=2
    63                           	psect	text34,local,class=CODE,merge=1,delta=2
    64                           	psect	text35,local,class=CODE,merge=1,delta=2
    65                           	psect	text36,local,class=CODE,merge=1,delta=2
    66                           	psect	text37,local,class=CODE,merge=1,delta=2
    67                           	psect	text38,local,class=CODE,merge=1,delta=2
    68                           	psect	text39,local,class=CODE,merge=1,delta=2
    69                           	psect	text40,local,class=CODE,merge=1,delta=2
    70                           	psect	text41,local,class=CODE,merge=1,delta=2
    71                           	psect	intentry,global,class=CODE,delta=2
    72                           	psect	text43,local,class=CODE,merge=1,delta=2
    73                           	psect	text44,local,class=CODE,merge=1,delta=2
    74                           	psect	text45,local,class=CODE,merge=1,delta=2
    75                           	psect	text46,local,class=CODE,merge=1,delta=2
    76                           	psect	text47,local,class=CODE,merge=1,delta=2
    77                           	psect	text48,local,class=CODE,merge=1,delta=2
    78                           	psect	text49,local,class=CODE,merge=1,delta=2
    79                           	psect	text50,local,class=CODE,merge=1,delta=2
    80                           	psect	text51,local,class=CODE,merge=1,delta=2
    81                           	psect	text52,local,class=CODE,merge=1,delta=2
    82                           	psect	text53,local,class=CODE,merge=1,delta=2
    83                           	psect	swtext2,local,class=CONST,delta=2
    84                           	psect	text54,local,class=CODE,merge=1,delta=2
    85                           	psect	text55,local,class=CODE,merge=1,delta=2
    86                           	psect	text56,local,class=CODE,merge=1,delta=2
    87                           	psect	text57,local,class=CODE,merge=1,delta=2
    88                           	psect	text58,local,class=CODE,merge=1,delta=2
    89                           	psect	text59,local,class=CODE,merge=1,delta=2
    90                           	psect	text60,local,class=CODE,merge=1,delta=2
    91                           	psect	text61,local,class=CODE,merge=1,delta=2
    92                           	psect	text62,local,class=CODE,merge=1,delta=2
    93                           	psect	text63,local,class=CODE,merge=1,delta=2
    94                           	psect	text64,local,class=CODE,merge=1,delta=2
    95                           	psect	text65,local,class=CODE,merge=1,delta=2
    96                           	psect	text66,local,class=CODE,merge=1,delta=2
    97                           	psect	text67,local,class=CODE,merge=1,delta=2
    98                           	psect	text68,local,class=CODE,merge=1,delta=2
    99                           	psect	text69,local,class=CODE,merge=1,delta=2
   100                           	psect	text70,local,class=CODE,merge=1,delta=2
   101                           	psect	text71,local,class=CODE,merge=1,inline,delta=2
   102                           	psect	text72,local,class=CODE,merge=1,delta=2
   103                           	psect	text73,local,class=CODE,merge=1,inline,delta=2
   104                           	psect	text74,local,class=CODE,merge=1,delta=2
   105                           	psect	text75,local,class=CODE,merge=1,delta=2
   106                           	psect	text76,local,class=CODE,merge=1,delta=2
   107                           	psect	text77,local,class=CODE,merge=1,delta=2
   108                           	psect	text78,local,class=CODE,merge=1,delta=2
   109                           	psect	text79,local,class=CODE,merge=1,delta=2
   110                           	psect	text80,local,class=CODE,merge=1,delta=2
   111                           	psect	text81,local,class=CODE,merge=1,delta=2
   112                           	psect	text82,local,class=CODE,merge=1,delta=2
   113                           	psect	text83,local,class=CODE,merge=1,delta=2
   114                           	psect	text84,local,class=CODE,merge=1,delta=2
   115                           	psect	text85,local,class=CODE,merge=1,delta=2
   116                           	psect	text86,local,class=CODE,merge=1,delta=2
   117                           	psect	text87,local,class=CODE,merge=1,delta=2
   118                           	psect	text88,local,class=CODE,merge=1,delta=2
   119                           	psect	text89,local,class=CODE,merge=1,delta=2
   120                           	psect	text90,local,class=CODE,merge=1,inline,delta=2
   121                           	psect	text91,local,class=CODE,merge=1,inline,delta=2
   122                           	psect	text92,local,class=CODE,merge=1,inline,delta=2
   123                           	psect	text93,local,class=CODE,merge=1,inline,delta=2
   124                           	psect	text94,local,class=CODE,merge=1,inline,delta=2
   125                           	psect	text95,local,class=CODE,merge=1,inline,delta=2
   126                           	psect	text96,local,class=CODE,merge=1,inline,delta=2
   127                           	psect	text97,local,class=CODE,merge=1,delta=2
   128                           	psect	text98,local,class=CODE,merge=1,delta=2
   129                           	psect	text99,local,class=CODE,merge=1,delta=2
   130                           	psect	text100,local,class=CODE,merge=1,delta=2
   131                           	psect	text101,local,class=CODE,merge=1,delta=2
   132                           	psect	text102,local,class=CODE,merge=1,delta=2
   133                           	psect	text103,local,class=CODE,merge=1,delta=2
   134                           	psect	text104,local,class=CODE,merge=1,delta=2
   135                           	psect	text105,local,class=CODE,merge=1,delta=2
   136                           	psect	text106,local,class=CODE,merge=1,delta=2
   137                           	psect	text107,local,class=CODE,merge=1,delta=2
   138                           	psect	text108,local,class=CODE,merge=1,inline,delta=2
   139                           	psect	text109,local,class=CODE,merge=1,inline,delta=2
   140                           	psect	text110,local,class=CODE,merge=1,inline,delta=2
   141                           	dabs	1,0x120,32
   142                           	dabs	1,0xD0,32
   143                           	dabs	1,0x1A0,16
   144                           	dabs	1,0x140,48
   145                           	dabs	1,0x20,48,_BDT
   146                           	dabs	1,0x50,8,_SetupPkt
   147                           	dabs	1,0x58,8,_CtrlTrfData
   148                           	dabs	1,0x7E,2
   149  0000                     
   150                           ; Version 1.45
   151                           ; Generated 16/11/2017 GMT
   152                           ; 
   153                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   154                           ; All rights reserved.
   155                           ; 
   156                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   157                           ; 
   158                           ; Redistribution and use in source and binary forms, with or without modification, are
   159                           ; permitted provided that the following conditions are met:
   160                           ; 
   161                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   162                           ;        conditions and the following disclaimer.
   163                           ; 
   164                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   165                           ;        of conditions and the following disclaimer in the documentation and/or other
   166                           ;        materials provided with the distribution.
   167                           ; 
   168                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   169                           ;        software without specific prior written permission.
   170                           ; 
   171                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   172                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   173                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   174                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   175                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   176                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   177                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   178                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   179                           ; 
   180                           ; 
   181                           ; Code-generator required, PIC16F1454 Definitions
   182                           ; 
   183                           ; SFR Addresses
   184  0000                     	;# 
   185  0001                     	;# 
   186  0002                     	;# 
   187  0003                     	;# 
   188  0004                     	;# 
   189  0005                     	;# 
   190  0006                     	;# 
   191  0007                     	;# 
   192  0008                     	;# 
   193  0009                     	;# 
   194  000A                     	;# 
   195  000B                     	;# 
   196  000C                     	;# 
   197  000E                     	;# 
   198  0011                     	;# 
   199  0012                     	;# 
   200  0015                     	;# 
   201  0016                     	;# 
   202  0016                     	;# 
   203  0017                     	;# 
   204  0018                     	;# 
   205  0019                     	;# 
   206  001A                     	;# 
   207  001B                     	;# 
   208  001C                     	;# 
   209  008C                     	;# 
   210  008E                     	;# 
   211  0091                     	;# 
   212  0092                     	;# 
   213  0095                     	;# 
   214  0096                     	;# 
   215  0097                     	;# 
   216  0098                     	;# 
   217  0099                     	;# 
   218  009A                     	;# 
   219  010C                     	;# 
   220  010E                     	;# 
   221  0116                     	;# 
   222  0117                     	;# 
   223  011D                     	;# 
   224  018C                     	;# 
   225  018E                     	;# 
   226  0191                     	;# 
   227  0191                     	;# 
   228  0192                     	;# 
   229  0193                     	;# 
   230  0193                     	;# 
   231  0194                     	;# 
   232  0195                     	;# 
   233  0196                     	;# 
   234  0197                     	;# 
   235  0199                     	;# 
   236  019A                     	;# 
   237  019B                     	;# 
   238  019B                     	;# 
   239  019C                     	;# 
   240  019D                     	;# 
   241  019E                     	;# 
   242  019F                     	;# 
   243  020C                     	;# 
   244  0211                     	;# 
   245  0211                     	;# 
   246  0212                     	;# 
   247  0212                     	;# 
   248  0213                     	;# 
   249  0213                     	;# 
   250  0214                     	;# 
   251  0214                     	;# 
   252  0215                     	;# 
   253  0215                     	;# 
   254  0215                     	;# 
   255  0216                     	;# 
   256  0216                     	;# 
   257  0217                     	;# 
   258  0217                     	;# 
   259  0391                     	;# 
   260  0392                     	;# 
   261  0393                     	;# 
   262  039A                     	;# 
   263  039B                     	;# 
   264  0611                     	;# 
   265  0612                     	;# 
   266  0613                     	;# 
   267  0613                     	;# 
   268  0614                     	;# 
   269  0615                     	;# 
   270  0616                     	;# 
   271  0616                     	;# 
   272  0E8E                     	;# 
   273  0E8F                     	;# 
   274  0E90                     	;# 
   275  0E91                     	;# 
   276  0E92                     	;# 
   277  0E93                     	;# 
   278  0E94                     	;# 
   279  0E94                     	;# 
   280  0E95                     	;# 
   281  0E96                     	;# 
   282  0E97                     	;# 
   283  0E98                     	;# 
   284  0E99                     	;# 
   285  0E9A                     	;# 
   286  0E9B                     	;# 
   287  0E9C                     	;# 
   288  0E9D                     	;# 
   289  0E9E                     	;# 
   290  0E9F                     	;# 
   291  0FE4                     	;# 
   292  0FE5                     	;# 
   293  0FE6                     	;# 
   294  0FE7                     	;# 
   295  0FE8                     	;# 
   296  0FE9                     	;# 
   297  0FEA                     	;# 
   298  0FEB                     	;# 
   299  0FED                     	;# 
   300  0FEE                     	;# 
   301  0FEF                     	;# 
   302  0000                     	;# 
   303  0001                     	;# 
   304  0002                     	;# 
   305  0003                     	;# 
   306  0004                     	;# 
   307  0005                     	;# 
   308  0006                     	;# 
   309  0007                     	;# 
   310  0008                     	;# 
   311  0009                     	;# 
   312  000A                     	;# 
   313  000B                     	;# 
   314  000C                     	;# 
   315  000E                     	;# 
   316  0011                     	;# 
   317  0012                     	;# 
   318  0015                     	;# 
   319  0016                     	;# 
   320  0016                     	;# 
   321  0017                     	;# 
   322  0018                     	;# 
   323  0019                     	;# 
   324  001A                     	;# 
   325  001B                     	;# 
   326  001C                     	;# 
   327  008C                     	;# 
   328  008E                     	;# 
   329  0091                     	;# 
   330  0092                     	;# 
   331  0095                     	;# 
   332  0096                     	;# 
   333  0097                     	;# 
   334  0098                     	;# 
   335  0099                     	;# 
   336  009A                     	;# 
   337  010C                     	;# 
   338  010E                     	;# 
   339  0116                     	;# 
   340  0117                     	;# 
   341  011D                     	;# 
   342  018C                     	;# 
   343  018E                     	;# 
   344  0191                     	;# 
   345  0191                     	;# 
   346  0192                     	;# 
   347  0193                     	;# 
   348  0193                     	;# 
   349  0194                     	;# 
   350  0195                     	;# 
   351  0196                     	;# 
   352  0197                     	;# 
   353  0199                     	;# 
   354  019A                     	;# 
   355  019B                     	;# 
   356  019B                     	;# 
   357  019C                     	;# 
   358  019D                     	;# 
   359  019E                     	;# 
   360  019F                     	;# 
   361  020C                     	;# 
   362  0211                     	;# 
   363  0211                     	;# 
   364  0212                     	;# 
   365  0212                     	;# 
   366  0213                     	;# 
   367  0213                     	;# 
   368  0214                     	;# 
   369  0214                     	;# 
   370  0215                     	;# 
   371  0215                     	;# 
   372  0215                     	;# 
   373  0216                     	;# 
   374  0216                     	;# 
   375  0217                     	;# 
   376  0217                     	;# 
   377  0391                     	;# 
   378  0392                     	;# 
   379  0393                     	;# 
   380  039A                     	;# 
   381  039B                     	;# 
   382  0611                     	;# 
   383  0612                     	;# 
   384  0613                     	;# 
   385  0613                     	;# 
   386  0614                     	;# 
   387  0615                     	;# 
   388  0616                     	;# 
   389  0616                     	;# 
   390  0E8E                     	;# 
   391  0E8F                     	;# 
   392  0E90                     	;# 
   393  0E91                     	;# 
   394  0E92                     	;# 
   395  0E93                     	;# 
   396  0E94                     	;# 
   397  0E94                     	;# 
   398  0E95                     	;# 
   399  0E96                     	;# 
   400  0E97                     	;# 
   401  0E98                     	;# 
   402  0E99                     	;# 
   403  0E9A                     	;# 
   404  0E9B                     	;# 
   405  0E9C                     	;# 
   406  0E9D                     	;# 
   407  0E9E                     	;# 
   408  0E9F                     	;# 
   409  0FE4                     	;# 
   410  0FE5                     	;# 
   411  0FE6                     	;# 
   412  0FE7                     	;# 
   413  0FE8                     	;# 
   414  0FE9                     	;# 
   415  0FEA                     	;# 
   416  0FEB                     	;# 
   417  0FED                     	;# 
   418  0FEE                     	;# 
   419  0FEF                     	;# 
   420  0000                     	;# 
   421  0001                     	;# 
   422  0002                     	;# 
   423  0003                     	;# 
   424  0004                     	;# 
   425  0005                     	;# 
   426  0006                     	;# 
   427  0007                     	;# 
   428  0008                     	;# 
   429  0009                     	;# 
   430  000A                     	;# 
   431  000B                     	;# 
   432  000C                     	;# 
   433  000E                     	;# 
   434  0011                     	;# 
   435  0012                     	;# 
   436  0015                     	;# 
   437  0016                     	;# 
   438  0016                     	;# 
   439  0017                     	;# 
   440  0018                     	;# 
   441  0019                     	;# 
   442  001A                     	;# 
   443  001B                     	;# 
   444  001C                     	;# 
   445  008C                     	;# 
   446  008E                     	;# 
   447  0091                     	;# 
   448  0092                     	;# 
   449  0095                     	;# 
   450  0096                     	;# 
   451  0097                     	;# 
   452  0098                     	;# 
   453  0099                     	;# 
   454  009A                     	;# 
   455  010C                     	;# 
   456  010E                     	;# 
   457  0116                     	;# 
   458  0117                     	;# 
   459  011D                     	;# 
   460  018C                     	;# 
   461  018E                     	;# 
   462  0191                     	;# 
   463  0191                     	;# 
   464  0192                     	;# 
   465  0193                     	;# 
   466  0193                     	;# 
   467  0194                     	;# 
   468  0195                     	;# 
   469  0196                     	;# 
   470  0197                     	;# 
   471  0199                     	;# 
   472  019A                     	;# 
   473  019B                     	;# 
   474  019B                     	;# 
   475  019C                     	;# 
   476  019D                     	;# 
   477  019E                     	;# 
   478  019F                     	;# 
   479  020C                     	;# 
   480  0211                     	;# 
   481  0211                     	;# 
   482  0212                     	;# 
   483  0212                     	;# 
   484  0213                     	;# 
   485  0213                     	;# 
   486  0214                     	;# 
   487  0214                     	;# 
   488  0215                     	;# 
   489  0215                     	;# 
   490  0215                     	;# 
   491  0216                     	;# 
   492  0216                     	;# 
   493  0217                     	;# 
   494  0217                     	;# 
   495  0391                     	;# 
   496  0392                     	;# 
   497  0393                     	;# 
   498  039A                     	;# 
   499  039B                     	;# 
   500  0611                     	;# 
   501  0612                     	;# 
   502  0613                     	;# 
   503  0613                     	;# 
   504  0614                     	;# 
   505  0615                     	;# 
   506  0616                     	;# 
   507  0616                     	;# 
   508  0E8E                     	;# 
   509  0E8F                     	;# 
   510  0E90                     	;# 
   511  0E91                     	;# 
   512  0E92                     	;# 
   513  0E93                     	;# 
   514  0E94                     	;# 
   515  0E94                     	;# 
   516  0E95                     	;# 
   517  0E96                     	;# 
   518  0E97                     	;# 
   519  0E98                     	;# 
   520  0E99                     	;# 
   521  0E9A                     	;# 
   522  0E9B                     	;# 
   523  0E9C                     	;# 
   524  0E9D                     	;# 
   525  0E9E                     	;# 
   526  0E9F                     	;# 
   527  0FE4                     	;# 
   528  0FE5                     	;# 
   529  0FE6                     	;# 
   530  0FE7                     	;# 
   531  0FE8                     	;# 
   532  0FE9                     	;# 
   533  0FEA                     	;# 
   534  0FEB                     	;# 
   535  0FED                     	;# 
   536  0FEE                     	;# 
   537  0FEF                     	;# 
   538  0000                     	;# 
   539  0001                     	;# 
   540  0002                     	;# 
   541  0003                     	;# 
   542  0004                     	;# 
   543  0005                     	;# 
   544  0006                     	;# 
   545  0007                     	;# 
   546  0008                     	;# 
   547  0009                     	;# 
   548  000A                     	;# 
   549  000B                     	;# 
   550  000C                     	;# 
   551  000E                     	;# 
   552  0011                     	;# 
   553  0012                     	;# 
   554  0015                     	;# 
   555  0016                     	;# 
   556  0016                     	;# 
   557  0017                     	;# 
   558  0018                     	;# 
   559  0019                     	;# 
   560  001A                     	;# 
   561  001B                     	;# 
   562  001C                     	;# 
   563  008C                     	;# 
   564  008E                     	;# 
   565  0091                     	;# 
   566  0092                     	;# 
   567  0095                     	;# 
   568  0096                     	;# 
   569  0097                     	;# 
   570  0098                     	;# 
   571  0099                     	;# 
   572  009A                     	;# 
   573  010C                     	;# 
   574  010E                     	;# 
   575  0116                     	;# 
   576  0117                     	;# 
   577  011D                     	;# 
   578  018C                     	;# 
   579  018E                     	;# 
   580  0191                     	;# 
   581  0191                     	;# 
   582  0192                     	;# 
   583  0193                     	;# 
   584  0193                     	;# 
   585  0194                     	;# 
   586  0195                     	;# 
   587  0196                     	;# 
   588  0197                     	;# 
   589  0199                     	;# 
   590  019A                     	;# 
   591  019B                     	;# 
   592  019B                     	;# 
   593  019C                     	;# 
   594  019D                     	;# 
   595  019E                     	;# 
   596  019F                     	;# 
   597  020C                     	;# 
   598  0211                     	;# 
   599  0211                     	;# 
   600  0212                     	;# 
   601  0212                     	;# 
   602  0213                     	;# 
   603  0213                     	;# 
   604  0214                     	;# 
   605  0214                     	;# 
   606  0215                     	;# 
   607  0215                     	;# 
   608  0215                     	;# 
   609  0216                     	;# 
   610  0216                     	;# 
   611  0217                     	;# 
   612  0217                     	;# 
   613  0391                     	;# 
   614  0392                     	;# 
   615  0393                     	;# 
   616  039A                     	;# 
   617  039B                     	;# 
   618  0611                     	;# 
   619  0612                     	;# 
   620  0613                     	;# 
   621  0613                     	;# 
   622  0614                     	;# 
   623  0615                     	;# 
   624  0616                     	;# 
   625  0616                     	;# 
   626  0E8E                     	;# 
   627  0E8F                     	;# 
   628  0E90                     	;# 
   629  0E91                     	;# 
   630  0E92                     	;# 
   631  0E93                     	;# 
   632  0E94                     	;# 
   633  0E94                     	;# 
   634  0E95                     	;# 
   635  0E96                     	;# 
   636  0E97                     	;# 
   637  0E98                     	;# 
   638  0E99                     	;# 
   639  0E9A                     	;# 
   640  0E9B                     	;# 
   641  0E9C                     	;# 
   642  0E9D                     	;# 
   643  0E9E                     	;# 
   644  0E9F                     	;# 
   645  0FE4                     	;# 
   646  0FE5                     	;# 
   647  0FE6                     	;# 
   648  0FE7                     	;# 
   649  0FE8                     	;# 
   650  0FE9                     	;# 
   651  0FEA                     	;# 
   652  0FEB                     	;# 
   653  0FED                     	;# 
   654  0FEE                     	;# 
   655  0FEF                     	;# 
   656  0000                     	;# 
   657  0001                     	;# 
   658  0002                     	;# 
   659  0003                     	;# 
   660  0004                     	;# 
   661  0005                     	;# 
   662  0006                     	;# 
   663  0007                     	;# 
   664  0008                     	;# 
   665  0009                     	;# 
   666  000A                     	;# 
   667  000B                     	;# 
   668  000C                     	;# 
   669  000E                     	;# 
   670  0011                     	;# 
   671  0012                     	;# 
   672  0015                     	;# 
   673  0016                     	;# 
   674  0016                     	;# 
   675  0017                     	;# 
   676  0018                     	;# 
   677  0019                     	;# 
   678  001A                     	;# 
   679  001B                     	;# 
   680  001C                     	;# 
   681  008C                     	;# 
   682  008E                     	;# 
   683  0091                     	;# 
   684  0092                     	;# 
   685  0095                     	;# 
   686  0096                     	;# 
   687  0097                     	;# 
   688  0098                     	;# 
   689  0099                     	;# 
   690  009A                     	;# 
   691  010C                     	;# 
   692  010E                     	;# 
   693  0116                     	;# 
   694  0117                     	;# 
   695  011D                     	;# 
   696  018C                     	;# 
   697  018E                     	;# 
   698  0191                     	;# 
   699  0191                     	;# 
   700  0192                     	;# 
   701  0193                     	;# 
   702  0193                     	;# 
   703  0194                     	;# 
   704  0195                     	;# 
   705  0196                     	;# 
   706  0197                     	;# 
   707  0199                     	;# 
   708  019A                     	;# 
   709  019B                     	;# 
   710  019B                     	;# 
   711  019C                     	;# 
   712  019D                     	;# 
   713  019E                     	;# 
   714  019F                     	;# 
   715  020C                     	;# 
   716  0211                     	;# 
   717  0211                     	;# 
   718  0212                     	;# 
   719  0212                     	;# 
   720  0213                     	;# 
   721  0213                     	;# 
   722  0214                     	;# 
   723  0214                     	;# 
   724  0215                     	;# 
   725  0215                     	;# 
   726  0215                     	;# 
   727  0216                     	;# 
   728  0216                     	;# 
   729  0217                     	;# 
   730  0217                     	;# 
   731  0391                     	;# 
   732  0392                     	;# 
   733  0393                     	;# 
   734  039A                     	;# 
   735  039B                     	;# 
   736  0611                     	;# 
   737  0612                     	;# 
   738  0613                     	;# 
   739  0613                     	;# 
   740  0614                     	;# 
   741  0615                     	;# 
   742  0616                     	;# 
   743  0616                     	;# 
   744  0E8E                     	;# 
   745  0E8F                     	;# 
   746  0E90                     	;# 
   747  0E91                     	;# 
   748  0E92                     	;# 
   749  0E93                     	;# 
   750  0E94                     	;# 
   751  0E94                     	;# 
   752  0E95                     	;# 
   753  0E96                     	;# 
   754  0E97                     	;# 
   755  0E98                     	;# 
   756  0E99                     	;# 
   757  0E9A                     	;# 
   758  0E9B                     	;# 
   759  0E9C                     	;# 
   760  0E9D                     	;# 
   761  0E9E                     	;# 
   762  0E9F                     	;# 
   763  0FE4                     	;# 
   764  0FE5                     	;# 
   765  0FE6                     	;# 
   766  0FE7                     	;# 
   767  0FE8                     	;# 
   768  0FE9                     	;# 
   769  0FEA                     	;# 
   770  0FEB                     	;# 
   771  0FED                     	;# 
   772  0FEE                     	;# 
   773  0FEF                     	;# 
   774  0000                     	;# 
   775  0001                     	;# 
   776  0002                     	;# 
   777  0003                     	;# 
   778  0004                     	;# 
   779  0005                     	;# 
   780  0006                     	;# 
   781  0007                     	;# 
   782  0008                     	;# 
   783  0009                     	;# 
   784  000A                     	;# 
   785  000B                     	;# 
   786  000C                     	;# 
   787  000E                     	;# 
   788  0011                     	;# 
   789  0012                     	;# 
   790  0015                     	;# 
   791  0016                     	;# 
   792  0016                     	;# 
   793  0017                     	;# 
   794  0018                     	;# 
   795  0019                     	;# 
   796  001A                     	;# 
   797  001B                     	;# 
   798  001C                     	;# 
   799  008C                     	;# 
   800  008E                     	;# 
   801  0091                     	;# 
   802  0092                     	;# 
   803  0095                     	;# 
   804  0096                     	;# 
   805  0097                     	;# 
   806  0098                     	;# 
   807  0099                     	;# 
   808  009A                     	;# 
   809  010C                     	;# 
   810  010E                     	;# 
   811  0116                     	;# 
   812  0117                     	;# 
   813  011D                     	;# 
   814  018C                     	;# 
   815  018E                     	;# 
   816  0191                     	;# 
   817  0191                     	;# 
   818  0192                     	;# 
   819  0193                     	;# 
   820  0193                     	;# 
   821  0194                     	;# 
   822  0195                     	;# 
   823  0196                     	;# 
   824  0197                     	;# 
   825  0199                     	;# 
   826  019A                     	;# 
   827  019B                     	;# 
   828  019B                     	;# 
   829  019C                     	;# 
   830  019D                     	;# 
   831  019E                     	;# 
   832  019F                     	;# 
   833  020C                     	;# 
   834  0211                     	;# 
   835  0211                     	;# 
   836  0212                     	;# 
   837  0212                     	;# 
   838  0213                     	;# 
   839  0213                     	;# 
   840  0214                     	;# 
   841  0214                     	;# 
   842  0215                     	;# 
   843  0215                     	;# 
   844  0215                     	;# 
   845  0216                     	;# 
   846  0216                     	;# 
   847  0217                     	;# 
   848  0217                     	;# 
   849  0391                     	;# 
   850  0392                     	;# 
   851  0393                     	;# 
   852  039A                     	;# 
   853  039B                     	;# 
   854  0611                     	;# 
   855  0612                     	;# 
   856  0613                     	;# 
   857  0613                     	;# 
   858  0614                     	;# 
   859  0615                     	;# 
   860  0616                     	;# 
   861  0616                     	;# 
   862  0E8E                     	;# 
   863  0E8F                     	;# 
   864  0E90                     	;# 
   865  0E91                     	;# 
   866  0E92                     	;# 
   867  0E93                     	;# 
   868  0E94                     	;# 
   869  0E94                     	;# 
   870  0E95                     	;# 
   871  0E96                     	;# 
   872  0E97                     	;# 
   873  0E98                     	;# 
   874  0E99                     	;# 
   875  0E9A                     	;# 
   876  0E9B                     	;# 
   877  0E9C                     	;# 
   878  0E9D                     	;# 
   879  0E9E                     	;# 
   880  0E9F                     	;# 
   881  0FE4                     	;# 
   882  0FE5                     	;# 
   883  0FE6                     	;# 
   884  0FE7                     	;# 
   885  0FE8                     	;# 
   886  0FE9                     	;# 
   887  0FEA                     	;# 
   888  0FEB                     	;# 
   889  0FED                     	;# 
   890  0FEE                     	;# 
   891  0FEF                     	;# 
   892  0000                     	;# 
   893  0001                     	;# 
   894  0002                     	;# 
   895  0003                     	;# 
   896  0004                     	;# 
   897  0005                     	;# 
   898  0006                     	;# 
   899  0007                     	;# 
   900  0008                     	;# 
   901  0009                     	;# 
   902  000A                     	;# 
   903  000B                     	;# 
   904  000C                     	;# 
   905  000E                     	;# 
   906  0011                     	;# 
   907  0012                     	;# 
   908  0015                     	;# 
   909  0016                     	;# 
   910  0016                     	;# 
   911  0017                     	;# 
   912  0018                     	;# 
   913  0019                     	;# 
   914  001A                     	;# 
   915  001B                     	;# 
   916  001C                     	;# 
   917  008C                     	;# 
   918  008E                     	;# 
   919  0091                     	;# 
   920  0092                     	;# 
   921  0095                     	;# 
   922  0096                     	;# 
   923  0097                     	;# 
   924  0098                     	;# 
   925  0099                     	;# 
   926  009A                     	;# 
   927  010C                     	;# 
   928  010E                     	;# 
   929  0116                     	;# 
   930  0117                     	;# 
   931  011D                     	;# 
   932  018C                     	;# 
   933  018E                     	;# 
   934  0191                     	;# 
   935  0191                     	;# 
   936  0192                     	;# 
   937  0193                     	;# 
   938  0193                     	;# 
   939  0194                     	;# 
   940  0195                     	;# 
   941  0196                     	;# 
   942  0197                     	;# 
   943  0199                     	;# 
   944  019A                     	;# 
   945  019B                     	;# 
   946  019B                     	;# 
   947  019C                     	;# 
   948  019D                     	;# 
   949  019E                     	;# 
   950  019F                     	;# 
   951  020C                     	;# 
   952  0211                     	;# 
   953  0211                     	;# 
   954  0212                     	;# 
   955  0212                     	;# 
   956  0213                     	;# 
   957  0213                     	;# 
   958  0214                     	;# 
   959  0214                     	;# 
   960  0215                     	;# 
   961  0215                     	;# 
   962  0215                     	;# 
   963  0216                     	;# 
   964  0216                     	;# 
   965  0217                     	;# 
   966  0217                     	;# 
   967  0391                     	;# 
   968  0392                     	;# 
   969  0393                     	;# 
   970  039A                     	;# 
   971  039B                     	;# 
   972  0611                     	;# 
   973  0612                     	;# 
   974  0613                     	;# 
   975  0613                     	;# 
   976  0614                     	;# 
   977  0615                     	;# 
   978  0616                     	;# 
   979  0616                     	;# 
   980  0E8E                     	;# 
   981  0E8F                     	;# 
   982  0E90                     	;# 
   983  0E91                     	;# 
   984  0E92                     	;# 
   985  0E93                     	;# 
   986  0E94                     	;# 
   987  0E94                     	;# 
   988  0E95                     	;# 
   989  0E96                     	;# 
   990  0E97                     	;# 
   991  0E98                     	;# 
   992  0E99                     	;# 
   993  0E9A                     	;# 
   994  0E9B                     	;# 
   995  0E9C                     	;# 
   996  0E9D                     	;# 
   997  0E9E                     	;# 
   998  0E9F                     	;# 
   999  0FE4                     	;# 
  1000  0FE5                     	;# 
  1001  0FE6                     	;# 
  1002  0FE7                     	;# 
  1003  0FE8                     	;# 
  1004  0FE9                     	;# 
  1005  0FEA                     	;# 
  1006  0FEB                     	;# 
  1007  0FED                     	;# 
  1008  0FEE                     	;# 
  1009  0FEF                     	;# 
  1010  0000                     	;# 
  1011  0001                     	;# 
  1012  0002                     	;# 
  1013  0003                     	;# 
  1014  0004                     	;# 
  1015  0005                     	;# 
  1016  0006                     	;# 
  1017  0007                     	;# 
  1018  0008                     	;# 
  1019  0009                     	;# 
  1020  000A                     	;# 
  1021  000B                     	;# 
  1022  000C                     	;# 
  1023  000E                     	;# 
  1024  0011                     	;# 
  1025  0012                     	;# 
  1026  0015                     	;# 
  1027  0016                     	;# 
  1028  0016                     	;# 
  1029  0017                     	;# 
  1030  0018                     	;# 
  1031  0019                     	;# 
  1032  001A                     	;# 
  1033  001B                     	;# 
  1034  001C                     	;# 
  1035  008C                     	;# 
  1036  008E                     	;# 
  1037  0091                     	;# 
  1038  0092                     	;# 
  1039  0095                     	;# 
  1040  0096                     	;# 
  1041  0097                     	;# 
  1042  0098                     	;# 
  1043  0099                     	;# 
  1044  009A                     	;# 
  1045  010C                     	;# 
  1046  010E                     	;# 
  1047  0116                     	;# 
  1048  0117                     	;# 
  1049  011D                     	;# 
  1050  018C                     	;# 
  1051  018E                     	;# 
  1052  0191                     	;# 
  1053  0191                     	;# 
  1054  0192                     	;# 
  1055  0193                     	;# 
  1056  0193                     	;# 
  1057  0194                     	;# 
  1058  0195                     	;# 
  1059  0196                     	;# 
  1060  0197                     	;# 
  1061  0199                     	;# 
  1062  019A                     	;# 
  1063  019B                     	;# 
  1064  019B                     	;# 
  1065  019C                     	;# 
  1066  019D                     	;# 
  1067  019E                     	;# 
  1068  019F                     	;# 
  1069  020C                     	;# 
  1070  0211                     	;# 
  1071  0211                     	;# 
  1072  0212                     	;# 
  1073  0212                     	;# 
  1074  0213                     	;# 
  1075  0213                     	;# 
  1076  0214                     	;# 
  1077  0214                     	;# 
  1078  0215                     	;# 
  1079  0215                     	;# 
  1080  0215                     	;# 
  1081  0216                     	;# 
  1082  0216                     	;# 
  1083  0217                     	;# 
  1084  0217                     	;# 
  1085  0391                     	;# 
  1086  0392                     	;# 
  1087  0393                     	;# 
  1088  039A                     	;# 
  1089  039B                     	;# 
  1090  0611                     	;# 
  1091  0612                     	;# 
  1092  0613                     	;# 
  1093  0613                     	;# 
  1094  0614                     	;# 
  1095  0615                     	;# 
  1096  0616                     	;# 
  1097  0616                     	;# 
  1098  0E8E                     	;# 
  1099  0E8F                     	;# 
  1100  0E90                     	;# 
  1101  0E91                     	;# 
  1102  0E92                     	;# 
  1103  0E93                     	;# 
  1104  0E94                     	;# 
  1105  0E94                     	;# 
  1106  0E95                     	;# 
  1107  0E96                     	;# 
  1108  0E97                     	;# 
  1109  0E98                     	;# 
  1110  0E99                     	;# 
  1111  0E9A                     	;# 
  1112  0E9B                     	;# 
  1113  0E9C                     	;# 
  1114  0E9D                     	;# 
  1115  0E9E                     	;# 
  1116  0E9F                     	;# 
  1117  0FE4                     	;# 
  1118  0FE5                     	;# 
  1119  0FE6                     	;# 
  1120  0FE7                     	;# 
  1121  0FE8                     	;# 
  1122  0FE9                     	;# 
  1123  0FEA                     	;# 
  1124  0FEB                     	;# 
  1125  0FED                     	;# 
  1126  0FEE                     	;# 
  1127  0FEF                     	;# 
  1128  0000                     	;# 
  1129  0001                     	;# 
  1130  0002                     	;# 
  1131  0003                     	;# 
  1132  0004                     	;# 
  1133  0005                     	;# 
  1134  0006                     	;# 
  1135  0007                     	;# 
  1136  0008                     	;# 
  1137  0009                     	;# 
  1138  000A                     	;# 
  1139  000B                     	;# 
  1140  000C                     	;# 
  1141  000E                     	;# 
  1142  0011                     	;# 
  1143  0012                     	;# 
  1144  0015                     	;# 
  1145  0016                     	;# 
  1146  0016                     	;# 
  1147  0017                     	;# 
  1148  0018                     	;# 
  1149  0019                     	;# 
  1150  001A                     	;# 
  1151  001B                     	;# 
  1152  001C                     	;# 
  1153  008C                     	;# 
  1154  008E                     	;# 
  1155  0091                     	;# 
  1156  0092                     	;# 
  1157  0095                     	;# 
  1158  0096                     	;# 
  1159  0097                     	;# 
  1160  0098                     	;# 
  1161  0099                     	;# 
  1162  009A                     	;# 
  1163  010C                     	;# 
  1164  010E                     	;# 
  1165  0116                     	;# 
  1166  0117                     	;# 
  1167  011D                     	;# 
  1168  018C                     	;# 
  1169  018E                     	;# 
  1170  0191                     	;# 
  1171  0191                     	;# 
  1172  0192                     	;# 
  1173  0193                     	;# 
  1174  0193                     	;# 
  1175  0194                     	;# 
  1176  0195                     	;# 
  1177  0196                     	;# 
  1178  0197                     	;# 
  1179  0199                     	;# 
  1180  019A                     	;# 
  1181  019B                     	;# 
  1182  019B                     	;# 
  1183  019C                     	;# 
  1184  019D                     	;# 
  1185  019E                     	;# 
  1186  019F                     	;# 
  1187  020C                     	;# 
  1188  0211                     	;# 
  1189  0211                     	;# 
  1190  0212                     	;# 
  1191  0212                     	;# 
  1192  0213                     	;# 
  1193  0213                     	;# 
  1194  0214                     	;# 
  1195  0214                     	;# 
  1196  0215                     	;# 
  1197  0215                     	;# 
  1198  0215                     	;# 
  1199  0216                     	;# 
  1200  0216                     	;# 
  1201  0217                     	;# 
  1202  0217                     	;# 
  1203  0391                     	;# 
  1204  0392                     	;# 
  1205  0393                     	;# 
  1206  039A                     	;# 
  1207  039B                     	;# 
  1208  0611                     	;# 
  1209  0612                     	;# 
  1210  0613                     	;# 
  1211  0613                     	;# 
  1212  0614                     	;# 
  1213  0615                     	;# 
  1214  0616                     	;# 
  1215  0616                     	;# 
  1216  0E8E                     	;# 
  1217  0E8F                     	;# 
  1218  0E90                     	;# 
  1219  0E91                     	;# 
  1220  0E92                     	;# 
  1221  0E93                     	;# 
  1222  0E94                     	;# 
  1223  0E94                     	;# 
  1224  0E95                     	;# 
  1225  0E96                     	;# 
  1226  0E97                     	;# 
  1227  0E98                     	;# 
  1228  0E99                     	;# 
  1229  0E9A                     	;# 
  1230  0E9B                     	;# 
  1231  0E9C                     	;# 
  1232  0E9D                     	;# 
  1233  0E9E                     	;# 
  1234  0E9F                     	;# 
  1235  0FE4                     	;# 
  1236  0FE5                     	;# 
  1237  0FE6                     	;# 
  1238  0FE7                     	;# 
  1239  0FE8                     	;# 
  1240  0FE9                     	;# 
  1241  0FEA                     	;# 
  1242  0FEB                     	;# 
  1243  0FED                     	;# 
  1244  0FEE                     	;# 
  1245  0FEF                     	;# 
  1246  0000                     	;# 
  1247  0001                     	;# 
  1248  0002                     	;# 
  1249  0003                     	;# 
  1250  0004                     	;# 
  1251  0005                     	;# 
  1252  0006                     	;# 
  1253  0007                     	;# 
  1254  0008                     	;# 
  1255  0009                     	;# 
  1256  000A                     	;# 
  1257  000B                     	;# 
  1258  000C                     	;# 
  1259  000E                     	;# 
  1260  0011                     	;# 
  1261  0012                     	;# 
  1262  0015                     	;# 
  1263  0016                     	;# 
  1264  0016                     	;# 
  1265  0017                     	;# 
  1266  0018                     	;# 
  1267  0019                     	;# 
  1268  001A                     	;# 
  1269  001B                     	;# 
  1270  001C                     	;# 
  1271  008C                     	;# 
  1272  008E                     	;# 
  1273  0091                     	;# 
  1274  0092                     	;# 
  1275  0095                     	;# 
  1276  0096                     	;# 
  1277  0097                     	;# 
  1278  0098                     	;# 
  1279  0099                     	;# 
  1280  009A                     	;# 
  1281  010C                     	;# 
  1282  010E                     	;# 
  1283  0116                     	;# 
  1284  0117                     	;# 
  1285  011D                     	;# 
  1286  018C                     	;# 
  1287  018E                     	;# 
  1288  0191                     	;# 
  1289  0191                     	;# 
  1290  0192                     	;# 
  1291  0193                     	;# 
  1292  0193                     	;# 
  1293  0194                     	;# 
  1294  0195                     	;# 
  1295  0196                     	;# 
  1296  0197                     	;# 
  1297  0199                     	;# 
  1298  019A                     	;# 
  1299  019B                     	;# 
  1300  019B                     	;# 
  1301  019C                     	;# 
  1302  019D                     	;# 
  1303  019E                     	;# 
  1304  019F                     	;# 
  1305  020C                     	;# 
  1306  0211                     	;# 
  1307  0211                     	;# 
  1308  0212                     	;# 
  1309  0212                     	;# 
  1310  0213                     	;# 
  1311  0213                     	;# 
  1312  0214                     	;# 
  1313  0214                     	;# 
  1314  0215                     	;# 
  1315  0215                     	;# 
  1316  0215                     	;# 
  1317  0216                     	;# 
  1318  0216                     	;# 
  1319  0217                     	;# 
  1320  0217                     	;# 
  1321  0391                     	;# 
  1322  0392                     	;# 
  1323  0393                     	;# 
  1324  039A                     	;# 
  1325  039B                     	;# 
  1326  0611                     	;# 
  1327  0612                     	;# 
  1328  0613                     	;# 
  1329  0613                     	;# 
  1330  0614                     	;# 
  1331  0615                     	;# 
  1332  0616                     	;# 
  1333  0616                     	;# 
  1334  0E8E                     	;# 
  1335  0E8F                     	;# 
  1336  0E90                     	;# 
  1337  0E91                     	;# 
  1338  0E92                     	;# 
  1339  0E93                     	;# 
  1340  0E94                     	;# 
  1341  0E94                     	;# 
  1342  0E95                     	;# 
  1343  0E96                     	;# 
  1344  0E97                     	;# 
  1345  0E98                     	;# 
  1346  0E99                     	;# 
  1347  0E9A                     	;# 
  1348  0E9B                     	;# 
  1349  0E9C                     	;# 
  1350  0E9D                     	;# 
  1351  0E9E                     	;# 
  1352  0E9F                     	;# 
  1353  0FE4                     	;# 
  1354  0FE5                     	;# 
  1355  0FE6                     	;# 
  1356  0FE7                     	;# 
  1357  0FE8                     	;# 
  1358  0FE9                     	;# 
  1359  0FEA                     	;# 
  1360  0FEB                     	;# 
  1361  0FED                     	;# 
  1362  0FEE                     	;# 
  1363  0FEF                     	;_cdc_data_rx
  1364                           
  1365                           	psect	idataBANK5
  1366  1FBD                     __pidataBANK5:	
  1367                           
  1368                           ;initializer for _fsmStateTable
  1369  1FBD  3455               	retlw	low _do_I2C_IDLE
  1370  1FBE  341D               	retlw	high _do_I2C_IDLE
  1371  1FBF  346E               	retlw	low _do_I2C_SEND_ADR_READ
  1372  1FC0  341D               	retlw	high _do_I2C_SEND_ADR_READ
  1373  1FC1  3467               	retlw	low _do_I2C_SEND_ADR_WRITE
  1374  1FC2  341D               	retlw	high _do_I2C_SEND_ADR_WRITE
  1375  1FC3  34D3               	retlw	low _do_I2C_TX
  1376  1FC4  3413               	retlw	high _do_I2C_TX
  1377  1FC5  3486               	retlw	low _do_I2C_RX
  1378  1FC6  3412               	retlw	high _do_I2C_RX
  1379  1FC7  345A               	retlw	low _do_I2C_RCEN
  1380  1FC8  341D               	retlw	high _do_I2C_RCEN
  1381  1FC9  3483               	retlw	low _do_I2C_TX_EMPTY
  1382  1FCA  3410               	retlw	high _do_I2C_TX_EMPTY
  1383  1FCB  3430               	retlw	low _do_I2C_SEND_RESTART_READ
  1384  1FCC  341D               	retlw	high _do_I2C_SEND_RESTART_READ
  1385  1FCD  3434               	retlw	low _do_I2C_SEND_RESTART_WRITE
  1386  1FCE  341D               	retlw	high _do_I2C_SEND_RESTART_WRITE
  1387  1FCF  3438               	retlw	low _do_I2C_SEND_RESTART
  1388  1FD0  341D               	retlw	high _do_I2C_SEND_RESTART
  1389  1FD1  343C               	retlw	low _do_I2C_SEND_STOP
  1390  1FD2  341D               	retlw	high _do_I2C_SEND_STOP
  1391  1FD3  3440               	retlw	low _do_I2C_DO_ACK
  1392  1FD4  341D               	retlw	high _do_I2C_DO_ACK
  1393  1FD5  3444               	retlw	low _do_I2C_DO_NACK_STOP
  1394  1FD6  341D               	retlw	high _do_I2C_DO_NACK_STOP
  1395  1FD7  3448               	retlw	low _do_I2C_DO_NACK_RESTART
  1396  1FD8  341D               	retlw	high _do_I2C_DO_NACK_RESTART
  1397  1FD9  3460               	retlw	low _do_I2C_RESET
  1398  1FDA  341D               	retlw	high _do_I2C_RESET
  1399  1FDB  3412               	retlw	low _do_I2C_DO_ADDRESS_NACK
  1400  1FDC  3410               	retlw	high _do_I2C_DO_ADDRESS_NACK
  1401                           
  1402                           	psect	stringtext1
  1403  18DF                     __pstringtext1:	
  1404  18DF                     _USB_SD_Ptr:	
  1405  18DF  34D7               	retlw	low (_sd000| (0+32768))
  1406  18E0  3498               	retlw	high (_sd000| (0+32768))
  1407  18E1  3443               	retlw	low (_sd001| (0+32768))
  1408  18E2  3498               	retlw	high (_sd001| (0+32768))
  1409  18E3  3477               	retlw	low (_sd002| (0+32768))
  1410  18E4  3498               	retlw	high (_sd002| (0+32768))
  1411  18E5                     __end_of_USB_SD_Ptr:	
  1412                           
  1413                           	psect	stringtext2
  1414  18E8                     __pstringtext2:	
  1415  18E8                     _USB_CD_Ptr:	
  1416  18E8  3400               	retlw	low (_configDescriptor1| (0+32768))
  1417  18E9  3498               	retlw	high (_configDescriptor1| (0+32768))
  1418  18EA                     __end_of_USB_CD_Ptr:	
  1419                           
  1420                           	psect	stringtext3
  1421  1800                     __pstringtext3:	
  1422  1800                     _configDescriptor1:	
  1423  1800  3409               	retlw	9
  1424  1801  3402               	retlw	2
  1425  1802  3443               	retlw	67
  1426  1803  3400               	retlw	0
  1427  1804  3402               	retlw	2
  1428  1805  3401               	retlw	1
  1429  1806  3400               	retlw	0
  1430  1807  34C0               	retlw	192
  1431  1808  3432               	retlw	50
  1432  1809  3409               	retlw	9
  1433  180A  3404               	retlw	4
  1434  180B  3400               	retlw	0
  1435  180C  3400               	retlw	0
  1436  180D  3401               	retlw	1
  1437  180E  3402               	retlw	2
  1438  180F  3402               	retlw	2
  1439  1810  3401               	retlw	1
  1440  1811  3400               	retlw	0
  1441  1812  3405               	retlw	5
  1442  1813  3424               	retlw	36
  1443  1814  3400               	retlw	0
  1444  1815  3410               	retlw	16
  1445  1816  3401               	retlw	1
  1446  1817  3404               	retlw	4
  1447  1818  3424               	retlw	36
  1448  1819  3402               	retlw	2
  1449  181A  3402               	retlw	2
  1450  181B  3405               	retlw	5
  1451  181C  3424               	retlw	36
  1452  181D  3406               	retlw	6
  1453  181E  3400               	retlw	0
  1454  181F  3401               	retlw	1
  1455  1820  3405               	retlw	5
  1456  1821  3424               	retlw	36
  1457  1822  3401               	retlw	1
  1458  1823  3400               	retlw	0
  1459  1824  3401               	retlw	1
  1460  1825  3407               	retlw	7
  1461  1826  3405               	retlw	5
  1462  1827  3481               	retlw	129
  1463  1828  3403               	retlw	3
  1464  1829  340A               	retlw	10
  1465  182A  3400               	retlw	0
  1466  182B  3402               	retlw	2
  1467  182C  3409               	retlw	9
  1468  182D  3404               	retlw	4
  1469  182E  3401               	retlw	1
  1470  182F  3400               	retlw	0
  1471  1830  3402               	retlw	2
  1472  1831  340A               	retlw	10
  1473  1832  3400               	retlw	0
  1474  1833  3400               	retlw	0
  1475  1834  3400               	retlw	0
  1476  1835  3407               	retlw	7
  1477  1836  3405               	retlw	5
  1478  1837  3402               	retlw	2
  1479  1838  3402               	retlw	2
  1480  1839  3440               	retlw	64
  1481  183A  3400               	retlw	0
  1482  183B  3400               	retlw	0
  1483  183C  3407               	retlw	7
  1484  183D  3405               	retlw	5
  1485  183E  3482               	retlw	130
  1486  183F  3402               	retlw	2
  1487  1840  3440               	retlw	64
  1488  1841  3400               	retlw	0
  1489  1842  3400               	retlw	0
  1490  1843                     __end_of_configDescriptor1:	
  1491                           
  1492                           	psect	stringtext4
  1493  1843                     __pstringtext4:	
  1494  1843                     _sd001:	
  1495  1843  3434               	retlw	52
  1496  1844  3403               	retlw	3
  1497  1845  344D               	retlw	77
  1498  1846  3400               	retlw	0
  1499  1847  3469               	retlw	105
  1500  1848  3400               	retlw	0
  1501  1849  3463               	retlw	99
  1502  184A  3400               	retlw	0
  1503  184B  3472               	retlw	114
  1504  184C  3400               	retlw	0
  1505  184D  346F               	retlw	111
  1506  184E  3400               	retlw	0
  1507  184F  3463               	retlw	99
  1508  1850  3400               	retlw	0
  1509  1851  3468               	retlw	104
  1510  1852  3400               	retlw	0
  1511  1853  3469               	retlw	105
  1512  1854  3400               	retlw	0
  1513  1855  3470               	retlw	112
  1514  1856  3400               	retlw	0
  1515  1857  3420               	retlw	32
  1516  1858  3400               	retlw	0
  1517  1859  3454               	retlw	84
  1518  185A  3400               	retlw	0
  1519  185B  3465               	retlw	101
  1520  185C  3400               	retlw	0
  1521  185D  3463               	retlw	99
  1522  185E  3400               	retlw	0
  1523  185F  3468               	retlw	104
  1524  1860  3400               	retlw	0
  1525  1861  346E               	retlw	110
  1526  1862  3400               	retlw	0
  1527  1863  346F               	retlw	111
  1528  1864  3400               	retlw	0
  1529  1865  346C               	retlw	108
  1530  1866  3400               	retlw	0
  1531  1867  346F               	retlw	111
  1532  1868  3400               	retlw	0
  1533  1869  3467               	retlw	103
  1534  186A  3400               	retlw	0
  1535  186B  3479               	retlw	121
  1536  186C  3400               	retlw	0
  1537  186D  3420               	retlw	32
  1538  186E  3400               	retlw	0
  1539  186F  3449               	retlw	73
  1540  1870  3400               	retlw	0
  1541  1871  346E               	retlw	110
  1542  1872  3400               	retlw	0
  1543  1873  3463               	retlw	99
  1544  1874  3400               	retlw	0
  1545  1875  342E               	retlw	46
  1546  1876  3400               	retlw	0
  1547  1877                     __end_of_sd001:	
  1548                           
  1549                           	psect	stringtext5
  1550  1877                     __pstringtext5:	
  1551  1877                     _sd002:	
  1552  1877  341A               	retlw	26
  1553  1878  3403               	retlw	3
  1554  1879  3450               	retlw	80
  1555  187A  3400               	retlw	0
  1556  187B  3472               	retlw	114
  1557  187C  3400               	retlw	0
  1558  187D  346F               	retlw	111
  1559  187E  3400               	retlw	0
  1560  187F  3464               	retlw	100
  1561  1880  3400               	retlw	0
  1562  1881  3475               	retlw	117
  1563  1882  3400               	retlw	0
  1564  1883  3463               	retlw	99
  1565  1884  3400               	retlw	0
  1566  1885  3474               	retlw	116
  1567  1886  3400               	retlw	0
  1568  1887  3420               	retlw	32
  1569  1888  3400               	retlw	0
  1570  1889  344E               	retlw	78
  1571  188A  3400               	retlw	0
  1572  188B  3461               	retlw	97
  1573  188C  3400               	retlw	0
  1574  188D  346D               	retlw	109
  1575  188E  3400               	retlw	0
  1576  188F  3465               	retlw	101
  1577  1890  3400               	retlw	0
  1578  1891                     __end_of_sd002:	
  1579                           
  1580                           	psect	stringtext6
  1581  18C5                     __pstringtext6:	
  1582  18C5                     _device_dsc:	
  1583  18C5  3412               	retlw	18
  1584  18C6  3401               	retlw	1
  1585  18C7  3400               	retlw	0
  1586  18C8  3402               	retlw	2
  1587  18C9  3402               	retlw	2
  1588  18CA  3400               	retlw	0
  1589  18CB  3400               	retlw	0
  1590  18CC  3408               	retlw	8
  1591  18CD  34D8               	retlw	216
  1592  18CE  3404               	retlw	4
  1593  18CF  340A               	retlw	10
  1594  18D0  3400               	retlw	0
  1595  18D1  3400               	retlw	0
  1596  18D2  3401               	retlw	1
  1597  18D3  3401               	retlw	1
  1598  18D4  3402               	retlw	2
  1599  18D5  3400               	retlw	0
  1600  18D6  3401               	retlw	1
  1601  18D7                     __end_of_device_dsc:	
  1602                           
  1603                           	psect	stringtext7
  1604  18D7                     __pstringtext7:	
  1605  18D7                     _sd000:	
  1606  18D7  3404               	retlw	4
  1607  18D8  3403               	retlw	3
  1608  18D9  3409               	retlw	9
  1609  18DA  3404               	retlw	4
  1610  18DB                     __end_of_sd000:	
  1611  20C0                     _cdc_data_rx	set	8384
  1612  2080                     _cdc_data_tx	set	8320
  1613  0011                     _PIR1bits	set	17
  1614  0012                     _PIR2bits	set	18
  1615  000B                     _INTCONbits	set	11
  1616  0073                     _RC3	set	115
  1617  0091                     _PIE1bits	set	145
  1618  0092                     _PIE2bits	set	146
  1619  0097                     _WDTCON	set	151
  1620  0098                     _OSCTUNE	set	152
  1621  0099                     _OSCCON	set	153
  1622  0095                     _OPTION_REGbits	set	149
  1623  008E                     _TRISC	set	142
  1624  008C                     _TRISA	set	140
  1625  04D6                     _PLLRDY	set	1238
  1626  0116                     _BORCON	set	278
  1627  011D                     _APFCON	set	285
  1628  010E                     _LATC	set	270
  1629  010C                     _LATA	set	268
  1630  018C                     _ANSELA	set	396
  1631  018E                     _ANSELC	set	398
  1632  0214                     _SSP1STATbits	set	532
  1633  0213                     _SSP1MSK	set	531
  1634  0211                     _SSP1BUF	set	529
  1635  0216                     _SSP1CON2bits	set	534
  1636  0212                     _SSP1ADD	set	530
  1637  0216                     _SSP1CON2	set	534
  1638  0215                     _SSP1CON1	set	533
  1639  0214                     _SSP1STAT	set	532
  1640  0215                     _SSP1CON1bits	set	533
  1641  020C                     _WPUA	set	524
  1642  039B                     _ACTCON	set	923
  1643  0E98                     _UEP0bits	set	3736
  1644  0E8E                     _UCON	set	3726
  1645  0E8F                     _USTAT	set	3727
  1646  0E92                     _UIEbits	set	3730
  1647  0E90                     _UIRbits	set	3728
  1648  0E96                     _UADDR	set	3734
  1649  0E8E                     _UCONbits	set	3726
  1650  0E92                     _UIE	set	3730
  1651  0E97                     _UEIE	set	3735
  1652  0E91                     _UCFG	set	3729
  1653  0E90                     _UIR	set	3728
  1654  0E93                     _UEIR	set	3731
  1655  0E99                     _UEP1	set	3737
  1656  0E98                     _UEP0	set	3736
  1657  18DB                     STR_2:	
  1658  18DB  344F               	retlw	79	;'O'
  1659  18DC  3446               	retlw	70	;'F'
  1660  18DD  3446               	retlw	70	;'F'
  1661  18DE  3400               	retlw	0
  1662                           
  1663                           	psect	stringtext8
  1664  18E5                     __pstringtext8:	
  1665  18E5                     STR_1:	
  1666  18E5  344F               	retlw	79	;'O'
  1667  18E6  344E               	retlw	78	;'N'
  1668  18E7  3400               	retlw	0
  1669                           
  1670                           	psect	stringtext9
  1671  0000                     __pstringtext9:	
  1672                           
  1673                           ; #config settings
  1674  0000                     
  1675                           	psect	cinit
  1676  0036                     start_initialization:	
  1677  0036                     __initialization:	
  1678                           
  1679                           ; Initialize objects allocated to BANK5
  1680  0036  30BD               	movlw	low __pidataBANK5
  1681  0037  0084               	movwf	4
  1682  0038  309F               	movlw	(high __pidataBANK5)| (0+128)
  1683  0039  0085               	movwf	5
  1684  003A  30A0               	movlw	low __pdataBANK5
  1685  003B  0086               	movwf	6
  1686  003C  3002               	movlw	high __pdataBANK5
  1687  003D  0087               	movwf	7
  1688  003E  3000               	movlw	0
  1689  003F  00FF               	movwf	btemp+1
  1690  0040  3020               	movlw	32
  1691  0041  319D  25A6  3180   	fcall	init_ram
  1692                           
  1693                           ; Clear objects allocated to BANK1
  1694  0044  0021               	movlb	1	; select bank1
  1695  0045  01C3               	clrf	__pbssBANK1& (0+127)
  1696  0046  01C4               	clrf	(__pbssBANK1+1)& (0+127)
  1697  0047  01C5               	clrf	(__pbssBANK1+2)& (0+127)
  1698  0048  01C6               	clrf	(__pbssBANK1+3)& (0+127)
  1699  0049  01C7               	clrf	(__pbssBANK1+4)& (0+127)
  1700  004A  01C8               	clrf	(__pbssBANK1+5)& (0+127)
  1701  004B  01C9               	clrf	(__pbssBANK1+6)& (0+127)
  1702                           
  1703                           ; Clear objects allocated to BANK3
  1704  004C  30B0               	movlw	low __pbssBANK3
  1705  004D  0084               	movwf	4
  1706  004E  3001               	movlw	high __pbssBANK3
  1707  004F  0085               	movwf	5
  1708  0050  303F               	movlw	63
  1709  0051  00FE               	movwf	btemp
  1710  0052  3000               	movlw	0
  1711  0053  00FF               	movwf	btemp+1
  1712  0054  319D  259A  3180   	fcall	clear_ram0
  1713                           
  1714                           ; Clear objects allocated to BANK4
  1715  0057  3020               	movlw	low __pbssBANK4
  1716  0058  0084               	movwf	4
  1717  0059  3002               	movlw	high __pbssBANK4
  1718  005A  0085               	movwf	5
  1719  005B  303E               	movlw	62
  1720  005C  00FE               	movwf	btemp
  1721  005D  3000               	movlw	0
  1722  005E  00FF               	movwf	btemp+1
  1723  005F  319D  259A  3180   	fcall	clear_ram0
  1724                           
  1725                           ; Clear objects allocated to BANK6
  1726  0062  3020               	movlw	low __pbssBANK6
  1727  0063  0084               	movwf	4
  1728  0064  3003               	movlw	high __pbssBANK6
  1729  0065  0085               	movwf	5
  1730  0066  3040               	movlw	64
  1731  0067  00FE               	movwf	btemp
  1732  0068  3000               	movlw	0
  1733  0069  00FF               	movwf	btemp+1
  1734  006A  319D  259A  3180   	fcall	clear_ram0
  1735                           
  1736                           ; Clear objects allocated to BANK7
  1737  006D  30A0               	movlw	low __pbssBANK7
  1738  006E  0084               	movwf	4
  1739  006F  3003               	movlw	high __pbssBANK7
  1740  0070  0085               	movwf	5
  1741  0071  3040               	movlw	64
  1742  0072  00FE               	movwf	btemp
  1743  0073  3000               	movlw	0
  1744  0074  00FF               	movwf	btemp+1
  1745  0075  319D  259A         	fcall	clear_ram0
  1746  0077                     end_of_initialization:	
  1747                           ;End of C runtime variable initialization code
  1748                           
  1749  0077                     __end_of__initialization:	
  1750  0077  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1751  0078  0020               	movlb	0
  1752  0079  3190  2800         	ljmp	_main	;jump to C main() function
  1753                           
  1754                           	psect	bssBANK1
  1755  00C3                     __pbssBANK1:	
  1756  00C3                     _inPipes:	
  1757  00C3                     	ds	5
  1758  00C8                     _pBDTEntryEP0OutNext:	
  1759  00C8                     	ds	2
  1760                           
  1761                           	psect	bssBANK3
  1762  01B0                     __pbssBANK3:	
  1763  01B0                     _outPipes:	
  1764  01B0                     	ds	7
  1765  01B7                     _pBDTEntryIn:	
  1766  01B7                     	ds	6
  1767  01BD                     _pBDTEntryOut:	
  1768  01BD                     	ds	6
  1769  01C3                     _USB1msTickCount:	
  1770  01C3                     	ds	4
  1771  01C7                     _ep_data_out:	
  1772  01C7                     	ds	3
  1773  01CA                     _ep_data_in:	
  1774  01CA                     	ds	3
  1775  01CD                     _CDCDataInHandle:	
  1776  01CD                     	ds	2
  1777  01CF                     _CDCDataOutHandle:	
  1778  01CF                     	ds	2
  1779  01D1                     _pCDCDst:	
  1780  01D1                     	ds	2
  1781  01D3                     _pCDCSrc:	
  1782  01D3                     	ds	2
  1783  01D5                     _buttonPressed:	
  1784  01D5                     	ds	1
  1785  01D6                     _USBTicksSinceSuspendEnd:	
  1786  01D6                     	ds	1
  1787  01D7                     _USBDeferOUTDataStagePackets:	
  1788  01D7                     	ds	1
  1789  01D8                     _USBDeferINDataStagePackets:	
  1790  01D8                     	ds	1
  1791  01D9                     _USBStatusStageEnabledFlag2:	
  1792  01D9                     	ds	1
  1793  01DA                     _USBStatusStageEnabledFlag1:	
  1794  01DA                     	ds	1
  1795  01DB                     _USBDeferStatusStagePacket:	
  1796  01DB                     	ds	1
  1797  01DC                     _USBStatusStageTimeoutCounter:	
  1798  01DC                     	ds	1
  1799  01DD                     _BothEP0OutUOWNsSet:	
  1800  01DD                     	ds	1
  1801  01DE                     _endpoint_number:	
  1802  01DE                     	ds	1
  1803  01DF                     _USBBusIsSuspended:	
  1804  01DF                     	ds	1
  1805  01E0                     _RemoteWakeup:	
  1806  01E0                     	ds	1
  1807  01E1                     _pDst:	
  1808  01E1                     	ds	1
  1809  01E2                     _controlTransferState:	
  1810  01E2                     	ds	1
  1811  01E3                     _shortPacketStatus:	
  1812  01E3                     	ds	1
  1813  01E4                     _pBDTEntryEP0OutCurrent:	
  1814  01E4                     	ds	1
  1815  01E5                     _USBDeviceState:	
  1816  01E5                     	ds	1
  1817  01E6                     _control_signal_bitmap:	
  1818  01E6                     	ds	1
  1819  01E7                     _cdc_mem_type:	
  1820  01E7                     	ds	1
  1821  01E8                     _cdc_tx_len:	
  1822  01E8                     	ds	1
  1823  01E9                     _cdc_trf_state:	
  1824  01E9                     	ds	1
  1825  01EA                     _cdc_rx_len:	
  1826  01EA                     	ds	1
  1827  01EB                     _USBAlternateInterface:	
  1828  01EB                     	ds	2
  1829  01ED                     _USTATcopy:	
  1830  01ED                     	ds	1
  1831  01EE                     _USBActiveConfiguration:	
  1832  01EE                     	ds	1
  1833                           
  1834                           	psect	bssBANK4
  1835  0220                     __pbssBANK4:	
  1836  0220                     _i2c_status:	
  1837  0220                     	ds	29
  1838  023D                     _cdc_notice:	
  1839  023D                     	ds	10
  1840  0247                     _BaudRateGen:	
  1841  0247                     	ds	4
  1842  024B                     _i2c_driver_i2cISR:	
  1843  024B                     	ds	2
  1844  024D                     _i2c_driver_busCollisionISR:	
  1845  024D                     	ds	2
  1846  024F                     _dummy_encapsulated_cmd_response:	
  1847  024F                     	ds	8
  1848  0257                     _line_coding:	
  1849  0257                     	ds	7
  1850                           
  1851                           	psect	dataBANK5
  1852  02A0                     __pdataBANK5:	
  1853  02A0                     _fsmStateTable:	
  1854  02A0                     	ds	32
  1855                           
  1856                           	psect	bssBANK6
  1857  0320                     __pbssBANK6:	
  1858  0320                     _readBuffer:	
  1859  0320                     	ds	64
  1860                           
  1861                           	psect	bssBANK7
  1862  03A0                     __pbssBANK7:	
  1863  03A0                     _writeBuffer:	
  1864  03A0                     	ds	64
  1865                           
  1866                           	psect	inittext
  1867  1DA6                     init_ram:	
  1868  1DA6  00FE               	movwf	126
  1869  1DA7                     initloop:	
  1870  1DA7  0012               	moviw fsr0++
  1871  1DA8  001E               	movwi fsr1++
  1872  1DA9  3001               	movlw	1
  1873  1DAA  02FE               	subwf	126,f
  1874  1DAB  3000               	movlw	0
  1875  1DAC  3BFF               	subwfb	127,f
  1876  1DAD  087F               	movf	127,w
  1877  1DAE  047E               	iorwf	126,w
  1878  1DAF  1903               	btfsc	3,2
  1879  1DB0  3400               	retlw	0
  1880  1DB1  2DA7               	goto	initloop
  1881                           
  1882                           	psect	clrtext
  1883  1D9A                     clear_ram0:	
  1884                           ;	Called with FSR0 containing the base address, and
  1885                           ;	btemp/btemp+1 has the size to clear
  1886                           
  1887  1D9A  0064               	clrwdt	;clear the watchdog before getting into this loop
  1888  1D9B                     clrloop0:	
  1889  1D9B  0180               	clrf	0	;clear RAM location pointed to by FSR
  1890  1D9C  3101               	addfsr 0,1
  1891  1D9D  3001               	movlw	1
  1892  1D9E  02FE               	subwf	126,f
  1893  1D9F  3000               	movlw	0
  1894  1DA0  3BFF               	subwfb	127,f
  1895  1DA1  087F               	movf	127,w
  1896  1DA2  047E               	iorwf	126,w
  1897  1DA3  1903               	btfsc	3,2
  1898  1DA4  3400               	retlw	0	;all done for this memory range, return
  1899  1DA5  2D9B               	goto	clrloop0	;have we reached the end yet?
  1900                           
  1901                           	psect	cstackBANK4
  1902  025E                     __pcstackBANK4:	
  1903  025E                     ??_USBCtrlEPService:	
  1904                           
  1905                           ; 1 bytes @ 0x0
  1906  025E                     	ds	3
  1907  0261                     ??_USBDeviceTasks:	
  1908                           
  1909                           ; 1 bytes @ 0x3
  1910  0261                     	ds	2
  1911                           
  1912                           	psect	cstackBANK3
  1913  01EF                     __pcstackBANK3:	
  1914  01EF                     USBDeviceTasks@i:	
  1915                           
  1916                           ; 1 bytes @ 0x0
  1917  01EF                     	ds	1
  1918                           
  1919                           	psect	cstackBANK1
  1920  00A0                     __pcstackBANK1:	
  1921  00A0                     ??i1_USBCtrlEPService:	
  1922                           
  1923                           ; 1 bytes @ 0x0
  1924  00A0                     	ds	3
  1925  00A3                     ??i1_USBDeviceTasks:	
  1926                           
  1927                           ; 1 bytes @ 0x3
  1928  00A3                     	ds	2
  1929  00A5                     ??_INTERRUPT_InterruptManager:	
  1930                           
  1931                           ; 1 bytes @ 0x5
  1932  00A5                     	ds	1
  1933  00A6                     ??_OSCILLATOR_Initialize:	
  1934  00A6                     ??_WDT_Initialize:	
  1935                           ; 1 bytes @ 0x6
  1936                           
  1937  00A6                     ??_USBDeviceInit:	
  1938                           ; 1 bytes @ 0x6
  1939                           
  1940  00A6                     ??_USBDeviceAttach:	
  1941                           ; 1 bytes @ 0x6
  1942                           
  1943  00A6                     ??_USBIncrement1msInternalTimers:	
  1944                           ; 1 bytes @ 0x6
  1945                           
  1946  00A6                     ??_USBCtrlEPAllowStatusStage:	
  1947                           ; 1 bytes @ 0x6
  1948                           
  1949  00A6                     ??_USBStallHandler:	
  1950                           ; 1 bytes @ 0x6
  1951                           
  1952  00A6                     ?_USBConfigureEndpoint:	
  1953                           ; 1 bytes @ 0x6
  1954                           
  1955  00A6                     ??_USBCtrlTrfTxService:	
  1956                           ; 1 bytes @ 0x6
  1957                           
  1958  00A6                     ?_strcpy:	
  1959                           ; 1 bytes @ 0x6
  1960                           
  1961  00A6                     ?_strchr:	
  1962                           ; 1 bytes @ 0x6
  1963                           
  1964  00A6                     ??_PIN_MANAGER_Initialize:	
  1965                           ; 1 bytes @ 0x6
  1966                           
  1967  00A6                     ??_USBCheckCDCRequest:	
  1968                           ; 1 bytes @ 0x6
  1969                           
  1970  00A6                     ??_putrsUSBUSART:	
  1971                           ; 1 bytes @ 0x6
  1972                           
  1973  00A6                     ??_USBStdGetDscHandler:	
  1974                           ; 1 bytes @ 0x6
  1975                           
  1976  00A6                     ??_USBStdGetStatusHandler:	
  1977                           ; 1 bytes @ 0x6
  1978                           
  1979  00A6                     ?_USBTransferOnePacket:	
  1980                           ; 1 bytes @ 0x6
  1981                           
  1982  00A6                     ?_memset:	
  1983                           ; 2 bytes @ 0x6
  1984                           
  1985  00A6                     ?_strlen:	
  1986                           ; 2 bytes @ 0x6
  1987                           
  1988  00A6                     USBTransferOnePacket@dir:	
  1989                           ; 2 bytes @ 0x6
  1990                           
  1991  00A6                     USBConfigureEndpoint@direction:	
  1992                           ; 1 bytes @ 0x6
  1993                           
  1994  00A6                     strcpy@from:	
  1995                           ; 1 bytes @ 0x6
  1996                           
  1997  00A6                     memset@p1:	
  1998                           ; 1 bytes @ 0x6
  1999                           
  2000  00A6                     strchr@chr:	
  2001                           ; 2 bytes @ 0x6
  2002                           
  2003  00A6                     strlen@s:	
  2004                           ; 2 bytes @ 0x6
  2005                           
  2006                           
  2007                           ; 2 bytes @ 0x6
  2008  00A6                     	ds	1
  2009  00A7                     ??_USBConfigureEndpoint:	
  2010  00A7                     ??_strcpy:	
  2011                           ; 1 bytes @ 0x7
  2012                           
  2013  00A7                     putrsUSBUSART@pData:	
  2014                           ; 1 bytes @ 0x7
  2015                           
  2016  00A7                     USBDeviceInit@p:	
  2017                           ; 1 bytes @ 0x7
  2018                           
  2019  00A7                     USBTransferOnePacket@data:	
  2020                           ; 2 bytes @ 0x7
  2021                           
  2022  00A7                     USBStdGetStatusHandler@p:	
  2023                           ; 2 bytes @ 0x7
  2024                           
  2025                           
  2026                           ; 2 bytes @ 0x7
  2027  00A7                     	ds	1
  2028  00A8                     ??_strlen:	
  2029  00A8                     ??_strchr:	
  2030                           ; 1 bytes @ 0x8
  2031                           
  2032  00A8                     ??_USBCtrlTrfRxService:	
  2033                           ; 1 bytes @ 0x8
  2034                           
  2035  00A8                     putrsUSBUSART@data:	
  2036                           ; 1 bytes @ 0x8
  2037                           
  2038  00A8                     USBCtrlTrfTxService@byteToSend:	
  2039                           ; 1 bytes @ 0x8
  2040                           
  2041  00A8                     strcpy@to:	
  2042                           ; 1 bytes @ 0x8
  2043                           
  2044  00A8                     strchr@ptr:	
  2045                           ; 1 bytes @ 0x8
  2046                           
  2047  00A8                     memset@c:	
  2048                           ; 1 bytes @ 0x8
  2049                           
  2050                           
  2051                           ; 2 bytes @ 0x8
  2052  00A8                     	ds	1
  2053  00A9                     ??_USBCtrlTrfInHandler:	
  2054  00A9                     ??_USBCtrlEPAllowDataStage:	
  2055                           ; 1 bytes @ 0x9
  2056                           
  2057  00A9                     putrsUSBUSART@len:	
  2058                           ; 1 bytes @ 0x9
  2059                           
  2060  00A9                     USBDeviceInit@i_1491:	
  2061                           ; 1 bytes @ 0x9
  2062                           
  2063  00A9                     USBTransferOnePacket@len:	
  2064                           ; 1 bytes @ 0x9
  2065                           
  2066  00A9                     strcpy@cp:	
  2067                           ; 1 bytes @ 0x9
  2068                           
  2069                           
  2070                           ; 1 bytes @ 0x9
  2071  00A9                     	ds	1
  2072  00AA                     ??_USBTransferOnePacket:	
  2073  00AA                     USBDeviceInit@i:	
  2074                           ; 1 bytes @ 0xA
  2075                           
  2076  00AA                     USBCtrlTrfRxService@i:	
  2077                           ; 1 bytes @ 0xA
  2078                           
  2079  00AA                     memset@n:	
  2080                           ; 1 bytes @ 0xA
  2081                           
  2082  00AA                     strlen@cp:	
  2083                           ; 2 bytes @ 0xA
  2084                           
  2085                           
  2086                           ; 2 bytes @ 0xA
  2087  00AA                     	ds	1
  2088  00AB                     ??_SYSTEM_Initialize:	
  2089  00AB                     ??_USBCtrlEPServiceComplete:	
  2090                           ; 1 bytes @ 0xB
  2091                           
  2092  00AB                     USBConfigureEndpoint@EPNum:	
  2093                           ; 1 bytes @ 0xB
  2094                           
  2095  00AB                     USBCtrlTrfRxService@byteToRead:	
  2096                           ; 1 bytes @ 0xB
  2097                           
  2098  00AB                     USBCtrlTrfInHandler@lastDTS:	
  2099                           ; 1 bytes @ 0xB
  2100                           
  2101                           
  2102                           ; 1 bytes @ 0xB
  2103  00AB                     	ds	1
  2104  00AC                     ??_memset:	
  2105  00AC                     ??_USBCtrlTrfOutHandler:	
  2106                           ; 1 bytes @ 0xC
  2107                           
  2108  00AC                     ?_strncmp:	
  2109                           ; 1 bytes @ 0xC
  2110                           
  2111  00AC                     USBConfigureEndpoint@handle:	
  2112                           ; 2 bytes @ 0xC
  2113                           
  2114  00AC                     memset@p:	
  2115                           ; 1 bytes @ 0xC
  2116                           
  2117  00AC                     strncmp@s2:	
  2118                           ; 2 bytes @ 0xC
  2119                           
  2120                           
  2121                           ; 2 bytes @ 0xC
  2122  00AC                     	ds	1
  2123  00AD                     ?_USBEnableEndpoint:	
  2124  00AD                     USBEnableEndpoint@options:	
  2125                           ; 1 bytes @ 0xD
  2126                           
  2127                           
  2128                           ; 1 bytes @ 0xD
  2129  00AD                     	ds	1
  2130  00AE                     ??_USBEnableEndpoint:	
  2131  00AE                     USBTransferOnePacket@ep:	
  2132                           ; 1 bytes @ 0xE
  2133                           
  2134  00AE                     strncmp@len:	
  2135                           ; 1 bytes @ 0xE
  2136                           
  2137                           
  2138                           ; 2 bytes @ 0xE
  2139  00AE                     	ds	1
  2140  00AF                     USBTransferOnePacket@handle:	
  2141                           
  2142                           ; 2 bytes @ 0xF
  2143  00AF                     	ds	1
  2144  00B0                     ??_strncmp:	
  2145  00B0                     USBEnableEndpoint@p:	
  2146                           ; 1 bytes @ 0x10
  2147                           
  2148                           
  2149                           ; 2 bytes @ 0x10
  2150  00B0                     	ds	1
  2151  00B1                     ?_getsUSBUSART:	
  2152  00B1                     ??_CDCTxService:	
  2153                           ; 1 bytes @ 0x11
  2154                           
  2155  00B1                     getsUSBUSART@len:	
  2156                           ; 1 bytes @ 0x11
  2157                           
  2158                           
  2159                           ; 1 bytes @ 0x11
  2160  00B1                     	ds	1
  2161  00B2                     ??_getsUSBUSART:	
  2162  00B2                     CDCTxService@i:	
  2163                           ; 1 bytes @ 0x12
  2164                           
  2165  00B2                     USBEnableEndpoint@ep:	
  2166                           ; 1 bytes @ 0x12
  2167                           
  2168  00B2                     strncmp@s1:	
  2169                           ; 1 bytes @ 0x12
  2170                           
  2171                           
  2172                           ; 1 bytes @ 0x12
  2173  00B2                     	ds	1
  2174  00B3                     ?_strstr:	
  2175  00B3                     ??_CDCInitEP:	
  2176                           ; 1 bytes @ 0x13
  2177                           
  2178  00B3                     CDCTxService@byte_to_send:	
  2179                           ; 1 bytes @ 0x13
  2180                           
  2181  00B3                     strstr@s2:	
  2182                           ; 1 bytes @ 0x13
  2183                           
  2184                           
  2185                           ; 2 bytes @ 0x13
  2186  00B3                     	ds	1
  2187  00B4                     ?_USER_USB_CALLBACK_EVENT_HANDLER:	
  2188  00B4                     getsUSBUSART@buffer:	
  2189                           ; 1 bytes @ 0x14
  2190                           
  2191  00B4                     USER_USB_CALLBACK_EVENT_HANDLER@event:	
  2192                           ; 1 bytes @ 0x14
  2193                           
  2194                           
  2195                           ; 2 bytes @ 0x14
  2196  00B4                     	ds	1
  2197  00B5                     ??_strstr:	
  2198                           
  2199                           ; 1 bytes @ 0x15
  2200  00B5                     	ds	1
  2201  00B6                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  2202                           
  2203                           ; 2 bytes @ 0x16
  2204  00B6                     	ds	2
  2205  00B8                     strstr@s1:	
  2206  00B8                     USER_USB_CALLBACK_EVENT_HANDLER@size:	
  2207                           ; 1 bytes @ 0x18
  2208                           
  2209                           
  2210                           ; 2 bytes @ 0x18
  2211  00B8                     	ds	1
  2212  00B9                     ??_UserApplication:	
  2213                           
  2214                           ; 1 bytes @ 0x19
  2215  00B9                     	ds	1
  2216  00BA                     ??_USBWakeFromSuspend:	
  2217  00BA                     ??_USBSuspend:	
  2218                           ; 1 bytes @ 0x1A
  2219                           
  2220  00BA                     ??_USBStdFeatureReqHandler:	
  2221                           ; 1 bytes @ 0x1A
  2222                           
  2223  00BA                     ??_USER_USB_CALLBACK_EVENT_HANDLER:	
  2224                           ; 1 bytes @ 0x1A
  2225                           
  2226  00BA                     ??_USBStdSetCfgHandler:	
  2227                           ; 1 bytes @ 0x1A
  2228                           
  2229                           
  2230                           ; 1 bytes @ 0x1A
  2231  00BA                     	ds	1
  2232  00BB                     UserApplication@numBytesRead:	
  2233  00BB                     USBStdSetCfgHandler@p:	
  2234                           ; 1 bytes @ 0x1B
  2235                           
  2236                           
  2237                           ; 2 bytes @ 0x1B
  2238  00BB                     	ds	1
  2239  00BC                     USBStdFeatureReqHandler@pUEP:	
  2240                           
  2241                           ; 2 bytes @ 0x1C
  2242  00BC                     	ds	1
  2243  00BD                     USBStdSetCfgHandler@i_2163:	
  2244                           
  2245                           ; 1 bytes @ 0x1D
  2246  00BD                     	ds	1
  2247  00BE                     USBStdSetCfgHandler@i:	
  2248  00BE                     USBStdFeatureReqHandler@current_ep_data:	
  2249                           ; 1 bytes @ 0x1E
  2250                           
  2251                           
  2252                           ; 1 bytes @ 0x1E
  2253  00BE                     	ds	1
  2254  00BF                     USBStdFeatureReqHandler@p:	
  2255                           
  2256                           ; 2 bytes @ 0x1F
  2257  00BF                     	ds	2
  2258  00C1                     ??_USBCheckStdRequest:	
  2259                           
  2260                           ; 1 bytes @ 0x21
  2261  00C1                     	ds	1
  2262  00C2                     ??_USBCtrlTrfSetupHandler:	
  2263                           
  2264                           ; 1 bytes @ 0x22
  2265  00C2                     	ds	1
  2266  00C3                     ??_main:	
  2267                           
  2268                           	psect	cstackCOMMON
  2269  0070                     __pcstackCOMMON:	
  2270                           ; 1 bytes @ 0x23
  2271                           
  2272  0070                     ?_i2c_driver_isNACK:	
  2273  0070                     ?_OSCILLATOR_Initialize:	
  2274                           ; 1 bit 
  2275                           
  2276  0070                     ?_WDT_Initialize:	
  2277                           ; 1 bytes @ 0x0
  2278                           
  2279  0070                     ?_USBDeviceInit:	
  2280                           ; 1 bytes @ 0x0
  2281                           
  2282  0070                     ?_USBDeviceAttach:	
  2283                           ; 1 bytes @ 0x0
  2284                           
  2285  0070                     ?_USBDeviceTasks:	
  2286                           ; 1 bytes @ 0x0
  2287                           
  2288  0070                     ?_USBWakeFromSuspend:	
  2289                           ; 1 bytes @ 0x0
  2290                           
  2291  0070                     ?_USBSuspend:	
  2292                           ; 1 bytes @ 0x0
  2293                           
  2294  0070                     ?_USBIncrement1msInternalTimers:	
  2295                           ; 1 bytes @ 0x0
  2296                           
  2297  0070                     ?_USBCtrlEPAllowStatusStage:	
  2298                           ; 1 bytes @ 0x0
  2299                           
  2300  0070                     ?_USBStallHandler:	
  2301                           ; 1 bytes @ 0x0
  2302                           
  2303  0070                     ?_USBCtrlEPService:	
  2304                           ; 1 bytes @ 0x0
  2305                           
  2306  0070                     ?_USBCtrlTrfTxService:	
  2307                           ; 1 bytes @ 0x0
  2308                           
  2309  0070                     ?_USBCtrlTrfSetupHandler:	
  2310                           ; 1 bytes @ 0x0
  2311                           
  2312  0070                     ?_USBCtrlTrfOutHandler:	
  2313                           ; 1 bytes @ 0x0
  2314                           
  2315  0070                     ?_USBCtrlTrfInHandler:	
  2316                           ; 1 bytes @ 0x0
  2317                           
  2318  0070                     ?_USBCheckStdRequest:	
  2319                           ; 1 bytes @ 0x0
  2320                           
  2321  0070                     ?_USBStdFeatureReqHandler:	
  2322                           ; 1 bytes @ 0x0
  2323                           
  2324  0070                     ?_setCallBack:	
  2325                           ; 1 bytes @ 0x0
  2326                           
  2327  0070                     ?_mssp_clearIRQ:	
  2328                           ; 1 bytes @ 0x0
  2329                           
  2330  0070                     ??_mssp_clearIRQ:	
  2331                           ; 1 bytes @ 0x0
  2332                           
  2333  0070                     ?_i2c_busCollisionISR:	
  2334                           ; 1 bytes @ 0x0
  2335                           
  2336  0070                     ??_i2c_busCollisionISR:	
  2337                           ; 1 bytes @ 0x0
  2338                           
  2339  0070                     ?_i2c_ISR:	
  2340                           ; 1 bytes @ 0x0
  2341                           
  2342  0070                     ?_i2c_driver_resetBus:	
  2343                           ; 1 bytes @ 0x0
  2344                           
  2345  0070                     ??_i2c_driver_resetBus:	
  2346                           ; 1 bytes @ 0x0
  2347                           
  2348  0070                     ?_i2c_driver_restart:	
  2349                           ; 1 bytes @ 0x0
  2350                           
  2351  0070                     ??_i2c_driver_restart:	
  2352                           ; 1 bytes @ 0x0
  2353                           
  2354  0070                     ?_i2c_driver_stop:	
  2355                           ; 1 bytes @ 0x0
  2356                           
  2357  0070                     ??_i2c_driver_stop:	
  2358                           ; 1 bytes @ 0x0
  2359                           
  2360  0070                     ?_i2c_driver_TXData:	
  2361                           ; 1 bytes @ 0x0
  2362                           
  2363  0070                     ??_i2c_driver_TXData:	
  2364                           ; 1 bytes @ 0x0
  2365                           
  2366  0070                     ?_i2c_driver_startRX:	
  2367                           ; 1 bytes @ 0x0
  2368                           
  2369  0070                     ??_i2c_driver_startRX:	
  2370                           ; 1 bytes @ 0x0
  2371                           
  2372  0070                     ?_i2c_driver_sendACK:	
  2373                           ; 1 bytes @ 0x0
  2374                           
  2375  0070                     ??_i2c_driver_sendACK:	
  2376                           ; 1 bytes @ 0x0
  2377                           
  2378  0070                     ?_i2c_driver_sendNACK:	
  2379                           ; 1 bytes @ 0x0
  2380                           
  2381  0070                     ??_i2c_driver_sendNACK:	
  2382                           ; 1 bytes @ 0x0
  2383                           
  2384  0070                     ??_i2c_driver_isNACK:	
  2385                           ; 1 bytes @ 0x0
  2386                           
  2387  0070                     ?_i2c_driver_getRXData:	
  2388                           ; 1 bytes @ 0x0
  2389                           
  2390  0070                     ??_i2c_driver_getRXData:	
  2391                           ; 1 bytes @ 0x0
  2392                           
  2393  0070                     ?_mssp_setIRQ:	
  2394                           ; 1 bytes @ 0x0
  2395                           
  2396  0070                     ??_mssp_setIRQ:	
  2397                           ; 1 bytes @ 0x0
  2398                           
  2399  0070                     ?_i2c_driver_clearBusCollision:	
  2400                           ; 1 bytes @ 0x0
  2401                           
  2402  0070                     ??_i2c_driver_clearBusCollision:	
  2403                           ; 1 bytes @ 0x0
  2404                           
  2405  0070                     ?_UserApplication:	
  2406                           ; 1 bytes @ 0x0
  2407                           
  2408  0070                     ?_PIN_MANAGER_Initialize:	
  2409                           ; 1 bytes @ 0x0
  2410                           
  2411  0070                     ?_SYSTEM_Initialize:	
  2412                           ; 1 bytes @ 0x0
  2413                           
  2414  0070                     ?_INTERRUPT_InterruptManager:	
  2415                           ; 1 bytes @ 0x0
  2416                           
  2417  0070                     ?_USBCheckCDCRequest:	
  2418                           ; 1 bytes @ 0x0
  2419                           
  2420  0070                     ?_CDCInitEP:	
  2421                           ; 1 bytes @ 0x0
  2422                           
  2423  0070                     ?_putrsUSBUSART:	
  2424                           ; 1 bytes @ 0x0
  2425                           
  2426  0070                     ?_CDCTxService:	
  2427                           ; 1 bytes @ 0x0
  2428                           
  2429  0070                     ?_USBCtrlEPAllowDataStage:	
  2430                           ; 1 bytes @ 0x0
  2431                           
  2432  0070                     ?_USBCtrlEPServiceComplete:	
  2433                           ; 1 bytes @ 0x0
  2434                           
  2435  0070                     ?_USBCtrlTrfRxService:	
  2436                           ; 1 bytes @ 0x0
  2437                           
  2438  0070                     ?_USBStdSetCfgHandler:	
  2439                           ; 1 bytes @ 0x0
  2440                           
  2441  0070                     ?_USBStdGetDscHandler:	
  2442                           ; 1 bytes @ 0x0
  2443                           
  2444  0070                     ?_USBStdGetStatusHandler:	
  2445                           ; 1 bytes @ 0x0
  2446                           
  2447  0070                     ?_i2c_setBuffer:	
  2448                           ; 1 bytes @ 0x0
  2449                           
  2450  0070                     ?_do_I2C_RESET:	
  2451                           ; 1 bytes @ 0x0
  2452                           
  2453  0070                     ??_do_I2C_RESET:	
  2454                           ; 1 bytes @ 0x0
  2455                           
  2456  0070                     ?_do_I2C_IDLE:	
  2457                           ; 1 bytes @ 0x0
  2458                           
  2459  0070                     ??_do_I2C_IDLE:	
  2460                           ; 1 bytes @ 0x0
  2461                           
  2462  0070                     ?_do_I2C_SEND_RESTART_READ:	
  2463                           ; 1 bytes @ 0x0
  2464                           
  2465  0070                     ??_do_I2C_SEND_RESTART_READ:	
  2466                           ; 1 bytes @ 0x0
  2467                           
  2468  0070                     ?_do_I2C_SEND_RESTART_WRITE:	
  2469                           ; 1 bytes @ 0x0
  2470                           
  2471  0070                     ??_do_I2C_SEND_RESTART_WRITE:	
  2472                           ; 1 bytes @ 0x0
  2473                           
  2474  0070                     ?_do_I2C_SEND_RESTART:	
  2475                           ; 1 bytes @ 0x0
  2476                           
  2477  0070                     ??_do_I2C_SEND_RESTART:	
  2478                           ; 1 bytes @ 0x0
  2479                           
  2480  0070                     ?_do_I2C_SEND_STOP:	
  2481                           ; 1 bytes @ 0x0
  2482                           
  2483  0070                     ??_do_I2C_SEND_STOP:	
  2484                           ; 1 bytes @ 0x0
  2485                           
  2486  0070                     ?_do_I2C_SEND_ADR_READ:	
  2487                           ; 1 bytes @ 0x0
  2488                           
  2489  0070                     ??_do_I2C_SEND_ADR_READ:	
  2490                           ; 1 bytes @ 0x0
  2491                           
  2492  0070                     ?_do_I2C_SEND_ADR_WRITE:	
  2493                           ; 1 bytes @ 0x0
  2494                           
  2495  0070                     ?_do_I2C_RCEN:	
  2496                           ; 1 bytes @ 0x0
  2497                           
  2498  0070                     ??_do_I2C_RCEN:	
  2499                           ; 1 bytes @ 0x0
  2500                           
  2501  0070                     ?_do_I2C_DO_ACK:	
  2502                           ; 1 bytes @ 0x0
  2503                           
  2504  0070                     ??_do_I2C_DO_ACK:	
  2505                           ; 1 bytes @ 0x0
  2506                           
  2507  0070                     ?_do_I2C_DO_NACK_STOP:	
  2508                           ; 1 bytes @ 0x0
  2509                           
  2510  0070                     ??_do_I2C_DO_NACK_STOP:	
  2511                           ; 1 bytes @ 0x0
  2512                           
  2513  0070                     ?_do_I2C_DO_NACK_RESTART:	
  2514                           ; 1 bytes @ 0x0
  2515                           
  2516  0070                     ??_do_I2C_DO_NACK_RESTART:	
  2517                           ; 1 bytes @ 0x0
  2518                           
  2519  0070                     ?_do_I2C_DO_ADDRESS_NACK:	
  2520                           ; 1 bytes @ 0x0
  2521                           
  2522  0070                     ??_do_I2C_DO_ADDRESS_NACK:	
  2523                           ; 1 bytes @ 0x0
  2524                           
  2525  0070                     ?_do_I2C_TX:	
  2526                           ; 1 bytes @ 0x0
  2527                           
  2528  0070                     ?_do_I2C_RX:	
  2529                           ; 1 bytes @ 0x0
  2530                           
  2531  0070                     ??_do_I2C_RX:	
  2532                           ; 1 bytes @ 0x0
  2533                           
  2534  0070                     ?_do_I2C_TX_EMPTY:	
  2535                           ; 1 bytes @ 0x0
  2536                           
  2537  0070                     ??_do_I2C_TX_EMPTY:	
  2538                           ; 1 bytes @ 0x0
  2539                           
  2540  0070                     ?_main:	
  2541                           ; 1 bytes @ 0x0
  2542                           
  2543  0070                     ?i1_USBCheckCDCRequest:	
  2544                           ; 1 bytes @ 0x0
  2545                           
  2546  0070                     ??i1_USBCheckCDCRequest:	
  2547                           ; 1 bytes @ 0x0
  2548                           
  2549  0070                     ?i1_CDCInitEP:	
  2550                           ; 1 bytes @ 0x0
  2551                           
  2552  0070                     ?i1_USBDeviceInit:	
  2553                           ; 1 bytes @ 0x0
  2554                           
  2555  0070                     ??i1_USBDeviceInit:	
  2556                           ; 1 bytes @ 0x0
  2557                           
  2558  0070                     ?i1_USBDeviceTasks:	
  2559                           ; 1 bytes @ 0x0
  2560                           
  2561  0070                     ?i1_USBCtrlEPAllowStatusStage:	
  2562                           ; 1 bytes @ 0x0
  2563                           
  2564  0070                     ??i1_USBCtrlEPAllowStatusStage:	
  2565                           ; 1 bytes @ 0x0
  2566                           
  2567  0070                     ?i1_USBCtrlEPAllowDataStage:	
  2568                           ; 1 bytes @ 0x0
  2569                           
  2570  0070                     ?i1_USBConfigureEndpoint:	
  2571                           ; 1 bytes @ 0x0
  2572                           
  2573  0070                     ?i1_USBCtrlEPServiceComplete:	
  2574                           ; 1 bytes @ 0x0
  2575                           
  2576  0070                     ?i1_USBCtrlTrfTxService:	
  2577                           ; 1 bytes @ 0x0
  2578                           
  2579  0070                     ??i1_USBCtrlTrfTxService:	
  2580                           ; 1 bytes @ 0x0
  2581                           
  2582  0070                     ?i1_USBCtrlTrfRxService:	
  2583                           ; 1 bytes @ 0x0
  2584                           
  2585  0070                     ?i1_USBStdSetCfgHandler:	
  2586                           ; 1 bytes @ 0x0
  2587                           
  2588  0070                     ?i1_USBStdGetDscHandler:	
  2589                           ; 1 bytes @ 0x0
  2590                           
  2591  0070                     ??i1_USBStdGetDscHandler:	
  2592                           ; 1 bytes @ 0x0
  2593                           
  2594  0070                     ?i1_USBStdGetStatusHandler:	
  2595                           ; 1 bytes @ 0x0
  2596                           
  2597  0070                     ??i1_USBStdGetStatusHandler:	
  2598                           ; 1 bytes @ 0x0
  2599                           
  2600  0070                     ?i1_USBStallHandler:	
  2601                           ; 1 bytes @ 0x0
  2602                           
  2603  0070                     ??i1_USBStallHandler:	
  2604                           ; 1 bytes @ 0x0
  2605                           
  2606  0070                     ?i1_USBSuspend:	
  2607                           ; 1 bytes @ 0x0
  2608                           
  2609  0070                     ?i1_USBWakeFromSuspend:	
  2610                           ; 1 bytes @ 0x0
  2611                           
  2612  0070                     ?i1_USBCtrlEPService:	
  2613                           ; 1 bytes @ 0x0
  2614                           
  2615  0070                     ?i1_USBCtrlTrfSetupHandler:	
  2616                           ; 1 bytes @ 0x0
  2617                           
  2618  0070                     ?i1_USBCtrlTrfOutHandler:	
  2619                           ; 1 bytes @ 0x0
  2620                           
  2621  0070                     ?i1_USBCtrlTrfInHandler:	
  2622                           ; 1 bytes @ 0x0
  2623                           
  2624  0070                     ?i1_USBCheckStdRequest:	
  2625                           ; 1 bytes @ 0x0
  2626                           
  2627  0070                     ?i1_USBStdFeatureReqHandler:	
  2628                           ; 1 bytes @ 0x0
  2629                           
  2630  0070                     ?i1_USBIncrement1msInternalTimers:	
  2631                           ; 1 bytes @ 0x0
  2632                           
  2633  0070                     ??i1_USBIncrement1msInternalTimers:	
  2634                           ; 1 bytes @ 0x0
  2635                           
  2636  0070                     ?i1_memset:	
  2637                           ; 1 bytes @ 0x0
  2638                           
  2639  0070                     ?i1_USBTransferOnePacket:	
  2640                           ; 1 bytes @ 0x0
  2641                           
  2642  0070                     i2c_driver_TXData@d:	
  2643                           ; 2 bytes @ 0x0
  2644                           
  2645  0070                     i1USBTransferOnePacket@dir:	
  2646                           ; 1 bytes @ 0x0
  2647                           
  2648  0070                     i1USBConfigureEndpoint@direction:	
  2649                           ; 1 bytes @ 0x0
  2650                           
  2651  0070                     i2c_setBuffer@bufferSize:	
  2652                           ; 1 bytes @ 0x0
  2653                           
  2654  0070                     setCallBack@cb:	
  2655                           ; 2 bytes @ 0x0
  2656                           
  2657  0070                     i1memset@p1:	
  2658                           ; 2 bytes @ 0x0
  2659                           
  2660                           
  2661                           ; 2 bytes @ 0x0
  2662  0070                     	ds	1
  2663  0071                     ??_do_I2C_SEND_ADR_WRITE:	
  2664  0071                     ??_do_I2C_TX:	
  2665                           ; 1 bytes @ 0x1
  2666                           
  2667  0071                     ??i1_USBConfigureEndpoint:	
  2668                           ; 1 bytes @ 0x1
  2669                           
  2670  0071                     i1USBDeviceInit@p:	
  2671                           ; 1 bytes @ 0x1
  2672                           
  2673  0071                     i1USBTransferOnePacket@data:	
  2674                           ; 2 bytes @ 0x1
  2675                           
  2676  0071                     i1USBStdGetStatusHandler@p:	
  2677                           ; 2 bytes @ 0x1
  2678                           
  2679                           
  2680                           ; 2 bytes @ 0x1
  2681  0071                     	ds	1
  2682  0072                     ??_i2c_setBuffer:	
  2683  0072                     ??i1_USBCtrlTrfRxService:	
  2684                           ; 1 bytes @ 0x2
  2685                           
  2686  0072                     setCallBack@p:	
  2687                           ; 1 bytes @ 0x2
  2688                           
  2689  0072                     i1USBCtrlTrfTxService@byteToSend:	
  2690                           ; 1 bytes @ 0x2
  2691                           
  2692  0072                     _do_I2C_TX$2627:	
  2693                           ; 1 bytes @ 0x2
  2694                           
  2695  0072                     i1memset@c:	
  2696                           ; 2 bytes @ 0x2
  2697                           
  2698                           
  2699                           ; 2 bytes @ 0x2
  2700  0072                     	ds	1
  2701  0073                     ??_setCallBack:	
  2702  0073                     ??i1_USBCtrlEPAllowDataStage:	
  2703                           ; 1 bytes @ 0x3
  2704                           
  2705  0073                     ??i1_USBCtrlTrfInHandler:	
  2706                           ; 1 bytes @ 0x3
  2707                           
  2708  0073                     i2c_setBuffer@buffer:	
  2709                           ; 1 bytes @ 0x3
  2710                           
  2711  0073                     i1USBDeviceInit@i_1491:	
  2712                           ; 1 bytes @ 0x3
  2713                           
  2714  0073                     i1USBTransferOnePacket@len:	
  2715                           ; 1 bytes @ 0x3
  2716                           
  2717                           
  2718                           ; 1 bytes @ 0x3
  2719  0073                     	ds	1
  2720  0074                     ??_i2c_ISR:	
  2721  0074                     ??i1_USBTransferOnePacket:	
  2722                           ; 1 bytes @ 0x4
  2723                           
  2724  0074                     setCallBack@idx:	
  2725                           ; 1 bytes @ 0x4
  2726                           
  2727  0074                     i1USBDeviceInit@i:	
  2728                           ; 1 bytes @ 0x4
  2729                           
  2730  0074                     i1USBCtrlTrfRxService@i:	
  2731                           ; 1 bytes @ 0x4
  2732                           
  2733  0074                     i1memset@n:	
  2734                           ; 1 bytes @ 0x4
  2735                           
  2736                           
  2737                           ; 2 bytes @ 0x4
  2738  0074                     	ds	1
  2739  0075                     ?_i2c_setDataCompleteCallback:	
  2740  0075                     ??i1_USBCtrlEPServiceComplete:	
  2741                           ; 1 bytes @ 0x5
  2742                           
  2743  0075                     i1USBConfigureEndpoint@EPNum:	
  2744                           ; 1 bytes @ 0x5
  2745                           
  2746  0075                     i1USBCtrlTrfRxService@byteToRead:	
  2747                           ; 1 bytes @ 0x5
  2748                           
  2749  0075                     i1USBCtrlTrfInHandler@lastDTS:	
  2750                           ; 1 bytes @ 0x5
  2751                           
  2752  0075                     i2c_setDataCompleteCallback@cb:	
  2753                           ; 1 bytes @ 0x5
  2754                           
  2755                           
  2756                           ; 2 bytes @ 0x5
  2757  0075                     	ds	1
  2758  0076                     ??i1_USBCtrlTrfOutHandler:	
  2759  0076                     ??i1_memset:	
  2760                           ; 1 bytes @ 0x6
  2761                           
  2762  0076                     i1USBConfigureEndpoint@handle:	
  2763                           ; 1 bytes @ 0x6
  2764                           
  2765  0076                     i1memset@p:	
  2766                           ; 1 bytes @ 0x6
  2767                           
  2768                           
  2769                           ; 2 bytes @ 0x6
  2770  0076                     	ds	1
  2771  0077                     ?i1_USBEnableEndpoint:	
  2772  0077                     i2c_setDataCompleteCallback@p:	
  2773                           ; 1 bytes @ 0x7
  2774                           
  2775  0077                     i1USBEnableEndpoint@options:	
  2776                           ; 1 bytes @ 0x7
  2777                           
  2778                           
  2779                           ; 1 bytes @ 0x7
  2780  0077                     	ds	1
  2781  0078                     ??_i2c_setDataCompleteCallback:	
  2782  0078                     ??i1_USBEnableEndpoint:	
  2783                           ; 1 bytes @ 0x8
  2784                           
  2785  0078                     i1USBTransferOnePacket@ep:	
  2786                           ; 1 bytes @ 0x8
  2787                           
  2788                           
  2789                           ; 1 bytes @ 0x8
  2790  0078                     	ds	1
  2791  0079                     ?_returnStop:	
  2792  0079                     ?_returnReset:	
  2793                           ; 1 bytes @ 0x9
  2794                           
  2795  0079                     ?_i2c_restartWrite:	
  2796                           ; 1 bytes @ 0x9
  2797                           
  2798  0079                     ?_wr1RegCompleteHandler:	
  2799                           ; 1 bytes @ 0x9
  2800                           
  2801  0079                     ?_rd1RegCompleteHandler:	
  2802                           ; 1 bytes @ 0x9
  2803                           
  2804  0079                     ?_rd2RegCompleteHandler:	
  2805                           ; 1 bytes @ 0x9
  2806                           
  2807  0079                     ?_wr2RegCompleteHandler:	
  2808                           ; 1 bytes @ 0x9
  2809                           
  2810  0079                     ?_rdBlkRegCompleteHandler:	
  2811                           ; 1 bytes @ 0x9
  2812                           
  2813  0079                     returnStop@p:	
  2814                           ; 1 bytes @ 0x9
  2815                           
  2816  0079                     returnReset@p:	
  2817                           ; 1 bytes @ 0x9
  2818                           
  2819  0079                     i2c_restartWrite@p:	
  2820                           ; 1 bytes @ 0x9
  2821                           
  2822  0079                     wr1RegCompleteHandler@p:	
  2823                           ; 1 bytes @ 0x9
  2824                           
  2825  0079                     rd1RegCompleteHandler@p:	
  2826                           ; 1 bytes @ 0x9
  2827                           
  2828  0079                     rd2RegCompleteHandler@p:	
  2829                           ; 1 bytes @ 0x9
  2830                           
  2831  0079                     wr2RegCompleteHandler@p:	
  2832                           ; 1 bytes @ 0x9
  2833                           
  2834  0079                     rdBlkRegCompleteHandler@p:	
  2835                           ; 1 bytes @ 0x9
  2836                           
  2837  0079                     i1USBTransferOnePacket@handle:	
  2838                           ; 1 bytes @ 0x9
  2839                           
  2840                           
  2841                           ; 2 bytes @ 0x9
  2842  0079                     	ds	1
  2843  007A                     ??_returnStop:	
  2844  007A                     ??_returnReset:	
  2845                           ; 1 bytes @ 0xA
  2846                           
  2847  007A                     ??_i2c_restartWrite:	
  2848                           ; 1 bytes @ 0xA
  2849                           
  2850  007A                     ??_wr1RegCompleteHandler:	
  2851                           ; 1 bytes @ 0xA
  2852                           
  2853  007A                     ??_rd1RegCompleteHandler:	
  2854                           ; 1 bytes @ 0xA
  2855                           
  2856  007A                     ??_rd2RegCompleteHandler:	
  2857                           ; 1 bytes @ 0xA
  2858                           
  2859  007A                     ??_wr2RegCompleteHandler:	
  2860                           ; 1 bytes @ 0xA
  2861                           
  2862  007A                     ??_rdBlkRegCompleteHandler:	
  2863                           ; 1 bytes @ 0xA
  2864                           
  2865  007A                     i1USBEnableEndpoint@p:	
  2866                           ; 1 bytes @ 0xA
  2867                           
  2868                           
  2869                           ; 2 bytes @ 0xA
  2870  007A                     	ds	2
  2871  007C                     i1USBEnableEndpoint@ep:	
  2872                           
  2873                           ; 1 bytes @ 0xC
  2874  007C                     	ds	1
  2875  007D                     ??i1_CDCInitEP:	
  2876                           
  2877                           ; 1 bytes @ 0xD
  2878  007D                     	ds	1
  2879  007E                     ??i1_USER_USB_CALLBACK_EVENT_HANDLER:	
  2880                           
  2881                           	psect	cstackBANK0h
  2882  0060                     __pcstackBANK0h:	
  2883                           ; 1 bytes @ 0xE
  2884                           
  2885  0060                     ?i1_USER_USB_CALLBACK_EVENT_HANDLER:	
  2886  0060                     i1USER_USB_CALLBACK_EVENT_HANDLER@event:	
  2887                           ; 1 bytes @ 0x0
  2888                           
  2889                           
  2890                           ; 2 bytes @ 0x0
  2891  0060                     	ds	2
  2892  0062                     i1USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  2893                           
  2894                           ; 2 bytes @ 0x2
  2895  0062                     	ds	2
  2896  0064                     i1USER_USB_CALLBACK_EVENT_HANDLER@size:	
  2897                           
  2898                           ; 2 bytes @ 0x4
  2899  0064                     	ds	2
  2900  0066                     ??i1_USBStdSetCfgHandler:	
  2901  0066                     ??i1_USBSuspend:	
  2902                           ; 1 bytes @ 0x6
  2903                           
  2904  0066                     ??i1_USBWakeFromSuspend:	
  2905                           ; 1 bytes @ 0x6
  2906                           
  2907  0066                     ??i1_USBStdFeatureReqHandler:	
  2908                           ; 1 bytes @ 0x6
  2909                           
  2910                           
  2911                           ; 1 bytes @ 0x6
  2912  0066                     	ds	1
  2913  0067                     i1USBStdSetCfgHandler@p:	
  2914                           
  2915                           ; 2 bytes @ 0x7
  2916  0067                     	ds	1
  2917  0068                     i1USBStdFeatureReqHandler@pUEP:	
  2918                           
  2919                           ; 2 bytes @ 0x8
  2920  0068                     	ds	1
  2921  0069                     i1USBStdSetCfgHandler@i_2163:	
  2922                           
  2923                           ; 1 bytes @ 0x9
  2924  0069                     	ds	1
  2925  006A                     i1USBStdSetCfgHandler@i:	
  2926  006A                     i1USBStdFeatureReqHandler@current_ep_data:	
  2927                           ; 1 bytes @ 0xA
  2928                           
  2929                           
  2930                           ; 1 bytes @ 0xA
  2931  006A                     	ds	1
  2932  006B                     i1USBStdFeatureReqHandler@p:	
  2933                           
  2934                           ; 2 bytes @ 0xB
  2935  006B                     	ds	2
  2936  006D                     ??i1_USBCheckStdRequest:	
  2937                           
  2938                           ; 1 bytes @ 0xD
  2939  006D                     	ds	1
  2940  006E                     ??i1_USBCtrlTrfSetupHandler:	
  2941                           
  2942                           ; 1 bytes @ 0xE
  2943  006E                     	ds	1
  2944  006F                     i1USBDeviceTasks@i:	
  2945                           
  2946                           ; 1 bytes @ 0xF
  2947  006F                     	ds	1
  2948                           
  2949                           	psect	maintext
  2950  1000                     __pmaintext:	
  2951 ;;
  2952 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2953 ;;
  2954 ;; *************** function _main *****************
  2955 ;; Defined at:
  2956 ;;		line 57 in file "main.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;		None
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;		None
  2961 ;; Return value:  Size  Location     Type
  2962 ;;                  1    wreg      void 
  2963 ;; Registers used:
  2964 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2965 ;; Tracked objects:
  2966 ;;		On entry : B1F/0
  2967 ;;		On exit  : 0/0
  2968 ;;		Unchanged: 0/0
  2969 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2974 ;;Total ram usage:        0 bytes
  2975 ;; Hardware stack levels required when called:   19
  2976 ;; This function calls:
  2977 ;;		_CDCInitEP
  2978 ;;		_CDCTxService
  2979 ;;		_SYSTEM_Initialize
  2980 ;;		_USBDeviceTasks
  2981 ;;		_UserApplication
  2982 ;; This function is called by:
  2983 ;;		Startup code after reset
  2984 ;; This function uses a non-reentrant model
  2985 ;;
  2986                           
  2987                           
  2988                           ;psect for function _main
  2989  1000                     _main:	
  2990                           
  2991                           ;main.c: 61: SYSTEM_Initialize();
  2992                           
  2993                           ;incstack = 0
  2994 ;; hardware stack exceeded
  2995                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2996  1000  319D  25B2  3190   	fcall	_SYSTEM_Initialize
  2997                           
  2998                           ;main.c: 62: CDCInitEP();
  2999  1003  3192  220A  3190   	fcall	_CDCInitEP
  3000                           
  3001                           ;main.c: 63: RC3 = 0;
  3002  1006  0020               	movlb	0	; select bank0
  3003  1007  118E               	bcf	14,3	;volatile
  3004  1008                     l8392:	
  3005                           ;main.c: 80: while(1)
  3006                           
  3007                           
  3008                           ;main.c: 81: {
  3009                           ;main.c: 82: USBDeviceTasks();
  3010  1008  3182  22E1  3190   	fcall	_USBDeviceTasks
  3011                           
  3012                           ;main.c: 88: UserApplication();
  3013  100B  3193  238E  3190   	fcall	_UserApplication
  3014                           
  3015                           ;main.c: 90: CDCTxService();
  3016  100E  3184  24B2  3190   	fcall	_CDCTxService
  3017  1011  2808               	goto	l8392
  3018  1012                     __end_of_main:	
  3019                           
  3020                           	psect	text1
  3021  138E                     __ptext1:	
  3022 ;; *************** function _UserApplication *****************
  3023 ;; Defined at:
  3024 ;;		line 94 in file "main.c"
  3025 ;; Parameters:    Size  Location     Type
  3026 ;;		None
  3027 ;; Auto vars:     Size  Location     Type
  3028 ;;  numBytesRead    1   27[BANK1 ] unsigned char 
  3029 ;;  i               1    0        unsigned char 
  3030 ;; Return value:  Size  Location     Type
  3031 ;;                  1    wreg      void 
  3032 ;; Registers used:
  3033 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3034 ;; Tracked objects:
  3035 ;;		On entry : 0/0
  3036 ;;		On exit  : 0/0
  3037 ;;		Unchanged: 0/0
  3038 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3040 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3041 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3042 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3043 ;;Total ram usage:        3 bytes
  3044 ;; Hardware stack levels used:    1
  3045 ;; Hardware stack levels required when called:   12
  3046 ;; This function calls:
  3047 ;;		_getsUSBUSART
  3048 ;;		_putrsUSBUSART
  3049 ;;		_strcpy
  3050 ;;		_strstr
  3051 ;; This function is called by:
  3052 ;;		_main
  3053 ;; This function uses a non-reentrant model
  3054 ;;
  3055                           
  3056                           
  3057                           ;psect for function _UserApplication
  3058  138E                     _UserApplication:	
  3059                           
  3060                           ;main.c: 103: if( USBDeviceState < CONFIGURED_STATE || UCONbits.SUSPND== 1 )
  3061                           
  3062                           ;incstack = 0
  3063                           ; Regs used in _UserApplication: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3064  138E  3020               	movlw	32
  3065  138F  0023               	movlb	3	; select bank3
  3066  1390  0265               	subwf	_USBDeviceState^(0+384),w	;volatile
  3067  1391  1C03               	skipc
  3068  1392  0008               	return
  3069  1393  003D               	movlb	29	; select bank29
  3070  1394  188E               	btfsc	14,1	;volatile
  3071  1395  0008               	return
  3072                           
  3073                           ;main.c: 106: }
  3074                           ;main.c: 108: if( (cdc_trf_state == 0) == 1)
  3075                           
  3076                           ;main.c: 104: {
  3077                           ;main.c: 105: return;
  3078  1396  0023               	movlb	3	; select bank3
  3079  1397  0869               	movf	_cdc_trf_state^(0+384),w
  3080  1398  1D03               	btfss	3,2
  3081  1399  0008               	return
  3082                           
  3083                           ;main.c: 109: {
  3084                           ;main.c: 110: uint8_t i;
  3085                           ;main.c: 111: uint8_t numBytesRead;
  3086                           ;main.c: 113: numBytesRead = getsUSBUSART(readBuffer, sizeof(readBuffer));
  3087  139A  3040               	movlw	64
  3088  139B  0021               	movlb	1	; select bank1
  3089  139C  00B9               	movwf	??_UserApplication^(0+128)
  3090  139D  0839               	movf	??_UserApplication^(0+128),w
  3091  139E  00B1               	movwf	getsUSBUSART@len^(0+128)
  3092  139F  3020               	movlw	(low (_readBuffer| (0+768)))& (0+255)
  3093  13A0  3196  2684  3193   	fcall	_getsUSBUSART
  3094  13A3  0021               	movlb	1	; select bank1
  3095  13A4  00BA               	movwf	(??_UserApplication+1)^(0+128)
  3096  13A5  083A               	movf	(??_UserApplication+1)^(0+128),w
  3097  13A6  00BB               	movwf	UserApplication@numBytesRead^(0+128)
  3098                           
  3099                           ;main.c: 114: if(numBytesRead > 0)
  3100  13A7  083B               	movf	UserApplication@numBytesRead^(0+128),w
  3101  13A8  1903               	btfsc	3,2
  3102  13A9  0008               	return
  3103                           
  3104                           ;main.c: 115: {
  3105                           ;main.c: 117: if(strstr(readBuffer, "ON")) {
  3106  13AA  30E5               	movlw	low (STR_1| (0+32768))
  3107  13AB  00B3               	movwf	strstr@s2^(0+128)
  3108  13AC  3098               	movlw	high (STR_1| (0+32768))
  3109  13AD  00B4               	movwf	(strstr@s2^(0+128)+1)
  3110  13AE  3020               	movlw	(low (_readBuffer| (0+768)))& (0+255)
  3111  13AF  3192  2248  3193   	fcall	_strstr
  3112  13B2  3A00               	xorlw	0
  3113  13B3  1903               	skipnz
  3114  13B4  2BC4               	goto	l8366
  3115                           
  3116                           ;main.c: 118: RC3 = 1;
  3117  13B5  0020               	movlb	0	; select bank0
  3118  13B6  158E               	bsf	14,3	;volatile
  3119                           
  3120                           ;main.c: 119: strcpy(writeBuffer, readBuffer);
  3121  13B7  3020               	movlw	(low (_readBuffer| (0+768)))& (0+255)
  3122  13B8  0021               	movlb	1	; select bank1
  3123  13B9  00B9               	movwf	??_UserApplication^(0+128)
  3124  13BA  0839               	movf	??_UserApplication^(0+128),w
  3125  13BB  00A6               	movwf	strcpy@from^(0+128)
  3126  13BC  30A0               	movlw	(low (_writeBuffer| (0+768)))& (0+255)
  3127  13BD  319E  26A7  3193   	fcall	_strcpy
  3128                           
  3129                           ;main.c: 120: putrsUSBUSART(writeBuffer);
  3130  13C0  30A0               	movlw	(low (_writeBuffer| (0+768)))& (0+255)
  3131  13C1  3191  2138  3193   	fcall	_putrsUSBUSART
  3132  13C4                     l8366:	
  3133                           
  3134                           ;main.c: 121: }
  3135                           ;main.c: 122: if(strstr(readBuffer, "OFF")) RC3 = 0;
  3136  13C4  30DB               	movlw	low (STR_2| (0+32768))
  3137  13C5  0021               	movlb	1	; select bank1
  3138  13C6  00B3               	movwf	strstr@s2^(0+128)
  3139  13C7  3098               	movlw	high (STR_2| (0+32768))
  3140  13C8  00B4               	movwf	(strstr@s2^(0+128)+1)
  3141  13C9  3020               	movlw	(low (_readBuffer| (0+768)))& (0+255)
  3142  13CA  3192  2248  3193   	fcall	_strstr
  3143  13CD  3A00               	xorlw	0
  3144  13CE  1903               	skipnz
  3145  13CF  0008               	return
  3146  13D0  0020               	movlb	0	; select bank0
  3147  13D1  118E               	bcf	14,3	;volatile
  3148  13D2  0008               	return
  3149  13D3                     __end_of_UserApplication:	
  3150                           
  3151                           	psect	text2
  3152  1248                     __ptext2:	
  3153 ;; *************** function _strstr *****************
  3154 ;; Defined at:
  3155 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strstr.c"
  3156 ;; Parameters:    Size  Location     Type
  3157 ;;  s1              1    wreg     PTR const unsigned char 
  3158 ;;		 -> readBuffer(64), NULL(0), 
  3159 ;;  s2              2   19[BANK1 ] PTR const unsigned char 
  3160 ;;		 -> STR_2(4), STR_1(3), 
  3161 ;; Auto vars:     Size  Location     Type
  3162 ;;  s1              1   24[BANK1 ] PTR const unsigned char 
  3163 ;;		 -> readBuffer(64), NULL(0), 
  3164 ;; Return value:  Size  Location     Type
  3165 ;;                  1    wreg      PTR unsigned char 
  3166 ;; Registers used:
  3167 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3168 ;; Tracked objects:
  3169 ;;		On entry : 0/0
  3170 ;;		On exit  : 0/0
  3171 ;;		Unchanged: 0/0
  3172 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3173 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3174 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3175 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3176 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3177 ;;Total ram usage:        6 bytes
  3178 ;; Hardware stack levels used:    1
  3179 ;; Hardware stack levels required when called:   11
  3180 ;; This function calls:
  3181 ;;		_strchr
  3182 ;;		_strlen
  3183 ;;		_strncmp
  3184 ;; This function is called by:
  3185 ;;		_UserApplication
  3186 ;; This function uses a non-reentrant model
  3187 ;;
  3188                           
  3189                           
  3190                           ;psect for function _strstr
  3191  1248                     _strstr:	
  3192                           
  3193                           ;incstack = 0
  3194                           ; Regs used in _strstr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3195                           ;strstr@s1 stored from wreg
  3196  1248  0021               	movlb	1	; select bank1
  3197  1249  00B8               	movwf	strstr@s1^(0+128)
  3198  124A  2A7A               	goto	l6438
  3199  124B                     l6430:	
  3200  124B  0834               	movf	(strstr@s2+1)^(0+128),w
  3201  124C  00AD               	movwf	(strncmp@s2+1)^(0+128)
  3202  124D  0833               	movf	strstr@s2^(0+128),w
  3203  124E  00AC               	movwf	strncmp@s2^(0+128)
  3204  124F  0834               	movf	(strstr@s2+1)^(0+128),w
  3205  1250  00A7               	movwf	(strlen@s+1)^(0+128)
  3206  1251  0833               	movf	strstr@s2^(0+128),w
  3207  1252  00A6               	movwf	strlen@s^(0+128)
  3208  1253  319F  271E  3192   	fcall	_strlen
  3209  1256  0021               	movlb	1	; select bank1
  3210  1257  0827               	movf	(?_strlen+1)^(0+128),w
  3211  1258  00AF               	movwf	(strncmp@len+1)^(0+128)
  3212  1259  0826               	movf	?_strlen^(0+128),w
  3213  125A  00AE               	movwf	strncmp@len^(0+128)
  3214  125B  0838               	movf	strstr@s1^(0+128),w
  3215  125C  3193  234A  3192   	fcall	_strncmp
  3216  125F  0021               	movlb	1	; select bank1
  3217  1260  082C               	movf	?_strncmp^(0+128),w
  3218  1261  042D               	iorwf	(?_strncmp+1)^(0+128),w
  3219  1262  1D03               	btfss	3,2
  3220  1263  2A66               	goto	l6436
  3221  1264  0838               	movf	strstr@s1^(0+128),w
  3222  1265  0008               	return
  3223  1266                     l6436:	
  3224  1266  0833               	movf	strstr@s2^(0+128),w
  3225  1267  0084               	movwf	4
  3226  1268  0834               	movf	(strstr@s2+1)^(0+128),w
  3227  1269  0085               	movwf	5
  3228  126A  0800               	movf	0,w	;code access
  3229  126B  00B5               	movwf	??_strstr^(0+128)
  3230  126C  01B6               	clrf	(??_strstr^(0+128)+1)
  3231  126D  0835               	movf	??_strstr^(0+128),w
  3232  126E  00A6               	movwf	strchr@chr^(0+128)
  3233  126F  0836               	movf	(??_strstr+1)^(0+128),w
  3234  1270  00A7               	movwf	(strchr@chr+1)^(0+128)
  3235  1271  0838               	movf	strstr@s1^(0+128),w
  3236  1272  3E01               	addlw	1
  3237  1273  319E  2615  3192   	fcall	_strchr
  3238  1276  0021               	movlb	1	; select bank1
  3239  1277  00B7               	movwf	(??_strstr+2)^(0+128)
  3240  1278  0837               	movf	(??_strstr+2)^(0+128),w
  3241  1279  00B8               	movwf	strstr@s1^(0+128)
  3242  127A                     l6438:	
  3243  127A  0838               	movf	strstr@s1^(0+128),w
  3244  127B  1903               	btfsc	3,2
  3245  127C  2A84               	goto	l6442
  3246  127D  0838               	movf	strstr@s1^(0+128),w
  3247  127E  0086               	movwf	6
  3248  127F  3003               	movlw	3	; select bank6/7
  3249  1280  0087               	movwf	7
  3250  1281  0801               	movf	1,w
  3251  1282  1D03               	btfss	3,2
  3252  1283  2A4B               	goto	l6430
  3253  1284                     l6442:	
  3254  1284  3000               	movlw	0
  3255  1285  0008               	return
  3256  1286                     __end_of_strstr:	
  3257                           
  3258                           	psect	text3
  3259  134A                     __ptext3:	
  3260 ;; *************** function _strncmp *****************
  3261 ;; Defined at:
  3262 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
  3263 ;; Parameters:    Size  Location     Type
  3264 ;;  s1              1    wreg     PTR const unsigned char 
  3265 ;;		 -> readBuffer(64), NULL(0), 
  3266 ;;  s2              2   12[BANK1 ] PTR const unsigned char 
  3267 ;;		 -> STR_2(4), STR_1(3), 
  3268 ;;  len             2   14[BANK1 ] unsigned int 
  3269 ;; Auto vars:     Size  Location     Type
  3270 ;;  s1              1   18[BANK1 ] PTR const unsigned char 
  3271 ;;		 -> readBuffer(64), NULL(0), 
  3272 ;; Return value:  Size  Location     Type
  3273 ;;                  2   12[BANK1 ] int 
  3274 ;; Registers used:
  3275 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  3276 ;; Tracked objects:
  3277 ;;		On entry : 0/0
  3278 ;;		On exit  : 0/0
  3279 ;;		Unchanged: 0/0
  3280 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3281 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3282 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3283 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3284 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  3285 ;;Total ram usage:        7 bytes
  3286 ;; Hardware stack levels used:    1
  3287 ;; Hardware stack levels required when called:   10
  3288 ;; This function calls:
  3289 ;;		Nothing
  3290 ;; This function is called by:
  3291 ;;		_strstr
  3292 ;; This function uses a non-reentrant model
  3293 ;;
  3294                           
  3295                           
  3296                           ;psect for function _strncmp
  3297  134A                     _strncmp:	
  3298                           
  3299                           ;incstack = 0
  3300                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
  3301                           ;strncmp@s1 stored from wreg
  3302  134A  0021               	movlb	1	; select bank1
  3303  134B  00B2               	movwf	strncmp@s1^(0+128)
  3304  134C                     l5906:	
  3305  134C  3001               	movlw	1
  3306  134D  02AE               	subwf	strncmp@len^(0+128),f
  3307  134E  3000               	movlw	0
  3308  134F  3BAF               	subwfb	(strncmp@len+1)^(0+128),f
  3309  1350  0A2E               	incf	strncmp@len^(0+128),w
  3310  1351  1903               	btfsc	3,2
  3311  1352  0A2F               	incf	(strncmp@len+1)^(0+128),w
  3312  1353  1903               	btfsc	3,2
  3313  1354  2B8B               	goto	l5908
  3314  1355  0832               	movf	strncmp@s1^(0+128),w
  3315  1356  0086               	movwf	6
  3316  1357  3003               	movlw	3	; select bank6/7
  3317  1358  0087               	movwf	7
  3318  1359  0801               	movf	1,w
  3319  135A  1903               	btfsc	3,2
  3320  135B  2B6A               	goto	l5898
  3321  135C  082C               	movf	strncmp@s2^(0+128),w
  3322  135D  0084               	movwf	4
  3323  135E  082D               	movf	(strncmp@s2+1)^(0+128),w
  3324  135F  0085               	movwf	5
  3325  1360  0800               	movf	0,w	;code access
  3326  1361  00B0               	movwf	??_strncmp^(0+128)
  3327  1362  0832               	movf	strncmp@s1^(0+128),w
  3328  1363  0086               	movwf	6
  3329  1364  3003               	movlw	3	; select bank6/7
  3330  1365  0087               	movwf	7
  3331  1366  0801               	movf	1,w
  3332  1367  0630               	xorwf	??_strncmp^(0+128),w
  3333  1368  1903               	skipnz
  3334  1369  2B82               	goto	l5902
  3335  136A                     l5898:	
  3336  136A  082C               	movf	strncmp@s2^(0+128),w
  3337  136B  0084               	movwf	4
  3338  136C  082D               	movf	(strncmp@s2+1)^(0+128),w
  3339  136D  0085               	movwf	5
  3340  136E  0800               	movf	0,w	;code access
  3341  136F  00B0               	movwf	??_strncmp^(0+128)
  3342  1370  01B1               	clrf	(??_strncmp^(0+128)+1)
  3343  1371  09B0               	comf	??_strncmp^(0+128),f
  3344  1372  09B1               	comf	(??_strncmp^(0+128)+1),f
  3345  1373  0AB0               	incf	??_strncmp^(0+128),f
  3346  1374  1903               	skipnz
  3347  1375  0AB1               	incf	(??_strncmp^(0+128)+1),f
  3348  1376  0832               	movf	strncmp@s1^(0+128),w
  3349  1377  0086               	movwf	6
  3350  1378  3003               	movlw	3	; select bank6/7
  3351  1379  0087               	movwf	7
  3352  137A  0801               	movf	1,w
  3353  137B  0730               	addwf	??_strncmp^(0+128),w
  3354  137C  00AC               	movwf	?_strncmp^(0+128)
  3355  137D  0831               	movf	(??_strncmp+1)^(0+128),w
  3356  137E  1803               	skipnc
  3357  137F  0A31               	incf	(??_strncmp+1)^(0+128),w
  3358  1380  00AD               	movwf	(?_strncmp^(0+128)+1)
  3359  1381  0008               	return
  3360  1382                     l5902:	
  3361  1382  3001               	movlw	1
  3362  1383  00B0               	movwf	??_strncmp^(0+128)
  3363  1384  0830               	movf	??_strncmp^(0+128),w
  3364  1385  07B2               	addwf	strncmp@s1^(0+128),f
  3365  1386  3001               	movlw	1
  3366  1387  07AC               	addwf	strncmp@s2^(0+128),f
  3367  1388  3000               	movlw	0
  3368  1389  3DAD               	addwfc	(strncmp@s2+1)^(0+128),f
  3369  138A  2B4C               	goto	l5906
  3370  138B                     l5908:	
  3371  138B  01AC               	clrf	?_strncmp^(0+128)
  3372  138C  01AD               	clrf	(?_strncmp+1)^(0+128)
  3373  138D  0008               	return
  3374  138E                     __end_of_strncmp:	
  3375                           
  3376                           	psect	text4
  3377  1F1E                     __ptext4:	
  3378 ;; *************** function _strlen *****************
  3379 ;; Defined at:
  3380 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
  3381 ;; Parameters:    Size  Location     Type
  3382 ;;  s               2    6[BANK1 ] PTR const unsigned char 
  3383 ;;		 -> STR_2(4), STR_1(3), 
  3384 ;; Auto vars:     Size  Location     Type
  3385 ;;  cp              2   10[BANK1 ] PTR const unsigned char 
  3386 ;;		 -> STR_2(4), STR_1(3), 
  3387 ;; Return value:  Size  Location     Type
  3388 ;;                  2    6[BANK1 ] unsigned int 
  3389 ;; Registers used:
  3390 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3391 ;; Tracked objects:
  3392 ;;		On entry : 0/0
  3393 ;;		On exit  : 0/0
  3394 ;;		Unchanged: 0/0
  3395 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3396 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3397 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3398 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3399 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3400 ;;Total ram usage:        6 bytes
  3401 ;; Hardware stack levels used:    1
  3402 ;; Hardware stack levels required when called:   10
  3403 ;; This function calls:
  3404 ;;		Nothing
  3405 ;; This function is called by:
  3406 ;;		_strstr
  3407 ;; This function uses a non-reentrant model
  3408 ;;
  3409                           
  3410                           
  3411                           ;psect for function _strlen
  3412  1F1E                     _strlen:	
  3413                           
  3414                           ;incstack = 0
  3415                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  3416  1F1E  0021               	movlb	1	; select bank1
  3417  1F1F  0827               	movf	(strlen@s+1)^(0+128),w
  3418  1F20  00AB               	movwf	(strlen@cp+1)^(0+128)
  3419  1F21  0826               	movf	strlen@s^(0+128),w
  3420  1F22  00AA               	movwf	strlen@cp^(0+128)
  3421  1F23                     l5886:	
  3422  1F23  082A               	movf	strlen@cp^(0+128),w
  3423  1F24  0084               	movwf	4
  3424  1F25  082B               	movf	(strlen@cp+1)^(0+128),w
  3425  1F26  0085               	movwf	5
  3426  1F27  0012               	moviw fsr0++
  3427  1F28  1903               	btfsc	3,2
  3428  1F29  2F2F               	goto	l5888
  3429  1F2A  3001               	movlw	1
  3430  1F2B  07AA               	addwf	strlen@cp^(0+128),f
  3431  1F2C  3000               	movlw	0
  3432  1F2D  3DAB               	addwfc	(strlen@cp+1)^(0+128),f
  3433  1F2E  2F23               	goto	l5886
  3434  1F2F                     l5888:	
  3435  1F2F  0926               	comf	strlen@s^(0+128),w
  3436  1F30  00A8               	movwf	??_strlen^(0+128)
  3437  1F31  0927               	comf	(strlen@s+1)^(0+128),w
  3438  1F32  00A9               	movwf	(??_strlen^(0+128)+1)
  3439  1F33  0AA8               	incf	??_strlen^(0+128),f
  3440  1F34  1903               	skipnz
  3441  1F35  0AA9               	incf	(??_strlen^(0+128)+1),f
  3442  1F36  082A               	movf	strlen@cp^(0+128),w
  3443  1F37  0728               	addwf	??_strlen^(0+128),w
  3444  1F38  00A6               	movwf	?_strlen^(0+128)
  3445  1F39  082B               	movf	(strlen@cp+1)^(0+128),w
  3446  1F3A  3D29               	addwfc	(??_strlen+1)^(0+128),w
  3447  1F3B  00A7               	movwf	(?_strlen+1)^(0+128)
  3448  1F3C  0008               	return
  3449  1F3D                     __end_of_strlen:	
  3450                           
  3451                           	psect	text5
  3452  1E15                     __ptext5:	
  3453 ;; *************** function _strchr *****************
  3454 ;; Defined at:
  3455 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strchr.c"
  3456 ;; Parameters:    Size  Location     Type
  3457 ;;  ptr             1    wreg     PTR const unsigned char 
  3458 ;;		 -> readBuffer(64), NULL(0), 
  3459 ;;  chr             2    6[BANK1 ] int 
  3460 ;; Auto vars:     Size  Location     Type
  3461 ;;  ptr             1    8[BANK1 ] PTR const unsigned char 
  3462 ;;		 -> readBuffer(64), NULL(0), 
  3463 ;; Return value:  Size  Location     Type
  3464 ;;                  1    wreg      PTR unsigned char 
  3465 ;; Registers used:
  3466 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3467 ;; Tracked objects:
  3468 ;;		On entry : 0/0
  3469 ;;		On exit  : 0/0
  3470 ;;		Unchanged: 0/0
  3471 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3472 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3473 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3475 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3476 ;;Total ram usage:        3 bytes
  3477 ;; Hardware stack levels used:    1
  3478 ;; Hardware stack levels required when called:   10
  3479 ;; This function calls:
  3480 ;;		Nothing
  3481 ;; This function is called by:
  3482 ;;		_strstr
  3483 ;; This function uses a non-reentrant model
  3484 ;;
  3485                           
  3486                           
  3487                           ;psect for function _strchr
  3488  1E15                     _strchr:	
  3489                           
  3490                           ;incstack = 0
  3491                           ; Regs used in _strchr: [wreg+fsr1l+fsr1h+status,2+status,0]
  3492                           ;strchr@ptr stored from wreg
  3493  1E15  0021               	movlb	1	; select bank1
  3494  1E16  00A8               	movwf	strchr@ptr^(0+128)
  3495  1E17                     l1546:	
  3496  1E17  0828               	movf	strchr@ptr^(0+128),w
  3497  1E18  0086               	movwf	6
  3498  1E19  3003               	movlw	3	; select bank6/7
  3499  1E1A  0087               	movwf	7
  3500  1E1B  0801               	movf	1,w
  3501  1E1C  0626               	xorwf	strchr@chr^(0+128),w
  3502  1E1D  1D03               	skipz
  3503  1E1E  2E21               	goto	l5918
  3504  1E1F  0828               	movf	strchr@ptr^(0+128),w
  3505  1E20  0008               	return
  3506  1E21                     l5918:	
  3507  1E21  0828               	movf	strchr@ptr^(0+128),w
  3508  1E22  0086               	movwf	6
  3509  1E23  3003               	movlw	3	; select bank6/7
  3510  1E24  0087               	movwf	7
  3511  1E25  0AA8               	incf	strchr@ptr^(0+128),f
  3512  1E26  0801               	movf	1,w
  3513  1E27  1D03               	btfss	3,2
  3514  1E28  2E17               	goto	l1546
  3515  1E29  3000               	movlw	0
  3516  1E2A  0008               	return
  3517  1E2B                     __end_of_strchr:	
  3518                           
  3519                           	psect	text6
  3520  1EA7                     __ptext6:	
  3521 ;; *************** function _strcpy *****************
  3522 ;; Defined at:
  3523 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcpy.c"
  3524 ;; Parameters:    Size  Location     Type
  3525 ;;  to              1    wreg     PTR unsigned char 
  3526 ;;		 -> writeBuffer(64), 
  3527 ;;  from            1    6[BANK1 ] PTR const unsigned char 
  3528 ;;		 -> readBuffer(64), 
  3529 ;; Auto vars:     Size  Location     Type
  3530 ;;  to              1    8[BANK1 ] PTR unsigned char 
  3531 ;;		 -> writeBuffer(64), 
  3532 ;;  cp              1    9[BANK1 ] PTR unsigned char 
  3533 ;;		 -> writeBuffer(64), 
  3534 ;; Return value:  Size  Location     Type
  3535 ;;                  1    wreg      PTR unsigned char 
  3536 ;; Registers used:
  3537 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  3538 ;; Tracked objects:
  3539 ;;		On entry : 0/0
  3540 ;;		On exit  : 0/0
  3541 ;;		Unchanged: 0/0
  3542 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3543 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3544 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3545 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3546 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3547 ;;Total ram usage:        4 bytes
  3548 ;; Hardware stack levels used:    1
  3549 ;; Hardware stack levels required when called:   10
  3550 ;; This function calls:
  3551 ;;		Nothing
  3552 ;; This function is called by:
  3553 ;;		_UserApplication
  3554 ;; This function uses a non-reentrant model
  3555 ;;
  3556                           
  3557                           
  3558                           ;psect for function _strcpy
  3559  1EA7                     _strcpy:	
  3560                           
  3561                           ;incstack = 0
  3562                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0]
  3563                           ;strcpy@to stored from wreg
  3564  1EA7  0021               	movlb	1	; select bank1
  3565  1EA8  00A8               	movwf	strcpy@to^(0+128)
  3566  1EA9  0828               	movf	strcpy@to^(0+128),w
  3567  1EAA  00A7               	movwf	??_strcpy^(0+128)
  3568  1EAB  0827               	movf	??_strcpy^(0+128),w
  3569  1EAC  00A9               	movwf	strcpy@cp^(0+128)
  3570  1EAD                     l6450:	
  3571  1EAD  0829               	movf	strcpy@cp^(0+128),w
  3572  1EAE  0086               	movwf	6
  3573  1EAF  3003               	movlw	3	; select bank6/7
  3574  1EB0  0087               	movwf	7
  3575  1EB1  0826               	movf	strcpy@from^(0+128),w
  3576  1EB2  0084               	movwf	4
  3577  1EB3  3003               	movlw	3	; select bank6/7
  3578  1EB4  0085               	movwf	5
  3579  1EB5  0800               	movf	0,w
  3580  1EB6  3FC0               	movwi [0]fsr1
  3581  1EB7  0889               	movf	9,f
  3582  1EB8  1903               	btfsc	3,2
  3583  1EB9  0008               	return
  3584  1EBA  3001               	movlw	1
  3585  1EBB  00A7               	movwf	??_strcpy^(0+128)
  3586  1EBC  0827               	movf	??_strcpy^(0+128),w
  3587  1EBD  07A9               	addwf	strcpy@cp^(0+128),f
  3588  1EBE  3001               	movlw	1
  3589  1EBF  00A7               	movwf	??_strcpy^(0+128)
  3590  1EC0  0827               	movf	??_strcpy^(0+128),w
  3591  1EC1  07A6               	addwf	strcpy@from^(0+128),f
  3592  1EC2  2EAD               	goto	l6450
  3593  1EC3                     __end_of_strcpy:	
  3594                           ;	Return value of _strcpy is never used
  3595                           
  3596                           
  3597                           	psect	text7
  3598  1138                     __ptext7:	
  3599 ;; *************** function _putrsUSBUSART *****************
  3600 ;; Defined at:
  3601 ;;		line 725 in file "mcc_generated_files/usb/usb_device_cdc.c"
  3602 ;; Parameters:    Size  Location     Type
  3603 ;;  data            1    wreg     PTR const unsigned char 
  3604 ;;		 -> writeBuffer(64), 
  3605 ;; Auto vars:     Size  Location     Type
  3606 ;;  data            1    8[BANK1 ] PTR const unsigned char 
  3607 ;;		 -> writeBuffer(64), 
  3608 ;;  len             1    9[BANK1 ] unsigned char 
  3609 ;;  pData           1    7[BANK1 ] PTR const unsigned char 
  3610 ;;		 -> writeBuffer(64), 
  3611 ;; Return value:  Size  Location     Type
  3612 ;;                  1    wreg      void 
  3613 ;; Registers used:
  3614 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3615 ;; Tracked objects:
  3616 ;;		On entry : 0/0
  3617 ;;		On exit  : 0/0
  3618 ;;		Unchanged: 0/0
  3619 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3621 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3622 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3623 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3624 ;;Total ram usage:        4 bytes
  3625 ;; Hardware stack levels used:    1
  3626 ;; Hardware stack levels required when called:   10
  3627 ;; This function calls:
  3628 ;;		Nothing
  3629 ;; This function is called by:
  3630 ;;		_UserApplication
  3631 ;; This function uses a non-reentrant model
  3632 ;;
  3633                           
  3634                           
  3635                           ;psect for function _putrsUSBUSART
  3636  1138                     _putrsUSBUSART:	
  3637                           
  3638                           ;incstack = 0
  3639                           ; Regs used in _putrsUSBUSART: [wreg+fsr1l+fsr1h+status,2+status,0]
  3640                           ;putrsUSBUSART@data stored from wreg
  3641  1138  0021               	movlb	1	; select bank1
  3642  1139  00A8               	movwf	putrsUSBUSART@data^(0+128)
  3643                           
  3644                           ;usb_device_cdc.c: 727: uint8_t len;
  3645                           ;usb_device_cdc.c: 728: const const char *pData;
  3646                           ;usb_device_cdc.c: 753: {PIE2bits.USBIE = 0;};
  3647  113A  1112               	bcf	18,2	;volatile
  3648                           
  3649                           ;usb_device_cdc.c: 754: if(cdc_trf_state != 0)
  3650  113B  0023               	movlb	3	; select bank3
  3651  113C  0869               	movf	_cdc_trf_state^(0+384),w
  3652  113D  1903               	btfsc	3,2
  3653  113E  2942               	goto	l6158
  3654                           
  3655                           ;usb_device_cdc.c: 755: {
  3656                           ;usb_device_cdc.c: 756: {PIE2bits.USBIE = 1;};
  3657  113F  0021               	movlb	1	; select bank1
  3658  1140  1512               	bsf	18,2	;volatile
  3659                           
  3660                           ;usb_device_cdc.c: 757: return;
  3661  1141  0008               	return
  3662  1142                     l6158:	
  3663                           
  3664                           ;usb_device_cdc.c: 758: }
  3665                           ;usb_device_cdc.c: 764: len = 0;
  3666  1142  0021               	movlb	1	; select bank1
  3667  1143  01A9               	clrf	putrsUSBUSART@len^(0+128)
  3668                           
  3669                           ;usb_device_cdc.c: 765: pData = data;
  3670  1144  0828               	movf	putrsUSBUSART@data^(0+128),w
  3671  1145  00A6               	movwf	??_putrsUSBUSART^(0+128)
  3672  1146  0826               	movf	??_putrsUSBUSART^(0+128),w
  3673  1147  00A7               	movwf	putrsUSBUSART@pData^(0+128)
  3674  1148                     l6162:	
  3675                           ;usb_device_cdc.c: 766: do
  3676                           
  3677                           
  3678                           ;usb_device_cdc.c: 767: {
  3679                           ;usb_device_cdc.c: 768: len++;
  3680  1148  3001               	movlw	1
  3681  1149  00A6               	movwf	??_putrsUSBUSART^(0+128)
  3682  114A  0826               	movf	??_putrsUSBUSART^(0+128),w
  3683  114B  07A9               	addwf	putrsUSBUSART@len^(0+128),f
  3684                           
  3685                           ;usb_device_cdc.c: 769: if(len == 255) break;
  3686  114C  0A29               	incf	putrsUSBUSART@len^(0+128),w
  3687  114D  1903               	btfsc	3,2
  3688  114E  2957               	goto	l6170
  3689                           
  3690                           ;usb_device_cdc.c: 770: }while(*pData++);
  3691  114F  0827               	movf	putrsUSBUSART@pData^(0+128),w
  3692  1150  0086               	movwf	6
  3693  1151  3003               	movlw	3	; select bank6/7
  3694  1152  0087               	movwf	7
  3695  1153  0AA7               	incf	putrsUSBUSART@pData^(0+128),f
  3696  1154  0801               	movf	1,w
  3697  1155  1D03               	btfss	3,2
  3698  1156  2948               	goto	l6162
  3699  1157                     l6170:	
  3700                           
  3701                           ;usb_device_cdc.c: 779: { pCDCSrc.bRom = (const uint8_t*)data; cdc_tx_len = len; cdc_mem
      +                          _type = 0x00; cdc_trf_state = 1; };
  3702  1157  0828               	movf	putrsUSBUSART@data^(0+128),w
  3703  1158  0023               	movlb	3	; select bank3
  3704  1159  00D3               	movwf	_pCDCSrc^(0+384)
  3705  115A  3003               	movlw	3
  3706  115B  00D4               	movwf	(_pCDCSrc+1)^(0+384)
  3707  115C  0021               	movlb	1	; select bank1
  3708  115D  0829               	movf	putrsUSBUSART@len^(0+128),w
  3709  115E  00A6               	movwf	??_putrsUSBUSART^(0+128)
  3710  115F  0826               	movf	??_putrsUSBUSART^(0+128),w
  3711  1160  0023               	movlb	3	; select bank3
  3712  1161  00E8               	movwf	_cdc_tx_len^(0+384)
  3713  1162  01E7               	clrf	_cdc_mem_type^(0+384)
  3714  1163  01E9               	clrf	_cdc_trf_state^(0+384)
  3715  1164  0AE9               	incf	_cdc_trf_state^(0+384),f
  3716                           
  3717                           ;usb_device_cdc.c: 780: {PIE2bits.USBIE = 1;};
  3718  1165  0021               	movlb	1	; select bank1
  3719  1166  1512               	bsf	18,2	;volatile
  3720  1167  0008               	return
  3721  1168                     __end_of_putrsUSBUSART:	
  3722                           
  3723                           	psect	text8
  3724  1684                     __ptext8:	
  3725 ;; *************** function _getsUSBUSART *****************
  3726 ;; Defined at:
  3727 ;;		line 484 in file "mcc_generated_files/usb/usb_device_cdc.c"
  3728 ;; Parameters:    Size  Location     Type
  3729 ;;  buffer          1    wreg     PTR unsigned char 
  3730 ;;		 -> readBuffer(64), 
  3731 ;;  len             1   17[BANK1 ] unsigned char 
  3732 ;; Auto vars:     Size  Location     Type
  3733 ;;  buffer          1   20[BANK1 ] PTR unsigned char 
  3734 ;;		 -> readBuffer(64), 
  3735 ;; Return value:  Size  Location     Type
  3736 ;;                  1    wreg      unsigned char 
  3737 ;; Registers used:
  3738 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3739 ;; Tracked objects:
  3740 ;;		On entry : 0/0
  3741 ;;		On exit  : 0/0
  3742 ;;		Unchanged: 0/0
  3743 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3744 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3745 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3746 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3747 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3748 ;;Total ram usage:        4 bytes
  3749 ;; Hardware stack levels used:    1
  3750 ;; Hardware stack levels required when called:   11
  3751 ;; This function calls:
  3752 ;;		_USBTransferOnePacket
  3753 ;; This function is called by:
  3754 ;;		_UserApplication
  3755 ;; This function uses a non-reentrant model
  3756 ;;
  3757                           
  3758                           
  3759                           ;psect for function _getsUSBUSART
  3760  1684                     _getsUSBUSART:	
  3761                           
  3762                           ;incstack = 0
  3763                           ; Regs used in _getsUSBUSART: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3764                           ;getsUSBUSART@buffer stored from wreg
  3765  1684  0021               	movlb	1	; select bank1
  3766  1685  00B4               	movwf	getsUSBUSART@buffer^(0+128)
  3767                           
  3768                           ;usb_device_cdc.c: 486: cdc_rx_len = 0;
  3769  1686  0023               	movlb	3	; select bank3
  3770  1687  01EA               	clrf	_cdc_rx_len^(0+384)
  3771                           
  3772                           ;usb_device_cdc.c: 488: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
  3773  1688  084F               	movf	_CDCDataOutHandle^(0+384),w
  3774  1689  0450               	iorwf	(_CDCDataOutHandle+1)^(0+384),w
  3775  168A  1903               	btfsc	3,2
  3776  168B  2E92               	goto	l8084
  3777  168C  084F               	movf	_CDCDataOutHandle^(0+384),w
  3778  168D  0086               	movwf	6
  3779  168E  0850               	movf	(_CDCDataOutHandle+1)^(0+384),w
  3780  168F  0087               	movwf	7
  3781  1690  1B81               	btfsc	1,7
  3782  1691  2EDE               	goto	l8098
  3783  1692                     l8084:	
  3784                           
  3785                           ;usb_device_cdc.c: 489: {
  3786                           ;usb_device_cdc.c: 494: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
  3787  1692  084F               	movf	_CDCDataOutHandle^(0+384),w
  3788  1693  0086               	movwf	6
  3789  1694  0850               	movf	(_CDCDataOutHandle+1)^(0+384),w
  3790  1695  0087               	movwf	7
  3791  1696  3141               	addfsr 1,1
  3792  1697  0021               	movlb	1	; select bank1
  3793  1698  0831               	movf	getsUSBUSART@len^(0+128),w
  3794  1699  0201               	subwf	1,w
  3795  169A  1803               	skipnc
  3796  169B  2EA7               	goto	l8088
  3797                           
  3798                           ;usb_device_cdc.c: 495: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
  3799  169C  0023               	movlb	3	; select bank3
  3800  169D  084F               	movf	_CDCDataOutHandle^(0+384),w
  3801  169E  0086               	movwf	6
  3802  169F  0850               	movf	(_CDCDataOutHandle+1)^(0+384),w
  3803  16A0  0087               	movwf	7
  3804  16A1  3141               	addfsr 1,1
  3805  16A2  0801               	movf	1,w
  3806  16A3  0021               	movlb	1	; select bank1
  3807  16A4  00B2               	movwf	??_getsUSBUSART^(0+128)
  3808  16A5  0832               	movf	??_getsUSBUSART^(0+128),w
  3809  16A6  00B1               	movwf	getsUSBUSART@len^(0+128)
  3810  16A7                     l8088:	
  3811                           
  3812                           ;usb_device_cdc.c: 500: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
  3813  16A7  0023               	movlb	3	; select bank3
  3814  16A8  01EA               	clrf	_cdc_rx_len^(0+384)
  3815  16A9                     l8094:	
  3816  16A9  0021               	movlb	1	; select bank1
  3817  16AA  0831               	movf	getsUSBUSART@len^(0+128),w
  3818  16AB  0023               	movlb	3	; select bank3
  3819  16AC  026A               	subwf	_cdc_rx_len^(0+384),w
  3820  16AD  1803               	btfsc	3,0
  3821  16AE  2EC9               	goto	l8096
  3822                           
  3823                           ;usb_device_cdc.c: 501: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
  3824  16AF  086A               	movf	_cdc_rx_len^(0+384),w
  3825  16B0  3EC0               	addlw	192
  3826  16B1  0086               	movwf	6
  3827  16B2  0187               	clrf	7
  3828  16B3  3020               	movlw	32
  3829  16B4  3D87               	addwfc	7,f
  3830  16B5  0801               	movf	1,w
  3831  16B6  0021               	movlb	1	; select bank1
  3832  16B7  00B2               	movwf	??_getsUSBUSART^(0+128)
  3833  16B8  0023               	movlb	3	; select bank3
  3834  16B9  086A               	movf	_cdc_rx_len^(0+384),w
  3835  16BA  0021               	movlb	1	; select bank1
  3836  16BB  0734               	addwf	getsUSBUSART@buffer^(0+128),w
  3837  16BC  00B3               	movwf	(??_getsUSBUSART+1)^(0+128)
  3838  16BD  0833               	movf	(??_getsUSBUSART+1)^(0+128),w
  3839  16BE  0086               	movwf	6
  3840  16BF  3003               	movlw	3	; select bank6/7
  3841  16C0  0087               	movwf	7
  3842  16C1  0832               	movf	??_getsUSBUSART^(0+128),w
  3843  16C2  0081               	movwf	1
  3844  16C3  3001               	movlw	1
  3845  16C4  00B2               	movwf	??_getsUSBUSART^(0+128)
  3846  16C5  0832               	movf	??_getsUSBUSART^(0+128),w
  3847  16C6  0023               	movlb	3	; select bank3
  3848  16C7  07EA               	addwf	_cdc_rx_len^(0+384),f
  3849  16C8  2EA9               	goto	l8094
  3850  16C9                     l8096:	
  3851                           
  3852                           ;usb_device_cdc.c: 507: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  3853  16C9  0021               	movlb	1	; select bank1
  3854  16CA  01A6               	clrf	USBTransferOnePacket@dir^(0+128)
  3855  16CB  30C0               	movlw	192
  3856  16CC  00A7               	movwf	USBTransferOnePacket@data^(0+128)
  3857  16CD  3020               	movlw	32
  3858  16CE  00A8               	movwf	(USBTransferOnePacket@data^(0+128)+1)
  3859  16CF  3040               	movlw	64
  3860  16D0  00B2               	movwf	??_getsUSBUSART^(0+128)
  3861  16D1  0832               	movf	??_getsUSBUSART^(0+128),w
  3862  16D2  00A9               	movwf	USBTransferOnePacket@len^(0+128)
  3863  16D3  3002               	movlw	2
  3864  16D4  318C  2495         	fcall	_USBTransferOnePacket
  3865  16D6  0021               	movlb	1	; select bank1
  3866  16D7  0827               	movf	(?_USBTransferOnePacket+1)^(0+128),w
  3867  16D8  0023               	movlb	3	; select bank3
  3868  16D9  00D0               	movwf	(_CDCDataOutHandle+1)^(0+384)
  3869  16DA  0021               	movlb	1	; select bank1
  3870  16DB  0826               	movf	?_USBTransferOnePacket^(0+128),w
  3871  16DC  0023               	movlb	3	; select bank3
  3872  16DD  00CF               	movwf	_CDCDataOutHandle^(0+384)
  3873  16DE                     l8098:	
  3874                           
  3875                           ;usb_device_cdc.c: 509: }
  3876                           ;usb_device_cdc.c: 511: return cdc_rx_len;
  3877  16DE  086A               	movf	_cdc_rx_len^(0+384),w
  3878  16DF  0008               	return
  3879  16E0                     __end_of_getsUSBUSART:	
  3880                           
  3881                           	psect	text9
  3882  02E1                     __ptext9:	
  3883 ;; *************** function _USBDeviceTasks *****************
  3884 ;; Defined at:
  3885 ;;		line 477 in file "mcc_generated_files/usb/usb_device.c"
  3886 ;; Parameters:    Size  Location     Type
  3887 ;;		None
  3888 ;; Auto vars:     Size  Location     Type
  3889 ;;  i               1    0[BANK3 ] unsigned char 
  3890 ;; Return value:  Size  Location     Type
  3891 ;;                  1    wreg      void 
  3892 ;; Registers used:
  3893 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3894 ;; Tracked objects:
  3895 ;;		On entry : 0/0
  3896 ;;		On exit  : 0/0
  3897 ;;		Unchanged: 0/0
  3898 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3900 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  3901 ;;      Temps:          0       0       0       0       0       2       0       0       0       0       0       0       
      +0       0
  3902 ;;      Totals:         0       0       0       0       1       2       0       0       0       0       0       0       
      +0       0
  3903 ;;Total ram usage:        3 bytes
  3904 ;; Hardware stack levels used:    1
  3905 ;; Hardware stack levels required when called:   18
  3906 ;; This function calls:
  3907 ;;		_USBCtrlEPAllowStatusStage
  3908 ;;		_USBCtrlEPService
  3909 ;;		_USBDeviceInit
  3910 ;;		_USBIncrement1msInternalTimers
  3911 ;;		_USBStallHandler
  3912 ;;		_USBSuspend
  3913 ;;		_USBWakeFromSuspend
  3914 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  3915 ;; This function is called by:
  3916 ;;		_main
  3917 ;; This function uses a non-reentrant model
  3918 ;;
  3919                           
  3920                           
  3921                           ;psect for function _USBDeviceTasks
  3922  02E1                     _USBDeviceTasks:	
  3923                           
  3924                           ;usb_device.c: 479: uint8_t i;
  3925                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
  3926                           
  3927                           ;incstack = 0
  3928 ;; hardware stack exceeded
  3929                           ; Regs used in _USBDeviceTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3930  02E1  0023               	movlb	3	; select bank3
  3931  02E2  0365               	decf	_USBDeviceState^(0+384),w	;volatile
  3932  02E3  1D03               	btfss	3,2
  3933  02E4  2AF1               	goto	l8188
  3934                           
  3935                           ;usb_device.c: 591: {
  3936                           ;usb_device.c: 601: if(!UCONbits.SE0)
  3937  02E5  003D               	movlb	29	; select bank29
  3938  02E6  1A8E               	btfsc	14,5	;volatile
  3939  02E7  2AF1               	goto	l8188
  3940                           
  3941                           ;usb_device.c: 602: {
  3942                           ;usb_device.c: 608: {UIR = 0;};
  3943  02E8  0190               	clrf	16	;volatile
  3944                           
  3945                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
  3946  02E9  1412               	bsf	18,0	;volatile
  3947                           
  3948                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
  3949  02EA  1612               	bsf	18,4	;volatile
  3950                           
  3951                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
  3952  02EB  3002               	movlw	2
  3953  02EC  0024               	movlb	4	; select bank4
  3954  02ED  00E1               	movwf	??_USBDeviceTasks^(0+512)
  3955  02EE  0861               	movf	??_USBDeviceTasks^(0+512),w
  3956  02EF  0023               	movlb	3	; select bank3
  3957  02F0  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
  3958  02F1                     l8188:	
  3959                           
  3960                           ;usb_device.c: 617: }
  3961                           ;usb_device.c: 618: }
  3962                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  3963  02F1  003D               	movlb	29	; select bank29
  3964  02F2  1910               	btfsc	16,2	;volatile
  3965  02F3  1D12               	btfss	18,2	;volatile
  3966  02F4  2AFE               	goto	l8196
  3967                           
  3968                           ;usb_device.c: 635: {
  3969                           ;usb_device.c: 636: (UIR &= 0xFB);
  3970  02F5  30FB               	movlw	251
  3971  02F6  0024               	movlb	4	; select bank4
  3972  02F7  00E1               	movwf	??_USBDeviceTasks^(0+512)
  3973  02F8  0861               	movf	??_USBDeviceTasks^(0+512),w
  3974  02F9  003D               	movlb	29	; select bank29
  3975  02FA  0590               	andwf	16,f	;volatile
  3976                           
  3977                           ;usb_device.c: 640: USBWakeFromSuspend();
  3978  02FB  319F  279D  3182   	fcall	_USBWakeFromSuspend
  3979  02FE                     l8196:	
  3980                           
  3981                           ;usb_device.c: 642: }
  3982                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
  3983  02FE  003D               	movlb	29	; select bank29
  3984  02FF  1C8E               	btfss	14,1	;volatile
  3985  0300  2B04               	goto	l391
  3986                           
  3987                           ;usb_device.c: 648: {
  3988                           ;usb_device.c: 649: PIR2bits.USBIF = 0;;
  3989  0301  0020               	movlb	0	; select bank0
  3990  0302  1112               	bcf	18,2	;volatile
  3991                           
  3992                           ;usb_device.c: 650: return;
  3993  0303  0008               	return
  3994  0304                     l391:	
  3995                           
  3996                           ;usb_device.c: 651: }
  3997                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
  3998  0304  1810               	btfsc	16,0	;volatile
  3999  0305  1C12               	btfss	18,0	;volatile
  4000  0306  2B18               	goto	l8210
  4001                           
  4002                           ;usb_device.c: 664: {
  4003                           ;usb_device.c: 665: USBDeviceInit();
  4004  0307  3185  257E  3182   	fcall	_USBDeviceInit
  4005                           
  4006                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
  4007  030A  0021               	movlb	1	; select bank1
  4008  030B  1512               	bsf	18,2	;volatile
  4009                           
  4010                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
  4011  030C  3004               	movlw	4
  4012  030D  0024               	movlb	4	; select bank4
  4013  030E  00E1               	movwf	??_USBDeviceTasks^(0+512)
  4014  030F  0861               	movf	??_USBDeviceTasks^(0+512),w
  4015  0310  0023               	movlb	3	; select bank3
  4016  0311  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
  4017                           
  4018                           ;usb_device.c: 681: (UIR &= 0xFE);
  4019  0312  30FE               	movlw	254
  4020  0313  0024               	movlb	4	; select bank4
  4021  0314  00E1               	movwf	??_USBDeviceTasks^(0+512)
  4022  0315  0861               	movf	??_USBDeviceTasks^(0+512),w
  4023  0316  003D               	movlb	29	; select bank29
  4024  0317  0590               	andwf	16,f	;volatile
  4025  0318                     l8210:	
  4026                           
  4027                           ;usb_device.c: 682: }
  4028                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  4029  0318  1A10               	btfsc	16,4	;volatile
  4030  0319  1E12               	btfss	18,4	;volatile
  4031  031A  2B1E               	goto	l8216
  4032                           
  4033                           ;usb_device.c: 688: {
  4034                           ;usb_device.c: 694: USBSuspend();
  4035  031B  319E  26FF  3182   	fcall	_USBSuspend
  4036  031E                     l8216:	
  4037                           
  4038                           ;usb_device.c: 696: }
  4039                           ;usb_device.c: 708: if(UIRbits.SOFIF)
  4040  031E  003D               	movlb	29	; select bank29
  4041  031F  1F10               	btfss	16,6	;volatile
  4042  0320  2B48               	goto	l8232
  4043                           
  4044                           ;usb_device.c: 709: {
  4045                           ;usb_device.c: 711: if(UIEbits.SOFIE)
  4046  0321  1F12               	btfss	18,6	;volatile
  4047  0322  2B33               	goto	l8222
  4048                           
  4049                           ;usb_device.c: 712: {
  4050                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  4051  0323  3073               	movlw	115
  4052  0324  0021               	movlb	1	; select bank1
  4053  0325  00B4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  4054  0326  3000               	movlw	0
  4055  0327  00B5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)+1)
  4056  0328  3000               	movlw	0
  4057  0329  00B6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  4058  032A  3000               	movlw	0
  4059  032B  00B7               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  4060  032C  3001               	movlw	1
  4061  032D  00B8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  4062  032E  3000               	movlw	0
  4063  032F  00B9               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)+1)
  4064  0330  3191  2108  3182   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4065  0333                     l8222:	
  4066                           
  4067                           ;usb_device.c: 714: }
  4068                           ;usb_device.c: 715: (UIR &= 0xBF);
  4069  0333  30BF               	movlw	191
  4070  0334  0024               	movlb	4	; select bank4
  4071  0335  00E1               	movwf	??_USBDeviceTasks^(0+512)
  4072  0336  0861               	movf	??_USBDeviceTasks^(0+512),w
  4073  0337  003D               	movlb	29	; select bank29
  4074  0338  0590               	andwf	16,f	;volatile
  4075                           
  4076                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
  4077  0339  319E  268B  3182   	fcall	_USBIncrement1msInternalTimers
  4078                           
  4079                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
  4080  033C  0023               	movlb	3	; select bank3
  4081  033D  085C               	movf	_USBStatusStageTimeoutCounter^(0+384),w	;volatile
  4082  033E  1903               	btfsc	3,2
  4083  033F  2B42               	goto	l397
  4084                           
  4085                           ;usb_device.c: 736: {
  4086                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
  4087  0340  3001               	movlw	1
  4088  0341  02DC               	subwf	_USBStatusStageTimeoutCounter^(0+384),f	;volatile
  4089  0342                     l397:	
  4090                           
  4091                           ;usb_device.c: 738: }
  4092                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
  4093  0342  085C               	movf	_USBStatusStageTimeoutCounter^(0+384),w	;volatile
  4094  0343  1D03               	btfss	3,2
  4095  0344  2B48               	goto	l8232
  4096                           
  4097                           ;usb_device.c: 745: {
  4098                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
  4099  0345  318A  229A  3182   	fcall	_USBCtrlEPAllowStatusStage
  4100  0348                     l8232:	
  4101                           
  4102                           ;usb_device.c: 747: }
  4103                           ;usb_device.c: 749: }
  4104                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
  4105  0348  003D               	movlb	29	; select bank29
  4106  0349  1A90               	btfsc	16,5	;volatile
  4107  034A  1E92               	btfss	18,5	;volatile
  4108  034B  2B4F               	goto	l8238
  4109                           
  4110                           ;usb_device.c: 752: {
  4111                           ;usb_device.c: 753: USBStallHandler();
  4112  034C  3190  20AD  3182   	fcall	_USBStallHandler
  4113  034F                     l8238:	
  4114                           
  4115                           ;usb_device.c: 754: }
  4116                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
  4117  034F  003D               	movlb	29	; select bank29
  4118  0350  1890               	btfsc	16,1	;volatile
  4119  0351  1C92               	btfss	18,1	;volatile
  4120  0352  2B65               	goto	l8246
  4121                           
  4122                           ;usb_device.c: 757: {
  4123                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  4124  0353  30FF               	movlw	255
  4125  0354  0021               	movlb	1	; select bank1
  4126  0355  00B4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  4127  0356  307F               	movlw	127
  4128  0357  00B5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)+1)
  4129  0358  3000               	movlw	0
  4130  0359  00B6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  4131  035A  3000               	movlw	0
  4132  035B  00B7               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  4133  035C  3001               	movlw	1
  4134  035D  00B8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  4135  035E  3000               	movlw	0
  4136  035F  00B9               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)+1)
  4137  0360  3191  2108  3182   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4138                           
  4139                           ;usb_device.c: 759: {UEIR = 0;};
  4140  0363  003D               	movlb	29	; select bank29
  4141  0364  0193               	clrf	19	;volatile
  4142  0365                     l8246:	
  4143                           
  4144                           ;usb_device.c: 767: }
  4145                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
  4146  0365  3004               	movlw	4
  4147  0366  0023               	movlb	3	; select bank3
  4148  0367  0265               	subwf	_USBDeviceState^(0+384),w	;volatile
  4149  0368  1803               	skipnc
  4150  0369  2B6D               	goto	l401
  4151                           
  4152                           ;usb_device.c: 775: {
  4153                           ;usb_device.c: 776: PIR2bits.USBIF = 0;;
  4154  036A  0020               	movlb	0	; select bank0
  4155  036B  1112               	bcf	18,2	;volatile
  4156                           
  4157                           ;usb_device.c: 777: return;
  4158  036C  0008               	return
  4159  036D                     l401:	
  4160                           
  4161                           ;usb_device.c: 778: }
  4162                           ;usb_device.c: 783: if(UIEbits.TRNIE)
  4163  036D  003D               	movlb	29	; select bank29
  4164  036E  1D92               	btfss	18,3	;volatile
  4165  036F  2BC7               	goto	l402
  4166                           
  4167                           ;usb_device.c: 784: {
  4168                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
  4169  0370  0023               	movlb	3	; select bank3
  4170  0371  01EF               	clrf	USBDeviceTasks@i^(0+384)
  4171  0372  3004               	movlw	4
  4172  0373  026F               	subwf	USBDeviceTasks@i^(0+384),w
  4173  0374  1803               	btfsc	3,0
  4174  0375  2BC7               	goto	l402
  4175  0376                     l403:	
  4176                           
  4177                           ;usb_device.c: 786: {
  4178                           ;usb_device.c: 787: if(UIRbits.TRNIF)
  4179  0376  003D               	movlb	29	; select bank29
  4180  0377  1D90               	btfss	16,3	;volatile
  4181  0378  2BC7               	goto	l402
  4182                           
  4183                           ;usb_device.c: 788: {
  4184                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
  4185  0379  080F               	movf	15,w	;volatile
  4186  037A  0024               	movlb	4	; select bank4
  4187  037B  00E1               	movwf	??_USBDeviceTasks^(0+512)
  4188  037C  0861               	movf	??_USBDeviceTasks^(0+512),w
  4189  037D  0023               	movlb	3	; select bank3
  4190  037E  00ED               	movwf	_USTATcopy^(0+384)	;volatile
  4191                           
  4192                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
  4193  037F  0C6D               	rrf	_USTATcopy^(0+384),w	;volatile
  4194  0380  0024               	movlb	4	; select bank4
  4195  0381  00E1               	movwf	??_USBDeviceTasks^(0+512)
  4196  0382  0CE1               	rrf	??_USBDeviceTasks^(0+512),f
  4197  0383  0C61               	rrf	??_USBDeviceTasks^(0+512),w
  4198  0384  390F               	andlw	15
  4199  0385  00E2               	movwf	(??_USBDeviceTasks+1)^(0+512)
  4200  0386  0862               	movf	(??_USBDeviceTasks+1)^(0+512),w
  4201  0387  0023               	movlb	3	; select bank3
  4202  0388  00DE               	movwf	_endpoint_number^(0+384)	;volatile
  4203                           
  4204                           ;usb_device.c: 793: (UIR &= 0xF7);
  4205  0389  30F7               	movlw	247
  4206  038A  0024               	movlb	4	; select bank4
  4207  038B  00E1               	movwf	??_USBDeviceTasks^(0+512)
  4208  038C  0861               	movf	??_USBDeviceTasks^(0+512),w
  4209  038D  003D               	movlb	29	; select bank29
  4210  038E  0590               	andwf	16,f	;volatile
  4211                           
  4212                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
  4213  038F  0023               	movlb	3	; select bank3
  4214  0390  196D               	btfsc	_USTATcopy^(0+384),2	;volatile
  4215  0391  2B95               	goto	l8266
  4216                           
  4217                           ;usb_device.c: 799: {
  4218                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  4219  0392  085E               	movf	_endpoint_number^(0+384),w	;volatile
  4220  0393  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  4221  0394  2B98               	goto	L1
  4222  0395                     l8266:	
  4223                           ;usb_device.c: 801: }
  4224                           
  4225                           
  4226                           ;usb_device.c: 802: else
  4227                           ;usb_device.c: 803: {
  4228                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  4229  0395  0023               	movlb	3	; select bank3
  4230  0396  085E               	movf	_endpoint_number^(0+384),w	;volatile
  4231  0397  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  4232  0398                     L1:	
  4233  0398  0086               	movwf	6
  4234  0399  3001               	movlw	1	; select bank3/4
  4235  039A  0087               	movwf	7
  4236  039B  0801               	movf	1,w
  4237  039C  3901               	andlw	1
  4238  039D  0024               	movlb	4	; select bank4
  4239  039E  00E1               	movwf	??_USBDeviceTasks^(0+512)
  4240  039F  3001               	movlw	1
  4241  03A0  06E1               	xorwf	??_USBDeviceTasks^(0+512),f
  4242  03A1  0801               	movf	1,w
  4243  03A2  0661               	xorwf	??_USBDeviceTasks^(0+512),w
  4244  03A3  39FE               	andlw	-2
  4245  03A4  0661               	xorwf	??_USBDeviceTasks^(0+512),w
  4246  03A5  0081               	movwf	1
  4247                           
  4248                           ;usb_device.c: 805: }
  4249                           ;usb_device.c: 810: if(endpoint_number == 0)
  4250  03A6  0023               	movlb	3	; select bank3
  4251  03A7  085E               	movf	_endpoint_number^(0+384),w	;volatile
  4252  03A8  1D03               	btfss	3,2
  4253  03A9  2BAE               	goto	l8272
  4254                           
  4255                           ;usb_device.c: 811: {
  4256                           ;usb_device.c: 812: USBCtrlEPService();
  4257  03AA  3196  2628  3182   	fcall	_USBCtrlEPService
  4258                           
  4259                           ;usb_device.c: 813: }
  4260  03AD  2BBD               	goto	l8274
  4261  03AE                     l8272:	
  4262                           
  4263                           ;usb_device.c: 814: else
  4264                           ;usb_device.c: 815: {
  4265                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  4266  03AE  3072               	movlw	114
  4267  03AF  0021               	movlb	1	; select bank1
  4268  03B0  00B4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  4269  03B1  3000               	movlw	0
  4270  03B2  00B5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)+1)
  4271  03B3  30ED               	movlw	low _USTATcopy
  4272  03B4  00B6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  4273  03B5  3001               	movlw	high _USTATcopy
  4274  03B6  00B7               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  4275  03B7  3000               	movlw	0
  4276  03B8  00B8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  4277  03B9  00B9               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
  4278  03BA  3191  2108  3182   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4279  03BD                     l8274:	
  4280                           ;usb_device.c: 819: else
  4281                           ;usb_device.c: 820: {
  4282                           ;usb_device.c: 821: break;
  4283                           
  4284                           ;usb_device.c: 817: }
  4285                           ;usb_device.c: 818: }
  4286                           
  4287  03BD  3001               	movlw	1
  4288  03BE  0024               	movlb	4	; select bank4
  4289  03BF  00E1               	movwf	??_USBDeviceTasks^(0+512)
  4290  03C0  0861               	movf	??_USBDeviceTasks^(0+512),w
  4291  03C1  0023               	movlb	3	; select bank3
  4292  03C2  07EF               	addwf	USBDeviceTasks@i^(0+384),f
  4293  03C3  3004               	movlw	4
  4294  03C4  026F               	subwf	USBDeviceTasks@i^(0+384),w
  4295  03C5  1C03               	skipc
  4296  03C6  2B76               	goto	l403
  4297  03C7                     l402:	
  4298                           
  4299                           ;usb_device.c: 822: }
  4300                           ;usb_device.c: 823: }
  4301                           ;usb_device.c: 824: }
  4302                           ;usb_device.c: 826: PIR2bits.USBIF = 0;;
  4303  03C7  0020               	movlb	0	; select bank0
  4304  03C8  1112               	bcf	18,2	;volatile
  4305  03C9  0008               	return
  4306  03CA                     __end_of_USBDeviceTasks:	
  4307                           
  4308                           	psect	text10
  4309  1F9D                     __ptext10:	
  4310 ;; *************** function _USBWakeFromSuspend *****************
  4311 ;; Defined at:
  4312 ;;		line 2303 in file "mcc_generated_files/usb/usb_device.c"
  4313 ;; Parameters:    Size  Location     Type
  4314 ;;		None
  4315 ;; Auto vars:     Size  Location     Type
  4316 ;;		None
  4317 ;; Return value:  Size  Location     Type
  4318 ;;                  1    wreg      void 
  4319 ;; Registers used:
  4320 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4321 ;; Tracked objects:
  4322 ;;		On entry : 0/0
  4323 ;;		On exit  : 0/0
  4324 ;;		Unchanged: 0/0
  4325 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4328 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4329 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4330 ;;Total ram usage:        1 bytes
  4331 ;; Hardware stack levels used:    1
  4332 ;; Hardware stack levels required when called:   14
  4333 ;; This function calls:
  4334 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4335 ;; This function is called by:
  4336 ;;		_USBDeviceTasks
  4337 ;; This function uses a non-reentrant model
  4338 ;;
  4339                           
  4340                           
  4341                           ;psect for function _USBWakeFromSuspend
  4342  1F9D                     _USBWakeFromSuspend:	
  4343                           
  4344                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
  4345                           
  4346                           ;incstack = 0
  4347                           ; Regs used in _USBWakeFromSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4348  1F9D  0023               	movlb	3	; select bank3
  4349  1F9E  01DF               	clrf	_USBBusIsSuspended^(0+384)	;volatile
  4350                           
  4351                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  4352  1F9F  3074               	movlw	116
  4353  1FA0  0021               	movlb	1	; select bank1
  4354  1FA1  00B4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  4355  1FA2  3000               	movlw	0
  4356  1FA3  00B5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)+1)
  4357  1FA4  3000               	movlw	0
  4358  1FA5  00B6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  4359  1FA6  3000               	movlw	0
  4360  1FA7  00B7               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  4361  1FA8  3000               	movlw	0
  4362  1FA9  00B8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  4363  1FAA  00B9               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
  4364  1FAB  3191  2108  319F   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4365                           
  4366                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
  4367  1FAE  003D               	movlb	29	; select bank29
  4368  1FAF  108E               	bcf	14,1	;volatile
  4369                           
  4370                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
  4371  1FB0  1112               	bcf	18,2	;volatile
  4372  1FB1                     l8112:	
  4373                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
  4374                           
  4375  1FB1  1D10               	btfss	16,2	;volatile
  4376  1FB2  2FBA               	goto	l8114
  4377                           
  4378                           ;usb_device.c: 2343: {
  4379                           ;usb_device.c: 2344: (UIR &= 0xFB);
  4380  1FB3  30FB               	movlw	251
  4381  1FB4  0021               	movlb	1	; select bank1
  4382  1FB5  00BA               	movwf	??_USBWakeFromSuspend^(0+128)
  4383  1FB6  083A               	movf	??_USBWakeFromSuspend^(0+128),w
  4384  1FB7  003D               	movlb	29	; select bank29
  4385  1FB8  0590               	andwf	16,f	;volatile
  4386  1FB9  2FB1               	goto	l8112
  4387  1FBA                     l8114:	
  4388                           
  4389                           ;usb_device.c: 2345: }
  4390                           ;usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
  4391  1FBA  0023               	movlb	3	; select bank3
  4392  1FBB  01D6               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  4393  1FBC  0008               	return
  4394  1FBD                     __end_of_USBWakeFromSuspend:	
  4395                           
  4396                           	psect	text11
  4397  1EFF                     __ptext11:	
  4398 ;; *************** function _USBSuspend *****************
  4399 ;; Defined at:
  4400 ;;		line 2245 in file "mcc_generated_files/usb/usb_device.c"
  4401 ;; Parameters:    Size  Location     Type
  4402 ;;		None
  4403 ;; Auto vars:     Size  Location     Type
  4404 ;;		None
  4405 ;; Return value:  Size  Location     Type
  4406 ;;                  1    wreg      void 
  4407 ;; Registers used:
  4408 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4409 ;; Tracked objects:
  4410 ;;		On entry : 0/0
  4411 ;;		On exit  : 0/0
  4412 ;;		Unchanged: 0/0
  4413 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4416 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4417 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4418 ;;Total ram usage:        1 bytes
  4419 ;; Hardware stack levels used:    1
  4420 ;; Hardware stack levels required when called:   14
  4421 ;; This function calls:
  4422 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4423 ;; This function is called by:
  4424 ;;		_USBDeviceTasks
  4425 ;; This function uses a non-reentrant model
  4426 ;;
  4427                           
  4428                           
  4429                           ;psect for function _USBSuspend
  4430  1EFF                     _USBSuspend:	
  4431                           
  4432                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
  4433                           
  4434                           ;incstack = 0
  4435                           ; Regs used in _USBSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4436  1EFF  003D               	movlb	29	; select bank29
  4437  1F00  1512               	bsf	18,2	;volatile
  4438                           
  4439                           ;usb_device.c: 2271: (UIR &= 0xEF);
  4440  1F01  30EF               	movlw	239
  4441  1F02  0021               	movlb	1	; select bank1
  4442  1F03  00BA               	movwf	??_USBSuspend^(0+128)
  4443  1F04  083A               	movf	??_USBSuspend^(0+128),w
  4444  1F05  003D               	movlb	29	; select bank29
  4445  1F06  0590               	andwf	16,f	;volatile
  4446                           
  4447                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
  4448  1F07  148E               	bsf	14,1	;volatile
  4449                           
  4450                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
  4451  1F08  3001               	movlw	1
  4452  1F09  0021               	movlb	1	; select bank1
  4453  1F0A  00BA               	movwf	??_USBSuspend^(0+128)
  4454  1F0B  083A               	movf	??_USBSuspend^(0+128),w
  4455  1F0C  0023               	movlb	3	; select bank3
  4456  1F0D  00DF               	movwf	_USBBusIsSuspended^(0+384)	;volatile
  4457                           
  4458                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
  4459  1F0E  01D6               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  4460                           
  4461                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  4462  1F0F  3075               	movlw	117
  4463  1F10  0021               	movlb	1	; select bank1
  4464  1F11  00B4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  4465  1F12  3000               	movlw	0
  4466  1F13  00B5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)+1)
  4467  1F14  3000               	movlw	0
  4468  1F15  00B6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  4469  1F16  3000               	movlw	0
  4470  1F17  00B7               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  4471  1F18  3000               	movlw	0
  4472  1F19  00B8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  4473  1F1A  00B9               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
  4474  1F1B  3191  2108         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4475  1F1D  0008               	return
  4476  1F1E                     __end_of_USBSuspend:	
  4477                           
  4478                           	psect	text12
  4479  10AD                     __ptext12:	
  4480 ;; *************** function _USBStallHandler *****************
  4481 ;; Defined at:
  4482 ;;		line 2202 in file "mcc_generated_files/usb/usb_device.c"
  4483 ;; Parameters:    Size  Location     Type
  4484 ;;		None
  4485 ;; Auto vars:     Size  Location     Type
  4486 ;;		None
  4487 ;; Return value:  Size  Location     Type
  4488 ;;                  1    wreg      void 
  4489 ;; Registers used:
  4490 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4491 ;; Tracked objects:
  4492 ;;		On entry : 0/0
  4493 ;;		On exit  : 0/0
  4494 ;;		Unchanged: 0/0
  4495 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4498 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4499 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4500 ;;Total ram usage:        1 bytes
  4501 ;; Hardware stack levels used:    1
  4502 ;; Hardware stack levels required when called:   10
  4503 ;; This function calls:
  4504 ;;		Nothing
  4505 ;; This function is called by:
  4506 ;;		_USBDeviceTasks
  4507 ;; This function uses a non-reentrant model
  4508 ;;
  4509                           
  4510                           
  4511                           ;psect for function _USBStallHandler
  4512  10AD                     _USBStallHandler:	
  4513                           
  4514                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
  4515                           
  4516                           ;incstack = 0
  4517                           ; Regs used in _USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  4518  10AD  003D               	movlb	29	; select bank29
  4519  10AE  1C18               	btfss	24,0	;volatile
  4520  10AF  28D1               	goto	l8146
  4521                           
  4522                           ;usb_device.c: 2215: {
  4523                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  4524  10B0  0023               	movlb	3	; select bank3
  4525  10B1  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  4526  10B2  0086               	movwf	6
  4527  10B3  0187               	clrf	7
  4528  10B4  3080               	movlw	128
  4529  10B5  0601               	xorwf	1,w
  4530  10B6  1D03               	btfss	3,2
  4531  10B7  28CF               	goto	l8144
  4532  10B8  0837               	movf	_pBDTEntryIn^(0+384),w
  4533  10B9  0086               	movwf	6
  4534  10BA  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  4535  10BB  0087               	movwf	7
  4536  10BC  3084               	movlw	132
  4537  10BD  0601               	xorwf	1,w
  4538  10BE  1D03               	btfss	3,2
  4539  10BF  28CF               	goto	l8144
  4540                           
  4541                           ;usb_device.c: 2218: {
  4542                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  4543  10C0  300C               	movlw	12
  4544  10C1  0021               	movlb	1	; select bank1
  4545  10C2  00A6               	movwf	??_USBStallHandler^(0+128)
  4546  10C3  0023               	movlb	3	; select bank3
  4547  10C4  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  4548  10C5  0086               	movwf	6
  4549  10C6  0187               	clrf	7
  4550  10C7  0021               	movlb	1	; select bank1
  4551  10C8  0826               	movf	??_USBStallHandler^(0+128),w
  4552  10C9  0081               	movwf	1
  4553                           
  4554                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  4555  10CA  0023               	movlb	3	; select bank3
  4556  10CB  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  4557  10CC  0086               	movwf	6
  4558  10CD  0187               	clrf	7
  4559  10CE  1781               	bsf	1,7
  4560  10CF                     l8144:	
  4561                           
  4562                           ;usb_device.c: 2222: }
  4563                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
  4564  10CF  003D               	movlb	29	; select bank29
  4565  10D0  1018               	bcf	24,0	;volatile
  4566  10D1                     l8146:	
  4567                           
  4568                           ;usb_device.c: 2224: }
  4569                           ;usb_device.c: 2226: (UIR &= 0xDF);
  4570  10D1  30DF               	movlw	223
  4571  10D2  0021               	movlb	1	; select bank1
  4572  10D3  00A6               	movwf	??_USBStallHandler^(0+128)
  4573  10D4  0826               	movf	??_USBStallHandler^(0+128),w
  4574  10D5  003D               	movlb	29	; select bank29
  4575  10D6  0590               	andwf	16,f	;volatile
  4576  10D7  0008               	return
  4577  10D8                     __end_of_USBStallHandler:	
  4578                           
  4579                           	psect	text13
  4580  1E8B                     __ptext13:	
  4581 ;; *************** function _USBIncrement1msInternalTimers *****************
  4582 ;; Defined at:
  4583 ;;		line 3025 in file "mcc_generated_files/usb/usb_device.c"
  4584 ;; Parameters:    Size  Location     Type
  4585 ;;		None
  4586 ;; Auto vars:     Size  Location     Type
  4587 ;;		None
  4588 ;; Return value:  Size  Location     Type
  4589 ;;                  1    wreg      void 
  4590 ;; Registers used:
  4591 ;;		wreg, status,2, status,0
  4592 ;; Tracked objects:
  4593 ;;		On entry : 0/0
  4594 ;;		On exit  : 0/0
  4595 ;;		Unchanged: 0/0
  4596 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4599 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4600 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4601 ;;Total ram usage:        1 bytes
  4602 ;; Hardware stack levels used:    1
  4603 ;; Hardware stack levels required when called:   10
  4604 ;; This function calls:
  4605 ;;		Nothing
  4606 ;; This function is called by:
  4607 ;;		_USBDeviceTasks
  4608 ;; This function uses a non-reentrant model
  4609 ;;
  4610                           
  4611                           
  4612                           ;psect for function _USBIncrement1msInternalTimers
  4613  1E8B                     _USBIncrement1msInternalTimers:	
  4614                           
  4615                           ;usb_device.c: 3033: USB1msTickCount++;
  4616                           
  4617                           ;incstack = 0
  4618                           ; Regs used in _USBIncrement1msInternalTimers: [wreg+status,2+status,0]
  4619  1E8B  3001               	movlw	1
  4620  1E8C  0023               	movlb	3	; select bank3
  4621  1E8D  07C3               	addwf	_USB1msTickCount^(0+384),f	;volatile
  4622  1E8E  3000               	movlw	0
  4623  1E8F  3DC4               	addwfc	(_USB1msTickCount+1)^(0+384),f	;volatile
  4624  1E90  3000               	movlw	0
  4625  1E91  3DC5               	addwfc	(_USB1msTickCount+2)^(0+384),f	;volatile
  4626  1E92  3000               	movlw	0
  4627  1E93  3DC6               	addwfc	(_USB1msTickCount+3)^(0+384),f	;volatile
  4628                           
  4629                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
  4630  1E94  085F               	movf	_USBBusIsSuspended^(0+384),w	;volatile
  4631  1E95  1D03               	btfss	3,2
  4632  1E96  0008               	return
  4633                           
  4634                           ;usb_device.c: 3035: {
  4635                           ;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
  4636  1E97  3001               	movlw	1
  4637  1E98  0021               	movlb	1	; select bank1
  4638  1E99  00A6               	movwf	??_USBIncrement1msInternalTimers^(0+128)
  4639  1E9A  0826               	movf	??_USBIncrement1msInternalTimers^(0+128),w
  4640  1E9B  0023               	movlb	3	; select bank3
  4641  1E9C  07D6               	addwf	_USBTicksSinceSuspendEnd^(0+384),f	;volatile
  4642                           
  4643                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
  4644  1E9D  0856               	movf	_USBTicksSinceSuspendEnd^(0+384),w	;volatile
  4645  1E9E  1D03               	btfss	3,2
  4646  1E9F  0008               	return
  4647                           
  4648                           ;usb_device.c: 3039: {
  4649                           ;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
  4650  1EA0  30FF               	movlw	255
  4651  1EA1  0021               	movlb	1	; select bank1
  4652  1EA2  00A6               	movwf	??_USBIncrement1msInternalTimers^(0+128)
  4653  1EA3  0826               	movf	??_USBIncrement1msInternalTimers^(0+128),w
  4654  1EA4  0023               	movlb	3	; select bank3
  4655  1EA5  00D6               	movwf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  4656  1EA6  0008               	return
  4657  1EA7                     __end_of_USBIncrement1msInternalTimers:	
  4658                           
  4659                           	psect	text14
  4660  1628                     __ptext14:	
  4661 ;; *************** function _USBCtrlEPService *****************
  4662 ;; Defined at:
  4663 ;;		line 2372 in file "mcc_generated_files/usb/usb_device.c"
  4664 ;; Parameters:    Size  Location     Type
  4665 ;;		None
  4666 ;; Auto vars:     Size  Location     Type
  4667 ;;		None
  4668 ;; Return value:  Size  Location     Type
  4669 ;;                  1    wreg      void 
  4670 ;; Registers used:
  4671 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4672 ;; Tracked objects:
  4673 ;;		On entry : 0/0
  4674 ;;		On exit  : 0/0
  4675 ;;		Unchanged: 0/0
  4676 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4679 ;;      Temps:          0       0       0       0       0       3       0       0       0       0       0       0       
      +0       0
  4680 ;;      Totals:         0       0       0       0       0       3       0       0       0       0       0       0       
      +0       0
  4681 ;;Total ram usage:        3 bytes
  4682 ;; Hardware stack levels used:    1
  4683 ;; Hardware stack levels required when called:   17
  4684 ;; This function calls:
  4685 ;;		_USBCtrlTrfInHandler
  4686 ;;		_USBCtrlTrfOutHandler
  4687 ;;		_USBCtrlTrfSetupHandler
  4688 ;; This function is called by:
  4689 ;;		_USBDeviceTasks
  4690 ;; This function uses a non-reentrant model
  4691 ;;
  4692                           
  4693                           
  4694                           ;psect for function _USBCtrlEPService
  4695  1628                     _USBCtrlEPService:	
  4696                           
  4697                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
  4698                           
  4699                           ;incstack = 0
  4700 ;; hardware stack exceeded
  4701                           ; Regs used in _USBCtrlEPService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4702  1628  302D               	movlw	45
  4703  1629  0024               	movlb	4	; select bank4
  4704  162A  00DE               	movwf	??_USBCtrlEPService^(0+512)
  4705  162B  085E               	movf	??_USBCtrlEPService^(0+512),w
  4706  162C  0023               	movlb	3	; select bank3
  4707  162D  00DC               	movwf	_USBStatusStageTimeoutCounter^(0+384)	;volatile
  4708                           
  4709                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
  4710  162E  086D               	movf	_USTATcopy^(0+384),w	;volatile
  4711  162F  39FD               	andlw	253
  4712  1630  1D03               	btfss	3,2
  4713  1631  2E78               	goto	l8166
  4714                           
  4715                           ;usb_device.c: 2383: {
  4716                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  4717  1632  366D               	lsrf	_USTATcopy^(0+384),w	;volatile
  4718  1633  393F               	andlw	63
  4719  1634  0024               	movlb	4	; select bank4
  4720  1635  00DE               	movwf	??_USBCtrlEPService^(0+512)
  4721  1636  3001               	movlw	1
  4722  1637                     u7695:	
  4723  1637  35DE               	lslf	??_USBCtrlEPService^(0+512),f
  4724  1638  3EFF               	addlw	-1
  4725  1639  1D03               	skipz
  4726  163A  2E37               	goto	u7695
  4727  163B  355E               	lslf	??_USBCtrlEPService^(0+512),w
  4728  163C  3E20               	addlw	32
  4729  163D  00DF               	movwf	(??_USBCtrlEPService+1)^(0+512)
  4730  163E  085F               	movf	(??_USBCtrlEPService+1)^(0+512),w
  4731  163F  0023               	movlb	3	; select bank3
  4732  1640  00E4               	movwf	_pBDTEntryEP0OutCurrent^(0+384)
  4733                           
  4734                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  4735  1641  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  4736  1642  0021               	movlb	1	; select bank1
  4737  1643  00C8               	movwf	_pBDTEntryEP0OutNext^(0+128)
  4738  1644  39FF               	andlw	255
  4739  1645  1D03               	skipz
  4740  1646  3000               	movlw	0
  4741  1647  00C9               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
  4742                           
  4743                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
  4744  1648  3004               	movlw	4
  4745  1649  0648               	xorwf	_pBDTEntryEP0OutNext^(0+128),w
  4746  164A  00C8               	movwf	_pBDTEntryEP0OutNext^(0+128)
  4747  164B  3000               	movlw	0
  4748  164C  0649               	xorwf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  4749  164D  00C9               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
  4750                           
  4751                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  4752  164E  0023               	movlb	3	; select bank3
  4753  164F  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  4754  1650  0086               	movwf	6
  4755  1651  0187               	clrf	7
  4756  1652  0C01               	rrf	1,w
  4757  1653  0C89               	rrf	9,f
  4758  1654  390F               	andlw	15
  4759  1655  3A0D               	xorlw	13
  4760  1656  1D03               	skipz
  4761  1657  2E75               	goto	l8164
  4762                           
  4763                           ;usb_device.c: 2400: {
  4764                           ;usb_device.c: 2405: __builtin_memcpy((uint8_t*)&SetupPkt,(uint8_t*)((void *)(pBDTEntryE
      +                          P0OutCurrent->ADR)),8);
  4765  1658  3050               	movlw	80
  4766  1659  0086               	movwf	6
  4767  165A  0187               	clrf	7
  4768  165B  0023               	movlb	3	; select bank3
  4769  165C  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  4770  165D  3E02               	addlw	2
  4771  165E  0084               	movwf	4
  4772  165F  0185               	clrf	5
  4773  1660  3F00               	moviw [0]fsr0
  4774  1661  0024               	movlb	4	; select bank4
  4775  1662  00DE               	movwf	??_USBCtrlEPService^(0+512)
  4776  1663  3F01               	moviw [1]fsr0
  4777  1664  00DF               	movwf	(??_USBCtrlEPService^(0+512)+1)
  4778  1665  085E               	movf	??_USBCtrlEPService^(0+512),w
  4779  1666  0084               	movwf	4
  4780  1667  085F               	movf	(??_USBCtrlEPService+1)^(0+512),w
  4781  1668  0085               	movwf	5
  4782  1669  3008               	movlw	8
  4783  166A  00E0               	movwf	(??_USBCtrlEPService+2)^(0+512)
  4784  166B  0860               	movf	(??_USBCtrlEPService+2)^(0+512),w
  4785  166C  1903               	skipnz
  4786  166D  2E72               	goto	l8162
  4787  166E                     u771m0:	
  4788  166E  0012               	moviw fsr0++
  4789  166F  001E               	movwi fsr1++
  4790  1670  0BE0               	decfsz	(??_USBCtrlEPService+2)^(0+512),f
  4791  1671  2E6E               	goto	u771m0
  4792  1672                     l8162:	
  4793                           
  4794                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
  4795  1672  3194  241F         	fcall	_USBCtrlTrfSetupHandler
  4796                           
  4797                           ;usb_device.c: 2409: }
  4798  1674  0008               	return
  4799  1675                     l8164:	
  4800                           
  4801                           ;usb_device.c: 2410: else
  4802                           ;usb_device.c: 2411: {
  4803                           ;usb_device.c: 2413: USBCtrlTrfOutHandler();
  4804  1675  3191  21D4         	fcall	_USBCtrlTrfOutHandler
  4805                           
  4806                           ;usb_device.c: 2414: }
  4807                           ;usb_device.c: 2415: }
  4808  1677  0008               	return
  4809  1678                     l8166:	
  4810                           
  4811                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
  4812  1678  30FD               	movlw	253
  4813  1679  0023               	movlb	3	; select bank3
  4814  167A  056D               	andwf	_USTATcopy^(0+384),w	;volatile
  4815  167B  0024               	movlb	4	; select bank4
  4816  167C  00DE               	movwf	??_USBCtrlEPService^(0+512)
  4817  167D  3004               	movlw	4
  4818  167E  065E               	xorwf	??_USBCtrlEPService^(0+512),w
  4819  167F  1D03               	btfss	3,2
  4820  1680  0008               	return
  4821                           
  4822                           ;usb_device.c: 2417: {
  4823                           ;usb_device.c: 2420: USBCtrlTrfInHandler();
  4824  1681  3189  213B         	fcall	_USBCtrlTrfInHandler
  4825  1683  0008               	return
  4826  1684                     __end_of_USBCtrlEPService:	
  4827                           
  4828                           	psect	text15
  4829  141F                     __ptext15:	
  4830 ;; *************** function _USBCtrlTrfSetupHandler *****************
  4831 ;; Defined at:
  4832 ;;		line 2465 in file "mcc_generated_files/usb/usb_device.c"
  4833 ;; Parameters:    Size  Location     Type
  4834 ;;		None
  4835 ;; Auto vars:     Size  Location     Type
  4836 ;;		None
  4837 ;; Return value:  Size  Location     Type
  4838 ;;                  1    wreg      void 
  4839 ;; Registers used:
  4840 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4841 ;; Tracked objects:
  4842 ;;		On entry : 0/0
  4843 ;;		On exit  : 0/0
  4844 ;;		Unchanged: 0/0
  4845 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4848 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4849 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4850 ;;Total ram usage:        1 bytes
  4851 ;; Hardware stack levels used:    1
  4852 ;; Hardware stack levels required when called:   16
  4853 ;; This function calls:
  4854 ;;		_USBCheckStdRequest
  4855 ;;		_USBCtrlEPServiceComplete
  4856 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4857 ;; This function is called by:
  4858 ;;		_USBCtrlEPService
  4859 ;; This function uses a non-reentrant model
  4860 ;;
  4861                           
  4862                           
  4863                           ;psect for function _USBCtrlTrfSetupHandler
  4864  141F                     _USBCtrlTrfSetupHandler:	
  4865                           
  4866                           ;usb_device.c: 2470: shortPacketStatus = 0;
  4867                           
  4868                           ;incstack = 0
  4869 ;; hardware stack exceeded
  4870                           ; Regs used in _USBCtrlTrfSetupHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4871  141F  0023               	movlb	3	; select bank3
  4872  1420  01E3               	clrf	_shortPacketStatus^(0+384)	;volatile
  4873                           
  4874                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
  4875  1421  01DB               	clrf	_USBDeferStatusStagePacket^(0+384)	;volatile
  4876                           
  4877                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
  4878  1422  01D8               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  4879                           
  4880                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
  4881  1423  01D7               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  4882                           
  4883                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
  4884  1424  01DD               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  4885                           
  4886                           ;usb_device.c: 2475: controlTransferState = 0;
  4887  1425  01E2               	clrf	_controlTransferState^(0+384)	;volatile
  4888                           
  4889                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  4890  1426  307F               	movlw	127
  4891  1427  0021               	movlb	1	; select bank1
  4892  1428  00C2               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
  4893  1429  0023               	movlb	3	; select bank3
  4894  142A  0837               	movf	_pBDTEntryIn^(0+384),w
  4895  142B  0086               	movwf	6
  4896  142C  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  4897  142D  0087               	movwf	7
  4898  142E  0021               	movlb	1	; select bank1
  4899  142F  0842               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
  4900  1430  0581               	andwf	1,f
  4901                           
  4902                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  4903  1431  3004               	movlw	4
  4904  1432  0023               	movlb	3	; select bank3
  4905  1433  0637               	xorwf	_pBDTEntryIn^(0+384),w
  4906  1434  00B7               	movwf	_pBDTEntryIn^(0+384)
  4907  1435  3000               	movlw	0
  4908  1436  0638               	xorwf	(_pBDTEntryIn+1)^(0+384),w
  4909  1437  00B8               	movwf	(_pBDTEntryIn+1)^(0+384)
  4910                           
  4911                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  4912  1438  307F               	movlw	127
  4913  1439  0021               	movlb	1	; select bank1
  4914  143A  00C2               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
  4915  143B  0023               	movlb	3	; select bank3
  4916  143C  0837               	movf	_pBDTEntryIn^(0+384),w
  4917  143D  0086               	movwf	6
  4918  143E  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  4919  143F  0087               	movwf	7
  4920  1440  0021               	movlb	1	; select bank1
  4921  1441  0842               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
  4922  1442  0581               	andwf	1,f
  4923                           
  4924                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  4925  1443  3004               	movlw	4
  4926  1444  0023               	movlb	3	; select bank3
  4927  1445  0637               	xorwf	_pBDTEntryIn^(0+384),w
  4928  1446  00B7               	movwf	_pBDTEntryIn^(0+384)
  4929  1447  3000               	movlw	0
  4930  1448  0638               	xorwf	(_pBDTEntryIn+1)^(0+384),w
  4931  1449  00B8               	movwf	(_pBDTEntryIn+1)^(0+384)
  4932                           
  4933                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  4934  144A  307F               	movlw	127
  4935  144B  0021               	movlb	1	; select bank1
  4936  144C  00C2               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
  4937  144D  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  4938  144E  0086               	movwf	6
  4939  144F  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  4940  1450  0087               	movwf	7
  4941  1451  0842               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
  4942  1452  0581               	andwf	1,f
  4943                           
  4944                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
  4945  1453  01C5               	clrf	(_inPipes^(0+128)+2)	;volatile
  4946                           
  4947                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
  4948  1454  01C6               	clrf	(_inPipes^(0+128)+3)	;volatile
  4949  1455  01C7               	clrf	((_inPipes+1)^(0+128)+3)	;volatile
  4950                           
  4951                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
  4952  1456  0023               	movlb	3	; select bank3
  4953  1457  01B2               	clrf	(_outPipes^(0+384)+2)	;volatile
  4954                           
  4955                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
  4956  1458  01B3               	clrf	(_outPipes^(0+384)+3)	;volatile
  4957  1459  01B4               	clrf	((_outPipes+1)^(0+384)+3)	;volatile
  4958                           
  4959                           ;usb_device.c: 2500: USBCheckStdRequest();
  4960  145A  3197  279F  3194   	fcall	_USBCheckStdRequest
  4961                           
  4962                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  4963  145D  3000               	movlw	0
  4964  145E  0021               	movlb	1	; select bank1
  4965  145F  00B5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
  4966  1460  3003               	movlw	3
  4967  1461  00B4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  4968  1462  3000               	movlw	0
  4969  1463  00B6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  4970  1464  3000               	movlw	0
  4971  1465  00B7               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  4972  1466  3000               	movlw	0
  4973  1467  00B8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  4974  1468  00B9               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
  4975  1469  3191  2108  3194   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4976                           
  4977                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
  4978  146C  318E  26C8         	fcall	_USBCtrlEPServiceComplete
  4979  146E  0008               	return
  4980  146F                     __end_of_USBCtrlTrfSetupHandler:	
  4981                           
  4982                           	psect	text16
  4983  0EC8                     __ptext16:	
  4984 ;; *************** function _USBCtrlEPServiceComplete *****************
  4985 ;; Defined at:
  4986 ;;		line 1616 in file "mcc_generated_files/usb/usb_device.c"
  4987 ;; Parameters:    Size  Location     Type
  4988 ;;		None
  4989 ;; Auto vars:     Size  Location     Type
  4990 ;;		None
  4991 ;; Return value:  Size  Location     Type
  4992 ;;                  1    wreg      void 
  4993 ;; Registers used:
  4994 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4995 ;; Tracked objects:
  4996 ;;		On entry : 0/0
  4997 ;;		On exit  : 0/0
  4998 ;;		Unchanged: 0/0
  4999 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5002 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5003 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5004 ;;Total ram usage:        2 bytes
  5005 ;; Hardware stack levels used:    1
  5006 ;; Hardware stack levels required when called:   12
  5007 ;; This function calls:
  5008 ;;		_USBCtrlEPAllowDataStage
  5009 ;;		_USBCtrlEPAllowStatusStage
  5010 ;; This function is called by:
  5011 ;;		_USBCtrlTrfSetupHandler
  5012 ;; This function uses a non-reentrant model
  5013 ;;
  5014                           
  5015                           
  5016                           ;psect for function _USBCtrlEPServiceComplete
  5017  0EC8                     _USBCtrlEPServiceComplete:	
  5018                           
  5019                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
  5020                           
  5021                           ;incstack = 0
  5022                           ; Regs used in _USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5023  0EC8  003D               	movlb	29	; select bank29
  5024  0EC9  120E               	bcf	14,4	;volatile
  5025                           
  5026                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
  5027  0ECA  0021               	movlb	1	; select bank1
  5028  0ECB  1BC5               	btfsc	(_inPipes^(0+128)+2),7	;volatile
  5029  0ECC  2F11               	goto	l465
  5030                           
  5031                           ;usb_device.c: 1629: {
  5032                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
  5033  0ECD  0023               	movlb	3	; select bank3
  5034  0ECE  1FB2               	btfss	(_outPipes^(0+384)+2),7	;volatile
  5035  0ECF  2EDF               	goto	l7788
  5036                           
  5037                           ;usb_device.c: 1631: {
  5038                           ;usb_device.c: 1632: controlTransferState = 2;
  5039  0ED0  3002               	movlw	2
  5040  0ED1  0021               	movlb	1	; select bank1
  5041  0ED2  00AB               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  5042  0ED3  082B               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  5043  0ED4  0023               	movlb	3	; select bank3
  5044  0ED5  00E2               	movwf	_controlTransferState^(0+384)	;volatile
  5045                           
  5046                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
  5047  0ED6  0857               	movf	_USBDeferOUTDataStagePackets^(0+384),w	;volatile
  5048  0ED7  1D03               	btfss	3,2
  5049  0ED8  2EDB               	goto	l7784
  5050                           
  5051                           ;usb_device.c: 1644: {
  5052                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
  5053  0ED9  3196  26E0         	fcall	_USBCtrlEPAllowDataStage
  5054  0EDB                     l7784:	
  5055                           
  5056                           ;usb_device.c: 1646: }
  5057                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
  5058  0EDB  0023               	movlb	3	; select bank3
  5059  0EDC  01D9               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  5060                           
  5061                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
  5062  0EDD  01DA               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  5063                           
  5064                           ;usb_device.c: 1652: }
  5065  0EDE  0008               	return
  5066  0EDF                     l7788:	
  5067                           
  5068                           ;usb_device.c: 1653: else
  5069                           ;usb_device.c: 1654: {
  5070                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
  5071  0EDF  0021               	movlb	1	; select bank1
  5072  0EE0  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5073  0EE1  3E01               	addlw	1
  5074  0EE2  00AB               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  5075  0EE3  3000               	movlw	0
  5076  0EE4  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5077  0EE5  00AC               	movwf	(??_USBCtrlEPServiceComplete+1)^(0+128)
  5078  0EE6  082B               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  5079  0EE7  0086               	movwf	6
  5080  0EE8  082C               	movf	(??_USBCtrlEPServiceComplete+1)^(0+128),w
  5081  0EE9  0087               	movwf	7
  5082  0EEA  3008               	movlw	8
  5083  0EEB  0081               	movwf	1
  5084                           
  5085                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  5086  0EEC  3050               	movlw	80
  5087  0EED  00AB               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  5088  0EEE  3000               	movlw	0
  5089  0EEF  00AC               	movwf	(??_USBCtrlEPServiceComplete^(0+128)+1)
  5090  0EF0  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5091  0EF1  0086               	movwf	6
  5092  0EF2  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5093  0EF3  0087               	movwf	7
  5094  0EF4  3142               	addfsr 1,2
  5095  0EF5  082B               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  5096  0EF6  3FC0               	movwi [0]fsr1
  5097  0EF7  082C               	movf	(??_USBCtrlEPServiceComplete^(0+128)+1),w
  5098  0EF8  3FC1               	movwi [1]fsr1
  5099                           
  5100                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  5101  0EF9  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5102  0EFA  0086               	movwf	6
  5103  0EFB  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5104  0EFC  0087               	movwf	7
  5105  0EFD  300C               	movlw	12
  5106  0EFE  0081               	movwf	1
  5107                           
  5108                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5109  0EFF  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5110  0F00  0086               	movwf	6
  5111  0F01  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5112  0F02  0087               	movwf	7
  5113  0F03  1781               	bsf	1,7
  5114                           
  5115                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
  5116  0F04  0023               	movlb	3	; select bank3
  5117  0F05  0837               	movf	_pBDTEntryIn^(0+384),w
  5118  0F06  0086               	movwf	6
  5119  0F07  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  5120  0F08  0087               	movwf	7
  5121  0F09  3004               	movlw	4
  5122  0F0A  0081               	movwf	1
  5123                           
  5124                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
  5125  0F0B  0837               	movf	_pBDTEntryIn^(0+384),w
  5126  0F0C  0086               	movwf	6
  5127  0F0D  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  5128  0F0E  0087               	movwf	7
  5129  0F0F  1781               	bsf	1,7
  5130                           
  5131                           ;usb_device.c: 1665: }
  5132                           ;usb_device.c: 1666: }
  5133  0F10  0008               	return
  5134  0F11                     l465:	
  5135                           
  5136                           ;usb_device.c: 1667: else
  5137                           ;usb_device.c: 1668: {
  5138                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
  5139  0F11  0020               	movlb	0	; select bank0
  5140  0F12  1FD0               	btfss	80,7	;volatile
  5141  0F13  2F29               	goto	l7814
  5142                           
  5143                           ;usb_device.c: 1670: {
  5144                           ;usb_device.c: 1671: controlTransferState = 1;
  5145  0F14  3001               	movlw	1
  5146  0F15  0021               	movlb	1	; select bank1
  5147  0F16  00AB               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  5148  0F17  082B               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  5149  0F18  0023               	movlb	3	; select bank3
  5150  0F19  00E2               	movwf	_controlTransferState^(0+384)	;volatile
  5151                           
  5152                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
  5153  0F1A  0858               	movf	_USBDeferINDataStagePackets^(0+384),w	;volatile
  5154  0F1B  1D03               	btfss	3,2
  5155  0F1C  2F20               	goto	l7806
  5156                           
  5157                           ;usb_device.c: 1686: {
  5158                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
  5159  0F1D  3196  26E0  318E   	fcall	_USBCtrlEPAllowDataStage
  5160  0F20                     l7806:	
  5161                           
  5162                           ;usb_device.c: 1688: }
  5163                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
  5164  0F20  0023               	movlb	3	; select bank3
  5165  0F21  01D9               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  5166                           
  5167                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
  5168  0F22  01DA               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  5169                           
  5170                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
  5171  0F23  085B               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
  5172  0F24  1D03               	btfss	3,2
  5173  0F25  0008               	return
  5174                           
  5175                           ;usb_device.c: 1713: {
  5176                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
  5177  0F26  318A  229A         	fcall	_USBCtrlEPAllowStatusStage
  5178                           
  5179                           ;usb_device.c: 1715: }
  5180                           ;usb_device.c: 1716: }
  5181  0F28  0008               	return
  5182  0F29                     l7814:	
  5183                           
  5184                           ;usb_device.c: 1717: else
  5185                           ;usb_device.c: 1718: {
  5186                           ;usb_device.c: 1729: controlTransferState = 2;
  5187  0F29  3002               	movlw	2
  5188  0F2A  0021               	movlb	1	; select bank1
  5189  0F2B  00AB               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  5190  0F2C  082B               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  5191  0F2D  0023               	movlb	3	; select bank3
  5192  0F2E  00E2               	movwf	_controlTransferState^(0+384)	;volatile
  5193                           
  5194                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
  5195  0F2F  0021               	movlb	1	; select bank1
  5196  0F30  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5197  0F31  3E01               	addlw	1
  5198  0F32  00AB               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  5199  0F33  3000               	movlw	0
  5200  0F34  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5201  0F35  00AC               	movwf	(??_USBCtrlEPServiceComplete+1)^(0+128)
  5202  0F36  082B               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  5203  0F37  0086               	movwf	6
  5204  0F38  082C               	movf	(??_USBCtrlEPServiceComplete+1)^(0+128),w
  5205  0F39  0087               	movwf	7
  5206  0F3A  3008               	movlw	8
  5207  0F3B  0081               	movwf	1
  5208                           
  5209                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  5210  0F3C  3050               	movlw	80
  5211  0F3D  00AB               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  5212  0F3E  3000               	movlw	0
  5213  0F3F  00AC               	movwf	(??_USBCtrlEPServiceComplete^(0+128)+1)
  5214  0F40  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5215  0F41  0086               	movwf	6
  5216  0F42  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5217  0F43  0087               	movwf	7
  5218  0F44  3142               	addfsr 1,2
  5219  0F45  082B               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  5220  0F46  3FC0               	movwi [0]fsr1
  5221  0F47  082C               	movf	(??_USBCtrlEPServiceComplete^(0+128)+1),w
  5222  0F48  3FC1               	movwi [1]fsr1
  5223                           
  5224                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  5225  0F49  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5226  0F4A  0086               	movwf	6
  5227  0F4B  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5228  0F4C  0087               	movwf	7
  5229  0F4D  3004               	movlw	4
  5230  0F4E  0081               	movwf	1
  5231                           
  5232                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5233  0F4F  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5234  0F50  0086               	movwf	6
  5235  0F51  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5236  0F52  0087               	movwf	7
  5237  0F53  1781               	bsf	1,7
  5238                           
  5239                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
  5240  0F54  0023               	movlb	3	; select bank3
  5241  0F55  01D9               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  5242                           
  5243                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
  5244  0F56  01DA               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  5245                           
  5246                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
  5247  0F57  085B               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
  5248  0F58  1D03               	btfss	3,2
  5249  0F59  0008               	return
  5250                           
  5251                           ;usb_device.c: 1741: {
  5252                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
  5253  0F5A  318A  229A         	fcall	_USBCtrlEPAllowStatusStage
  5254  0F5C  0008               	return
  5255  0F5D                     __end_of_USBCtrlEPServiceComplete:	
  5256                           
  5257                           	psect	text17
  5258  16E0                     __ptext17:	
  5259 ;; *************** function _USBCtrlEPAllowDataStage *****************
  5260 ;; Defined at:
  5261 ;;		line 1488 in file "mcc_generated_files/usb/usb_device.c"
  5262 ;; Parameters:    Size  Location     Type
  5263 ;;		None
  5264 ;; Auto vars:     Size  Location     Type
  5265 ;;		None
  5266 ;; Return value:  Size  Location     Type
  5267 ;;                  1    wreg      void 
  5268 ;; Registers used:
  5269 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5270 ;; Tracked objects:
  5271 ;;		On entry : 0/0
  5272 ;;		On exit  : 0/0
  5273 ;;		Unchanged: 0/0
  5274 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5277 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5278 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5279 ;;Total ram usage:        2 bytes
  5280 ;; Hardware stack levels used:    1
  5281 ;; Hardware stack levels required when called:   11
  5282 ;; This function calls:
  5283 ;;		_USBCtrlTrfTxService
  5284 ;; This function is called by:
  5285 ;;		_USBCtrlEPServiceComplete
  5286 ;; This function uses a non-reentrant model
  5287 ;;
  5288                           
  5289                           
  5290                           ;psect for function _USBCtrlEPAllowDataStage
  5291  16E0                     _USBCtrlEPAllowDataStage:	
  5292                           
  5293                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
  5294                           
  5295                           ;incstack = 0
  5296                           ; Regs used in _USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5297  16E0  0023               	movlb	3	; select bank3
  5298  16E1  01D8               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  5299                           
  5300                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
  5301  16E2  01D7               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  5302                           
  5303                           ;usb_device.c: 1493: if(controlTransferState == 2)
  5304  16E3  3002               	movlw	2
  5305  16E4  0662               	xorwf	_controlTransferState^(0+384),w	;volatile
  5306  16E5  1D03               	btfss	3,2
  5307  16E6  2F0D               	goto	l7566
  5308                           
  5309                           ;usb_device.c: 1494: {
  5310                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
  5311  16E7  0021               	movlb	1	; select bank1
  5312  16E8  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5313  16E9  3E01               	addlw	1
  5314  16EA  00A9               	movwf	??_USBCtrlEPAllowDataStage^(0+128)
  5315  16EB  3000               	movlw	0
  5316  16EC  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5317  16ED  00AA               	movwf	(??_USBCtrlEPAllowDataStage+1)^(0+128)
  5318  16EE  0829               	movf	??_USBCtrlEPAllowDataStage^(0+128),w
  5319  16EF  0086               	movwf	6
  5320  16F0  082A               	movf	(??_USBCtrlEPAllowDataStage+1)^(0+128),w
  5321  16F1  0087               	movwf	7
  5322  16F2  3008               	movlw	8
  5323  16F3  0081               	movwf	1
  5324                           
  5325                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  5326  16F4  3058               	movlw	88
  5327  16F5  00A9               	movwf	??_USBCtrlEPAllowDataStage^(0+128)
  5328  16F6  3000               	movlw	0
  5329  16F7  00AA               	movwf	(??_USBCtrlEPAllowDataStage^(0+128)+1)
  5330  16F8  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5331  16F9  0086               	movwf	6
  5332  16FA  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5333  16FB  0087               	movwf	7
  5334  16FC  3142               	addfsr 1,2
  5335  16FD  0829               	movf	??_USBCtrlEPAllowDataStage^(0+128),w
  5336  16FE  3FC0               	movwi [0]fsr1
  5337  16FF  082A               	movf	(??_USBCtrlEPAllowDataStage^(0+128)+1),w
  5338  1700  3FC1               	movwi [1]fsr1
  5339                           
  5340                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  5341  1701  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5342  1702  0086               	movwf	6
  5343  1703  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5344  1704  0087               	movwf	7
  5345  1705  3048               	movlw	72
  5346  1706  0081               	movwf	1
  5347                           
  5348                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5349  1707  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5350  1708  0086               	movwf	6
  5351  1709  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5352  170A  0087               	movwf	7
  5353  170B  1781               	bsf	1,7
  5354                           
  5355                           ;usb_device.c: 1500: }
  5356  170C  0008               	return
  5357  170D                     l7566:	
  5358                           
  5359                           ;usb_device.c: 1501: else
  5360                           ;usb_device.c: 1502: {
  5361                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  5362  170D  0021               	movlb	1	; select bank1
  5363  170E  0847               	movf	((_inPipes+1)^(0+128)+3),w	;volatile
  5364  170F  0020               	movlb	0	; select bank0
  5365  1710  0257               	subwf	87,w	;volatile
  5366  1711  1D03               	skipz
  5367  1712  2F17               	goto	u6975
  5368  1713  0021               	movlb	1	; select bank1
  5369  1714  0846               	movf	(_inPipes^(0+128)+3),w	;volatile
  5370  1715  0020               	movlb	0	; select bank0
  5371  1716  0256               	subwf	86,w	;volatile
  5372  1717                     u6975:	
  5373  1717  1803               	skipnc
  5374  1718  2F20               	goto	l7570
  5375                           
  5376                           ;usb_device.c: 1506: {
  5377                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
  5378  1719  0857               	movf	87,w	;volatile
  5379  171A  0021               	movlb	1	; select bank1
  5380  171B  00C7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  5381  171C  0020               	movlb	0	; select bank0
  5382  171D  0856               	movf	86,w	;volatile
  5383  171E  0021               	movlb	1	; select bank1
  5384  171F  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
  5385  1720                     l7570:	
  5386                           
  5387                           ;usb_device.c: 1508: }
  5388                           ;usb_device.c: 1509: USBCtrlTrfTxService();
  5389  1720  318A  2220         	fcall	_USBCtrlTrfTxService
  5390                           
  5391                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  5392  1722  3058               	movlw	88
  5393  1723  0021               	movlb	1	; select bank1
  5394  1724  00A9               	movwf	??_USBCtrlEPAllowDataStage^(0+128)
  5395  1725  3000               	movlw	0
  5396  1726  00AA               	movwf	(??_USBCtrlEPAllowDataStage^(0+128)+1)
  5397  1727  0023               	movlb	3	; select bank3
  5398  1728  0837               	movf	_pBDTEntryIn^(0+384),w
  5399  1729  0086               	movwf	6
  5400  172A  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  5401  172B  0087               	movwf	7
  5402  172C  3142               	addfsr 1,2
  5403  172D  0021               	movlb	1	; select bank1
  5404  172E  0829               	movf	??_USBCtrlEPAllowDataStage^(0+128),w
  5405  172F  3FC0               	movwi [0]fsr1
  5406  1730  082A               	movf	(??_USBCtrlEPAllowDataStage^(0+128)+1),w
  5407  1731  3FC1               	movwi [1]fsr1
  5408                           
  5409                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  5410  1732  0023               	movlb	3	; select bank3
  5411  1733  0837               	movf	_pBDTEntryIn^(0+384),w
  5412  1734  0086               	movwf	6
  5413  1735  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  5414  1736  0087               	movwf	7
  5415  1737  3048               	movlw	72
  5416  1738  0081               	movwf	1
  5417                           
  5418                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
  5419  1739  0837               	movf	_pBDTEntryIn^(0+384),w
  5420  173A  0086               	movwf	6
  5421  173B  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  5422  173C  0087               	movwf	7
  5423  173D  1781               	bsf	1,7
  5424  173E  0008               	return
  5425  173F                     __end_of_USBCtrlEPAllowDataStage:	
  5426                           
  5427                           	psect	text18
  5428  179F                     __ptext18:	
  5429 ;; *************** function _USBCheckStdRequest *****************
  5430 ;; Defined at:
  5431 ;;		line 2686 in file "mcc_generated_files/usb/usb_device.c"
  5432 ;; Parameters:    Size  Location     Type
  5433 ;;		None
  5434 ;; Auto vars:     Size  Location     Type
  5435 ;;		None
  5436 ;; Return value:  Size  Location     Type
  5437 ;;                  1    wreg      void 
  5438 ;; Registers used:
  5439 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5440 ;; Tracked objects:
  5441 ;;		On entry : 0/0
  5442 ;;		On exit  : 0/0
  5443 ;;		Unchanged: 0/0
  5444 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5447 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5448 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5449 ;;Total ram usage:        1 bytes
  5450 ;; Hardware stack levels used:    1
  5451 ;; Hardware stack levels required when called:   15
  5452 ;; This function calls:
  5453 ;;		_USBStdFeatureReqHandler
  5454 ;;		_USBStdGetDscHandler
  5455 ;;		_USBStdGetStatusHandler
  5456 ;;		_USBStdSetCfgHandler
  5457 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5458 ;; This function is called by:
  5459 ;;		_USBCtrlTrfSetupHandler
  5460 ;; This function uses a non-reentrant model
  5461 ;;
  5462                           
  5463                           
  5464                           ;psect for function _USBCheckStdRequest
  5465  179F                     _USBCheckStdRequest:	
  5466                           
  5467                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
  5468                           
  5469                           ;incstack = 0
  5470 ;; hardware stack exceeded
  5471                           ; Regs used in _USBCheckStdRequest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5472  179F  0020               	movlb	0	; select bank0
  5473  17A0  0E50               	swapf	80,w	;volatile
  5474  17A1  0C89               	rrf	9,f
  5475  17A2  3903               	andlw	3
  5476  17A3  3A00               	xorlw	0
  5477  17A4  1D03               	btfss	3,2
  5478  17A5  0008               	return
  5479  17A6  2FF4               	goto	l7908
  5480  17A7                     l592:	
  5481                           ;usb_device.c: 2691: {
  5482                           ;usb_device.c: 2692: case 5:
  5483                           
  5484                           ;usb_device.c: 2690: switch(SetupPkt.bRequest)
  5485                           
  5486                           
  5487                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
  5488  17A7  0021               	movlb	1	; select bank1
  5489  17A8  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5490                           
  5491                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
  5492  17A9  3008               	movlw	8
  5493  17AA  00C1               	movwf	??_USBCheckStdRequest^(0+128)
  5494  17AB  0841               	movf	??_USBCheckStdRequest^(0+128),w
  5495  17AC  0023               	movlb	3	; select bank3
  5496  17AD  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
  5497                           
  5498                           ;usb_device.c: 2696: break;
  5499  17AE  0008               	return
  5500  17AF                     l7878:	
  5501                           ;usb_device.c: 2697: case 6:
  5502                           
  5503                           
  5504                           ;usb_device.c: 2698: USBStdGetDscHandler();
  5505  17AF  318B  2393         	fcall	_USBStdGetDscHandler
  5506                           
  5507                           ;usb_device.c: 2699: break;
  5508  17B1  0008               	return
  5509  17B2                     l7880:	
  5510                           ;usb_device.c: 2700: case 9:
  5511                           
  5512                           
  5513                           ;usb_device.c: 2701: USBStdSetCfgHandler();
  5514  17B2  318D  25A8         	fcall	_USBStdSetCfgHandler
  5515                           
  5516                           ;usb_device.c: 2702: break;
  5517  17B4  0008               	return
  5518  17B5                     l7882:	
  5519                           ;usb_device.c: 2703: case 8:
  5520                           
  5521                           
  5522                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  5523  17B5  30EE               	movlw	low _USBActiveConfiguration
  5524  17B6  0021               	movlb	1	; select bank1
  5525  17B7  00C3               	movwf	_inPipes^(0+128)	;volatile
  5526  17B8  3001               	movlw	high _USBActiveConfiguration
  5527  17B9  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
  5528                           
  5529                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  5530  17BA  1445               	bsf	(_inPipes^(0+128)+2),0	;volatile
  5531                           
  5532                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
  5533  17BB  3001               	movlw	1
  5534  17BC  00C1               	movwf	??_USBCheckStdRequest^(0+128)
  5535  17BD  0841               	movf	??_USBCheckStdRequest^(0+128),w
  5536  17BE  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
  5537                           
  5538                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
  5539  17BF  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5540                           
  5541                           ;usb_device.c: 2708: break;
  5542  17C0  0008               	return
  5543  17C1                     l7890:	
  5544                           ;usb_device.c: 2709: case 0:
  5545                           
  5546                           
  5547                           ;usb_device.c: 2710: USBStdGetStatusHandler();
  5548  17C1  3195  2517         	fcall	_USBStdGetStatusHandler
  5549                           
  5550                           ;usb_device.c: 2711: break;
  5551  17C3  0008               	return
  5552  17C4                     l7892:	
  5553                           ;usb_device.c: 2712: case 1:
  5554                           
  5555                           
  5556                           ;usb_device.c: 2713: case 3:
  5557                           ;usb_device.c: 2714: USBStdFeatureReqHandler();
  5558  17C4  3180  207B         	fcall	_USBStdFeatureReqHandler
  5559                           
  5560                           ;usb_device.c: 2715: break;
  5561  17C6  0008               	return
  5562  17C7                     l7894:	
  5563                           ;usb_device.c: 2716: case 10:
  5564                           
  5565                           
  5566                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  5567  17C7  0020               	movlb	0	; select bank0
  5568  17C8  0854               	movf	84,w	;volatile
  5569  17C9  3EEB               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
  5570  17CA  0021               	movlb	1	; select bank1
  5571  17CB  00C3               	movwf	_inPipes^(0+128)	;volatile
  5572  17CC  3001               	movlw	1
  5573  17CD  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
  5574                           
  5575                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  5576  17CE  1445               	bsf	(_inPipes^(0+128)+2),0	;volatile
  5577                           
  5578                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
  5579  17CF  3001               	movlw	1
  5580  17D0  00C1               	movwf	??_USBCheckStdRequest^(0+128)
  5581  17D1  0841               	movf	??_USBCheckStdRequest^(0+128),w
  5582  17D2  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
  5583                           
  5584                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
  5585  17D3  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5586                           
  5587                           ;usb_device.c: 2721: break;
  5588  17D4  0008               	return
  5589  17D5                     l601:	
  5590                           ;usb_device.c: 2722: case 11:
  5591                           
  5592                           
  5593                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
  5594  17D5  0021               	movlb	1	; select bank1
  5595  17D6  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5596                           
  5597                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  5598  17D7  0020               	movlb	0	; select bank0
  5599  17D8  0852               	movf	82,w	;volatile
  5600  17D9  0021               	movlb	1	; select bank1
  5601  17DA  00C1               	movwf	??_USBCheckStdRequest^(0+128)
  5602  17DB  0020               	movlb	0	; select bank0
  5603  17DC  0854               	movf	84,w	;volatile
  5604  17DD  3EEB               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
  5605  17DE  0086               	movwf	6
  5606  17DF  3001               	movlw	1	; select bank3/4
  5607  17E0  0087               	movwf	7
  5608  17E1  0021               	movlb	1	; select bank1
  5609  17E2  0841               	movf	??_USBCheckStdRequest^(0+128),w
  5610  17E3  0081               	movwf	1
  5611                           
  5612                           ;usb_device.c: 2725: break;
  5613  17E4  0008               	return
  5614  17E5                     l7904:	
  5615                           ;usb_device.c: 2726: case 7:
  5616                           
  5617                           
  5618                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  5619  17E5  3000               	movlw	0
  5620  17E6  0021               	movlb	1	; select bank1
  5621  17E7  00B5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
  5622  17E8  3002               	movlw	2
  5623  17E9  00B4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  5624  17EA  3000               	movlw	0
  5625  17EB  00B6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  5626  17EC  3000               	movlw	0
  5627  17ED  00B7               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  5628  17EE  3000               	movlw	0
  5629  17EF  00B8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  5630  17F0  00B9               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
  5631  17F1  3191  2108         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5632                           
  5633                           ;usb_device.c: 2732: }
  5634                           
  5635                           ;usb_device.c: 2731: break;
  5636                           
  5637                           ;usb_device.c: 2730: default:
  5638                           
  5639                           ;usb_device.c: 2729: case 12:
  5640                           
  5641                           ;usb_device.c: 2728: break;
  5642  17F3  0008               	return
  5643  17F4                     l7908:	
  5644  17F4  0020               	movlb	0	; select bank0
  5645  17F5  0851               	movf	81,w	;volatile
  5646                           
  5647                           ; Switch size 1, requested type "space"
  5648                           ; Number of cases is 11, Range of values is 0 to 12
  5649                           ; switch strategies available:
  5650                           ; Name         Instructions Cycles
  5651                           ; direct_byte           32     6 (fixed)
  5652                           ; simple_byte           34    18 (average)
  5653                           ; jumptable            260     6 (fixed)
  5654                           ;	Chosen strategy is direct_byte
  5655  17F6  0084               	movwf	4
  5656  17F7  300D               	movlw	13
  5657  17F8  0204               	subwf	4,w
  5658  17F9  1803               	skipnc
  5659  17FA  0008               	return
  5660  17FB  3198               	movlp	high S8516
  5661  17FC  3504               	lslf	4,w
  5662  17FD  3E91               	addlw	low S8516
  5663  17FE  0082               	movwf	2
  5664  17FF                     l590:	
  5665  17FF  0008               	return
  5666  1800                     __end_of_USBCheckStdRequest:	
  5667                           
  5668                           	psect	swtext1
  5669  1891                     __pswtext1:	
  5670  1891                     S8516:	
  5671  1891  3197  2FC1         	ljmp	l7890
  5672  1893  3197  2FC4         	ljmp	l7892
  5673  1895  3197  2FFF         	ljmp	l590
  5674  1897  3197  2FC4         	ljmp	l7892
  5675  1899  3197  2FFF         	ljmp	l590
  5676  189B  3197  2FA7         	ljmp	l592
  5677  189D  3197  2FAF         	ljmp	l7878
  5678  189F  3197  2FE5         	ljmp	l7904
  5679  18A1  3197  2FB5         	ljmp	l7882
  5680  18A3  3197  2FB2         	ljmp	l7880
  5681  18A5  3197  2FC7         	ljmp	l7894
  5682  18A7  3197  2FD5         	ljmp	l601
  5683  18A9  3197  2FFF         	ljmp	l590
  5684                           
  5685                           	psect	text19
  5686  0DA8                     __ptext19:	
  5687 ;; *************** function _USBStdSetCfgHandler *****************
  5688 ;; Defined at:
  5689 ;;		line 1968 in file "mcc_generated_files/usb/usb_device.c"
  5690 ;; Parameters:    Size  Location     Type
  5691 ;;		None
  5692 ;; Auto vars:     Size  Location     Type
  5693 ;;  p               2   27[BANK1 ] PTR unsigned char 
  5694 ;;		 -> UEP1(1), 
  5695 ;;  i               1   29[BANK1 ] unsigned char 
  5696 ;;  i               1   30[BANK1 ] unsigned char 
  5697 ;; Return value:  Size  Location     Type
  5698 ;;                  1    wreg      void 
  5699 ;; Registers used:
  5700 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5701 ;; Tracked objects:
  5702 ;;		On entry : 0/0
  5703 ;;		On exit  : 0/0
  5704 ;;		Unchanged: 0/0
  5705 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5707 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5708 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5709 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5710 ;;Total ram usage:        5 bytes
  5711 ;; Hardware stack levels used:    1
  5712 ;; Hardware stack levels required when called:   14
  5713 ;; This function calls:
  5714 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5715 ;;		_memset
  5716 ;; This function is called by:
  5717 ;;		_USBCheckStdRequest
  5718 ;; This function uses a non-reentrant model
  5719 ;;
  5720                           
  5721                           
  5722                           ;psect for function _USBStdSetCfgHandler
  5723  0DA8                     _USBStdSetCfgHandler:	
  5724                           
  5725                           ;usb_device.c: 1970: uint8_t i;
  5726                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
  5727                           
  5728                           ;incstack = 0
  5729 ;; hardware stack exceeded
  5730                           ; Regs used in _USBStdSetCfgHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5731  0DA8  0021               	movlb	1	; select bank1
  5732  0DA9  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5733                           
  5734                           ;usb_device.c: 1976: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 
      +                          0; };
  5735  0DAA  300E               	movlw	14
  5736  0DAB  00BC               	movwf	(USBStdSetCfgHandler@p+1)^(0+128)
  5737  0DAC  3099               	movlw	153
  5738  0DAD  00BB               	movwf	USBStdSetCfgHandler@p^(0+128)
  5739  0DAE  01BD               	clrf	USBStdSetCfgHandler@i_2163^(0+128)
  5740  0DAF  3002               	movlw	2
  5741  0DB0  023D               	subwf	USBStdSetCfgHandler@i_2163^(0+128),w
  5742  0DB1  1803               	btfsc	3,0
  5743  0DB2  2DC4               	goto	l7594
  5744  0DB3                     l7586:	
  5745  0DB3  083B               	movf	USBStdSetCfgHandler@p^(0+128),w
  5746  0DB4  0086               	movwf	6
  5747  0DB5  083C               	movf	(USBStdSetCfgHandler@p+1)^(0+128),w
  5748  0DB6  0087               	movwf	7
  5749  0DB7  0181               	clrf	1
  5750  0DB8  3001               	movlw	1
  5751  0DB9  07BB               	addwf	USBStdSetCfgHandler@p^(0+128),f
  5752  0DBA  3000               	movlw	0
  5753  0DBB  3DBC               	addwfc	(USBStdSetCfgHandler@p+1)^(0+128),f
  5754  0DBC  3001               	movlw	1
  5755  0DBD  00BA               	movwf	??_USBStdSetCfgHandler^(0+128)
  5756  0DBE  083A               	movf	??_USBStdSetCfgHandler^(0+128),w
  5757  0DBF  07BD               	addwf	USBStdSetCfgHandler@i_2163^(0+128),f
  5758  0DC0  3002               	movlw	2
  5759  0DC1  023D               	subwf	USBStdSetCfgHandler@i_2163^(0+128),w
  5760  0DC2  1C03               	skipc
  5761  0DC3  2DB3               	goto	l7586
  5762  0DC4                     l7594:	
  5763                           
  5764                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  5765  0DC4  3020               	movlw	32
  5766  0DC5  00A6               	movwf	memset@p1^(0+128)
  5767  0DC6  3000               	movlw	0
  5768  0DC7  00A7               	movwf	(memset@p1+1)^(0+128)
  5769  0DC8  3000               	movlw	0
  5770  0DC9  00A8               	movwf	memset@c^(0+128)
  5771  0DCA  00A9               	movwf	(memset@c+1)^(0+128)
  5772  0DCB  3030               	movlw	48
  5773  0DCC  00AA               	movwf	memset@n^(0+128)
  5774  0DCD  3000               	movlw	0
  5775  0DCE  00AB               	movwf	(memset@n^(0+128)+1)
  5776  0DCF  319E  2672  318D   	fcall	_memset
  5777                           
  5778                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
  5779  0DD2  003D               	movlb	29	; select bank29
  5780  0DD3  170E               	bsf	14,6	;volatile
  5781                           
  5782                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
  5783  0DD4  0021               	movlb	1	; select bank1
  5784  0DD5  01BE               	clrf	USBStdSetCfgHandler@i^(0+128)
  5785  0DD6  3003               	movlw	3
  5786  0DD7  023E               	subwf	USBStdSetCfgHandler@i^(0+128),w
  5787  0DD8  1803               	btfsc	3,0
  5788  0DD9  2DEE               	goto	l7610
  5789  0DDA                     l7604:	
  5790                           
  5791                           ;usb_device.c: 1988: {
  5792                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
  5793  0DDA  083E               	movf	USBStdSetCfgHandler@i^(0+128),w
  5794  0DDB  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  5795  0DDC  0086               	movwf	6
  5796  0DDD  3001               	movlw	1	; select bank3/4
  5797  0DDE  0087               	movwf	7
  5798  0DDF  0181               	clrf	1
  5799                           
  5800                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
  5801  0DE0  083E               	movf	USBStdSetCfgHandler@i^(0+128),w
  5802  0DE1  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  5803  0DE2  0086               	movwf	6
  5804  0DE3  3001               	movlw	1	; select bank3/4
  5805  0DE4  0087               	movwf	7
  5806  0DE5  0181               	clrf	1
  5807  0DE6  3001               	movlw	1
  5808  0DE7  00BA               	movwf	??_USBStdSetCfgHandler^(0+128)
  5809  0DE8  083A               	movf	??_USBStdSetCfgHandler^(0+128),w
  5810  0DE9  07BE               	addwf	USBStdSetCfgHandler@i^(0+128),f
  5811  0DEA  3003               	movlw	3
  5812  0DEB  023E               	subwf	USBStdSetCfgHandler@i^(0+128),w
  5813  0DEC  1C03               	skipc
  5814  0DED  2DDA               	goto	l7604
  5815  0DEE                     l7610:	
  5816                           
  5817                           ;usb_device.c: 1991: }
  5818                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
  5819  0DEE  30EB               	movlw	low _USBAlternateInterface
  5820  0DEF  00A6               	movwf	memset@p1^(0+128)
  5821  0DF0  3001               	movlw	high _USBAlternateInterface
  5822  0DF1  00A7               	movwf	(memset@p1+1)^(0+128)
  5823  0DF2  3000               	movlw	0
  5824  0DF3  00A8               	movwf	memset@c^(0+128)
  5825  0DF4  00A9               	movwf	(memset@c+1)^(0+128)
  5826  0DF5  3002               	movlw	2
  5827  0DF6  00AA               	movwf	memset@n^(0+128)
  5828  0DF7  3000               	movlw	0
  5829  0DF8  00AB               	movwf	(memset@n^(0+128)+1)
  5830  0DF9  319E  2672  318D   	fcall	_memset
  5831                           
  5832                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
  5833  0DFC  003D               	movlb	29	; select bank29
  5834  0DFD  130E               	bcf	14,6	;volatile
  5835                           
  5836                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  5837  0DFE  3028               	movlw	40
  5838  0DFF  0023               	movlb	3	; select bank3
  5839  0E00  00B7               	movwf	_pBDTEntryIn^(0+384)
  5840  0E01  3000               	movlw	0
  5841  0E02  00B8               	movwf	(_pBDTEntryIn+1)^(0+384)
  5842                           
  5843                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  5844  0E03  3020               	movlw	32
  5845  0E04  0021               	movlb	1	; select bank1
  5846  0E05  00BA               	movwf	??_USBStdSetCfgHandler^(0+128)
  5847  0E06  083A               	movf	??_USBStdSetCfgHandler^(0+128),w
  5848  0E07  0023               	movlb	3	; select bank3
  5849  0E08  00E4               	movwf	_pBDTEntryEP0OutCurrent^(0+384)
  5850                           
  5851                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  5852  0E09  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  5853  0E0A  0021               	movlb	1	; select bank1
  5854  0E0B  00C8               	movwf	_pBDTEntryEP0OutNext^(0+128)
  5855  0E0C  39FF               	andlw	255
  5856  0E0D  1D03               	skipz
  5857  0E0E  3000               	movlw	0
  5858  0E0F  00C9               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
  5859                           
  5860                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  5861  0E10  0020               	movlb	0	; select bank0
  5862  0E11  0852               	movf	82,w	;volatile
  5863  0E12  0021               	movlb	1	; select bank1
  5864  0E13  00BA               	movwf	??_USBStdSetCfgHandler^(0+128)
  5865  0E14  083A               	movf	??_USBStdSetCfgHandler^(0+128),w
  5866  0E15  0023               	movlb	3	; select bank3
  5867  0E16  00EE               	movwf	_USBActiveConfiguration^(0+384)	;volatile
  5868                           
  5869                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
  5870  0E17  086E               	movf	_USBActiveConfiguration^(0+384),w	;volatile
  5871  0E18  1D03               	btfss	3,2
  5872  0E19  2E21               	goto	l7626
  5873                           
  5874                           ;usb_device.c: 2010: {
  5875                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
  5876  0E1A  3010               	movlw	16
  5877  0E1B  0021               	movlb	1	; select bank1
  5878  0E1C  00BA               	movwf	??_USBStdSetCfgHandler^(0+128)
  5879  0E1D  083A               	movf	??_USBStdSetCfgHandler^(0+128),w
  5880  0E1E  0023               	movlb	3	; select bank3
  5881  0E1F  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
  5882                           
  5883                           ;usb_device.c: 2013: }
  5884  0E20  0008               	return
  5885  0E21                     l7626:	
  5886                           
  5887                           ;usb_device.c: 2014: else
  5888                           ;usb_device.c: 2015: {
  5889                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  5890  0E21  3000               	movlw	0
  5891  0E22  0021               	movlb	1	; select bank1
  5892  0E23  00B5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
  5893  0E24  3001               	movlw	1
  5894  0E25  00B4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  5895  0E26  30EE               	movlw	low _USBActiveConfiguration
  5896  0E27  00B6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  5897  0E28  3001               	movlw	high _USBActiveConfiguration
  5898  0E29  00B7               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  5899  0E2A  3001               	movlw	1
  5900  0E2B  00B8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  5901  0E2C  3000               	movlw	0
  5902  0E2D  00B9               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)+1)
  5903  0E2E  3191  2108         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5904                           
  5905                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
  5906  0E30  3020               	movlw	32
  5907  0E31  0021               	movlb	1	; select bank1
  5908  0E32  00BA               	movwf	??_USBStdSetCfgHandler^(0+128)
  5909  0E33  083A               	movf	??_USBStdSetCfgHandler^(0+128),w
  5910  0E34  0023               	movlb	3	; select bank3
  5911  0E35  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
  5912  0E36  0008               	return
  5913  0E37                     __end_of_USBStdSetCfgHandler:	
  5914                           
  5915                           	psect	text20
  5916  1E72                     __ptext20:	
  5917 ;; *************** function _memset *****************
  5918 ;; Defined at:
  5919 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
  5920 ;; Parameters:    Size  Location     Type
  5921 ;;  p1              2    6[BANK1 ] PTR void 
  5922 ;;		 -> USBAlternateInterface(2), BDT(48), 
  5923 ;;  c               2    8[BANK1 ] int 
  5924 ;;  n               2   10[BANK1 ] unsigned int 
  5925 ;; Auto vars:     Size  Location     Type
  5926 ;;  p               2   12[BANK1 ] PTR unsigned char 
  5927 ;;		 -> USBAlternateInterface(2), BDT(48), 
  5928 ;; Return value:  Size  Location     Type
  5929 ;;                  2    6[BANK1 ] PTR void 
  5930 ;; Registers used:
  5931 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5932 ;; Tracked objects:
  5933 ;;		On entry : 0/0
  5934 ;;		On exit  : 0/0
  5935 ;;		Unchanged: 0/0
  5936 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5937 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  5938 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5940 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5941 ;;Total ram usage:        8 bytes
  5942 ;; Hardware stack levels used:    1
  5943 ;; Hardware stack levels required when called:   10
  5944 ;; This function calls:
  5945 ;;		Nothing
  5946 ;; This function is called by:
  5947 ;;		_USBStdSetCfgHandler
  5948 ;; This function uses a non-reentrant model
  5949 ;;
  5950                           
  5951                           
  5952                           ;psect for function _memset
  5953  1E72                     _memset:	
  5954                           
  5955                           ;incstack = 0
  5956                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  5957  1E72  0021               	movlb	1	; select bank1
  5958  1E73  0827               	movf	(memset@p1+1)^(0+128),w
  5959  1E74  00AD               	movwf	(memset@p+1)^(0+128)
  5960  1E75  0826               	movf	memset@p1^(0+128),w
  5961  1E76  00AC               	movwf	memset@p^(0+128)
  5962  1E77                     l7516:	
  5963  1E77  3001               	movlw	1
  5964  1E78  02AA               	subwf	memset@n^(0+128),f
  5965  1E79  3000               	movlw	0
  5966  1E7A  3BAB               	subwfb	(memset@n+1)^(0+128),f
  5967  1E7B  0A2A               	incf	memset@n^(0+128),w
  5968  1E7C  1903               	btfsc	3,2
  5969  1E7D  0A2B               	incf	(memset@n+1)^(0+128),w
  5970  1E7E  1903               	btfsc	3,2
  5971  1E7F  0008               	return
  5972  1E80  082C               	movf	memset@p^(0+128),w
  5973  1E81  0086               	movwf	6
  5974  1E82  082D               	movf	(memset@p+1)^(0+128),w
  5975  1E83  0087               	movwf	7
  5976  1E84  0828               	movf	memset@c^(0+128),w
  5977  1E85  0081               	movwf	1
  5978  1E86  3001               	movlw	1
  5979  1E87  07AC               	addwf	memset@p^(0+128),f
  5980  1E88  3000               	movlw	0
  5981  1E89  3DAD               	addwfc	(memset@p+1)^(0+128),f
  5982  1E8A  2E77               	goto	l7516
  5983  1E8B                     __end_of_memset:	
  5984                           ;	Return value of _memset is never used
  5985                           
  5986                           
  5987                           	psect	text21
  5988  1517                     __ptext21:	
  5989 ;; *************** function _USBStdGetStatusHandler *****************
  5990 ;; Defined at:
  5991 ;;		line 2129 in file "mcc_generated_files/usb/usb_device.c"
  5992 ;; Parameters:    Size  Location     Type
  5993 ;;		None
  5994 ;; Auto vars:     Size  Location     Type
  5995 ;;  p               2    7[BANK1 ] PTR struct __BDT
  5996 ;;		 -> RAM(4096), BDT(48), NULL(0), 
  5997 ;; Return value:  Size  Location     Type
  5998 ;;                  1    wreg      void 
  5999 ;; Registers used:
  6000 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  6001 ;; Tracked objects:
  6002 ;;		On entry : 0/0
  6003 ;;		On exit  : 0/0
  6004 ;;		Unchanged: 0/0
  6005 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6007 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6008 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6009 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6010 ;;Total ram usage:        3 bytes
  6011 ;; Hardware stack levels used:    1
  6012 ;; Hardware stack levels required when called:   10
  6013 ;; This function calls:
  6014 ;;		Nothing
  6015 ;; This function is called by:
  6016 ;;		_USBCheckStdRequest
  6017 ;; This function uses a non-reentrant model
  6018 ;;
  6019                           
  6020                           
  6021                           ;psect for function _USBStdGetStatusHandler
  6022  1517                     _USBStdGetStatusHandler:	
  6023                           
  6024                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
  6025                           
  6026                           ;incstack = 0
  6027                           ; Regs used in _USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
  6028  1517  0020               	movlb	0	; select bank0
  6029  1518  01D8               	clrf	88	;volatile
  6030                           
  6031                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
  6032  1519  01D9               	clrf	89	;volatile
  6033                           
  6034                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
  6035  151A  2D57               	goto	l7682
  6036  151B                     l530:	
  6037                           ;usb_device.c: 2135: {
  6038                           ;usb_device.c: 2136: case (0x00):
  6039                           
  6040                           
  6041                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
  6042  151B  0021               	movlb	1	; select bank1
  6043  151C  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  6044                           
  6045                           ;usb_device.c: 2145: }
  6046                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
  6047                           
  6048                           ;usb_device.c: 2143: {
  6049                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
  6050                           
  6051                           ;usb_device.c: 2142: if(0 == 1)
  6052  151D  0023               	movlb	3	; select bank3
  6053  151E  0360               	decf	_RemoteWakeup^(0+384),w	;volatile
  6054  151F  1D03               	btfss	3,2
  6055  1520  2D63               	goto	l533
  6056                           
  6057                           ;usb_device.c: 2148: {
  6058                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
  6059  1521  0020               	movlb	0	; select bank0
  6060  1522  14D8               	bsf	88,1	;volatile
  6061                           
  6062                           ;usb_device.c: 2150: }
  6063                           ;usb_device.c: 2151: break;
  6064  1523  2D63               	goto	l533
  6065  1524                     l534:	
  6066                           ;usb_device.c: 2152: case (0x01):
  6067                           
  6068                           
  6069                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
  6070  1524  0021               	movlb	1	; select bank1
  6071  1525  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  6072                           
  6073                           ;usb_device.c: 2154: break;
  6074  1526  2D63               	goto	l533
  6075  1527                     l535:	
  6076                           ;usb_device.c: 2155: case (0x02):
  6077                           
  6078                           
  6079                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
  6080  1527  0021               	movlb	1	; select bank1
  6081  1528  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  6082                           
  6083                           ;usb_device.c: 2160: {
  6084                           ;usb_device.c: 2161: BDT_ENTRY *p;
  6085                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
  6086  1529  0020               	movlb	0	; select bank0
  6087  152A  1BD4               	btfsc	84,7	;volatile
  6088  152B  2D38               	goto	l7672
  6089                           
  6090                           ;usb_device.c: 2164: {
  6091                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  6092  152C  0854               	movf	84,w	;volatile
  6093  152D  390F               	andlw	15
  6094  152E  0709               	addwf	9,w
  6095  152F  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  6096  1530  0086               	movwf	6
  6097  1531  3001               	movlw	1	; select bank3/4
  6098  1532  0087               	movwf	7
  6099  1533  3F40               	moviw [0]fsr1
  6100  1534  0021               	movlb	1	; select bank1
  6101  1535  00A7               	movwf	USBStdGetStatusHandler@p^(0+128)
  6102  1536  3F41               	moviw [1]fsr1
  6103  1537  2D44               	goto	L2
  6104  1538                     l7672:	
  6105                           ;usb_device.c: 2166: }
  6106                           
  6107                           
  6108                           ;usb_device.c: 2167: else
  6109                           ;usb_device.c: 2168: {
  6110                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  6111  1538  0020               	movlb	0	; select bank0
  6112  1539  0854               	movf	84,w	;volatile
  6113  153A  390F               	andlw	15
  6114  153B  0709               	addwf	9,w
  6115  153C  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  6116  153D  0086               	movwf	6
  6117  153E  3001               	movlw	1	; select bank3/4
  6118  153F  0087               	movwf	7
  6119  1540  3F40               	moviw [0]fsr1
  6120  1541  0021               	movlb	1	; select bank1
  6121  1542  00A7               	movwf	USBStdGetStatusHandler@p^(0+128)
  6122  1543  3F41               	moviw [1]fsr1
  6123  1544                     L2:	
  6124  1544  00A8               	movwf	(USBStdGetStatusHandler@p+1)^(0+128)
  6125                           
  6126                           ;usb_device.c: 2170: }
  6127                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  6128  1545  0827               	movf	USBStdGetStatusHandler@p^(0+128),w
  6129  1546  0086               	movwf	6
  6130  1547  0828               	movf	(USBStdGetStatusHandler@p+1)^(0+128),w
  6131  1548  0087               	movwf	7
  6132  1549  1F81               	btfss	1,7
  6133  154A  2D63               	goto	l533
  6134  154B  0827               	movf	USBStdGetStatusHandler@p^(0+128),w
  6135  154C  0086               	movwf	6
  6136  154D  0828               	movf	(USBStdGetStatusHandler@p+1)^(0+128),w
  6137  154E  0087               	movwf	7
  6138  154F  1D01               	btfss	1,2
  6139  1550  2D63               	goto	l533
  6140                           
  6141                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
  6142  1551  3001               	movlw	1
  6143  1552  00A6               	movwf	??_USBStdGetStatusHandler^(0+128)
  6144  1553  0826               	movf	??_USBStdGetStatusHandler^(0+128),w
  6145  1554  0020               	movlb	0	; select bank0
  6146  1555  00D8               	movwf	88	;volatile
  6147                           
  6148                           ;usb_device.c: 2175: }
  6149                           ;usb_device.c: 2176: }
  6150                           
  6151                           ;usb_device.c: 2174: break;
  6152  1556  2D63               	goto	l533
  6153  1557                     l7682:	
  6154  1557  0850               	movf	80,w	;volatile
  6155  1558  391F               	andlw	31
  6156                           
  6157                           ; Switch size 1, requested type "space"
  6158                           ; Number of cases is 3, Range of values is 0 to 2
  6159                           ; switch strategies available:
  6160                           ; Name         Instructions Cycles
  6161                           ; simple_byte           10     6 (average)
  6162                           ; direct_byte           12     6 (fixed)
  6163                           ; jumptable            260     6 (fixed)
  6164                           ;	Chosen strategy is simple_byte
  6165  1559  3A00               	xorlw	0	; case 0
  6166  155A  1903               	skipnz
  6167  155B  2D1B               	goto	l530
  6168  155C  3A01               	xorlw	1	; case 1
  6169  155D  1903               	skipnz
  6170  155E  2D24               	goto	l534
  6171  155F  3A03               	xorlw	3	; case 2
  6172  1560  1903               	skipnz
  6173  1561  2D27               	goto	l535
  6174  1562  2D63               	goto	l533
  6175  1563                     l533:	
  6176                           
  6177                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
  6178  1563  0021               	movlb	1	; select bank1
  6179  1564  1FC5               	btfss	(_inPipes^(0+128)+2),7	;volatile
  6180  1565  0008               	return
  6181                           
  6182                           ;usb_device.c: 2179: {
  6183                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  6184  1566  3058               	movlw	88
  6185  1567  00C3               	movwf	_inPipes^(0+128)	;volatile
  6186  1568  3000               	movlw	0
  6187  1569  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
  6188                           
  6189                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6190  156A  1445               	bsf	(_inPipes^(0+128)+2),0	;volatile
  6191                           
  6192                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
  6193  156B  3002               	movlw	2
  6194  156C  00A6               	movwf	??_USBStdGetStatusHandler^(0+128)
  6195  156D  0826               	movf	??_USBStdGetStatusHandler^(0+128),w
  6196  156E  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
  6197  156F  0008               	return
  6198  1570                     __end_of_USBStdGetStatusHandler:	
  6199                           
  6200                           	psect	text22
  6201  0B93                     __ptext22:	
  6202 ;; *************** function _USBStdGetDscHandler *****************
  6203 ;; Defined at:
  6204 ;;		line 2043 in file "mcc_generated_files/usb/usb_device.c"
  6205 ;; Parameters:    Size  Location     Type
  6206 ;;		None
  6207 ;; Auto vars:     Size  Location     Type
  6208 ;;		None
  6209 ;; Return value:  Size  Location     Type
  6210 ;;                  1    wreg      void 
  6211 ;; Registers used:
  6212 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  6213 ;; Tracked objects:
  6214 ;;		On entry : 0/0
  6215 ;;		On exit  : 0/0
  6216 ;;		Unchanged: 0/0
  6217 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6220 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6221 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6222 ;;Total ram usage:        3 bytes
  6223 ;; Hardware stack levels used:    1
  6224 ;; Hardware stack levels required when called:   10
  6225 ;; This function calls:
  6226 ;;		Nothing
  6227 ;; This function is called by:
  6228 ;;		_USBCheckStdRequest
  6229 ;; This function uses a non-reentrant model
  6230 ;;
  6231                           
  6232                           
  6233                           ;psect for function _USBStdGetDscHandler
  6234  0B93                     _USBStdGetDscHandler:	
  6235                           
  6236                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
  6237                           
  6238                           ;incstack = 0
  6239                           ; Regs used in _USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
  6240  0B93  3080               	movlw	128
  6241  0B94  0020               	movlb	0	; select bank0
  6242  0B95  0650               	xorwf	80,w	;volatile
  6243  0B96  1D03               	btfss	3,2
  6244  0B97  0008               	return
  6245                           
  6246                           ;usb_device.c: 2046: {
  6247                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  6248  0B98  30C0               	movlw	192
  6249  0B99  0021               	movlb	1	; select bank1
  6250  0B9A  00A6               	movwf	??_USBStdGetDscHandler^(0+128)
  6251  0B9B  0826               	movf	??_USBStdGetDscHandler^(0+128),w
  6252  0B9C  00C5               	movwf	(_inPipes^(0+128)+2)	;volatile
  6253                           
  6254                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
  6255  0B9D  2C05               	goto	l7660
  6256  0B9E                     l7634:	
  6257                           ;usb_device.c: 2050: {
  6258                           ;usb_device.c: 2051: case 0x01:
  6259                           
  6260                           
  6261                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  6262  0B9E  30C5               	movlw	low (_device_dsc| (0+32768))
  6263  0B9F  0021               	movlb	1	; select bank1
  6264  0BA0  00C3               	movwf	_inPipes^(0+128)	;volatile
  6265  0BA1  3098               	movlw	high (_device_dsc| (0+32768))
  6266  0BA2  00C4               	movwf	(_inPipes^(0+128)+1)	;volatile
  6267                           
  6268                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
  6269  0BA3  3000               	movlw	0
  6270  0BA4  00C7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  6271  0BA5  3012               	movlw	18
  6272  0BA6  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
  6273                           
  6274                           ;usb_device.c: 2058: break;
  6275  0BA7  0008               	return
  6276  0BA8                     l7638:	
  6277                           ;usb_device.c: 2059: case 0x02:
  6278                           
  6279                           
  6280                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
  6281  0BA8  0020               	movlb	0	; select bank0
  6282  0BA9  0852               	movf	82,w	;volatile
  6283  0BAA  1D03               	btfss	3,2
  6284  0BAB  2BDB               	goto	l7646
  6285                           
  6286                           ;usb_device.c: 2064: {
  6287                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  6288  0BAC  0852               	movf	82,w	;volatile
  6289  0BAD  0021               	movlb	1	; select bank1
  6290  0BAE  00A6               	movwf	??_USBStdGetDscHandler^(0+128)
  6291  0BAF  01A7               	clrf	(??_USBStdGetDscHandler^(0+128)+1)
  6292  0BB0  35A6               	lslf	??_USBStdGetDscHandler^(0+128),f
  6293  0BB1  0DA7               	rlf	(??_USBStdGetDscHandler^(0+128)+1),f
  6294  0BB2  30E8               	movlw	low (_USB_CD_Ptr| (0+32768))
  6295  0BB3  0726               	addwf	??_USBStdGetDscHandler^(0+128),w
  6296  0BB4  0084               	movwf	4
  6297  0BB5  3098               	movlw	high (_USB_CD_Ptr| (0+32768))
  6298  0BB6  3D27               	addwfc	(??_USBStdGetDscHandler+1)^(0+128),w
  6299  0BB7  0085               	movwf	5
  6300  0BB8  3F00               	moviw [0]fsr0
  6301  0BB9  00C3               	movwf	_inPipes^(0+128)	;volatile
  6302  0BBA  3F01               	moviw [1]fsr0
  6303  0BBB  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
  6304                           
  6305                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  6306  0BBC  0844               	movf	(_inPipes+1)^(0+128),w	;volatile
  6307  0BBD  00A7               	movwf	(??_USBStdGetDscHandler^(0+128)+1)
  6308  0BBE  0843               	movf	_inPipes^(0+128),w	;volatile
  6309  0BBF  00A6               	movwf	??_USBStdGetDscHandler^(0+128)
  6310  0BC0  3002               	movlw	2
  6311  0BC1  0726               	addwf	??_USBStdGetDscHandler^(0+128),w
  6312  0BC2  0084               	movwf	4
  6313  0BC3  0827               	movf	(??_USBStdGetDscHandler^(0+128)+1),w
  6314  0BC4  1803               	skipnc
  6315  0BC5  0A27               	incf	(??_USBStdGetDscHandler^(0+128)+1),w
  6316  0BC6  0085               	movwf	5
  6317  0BC7  0800               	movf	0,w	;code access
  6318  0BC8  00A8               	movwf	(??_USBStdGetDscHandler+2)^(0+128)
  6319  0BC9  0828               	movf	(??_USBStdGetDscHandler+2)^(0+128),w
  6320  0BCA  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
  6321                           
  6322                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  6323  0BCB  0844               	movf	(_inPipes+1)^(0+128),w	;volatile
  6324  0BCC  00A7               	movwf	(??_USBStdGetDscHandler^(0+128)+1)
  6325  0BCD  0843               	movf	_inPipes^(0+128),w	;volatile
  6326  0BCE  00A6               	movwf	??_USBStdGetDscHandler^(0+128)
  6327  0BCF  3003               	movlw	3
  6328  0BD0  0726               	addwf	??_USBStdGetDscHandler^(0+128),w
  6329  0BD1  0084               	movwf	4
  6330  0BD2  0827               	movf	(??_USBStdGetDscHandler^(0+128)+1),w
  6331  0BD3  1803               	skipnc
  6332  0BD4  0A27               	incf	(??_USBStdGetDscHandler^(0+128)+1),w
  6333  0BD5  0085               	movwf	5
  6334  0BD6  0800               	movf	0,w	;code access
  6335  0BD7  00A8               	movwf	(??_USBStdGetDscHandler+2)^(0+128)
  6336  0BD8  0828               	movf	(??_USBStdGetDscHandler+2)^(0+128),w
  6337  0BD9  00C7               	movwf	(_inPipes^(0+128)+4)	;volatile
  6338                           
  6339                           ;usb_device.c: 2076: }
  6340  0BDA  0008               	return
  6341  0BDB                     l7646:	
  6342                           
  6343                           ;usb_device.c: 2077: else
  6344                           ;usb_device.c: 2078: {
  6345                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
  6346  0BDB  0021               	movlb	1	; select bank1
  6347  0BDC  01C5               	clrf	(_inPipes^(0+128)+2)	;volatile
  6348                           
  6349                           ;usb_device.c: 2080: }
  6350                           ;usb_device.c: 2081: break;
  6351  0BDD  0008               	return
  6352  0BDE                     l7648:	
  6353                           ;usb_device.c: 2082: case 0x03:
  6354                           
  6355                           
  6356                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
  6357  0BDE  3003               	movlw	3
  6358  0BDF  0020               	movlb	0	; select bank0
  6359  0BE0  0252               	subwf	82,w	;volatile
  6360  0BE1  1803               	skipnc
  6361  0BE2  2BFF               	goto	l7654
  6362                           
  6363                           ;usb_device.c: 2087: {
  6364                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  6365  0BE3  0852               	movf	82,w	;volatile
  6366  0BE4  0021               	movlb	1	; select bank1
  6367  0BE5  00A6               	movwf	??_USBStdGetDscHandler^(0+128)
  6368  0BE6  01A7               	clrf	(??_USBStdGetDscHandler^(0+128)+1)
  6369  0BE7  35A6               	lslf	??_USBStdGetDscHandler^(0+128),f
  6370  0BE8  0DA7               	rlf	(??_USBStdGetDscHandler^(0+128)+1),f
  6371  0BE9  30DF               	movlw	low (_USB_SD_Ptr| (0+32768))
  6372  0BEA  0726               	addwf	??_USBStdGetDscHandler^(0+128),w
  6373  0BEB  0084               	movwf	4
  6374  0BEC  3098               	movlw	high (_USB_SD_Ptr| (0+32768))
  6375  0BED  3D27               	addwfc	(??_USBStdGetDscHandler+1)^(0+128),w
  6376  0BEE  0085               	movwf	5
  6377  0BEF  3F00               	moviw [0]fsr0
  6378  0BF0  00C3               	movwf	_inPipes^(0+128)	;volatile
  6379  0BF1  3F01               	moviw [1]fsr0
  6380  0BF2  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
  6381                           
  6382                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  6383  0BF3  0843               	movf	_inPipes^(0+128),w	;volatile
  6384  0BF4  0084               	movwf	4
  6385  0BF5  0844               	movf	(_inPipes+1)^(0+128),w	;volatile
  6386  0BF6  0085               	movwf	5
  6387  0BF7  0800               	movf	0,w	;code access
  6388  0BF8  00A6               	movwf	??_USBStdGetDscHandler^(0+128)
  6389  0BF9  01A7               	clrf	(??_USBStdGetDscHandler^(0+128)+1)
  6390  0BFA  0826               	movf	??_USBStdGetDscHandler^(0+128),w
  6391  0BFB  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
  6392  0BFC  0827               	movf	(??_USBStdGetDscHandler+1)^(0+128),w
  6393  0BFD  00C7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  6394                           
  6395                           ;usb_device.c: 2092: }
  6396  0BFE  0008               	return
  6397  0BFF                     l7654:	
  6398                           
  6399                           ;usb_device.c: 2102: else
  6400                           ;usb_device.c: 2103: {
  6401                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
  6402  0BFF  0021               	movlb	1	; select bank1
  6403  0C00  01C5               	clrf	(_inPipes^(0+128)+2)	;volatile
  6404                           
  6405                           ;usb_device.c: 2105: }
  6406                           ;usb_device.c: 2106: break;
  6407  0C01  0008               	return
  6408  0C02                     l7656:	
  6409                           ;usb_device.c: 2107: default:
  6410                           
  6411                           
  6412                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
  6413  0C02  0021               	movlb	1	; select bank1
  6414  0C03  01C5               	clrf	(_inPipes^(0+128)+2)	;volatile
  6415                           
  6416                           ;usb_device.c: 2110: }
  6417                           
  6418                           ;usb_device.c: 2109: break;
  6419  0C04  0008               	return
  6420  0C05                     l7660:	
  6421  0C05  0020               	movlb	0	; select bank0
  6422  0C06  0853               	movf	83,w	;volatile
  6423                           
  6424                           ; Switch size 1, requested type "space"
  6425                           ; Number of cases is 3, Range of values is 1 to 3
  6426                           ; switch strategies available:
  6427                           ; Name         Instructions Cycles
  6428                           ; simple_byte           10     6 (average)
  6429                           ; direct_byte           15     9 (fixed)
  6430                           ; jumptable            263     9 (fixed)
  6431                           ;	Chosen strategy is simple_byte
  6432  0C07  3A01               	xorlw	1	; case 1
  6433  0C08  1903               	skipnz
  6434  0C09  2B9E               	goto	l7634
  6435  0C0A  3A03               	xorlw	3	; case 2
  6436  0C0B  1903               	skipnz
  6437  0C0C  2BA8               	goto	l7638
  6438  0C0D  3A01               	xorlw	1	; case 3
  6439  0C0E  1903               	skipnz
  6440  0C0F  2BDE               	goto	l7648
  6441  0C10  2C02               	goto	l7656
  6442  0C11  0008               	return
  6443  0C12                     __end_of_USBStdGetDscHandler:	
  6444                           
  6445                           	psect	text23
  6446  007B                     __ptext23:	
  6447 ;; *************** function _USBStdFeatureReqHandler *****************
  6448 ;; Defined at:
  6449 ;;		line 2754 in file "mcc_generated_files/usb/usb_device.c"
  6450 ;; Parameters:    Size  Location     Type
  6451 ;;		None
  6452 ;; Auto vars:     Size  Location     Type
  6453 ;;  p               2   31[BANK1 ] PTR struct __BDT
  6454 ;;		 -> RAM(4096), BDT(48), NULL(0), 
  6455 ;;  pUEP            2   28[BANK1 ] PTR unsigned char 
  6456 ;;		 -> UEP0(1), 
  6457 ;;  current_ep_d    1   30[BANK1 ] struct .
  6458 ;; Return value:  Size  Location     Type
  6459 ;;                  1    wreg      void 
  6460 ;; Registers used:
  6461 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6462 ;; Tracked objects:
  6463 ;;		On entry : 0/0
  6464 ;;		On exit  : 0/0
  6465 ;;		Unchanged: 0/0
  6466 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6468 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  6469 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6470 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  6471 ;;Total ram usage:        7 bytes
  6472 ;; Hardware stack levels used:    1
  6473 ;; Hardware stack levels required when called:   14
  6474 ;; This function calls:
  6475 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6476 ;; This function is called by:
  6477 ;;		_USBCheckStdRequest
  6478 ;; This function uses a non-reentrant model
  6479 ;;
  6480                           
  6481                           
  6482                           ;psect for function _USBStdFeatureReqHandler
  6483  007B                     _USBStdFeatureReqHandler:	
  6484                           
  6485                           ;usb_device.c: 2756: BDT_ENTRY *p;
  6486                           ;usb_device.c: 2757: EP_STATUS current_ep_data;
  6487                           ;usb_device.c: 2761: unsigned char* pUEP;
  6488                           ;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&
  6489                           ;usb_device.c: 2800: (SetupPkt.Recipient == (0x00)))
  6490                           
  6491                           ;incstack = 0
  6492 ;; hardware stack exceeded
  6493                           ; Regs used in _USBStdFeatureReqHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6494  007B  0020               	movlb	0	; select bank0
  6495  007C  0352               	decf	82,w	;volatile
  6496  007D  1D03               	btfss	3,2
  6497  007E  2894               	goto	l7702
  6498  007F  0850               	movf	80,w	;volatile
  6499  0080  391F               	andlw	31
  6500  0081  3A00               	xorlw	0
  6501  0082  1D03               	skipz
  6502  0083  2894               	goto	l7702
  6503                           
  6504                           ;usb_device.c: 2801: {
  6505                           ;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
  6506  0084  0021               	movlb	1	; select bank1
  6507  0085  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  6508                           
  6509                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
  6510  0086  3003               	movlw	3
  6511  0087  0020               	movlb	0	; select bank0
  6512  0088  0651               	xorwf	81,w	;volatile
  6513  0089  1D03               	btfss	3,2
  6514  008A  2892               	goto	l7700
  6515                           
  6516                           ;usb_device.c: 2804: RemoteWakeup = 1;
  6517  008B  3001               	movlw	1
  6518  008C  0021               	movlb	1	; select bank1
  6519  008D  00BA               	movwf	??_USBStdFeatureReqHandler^(0+128)
  6520  008E  083A               	movf	??_USBStdFeatureReqHandler^(0+128),w
  6521  008F  0023               	movlb	3	; select bank3
  6522  0090  00E0               	movwf	_RemoteWakeup^(0+384)	;volatile
  6523  0091  2894               	goto	l7702
  6524  0092                     l7700:	
  6525                           
  6526                           ;usb_device.c: 2805: else
  6527                           ;usb_device.c: 2806: RemoteWakeup = 0;
  6528  0092  0023               	movlb	3	; select bank3
  6529  0093  01E0               	clrf	_RemoteWakeup^(0+384)	;volatile
  6530  0094                     l7702:	
  6531                           
  6532                           ;usb_device.c: 2807: }
  6533                           ;usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&
  6534                           ;usb_device.c: 2811: (SetupPkt.Recipient == (0x02))&&
  6535                           ;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
  6536                           ;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
  6537  0094  0020               	movlb	0	; select bank0
  6538  0095  0852               	movf	82,w	;volatile
  6539  0096  1D03               	btfss	3,2
  6540  0097  0008               	return
  6541  0098  0850               	movf	80,w	;volatile
  6542  0099  391F               	andlw	31
  6543  009A  3A02               	xorlw	2
  6544  009B  1D03               	skipz
  6545  009C  0008               	return
  6546  009D  0854               	movf	84,w	;volatile
  6547  009E  390F               	andlw	15
  6548  009F  3A00               	xorlw	0
  6549  00A0  1903               	skipnz
  6550  00A1  0008               	return
  6551  00A2  0854               	movf	84,w	;volatile
  6552  00A3  390F               	andlw	15
  6553  00A4  0021               	movlb	1	; select bank1
  6554  00A5  00BA               	movwf	??_USBStdFeatureReqHandler^(0+128)
  6555  00A6  3003               	movlw	3
  6556  00A7  023A               	subwf	??_USBStdFeatureReqHandler^(0+128),w
  6557  00A8  1803               	skipnc
  6558  00A9  0008               	return
  6559  00AA  3020               	movlw	32
  6560  00AB  0023               	movlb	3	; select bank3
  6561  00AC  0665               	xorwf	_USBDeviceState^(0+384),w	;volatile
  6562  00AD  1D03               	btfss	3,2
  6563  00AE  0008               	return
  6564                           
  6565                           ;usb_device.c: 2814: {
  6566                           ;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
  6567  00AF  0021               	movlb	1	; select bank1
  6568  00B0  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  6569                           
  6570                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
  6571  00B1  0020               	movlb	0	; select bank0
  6572  00B2  1BD4               	btfsc	84,7	;volatile
  6573  00B3  28C5               	goto	l7716
  6574                           
  6575                           ;usb_device.c: 2821: {
  6576                           ;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  6577  00B4  0854               	movf	84,w	;volatile
  6578  00B5  390F               	andlw	15
  6579  00B6  0709               	addwf	9,w
  6580  00B7  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  6581  00B8  0086               	movwf	6
  6582  00B9  3001               	movlw	1	; select bank3/4
  6583  00BA  0087               	movwf	7
  6584  00BB  3F40               	moviw [0]fsr1
  6585  00BC  0021               	movlb	1	; select bank1
  6586  00BD  00BF               	movwf	USBStdFeatureReqHandler@p^(0+128)
  6587  00BE  3F41               	moviw [1]fsr1
  6588  00BF  00C0               	movwf	(USBStdFeatureReqHandler@p+1)^(0+128)
  6589                           
  6590                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  6591  00C0  0020               	movlb	0	; select bank0
  6592  00C1  0854               	movf	84,w	;volatile
  6593  00C2  390F               	andlw	15
  6594  00C3  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  6595  00C4  28D6               	goto	L3
  6596  00C5                     l7716:	
  6597                           ;usb_device.c: 2824: }
  6598                           
  6599                           
  6600                           ;usb_device.c: 2825: else
  6601                           ;usb_device.c: 2826: {
  6602                           ;usb_device.c: 2827: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  6603  00C5  0020               	movlb	0	; select bank0
  6604  00C6  0854               	movf	84,w	;volatile
  6605  00C7  390F               	andlw	15
  6606  00C8  0709               	addwf	9,w
  6607  00C9  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  6608  00CA  0086               	movwf	6
  6609  00CB  3001               	movlw	1	; select bank3/4
  6610  00CC  0087               	movwf	7
  6611  00CD  3F40               	moviw [0]fsr1
  6612  00CE  0021               	movlb	1	; select bank1
  6613  00CF  00BF               	movwf	USBStdFeatureReqHandler@p^(0+128)
  6614  00D0  3F41               	moviw [1]fsr1
  6615  00D1  00C0               	movwf	(USBStdFeatureReqHandler@p+1)^(0+128)
  6616                           
  6617                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  6618  00D2  0020               	movlb	0	; select bank0
  6619  00D3  0854               	movf	84,w	;volatile
  6620  00D4  390F               	andlw	15
  6621  00D5  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  6622  00D6                     L3:	
  6623  00D6  0086               	movwf	6
  6624  00D7  3001               	movlw	1	; select bank3/4
  6625  00D8  0087               	movwf	7
  6626  00D9  0801               	movf	1,w
  6627  00DA  0021               	movlb	1	; select bank1
  6628  00DB  00BA               	movwf	??_USBStdFeatureReqHandler^(0+128)
  6629  00DC  083A               	movf	??_USBStdFeatureReqHandler^(0+128),w
  6630  00DD  00BE               	movwf	USBStdFeatureReqHandler@current_ep_data^(0+128)
  6631                           
  6632                           ;usb_device.c: 2829: }
  6633                           ;usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
  6634  00DE  183E               	btfsc	USBStdFeatureReqHandler@current_ep_data^(0+128),0
  6635  00DF  28EA               	goto	l7722
  6636                           
  6637                           ;usb_device.c: 2836: {
  6638                           ;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
  6639  00E0  30FB               	movlw	251
  6640  00E1  00BA               	movwf	??_USBStdFeatureReqHandler^(0+128)
  6641  00E2  30FF               	movlw	255
  6642  00E3  00BB               	movwf	(??_USBStdFeatureReqHandler^(0+128)+1)
  6643  00E4  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6644  00E5  053A               	andwf	??_USBStdFeatureReqHandler^(0+128),w
  6645  00E6  00BF               	movwf	USBStdFeatureReqHandler@p^(0+128)
  6646  00E7  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6647  00E8  053B               	andwf	(??_USBStdFeatureReqHandler+1)^(0+128),w
  6648  00E9  28EF               	goto	L4
  6649  00EA                     l7722:	
  6650                           ;usb_device.c: 2838: }
  6651                           
  6652                           
  6653                           ;usb_device.c: 2839: else
  6654                           ;usb_device.c: 2840: {
  6655                           ;usb_device.c: 2841: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
  6656  00EA  3004               	movlw	4
  6657  00EB  043F               	iorwf	USBStdFeatureReqHandler@p^(0+128),w
  6658  00EC  00BF               	movwf	USBStdFeatureReqHandler@p^(0+128)
  6659  00ED  3000               	movlw	0
  6660  00EE  0440               	iorwf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6661  00EF                     L4:	
  6662  00EF  00C0               	movwf	(USBStdFeatureReqHandler@p+1)^(0+128)
  6663                           
  6664                           ;usb_device.c: 2842: }
  6665                           ;usb_device.c: 2847: if(SetupPkt.EPDir == 0)
  6666  00F0  0020               	movlb	0	; select bank0
  6667  00F1  1BD4               	btfsc	84,7	;volatile
  6668  00F2  2900               	goto	l7728
  6669                           
  6670                           ;usb_device.c: 2848: {
  6671                           ;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  6672  00F3  0854               	movf	84,w	;volatile
  6673  00F4  390F               	andlw	15
  6674  00F5  0709               	addwf	9,w
  6675  00F6  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  6676  00F7  0086               	movwf	6
  6677  00F8  3001               	movlw	1	; select bank3/4
  6678  00F9  0087               	movwf	7
  6679  00FA  0021               	movlb	1	; select bank1
  6680  00FB  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6681  00FC  3FC0               	movwi [0]fsr1
  6682  00FD  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6683  00FE  3FC1               	movwi [1]fsr1
  6684                           
  6685                           ;usb_device.c: 2850: }
  6686  00FF  290D               	goto	l7730
  6687  0100                     l7728:	
  6688                           
  6689                           ;usb_device.c: 2851: else
  6690                           ;usb_device.c: 2852: {
  6691                           ;usb_device.c: 2853: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  6692  0100  0020               	movlb	0	; select bank0
  6693  0101  0854               	movf	84,w	;volatile
  6694  0102  390F               	andlw	15
  6695  0103  0709               	addwf	9,w
  6696  0104  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  6697  0105  0086               	movwf	6
  6698  0106  3001               	movlw	1	; select bank3/4
  6699  0107  0087               	movwf	7
  6700  0108  0021               	movlb	1	; select bank1
  6701  0109  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6702  010A  3FC0               	movwi [0]fsr1
  6703  010B  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6704  010C  3FC1               	movwi [1]fsr1
  6705  010D                     l7730:	
  6706                           
  6707                           ;usb_device.c: 2854: }
  6708                           ;usb_device.c: 2857: if(SetupPkt.bRequest == 3)
  6709  010D  3003               	movlw	3
  6710  010E  0020               	movlb	0	; select bank0
  6711  010F  0651               	xorwf	81,w	;volatile
  6712  0110  1D03               	btfss	3,2
  6713  0111  2933               	goto	l7744
  6714                           
  6715                           ;usb_device.c: 2858: {
  6716                           ;usb_device.c: 2859: if(p->STAT.UOWN == 1)
  6717  0112  0021               	movlb	1	; select bank1
  6718  0113  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6719  0114  0086               	movwf	6
  6720  0115  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6721  0116  0087               	movwf	7
  6722  0117  1F81               	btfss	1,7
  6723  0118  2927               	goto	l7740
  6724                           
  6725                           ;usb_device.c: 2860: {
  6726                           ;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
  6727  0119  0020               	movlb	0	; select bank0
  6728  011A  1BD4               	btfsc	84,7	;volatile
  6729  011B  2920               	goto	l7738
  6730                           
  6731                           ;usb_device.c: 2864: {
  6732                           ;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  6733  011C  0854               	movf	84,w	;volatile
  6734  011D  390F               	andlw	15
  6735  011E  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  6736  011F  2923               	goto	L5
  6737  0120                     l7738:	
  6738                           ;usb_device.c: 2866: }
  6739                           
  6740                           
  6741                           ;usb_device.c: 2867: else
  6742                           ;usb_device.c: 2868: {
  6743                           ;usb_device.c: 2869: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  6744  0120  0854               	movf	84,w	;volatile
  6745  0121  390F               	andlw	15
  6746  0122  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  6747  0123                     L5:	
  6748  0123  0086               	movwf	6
  6749  0124  3001               	movlw	1	; select bank3/4
  6750  0125  0087               	movwf	7
  6751  0126  1481               	bsf	1,1
  6752  0127                     l7740:	
  6753                           
  6754                           ;usb_device.c: 2870: }
  6755                           ;usb_device.c: 2871: }
  6756                           ;usb_device.c: 2874: p->STAT.Val |= 0x04;
  6757  0127  0021               	movlb	1	; select bank1
  6758  0128  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6759  0129  0086               	movwf	6
  6760  012A  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6761  012B  0087               	movwf	7
  6762  012C  1501               	bsf	1,2
  6763                           
  6764                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
  6765  012D  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6766  012E  0086               	movwf	6
  6767  012F  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6768  0130  0087               	movwf	7
  6769  0131  1781               	bsf	1,7
  6770                           
  6771                           ;usb_device.c: 2876: }
  6772  0132  0008               	return
  6773  0133                     l7744:	
  6774                           
  6775                           ;usb_device.c: 2877: else
  6776                           ;usb_device.c: 2878: {
  6777                           ;usb_device.c: 2882: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  6778  0133  3004               	movlw	4
  6779  0134  0021               	movlb	1	; select bank1
  6780  0135  063F               	xorwf	USBStdFeatureReqHandler@p^(0+128),w
  6781  0136  00BF               	movwf	USBStdFeatureReqHandler@p^(0+128)
  6782  0137  3000               	movlw	0
  6783  0138  0640               	xorwf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6784  0139  00C0               	movwf	(USBStdFeatureReqHandler@p+1)^(0+128)
  6785                           
  6786                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
  6787  013A  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6788  013B  0086               	movwf	6
  6789  013C  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6790  013D  0087               	movwf	7
  6791  013E  1F81               	btfss	1,7
  6792  013F  295D               	goto	l7754
  6793                           
  6794                           ;usb_device.c: 2885: {
  6795                           ;usb_device.c: 2888: p->STAT.Val &= (~0x80);
  6796  0140  307F               	movlw	127
  6797  0141  00BA               	movwf	??_USBStdFeatureReqHandler^(0+128)
  6798  0142  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6799  0143  0086               	movwf	6
  6800  0144  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6801  0145  0087               	movwf	7
  6802  0146  083A               	movf	??_USBStdFeatureReqHandler^(0+128),w
  6803  0147  0581               	andwf	1,f
  6804                           
  6805                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
  6806  0148  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6807  0149  0086               	movwf	6
  6808  014A  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6809  014B  0087               	movwf	7
  6810  014C  1701               	bsf	1,6
  6811                           
  6812                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  6813  014D  3000               	movlw	0
  6814  014E  00B5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
  6815  014F  3005               	movlw	5
  6816  0150  00B4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  6817  0151  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6818  0152  00B7               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  6819  0153  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6820  0154  00B6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  6821  0155  3002               	movlw	2
  6822  0156  00B8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  6823  0157  3000               	movlw	0
  6824  0158  00B9               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)+1)
  6825  0159  3191  2108  3180   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6826                           
  6827                           ;usb_device.c: 2891: }
  6828  015C  2963               	goto	l7756
  6829  015D                     l7754:	
  6830                           
  6831                           ;usb_device.c: 2892: else
  6832                           ;usb_device.c: 2893: {
  6833                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
  6834  015D  0021               	movlb	1	; select bank1
  6835  015E  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6836  015F  0086               	movwf	6
  6837  0160  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6838  0161  0087               	movwf	7
  6839  0162  1701               	bsf	1,6
  6840  0163                     l7756:	
  6841                           
  6842                           ;usb_device.c: 2896: }
  6843                           ;usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  6844  0163  3004               	movlw	4
  6845  0164  0021               	movlb	1	; select bank1
  6846  0165  063F               	xorwf	USBStdFeatureReqHandler@p^(0+128),w
  6847  0166  00BF               	movwf	USBStdFeatureReqHandler@p^(0+128)
  6848  0167  3000               	movlw	0
  6849  0168  0640               	xorwf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6850  0169  00C0               	movwf	(USBStdFeatureReqHandler@p+1)^(0+128)
  6851                           
  6852                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  6853  016A  18BE               	btfsc	USBStdFeatureReqHandler@current_ep_data^(0+128),1
  6854  016B  2972               	goto	l626
  6855  016C  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6856  016D  0086               	movwf	6
  6857  016E  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6858  016F  0087               	movwf	7
  6859  0170  1F81               	btfss	1,7
  6860  0171  2999               	goto	l7768
  6861  0172                     l626:	
  6862                           
  6863                           ;usb_device.c: 2907: {
  6864                           ;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
  6865  0172  0020               	movlb	0	; select bank0
  6866  0173  1BD4               	btfsc	84,7	;volatile
  6867  0174  2979               	goto	l7764
  6868                           
  6869                           ;usb_device.c: 2909: {
  6870                           ;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  6871  0175  0854               	movf	84,w	;volatile
  6872  0176  390F               	andlw	15
  6873  0177  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  6874  0178  297C               	goto	L6
  6875  0179                     l7764:	
  6876                           ;usb_device.c: 2911: }
  6877                           
  6878                           
  6879                           ;usb_device.c: 2912: else
  6880                           ;usb_device.c: 2913: {
  6881                           ;usb_device.c: 2914: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  6882  0179  0854               	movf	84,w	;volatile
  6883  017A  390F               	andlw	15
  6884  017B  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  6885  017C                     L6:	
  6886  017C  0086               	movwf	6
  6887  017D  3001               	movlw	1	; select bank3/4
  6888  017E  0087               	movwf	7
  6889  017F  1081               	bcf	1,1
  6890                           
  6891                           ;usb_device.c: 2915: }
  6892                           ;usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  6893  0180  303B               	movlw	59
  6894  0181  0021               	movlb	1	; select bank1
  6895  0182  00BA               	movwf	??_USBStdFeatureReqHandler^(0+128)
  6896  0183  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6897  0184  0086               	movwf	6
  6898  0185  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6899  0186  0087               	movwf	7
  6900  0187  083A               	movf	??_USBStdFeatureReqHandler^(0+128),w
  6901  0188  0581               	andwf	1,f
  6902                           
  6903                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  6904  0189  3000               	movlw	0
  6905  018A  00B5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
  6906  018B  3005               	movlw	5
  6907  018C  00B4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  6908  018D  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6909  018E  00B7               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  6910  018F  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6911  0190  00B6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  6912  0191  3002               	movlw	2
  6913  0192  00B8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  6914  0193  3000               	movlw	0
  6915  0194  00B9               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)+1)
  6916  0195  3191  2108  3180   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6917                           
  6918                           ;usb_device.c: 2921: }
  6919  0198  29A2               	goto	l7770
  6920  0199                     l7768:	
  6921                           
  6922                           ;usb_device.c: 2922: else
  6923                           ;usb_device.c: 2923: {
  6924                           ;usb_device.c: 2925: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  6925  0199  303B               	movlw	59
  6926  019A  0021               	movlb	1	; select bank1
  6927  019B  00BA               	movwf	??_USBStdFeatureReqHandler^(0+128)
  6928  019C  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6929  019D  0086               	movwf	6
  6930  019E  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6931  019F  0087               	movwf	7
  6932  01A0  083A               	movf	??_USBStdFeatureReqHandler^(0+128),w
  6933  01A1  0581               	andwf	1,f
  6934  01A2                     l7770:	
  6935                           
  6936                           ;usb_device.c: 2926: }
  6937                           ;usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  6938  01A2  0020               	movlb	0	; select bank0
  6939  01A3  0854               	movf	84,w	;volatile
  6940  01A4  390F               	andlw	15
  6941  01A5  3E98               	addlw	152
  6942  01A6  0021               	movlb	1	; select bank1
  6943  01A7  00BA               	movwf	??_USBStdFeatureReqHandler^(0+128)
  6944  01A8  01BB               	clrf	(??_USBStdFeatureReqHandler^(0+128)+1)
  6945  01A9  300E               	movlw	14
  6946  01AA  3DBB               	addwfc	(??_USBStdFeatureReqHandler^(0+128)+1),f
  6947  01AB  083A               	movf	??_USBStdFeatureReqHandler^(0+128),w
  6948  01AC  00BC               	movwf	USBStdFeatureReqHandler@pUEP^(0+128)
  6949  01AD  083B               	movf	(??_USBStdFeatureReqHandler+1)^(0+128),w
  6950  01AE  00BD               	movwf	(USBStdFeatureReqHandler@pUEP+1)^(0+128)
  6951                           
  6952                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
  6953  01AF  30FE               	movlw	254
  6954  01B0  00BA               	movwf	??_USBStdFeatureReqHandler^(0+128)
  6955  01B1  083C               	movf	USBStdFeatureReqHandler@pUEP^(0+128),w
  6956  01B2  0086               	movwf	6
  6957  01B3  083D               	movf	(USBStdFeatureReqHandler@pUEP+1)^(0+128),w
  6958  01B4  0087               	movwf	7
  6959  01B5  083A               	movf	??_USBStdFeatureReqHandler^(0+128),w
  6960  01B6  0581               	andwf	1,f
  6961  01B7  0008               	return
  6962  01B8                     __end_of_USBStdFeatureReqHandler:	
  6963                           
  6964                           	psect	text24
  6965  1108                     __ptext24:	
  6966 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  6967 ;; Defined at:
  6968 ;;		line 49 in file "mcc_generated_files/usb/usb_device_events.c"
  6969 ;; Parameters:    Size  Location     Type
  6970 ;;  event           2   20[BANK1 ] enum E40
  6971 ;;  pdata           2   22[BANK1 ] PTR void 
  6972 ;;		 -> RAM(4096), USTATcopy(1), USBActiveConfiguration(1), BDT(48), 
  6973 ;;		 -> NULL(0), 
  6974 ;;  size            2   24[BANK1 ] unsigned int 
  6975 ;; Auto vars:     Size  Location     Type
  6976 ;;		None
  6977 ;; Return value:  Size  Location     Type
  6978 ;;                  1    wreg      unsigned char 
  6979 ;; Registers used:
  6980 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6981 ;; Tracked objects:
  6982 ;;		On entry : 0/0
  6983 ;;		On exit  : 0/0
  6984 ;;		Unchanged: 0/0
  6985 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6986 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  6987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6989 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  6990 ;;Total ram usage:        6 bytes
  6991 ;; Hardware stack levels used:    1
  6992 ;; Hardware stack levels required when called:   13
  6993 ;; This function calls:
  6994 ;;		_CDCInitEP
  6995 ;;		_USBCheckCDCRequest
  6996 ;; This function is called by:
  6997 ;;		_USBDeviceTasks
  6998 ;;		_USBStdSetCfgHandler
  6999 ;;		_USBSuspend
  7000 ;;		_USBWakeFromSuspend
  7001 ;;		_USBCtrlTrfSetupHandler
  7002 ;;		_USBCheckStdRequest
  7003 ;;		_USBStdFeatureReqHandler
  7004 ;; This function uses a non-reentrant model
  7005 ;;
  7006                           
  7007                           
  7008                           ;psect for function _USER_USB_CALLBACK_EVENT_HANDLER
  7009  1108                     _USER_USB_CALLBACK_EVENT_HANDLER:	
  7010                           
  7011                           ;usb_device_events.c: 51: switch( (int) event )
  7012                           
  7013                           ;incstack = 0
  7014                           ; Regs used in _USER_USB_CALLBACK_EVENT_HANDLER: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  7015  1108  290F               	goto	l7460
  7016  1109                     l7454:	
  7017                           ;usb_device_events.c: 75: case EVENT_CONFIGURED:
  7018                           
  7019                           ;usb_device_events.c: 73: break;
  7020                           
  7021                           ;usb_device_events.c: 68: case EVENT_RESUME:
  7022                           
  7023                           ;usb_device_events.c: 66: break;
  7024                           
  7025                           ;usb_device_events.c: 59: case EVENT_SUSPEND:
  7026                           
  7027                           ;usb_device_events.c: 57: break;
  7028                           
  7029                           ;usb_device_events.c: 56: case EVENT_SOF:
  7030                           
  7031                           ;usb_device_events.c: 54: break;
  7032                           
  7033                           ;usb_device_events.c: 52: {
  7034                           ;usb_device_events.c: 53: case EVENT_TRANSFER:
  7035                           
  7036                           
  7037                           ;usb_device_events.c: 76: CDCInitEP();
  7038  1109  3192  220A         	fcall	_CDCInitEP
  7039                           
  7040                           ;usb_device_events.c: 80: break;
  7041                           
  7042                           ;usb_device_events.c: 79: case EVENT_SET_DESCRIPTOR:
  7043                           
  7044                           ;usb_device_events.c: 77: break;
  7045  110B  0008               	return
  7046  110C                     l7456:	
  7047                           ;usb_device_events.c: 82: case EVENT_EP0_REQUEST:
  7048                           
  7049                           
  7050                           ;usb_device_events.c: 85: USBCheckCDCRequest();
  7051  110C  3188  2070         	fcall	_USBCheckCDCRequest
  7052                           
  7053                           ;usb_device_events.c: 96: }
  7054                           
  7055                           ;usb_device_events.c: 95: break;
  7056                           
  7057                           ;usb_device_events.c: 94: default:
  7058                           
  7059                           ;usb_device_events.c: 92: break;
  7060                           
  7061                           ;usb_device_events.c: 91: case EVENT_TRANSFER_TERMINATED:
  7062                           
  7063                           ;usb_device_events.c: 89: break;
  7064                           
  7065                           ;usb_device_events.c: 88: case EVENT_BUS_ERROR:
  7066                           
  7067                           ;usb_device_events.c: 86: break;
  7068  110E  0008               	return
  7069  110F                     l7460:	
  7070                           
  7071                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  7072                           ; Switch size 1, requested type "space"
  7073                           ; Number of cases is 2, Range of values is 0 to 127
  7074                           ; switch strategies available:
  7075                           ; Name         Instructions Cycles
  7076                           ; simple_byte            7     4 (average)
  7077                           ; direct_byte          262     6 (fixed)
  7078                           ; jumptable            260     6 (fixed)
  7079                           ;	Chosen strategy is simple_byte
  7080  110F  0021               	movlb	1	; select bank1
  7081  1110  0835               	movf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128),w
  7082  1111  3A00               	xorlw	0	; case 0
  7083  1112  1903               	skipnz
  7084  1113  2918               	goto	l8518
  7085  1114  3A7F               	xorlw	127	; case 127
  7086  1115  1903               	skipnz
  7087  1116  2932               	goto	l8520
  7088  1117  2937               	goto	l242
  7089  1118                     l8518:	
  7090                           
  7091                           ; Switch size 1, requested type "space"
  7092                           ; Number of cases is 8, Range of values is 1 to 117
  7093                           ; switch strategies available:
  7094                           ; Name         Instructions Cycles
  7095                           ; simple_byte           25    13 (average)
  7096                           ; direct_byte          243     9 (fixed)
  7097                           ; jumptable            263     9 (fixed)
  7098                           ;	Chosen strategy is simple_byte
  7099  1118  0834               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128),w
  7100  1119  3A01               	xorlw	1	; case 1
  7101  111A  1903               	skipnz
  7102  111B  2909               	goto	l7454
  7103  111C  3A03               	xorlw	3	; case 2
  7104  111D  1903               	skipnz
  7105  111E  2937               	goto	l242
  7106  111F  3A01               	xorlw	1	; case 3
  7107  1120  1903               	skipnz
  7108  1121  290C               	goto	l7456
  7109  1122  3A06               	xorlw	6	; case 5
  7110  1123  1903               	skipnz
  7111  1124  2937               	goto	l242
  7112  1125  3A77               	xorlw	119	; case 114
  7113  1126  1903               	skipnz
  7114  1127  2937               	goto	l242
  7115  1128  3A01               	xorlw	1	; case 115
  7116  1129  1903               	skipnz
  7117  112A  2937               	goto	l242
  7118  112B  3A07               	xorlw	7	; case 116
  7119  112C  1903               	skipnz
  7120  112D  2937               	goto	l242
  7121  112E  3A01               	xorlw	1	; case 117
  7122  112F  1903               	skipnz
  7123  1130  2937               	goto	l242
  7124  1131  2937               	goto	l242
  7125  1132                     l8520:	
  7126                           
  7127                           ; Switch size 1, requested type "space"
  7128                           ; Number of cases is 1, Range of values is 255 to 255
  7129                           ; switch strategies available:
  7130                           ; Name         Instructions Cycles
  7131                           ; simple_byte            4     3 (average)
  7132                           ; direct_byte            7     5 (fixed)
  7133                           ; jumptable            263     9 (fixed)
  7134                           ;	Chosen strategy is simple_byte
  7135  1132  0834               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128),w
  7136  1133  3AFF               	xorlw	255	; case 255
  7137  1134  1903               	skipnz
  7138  1135  2937               	goto	l242
  7139  1136  2937               	goto	l242
  7140  1137                     l242:	
  7141                           ;usb_device_events.c: 97: return 1;
  7142                           ;	Return value of _USER_USB_CALLBACK_EVENT_HANDLER is never used
  7143                           
  7144  1137  0008               	return
  7145  1138                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:	
  7146                           
  7147                           	psect	text25
  7148  0870                     __ptext25:	
  7149 ;; *************** function _USBCheckCDCRequest *****************
  7150 ;; Defined at:
  7151 ;;		line 146 in file "mcc_generated_files/usb/usb_device_cdc.c"
  7152 ;; Parameters:    Size  Location     Type
  7153 ;;		None
  7154 ;; Auto vars:     Size  Location     Type
  7155 ;;		None
  7156 ;; Return value:  Size  Location     Type
  7157 ;;                  1    wreg      void 
  7158 ;; Registers used:
  7159 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7160 ;; Tracked objects:
  7161 ;;		On entry : 0/0
  7162 ;;		On exit  : 0/0
  7163 ;;		Unchanged: 0/0
  7164 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7167 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7168 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7169 ;;Total ram usage:        1 bytes
  7170 ;; Hardware stack levels used:    1
  7171 ;; Hardware stack levels required when called:   10
  7172 ;; This function calls:
  7173 ;;		Nothing
  7174 ;; This function is called by:
  7175 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7176 ;; This function uses a non-reentrant model
  7177 ;;
  7178                           
  7179                           
  7180                           ;psect for function _USBCheckCDCRequest
  7181  0870                     _USBCheckCDCRequest:	
  7182                           
  7183                           ;usb_device_cdc.c: 151: if(SetupPkt.Recipient != (0x01)) return;
  7184                           
  7185                           ;incstack = 0
  7186                           ; Regs used in _USBCheckCDCRequest: [wreg-fsr0h+status,2+status,0]
  7187  0870  0020               	movlb	0	; select bank0
  7188  0871  0850               	movf	80,w	;volatile
  7189  0872  391F               	andlw	31
  7190  0873  3A01               	xorlw	1
  7191  0874  1D03               	btfss	3,2
  7192  0875  0008               	return
  7193                           
  7194                           ;usb_device_cdc.c: 156: if(SetupPkt.RequestType != (0x20>>5)) return;
  7195  0876  0E50               	swapf	80,w	;volatile
  7196  0877  0C89               	rrf	9,f
  7197  0878  3903               	andlw	3
  7198  0879  3A01               	xorlw	1
  7199  087A  1D03               	btfss	3,2
  7200  087B  0008               	return
  7201                           
  7202                           ;usb_device_cdc.c: 162: if((SetupPkt.bIntfID != 0x0)&&
  7203                           ;usb_device_cdc.c: 163: (SetupPkt.bIntfID != 0x01)) return;
  7204  087C  0854               	movf	84,w	;volatile
  7205  087D  1903               	btfsc	3,2
  7206  087E  28C0               	goto	l7432
  7207  087F  0354               	decf	84,w	;volatile
  7208  0880  1D03               	btfss	3,2
  7209  0881  0008               	return
  7210  0882  28C0               	goto	l7432
  7211  0883                     l7402:	
  7212                           ;usb_device_cdc.c: 166: {
  7213                           ;usb_device_cdc.c: 168: case 0x00:
  7214                           
  7215                           ;usb_device_cdc.c: 165: switch(SetupPkt.bRequest)
  7216                           
  7217                           
  7218                           ;usb_device_cdc.c: 170: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  7219  0883  304F               	movlw	low _dummy_encapsulated_cmd_response
  7220  0884  0021               	movlb	1	; select bank1
  7221  0885  00C3               	movwf	_inPipes^(0+128)	;volatile
  7222  0886  3002               	movlw	high _dummy_encapsulated_cmd_response
  7223  0887  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
  7224                           
  7225                           ;usb_device_cdc.c: 171: inPipes[0].wCount.Val = 0x08;
  7226  0888  3000               	movlw	0
  7227  0889  00C7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  7228  088A  3008               	movlw	8
  7229  088B  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
  7230                           
  7231                           ;usb_device_cdc.c: 172: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  7232  088C  1445               	bsf	(_inPipes^(0+128)+2),0	;volatile
  7233                           
  7234                           ;usb_device_cdc.c: 173: inPipes[0].info.bits.busy = 1;
  7235  088D  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  7236                           
  7237                           ;usb_device_cdc.c: 174: break;
  7238  088E  0008               	return
  7239  088F                     l7410:	
  7240                           ;usb_device_cdc.c: 175: case 0x01:
  7241                           
  7242                           
  7243                           ;usb_device_cdc.c: 177: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  7244  088F  304F               	movlw	low _dummy_encapsulated_cmd_response
  7245  0890  0021               	movlb	1	; select bank1
  7246  0891  00C3               	movwf	_inPipes^(0+128)	;volatile
  7247  0892  3002               	movlw	high _dummy_encapsulated_cmd_response
  7248  0893  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
  7249                           
  7250                           ;usb_device_cdc.c: 178: inPipes[0].info.bits.busy = 1;
  7251  0894  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  7252                           
  7253                           ;usb_device_cdc.c: 179: break;
  7254  0895  0008               	return
  7255  0896                     l7414:	
  7256                           ;usb_device_cdc.c: 183: case 0x20:
  7257                           
  7258                           
  7259                           ;usb_device_cdc.c: 184: outPipes[0].wCount.Val = SetupPkt.wLength;
  7260  0896  0020               	movlb	0	; select bank0
  7261  0897  0857               	movf	87,w	;volatile
  7262  0898  0023               	movlb	3	; select bank3
  7263  0899  00B4               	movwf	((_outPipes+1)^(0+384)+3)	;volatile
  7264  089A  0020               	movlb	0	; select bank0
  7265  089B  0856               	movf	86,w	;volatile
  7266  089C  0023               	movlb	3	; select bank3
  7267  089D  00B3               	movwf	(_outPipes^(0+384)+3)	;volatile
  7268                           
  7269                           ;usb_device_cdc.c: 185: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
  7270  089E  3057               	movlw	(low (_line_coding| (0+512)))& (0+255)
  7271  089F  0021               	movlb	1	; select bank1
  7272  08A0  00A6               	movwf	??_USBCheckCDCRequest^(0+128)
  7273  08A1  0826               	movf	??_USBCheckCDCRequest^(0+128),w
  7274  08A2  0023               	movlb	3	; select bank3
  7275  08A3  00B0               	movwf	_outPipes^(0+384)	;volatile
  7276                           
  7277                           ;usb_device_cdc.c: 186: outPipes[0].pFunc = (0);
  7278  08A4  01B5               	clrf	(low ((_outPipes| (0+256)+5)))^(0+128)	;volatile
  7279  08A5  01B6               	clrf	((low ((_outPipes| (0+256)+5))+1))^(0+128)	;volatile
  7280                           
  7281                           ;usb_device_cdc.c: 187: outPipes[0].info.bits.busy = 1;
  7282  08A6  17B2               	bsf	(_outPipes^(0+384)+2),7	;volatile
  7283                           
  7284                           ;usb_device_cdc.c: 188: break;
  7285  08A7  0008               	return
  7286  08A8                     l7420:	
  7287                           ;usb_device_cdc.c: 190: case 0x21:
  7288                           
  7289                           
  7290                           ;usb_device_cdc.c: 191: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  7291  08A8  3057               	movlw	low _line_coding
  7292  08A9  0021               	movlb	1	; select bank1
  7293  08AA  00C3               	movwf	_inPipes^(0+128)	;volatile
  7294  08AB  3002               	movlw	high _line_coding
  7295  08AC  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
  7296  08AD  3000               	movlw	0
  7297  08AE  00C7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  7298  08AF  3007               	movlw	7
  7299  08B0  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
  7300  08B1  30C1               	movlw	193
  7301  08B2  00A6               	movwf	??_USBCheckCDCRequest^(0+128)
  7302  08B3  0826               	movf	??_USBCheckCDCRequest^(0+128),w
  7303  08B4  00C5               	movwf	(_inPipes^(0+128)+2)	;volatile
  7304                           
  7305                           ;usb_device_cdc.c: 195: break;
  7306  08B5  0008               	return
  7307  08B6                     l7426:	
  7308                           ;usb_device_cdc.c: 197: case 0x22:
  7309                           
  7310                           
  7311                           ;usb_device_cdc.c: 198: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
  7312  08B6  0020               	movlb	0	; select bank0
  7313  08B7  0852               	movf	82,w	;volatile
  7314  08B8  0021               	movlb	1	; select bank1
  7315  08B9  00A6               	movwf	??_USBCheckCDCRequest^(0+128)
  7316  08BA  0826               	movf	??_USBCheckCDCRequest^(0+128),w
  7317  08BB  0023               	movlb	3	; select bank3
  7318  08BC  00E6               	movwf	_control_signal_bitmap^(0+384)
  7319                           
  7320                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.busy = 1;
  7321  08BD  0021               	movlb	1	; select bank1
  7322  08BE  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  7323                           
  7324                           ;usb_device_cdc.c: 257: }
  7325                           
  7326                           ;usb_device_cdc.c: 256: break;
  7327                           
  7328                           ;usb_device_cdc.c: 255: default:
  7329                           
  7330                           ;usb_device_cdc.c: 231: break;
  7331  08BF  0008               	return
  7332  08C0                     l7432:	
  7333  08C0  0020               	movlb	0	; select bank0
  7334  08C1  0851               	movf	81,w	;volatile
  7335                           
  7336                           ; Switch size 1, requested type "space"
  7337                           ; Number of cases is 5, Range of values is 0 to 34
  7338                           ; switch strategies available:
  7339                           ; Name         Instructions Cycles
  7340                           ; simple_byte           16     9 (average)
  7341                           ; direct_byte           76     6 (fixed)
  7342                           ; jumptable            260     6 (fixed)
  7343                           ;	Chosen strategy is simple_byte
  7344  08C2  3A00               	xorlw	0	; case 0
  7345  08C3  1903               	skipnz
  7346  08C4  2883               	goto	l7402
  7347  08C5  3A01               	xorlw	1	; case 1
  7348  08C6  1903               	skipnz
  7349  08C7  288F               	goto	l7410
  7350  08C8  3A21               	xorlw	33	; case 32
  7351  08C9  1903               	skipnz
  7352  08CA  2896               	goto	l7414
  7353  08CB  3A01               	xorlw	1	; case 33
  7354  08CC  1903               	skipnz
  7355  08CD  28A8               	goto	l7420
  7356  08CE  3A03               	xorlw	3	; case 34
  7357  08CF  1903               	skipnz
  7358  08D0  28B6               	goto	l7426
  7359  08D1  28D2               	goto	l137
  7360  08D2                     l137:	
  7361  08D2  0008               	return
  7362  08D3                     __end_of_USBCheckCDCRequest:	
  7363                           
  7364                           	psect	text26
  7365  120A                     __ptext26:	
  7366 ;; *************** function _CDCInitEP *****************
  7367 ;; Defined at:
  7368 ;;		line 293 in file "mcc_generated_files/usb/usb_device_cdc.c"
  7369 ;; Parameters:    Size  Location     Type
  7370 ;;		None
  7371 ;; Auto vars:     Size  Location     Type
  7372 ;;		None
  7373 ;; Return value:  Size  Location     Type
  7374 ;;                  1    wreg      void 
  7375 ;; Registers used:
  7376 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7377 ;; Tracked objects:
  7378 ;;		On entry : 0/0
  7379 ;;		On exit  : 0/0
  7380 ;;		Unchanged: 0/0
  7381 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7384 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7385 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7386 ;;Total ram usage:        1 bytes
  7387 ;; Hardware stack levels used:    1
  7388 ;; Hardware stack levels required when called:   12
  7389 ;; This function calls:
  7390 ;;		_USBEnableEndpoint
  7391 ;;		_USBTransferOnePacket
  7392 ;; This function is called by:
  7393 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7394 ;;		_main
  7395 ;; This function uses a non-reentrant model
  7396 ;;
  7397                           
  7398                           
  7399                           ;psect for function _CDCInitEP
  7400  120A                     _CDCInitEP:	
  7401                           
  7402                           ;usb_device_cdc.c: 296: line_coding.dwDTERate = 19200;
  7403                           
  7404                           ;incstack = 0
  7405                           ; Regs used in _CDCInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7406  120A  3000               	movlw	0
  7407  120B  0024               	movlb	4	; select bank4
  7408  120C  00DA               	movwf	(_line_coding+3)^(0+512)
  7409  120D  3000               	movlw	0
  7410  120E  00D9               	movwf	(_line_coding+2)^(0+512)
  7411  120F  304B               	movlw	75
  7412  1210  00D8               	movwf	(_line_coding+1)^(0+512)
  7413  1211  3000               	movlw	0
  7414  1212  00D7               	movwf	_line_coding^(0+512)
  7415                           
  7416                           ;usb_device_cdc.c: 297: line_coding.bCharFormat = 0x00;
  7417  1213  01DB               	clrf	(_line_coding^(0+512)+4)
  7418                           
  7419                           ;usb_device_cdc.c: 298: line_coding.bParityType = 0x00;
  7420  1214  01DC               	clrf	(_line_coding^(0+512)+5)
  7421                           
  7422                           ;usb_device_cdc.c: 299: line_coding.bDataBits = 0x08;
  7423  1215  3008               	movlw	8
  7424  1216  0021               	movlb	1	; select bank1
  7425  1217  00B3               	movwf	??_CDCInitEP^(0+128)
  7426  1218  0833               	movf	??_CDCInitEP^(0+128),w
  7427  1219  0024               	movlb	4	; select bank4
  7428  121A  00DD               	movwf	(_line_coding^(0+512)+6)
  7429                           
  7430                           ;usb_device_cdc.c: 301: cdc_rx_len = 0;
  7431  121B  0023               	movlb	3	; select bank3
  7432  121C  01EA               	clrf	_cdc_rx_len^(0+384)
  7433                           
  7434                           ;usb_device_cdc.c: 314: USBEnableEndpoint(1,0x02|0x10|0x08);
  7435  121D  301A               	movlw	26
  7436  121E  0021               	movlb	1	; select bank1
  7437  121F  00B3               	movwf	??_CDCInitEP^(0+128)
  7438  1220  0833               	movf	??_CDCInitEP^(0+128),w
  7439  1221  00AD               	movwf	USBEnableEndpoint@options^(0+128)
  7440  1222  3001               	movlw	1
  7441  1223  319F  27DD  3192   	fcall	_USBEnableEndpoint
  7442                           
  7443                           ;usb_device_cdc.c: 315: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
  7444  1226  301E               	movlw	30
  7445  1227  0021               	movlb	1	; select bank1
  7446  1228  00B3               	movwf	??_CDCInitEP^(0+128)
  7447  1229  0833               	movf	??_CDCInitEP^(0+128),w
  7448  122A  00AD               	movwf	USBEnableEndpoint@options^(0+128)
  7449  122B  3002               	movlw	2
  7450  122C  319F  27DD  3192   	fcall	_USBEnableEndpoint
  7451                           
  7452                           ;usb_device_cdc.c: 317: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  7453  122F  0021               	movlb	1	; select bank1
  7454  1230  01A6               	clrf	USBTransferOnePacket@dir^(0+128)
  7455  1231  30C0               	movlw	192
  7456  1232  00A7               	movwf	USBTransferOnePacket@data^(0+128)
  7457  1233  3020               	movlw	32
  7458  1234  00A8               	movwf	(USBTransferOnePacket@data^(0+128)+1)
  7459  1235  3040               	movlw	64
  7460  1236  00B3               	movwf	??_CDCInitEP^(0+128)
  7461  1237  0833               	movf	??_CDCInitEP^(0+128),w
  7462  1238  00A9               	movwf	USBTransferOnePacket@len^(0+128)
  7463  1239  3002               	movlw	2
  7464  123A  318C  2495         	fcall	_USBTransferOnePacket
  7465  123C  0021               	movlb	1	; select bank1
  7466  123D  0827               	movf	(?_USBTransferOnePacket+1)^(0+128),w
  7467  123E  0023               	movlb	3	; select bank3
  7468  123F  00D0               	movwf	(_CDCDataOutHandle+1)^(0+384)
  7469  1240  0021               	movlb	1	; select bank1
  7470  1241  0826               	movf	?_USBTransferOnePacket^(0+128),w
  7471  1242  0023               	movlb	3	; select bank3
  7472  1243  00CF               	movwf	_CDCDataOutHandle^(0+384)
  7473                           
  7474                           ;usb_device_cdc.c: 318: CDCDataInHandle = (0);
  7475  1244  01CD               	clrf	_CDCDataInHandle^(0+384)
  7476  1245  01CE               	clrf	(_CDCDataInHandle+1)^(0+384)
  7477                           
  7478                           ;usb_device_cdc.c: 345: cdc_trf_state = 0;
  7479  1246  01E9               	clrf	_cdc_trf_state^(0+384)
  7480  1247  0008               	return
  7481  1248                     __end_of_CDCInitEP:	
  7482                           
  7483                           	psect	text27
  7484  1FDD                     __ptext27:	
  7485 ;; *************** function _USBEnableEndpoint *****************
  7486 ;; Defined at:
  7487 ;;		line 878 in file "mcc_generated_files/usb/usb_device.c"
  7488 ;; Parameters:    Size  Location     Type
  7489 ;;  ep              1    wreg     unsigned char 
  7490 ;;  options         1   13[BANK1 ] unsigned char 
  7491 ;; Auto vars:     Size  Location     Type
  7492 ;;  ep              1   18[BANK1 ] unsigned char 
  7493 ;;  p               2   16[BANK1 ] PTR unsigned char 
  7494 ;;		 -> UEP0(1), 
  7495 ;; Return value:  Size  Location     Type
  7496 ;;                  1    wreg      void 
  7497 ;; Registers used:
  7498 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7499 ;; Tracked objects:
  7500 ;;		On entry : 0/0
  7501 ;;		On exit  : 0/0
  7502 ;;		Unchanged: 0/0
  7503 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7504 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7505 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7506 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7507 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  7508 ;;Total ram usage:        6 bytes
  7509 ;; Hardware stack levels used:    1
  7510 ;; Hardware stack levels required when called:   11
  7511 ;; This function calls:
  7512 ;;		_USBConfigureEndpoint
  7513 ;; This function is called by:
  7514 ;;		_CDCInitEP
  7515 ;; This function uses a non-reentrant model
  7516 ;;
  7517                           
  7518                           
  7519                           ;psect for function _USBEnableEndpoint
  7520  1FDD                     _USBEnableEndpoint:	
  7521                           
  7522                           ;incstack = 0
  7523                           ; Regs used in _USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7524                           ;USBEnableEndpoint@ep stored from wreg
  7525  1FDD  0021               	movlb	1	; select bank1
  7526  1FDE  00B2               	movwf	USBEnableEndpoint@ep^(0+128)
  7527                           
  7528                           ;usb_device.c: 880: unsigned char* p;
  7529                           ;usb_device.c: 884: if(options & 0x04)
  7530  1FDF  1D2D               	btfss	USBEnableEndpoint@options^(0+128),2
  7531  1FE0  2FE6               	goto	l7352
  7532                           
  7533                           ;usb_device.c: 885: {
  7534                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
  7535  1FE1  01A6               	clrf	USBConfigureEndpoint@direction^(0+128)
  7536  1FE2  0832               	movf	USBEnableEndpoint@ep^(0+128),w
  7537  1FE3  3193  2307  319F   	fcall	_USBConfigureEndpoint
  7538  1FE6                     l7352:	
  7539                           
  7540                           ;usb_device.c: 887: }
  7541                           ;usb_device.c: 888: if(options & 0x02)
  7542  1FE6  0021               	movlb	1	; select bank1
  7543  1FE7  1CAD               	btfss	USBEnableEndpoint@options^(0+128),1
  7544  1FE8  2FEE               	goto	l7356
  7545                           
  7546                           ;usb_device.c: 889: {
  7547                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
  7548  1FE9  01A6               	clrf	USBConfigureEndpoint@direction^(0+128)
  7549  1FEA  0AA6               	incf	USBConfigureEndpoint@direction^(0+128),f
  7550  1FEB  0832               	movf	USBEnableEndpoint@ep^(0+128),w
  7551  1FEC  3193  2307         	fcall	_USBConfigureEndpoint
  7552  1FEE                     l7356:	
  7553                           
  7554                           ;usb_device.c: 891: }
  7555                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
  7556  1FEE  0021               	movlb	1	; select bank1
  7557  1FEF  0832               	movf	USBEnableEndpoint@ep^(0+128),w
  7558  1FF0  3E98               	addlw	152
  7559  1FF1  00AE               	movwf	??_USBEnableEndpoint^(0+128)
  7560  1FF2  01AF               	clrf	(??_USBEnableEndpoint^(0+128)+1)
  7561  1FF3  300E               	movlw	14
  7562  1FF4  3DAF               	addwfc	(??_USBEnableEndpoint^(0+128)+1),f
  7563  1FF5  082E               	movf	??_USBEnableEndpoint^(0+128),w
  7564  1FF6  00B0               	movwf	USBEnableEndpoint@p^(0+128)
  7565  1FF7  082F               	movf	(??_USBEnableEndpoint+1)^(0+128),w
  7566  1FF8  00B1               	movwf	(USBEnableEndpoint@p+1)^(0+128)
  7567                           
  7568                           ;usb_device.c: 901: *p = options;
  7569  1FF9  0830               	movf	USBEnableEndpoint@p^(0+128),w
  7570  1FFA  0086               	movwf	6
  7571  1FFB  0831               	movf	(USBEnableEndpoint@p+1)^(0+128),w
  7572  1FFC  0087               	movwf	7
  7573  1FFD  082D               	movf	USBEnableEndpoint@options^(0+128),w
  7574  1FFE  0081               	movwf	1
  7575  1FFF  0008               	return
  7576  2000                     __end_of_USBEnableEndpoint:	
  7577                           
  7578                           	psect	text28
  7579  1307                     __ptext28:	
  7580 ;; *************** function _USBConfigureEndpoint *****************
  7581 ;; Defined at:
  7582 ;;		line 1543 in file "mcc_generated_files/usb/usb_device.c"
  7583 ;; Parameters:    Size  Location     Type
  7584 ;;  EPNum           1    wreg     unsigned char 
  7585 ;;  direction       1    6[BANK1 ] unsigned char 
  7586 ;; Auto vars:     Size  Location     Type
  7587 ;;  EPNum           1   11[BANK1 ] unsigned char 
  7588 ;;  handle          1   12[BANK1 ] PTR volatile struct __BD
  7589 ;;		 -> BDT(48), 
  7590 ;; Return value:  Size  Location     Type
  7591 ;;                  1    wreg      void 
  7592 ;; Registers used:
  7593 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7594 ;; Tracked objects:
  7595 ;;		On entry : 0/0
  7596 ;;		On exit  : 0/0
  7597 ;;		Unchanged: 0/0
  7598 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7599 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7600 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7601 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7602 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  7603 ;;Total ram usage:        7 bytes
  7604 ;; Hardware stack levels used:    1
  7605 ;; Hardware stack levels required when called:   10
  7606 ;; This function calls:
  7607 ;;		Nothing
  7608 ;; This function is called by:
  7609 ;;		_USBEnableEndpoint
  7610 ;; This function uses a non-reentrant model
  7611 ;;
  7612                           
  7613                           
  7614                           ;psect for function _USBConfigureEndpoint
  7615  1307                     _USBConfigureEndpoint:	
  7616                           
  7617                           ;incstack = 0
  7618                           ; Regs used in _USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
  7619                           ;USBConfigureEndpoint@EPNum stored from wreg
  7620  1307  0021               	movlb	1	; select bank1
  7621  1308  00AB               	movwf	USBConfigureEndpoint@EPNum^(0+128)
  7622                           
  7623                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
  7624                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
  7625  1309  3020               	movlw	32
  7626  130A  00A7               	movwf	??_USBConfigureEndpoint^(0+128)
  7627  130B  0827               	movf	??_USBConfigureEndpoint^(0+128),w
  7628  130C  00AC               	movwf	USBConfigureEndpoint@handle^(0+128)
  7629                           
  7630                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
  7631  130D  0826               	movf	USBConfigureEndpoint@direction^(0+128),w
  7632  130E  00A7               	movwf	??_USBConfigureEndpoint^(0+128)
  7633  130F  3001               	movlw	1
  7634  1310                     u6725:	
  7635  1310  35A7               	lslf	??_USBConfigureEndpoint^(0+128),f
  7636  1311  0B89               	decfsz	9,f
  7637  1312  2B10               	goto	u6725
  7638  1313  082B               	movf	USBConfigureEndpoint@EPNum^(0+128),w
  7639  1314  00A8               	movwf	(??_USBConfigureEndpoint+1)^(0+128)
  7640  1315  3001               	movlw	1
  7641  1316                     u6735:	
  7642  1316  35A8               	lslf	(??_USBConfigureEndpoint+1)^(0+128),f
  7643  1317  3EFF               	addlw	-1
  7644  1318  1D03               	skipz
  7645  1319  2B16               	goto	u6735
  7646  131A  3528               	lslf	(??_USBConfigureEndpoint+1)^(0+128),w
  7647  131B  0727               	addwf	??_USBConfigureEndpoint^(0+128),w
  7648  131C  00A9               	movwf	(??_USBConfigureEndpoint+2)^(0+128)
  7649  131D  3001               	movlw	1
  7650  131E                     u6745:	
  7651  131E  35A9               	lslf	(??_USBConfigureEndpoint+2)^(0+128),f
  7652  131F  3EFF               	addlw	-1
  7653  1320  1D03               	skipz
  7654  1321  2B1E               	goto	u6745
  7655  1322  3529               	lslf	(??_USBConfigureEndpoint+2)^(0+128),w
  7656  1323  00AA               	movwf	(??_USBConfigureEndpoint+3)^(0+128)
  7657  1324  082A               	movf	(??_USBConfigureEndpoint+3)^(0+128),w
  7658  1325  07AC               	addwf	USBConfigureEndpoint@handle^(0+128),f
  7659                           
  7660                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
  7661  1326  082C               	movf	USBConfigureEndpoint@handle^(0+128),w
  7662  1327  0086               	movwf	6
  7663  1328  0187               	clrf	7
  7664  1329  1381               	bcf	1,7
  7665                           
  7666                           ;usb_device.c: 1557: if(direction == 0)
  7667  132A  0826               	movf	USBConfigureEndpoint@direction^(0+128),w
  7668  132B  1D03               	btfss	3,2
  7669  132C  2B37               	goto	l7342
  7670                           
  7671                           ;usb_device.c: 1558: {
  7672                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
  7673  132D  352B               	lslf	USBConfigureEndpoint@EPNum^(0+128),w
  7674  132E  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  7675  132F  0086               	movwf	6
  7676  1330  3001               	movlw	1	; select bank3/4
  7677  1331  0087               	movwf	7
  7678  1332  082C               	movf	USBConfigureEndpoint@handle^(0+128),w
  7679  1333  3FC0               	movwi [0]fsr1
  7680  1334  3000               	movlw	0
  7681  1335  3FC1               	movwi [1]fsr1
  7682                           
  7683                           ;usb_device.c: 1560: }
  7684  1336  2B40               	goto	l7344
  7685  1337                     l7342:	
  7686                           
  7687                           ;usb_device.c: 1561: else
  7688                           ;usb_device.c: 1562: {
  7689                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
  7690  1337  352B               	lslf	USBConfigureEndpoint@EPNum^(0+128),w
  7691  1338  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  7692  1339  0086               	movwf	6
  7693  133A  3001               	movlw	1	; select bank3/4
  7694  133B  0087               	movwf	7
  7695  133C  082C               	movf	USBConfigureEndpoint@handle^(0+128),w
  7696  133D  3FC0               	movwi [0]fsr1
  7697  133E  3000               	movlw	0
  7698  133F  3FC1               	movwi [1]fsr1
  7699  1340                     l7344:	
  7700                           
  7701                           ;usb_device.c: 1564: }
  7702                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
  7703  1340  082C               	movf	USBConfigureEndpoint@handle^(0+128),w
  7704  1341  0086               	movwf	6
  7705  1342  0187               	clrf	7
  7706  1343  1301               	bcf	1,6
  7707                           
  7708                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
  7709  1344  082C               	movf	USBConfigureEndpoint@handle^(0+128),w
  7710  1345  3E04               	addlw	4
  7711  1346  0086               	movwf	6
  7712  1347  0187               	clrf	7
  7713  1348  1701               	bsf	1,6
  7714  1349  0008               	return
  7715  134A                     __end_of_USBConfigureEndpoint:	
  7716                           
  7717                           	psect	text29
  7718  11D4                     __ptext29:	
  7719 ;; *************** function _USBCtrlTrfOutHandler *****************
  7720 ;; Defined at:
  7721 ;;		line 2538 in file "mcc_generated_files/usb/usb_device.c"
  7722 ;; Parameters:    Size  Location     Type
  7723 ;;		None
  7724 ;; Auto vars:     Size  Location     Type
  7725 ;;		None
  7726 ;; Return value:  Size  Location     Type
  7727 ;;                  1    wreg      void 
  7728 ;; Registers used:
  7729 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7730 ;; Tracked objects:
  7731 ;;		On entry : 0/0
  7732 ;;		On exit  : 0/0
  7733 ;;		Unchanged: 0/0
  7734 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7737 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7738 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7739 ;;Total ram usage:        2 bytes
  7740 ;; Hardware stack levels used:    1
  7741 ;; Hardware stack levels required when called:   12
  7742 ;; This function calls:
  7743 ;;		_USBCtrlTrfRxService
  7744 ;; This function is called by:
  7745 ;;		_USBCtrlEPService
  7746 ;; This function uses a non-reentrant model
  7747 ;;
  7748                           
  7749                           
  7750                           ;psect for function _USBCtrlTrfOutHandler
  7751  11D4                     _USBCtrlTrfOutHandler:	
  7752                           
  7753                           ;usb_device.c: 2540: if(controlTransferState == 2)
  7754                           
  7755                           ;incstack = 0
  7756                           ; Regs used in _USBCtrlTrfOutHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7757  11D4  3002               	movlw	2
  7758  11D5  0023               	movlb	3	; select bank3
  7759  11D6  0662               	xorwf	_controlTransferState^(0+384),w	;volatile
  7760  11D7  1D03               	btfss	3,2
  7761  11D8  29DC               	goto	l7944
  7762                           
  7763                           ;usb_device.c: 2541: {
  7764                           ;usb_device.c: 2542: USBCtrlTrfRxService();
  7765  11D9  3186  2635         	fcall	_USBCtrlTrfRxService
  7766                           
  7767                           ;usb_device.c: 2543: }
  7768  11DB  0008               	return
  7769  11DC                     l7944:	
  7770                           
  7771                           ;usb_device.c: 2544: else
  7772                           ;usb_device.c: 2545: {
  7773                           ;usb_device.c: 2548: controlTransferState = 0;
  7774  11DC  0023               	movlb	3	; select bank3
  7775  11DD  01E2               	clrf	_controlTransferState^(0+384)	;volatile
  7776                           
  7777                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
  7778  11DE  085D               	movf	_BothEP0OutUOWNsSet^(0+384),w	;volatile
  7779  11DF  1D03               	btfss	3,2
  7780  11E0  2A07               	goto	l7956
  7781                           
  7782                           ;usb_device.c: 2556: {
  7783                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 8;
  7784  11E1  0021               	movlb	1	; select bank1
  7785  11E2  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7786  11E3  3E01               	addlw	1
  7787  11E4  00AC               	movwf	??_USBCtrlTrfOutHandler^(0+128)
  7788  11E5  3000               	movlw	0
  7789  11E6  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7790  11E7  00AD               	movwf	(??_USBCtrlTrfOutHandler+1)^(0+128)
  7791  11E8  082C               	movf	??_USBCtrlTrfOutHandler^(0+128),w
  7792  11E9  0086               	movwf	6
  7793  11EA  082D               	movf	(??_USBCtrlTrfOutHandler+1)^(0+128),w
  7794  11EB  0087               	movwf	7
  7795  11EC  3008               	movlw	8
  7796  11ED  0081               	movwf	1
  7797                           
  7798                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  7799  11EE  3050               	movlw	80
  7800  11EF  00AC               	movwf	??_USBCtrlTrfOutHandler^(0+128)
  7801  11F0  3000               	movlw	0
  7802  11F1  00AD               	movwf	(??_USBCtrlTrfOutHandler^(0+128)+1)
  7803  11F2  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7804  11F3  0086               	movwf	6
  7805  11F4  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7806  11F5  0087               	movwf	7
  7807  11F6  3142               	addfsr 1,2
  7808  11F7  082C               	movf	??_USBCtrlTrfOutHandler^(0+128),w
  7809  11F8  3FC0               	movwi [0]fsr1
  7810  11F9  082D               	movf	(??_USBCtrlTrfOutHandler^(0+128)+1),w
  7811  11FA  3FC1               	movwi [1]fsr1
  7812                           
  7813                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  7814  11FB  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7815  11FC  0086               	movwf	6
  7816  11FD  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7817  11FE  0087               	movwf	7
  7818  11FF  300C               	movlw	12
  7819  1200  0081               	movwf	1
  7820                           
  7821                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7822  1201  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7823  1202  0086               	movwf	6
  7824  1203  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7825  1204  0087               	movwf	7
  7826  1205  1781               	bsf	1,7
  7827                           
  7828                           ;usb_device.c: 2561: }
  7829  1206  0008               	return
  7830  1207                     l7956:	
  7831                           
  7832                           ;usb_device.c: 2562: else
  7833                           ;usb_device.c: 2563: {
  7834                           ;usb_device.c: 2564: BothEP0OutUOWNsSet = 0;
  7835  1207  0023               	movlb	3	; select bank3
  7836  1208  01DD               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  7837  1209  0008               	return
  7838  120A                     __end_of_USBCtrlTrfOutHandler:	
  7839                           
  7840                           	psect	text30
  7841  0635                     __ptext30:	
  7842 ;; *************** function _USBCtrlTrfRxService *****************
  7843 ;; Defined at:
  7844 ;;		line 1852 in file "mcc_generated_files/usb/usb_device.c"
  7845 ;; Parameters:    Size  Location     Type
  7846 ;;		None
  7847 ;; Auto vars:     Size  Location     Type
  7848 ;;  byteToRead      1   11[BANK1 ] unsigned char 
  7849 ;;  i               1   10[BANK1 ] unsigned char 
  7850 ;; Return value:  Size  Location     Type
  7851 ;;                  1    wreg      void 
  7852 ;; Registers used:
  7853 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7854 ;; Tracked objects:
  7855 ;;		On entry : 0/0
  7856 ;;		On exit  : 0/0
  7857 ;;		Unchanged: 0/0
  7858 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7860 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7861 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7862 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7863 ;;Total ram usage:        4 bytes
  7864 ;; Hardware stack levels used:    1
  7865 ;; Hardware stack levels required when called:   11
  7866 ;; This function calls:
  7867 ;;		_USBCtrlEPAllowStatusStage
  7868 ;; This function is called by:
  7869 ;;		_USBCtrlTrfOutHandler
  7870 ;; This function uses a non-reentrant model
  7871 ;;
  7872                           
  7873                           
  7874                           ;psect for function _USBCtrlTrfRxService
  7875  0635                     _USBCtrlTrfRxService:	
  7876                           
  7877                           ;usb_device.c: 1854: uint8_t byteToRead;
  7878                           ;usb_device.c: 1855: uint8_t i;
  7879                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  7880                           
  7881                           ;incstack = 0
  7882                           ; Regs used in _USBCtrlTrfRxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7883  0635  0023               	movlb	3	; select bank3
  7884  0636  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  7885  0637  0086               	movwf	6
  7886  0638  0187               	clrf	7
  7887  0639  3F41               	moviw [1]fsr1
  7888  063A  0021               	movlb	1	; select bank1
  7889  063B  00AB               	movwf	USBCtrlTrfRxService@byteToRead^(0+128)
  7890                           
  7891                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
  7892  063C  082B               	movf	USBCtrlTrfRxService@byteToRead^(0+128),w
  7893  063D  00A8               	movwf	??_USBCtrlTrfRxService^(0+128)
  7894  063E  01A9               	clrf	(??_USBCtrlTrfRxService^(0+128)+1)
  7895  063F  0829               	movf	(??_USBCtrlTrfRxService+1)^(0+128),w
  7896  0640  0023               	movlb	3	; select bank3
  7897  0641  0234               	subwf	((_outPipes+1)^(0+384)+3),w	;volatile
  7898  0642  1D03               	skipz
  7899  0643  2E48               	goto	u7365
  7900  0644  0021               	movlb	1	; select bank1
  7901  0645  0828               	movf	??_USBCtrlTrfRxService^(0+128),w
  7902  0646  0023               	movlb	3	; select bank3
  7903  0647  0233               	subwf	(_outPipes^(0+384)+3),w	;volatile
  7904  0648                     u7365:	
  7905  0648  1803               	skipnc
  7906  0649  2E4F               	goto	l493
  7907                           
  7908                           ;usb_device.c: 1866: {
  7909                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
  7910  064A  0833               	movf	(_outPipes^(0+384)+3),w	;volatile
  7911  064B  0021               	movlb	1	; select bank1
  7912  064C  00A8               	movwf	??_USBCtrlTrfRxService^(0+128)
  7913  064D  0828               	movf	??_USBCtrlTrfRxService^(0+128),w
  7914  064E  00AB               	movwf	USBCtrlTrfRxService@byteToRead^(0+128)
  7915  064F                     l493:	
  7916                           
  7917                           ;usb_device.c: 1868: }
  7918                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
  7919  064F  0021               	movlb	1	; select bank1
  7920  0650  082B               	movf	USBCtrlTrfRxService@byteToRead^(0+128),w
  7921  0651  00A8               	movwf	??_USBCtrlTrfRxService^(0+128)
  7922  0652  01A9               	clrf	(??_USBCtrlTrfRxService^(0+128)+1)
  7923  0653  0828               	movf	??_USBCtrlTrfRxService^(0+128),w
  7924  0654  0023               	movlb	3	; select bank3
  7925  0655  02B3               	subwf	(_outPipes^(0+384)+3),f	;volatile
  7926  0656  0021               	movlb	1	; select bank1
  7927  0657  0829               	movf	(??_USBCtrlTrfRxService+1)^(0+128),w
  7928  0658  0023               	movlb	3	; select bank3
  7929  0659  3BB4               	subwfb	((_outPipes+1)^(0+384)+3),f	;volatile
  7930                           
  7931                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
  7932  065A  0021               	movlb	1	; select bank1
  7933  065B  01AA               	clrf	USBCtrlTrfRxService@i^(0+128)
  7934  065C                     l7844:	
  7935  065C  082B               	movf	USBCtrlTrfRxService@byteToRead^(0+128),w
  7936  065D  022A               	subwf	USBCtrlTrfRxService@i^(0+128),w
  7937  065E  1803               	btfsc	3,0
  7938  065F  2E79               	goto	l7846
  7939                           
  7940                           ;usb_device.c: 1875: {
  7941                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  7942  0660  082A               	movf	USBCtrlTrfRxService@i^(0+128),w
  7943  0661  3E58               	addlw	88
  7944  0662  0086               	movwf	6
  7945  0663  0187               	clrf	7
  7946  0664  0801               	movf	1,w
  7947  0665  00A8               	movwf	??_USBCtrlTrfRxService^(0+128)
  7948  0666  0023               	movlb	3	; select bank3
  7949  0667  0830               	movf	_outPipes^(0+384),w	;volatile
  7950  0668  0086               	movwf	6
  7951  0669  3002               	movlw	2	; select bank4/5
  7952  066A  0087               	movwf	7
  7953  066B  0021               	movlb	1	; select bank1
  7954  066C  0828               	movf	??_USBCtrlTrfRxService^(0+128),w
  7955  066D  0081               	movwf	1
  7956  066E  3001               	movlw	1
  7957  066F  00A8               	movwf	??_USBCtrlTrfRxService^(0+128)
  7958  0670  0828               	movf	??_USBCtrlTrfRxService^(0+128),w
  7959  0671  0023               	movlb	3	; select bank3
  7960  0672  07B0               	addwf	_outPipes^(0+384),f	;volatile
  7961  0673  3001               	movlw	1
  7962  0674  0021               	movlb	1	; select bank1
  7963  0675  00A8               	movwf	??_USBCtrlTrfRxService^(0+128)
  7964  0676  0828               	movf	??_USBCtrlTrfRxService^(0+128),w
  7965  0677  07AA               	addwf	USBCtrlTrfRxService@i^(0+128),f
  7966  0678  2E5C               	goto	l7844
  7967  0679                     l7846:	
  7968                           
  7969                           ;usb_device.c: 1877: }
  7970                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
  7971  0679  0023               	movlb	3	; select bank3
  7972  067A  0833               	movf	(_outPipes^(0+384)+3),w	;volatile
  7973  067B  0434               	iorwf	((_outPipes+1)^(0+384)+3),w	;volatile
  7974  067C  1903               	btfsc	3,2
  7975  067D  2EB8               	goto	l7858
  7976                           
  7977                           ;usb_device.c: 1882: {
  7978                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
  7979  067E  0021               	movlb	1	; select bank1
  7980  067F  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7981  0680  3E01               	addlw	1
  7982  0681  00A8               	movwf	??_USBCtrlTrfRxService^(0+128)
  7983  0682  3000               	movlw	0
  7984  0683  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7985  0684  00A9               	movwf	(??_USBCtrlTrfRxService+1)^(0+128)
  7986  0685  0828               	movf	??_USBCtrlTrfRxService^(0+128),w
  7987  0686  0086               	movwf	6
  7988  0687  0829               	movf	(??_USBCtrlTrfRxService+1)^(0+128),w
  7989  0688  0087               	movwf	7
  7990  0689  3008               	movlw	8
  7991  068A  0081               	movwf	1
  7992                           
  7993                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  7994  068B  3058               	movlw	88
  7995  068C  00A8               	movwf	??_USBCtrlTrfRxService^(0+128)
  7996  068D  3000               	movlw	0
  7997  068E  00A9               	movwf	(??_USBCtrlTrfRxService^(0+128)+1)
  7998  068F  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7999  0690  0086               	movwf	6
  8000  0691  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8001  0692  0087               	movwf	7
  8002  0693  3142               	addfsr 1,2
  8003  0694  0828               	movf	??_USBCtrlTrfRxService^(0+128),w
  8004  0695  3FC0               	movwi [0]fsr1
  8005  0696  0829               	movf	(??_USBCtrlTrfRxService^(0+128)+1),w
  8006  0697  3FC1               	movwi [1]fsr1
  8007                           
  8008                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  8009  0698  0023               	movlb	3	; select bank3
  8010  0699  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  8011  069A  0086               	movwf	6
  8012  069B  0187               	clrf	7
  8013  069C  1B01               	btfsc	1,6
  8014  069D  2EAB               	goto	l7856
  8015                           
  8016                           ;usb_device.c: 1886: {
  8017                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  8018  069E  0021               	movlb	1	; select bank1
  8019  069F  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8020  06A0  0086               	movwf	6
  8021  06A1  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8022  06A2  0087               	movwf	7
  8023  06A3  3048               	movlw	72
  8024  06A4  0081               	movwf	1
  8025                           
  8026                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8027  06A5  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8028  06A6  0086               	movwf	6
  8029  06A7  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8030  06A8  0087               	movwf	7
  8031  06A9  1781               	bsf	1,7
  8032                           
  8033                           ;usb_device.c: 1889: }
  8034  06AA  0008               	return
  8035  06AB                     l7856:	
  8036                           
  8037                           ;usb_device.c: 1890: else
  8038                           ;usb_device.c: 1891: {
  8039                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
  8040  06AB  0021               	movlb	1	; select bank1
  8041  06AC  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8042  06AD  0086               	movwf	6
  8043  06AE  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8044  06AF  0087               	movwf	7
  8045  06B0  3008               	movlw	8
  8046  06B1  0081               	movwf	1
  8047                           
  8048                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8049  06B2  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8050  06B3  0086               	movwf	6
  8051  06B4  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8052  06B5  0087               	movwf	7
  8053  06B6  1781               	bsf	1,7
  8054                           
  8055                           ;usb_device.c: 1894: }
  8056                           ;usb_device.c: 1895: }
  8057  06B7  0008               	return
  8058  06B8                     l7858:	
  8059                           
  8060                           ;usb_device.c: 1896: else
  8061                           ;usb_device.c: 1897: {
  8062                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
  8063  06B8  0021               	movlb	1	; select bank1
  8064  06B9  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8065  06BA  3E01               	addlw	1
  8066  06BB  00A8               	movwf	??_USBCtrlTrfRxService^(0+128)
  8067  06BC  3000               	movlw	0
  8068  06BD  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8069  06BE  00A9               	movwf	(??_USBCtrlTrfRxService+1)^(0+128)
  8070  06BF  0828               	movf	??_USBCtrlTrfRxService^(0+128),w
  8071  06C0  0086               	movwf	6
  8072  06C1  0829               	movf	(??_USBCtrlTrfRxService+1)^(0+128),w
  8073  06C2  0087               	movwf	7
  8074  06C3  3008               	movlw	8
  8075  06C4  0081               	movwf	1
  8076                           
  8077                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  8078  06C5  3050               	movlw	80
  8079  06C6  00A8               	movwf	??_USBCtrlTrfRxService^(0+128)
  8080  06C7  3000               	movlw	0
  8081  06C8  00A9               	movwf	(??_USBCtrlTrfRxService^(0+128)+1)
  8082  06C9  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8083  06CA  0086               	movwf	6
  8084  06CB  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8085  06CC  0087               	movwf	7
  8086  06CD  3142               	addfsr 1,2
  8087  06CE  0828               	movf	??_USBCtrlTrfRxService^(0+128),w
  8088  06CF  3FC0               	movwi [0]fsr1
  8089  06D0  0829               	movf	(??_USBCtrlTrfRxService^(0+128)+1),w
  8090  06D1  3FC1               	movwi [1]fsr1
  8091                           
  8092                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  8093  06D2  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8094  06D3  0086               	movwf	6
  8095  06D4  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8096  06D5  0087               	movwf	7
  8097  06D6  3004               	movlw	4
  8098  06D7  0081               	movwf	1
  8099                           
  8100                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8101  06D8  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8102  06D9  0086               	movwf	6
  8103  06DA  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8104  06DB  0087               	movwf	7
  8105  06DC  1781               	bsf	1,7
  8106                           
  8107                           ;usb_device.c: 1915: {
  8108                           ;usb_device.c: 1921: outPipes[0].pFunc();
  8109  06DD  0023               	movlb	3	; select bank3
  8110  06DE  0835               	movf	(low ((_outPipes| (0+256)+5)))^(0+128),w	;volatile
  8111  06DF  0836               	movf	((low ((_outPipes| (0+256)+5))+1))^(0+128),w	;volatile
  8112                           
  8113                           ;usb_device.c: 1926: }
  8114                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
  8115  06E0  13B2               	bcf	(_outPipes^(0+384)+2),7	;volatile
  8116                           
  8117                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
  8118  06E1  085B               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
  8119  06E2  1D03               	btfss	3,2
  8120  06E3  0008               	return
  8121                           
  8122                           ;usb_device.c: 1942: {
  8123                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
  8124  06E4  318A  229A         	fcall	_USBCtrlEPAllowStatusStage
  8125  06E6  0008               	return
  8126  06E7                     __end_of_USBCtrlTrfRxService:	
  8127                           
  8128                           	psect	text31
  8129  0A9A                     __ptext31:	
  8130 ;; *************** function _USBCtrlEPAllowStatusStage *****************
  8131 ;; Defined at:
  8132 ;;		line 1416 in file "mcc_generated_files/usb/usb_device.c"
  8133 ;; Parameters:    Size  Location     Type
  8134 ;;		None
  8135 ;; Auto vars:     Size  Location     Type
  8136 ;;		None
  8137 ;; Return value:  Size  Location     Type
  8138 ;;                  1    wreg      void 
  8139 ;; Registers used:
  8140 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8141 ;; Tracked objects:
  8142 ;;		On entry : 0/0
  8143 ;;		On exit  : 0/0
  8144 ;;		Unchanged: 0/0
  8145 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8148 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8149 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8150 ;;Total ram usage:        2 bytes
  8151 ;; Hardware stack levels used:    1
  8152 ;; Hardware stack levels required when called:   10
  8153 ;; This function calls:
  8154 ;;		Nothing
  8155 ;; This function is called by:
  8156 ;;		_USBDeviceTasks
  8157 ;;		_USBCtrlEPServiceComplete
  8158 ;;		_USBCtrlTrfRxService
  8159 ;; This function uses a non-reentrant model
  8160 ;;
  8161                           
  8162                           
  8163                           ;psect for function _USBCtrlEPAllowStatusStage
  8164  0A9A                     _USBCtrlEPAllowStatusStage:	
  8165                           
  8166                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
  8167                           
  8168                           ;incstack = 0
  8169                           ; Regs used in _USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
  8170  0A9A  0023               	movlb	3	; select bank3
  8171  0A9B  085A               	movf	_USBStatusStageEnabledFlag1^(0+384),w	;volatile
  8172  0A9C  1D03               	btfss	3,2
  8173  0A9D  0008               	return
  8174                           
  8175                           ;usb_device.c: 1424: {
  8176                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
  8177  0A9E  3001               	movlw	1
  8178  0A9F  0021               	movlb	1	; select bank1
  8179  0AA0  00A6               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  8180  0AA1  0826               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  8181  0AA2  0023               	movlb	3	; select bank3
  8182  0AA3  00DA               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  8183                           
  8184                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
  8185  0AA4  0859               	movf	_USBStatusStageEnabledFlag2^(0+384),w	;volatile
  8186  0AA5  1D03               	btfss	3,2
  8187  0AA6  0008               	return
  8188                           
  8189                           ;usb_device.c: 1427: {
  8190                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
  8191  0AA7  3001               	movlw	1
  8192  0AA8  0021               	movlb	1	; select bank1
  8193  0AA9  00A6               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  8194  0AAA  0826               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  8195  0AAB  0023               	movlb	3	; select bank3
  8196  0AAC  00D9               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  8197                           
  8198                           ;usb_device.c: 1432: if(controlTransferState == 2)
  8199  0AAD  3002               	movlw	2
  8200  0AAE  0662               	xorwf	_controlTransferState^(0+384),w	;volatile
  8201  0AAF  1D03               	btfss	3,2
  8202  0AB0  2AC3               	goto	l7534
  8203                           
  8204                           ;usb_device.c: 1433: {
  8205                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
  8206  0AB1  0837               	movf	_pBDTEntryIn^(0+384),w
  8207  0AB2  0086               	movwf	6
  8208  0AB3  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  8209  0AB4  0087               	movwf	7
  8210  0AB5  3141               	addfsr 1,1
  8211  0AB6  0181               	clrf	1
  8212                           
  8213                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  8214  0AB7  0837               	movf	_pBDTEntryIn^(0+384),w
  8215  0AB8  0086               	movwf	6
  8216  0AB9  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  8217  0ABA  0087               	movwf	7
  8218  0ABB  3048               	movlw	72
  8219  0ABC  0081               	movwf	1
  8220                           
  8221                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
  8222  0ABD  0837               	movf	_pBDTEntryIn^(0+384),w
  8223  0ABE  0086               	movwf	6
  8224  0ABF  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  8225  0AC0  0087               	movwf	7
  8226  0AC1  1781               	bsf	1,7
  8227                           
  8228                           ;usb_device.c: 1437: }
  8229  0AC2  0008               	return
  8230  0AC3                     l7534:	
  8231                           
  8232                           ;usb_device.c: 1438: else if(controlTransferState == 1)
  8233  0AC3  0362               	decf	_controlTransferState^(0+384),w	;volatile
  8234  0AC4  1D03               	btfss	3,2
  8235  0AC5  0008               	return
  8236                           
  8237                           ;usb_device.c: 1439: {
  8238                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
  8239  0AC6  01DD               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  8240                           
  8241                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
  8242  0AC7  3008               	movlw	8
  8243  0AC8  0021               	movlb	1	; select bank1
  8244  0AC9  00A6               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  8245  0ACA  0023               	movlb	3	; select bank3
  8246  0ACB  0A64               	incf	_pBDTEntryEP0OutCurrent^(0+384),w
  8247  0ACC  0086               	movwf	6
  8248  0ACD  0187               	clrf	7
  8249  0ACE  0021               	movlb	1	; select bank1
  8250  0ACF  0826               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  8251  0AD0  0081               	movwf	1
  8252                           
  8253                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  8254  0AD1  3050               	movlw	80
  8255  0AD2  00A6               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  8256  0AD3  3000               	movlw	0
  8257  0AD4  00A7               	movwf	(??_USBCtrlEPAllowStatusStage^(0+128)+1)
  8258  0AD5  0023               	movlb	3	; select bank3
  8259  0AD6  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  8260  0AD7  3E02               	addlw	2
  8261  0AD8  0086               	movwf	6
  8262  0AD9  0187               	clrf	7
  8263  0ADA  0021               	movlb	1	; select bank1
  8264  0ADB  0826               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  8265  0ADC  3FC0               	movwi [0]fsr1
  8266  0ADD  0827               	movf	(??_USBCtrlEPAllowStatusStage^(0+128)+1),w
  8267  0ADE  3FC1               	movwi [1]fsr1
  8268                           
  8269                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
  8270  0ADF  3004               	movlw	4
  8271  0AE0  00A6               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  8272  0AE1  0023               	movlb	3	; select bank3
  8273  0AE2  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  8274  0AE3  0086               	movwf	6
  8275  0AE4  0187               	clrf	7
  8276  0AE5  0021               	movlb	1	; select bank1
  8277  0AE6  0826               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  8278  0AE7  0081               	movwf	1
  8279                           
  8280                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  8281  0AE8  0023               	movlb	3	; select bank3
  8282  0AE9  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  8283  0AEA  0086               	movwf	6
  8284  0AEB  0187               	clrf	7
  8285  0AEC  1781               	bsf	1,7
  8286                           
  8287                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
  8288  0AED  3001               	movlw	1
  8289  0AEE  0021               	movlb	1	; select bank1
  8290  0AEF  00A6               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  8291  0AF0  0826               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  8292  0AF1  0023               	movlb	3	; select bank3
  8293  0AF2  00DD               	movwf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  8294                           
  8295                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
  8296  0AF3  0021               	movlb	1	; select bank1
  8297  0AF4  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8298  0AF5  3E01               	addlw	1
  8299  0AF6  00A6               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  8300  0AF7  3000               	movlw	0
  8301  0AF8  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8302  0AF9  00A7               	movwf	(??_USBCtrlEPAllowStatusStage+1)^(0+128)
  8303  0AFA  0826               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  8304  0AFB  0086               	movwf	6
  8305  0AFC  0827               	movf	(??_USBCtrlEPAllowStatusStage+1)^(0+128),w
  8306  0AFD  0087               	movwf	7
  8307  0AFE  3008               	movlw	8
  8308  0AFF  0081               	movwf	1
  8309                           
  8310                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  8311  0B00  3050               	movlw	80
  8312  0B01  00A6               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  8313  0B02  3000               	movlw	0
  8314  0B03  00A7               	movwf	(??_USBCtrlEPAllowStatusStage^(0+128)+1)
  8315  0B04  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8316  0B05  0086               	movwf	6
  8317  0B06  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8318  0B07  0087               	movwf	7
  8319  0B08  3142               	addfsr 1,2
  8320  0B09  0826               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  8321  0B0A  3FC0               	movwi [0]fsr1
  8322  0B0B  0827               	movf	(??_USBCtrlEPAllowStatusStage^(0+128)+1),w
  8323  0B0C  3FC1               	movwi [1]fsr1
  8324                           
  8325                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
  8326  0B0D  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8327  0B0E  0086               	movwf	6
  8328  0B0F  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8329  0B10  0087               	movwf	7
  8330  0B11  3080               	movlw	128
  8331  0B12  0081               	movwf	1
  8332  0B13  0008               	return
  8333  0B14                     __end_of_USBCtrlEPAllowStatusStage:	
  8334                           
  8335                           	psect	text32
  8336  093B                     __ptext32:	
  8337 ;; *************** function _USBCtrlTrfInHandler *****************
  8338 ;; Defined at:
  8339 ;;		line 2592 in file "mcc_generated_files/usb/usb_device.c"
  8340 ;; Parameters:    Size  Location     Type
  8341 ;;		None
  8342 ;; Auto vars:     Size  Location     Type
  8343 ;;  lastDTS         1   11[BANK1 ] unsigned char 
  8344 ;; Return value:  Size  Location     Type
  8345 ;;                  1    wreg      void 
  8346 ;; Registers used:
  8347 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8348 ;; Tracked objects:
  8349 ;;		On entry : 0/0
  8350 ;;		On exit  : 0/0
  8351 ;;		Unchanged: 0/0
  8352 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8354 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8355 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8356 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8357 ;;Total ram usage:        3 bytes
  8358 ;; Hardware stack levels used:    1
  8359 ;; Hardware stack levels required when called:   11
  8360 ;; This function calls:
  8361 ;;		_USBCtrlTrfTxService
  8362 ;; This function is called by:
  8363 ;;		_USBCtrlEPService
  8364 ;; This function uses a non-reentrant model
  8365 ;;
  8366                           
  8367                           
  8368                           ;psect for function _USBCtrlTrfInHandler
  8369  093B                     _USBCtrlTrfInHandler:	
  8370                           
  8371                           ;usb_device.c: 2594: uint8_t lastDTS;
  8372                           ;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  8373                           
  8374                           ;incstack = 0
  8375                           ; Regs used in _USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8376  093B  0023               	movlb	3	; select bank3
  8377  093C  0837               	movf	_pBDTEntryIn^(0+384),w
  8378  093D  0086               	movwf	6
  8379  093E  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  8380  093F  0087               	movwf	7
  8381  0940  3000               	movlw	0
  8382  0941  1B01               	btfsc	1,6
  8383  0942  3001               	movlw	1
  8384  0943  0021               	movlb	1	; select bank1
  8385  0944  00AB               	movwf	USBCtrlTrfInHandler@lastDTS^(0+128)
  8386                           
  8387                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  8388  0945  3004               	movlw	4
  8389  0946  0023               	movlb	3	; select bank3
  8390  0947  0637               	xorwf	_pBDTEntryIn^(0+384),w
  8391  0948  00B7               	movwf	_pBDTEntryIn^(0+384)
  8392  0949  3000               	movlw	0
  8393  094A  0638               	xorwf	(_pBDTEntryIn+1)^(0+384),w
  8394  094B  00B8               	movwf	(_pBDTEntryIn+1)^(0+384)
  8395                           
  8396                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
  8397  094C  3008               	movlw	8
  8398  094D  0665               	xorwf	_USBDeviceState^(0+384),w	;volatile
  8399  094E  1D03               	btfss	3,2
  8400  094F  2960               	goto	l7972
  8401                           
  8402                           ;usb_device.c: 2605: {
  8403                           ;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
  8404  0950  0020               	movlb	0	; select bank0
  8405  0951  0852               	movf	82,w	;volatile
  8406  0952  397F               	andlw	127
  8407  0953  003D               	movlb	29	; select bank29
  8408  0954  0096               	movwf	22	;volatile
  8409                           
  8410                           ;usb_device.c: 2607: if(UADDR != 0u)
  8411  0955  0816               	movf	22,w	;volatile
  8412  0956  1903               	btfsc	3,2
  8413  0957  295A               	goto	l7970
  8414                           
  8415                           ;usb_device.c: 2608: {
  8416                           ;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
  8417  0958  3010               	movlw	16
  8418  0959  295B               	goto	L7
  8419  095A                     l7970:	
  8420                           ;usb_device.c: 2610: }
  8421                           
  8422                           
  8423                           ;usb_device.c: 2611: else
  8424                           ;usb_device.c: 2612: {
  8425                           ;usb_device.c: 2613: USBDeviceState=DEFAULT_STATE;
  8426  095A  3004               	movlw	4
  8427  095B                     L7:	
  8428  095B  0021               	movlb	1	; select bank1
  8429  095C  00A9               	movwf	??_USBCtrlTrfInHandler^(0+128)
  8430  095D  0829               	movf	??_USBCtrlTrfInHandler^(0+128),w
  8431  095E  0023               	movlb	3	; select bank3
  8432  095F  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
  8433  0960                     l7972:	
  8434                           
  8435                           ;usb_device.c: 2614: }
  8436                           ;usb_device.c: 2615: }
  8437                           ;usb_device.c: 2618: if(controlTransferState == 1)
  8438  0960  0362               	decf	_controlTransferState^(0+384),w	;volatile
  8439  0961  1D03               	btfss	3,2
  8440  0962  29A5               	goto	l578
  8441                           
  8442                           ;usb_device.c: 2619: {
  8443                           ;usb_device.c: 2620: pBDTEntryIn[0]->ADR = (((uint16_t)(CtrlTrfData)) & 0x7FFF);
  8444  0963  3058               	movlw	88
  8445  0964  0021               	movlb	1	; select bank1
  8446  0965  00A9               	movwf	??_USBCtrlTrfInHandler^(0+128)
  8447  0966  3000               	movlw	0
  8448  0967  00AA               	movwf	(??_USBCtrlTrfInHandler^(0+128)+1)
  8449  0968  0023               	movlb	3	; select bank3
  8450  0969  0837               	movf	_pBDTEntryIn^(0+384),w
  8451  096A  0086               	movwf	6
  8452  096B  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  8453  096C  0087               	movwf	7
  8454  096D  3142               	addfsr 1,2
  8455  096E  0021               	movlb	1	; select bank1
  8456  096F  0829               	movf	??_USBCtrlTrfInHandler^(0+128),w
  8457  0970  3FC0               	movwi [0]fsr1
  8458  0971  082A               	movf	(??_USBCtrlTrfInHandler^(0+128)+1),w
  8459  0972  3FC1               	movwi [1]fsr1
  8460                           
  8461                           ;usb_device.c: 2621: USBCtrlTrfTxService();
  8462  0973  318A  2220  3189   	fcall	_USBCtrlTrfTxService
  8463                           
  8464                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
  8465  0976  3002               	movlw	2
  8466  0977  0023               	movlb	3	; select bank3
  8467  0978  0663               	xorwf	_shortPacketStatus^(0+384),w	;volatile
  8468  0979  1D03               	btfss	3,2
  8469  097A  2987               	goto	l7982
  8470                           
  8471                           ;usb_device.c: 2628: {
  8472                           ;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
  8473  097B  0837               	movf	_pBDTEntryIn^(0+384),w
  8474  097C  0086               	movwf	6
  8475  097D  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  8476  097E  0087               	movwf	7
  8477  097F  3004               	movlw	4
  8478  0980  0081               	movwf	1
  8479                           
  8480                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
  8481  0981  0837               	movf	_pBDTEntryIn^(0+384),w
  8482  0982  0086               	movwf	6
  8483  0983  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  8484  0984  0087               	movwf	7
  8485  0985  1781               	bsf	1,7
  8486                           
  8487                           ;usb_device.c: 2633: }
  8488  0986  0008               	return
  8489  0987                     l7982:	
  8490                           
  8491                           ;usb_device.c: 2634: else
  8492                           ;usb_device.c: 2635: {
  8493                           ;usb_device.c: 2636: if(lastDTS == 0)
  8494  0987  0021               	movlb	1	; select bank1
  8495  0988  082B               	movf	USBCtrlTrfInHandler@lastDTS^(0+128),w
  8496  0989  1D03               	btfss	3,2
  8497  098A  2998               	goto	l7986
  8498                           
  8499                           ;usb_device.c: 2637: {
  8500                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  8501  098B  0023               	movlb	3	; select bank3
  8502  098C  0837               	movf	_pBDTEntryIn^(0+384),w
  8503  098D  0086               	movwf	6
  8504  098E  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  8505  098F  0087               	movwf	7
  8506  0990  3048               	movlw	72
  8507  0991  0081               	movwf	1
  8508                           
  8509                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
  8510  0992  0837               	movf	_pBDTEntryIn^(0+384),w
  8511  0993  0086               	movwf	6
  8512  0994  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  8513  0995  0087               	movwf	7
  8514  0996  1781               	bsf	1,7
  8515                           
  8516                           ;usb_device.c: 2640: }
  8517  0997  0008               	return
  8518  0998                     l7986:	
  8519                           
  8520                           ;usb_device.c: 2641: else
  8521                           ;usb_device.c: 2642: {
  8522                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
  8523  0998  0023               	movlb	3	; select bank3
  8524  0999  0837               	movf	_pBDTEntryIn^(0+384),w
  8525  099A  0086               	movwf	6
  8526  099B  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  8527  099C  0087               	movwf	7
  8528  099D  3008               	movlw	8
  8529  099E  0081               	movwf	1
  8530                           
  8531                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
  8532  099F  0837               	movf	_pBDTEntryIn^(0+384),w
  8533  09A0  0086               	movwf	6
  8534  09A1  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  8535  09A2  0087               	movwf	7
  8536  09A3  1781               	bsf	1,7
  8537                           
  8538                           ;usb_device.c: 2645: }
  8539                           ;usb_device.c: 2646: }
  8540                           ;usb_device.c: 2647: }
  8541  09A4  0008               	return
  8542  09A5                     l578:	
  8543                           
  8544                           ;usb_device.c: 2648: else
  8545                           ;usb_device.c: 2649: {
  8546                           ;usb_device.c: 2653: if(outPipes[0].info.bits.busy == 1)
  8547  09A5  1FB2               	btfss	(_outPipes^(0+384)+2),7	;volatile
  8548  09A6  29AA               	goto	l7990
  8549                           
  8550                           ;usb_device.c: 2656: {
  8551                           ;usb_device.c: 2657: outPipes[0].pFunc();
  8552  09A7  0835               	movf	(low ((_outPipes| (0+256)+5)))^(0+128),w	;volatile
  8553  09A8  0836               	movf	((low ((_outPipes| (0+256)+5))+1))^(0+128),w	;volatile
  8554                           
  8555                           ;usb_device.c: 2658: }
  8556                           ;usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
  8557  09A9  13B2               	bcf	(_outPipes^(0+384)+2),7	;volatile
  8558  09AA                     l7990:	
  8559                           
  8560                           ;usb_device.c: 2660: }
  8561                           ;usb_device.c: 2662: controlTransferState = 0;
  8562  09AA  01E2               	clrf	_controlTransferState^(0+384)	;volatile
  8563  09AB  0008               	return
  8564  09AC                     __end_of_USBCtrlTrfInHandler:	
  8565                           
  8566                           	psect	text33
  8567  0A20                     __ptext33:	
  8568 ;; *************** function _USBCtrlTrfTxService *****************
  8569 ;; Defined at:
  8570 ;;		line 1771 in file "mcc_generated_files/usb/usb_device.c"
  8571 ;; Parameters:    Size  Location     Type
  8572 ;;		None
  8573 ;; Auto vars:     Size  Location     Type
  8574 ;;  byteToSend      1    8[BANK1 ] unsigned char 
  8575 ;; Return value:  Size  Location     Type
  8576 ;;                  1    wreg      void 
  8577 ;; Registers used:
  8578 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  8579 ;; Tracked objects:
  8580 ;;		On entry : 0/0
  8581 ;;		On exit  : 0/0
  8582 ;;		Unchanged: 0/0
  8583 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8585 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8586 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8587 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8588 ;;Total ram usage:        3 bytes
  8589 ;; Hardware stack levels used:    1
  8590 ;; Hardware stack levels required when called:   10
  8591 ;; This function calls:
  8592 ;;		Nothing
  8593 ;; This function is called by:
  8594 ;;		_USBCtrlEPAllowDataStage
  8595 ;;		_USBCtrlTrfInHandler
  8596 ;; This function uses a non-reentrant model
  8597 ;;
  8598                           
  8599                           
  8600                           ;psect for function _USBCtrlTrfTxService
  8601  0A20                     _USBCtrlTrfTxService:	
  8602                           
  8603                           ;usb_device.c: 1773: uint8_t byteToSend;
  8604                           ;usb_device.c: 1777: byteToSend = 8;
  8605                           
  8606                           ;incstack = 0
  8607                           ; Regs used in _USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
  8608  0A20  3008               	movlw	8
  8609  0A21  0021               	movlb	1	; select bank1
  8610  0A22  00A6               	movwf	??_USBCtrlTrfTxService^(0+128)
  8611  0A23  0826               	movf	??_USBCtrlTrfTxService^(0+128),w
  8612  0A24  00A8               	movwf	USBCtrlTrfTxService@byteToSend^(0+128)
  8613                           
  8614                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
  8615  0A25  3000               	movlw	0
  8616  0A26  0247               	subwf	((_inPipes+1)^(0+128)+3),w	;volatile
  8617  0A27  3008               	movlw	8
  8618  0A28  1903               	skipnz
  8619  0A29  0246               	subwf	(_inPipes^(0+128)+3),w	;volatile
  8620  0A2A  1803               	skipnc
  8621  0A2B  2A3F               	goto	l478
  8622                           
  8623                           ;usb_device.c: 1779: {
  8624                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
  8625  0A2C  0846               	movf	(_inPipes^(0+128)+3),w	;volatile
  8626  0A2D  00A6               	movwf	??_USBCtrlTrfTxService^(0+128)
  8627  0A2E  0826               	movf	??_USBCtrlTrfTxService^(0+128),w
  8628  0A2F  00A8               	movwf	USBCtrlTrfTxService@byteToSend^(0+128)
  8629                           
  8630                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
  8631  0A30  0023               	movlb	3	; select bank3
  8632  0A31  0863               	movf	_shortPacketStatus^(0+384),w	;volatile
  8633  0A32  1D03               	btfss	3,2
  8634  0A33  2A36               	goto	l7478
  8635                           
  8636                           ;usb_device.c: 1788: {
  8637                           ;usb_device.c: 1789: shortPacketStatus = 1;
  8638  0A34  3001               	movlw	1
  8639  0A35  2A3A               	goto	L8
  8640  0A36                     l7478:	
  8641                           ;usb_device.c: 1790: }
  8642                           
  8643                           
  8644                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
  8645  0A36  0363               	decf	_shortPacketStatus^(0+384),w	;volatile
  8646  0A37  1D03               	btfss	3,2
  8647  0A38  2A3F               	goto	l478
  8648                           
  8649                           ;usb_device.c: 1792: {
  8650                           ;usb_device.c: 1793: shortPacketStatus = 2;
  8651  0A39  3002               	movlw	2
  8652  0A3A                     L8:	
  8653  0A3A  0021               	movlb	1	; select bank1
  8654  0A3B  00A6               	movwf	??_USBCtrlTrfTxService^(0+128)
  8655  0A3C  0826               	movf	??_USBCtrlTrfTxService^(0+128),w
  8656  0A3D  0023               	movlb	3	; select bank3
  8657  0A3E  00E3               	movwf	_shortPacketStatus^(0+384)	;volatile
  8658  0A3F                     l478:	
  8659                           
  8660                           ;usb_device.c: 1794: }
  8661                           ;usb_device.c: 1795: }
  8662                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
  8663  0A3F  0021               	movlb	1	; select bank1
  8664  0A40  0828               	movf	USBCtrlTrfTxService@byteToSend^(0+128),w
  8665  0A41  00A6               	movwf	??_USBCtrlTrfTxService^(0+128)
  8666  0A42  01A7               	clrf	(??_USBCtrlTrfTxService^(0+128)+1)
  8667  0A43  0826               	movf	??_USBCtrlTrfTxService^(0+128),w
  8668  0A44  02C6               	subwf	(_inPipes^(0+128)+3),f	;volatile
  8669  0A45  0827               	movf	(??_USBCtrlTrfTxService+1)^(0+128),w
  8670  0A46  3BC7               	subwfb	((_inPipes+1)^(0+128)+3),f	;volatile
  8671                           
  8672                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
  8673  0A47  0023               	movlb	3	; select bank3
  8674  0A48  0837               	movf	_pBDTEntryIn^(0+384),w
  8675  0A49  3E01               	addlw	1
  8676  0A4A  0021               	movlb	1	; select bank1
  8677  0A4B  00A6               	movwf	??_USBCtrlTrfTxService^(0+128)
  8678  0A4C  3000               	movlw	0
  8679  0A4D  0023               	movlb	3	; select bank3
  8680  0A4E  3D38               	addwfc	(_pBDTEntryIn+1)^(0+384),w
  8681  0A4F  0021               	movlb	1	; select bank1
  8682  0A50  00A7               	movwf	(??_USBCtrlTrfTxService+1)^(0+128)
  8683  0A51  0826               	movf	??_USBCtrlTrfTxService^(0+128),w
  8684  0A52  0086               	movwf	6
  8685  0A53  0827               	movf	(??_USBCtrlTrfTxService+1)^(0+128),w
  8686  0A54  0087               	movwf	7
  8687  0A55  0828               	movf	USBCtrlTrfTxService@byteToSend^(0+128),w
  8688  0A56  0081               	movwf	1
  8689                           
  8690                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
  8691  0A57  3058               	movlw	88
  8692  0A58  00A6               	movwf	??_USBCtrlTrfTxService^(0+128)
  8693  0A59  0826               	movf	??_USBCtrlTrfTxService^(0+128),w
  8694  0A5A  0023               	movlb	3	; select bank3
  8695  0A5B  00E1               	movwf	_pDst^(0+384)
  8696                           
  8697                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
  8698  0A5C  0021               	movlb	1	; select bank1
  8699  0A5D  1C45               	btfss	(_inPipes^(0+128)+2),0	;volatile
  8700  0A5E  2A79               	goto	l7498
  8701  0A5F  2A96               	goto	l7508
  8702  0A60                     l7490:	
  8703                           ;usb_device.c: 1810: {
  8704                           ;usb_device.c: 1811: while(byteToSend)
  8705                           
  8706                           
  8707                           ;usb_device.c: 1812: {
  8708                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
  8709  0A60  0843               	movf	_inPipes^(0+128),w	;volatile
  8710  0A61  0084               	movwf	4
  8711  0A62  0844               	movf	(_inPipes+1)^(0+128),w	;volatile
  8712  0A63  0085               	movwf	5
  8713  0A64  0800               	movf	0,w	;code access
  8714  0A65  00A6               	movwf	??_USBCtrlTrfTxService^(0+128)
  8715  0A66  0023               	movlb	3	; select bank3
  8716  0A67  0861               	movf	_pDst^(0+384),w
  8717  0A68  0086               	movwf	6
  8718  0A69  0187               	clrf	7
  8719  0A6A  0021               	movlb	1	; select bank1
  8720  0A6B  0826               	movf	??_USBCtrlTrfTxService^(0+128),w
  8721  0A6C  0081               	movwf	1
  8722  0A6D  3001               	movlw	1
  8723  0A6E  07C3               	addwf	_inPipes^(0+128),f	;volatile
  8724  0A6F  3000               	movlw	0
  8725  0A70  3DC4               	addwfc	(_inPipes+1)^(0+128),f	;volatile
  8726  0A71  3001               	movlw	1
  8727  0A72  00A6               	movwf	??_USBCtrlTrfTxService^(0+128)
  8728  0A73  0826               	movf	??_USBCtrlTrfTxService^(0+128),w
  8729  0A74  0023               	movlb	3	; select bank3
  8730  0A75  07E1               	addwf	_pDst^(0+384),f
  8731                           
  8732                           ;usb_device.c: 1814: byteToSend--;
  8733  0A76  3001               	movlw	1
  8734  0A77  0021               	movlb	1	; select bank1
  8735  0A78  02A8               	subwf	USBCtrlTrfTxService@byteToSend^(0+128),f
  8736  0A79                     l7498:	
  8737  0A79  0828               	movf	USBCtrlTrfTxService@byteToSend^(0+128),w
  8738  0A7A  1903               	btfsc	3,2
  8739  0A7B  0008               	return
  8740  0A7C  2A60               	goto	l7490
  8741  0A7D                     l7500:	
  8742                           ;usb_device.c: 1817: else
  8743                           ;usb_device.c: 1818: {
  8744                           ;usb_device.c: 1819: while(byteToSend)
  8745                           
  8746                           ;usb_device.c: 1815: }
  8747                           ;usb_device.c: 1816: }
  8748                           
  8749                           
  8750                           ;usb_device.c: 1820: {
  8751                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
  8752  0A7D  0843               	movf	_inPipes^(0+128),w	;volatile
  8753  0A7E  0084               	movwf	4
  8754  0A7F  0844               	movf	(_inPipes+1)^(0+128),w	;volatile
  8755  0A80  0085               	movwf	5
  8756  0A81  0800               	movf	0,w	;code access
  8757  0A82  00A6               	movwf	??_USBCtrlTrfTxService^(0+128)
  8758  0A83  0023               	movlb	3	; select bank3
  8759  0A84  0861               	movf	_pDst^(0+384),w
  8760  0A85  0086               	movwf	6
  8761  0A86  0187               	clrf	7
  8762  0A87  0021               	movlb	1	; select bank1
  8763  0A88  0826               	movf	??_USBCtrlTrfTxService^(0+128),w
  8764  0A89  0081               	movwf	1
  8765  0A8A  3001               	movlw	1
  8766  0A8B  07C3               	addwf	_inPipes^(0+128),f	;volatile
  8767  0A8C  3000               	movlw	0
  8768  0A8D  3DC4               	addwfc	(_inPipes+1)^(0+128),f	;volatile
  8769  0A8E  3001               	movlw	1
  8770  0A8F  00A6               	movwf	??_USBCtrlTrfTxService^(0+128)
  8771  0A90  0826               	movf	??_USBCtrlTrfTxService^(0+128),w
  8772  0A91  0023               	movlb	3	; select bank3
  8773  0A92  07E1               	addwf	_pDst^(0+384),f
  8774                           
  8775                           ;usb_device.c: 1822: byteToSend--;
  8776  0A93  3001               	movlw	1
  8777  0A94  0021               	movlb	1	; select bank1
  8778  0A95  02A8               	subwf	USBCtrlTrfTxService@byteToSend^(0+128),f
  8779  0A96                     l7508:	
  8780  0A96  0828               	movf	USBCtrlTrfTxService@byteToSend^(0+128),w
  8781  0A97  1903               	btfsc	3,2
  8782  0A98  0008               	return
  8783  0A99  2A7D               	goto	l7500
  8784  0A9A                     __end_of_USBCtrlTrfTxService:	
  8785                           
  8786                           	psect	text34
  8787  1DB2                     __ptext34:	
  8788 ;; *************** function _SYSTEM_Initialize *****************
  8789 ;; Defined at:
  8790 ;;		line 73 in file "mcc_generated_files/mcc.c"
  8791 ;; Parameters:    Size  Location     Type
  8792 ;;		None
  8793 ;; Auto vars:     Size  Location     Type
  8794 ;;		None
  8795 ;; Return value:  Size  Location     Type
  8796 ;;                  1    wreg      void 
  8797 ;; Registers used:
  8798 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8799 ;; Tracked objects:
  8800 ;;		On entry : 0/0
  8801 ;;		On exit  : 0/0
  8802 ;;		Unchanged: 0/0
  8803 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8808 ;;Total ram usage:        0 bytes
  8809 ;; Hardware stack levels used:    1
  8810 ;; Hardware stack levels required when called:   11
  8811 ;; This function calls:
  8812 ;;		_OSCILLATOR_Initialize
  8813 ;;		_PIN_MANAGER_Initialize
  8814 ;;		_USBDeviceAttach
  8815 ;;		_USBDeviceInit
  8816 ;;		_WDT_Initialize
  8817 ;; This function is called by:
  8818 ;;		_main
  8819 ;; This function uses a non-reentrant model
  8820 ;;
  8821                           
  8822                           
  8823                           ;psect for function _SYSTEM_Initialize
  8824  1DB2                     _SYSTEM_Initialize:	
  8825                           
  8826                           ;mcc.c: 76: PIN_MANAGER_Initialize();
  8827                           
  8828                           ;incstack = 0
  8829                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8830  1DB2  319E  2601  319D   	fcall	_PIN_MANAGER_Initialize
  8831                           
  8832                           ;mcc.c: 77: OSCILLATOR_Initialize();
  8833  1DB5  319D  258E  319D   	fcall	_OSCILLATOR_Initialize
  8834                           
  8835                           ;mcc.c: 78: WDT_Initialize();
  8836  1DB8  319D  254C  319D   	fcall	_WDT_Initialize
  8837                           
  8838                           ;mcc.c: 79: USBDeviceInit();
  8839  1DBB  3185  257E  319D   	fcall	_USBDeviceInit
  8840                           
  8841                           ;mcc.c: 80: USBDeviceAttach();
  8842  1DBE  319E  26C3         	fcall	_USBDeviceAttach
  8843  1DC0  0008               	return
  8844  1DC1                     __end_of_SYSTEM_Initialize:	
  8845                           
  8846                           	psect	text35
  8847  1D4C                     __ptext35:	
  8848 ;; *************** function _WDT_Initialize *****************
  8849 ;; Defined at:
  8850 ;;		line 99 in file "mcc_generated_files/mcc.c"
  8851 ;; Parameters:    Size  Location     Type
  8852 ;;		None
  8853 ;; Auto vars:     Size  Location     Type
  8854 ;;		None
  8855 ;; Return value:  Size  Location     Type
  8856 ;;                  1    wreg      void 
  8857 ;; Registers used:
  8858 ;;		wreg
  8859 ;; Tracked objects:
  8860 ;;		On entry : 0/0
  8861 ;;		On exit  : 0/0
  8862 ;;		Unchanged: 0/0
  8863 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8868 ;;Total ram usage:        0 bytes
  8869 ;; Hardware stack levels used:    1
  8870 ;; Hardware stack levels required when called:   10
  8871 ;; This function calls:
  8872 ;;		Nothing
  8873 ;; This function is called by:
  8874 ;;		_SYSTEM_Initialize
  8875 ;; This function uses a non-reentrant model
  8876 ;;
  8877                           
  8878                           
  8879                           ;psect for function _WDT_Initialize
  8880  1D4C                     _WDT_Initialize:	
  8881                           
  8882                           ;mcc.c: 102: WDTCON = 0x16;
  8883                           
  8884                           ;incstack = 0
  8885                           ; Regs used in _WDT_Initialize: [wreg]
  8886  1D4C  3016               	movlw	22
  8887  1D4D  0021               	movlb	1	; select bank1
  8888  1D4E  0097               	movwf	23	;volatile
  8889  1D4F  0008               	return
  8890  1D50                     __end_of_WDT_Initialize:	
  8891                           
  8892                           	psect	text36
  8893  057E                     __ptext36:	
  8894 ;; *************** function _USBDeviceInit *****************
  8895 ;; Defined at:
  8896 ;;		line 277 in file "mcc_generated_files/usb/usb_device.c"
  8897 ;; Parameters:    Size  Location     Type
  8898 ;;		None
  8899 ;; Auto vars:     Size  Location     Type
  8900 ;;  p               2    7[BANK1 ] PTR unsigned char 
  8901 ;;		 -> UEP1(1), 
  8902 ;;  i               1    9[BANK1 ] unsigned char 
  8903 ;;  i               1   10[BANK1 ] unsigned char 
  8904 ;; Return value:  Size  Location     Type
  8905 ;;                  1    wreg      void 
  8906 ;; Registers used:
  8907 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8908 ;; Tracked objects:
  8909 ;;		On entry : 0/0
  8910 ;;		On exit  : 0/0
  8911 ;;		Unchanged: 0/0
  8912 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8914 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8915 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8916 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  8917 ;;Total ram usage:        5 bytes
  8918 ;; Hardware stack levels used:    1
  8919 ;; Hardware stack levels required when called:   10
  8920 ;; This function calls:
  8921 ;;		Nothing
  8922 ;; This function is called by:
  8923 ;;		_SYSTEM_Initialize
  8924 ;;		_USBDeviceTasks
  8925 ;; This function uses a non-reentrant model
  8926 ;;
  8927                           
  8928                           
  8929                           ;psect for function _USBDeviceInit
  8930  057E                     _USBDeviceInit:	
  8931                           
  8932                           ;usb_device.c: 279: uint8_t i;
  8933                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  8934                           
  8935                           ;incstack = 0
  8936                           ; Regs used in _USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  8937  057E  0021               	movlb	1	; select bank1
  8938  057F  1112               	bcf	18,2	;volatile
  8939                           
  8940                           ;usb_device.c: 285: ;
  8941                           ;usb_device.c: 288: {UEIR = 0;};
  8942  0580  003D               	movlb	29	; select bank29
  8943  0581  0193               	clrf	19	;volatile
  8944                           
  8945                           ;usb_device.c: 291: {UIR = 0;};
  8946  0582  0190               	clrf	16	;volatile
  8947                           
  8948                           ;usb_device.c: 294: UEP0 = 0;
  8949  0583  0198               	clrf	24	;volatile
  8950                           
  8951                           ;usb_device.c: 296: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 0
      +                          ; };
  8952  0584  300E               	movlw	14
  8953  0585  0021               	movlb	1	; select bank1
  8954  0586  00A8               	movwf	(USBDeviceInit@p+1)^(0+128)
  8955  0587  3099               	movlw	153
  8956  0588  00A7               	movwf	USBDeviceInit@p^(0+128)
  8957  0589  01A9               	clrf	USBDeviceInit@i_1491^(0+128)
  8958  058A  3002               	movlw	2
  8959  058B  0229               	subwf	USBDeviceInit@i_1491^(0+128),w
  8960  058C  1803               	btfsc	3,0
  8961  058D  2D9F               	goto	l8010
  8962  058E                     l8002:	
  8963  058E  0827               	movf	USBDeviceInit@p^(0+128),w
  8964  058F  0086               	movwf	6
  8965  0590  0828               	movf	(USBDeviceInit@p+1)^(0+128),w
  8966  0591  0087               	movwf	7
  8967  0592  0181               	clrf	1
  8968  0593  3001               	movlw	1
  8969  0594  07A7               	addwf	USBDeviceInit@p^(0+128),f
  8970  0595  3000               	movlw	0
  8971  0596  3DA8               	addwfc	(USBDeviceInit@p+1)^(0+128),f
  8972  0597  3001               	movlw	1
  8973  0598  00A6               	movwf	??_USBDeviceInit^(0+128)
  8974  0599  0826               	movf	??_USBDeviceInit^(0+128),w
  8975  059A  07A9               	addwf	USBDeviceInit@i_1491^(0+128),f
  8976  059B  3002               	movlw	2
  8977  059C  0229               	subwf	USBDeviceInit@i_1491^(0+128),w
  8978  059D  1C03               	skipc
  8979  059E  2D8E               	goto	l8002
  8980  059F                     l8010:	
  8981                           
  8982                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  8983  059F  3016               	movlw	22
  8984  05A0  003D               	movlb	29	; select bank29
  8985  05A1  0091               	movwf	17	;volatile
  8986  05A2  309F               	movlw	159
  8987  05A3  0097               	movwf	23	;volatile
  8988  05A4  307B               	movlw	123
  8989  05A5  0092               	movwf	18	;volatile
  8990                           
  8991                           ;usb_device.c: 301: ;
  8992                           ;usb_device.c: 304: ;
  8993                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  8994  05A6  0021               	movlb	1	; select bank1
  8995  05A7  01AA               	clrf	USBDeviceInit@i^(0+128)
  8996  05A8  300C               	movlw	12
  8997  05A9  022A               	subwf	USBDeviceInit@i^(0+128),w
  8998  05AA  1803               	btfsc	3,0
  8999  05AB  2DC5               	goto	l380
  9000  05AC                     l8018:	
  9001                           
  9002                           ;usb_device.c: 308: {
  9003                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  9004  05AC  082A               	movf	USBDeviceInit@i^(0+128),w
  9005  05AD  00A6               	movwf	??_USBDeviceInit^(0+128)
  9006  05AE  3001               	movlw	1
  9007  05AF                     u7535:	
  9008  05AF  35A6               	lslf	??_USBDeviceInit^(0+128),f
  9009  05B0  3EFF               	addlw	-1
  9010  05B1  1D03               	skipz
  9011  05B2  2DAF               	goto	u7535
  9012  05B3  3526               	lslf	??_USBDeviceInit^(0+128),w
  9013  05B4  3E20               	addlw	32
  9014  05B5  0086               	movwf	6
  9015  05B6  0187               	clrf	7
  9016  05B7  3000               	movlw	0
  9017  05B8  3FC0               	movwi [0]fsr1
  9018  05B9  3000               	movlw	0
  9019  05BA  3FC1               	movwi [1]fsr1
  9020  05BB  3FC2               	movwi [2]fsr1
  9021  05BC  3FC3               	movwi [3]fsr1
  9022  05BD  3001               	movlw	1
  9023  05BE  00A6               	movwf	??_USBDeviceInit^(0+128)
  9024  05BF  0826               	movf	??_USBDeviceInit^(0+128),w
  9025  05C0  07AA               	addwf	USBDeviceInit@i^(0+128),f
  9026  05C1  300C               	movlw	12
  9027  05C2  022A               	subwf	USBDeviceInit@i^(0+128),w
  9028  05C3  1C03               	skipc
  9029  05C4  2DAC               	goto	l8018
  9030  05C5                     l380:	
  9031                           
  9032                           ;usb_device.c: 310: }
  9033                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  9034  05C5  003D               	movlb	29	; select bank29
  9035  05C6  170E               	bsf	14,6	;volatile
  9036                           
  9037                           ;usb_device.c: 316: UADDR = 0x00;
  9038  05C7  0196               	clrf	22	;volatile
  9039                           
  9040                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  9041  05C8  120E               	bcf	14,4	;volatile
  9042                           
  9043                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  9044  05C9  130E               	bcf	14,6	;volatile
  9045  05CA                     l8030:	
  9046                           ;usb_device.c: 325: do
  9047                           
  9048                           
  9049                           ;usb_device.c: 326: {
  9050                           ;usb_device.c: 327: (UIR &= 0xF7);
  9051  05CA  30F7               	movlw	247
  9052  05CB  0021               	movlb	1	; select bank1
  9053  05CC  00A6               	movwf	??_USBDeviceInit^(0+128)
  9054  05CD  0826               	movf	??_USBDeviceInit^(0+128),w
  9055  05CE  003D               	movlb	29	; select bank29
  9056  05CF  0590               	andwf	16,f	;volatile
  9057                           
  9058                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  9059  05D0  0021               	movlb	1	; select bank1
  9060  05D1  01C5               	clrf	(_inPipes^(0+128)+2)	;volatile
  9061                           
  9062                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  9063  05D2  0023               	movlb	3	; select bank3
  9064  05D3  01B2               	clrf	(_outPipes^(0+384)+2)	;volatile
  9065                           
  9066                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  9067  05D4  01B3               	clrf	(_outPipes^(0+384)+3)	;volatile
  9068  05D5  01B4               	clrf	((_outPipes+1)^(0+384)+3)	;volatile
  9069                           
  9070                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  9071  05D6  003D               	movlb	29	; select bank29
  9072  05D7  1990               	btfsc	16,3	;volatile
  9073  05D8  2DCA               	goto	l8030
  9074                           
  9075                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  9076  05D9  3001               	movlw	1
  9077  05DA  0021               	movlb	1	; select bank1
  9078  05DB  00A6               	movwf	??_USBDeviceInit^(0+128)
  9079  05DC  0826               	movf	??_USBDeviceInit^(0+128),w
  9080  05DD  0023               	movlb	3	; select bank3
  9081  05DE  00DA               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  9082                           
  9083                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  9084  05DF  3001               	movlw	1
  9085  05E0  0021               	movlb	1	; select bank1
  9086  05E1  00A6               	movwf	??_USBDeviceInit^(0+128)
  9087  05E2  0826               	movf	??_USBDeviceInit^(0+128),w
  9088  05E3  0023               	movlb	3	; select bank3
  9089  05E4  00D9               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  9090                           
  9091                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  9092  05E5  01D8               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  9093                           
  9094                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  9095  05E6  01D7               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  9096                           
  9097                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  9098  05E7  01DF               	clrf	_USBBusIsSuspended^(0+384)	;volatile
  9099                           
  9100                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  9101  05E8  0021               	movlb	1	; select bank1
  9102  05E9  01AA               	clrf	USBDeviceInit@i^(0+128)
  9103  05EA  3003               	movlw	3
  9104  05EB  022A               	subwf	USBDeviceInit@i^(0+128),w
  9105  05EC  1803               	btfsc	3,0
  9106  05ED  2E12               	goto	l8058
  9107  05EE                     l8052:	
  9108                           
  9109                           ;usb_device.c: 346: {
  9110                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  9111  05EE  352A               	lslf	USBDeviceInit@i^(0+128),w
  9112  05EF  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  9113  05F0  0086               	movwf	6
  9114  05F1  3001               	movlw	1	; select bank3/4
  9115  05F2  0087               	movwf	7
  9116  05F3  3000               	movlw	0
  9117  05F4  3FC0               	movwi [0]fsr1
  9118  05F5  3FC1               	movwi [1]fsr1
  9119                           
  9120                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  9121  05F6  352A               	lslf	USBDeviceInit@i^(0+128),w
  9122  05F7  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  9123  05F8  0086               	movwf	6
  9124  05F9  3001               	movlw	1	; select bank3/4
  9125  05FA  0087               	movwf	7
  9126  05FB  3000               	movlw	0
  9127  05FC  3FC0               	movwi [0]fsr1
  9128  05FD  3FC1               	movwi [1]fsr1
  9129                           
  9130                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  9131  05FE  082A               	movf	USBDeviceInit@i^(0+128),w
  9132  05FF  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  9133  0600  0086               	movwf	6
  9134  0601  3001               	movlw	1	; select bank3/4
  9135  0602  0087               	movwf	7
  9136  0603  0181               	clrf	1
  9137                           
  9138                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  9139  0604  082A               	movf	USBDeviceInit@i^(0+128),w
  9140  0605  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  9141  0606  0086               	movwf	6
  9142  0607  3001               	movlw	1	; select bank3/4
  9143  0608  0087               	movwf	7
  9144  0609  0181               	clrf	1
  9145  060A  3001               	movlw	1
  9146  060B  00A6               	movwf	??_USBDeviceInit^(0+128)
  9147  060C  0826               	movf	??_USBDeviceInit^(0+128),w
  9148  060D  07AA               	addwf	USBDeviceInit@i^(0+128),f
  9149  060E  3003               	movlw	3
  9150  060F  022A               	subwf	USBDeviceInit@i^(0+128),w
  9151  0610  1C03               	skipc
  9152  0611  2DEE               	goto	l8052
  9153  0612                     l8058:	
  9154                           
  9155                           ;usb_device.c: 351: }
  9156                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  9157  0612  3028               	movlw	40
  9158  0613  0023               	movlb	3	; select bank3
  9159  0614  00B7               	movwf	_pBDTEntryIn^(0+384)
  9160  0615  3000               	movlw	0
  9161  0616  00B8               	movwf	(_pBDTEntryIn+1)^(0+384)
  9162                           
  9163                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  9164  0617  3016               	movlw	22
  9165  0618  003D               	movlb	29	; select bank29
  9166  0619  0098               	movwf	24	;volatile
  9167                           
  9168                           ;usb_device.c: 358: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  9169  061A  3000               	movlw	0
  9170  061B  0020               	movlb	0	; select bank0
  9171  061C  00A3               	movwf	35	;volatile
  9172  061D  3050               	movlw	80
  9173  061E  00A2               	movwf	34	;volatile
  9174                           
  9175                           ;usb_device.c: 359: BDT[0].CNT = 8;
  9176  061F  3008               	movlw	8
  9177  0620  00A1               	movwf	33	;volatile
  9178                           
  9179                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  9180  0621  3004               	movlw	4
  9181  0622  0021               	movlb	1	; select bank1
  9182  0623  00A6               	movwf	??_USBDeviceInit^(0+128)
  9183  0624  0826               	movf	??_USBDeviceInit^(0+128),w
  9184  0625  0020               	movlb	0	; select bank0
  9185  0626  00A0               	movwf	32	;volatile
  9186                           
  9187                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  9188  0627  17A0               	bsf	32,7	;volatile
  9189                           
  9190                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  9191  0628  0023               	movlb	3	; select bank3
  9192  0629  01EE               	clrf	_USBActiveConfiguration^(0+384)	;volatile
  9193                           
  9194                           ;usb_device.c: 366: USB1msTickCount = 0;
  9195  062A  3000               	movlw	0
  9196  062B  00C6               	movwf	(_USB1msTickCount+3)^(0+384)	;volatile
  9197  062C  3000               	movlw	0
  9198  062D  00C5               	movwf	(_USB1msTickCount+2)^(0+384)	;volatile
  9199  062E  3000               	movlw	0
  9200  062F  00C4               	movwf	(_USB1msTickCount+1)^(0+384)	;volatile
  9201  0630  3000               	movlw	0
  9202  0631  00C3               	movwf	_USB1msTickCount^(0+384)	;volatile
  9203                           
  9204                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  9205  0632  01D6               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  9206                           
  9207                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  9208  0633  01E5               	clrf	_USBDeviceState^(0+384)	;volatile
  9209  0634  0008               	return
  9210  0635                     __end_of_USBDeviceInit:	
  9211                           
  9212                           	psect	text37
  9213  1EC3                     __ptext37:	
  9214 ;; *************** function _USBDeviceAttach *****************
  9215 ;; Defined at:
  9216 ;;		line 1352 in file "mcc_generated_files/usb/usb_device.c"
  9217 ;; Parameters:    Size  Location     Type
  9218 ;;		None
  9219 ;; Auto vars:     Size  Location     Type
  9220 ;;		None
  9221 ;; Return value:  Size  Location     Type
  9222 ;;                  1    wreg      void 
  9223 ;; Registers used:
  9224 ;;		wreg, status,2, status,0
  9225 ;; Tracked objects:
  9226 ;;		On entry : 0/0
  9227 ;;		On exit  : 0/0
  9228 ;;		Unchanged: 0/0
  9229 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9232 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9233 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9234 ;;Total ram usage:        1 bytes
  9235 ;; Hardware stack levels used:    1
  9236 ;; Hardware stack levels required when called:   10
  9237 ;; This function calls:
  9238 ;;		Nothing
  9239 ;; This function is called by:
  9240 ;;		_SYSTEM_Initialize
  9241 ;; This function uses a non-reentrant model
  9242 ;;
  9243                           
  9244                           
  9245                           ;psect for function _USBDeviceAttach
  9246  1EC3                     _USBDeviceAttach:	
  9247                           
  9248                           ;usb_device.c: 1356: {
  9249                           ;usb_device.c: 1357: if(1 == 1)
  9250                           
  9251                           ;incstack = 0
  9252                           ; Regs used in _USBDeviceAttach: [wreg+status,2+status,0]
  9253  1EC3  0023               	movlb	3	; select bank3
  9254  1EC4  0865               	movf	_USBDeviceState^(0+384),w	;volatile
  9255  1EC5  1D03               	btfss	3,2
  9256  1EC6  0008               	return
  9257                           
  9258                           ;usb_device.c: 1358: {
  9259                           ;usb_device.c: 1360: UCON = 0;
  9260  1EC7  003D               	movlb	29	; select bank29
  9261  1EC8  018E               	clrf	14	;volatile
  9262                           
  9263                           ;usb_device.c: 1363: UIE = 0;
  9264  1EC9  0192               	clrf	18	;volatile
  9265                           
  9266                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  9267  1ECA  3016               	movlw	22
  9268  1ECB  0091               	movwf	17	;volatile
  9269  1ECC  309F               	movlw	159
  9270  1ECD  0097               	movwf	23	;volatile
  9271  1ECE  307B               	movlw	123
  9272  1ECF  0092               	movwf	18	;volatile
  9273                           
  9274                           ;usb_device.c: 1369: {PIE2bits.USBIE = 1;INTCONbits.PEIE = 1; INTCONbits.GIE = 1;};
  9275  1ED0  0021               	movlb	1	; select bank1
  9276  1ED1  1512               	bsf	18,2	;volatile
  9277  1ED2  170B               	bsf	11,6	;volatile
  9278  1ED3  178B               	bsf	11,7	;volatile
  9279  1ED4                     l440:	
  9280                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  9281                           
  9282  1ED4  003D               	movlb	29	; select bank29
  9283  1ED5  198E               	btfsc	14,3	;volatile
  9284  1ED6  2ED9               	goto	l6126
  9285  1ED7  158E               	bsf	14,3	;volatile
  9286  1ED8  2ED4               	goto	l440
  9287  1ED9                     l6126:	
  9288                           
  9289                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  9290  1ED9  3001               	movlw	1
  9291  1EDA  0021               	movlb	1	; select bank1
  9292  1EDB  00A6               	movwf	??_USBDeviceAttach^(0+128)
  9293  1EDC  0826               	movf	??_USBDeviceAttach^(0+128),w
  9294  1EDD  0023               	movlb	3	; select bank3
  9295  1EDE  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
  9296  1EDF  0008               	return
  9297  1EE0                     __end_of_USBDeviceAttach:	
  9298                           
  9299                           	psect	text38
  9300  1E01                     __ptext38:	
  9301 ;; *************** function _PIN_MANAGER_Initialize *****************
  9302 ;; Defined at:
  9303 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  9304 ;; Parameters:    Size  Location     Type
  9305 ;;		None
  9306 ;; Auto vars:     Size  Location     Type
  9307 ;;		None
  9308 ;; Return value:  Size  Location     Type
  9309 ;;                  1    wreg      void 
  9310 ;; Registers used:
  9311 ;;		wreg, status,2
  9312 ;; Tracked objects:
  9313 ;;		On entry : 0/0
  9314 ;;		On exit  : 0/0
  9315 ;;		Unchanged: 0/0
  9316 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9321 ;;Total ram usage:        0 bytes
  9322 ;; Hardware stack levels used:    1
  9323 ;; Hardware stack levels required when called:   10
  9324 ;; This function calls:
  9325 ;;		Nothing
  9326 ;; This function is called by:
  9327 ;;		_SYSTEM_Initialize
  9328 ;; This function uses a non-reentrant model
  9329 ;;
  9330                           
  9331                           
  9332                           ;psect for function _PIN_MANAGER_Initialize
  9333  1E01                     _PIN_MANAGER_Initialize:	
  9334                           
  9335                           ;pin_manager.c: 57: LATA = 0x00;
  9336                           
  9337                           ;incstack = 0
  9338                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9339  1E01  0022               	movlb	2	; select bank2
  9340  1E02  018C               	clrf	12	;volatile
  9341                           
  9342                           ;pin_manager.c: 58: LATC = 0x00;
  9343  1E03  018E               	clrf	14	;volatile
  9344                           
  9345                           ;pin_manager.c: 63: TRISA = 0x30;
  9346  1E04  3030               	movlw	48
  9347  1E05  0021               	movlb	1	; select bank1
  9348  1E06  008C               	movwf	12	;volatile
  9349                           
  9350                           ;pin_manager.c: 64: TRISC = 0x37;
  9351  1E07  3037               	movlw	55
  9352  1E08  008E               	movwf	14	;volatile
  9353                           
  9354                           ;pin_manager.c: 69: ANSELC = 0x0C;
  9355  1E09  300C               	movlw	12
  9356  1E0A  0023               	movlb	3	; select bank3
  9357  1E0B  008E               	movwf	14	;volatile
  9358                           
  9359                           ;pin_manager.c: 70: ANSELA = 0x10;
  9360  1E0C  3010               	movlw	16
  9361  1E0D  008C               	movwf	12	;volatile
  9362                           
  9363                           ;pin_manager.c: 75: WPUA = 0x00;
  9364  1E0E  0024               	movlb	4	; select bank4
  9365  1E0F  018C               	clrf	12	;volatile
  9366                           
  9367                           ;pin_manager.c: 76: OPTION_REGbits.nWPUEN = 1;
  9368  1E10  0021               	movlb	1	; select bank1
  9369  1E11  1795               	bsf	21,7	;volatile
  9370                           
  9371                           ;pin_manager.c: 82: APFCON = 0x00;
  9372  1E12  0022               	movlb	2	; select bank2
  9373  1E13  019D               	clrf	29	;volatile
  9374  1E14  0008               	return
  9375  1E15                     __end_of_PIN_MANAGER_Initialize:	
  9376                           
  9377                           	psect	text39
  9378  1D8E                     __ptext39:	
  9379 ;; *************** function _OSCILLATOR_Initialize *****************
  9380 ;; Defined at:
  9381 ;;		line 83 in file "mcc_generated_files/mcc.c"
  9382 ;; Parameters:    Size  Location     Type
  9383 ;;		None
  9384 ;; Auto vars:     Size  Location     Type
  9385 ;;		None
  9386 ;; Return value:  Size  Location     Type
  9387 ;;                  1    wreg      void 
  9388 ;; Registers used:
  9389 ;;		wreg, status,2
  9390 ;; Tracked objects:
  9391 ;;		On entry : 0/0
  9392 ;;		On exit  : 0/0
  9393 ;;		Unchanged: 0/0
  9394 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9399 ;;Total ram usage:        0 bytes
  9400 ;; Hardware stack levels used:    1
  9401 ;; Hardware stack levels required when called:   10
  9402 ;; This function calls:
  9403 ;;		Nothing
  9404 ;; This function is called by:
  9405 ;;		_SYSTEM_Initialize
  9406 ;; This function uses a non-reentrant model
  9407 ;;
  9408                           
  9409                           
  9410                           ;psect for function _OSCILLATOR_Initialize
  9411  1D8E                     _OSCILLATOR_Initialize:	
  9412                           
  9413                           ;mcc.c: 86: OSCCON = 0x7C;
  9414                           
  9415                           ;incstack = 0
  9416                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9417  1D8E  307C               	movlw	124
  9418  1D8F  0021               	movlb	1	; select bank1
  9419  1D90  0099               	movwf	25	;volatile
  9420                           
  9421                           ;mcc.c: 88: OSCTUNE = 0x00;
  9422  1D91  0198               	clrf	24	;volatile
  9423                           
  9424                           ;mcc.c: 90: ACTCON = 0x00;
  9425  1D92  0027               	movlb	7	; select bank7
  9426  1D93  019B               	clrf	27	;volatile
  9427                           
  9428                           ;mcc.c: 92: BORCON = 0x00;
  9429  1D94  0022               	movlb	2	; select bank2
  9430  1D95  0196               	clrf	22	;volatile
  9431  1D96                     l56:	
  9432                           ;mcc.c: 95: {
  9433                           
  9434                           ;mcc.c: 94: while(PLLRDY == 0)
  9435                           
  9436  1D96  0021               	movlb	1	; select bank1
  9437  1D97  1B1A               	btfsc	26,6	;volatile
  9438  1D98  0008               	return
  9439  1D99  2D96               	goto	l56
  9440  1D9A                     __end_of_OSCILLATOR_Initialize:	
  9441                           
  9442                           	psect	text40
  9443  04B2                     __ptext40:	
  9444 ;; *************** function _CDCTxService *****************
  9445 ;; Defined at:
  9446 ;;		line 835 in file "mcc_generated_files/usb/usb_device_cdc.c"
  9447 ;; Parameters:    Size  Location     Type
  9448 ;;		None
  9449 ;; Auto vars:     Size  Location     Type
  9450 ;;  byte_to_send    1   19[BANK1 ] unsigned char 
  9451 ;;  i               1   18[BANK1 ] unsigned char 
  9452 ;; Return value:  Size  Location     Type
  9453 ;;                  1    wreg      void 
  9454 ;; Registers used:
  9455 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9456 ;; Tracked objects:
  9457 ;;		On entry : 0/0
  9458 ;;		On exit  : 0/0
  9459 ;;		Unchanged: 0/0
  9460 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9462 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9463 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9464 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9465 ;;Total ram usage:        3 bytes
  9466 ;; Hardware stack levels used:    1
  9467 ;; Hardware stack levels required when called:   11
  9468 ;; This function calls:
  9469 ;;		_USBTransferOnePacket
  9470 ;; This function is called by:
  9471 ;;		_main
  9472 ;; This function uses a non-reentrant model
  9473 ;;
  9474                           
  9475                           
  9476                           ;psect for function _CDCTxService
  9477  04B2                     _CDCTxService:	
  9478                           
  9479                           ;usb_device_cdc.c: 837: uint8_t byte_to_send;
  9480                           ;usb_device_cdc.c: 838: uint8_t i;
  9481                           ;usb_device_cdc.c: 840: {PIE2bits.USBIE = 0;};
  9482                           
  9483                           ;incstack = 0
  9484                           ; Regs used in _CDCTxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9485  04B2  0021               	movlb	1	; select bank1
  9486  04B3  1112               	bcf	18,2	;volatile
  9487                           
  9488                           ;usb_device_cdc.c: 842: {};
  9489                           ;usb_device_cdc.c: 844: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
  9490  04B4  0023               	movlb	3	; select bank3
  9491  04B5  084D               	movf	_CDCDataInHandle^(0+384),w
  9492  04B6  044E               	iorwf	(_CDCDataInHandle+1)^(0+384),w
  9493  04B7  1903               	btfsc	3,2
  9494  04B8  2CC2               	goto	l8286
  9495  04B9  084D               	movf	_CDCDataInHandle^(0+384),w
  9496  04BA  0086               	movwf	6
  9497  04BB  084E               	movf	(_CDCDataInHandle+1)^(0+384),w
  9498  04BC  0087               	movwf	7
  9499  04BD  1F81               	btfss	1,7
  9500  04BE  2CC2               	goto	l8286
  9501                           
  9502                           ;usb_device_cdc.c: 845: {
  9503                           ;usb_device_cdc.c: 846: {PIE2bits.USBIE = 1;};
  9504  04BF  0021               	movlb	1	; select bank1
  9505  04C0  1512               	bsf	18,2	;volatile
  9506                           
  9507                           ;usb_device_cdc.c: 847: return;
  9508  04C1  0008               	return
  9509  04C2                     l8286:	
  9510                           
  9511                           ;usb_device_cdc.c: 848: }
  9512                           ;usb_device_cdc.c: 855: if(cdc_trf_state == 3)
  9513  04C2  3003               	movlw	3
  9514  04C3  0023               	movlb	3	; select bank3
  9515  04C4  0669               	xorwf	_cdc_trf_state^(0+384),w
  9516  04C5  1903               	btfsc	3,2
  9517                           
  9518                           ;usb_device_cdc.c: 856: cdc_trf_state = 0;
  9519  04C6  01E9               	clrf	_cdc_trf_state^(0+384)
  9520                           
  9521                           ;usb_device_cdc.c: 861: if(cdc_trf_state == 0)
  9522  04C7  0869               	movf	_cdc_trf_state^(0+384),w
  9523  04C8  1D03               	btfss	3,2
  9524  04C9  2CCD               	goto	l8294
  9525                           
  9526                           ;usb_device_cdc.c: 862: {
  9527                           ;usb_device_cdc.c: 863: {PIE2bits.USBIE = 1;};
  9528  04CA  0021               	movlb	1	; select bank1
  9529  04CB  1512               	bsf	18,2	;volatile
  9530                           
  9531                           ;usb_device_cdc.c: 864: return;
  9532  04CC  0008               	return
  9533  04CD                     l8294:	
  9534                           
  9535                           ;usb_device_cdc.c: 865: }
  9536                           ;usb_device_cdc.c: 870: if(cdc_trf_state == 2)
  9537  04CD  3002               	movlw	2
  9538  04CE  0023               	movlb	3	; select bank3
  9539  04CF  0669               	xorwf	_cdc_trf_state^(0+384),w
  9540  04D0  1D03               	btfss	3,2
  9541  04D1  2CED               	goto	l8300
  9542                           
  9543                           ;usb_device_cdc.c: 871: {
  9544                           ;usb_device_cdc.c: 872: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  9545  04D2  0021               	movlb	1	; select bank1
  9546  04D3  01A6               	clrf	USBTransferOnePacket@dir^(0+128)
  9547  04D4  0AA6               	incf	USBTransferOnePacket@dir^(0+128),f
  9548  04D5  3000               	movlw	0
  9549  04D6  00A7               	movwf	USBTransferOnePacket@data^(0+128)
  9550  04D7  3000               	movlw	0
  9551  04D8  00A8               	movwf	(USBTransferOnePacket@data+1)^(0+128)
  9552  04D9  01A9               	clrf	USBTransferOnePacket@len^(0+128)
  9553  04DA  3002               	movlw	2
  9554  04DB  318C  2495  3184   	fcall	_USBTransferOnePacket
  9555  04DE  0021               	movlb	1	; select bank1
  9556  04DF  0827               	movf	(?_USBTransferOnePacket+1)^(0+128),w
  9557  04E0  0023               	movlb	3	; select bank3
  9558  04E1  00CE               	movwf	(_CDCDataInHandle+1)^(0+384)
  9559  04E2  0021               	movlb	1	; select bank1
  9560  04E3  0826               	movf	?_USBTransferOnePacket^(0+128),w
  9561  04E4  0023               	movlb	3	; select bank3
  9562  04E5  00CD               	movwf	_CDCDataInHandle^(0+384)
  9563                           
  9564                           ;usb_device_cdc.c: 874: cdc_trf_state = 3;
  9565  04E6  3003               	movlw	3
  9566  04E7  0021               	movlb	1	; select bank1
  9567  04E8  00B1               	movwf	??_CDCTxService^(0+128)
  9568  04E9  0831               	movf	??_CDCTxService^(0+128),w
  9569  04EA  0023               	movlb	3	; select bank3
  9570  04EB  00E9               	movwf	_cdc_trf_state^(0+384)
  9571                           
  9572                           ;usb_device_cdc.c: 875: }
  9573  04EC  2D7B               	goto	l8346
  9574  04ED                     l8300:	
  9575                           
  9576                           ;usb_device_cdc.c: 876: else if(cdc_trf_state == 1)
  9577  04ED  0369               	decf	_cdc_trf_state^(0+384),w
  9578  04EE  1D03               	btfss	3,2
  9579  04EF  2D7B               	goto	l8346
  9580                           
  9581                           ;usb_device_cdc.c: 877: {
  9582                           ;usb_device_cdc.c: 881: if(cdc_tx_len > sizeof(cdc_data_tx))
  9583  04F0  3041               	movlw	65
  9584  04F1  0268               	subwf	_cdc_tx_len^(0+384),w
  9585  04F2  1C03               	skipc
  9586  04F3  2CF6               	goto	l8306
  9587                           
  9588                           ;usb_device_cdc.c: 882: byte_to_send = sizeof(cdc_data_tx);
  9589  04F4  3040               	movlw	64
  9590  04F5  2CF8               	goto	L9
  9591  04F6                     l8306:	
  9592                           
  9593                           ;usb_device_cdc.c: 883: else
  9594                           ;usb_device_cdc.c: 884: byte_to_send = cdc_tx_len;
  9595  04F6  0023               	movlb	3	; select bank3
  9596  04F7  0868               	movf	_cdc_tx_len^(0+384),w
  9597  04F8                     L9:	
  9598  04F8  0021               	movlb	1	; select bank1
  9599  04F9  00B1               	movwf	??_CDCTxService^(0+128)
  9600  04FA  0831               	movf	??_CDCTxService^(0+128),w
  9601  04FB  00B3               	movwf	CDCTxService@byte_to_send^(0+128)
  9602                           
  9603                           ;usb_device_cdc.c: 889: cdc_tx_len = cdc_tx_len - byte_to_send;
  9604  04FC  0333               	decf	CDCTxService@byte_to_send^(0+128),w
  9605  04FD  3AFF               	xorlw	255
  9606  04FE  0023               	movlb	3	; select bank3
  9607  04FF  0768               	addwf	_cdc_tx_len^(0+384),w
  9608  0500  0021               	movlb	1	; select bank1
  9609  0501  00B1               	movwf	??_CDCTxService^(0+128)
  9610  0502  0831               	movf	??_CDCTxService^(0+128),w
  9611  0503  0023               	movlb	3	; select bank3
  9612  0504  00E8               	movwf	_cdc_tx_len^(0+384)
  9613                           
  9614                           ;usb_device_cdc.c: 891: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  9615  0505  3020               	movlw	32
  9616  0506  00D2               	movwf	(_pCDCDst+1)^(0+384)
  9617  0507  3080               	movlw	128
  9618  0508  00D1               	movwf	_pCDCDst^(0+384)
  9619                           
  9620                           ;usb_device_cdc.c: 893: i = byte_to_send;
  9621  0509  0021               	movlb	1	; select bank1
  9622  050A  0833               	movf	CDCTxService@byte_to_send^(0+128),w
  9623  050B  00B1               	movwf	??_CDCTxService^(0+128)
  9624  050C  0831               	movf	??_CDCTxService^(0+128),w
  9625  050D  00B2               	movwf	CDCTxService@i^(0+128)
  9626                           
  9627                           ;usb_device_cdc.c: 894: if(cdc_mem_type == 0x00)
  9628  050E  0023               	movlb	3	; select bank3
  9629  050F  0867               	movf	_cdc_mem_type^(0+384),w
  9630  0510  1903               	btfsc	3,2
  9631  0511  2D2F               	goto	l8324
  9632  0512  2D50               	goto	l8334
  9633  0513                     l8316:	
  9634                           ;usb_device_cdc.c: 895: {
  9635                           ;usb_device_cdc.c: 896: while(i)
  9636                           
  9637                           
  9638                           ;usb_device_cdc.c: 897: {
  9639                           ;usb_device_cdc.c: 898: *pCDCDst.bRam = *pCDCSrc.bRom;
  9640  0513  0023               	movlb	3	; select bank3
  9641  0514  0853               	movf	_pCDCSrc^(0+384),w
  9642  0515  0086               	movwf	6
  9643  0516  0854               	movf	(_pCDCSrc+1)^(0+384),w
  9644  0517  0087               	movwf	7
  9645  0518  0801               	movf	1,w
  9646  0519  0021               	movlb	1	; select bank1
  9647  051A  00B1               	movwf	??_CDCTxService^(0+128)
  9648  051B  0023               	movlb	3	; select bank3
  9649  051C  0851               	movf	_pCDCDst^(0+384),w
  9650  051D  0086               	movwf	6
  9651  051E  0852               	movf	(_pCDCDst+1)^(0+384),w
  9652  051F  0087               	movwf	7
  9653  0520  0021               	movlb	1	; select bank1
  9654  0521  0831               	movf	??_CDCTxService^(0+128),w
  9655  0522  0081               	movwf	1
  9656                           
  9657                           ;usb_device_cdc.c: 899: pCDCDst.bRam++;
  9658  0523  3001               	movlw	1
  9659  0524  0023               	movlb	3	; select bank3
  9660  0525  07D1               	addwf	_pCDCDst^(0+384),f
  9661  0526  3000               	movlw	0
  9662  0527  3DD2               	addwfc	(_pCDCDst+1)^(0+384),f
  9663                           
  9664                           ;usb_device_cdc.c: 900: pCDCSrc.bRom++;
  9665  0528  3001               	movlw	1
  9666  0529  07D3               	addwf	_pCDCSrc^(0+384),f
  9667  052A  3000               	movlw	0
  9668  052B  3DD4               	addwfc	(_pCDCSrc+1)^(0+384),f
  9669                           
  9670                           ;usb_device_cdc.c: 901: i--;
  9671  052C  3001               	movlw	1
  9672  052D  0021               	movlb	1	; select bank1
  9673  052E  02B2               	subwf	CDCTxService@i^(0+128),f
  9674  052F                     l8324:	
  9675  052F  0021               	movlb	1	; select bank1
  9676  0530  0832               	movf	CDCTxService@i^(0+128),w
  9677  0531  1903               	btfsc	3,2
  9678  0532  2D54               	goto	l8336
  9679  0533  2D13               	goto	l8316
  9680  0534                     l8326:	
  9681                           ;usb_device_cdc.c: 904: else
  9682                           ;usb_device_cdc.c: 905: {
  9683                           ;usb_device_cdc.c: 906: while(i)
  9684                           
  9685                           ;usb_device_cdc.c: 902: }
  9686                           ;usb_device_cdc.c: 903: }
  9687                           
  9688                           
  9689                           ;usb_device_cdc.c: 907: {
  9690                           ;usb_device_cdc.c: 908: *pCDCDst.bRam = *pCDCSrc.bRam;
  9691  0534  0023               	movlb	3	; select bank3
  9692  0535  0853               	movf	_pCDCSrc^(0+384),w
  9693  0536  0086               	movwf	6
  9694  0537  0854               	movf	(_pCDCSrc+1)^(0+384),w
  9695  0538  0087               	movwf	7
  9696  0539  0801               	movf	1,w
  9697  053A  0021               	movlb	1	; select bank1
  9698  053B  00B1               	movwf	??_CDCTxService^(0+128)
  9699  053C  0023               	movlb	3	; select bank3
  9700  053D  0851               	movf	_pCDCDst^(0+384),w
  9701  053E  0086               	movwf	6
  9702  053F  0852               	movf	(_pCDCDst+1)^(0+384),w
  9703  0540  0087               	movwf	7
  9704  0541  0021               	movlb	1	; select bank1
  9705  0542  0831               	movf	??_CDCTxService^(0+128),w
  9706  0543  0081               	movwf	1
  9707                           
  9708                           ;usb_device_cdc.c: 909: pCDCDst.bRam++;
  9709  0544  3001               	movlw	1
  9710  0545  0023               	movlb	3	; select bank3
  9711  0546  07D1               	addwf	_pCDCDst^(0+384),f
  9712  0547  3000               	movlw	0
  9713  0548  3DD2               	addwfc	(_pCDCDst+1)^(0+384),f
  9714                           
  9715                           ;usb_device_cdc.c: 910: pCDCSrc.bRam++;
  9716  0549  3001               	movlw	1
  9717  054A  07D3               	addwf	_pCDCSrc^(0+384),f
  9718  054B  3000               	movlw	0
  9719  054C  3DD4               	addwfc	(_pCDCSrc+1)^(0+384),f
  9720                           
  9721                           ;usb_device_cdc.c: 911: i--;
  9722  054D  3001               	movlw	1
  9723  054E  0021               	movlb	1	; select bank1
  9724  054F  02B2               	subwf	CDCTxService@i^(0+128),f
  9725  0550                     l8334:	
  9726  0550  0021               	movlb	1	; select bank1
  9727  0551  0832               	movf	CDCTxService@i^(0+128),w
  9728  0552  1D03               	btfss	3,2
  9729  0553  2D34               	goto	l8326
  9730  0554                     l8336:	
  9731                           
  9732                           ;usb_device_cdc.c: 912: }
  9733                           ;usb_device_cdc.c: 913: }
  9734                           ;usb_device_cdc.c: 919: if(cdc_tx_len == 0)
  9735  0554  0023               	movlb	3	; select bank3
  9736  0555  0868               	movf	_cdc_tx_len^(0+384),w
  9737  0556  1D03               	btfss	3,2
  9738  0557  2D65               	goto	l8344
  9739                           
  9740                           ;usb_device_cdc.c: 920: {
  9741                           ;usb_device_cdc.c: 921: if(byte_to_send == 64)
  9742  0558  3040               	movlw	64
  9743  0559  0021               	movlb	1	; select bank1
  9744  055A  0633               	xorwf	CDCTxService@byte_to_send^(0+128),w
  9745  055B  1D03               	btfss	3,2
  9746  055C  2D5F               	goto	l8342
  9747                           
  9748                           ;usb_device_cdc.c: 922: cdc_trf_state = 2;
  9749  055D  3002               	movlw	2
  9750  055E  2D61               	goto	L10
  9751  055F                     l8342:	
  9752                           
  9753                           ;usb_device_cdc.c: 923: else
  9754                           ;usb_device_cdc.c: 924: cdc_trf_state = 3;
  9755  055F  3003               	movlw	3
  9756  0560  0021               	movlb	1	; select bank1
  9757  0561                     L10:	
  9758  0561  00B1               	movwf	??_CDCTxService^(0+128)
  9759  0562  0831               	movf	??_CDCTxService^(0+128),w
  9760  0563  0023               	movlb	3	; select bank3
  9761  0564  00E9               	movwf	_cdc_trf_state^(0+384)
  9762  0565                     l8344:	
  9763                           
  9764                           ;usb_device_cdc.c: 925: }
  9765                           ;usb_device_cdc.c: 926: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  9766  0565  0021               	movlb	1	; select bank1
  9767  0566  01A6               	clrf	USBTransferOnePacket@dir^(0+128)
  9768  0567  0AA6               	incf	USBTransferOnePacket@dir^(0+128),f
  9769  0568  3080               	movlw	128
  9770  0569  00A7               	movwf	USBTransferOnePacket@data^(0+128)
  9771  056A  3020               	movlw	32
  9772  056B  00A8               	movwf	(USBTransferOnePacket@data^(0+128)+1)
  9773  056C  0833               	movf	CDCTxService@byte_to_send^(0+128),w
  9774  056D  00B1               	movwf	??_CDCTxService^(0+128)
  9775  056E  0831               	movf	??_CDCTxService^(0+128),w
  9776  056F  00A9               	movwf	USBTransferOnePacket@len^(0+128)
  9777  0570  3002               	movlw	2
  9778  0571  318C  2495         	fcall	_USBTransferOnePacket
  9779  0573  0021               	movlb	1	; select bank1
  9780  0574  0827               	movf	(?_USBTransferOnePacket+1)^(0+128),w
  9781  0575  0023               	movlb	3	; select bank3
  9782  0576  00CE               	movwf	(_CDCDataInHandle+1)^(0+384)
  9783  0577  0021               	movlb	1	; select bank1
  9784  0578  0826               	movf	?_USBTransferOnePacket^(0+128),w
  9785  0579  0023               	movlb	3	; select bank3
  9786  057A  00CD               	movwf	_CDCDataInHandle^(0+384)
  9787  057B                     l8346:	
  9788                           
  9789                           ;usb_device_cdc.c: 928: }
  9790                           ;usb_device_cdc.c: 930: {PIE2bits.USBIE = 1;};
  9791  057B  0021               	movlb	1	; select bank1
  9792  057C  1512               	bsf	18,2	;volatile
  9793  057D  0008               	return
  9794  057E                     __end_of_CDCTxService:	
  9795                           
  9796                           	psect	text41
  9797  0C95                     __ptext41:	
  9798 ;; *************** function _USBTransferOnePacket *****************
  9799 ;; Defined at:
  9800 ;;		line 995 in file "mcc_generated_files/usb/usb_device.c"
  9801 ;; Parameters:    Size  Location     Type
  9802 ;;  ep              1    wreg     unsigned char 
  9803 ;;  dir             1    6[BANK1 ] unsigned char 
  9804 ;;  data            2    7[BANK1 ] PTR unsigned char 
  9805 ;;		 -> cdc_data_tx(64), NULL(0), cdc_data_rx(64), 
  9806 ;;  len             1    9[BANK1 ] unsigned char 
  9807 ;; Auto vars:     Size  Location     Type
  9808 ;;  ep              1   14[BANK1 ] unsigned char 
  9809 ;;  handle          2   15[BANK1 ] PTR volatile struct __BD
  9810 ;;		 -> RAM(4096), BDT(48), NULL(0), 
  9811 ;; Return value:  Size  Location     Type
  9812 ;;                  2    6[BANK1 ] PTR void 
  9813 ;; Registers used:
  9814 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9815 ;; Tracked objects:
  9816 ;;		On entry : 0/0
  9817 ;;		On exit  : 0/0
  9818 ;;		Unchanged: 0/0
  9819 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9820 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9821 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9822 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9823 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0
  9824 ;;Total ram usage:       11 bytes
  9825 ;; Hardware stack levels used:    1
  9826 ;; Hardware stack levels required when called:   10
  9827 ;; This function calls:
  9828 ;;		Nothing
  9829 ;; This function is called by:
  9830 ;;		_CDCInitEP
  9831 ;;		_getsUSBUSART
  9832 ;;		_CDCTxService
  9833 ;;		_USBCDCEventHandler
  9834 ;; This function uses a non-reentrant model
  9835 ;;
  9836                           
  9837                           
  9838                           ;psect for function _USBTransferOnePacket
  9839  0C95                     _USBTransferOnePacket:	
  9840                           
  9841                           ;incstack = 0
  9842                           ; Regs used in _USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
  9843                           ;USBTransferOnePacket@ep stored from wreg
  9844  0C95  0021               	movlb	1	; select bank1
  9845  0C96  00AE               	movwf	USBTransferOnePacket@ep^(0+128)
  9846                           
  9847                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  9848                           ;usb_device.c: 1000: if(dir != 0)
  9849  0C97  0826               	movf	USBTransferOnePacket@dir^(0+128),w
  9850  0C98  1903               	btfsc	3,2
  9851  0C99  2CA3               	goto	l7364
  9852                           
  9853                           ;usb_device.c: 1001: {
  9854                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  9855  0C9A  352E               	lslf	USBTransferOnePacket@ep^(0+128),w
  9856  0C9B  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  9857  0C9C  0086               	movwf	6
  9858  0C9D  3001               	movlw	1	; select bank3/4
  9859  0C9E  0087               	movwf	7
  9860  0C9F  3F40               	moviw [0]fsr1
  9861  0CA0  00AF               	movwf	USBTransferOnePacket@handle^(0+128)
  9862  0CA1  3F41               	moviw [1]fsr1
  9863  0CA2  2CAB               	goto	L11
  9864  0CA3                     l7364:	
  9865                           ;usb_device.c: 1004: }
  9866                           
  9867                           
  9868                           ;usb_device.c: 1005: else
  9869                           ;usb_device.c: 1006: {
  9870                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  9871  0CA3  352E               	lslf	USBTransferOnePacket@ep^(0+128),w
  9872  0CA4  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  9873  0CA5  0086               	movwf	6
  9874  0CA6  3001               	movlw	1	; select bank3/4
  9875  0CA7  0087               	movwf	7
  9876  0CA8  3F40               	moviw [0]fsr1
  9877  0CA9  00AF               	movwf	USBTransferOnePacket@handle^(0+128)
  9878  0CAA  3F41               	moviw [1]fsr1
  9879  0CAB                     L11:	
  9880  0CAB  00B0               	movwf	(USBTransferOnePacket@handle+1)^(0+128)
  9881                           
  9882                           ;usb_device.c: 1009: }
  9883                           ;usb_device.c: 1013: if(handle == 0)
  9884  0CAC  082F               	movf	USBTransferOnePacket@handle^(0+128),w
  9885  0CAD  0430               	iorwf	(USBTransferOnePacket@handle+1)^(0+128),w
  9886  0CAE  1D03               	btfss	3,2
  9887  0CAF  2CB3               	goto	l7372
  9888                           
  9889                           ;usb_device.c: 1014: {
  9890                           ;usb_device.c: 1015: return 0;
  9891  0CB0  01A6               	clrf	?_USBTransferOnePacket^(0+128)
  9892  0CB1  01A7               	clrf	(?_USBTransferOnePacket+1)^(0+128)
  9893  0CB2  0008               	return
  9894  0CB3                     l7372:	
  9895                           
  9896                           ;usb_device.c: 1016: }
  9897                           ;usb_device.c: 1029: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
  9898  0CB3  30FF               	movlw	255
  9899  0CB4  0527               	andwf	USBTransferOnePacket@data^(0+128),w
  9900  0CB5  00AA               	movwf	??_USBTransferOnePacket^(0+128)
  9901  0CB6  307F               	movlw	127
  9902  0CB7  0528               	andwf	(USBTransferOnePacket@data+1)^(0+128),w
  9903  0CB8  00AB               	movwf	(??_USBTransferOnePacket+1)^(0+128)
  9904  0CB9  082F               	movf	USBTransferOnePacket@handle^(0+128),w
  9905  0CBA  0086               	movwf	6
  9906  0CBB  0830               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  9907  0CBC  0087               	movwf	7
  9908  0CBD  3142               	addfsr 1,2
  9909  0CBE  082A               	movf	??_USBTransferOnePacket^(0+128),w
  9910  0CBF  3FC0               	movwi [0]fsr1
  9911  0CC0  082B               	movf	(??_USBTransferOnePacket^(0+128)+1),w
  9912  0CC1  3FC1               	movwi [1]fsr1
  9913                           
  9914                           ;usb_device.c: 1030: handle->CNT = len;
  9915  0CC2  082F               	movf	USBTransferOnePacket@handle^(0+128),w
  9916  0CC3  3E01               	addlw	1
  9917  0CC4  00AA               	movwf	??_USBTransferOnePacket^(0+128)
  9918  0CC5  3000               	movlw	0
  9919  0CC6  3D30               	addwfc	(USBTransferOnePacket@handle+1)^(0+128),w
  9920  0CC7  00AB               	movwf	(??_USBTransferOnePacket+1)^(0+128)
  9921  0CC8  082A               	movf	??_USBTransferOnePacket^(0+128),w
  9922  0CC9  0086               	movwf	6
  9923  0CCA  082B               	movf	(??_USBTransferOnePacket+1)^(0+128),w
  9924  0CCB  0087               	movwf	7
  9925  0CCC  0829               	movf	USBTransferOnePacket@len^(0+128),w
  9926  0CCD  0081               	movwf	1
  9927                           
  9928                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  9929  0CCE  3040               	movlw	64
  9930  0CCF  00AA               	movwf	??_USBTransferOnePacket^(0+128)
  9931  0CD0  082F               	movf	USBTransferOnePacket@handle^(0+128),w
  9932  0CD1  0086               	movwf	6
  9933  0CD2  0830               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  9934  0CD3  0087               	movwf	7
  9935  0CD4  082A               	movf	??_USBTransferOnePacket^(0+128),w
  9936  0CD5  0581               	andwf	1,f
  9937                           
  9938                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  9939  0CD6  082F               	movf	USBTransferOnePacket@handle^(0+128),w
  9940  0CD7  0086               	movwf	6
  9941  0CD8  0830               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  9942  0CD9  0087               	movwf	7
  9943  0CDA  1581               	bsf	1,3
  9944                           
  9945                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  9946  0CDB  082F               	movf	USBTransferOnePacket@handle^(0+128),w
  9947  0CDC  0086               	movwf	6
  9948  0CDD  0830               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  9949  0CDE  0087               	movwf	7
  9950  0CDF  1781               	bsf	1,7
  9951                           
  9952                           ;usb_device.c: 1036: if(dir != 0)
  9953  0CE0  0826               	movf	USBTransferOnePacket@dir^(0+128),w
  9954  0CE1  1903               	btfsc	3,2
  9955  0CE2  2CFC               	goto	l7382
  9956                           
  9957                           ;usb_device.c: 1037: {
  9958                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  9959  0CE3  352E               	lslf	USBTransferOnePacket@ep^(0+128),w
  9960  0CE4  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  9961  0CE5  0086               	movwf	6
  9962  0CE6  3001               	movlw	1	; select bank3/4
  9963  0CE7  0087               	movwf	7
  9964  0CE8  3F40               	moviw [0]fsr1
  9965  0CE9  00AA               	movwf	??_USBTransferOnePacket^(0+128)
  9966  0CEA  3F41               	moviw [1]fsr1
  9967  0CEB  00AB               	movwf	(??_USBTransferOnePacket^(0+128)+1)
  9968  0CEC  3004               	movlw	4
  9969  0CED  062A               	xorwf	??_USBTransferOnePacket^(0+128),w
  9970  0CEE  00AC               	movwf	(??_USBTransferOnePacket+2)^(0+128)
  9971  0CEF  3000               	movlw	0
  9972  0CF0  062B               	xorwf	(??_USBTransferOnePacket+1)^(0+128),w
  9973  0CF1  00AD               	movwf	(??_USBTransferOnePacket+3)^(0+128)
  9974  0CF2  352E               	lslf	USBTransferOnePacket@ep^(0+128),w
  9975  0CF3  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  9976  0CF4  0086               	movwf	6
  9977  0CF5  3001               	movlw	1	; select bank3/4
  9978  0CF6  0087               	movwf	7
  9979  0CF7  082C               	movf	(??_USBTransferOnePacket+2)^(0+128),w
  9980  0CF8  3FC0               	movwi [0]fsr1
  9981  0CF9  082D               	movf	(??_USBTransferOnePacket+3)^(0+128),w
  9982  0CFA  3FC1               	movwi [1]fsr1
  9983                           
  9984                           ;usb_device.c: 1040: }
  9985  0CFB  2D14               	goto	l7384
  9986  0CFC                     l7382:	
  9987                           
  9988                           ;usb_device.c: 1041: else
  9989                           ;usb_device.c: 1042: {
  9990                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  9991  0CFC  352E               	lslf	USBTransferOnePacket@ep^(0+128),w
  9992  0CFD  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  9993  0CFE  0086               	movwf	6
  9994  0CFF  3001               	movlw	1	; select bank3/4
  9995  0D00  0087               	movwf	7
  9996  0D01  3F40               	moviw [0]fsr1
  9997  0D02  00AA               	movwf	??_USBTransferOnePacket^(0+128)
  9998  0D03  3F41               	moviw [1]fsr1
  9999  0D04  00AB               	movwf	(??_USBTransferOnePacket^(0+128)+1)
 10000  0D05  3004               	movlw	4
 10001  0D06  062A               	xorwf	??_USBTransferOnePacket^(0+128),w
 10002  0D07  00AC               	movwf	(??_USBTransferOnePacket+2)^(0+128)
 10003  0D08  3000               	movlw	0
 10004  0D09  062B               	xorwf	(??_USBTransferOnePacket+1)^(0+128),w
 10005  0D0A  00AD               	movwf	(??_USBTransferOnePacket+3)^(0+128)
 10006  0D0B  352E               	lslf	USBTransferOnePacket@ep^(0+128),w
 10007  0D0C  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 10008  0D0D  0086               	movwf	6
 10009  0D0E  3001               	movlw	1	; select bank3/4
 10010  0D0F  0087               	movwf	7
 10011  0D10  082C               	movf	(??_USBTransferOnePacket+2)^(0+128),w
 10012  0D11  3FC0               	movwi [0]fsr1
 10013  0D12  082D               	movf	(??_USBTransferOnePacket+3)^(0+128),w
 10014  0D13  3FC1               	movwi [1]fsr1
 10015  0D14                     l7384:	
 10016                           
 10017                           ;usb_device.c: 1045: }
 10018                           ;usb_device.c: 1046: return (void*)handle;
 10019  0D14  0830               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
 10020  0D15  00A7               	movwf	(?_USBTransferOnePacket+1)^(0+128)
 10021  0D16  082F               	movf	USBTransferOnePacket@handle^(0+128),w
 10022  0D17  00A6               	movwf	?_USBTransferOnePacket^(0+128)
 10023  0D18  0008               	return
 10024  0D19                     __end_of_USBTransferOnePacket:	
 10025                           
 10026                           	psect	intentry
 10027  0004                     __pintentry:	
 10028 ;; *************** function _INTERRUPT_InterruptManager *****************
 10029 ;; Defined at:
 10030 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
 10031 ;; Parameters:    Size  Location     Type
 10032 ;;		None
 10033 ;; Auto vars:     Size  Location     Type
 10034 ;;		None
 10035 ;; Return value:  Size  Location     Type
 10036 ;;                  1    wreg      void 
 10037 ;; Registers used:
 10038 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10039 ;; Tracked objects:
 10040 ;;		On entry : 0/0
 10041 ;;		On exit  : 0/0
 10042 ;;		Unchanged: 0/0
 10043 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10046 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10047 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10048 ;;Total ram usage:        1 bytes
 10049 ;; Hardware stack levels used:    1
 10050 ;; Hardware stack levels required when called:    9
 10051 ;; This function calls:
 10052 ;;		Absolute function
 10053 ;;		_i2c_ISR
 10054 ;;		_i2c_busCollisionISR
 10055 ;;		i1_USBDeviceTasks
 10056 ;; This function is called by:
 10057 ;;		Interrupt level 1
 10058 ;; This function uses a non-reentrant model
 10059 ;;
 10060                           
 10061  0004                     _INTERRUPT_InterruptManager:	
 10062                           
 10063                           ;incstack = 0
 10064 ;; hardware stack exceeded
 10065  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 10066                           
 10067                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10068  0005  3180               	pagesel	$
 10069  0006  0020               	movlb	0	; select bank0
 10070  0007  087F               	movf	127,w
 10071  0008  0021               	movlb	1	; select bank1
 10072  0009  00A5               	movwf	??_INTERRUPT_InterruptManager^(0+128)
 10073                           
 10074                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1)
 10075  000A  1F0B               	btfss	11,6	;volatile
 10076  000B  282E               	goto	i1l91
 10077                           
 10078                           ;interrupt_manager.c: 55: {
 10079                           ;interrupt_manager.c: 56: if(PIE2bits.USBIE == 1 && PIR2bits.USBIF == 1)
 10080  000C  1D12               	btfss	18,2	;volatile
 10081  000D  2815               	goto	i1l84
 10082  000E  0020               	movlb	0	; select bank0
 10083  000F  1D12               	btfss	18,2	;volatile
 10084  0010  2815               	goto	i1l84
 10085                           
 10086                           ;interrupt_manager.c: 57: {
 10087                           ;interrupt_manager.c: 58: USBDeviceTasks();
 10088  0011  3183  23CA  3180   	fcall	i1_USBDeviceTasks
 10089                           
 10090                           ;interrupt_manager.c: 59: }
 10091  0014  282E               	goto	i1l91
 10092  0015                     i1l84:	
 10093                           
 10094                           ;interrupt_manager.c: 60: else if(PIE2bits.BCL1IE == 1 && PIR2bits.BCL1IF == 1)
 10095  0015  0021               	movlb	1	; select bank1
 10096  0016  1D92               	btfss	18,3	;volatile
 10097  0017  2822               	goto	i1l86
 10098  0018  0020               	movlb	0	; select bank0
 10099  0019  1D92               	btfss	18,3	;volatile
 10100  001A  2822               	goto	i1l86
 10101                           
 10102                           ;interrupt_manager.c: 61: {
 10103                           ;interrupt_manager.c: 62: i2c_driver_busCollisionISR();
 10104  001B  0024               	movlb	4	; select bank4
 10105  001C  084E               	movf	(_i2c_driver_busCollisionISR+1)^(0+512),w
 10106  001D  008A               	movwf	10
 10107  001E  084D               	movf	_i2c_driver_busCollisionISR^(0+512),w
 10108  001F  000A               	callw
 10109  0020  3180               	pagesel	$
 10110                           
 10111                           ;interrupt_manager.c: 63: }
 10112  0021  282E               	goto	i1l91
 10113  0022                     i1l86:	
 10114                           
 10115                           ;interrupt_manager.c: 64: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
 10116  0022  0021               	movlb	1	; select bank1
 10117  0023  1D91               	btfss	17,3	;volatile
 10118  0024  282E               	goto	i1l91
 10119  0025  0020               	movlb	0	; select bank0
 10120  0026  1D91               	btfss	17,3	;volatile
 10121  0027  282E               	goto	i1l91
 10122                           
 10123                           ;interrupt_manager.c: 65: {
 10124                           ;interrupt_manager.c: 66: i2c_driver_i2cISR();
 10125  0028  0024               	movlb	4	; select bank4
 10126  0029  084C               	movf	(_i2c_driver_i2cISR+1)^(0+512),w
 10127  002A  008A               	movwf	10
 10128  002B  084B               	movf	_i2c_driver_i2cISR^(0+512),w
 10129  002C  000A               	callw
 10130  002D  3180               	pagesel	$
 10131  002E                     i1l91:	
 10132                           ;interrupt_manager.c: 73: else
 10133                           ;interrupt_manager.c: 74: {
 10134                           
 10135                           ;interrupt_manager.c: 71: }
 10136                           ;interrupt_manager.c: 72: }
 10137                           
 10138                           ;interrupt_manager.c: 68: else
 10139                           ;interrupt_manager.c: 69: {
 10140                           
 10141                           ;interrupt_manager.c: 67: }
 10142                           
 10143  002E  0021               	movlb	1	; select bank1
 10144  002F  0825               	movf	??_INTERRUPT_InterruptManager^(0+128),w
 10145  0030  0020               	movlb	0	; select bank0
 10146  0031  00FF               	movwf	127
 10147  0032  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 10148  0033  0009               	retfie
 10149  0034                     __end_of_INTERRUPT_InterruptManager:	
 10150                           
 10151                           	psect	text43
 10152  03CA                     __ptext43:	
 10153 ;; *************** function i1_USBDeviceTasks *****************
 10154 ;; Defined at:
 10155 ;;		line 477 in file "mcc_generated_files/usb/usb_device.c"
 10156 ;; Parameters:    Size  Location     Type
 10157 ;;		None
 10158 ;; Auto vars:     Size  Location     Type
 10159 ;;  USBDeviceTas    1   15[BANK0h] unsigned char 
 10160 ;; Return value:  Size  Location     Type
 10161 ;;                  1    wreg      void 
 10162 ;; Registers used:
 10163 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10164 ;; Tracked objects:
 10165 ;;		On entry : 0/0
 10166 ;;		On exit  : 0/0
 10167 ;;		Unchanged: 0/0
 10168 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10170 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10171 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10172 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10173 ;;Total ram usage:        3 bytes
 10174 ;; Hardware stack levels used:    1
 10175 ;; Hardware stack levels required when called:    8
 10176 ;; This function calls:
 10177 ;;		i1_USBCtrlEPAllowStatusStage
 10178 ;;		i1_USBCtrlEPService
 10179 ;;		i1_USBDeviceInit
 10180 ;;		i1_USBIncrement1msInternalTimers
 10181 ;;		i1_USBStallHandler
 10182 ;;		i1_USBSuspend
 10183 ;;		i1_USBWakeFromSuspend
 10184 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 10185 ;; This function is called by:
 10186 ;;		_INTERRUPT_InterruptManager
 10187 ;; This function uses a non-reentrant model
 10188 ;;
 10189                           
 10190                           
 10191                           ;psect for function i1_USBDeviceTasks
 10192  03CA                     i1_USBDeviceTasks:	
 10193                           
 10194                           ;usb_device.c: 479: uint8_t i;
 10195                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 10196                           
 10197                           ;incstack = 0
 10198 ;; hardware stack exceeded
 10199                           ; Regs used in i1_USBDeviceTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10200  03CA  0023               	movlb	3	; select bank3
 10201  03CB  0365               	decf	_USBDeviceState^(0+384),w	;volatile
 10202  03CC  1D03               	btfss	3,2
 10203  03CD  2BDA               	goto	i1l6888
 10204                           
 10205                           ;usb_device.c: 591: {
 10206                           ;usb_device.c: 601: if(!UCONbits.SE0)
 10207  03CE  003D               	movlb	29	; select bank29
 10208  03CF  1A8E               	btfsc	14,5	;volatile
 10209  03D0  2BDA               	goto	i1l6888
 10210                           
 10211                           ;usb_device.c: 602: {
 10212                           ;usb_device.c: 608: {UIR = 0;};
 10213  03D1  0190               	clrf	16	;volatile
 10214                           
 10215                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 10216  03D2  1412               	bsf	18,0	;volatile
 10217                           
 10218                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 10219  03D3  1612               	bsf	18,4	;volatile
 10220                           
 10221                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 10222  03D4  3002               	movlw	2
 10223  03D5  0021               	movlb	1	; select bank1
 10224  03D6  00A3               	movwf	??i1_USBDeviceTasks^(0+128)
 10225  03D7  0823               	movf	??i1_USBDeviceTasks^(0+128),w
 10226  03D8  0023               	movlb	3	; select bank3
 10227  03D9  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
 10228  03DA                     i1l6888:	
 10229                           
 10230                           ;usb_device.c: 617: }
 10231                           ;usb_device.c: 618: }
 10232                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 10233  03DA  003D               	movlb	29	; select bank29
 10234  03DB  1910               	btfsc	16,2	;volatile
 10235  03DC  1D12               	btfss	18,2	;volatile
 10236  03DD  2BE7               	goto	i1l6896
 10237                           
 10238                           ;usb_device.c: 635: {
 10239                           ;usb_device.c: 636: (UIR &= 0xFB);
 10240  03DE  30FB               	movlw	251
 10241  03DF  0021               	movlb	1	; select bank1
 10242  03E0  00A3               	movwf	??i1_USBDeviceTasks^(0+128)
 10243  03E1  0823               	movf	??i1_USBDeviceTasks^(0+128),w
 10244  03E2  003D               	movlb	29	; select bank29
 10245  03E3  0590               	andwf	16,f	;volatile
 10246                           
 10247                           ;usb_device.c: 640: USBWakeFromSuspend();
 10248  03E4  319F  277D  3183   	fcall	i1_USBWakeFromSuspend
 10249  03E7                     i1l6896:	
 10250                           
 10251                           ;usb_device.c: 642: }
 10252                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
 10253  03E7  003D               	movlb	29	; select bank29
 10254  03E8  1C8E               	btfss	14,1	;volatile
 10255  03E9  2BED               	goto	i1l391
 10256                           
 10257                           ;usb_device.c: 648: {
 10258                           ;usb_device.c: 649: PIR2bits.USBIF = 0;;
 10259  03EA  0020               	movlb	0	; select bank0
 10260  03EB  1112               	bcf	18,2	;volatile
 10261                           
 10262                           ;usb_device.c: 650: return;
 10263  03EC  0008               	return
 10264  03ED                     i1l391:	
 10265                           
 10266                           ;usb_device.c: 651: }
 10267                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 10268  03ED  1810               	btfsc	16,0	;volatile
 10269  03EE  1C12               	btfss	18,0	;volatile
 10270  03EF  2C00               	goto	i1l6910
 10271                           
 10272                           ;usb_device.c: 664: {
 10273                           ;usb_device.c: 665: USBDeviceInit();
 10274  03F0  3186  26E7  3183   	fcall	i1_USBDeviceInit
 10275                           
 10276                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
 10277  03F3  0021               	movlb	1	; select bank1
 10278  03F4  1512               	bsf	18,2	;volatile
 10279                           
 10280                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 10281  03F5  3004               	movlw	4
 10282  03F6  00A3               	movwf	??i1_USBDeviceTasks^(0+128)
 10283  03F7  0823               	movf	??i1_USBDeviceTasks^(0+128),w
 10284  03F8  0023               	movlb	3	; select bank3
 10285  03F9  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
 10286                           
 10287                           ;usb_device.c: 681: (UIR &= 0xFE);
 10288  03FA  30FE               	movlw	254
 10289  03FB  0021               	movlb	1	; select bank1
 10290  03FC  00A3               	movwf	??i1_USBDeviceTasks^(0+128)
 10291  03FD  0823               	movf	??i1_USBDeviceTasks^(0+128),w
 10292  03FE  003D               	movlb	29	; select bank29
 10293  03FF  0590               	andwf	16,f	;volatile
 10294  0400                     i1l6910:	
 10295                           
 10296                           ;usb_device.c: 682: }
 10297                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 10298  0400  1A10               	btfsc	16,4	;volatile
 10299  0401  1E12               	btfss	18,4	;volatile
 10300  0402  2C06               	goto	i1l6916
 10301                           
 10302                           ;usb_device.c: 688: {
 10303                           ;usb_device.c: 694: USBSuspend();
 10304  0403  319E  26E0  3183   	fcall	i1_USBSuspend
 10305  0406                     i1l6916:	
 10306                           
 10307                           ;usb_device.c: 696: }
 10308                           ;usb_device.c: 708: if(UIRbits.SOFIF)
 10309  0406  003D               	movlb	29	; select bank29
 10310  0407  1F10               	btfss	16,6	;volatile
 10311  0408  2C30               	goto	i1l6932
 10312                           
 10313                           ;usb_device.c: 709: {
 10314                           ;usb_device.c: 711: if(UIEbits.SOFIE)
 10315  0409  1F12               	btfss	18,6	;volatile
 10316  040A  2C1B               	goto	i1l6922
 10317                           
 10318                           ;usb_device.c: 712: {
 10319                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 10320  040B  3073               	movlw	115
 10321  040C  0020               	movlb	0	; select bank0
 10322  040D  00E0               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 10323  040E  3000               	movlw	0
 10324  040F  00E1               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 10325  0410  3000               	movlw	0
 10326  0411  00E2               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 10327  0412  3000               	movlw	0
 10328  0413  00E3               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 10329  0414  3001               	movlw	1
 10330  0415  00E4               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 10331  0416  3000               	movlw	0
 10332  0417  00E5               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 10333  0418  3190  20D8  3183   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 10334  041B                     i1l6922:	
 10335                           
 10336                           ;usb_device.c: 714: }
 10337                           ;usb_device.c: 715: (UIR &= 0xBF);
 10338  041B  30BF               	movlw	191
 10339  041C  0021               	movlb	1	; select bank1
 10340  041D  00A3               	movwf	??i1_USBDeviceTasks^(0+128)
 10341  041E  0823               	movf	??i1_USBDeviceTasks^(0+128),w
 10342  041F  003D               	movlb	29	; select bank29
 10343  0420  0590               	andwf	16,f	;volatile
 10344                           
 10345                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 10346  0421  319E  265A  3183   	fcall	i1_USBIncrement1msInternalTimers
 10347                           
 10348                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 10349  0424  0023               	movlb	3	; select bank3
 10350  0425  085C               	movf	_USBStatusStageTimeoutCounter^(0+384),w	;volatile
 10351  0426  1903               	btfsc	3,2
 10352  0427  2C2A               	goto	i1l397
 10353                           
 10354                           ;usb_device.c: 736: {
 10355                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 10356  0428  3001               	movlw	1
 10357  0429  02DC               	subwf	_USBStatusStageTimeoutCounter^(0+384),f	;volatile
 10358  042A                     i1l397:	
 10359                           
 10360                           ;usb_device.c: 738: }
 10361                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 10362  042A  085C               	movf	_USBStatusStageTimeoutCounter^(0+384),w	;volatile
 10363  042B  1D03               	btfss	3,2
 10364  042C  2C30               	goto	i1l6932
 10365                           
 10366                           ;usb_device.c: 745: {
 10367                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 10368  042D  3187  2794  3183   	fcall	i1_USBCtrlEPAllowStatusStage
 10369  0430                     i1l6932:	
 10370                           
 10371                           ;usb_device.c: 747: }
 10372                           ;usb_device.c: 749: }
 10373                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 10374  0430  003D               	movlb	29	; select bank29
 10375  0431  1A90               	btfsc	16,5	;volatile
 10376  0432  1E92               	btfss	18,5	;volatile
 10377  0433  2C37               	goto	i1l6938
 10378                           
 10379                           ;usb_device.c: 752: {
 10380                           ;usb_device.c: 753: USBStallHandler();
 10381  0434  3190  2036  3183   	fcall	i1_USBStallHandler
 10382  0437                     i1l6938:	
 10383                           
 10384                           ;usb_device.c: 754: }
 10385                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 10386  0437  003D               	movlb	29	; select bank29
 10387  0438  1890               	btfsc	16,1	;volatile
 10388  0439  1C92               	btfss	18,1	;volatile
 10389  043A  2C4D               	goto	i1l6946
 10390                           
 10391                           ;usb_device.c: 757: {
 10392                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 10393  043B  30FF               	movlw	255
 10394  043C  0020               	movlb	0	; select bank0
 10395  043D  00E0               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 10396  043E  307F               	movlw	127
 10397  043F  00E1               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 10398  0440  3000               	movlw	0
 10399  0441  00E2               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 10400  0442  3000               	movlw	0
 10401  0443  00E3               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 10402  0444  3001               	movlw	1
 10403  0445  00E4               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 10404  0446  3000               	movlw	0
 10405  0447  00E5               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 10406  0448  3190  20D8  3183   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 10407                           
 10408                           ;usb_device.c: 759: {UEIR = 0;};
 10409  044B  003D               	movlb	29	; select bank29
 10410  044C  0193               	clrf	19	;volatile
 10411  044D                     i1l6946:	
 10412                           
 10413                           ;usb_device.c: 767: }
 10414                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 10415  044D  3004               	movlw	4
 10416  044E  0023               	movlb	3	; select bank3
 10417  044F  0265               	subwf	_USBDeviceState^(0+384),w	;volatile
 10418  0450  1803               	skipnc
 10419  0451  2C55               	goto	i1l401
 10420                           
 10421                           ;usb_device.c: 775: {
 10422                           ;usb_device.c: 776: PIR2bits.USBIF = 0;;
 10423  0452  0020               	movlb	0	; select bank0
 10424  0453  1112               	bcf	18,2	;volatile
 10425                           
 10426                           ;usb_device.c: 777: return;
 10427  0454  0008               	return
 10428  0455                     i1l401:	
 10429                           
 10430                           ;usb_device.c: 778: }
 10431                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 10432  0455  003D               	movlb	29	; select bank29
 10433  0456  1D92               	btfss	18,3	;volatile
 10434  0457  2CAF               	goto	i1l402
 10435                           
 10436                           ;usb_device.c: 784: {
 10437                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 10438  0458  0020               	movlb	0	; select bank0
 10439  0459  01EF               	clrf	i1USBDeviceTasks@i
 10440  045A  3004               	movlw	4
 10441  045B  026F               	subwf	i1USBDeviceTasks@i,w
 10442  045C  1803               	btfsc	3,0
 10443  045D  2CAF               	goto	i1l402
 10444  045E                     i1l403:	
 10445                           
 10446                           ;usb_device.c: 786: {
 10447                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 10448  045E  003D               	movlb	29	; select bank29
 10449  045F  1D90               	btfss	16,3	;volatile
 10450  0460  2CAF               	goto	i1l402
 10451                           
 10452                           ;usb_device.c: 788: {
 10453                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 10454  0461  080F               	movf	15,w	;volatile
 10455  0462  0021               	movlb	1	; select bank1
 10456  0463  00A3               	movwf	??i1_USBDeviceTasks^(0+128)
 10457  0464  0823               	movf	??i1_USBDeviceTasks^(0+128),w
 10458  0465  0023               	movlb	3	; select bank3
 10459  0466  00ED               	movwf	_USTATcopy^(0+384)	;volatile
 10460                           
 10461                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 10462  0467  0C6D               	rrf	_USTATcopy^(0+384),w	;volatile
 10463  0468  0021               	movlb	1	; select bank1
 10464  0469  00A3               	movwf	??i1_USBDeviceTasks^(0+128)
 10465  046A  0CA3               	rrf	??i1_USBDeviceTasks^(0+128),f
 10466  046B  0C23               	rrf	??i1_USBDeviceTasks^(0+128),w
 10467  046C  390F               	andlw	15
 10468  046D  00A4               	movwf	(??i1_USBDeviceTasks+1)^(0+128)
 10469  046E  0824               	movf	(??i1_USBDeviceTasks+1)^(0+128),w
 10470  046F  0023               	movlb	3	; select bank3
 10471  0470  00DE               	movwf	_endpoint_number^(0+384)	;volatile
 10472                           
 10473                           ;usb_device.c: 793: (UIR &= 0xF7);
 10474  0471  30F7               	movlw	247
 10475  0472  0021               	movlb	1	; select bank1
 10476  0473  00A3               	movwf	??i1_USBDeviceTasks^(0+128)
 10477  0474  0823               	movf	??i1_USBDeviceTasks^(0+128),w
 10478  0475  003D               	movlb	29	; select bank29
 10479  0476  0590               	andwf	16,f	;volatile
 10480                           
 10481                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 10482  0477  0023               	movlb	3	; select bank3
 10483  0478  196D               	btfsc	_USTATcopy^(0+384),2	;volatile
 10484  0479  2C7D               	goto	i1l6966
 10485                           
 10486                           ;usb_device.c: 799: {
 10487                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 10488  047A  085E               	movf	_endpoint_number^(0+384),w	;volatile
 10489  047B  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
 10490  047C  2C80               	goto	L12
 10491  047D                     i1l6966:	
 10492                           ;usb_device.c: 801: }
 10493                           
 10494                           
 10495                           ;usb_device.c: 802: else
 10496                           ;usb_device.c: 803: {
 10497                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 10498  047D  0023               	movlb	3	; select bank3
 10499  047E  085E               	movf	_endpoint_number^(0+384),w	;volatile
 10500  047F  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
 10501  0480                     L12:	
 10502  0480  0086               	movwf	6
 10503  0481  3001               	movlw	1	; select bank3/4
 10504  0482  0087               	movwf	7
 10505  0483  0801               	movf	1,w
 10506  0484  3901               	andlw	1
 10507  0485  0021               	movlb	1	; select bank1
 10508  0486  00A3               	movwf	??i1_USBDeviceTasks^(0+128)
 10509  0487  3001               	movlw	1
 10510  0488  06A3               	xorwf	??i1_USBDeviceTasks^(0+128),f
 10511  0489  0801               	movf	1,w
 10512  048A  0623               	xorwf	??i1_USBDeviceTasks^(0+128),w
 10513  048B  39FE               	andlw	-2
 10514  048C  0623               	xorwf	??i1_USBDeviceTasks^(0+128),w
 10515  048D  0081               	movwf	1
 10516                           
 10517                           ;usb_device.c: 805: }
 10518                           ;usb_device.c: 810: if(endpoint_number == 0)
 10519  048E  0023               	movlb	3	; select bank3
 10520  048F  085E               	movf	_endpoint_number^(0+384),w	;volatile
 10521  0490  1D03               	btfss	3,2
 10522  0491  2C96               	goto	i1l6972
 10523                           
 10524                           ;usb_device.c: 811: {
 10525                           ;usb_device.c: 812: USBCtrlEPService();
 10526  0492  3195  25CC  3183   	fcall	i1_USBCtrlEPService
 10527                           
 10528                           ;usb_device.c: 813: }
 10529  0495  2CA5               	goto	i1l6974
 10530  0496                     i1l6972:	
 10531                           
 10532                           ;usb_device.c: 814: else
 10533                           ;usb_device.c: 815: {
 10534                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 10535  0496  3072               	movlw	114
 10536  0497  0020               	movlb	0	; select bank0
 10537  0498  00E0               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 10538  0499  3000               	movlw	0
 10539  049A  00E1               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 10540  049B  30ED               	movlw	low _USTATcopy
 10541  049C  00E2               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 10542  049D  3001               	movlw	high _USTATcopy
 10543  049E  00E3               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 10544  049F  3000               	movlw	0
 10545  04A0  00E4               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 10546  04A1  00E5               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 10547  04A2  3190  20D8  3183   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 10548  04A5                     i1l6974:	
 10549                           ;usb_device.c: 819: else
 10550                           ;usb_device.c: 820: {
 10551                           ;usb_device.c: 821: break;
 10552                           
 10553                           ;usb_device.c: 817: }
 10554                           ;usb_device.c: 818: }
 10555                           
 10556  04A5  3001               	movlw	1
 10557  04A6  0021               	movlb	1	; select bank1
 10558  04A7  00A3               	movwf	??i1_USBDeviceTasks^(0+128)
 10559  04A8  0823               	movf	??i1_USBDeviceTasks^(0+128),w
 10560  04A9  0020               	movlb	0	; select bank0
 10561  04AA  07EF               	addwf	i1USBDeviceTasks@i,f
 10562  04AB  3004               	movlw	4
 10563  04AC  026F               	subwf	i1USBDeviceTasks@i,w
 10564  04AD  1C03               	skipc
 10565  04AE  2C5E               	goto	i1l403
 10566  04AF                     i1l402:	
 10567                           
 10568                           ;usb_device.c: 822: }
 10569                           ;usb_device.c: 823: }
 10570                           ;usb_device.c: 824: }
 10571                           ;usb_device.c: 826: PIR2bits.USBIF = 0;;
 10572  04AF  0020               	movlb	0	; select bank0
 10573  04B0  1112               	bcf	18,2	;volatile
 10574  04B1  0008               	return
 10575  04B2                     __end_ofi1_USBDeviceTasks:	
 10576                           
 10577                           	psect	text44
 10578  1F7D                     __ptext44:	
 10579 ;; *************** function i1_USBWakeFromSuspend *****************
 10580 ;; Defined at:
 10581 ;;		line 2303 in file "mcc_generated_files/usb/usb_device.c"
 10582 ;; Parameters:    Size  Location     Type
 10583 ;;		None
 10584 ;; Auto vars:     Size  Location     Type
 10585 ;;		None
 10586 ;; Return value:  Size  Location     Type
 10587 ;;                  1    wreg      void 
 10588 ;; Registers used:
 10589 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10590 ;; Tracked objects:
 10591 ;;		On entry : 0/0
 10592 ;;		On exit  : 0/0
 10593 ;;		Unchanged: 0/0
 10594 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10597 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10598 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10599 ;;Total ram usage:        1 bytes
 10600 ;; Hardware stack levels used:    1
 10601 ;; Hardware stack levels required when called:    4
 10602 ;; This function calls:
 10603 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 10604 ;; This function is called by:
 10605 ;;		i1_USBDeviceTasks
 10606 ;; This function uses a non-reentrant model
 10607 ;;
 10608                           
 10609                           
 10610                           ;psect for function i1_USBWakeFromSuspend
 10611  1F7D                     i1_USBWakeFromSuspend:	
 10612                           
 10613                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
 10614                           
 10615                           ;incstack = 0
 10616                           ; Regs used in i1_USBWakeFromSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10617  1F7D  0023               	movlb	3	; select bank3
 10618  1F7E  01DF               	clrf	_USBBusIsSuspended^(0+384)	;volatile
 10619                           
 10620                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 10621  1F7F  3074               	movlw	116
 10622  1F80  0020               	movlb	0	; select bank0
 10623  1F81  00E0               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 10624  1F82  3000               	movlw	0
 10625  1F83  00E1               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 10626  1F84  3000               	movlw	0
 10627  1F85  00E2               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 10628  1F86  3000               	movlw	0
 10629  1F87  00E3               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 10630  1F88  3000               	movlw	0
 10631  1F89  00E4               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 10632  1F8A  00E5               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 10633  1F8B  3190  20D8  319F   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 10634                           
 10635                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
 10636  1F8E  003D               	movlb	29	; select bank29
 10637  1F8F  108E               	bcf	14,1	;volatile
 10638                           
 10639                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
 10640  1F90  1112               	bcf	18,2	;volatile
 10641  1F91                     i1l6572:	
 10642                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
 10643                           
 10644  1F91  1D10               	btfss	16,2	;volatile
 10645  1F92  2F9A               	goto	i1l6574
 10646                           
 10647                           ;usb_device.c: 2343: {
 10648                           ;usb_device.c: 2344: (UIR &= 0xFB);
 10649  1F93  30FB               	movlw	251
 10650  1F94  0020               	movlb	0	; select bank0
 10651  1F95  00E6               	movwf	??i1_USBWakeFromSuspend
 10652  1F96  0866               	movf	??i1_USBWakeFromSuspend,w
 10653  1F97  003D               	movlb	29	; select bank29
 10654  1F98  0590               	andwf	16,f	;volatile
 10655  1F99  2F91               	goto	i1l6572
 10656  1F9A                     i1l6574:	
 10657                           
 10658                           ;usb_device.c: 2345: }
 10659                           ;usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
 10660  1F9A  0023               	movlb	3	; select bank3
 10661  1F9B  01D6               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
 10662  1F9C  0008               	return
 10663  1F9D                     __end_ofi1_USBWakeFromSuspend:	
 10664                           
 10665                           	psect	text45
 10666  1EE0                     __ptext45:	
 10667 ;; *************** function i1_USBSuspend *****************
 10668 ;; Defined at:
 10669 ;;		line 2245 in file "mcc_generated_files/usb/usb_device.c"
 10670 ;; Parameters:    Size  Location     Type
 10671 ;;		None
 10672 ;; Auto vars:     Size  Location     Type
 10673 ;;		None
 10674 ;; Return value:  Size  Location     Type
 10675 ;;                  1    wreg      void 
 10676 ;; Registers used:
 10677 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10678 ;; Tracked objects:
 10679 ;;		On entry : 0/0
 10680 ;;		On exit  : 0/0
 10681 ;;		Unchanged: 0/0
 10682 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10685 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10686 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10687 ;;Total ram usage:        1 bytes
 10688 ;; Hardware stack levels used:    1
 10689 ;; Hardware stack levels required when called:    4
 10690 ;; This function calls:
 10691 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 10692 ;; This function is called by:
 10693 ;;		i1_USBDeviceTasks
 10694 ;; This function uses a non-reentrant model
 10695 ;;
 10696                           
 10697                           
 10698                           ;psect for function i1_USBSuspend
 10699  1EE0                     i1_USBSuspend:	
 10700                           
 10701                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 10702                           
 10703                           ;incstack = 0
 10704                           ; Regs used in i1_USBSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10705  1EE0  003D               	movlb	29	; select bank29
 10706  1EE1  1512               	bsf	18,2	;volatile
 10707                           
 10708                           ;usb_device.c: 2271: (UIR &= 0xEF);
 10709  1EE2  30EF               	movlw	239
 10710  1EE3  0020               	movlb	0	; select bank0
 10711  1EE4  00E6               	movwf	??i1_USBSuspend
 10712  1EE5  0866               	movf	??i1_USBSuspend,w
 10713  1EE6  003D               	movlb	29	; select bank29
 10714  1EE7  0590               	andwf	16,f	;volatile
 10715                           
 10716                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 10717  1EE8  148E               	bsf	14,1	;volatile
 10718                           
 10719                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 10720  1EE9  3001               	movlw	1
 10721  1EEA  0020               	movlb	0	; select bank0
 10722  1EEB  00E6               	movwf	??i1_USBSuspend
 10723  1EEC  0866               	movf	??i1_USBSuspend,w
 10724  1EED  0023               	movlb	3	; select bank3
 10725  1EEE  00DF               	movwf	_USBBusIsSuspended^(0+384)	;volatile
 10726                           
 10727                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
 10728  1EEF  01D6               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
 10729                           
 10730                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 10731  1EF0  3075               	movlw	117
 10732  1EF1  0020               	movlb	0	; select bank0
 10733  1EF2  00E0               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 10734  1EF3  3000               	movlw	0
 10735  1EF4  00E1               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 10736  1EF5  3000               	movlw	0
 10737  1EF6  00E2               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 10738  1EF7  3000               	movlw	0
 10739  1EF8  00E3               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 10740  1EF9  3000               	movlw	0
 10741  1EFA  00E4               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 10742  1EFB  00E5               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 10743  1EFC  3190  20D8         	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 10744  1EFE  0008               	return
 10745  1EFF                     __end_ofi1_USBSuspend:	
 10746                           
 10747                           	psect	text46
 10748  1036                     __ptext46:	
 10749 ;; *************** function i1_USBStallHandler *****************
 10750 ;; Defined at:
 10751 ;;		line 2202 in file "mcc_generated_files/usb/usb_device.c"
 10752 ;; Parameters:    Size  Location     Type
 10753 ;;		None
 10754 ;; Auto vars:     Size  Location     Type
 10755 ;;		None
 10756 ;; Return value:  Size  Location     Type
 10757 ;;                  1    wreg      void 
 10758 ;; Registers used:
 10759 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10760 ;; Tracked objects:
 10761 ;;		On entry : 0/0
 10762 ;;		On exit  : 0/0
 10763 ;;		Unchanged: 0/0
 10764 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10767 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10768 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10769 ;;Total ram usage:        1 bytes
 10770 ;; Hardware stack levels used:    1
 10771 ;; This function calls:
 10772 ;;		Nothing
 10773 ;; This function is called by:
 10774 ;;		i1_USBDeviceTasks
 10775 ;; This function uses a non-reentrant model
 10776 ;;
 10777                           
 10778                           
 10779                           ;psect for function i1_USBStallHandler
 10780  1036                     i1_USBStallHandler:	
 10781                           
 10782                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 10783                           
 10784                           ;incstack = 0
 10785                           ; Regs used in i1_USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 10786  1036  003D               	movlb	29	; select bank29
 10787  1037  1C18               	btfss	24,0	;volatile
 10788  1038  2856               	goto	i1l6548
 10789                           
 10790                           ;usb_device.c: 2215: {
 10791                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 10792  1039  0023               	movlb	3	; select bank3
 10793  103A  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 10794  103B  0086               	movwf	6
 10795  103C  0187               	clrf	7
 10796  103D  3080               	movlw	128
 10797  103E  0601               	xorwf	1,w
 10798  103F  1D03               	btfss	3,2
 10799  1040  2854               	goto	i1l6546
 10800  1041  0837               	movf	_pBDTEntryIn^(0+384),w
 10801  1042  0086               	movwf	6
 10802  1043  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 10803  1044  0087               	movwf	7
 10804  1045  3084               	movlw	132
 10805  1046  0601               	xorwf	1,w
 10806  1047  1D03               	btfss	3,2
 10807  1048  2854               	goto	i1l6546
 10808                           
 10809                           ;usb_device.c: 2218: {
 10810                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 10811  1049  300C               	movlw	12
 10812  104A  00F0               	movwf	??i1_USBStallHandler
 10813  104B  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 10814  104C  0086               	movwf	6
 10815  104D  0187               	clrf	7
 10816  104E  0870               	movf	??i1_USBStallHandler,w
 10817  104F  0081               	movwf	1
 10818                           
 10819                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 10820  1050  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 10821  1051  0086               	movwf	6
 10822  1052  0187               	clrf	7
 10823  1053  1781               	bsf	1,7
 10824  1054                     i1l6546:	
 10825                           
 10826                           ;usb_device.c: 2222: }
 10827                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 10828  1054  003D               	movlb	29	; select bank29
 10829  1055  1018               	bcf	24,0	;volatile
 10830  1056                     i1l6548:	
 10831                           
 10832                           ;usb_device.c: 2224: }
 10833                           ;usb_device.c: 2226: (UIR &= 0xDF);
 10834  1056  30DF               	movlw	223
 10835  1057  00F0               	movwf	??i1_USBStallHandler
 10836  1058  0870               	movf	??i1_USBStallHandler,w
 10837  1059  0590               	andwf	16,f	;volatile
 10838  105A  0008               	return
 10839  105B                     __end_ofi1_USBStallHandler:	
 10840                           
 10841                           	psect	text47
 10842  1E5A                     __ptext47:	
 10843 ;; *************** function i1_USBIncrement1msInternalTimers *****************
 10844 ;; Defined at:
 10845 ;;		line 3025 in file "mcc_generated_files/usb/usb_device.c"
 10846 ;; Parameters:    Size  Location     Type
 10847 ;;		None
 10848 ;; Auto vars:     Size  Location     Type
 10849 ;;		None
 10850 ;; Return value:  Size  Location     Type
 10851 ;;                  1    wreg      void 
 10852 ;; Registers used:
 10853 ;;		wreg, status,2, status,0
 10854 ;; Tracked objects:
 10855 ;;		On entry : 0/0
 10856 ;;		On exit  : 0/0
 10857 ;;		Unchanged: 0/0
 10858 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10861 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10862 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10863 ;;Total ram usage:        1 bytes
 10864 ;; Hardware stack levels used:    1
 10865 ;; This function calls:
 10866 ;;		Nothing
 10867 ;; This function is called by:
 10868 ;;		i1_USBDeviceTasks
 10869 ;; This function uses a non-reentrant model
 10870 ;;
 10871                           
 10872                           
 10873                           ;psect for function i1_USBIncrement1msInternalTimers
 10874  1E5A                     i1_USBIncrement1msInternalTimers:	
 10875                           
 10876                           ;usb_device.c: 3033: USB1msTickCount++;
 10877                           
 10878                           ;incstack = 0
 10879                           ; Regs used in i1_USBIncrement1msInternalTimers: [wreg+status,2+status,0]
 10880  1E5A  3001               	movlw	1
 10881  1E5B  0023               	movlb	3	; select bank3
 10882  1E5C  07C3               	addwf	_USB1msTickCount^(0+384),f	;volatile
 10883  1E5D  3000               	movlw	0
 10884  1E5E  3DC4               	addwfc	(_USB1msTickCount+1)^(0+384),f	;volatile
 10885  1E5F  3000               	movlw	0
 10886  1E60  3DC5               	addwfc	(_USB1msTickCount+2)^(0+384),f	;volatile
 10887  1E61  3000               	movlw	0
 10888  1E62  3DC6               	addwfc	(_USB1msTickCount+3)^(0+384),f	;volatile
 10889                           
 10890                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
 10891  1E63  085F               	movf	_USBBusIsSuspended^(0+384),w	;volatile
 10892  1E64  1D03               	btfss	3,2
 10893  1E65  0008               	return
 10894                           
 10895                           ;usb_device.c: 3035: {
 10896                           ;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
 10897  1E66  3001               	movlw	1
 10898  1E67  00F0               	movwf	??i1_USBIncrement1msInternalTimers
 10899  1E68  0870               	movf	??i1_USBIncrement1msInternalTimers,w
 10900  1E69  07D6               	addwf	_USBTicksSinceSuspendEnd^(0+384),f	;volatile
 10901                           
 10902                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
 10903  1E6A  0856               	movf	_USBTicksSinceSuspendEnd^(0+384),w	;volatile
 10904  1E6B  1D03               	btfss	3,2
 10905  1E6C  0008               	return
 10906                           
 10907                           ;usb_device.c: 3039: {
 10908                           ;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
 10909  1E6D  30FF               	movlw	255
 10910  1E6E  00F0               	movwf	??i1_USBIncrement1msInternalTimers
 10911  1E6F  0870               	movf	??i1_USBIncrement1msInternalTimers,w
 10912  1E70  00D6               	movwf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
 10913  1E71  0008               	return
 10914  1E72                     __end_ofi1_USBIncrement1msInternalTimers:	
 10915                           
 10916                           	psect	text48
 10917  06E7                     __ptext48:	
 10918 ;; *************** function i1_USBDeviceInit *****************
 10919 ;; Defined at:
 10920 ;;		line 277 in file "mcc_generated_files/usb/usb_device.c"
 10921 ;; Parameters:    Size  Location     Type
 10922 ;;		None
 10923 ;; Auto vars:     Size  Location     Type
 10924 ;;  USBDeviceIni    2    1[COMMON] PTR unsigned char 
 10925 ;;		 -> UEP1(1), 
 10926 ;;  USBDeviceIni    1    4[COMMON] unsigned char 
 10927 ;;  USBDeviceIni    1    3[COMMON] unsigned char 
 10928 ;; Return value:  Size  Location     Type
 10929 ;;                  1    wreg      void 
 10930 ;; Registers used:
 10931 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10932 ;; Tracked objects:
 10933 ;;		On entry : 0/0
 10934 ;;		On exit  : 0/0
 10935 ;;		Unchanged: 0/0
 10936 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10938 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10939 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10940 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10941 ;;Total ram usage:        5 bytes
 10942 ;; Hardware stack levels used:    1
 10943 ;; This function calls:
 10944 ;;		Nothing
 10945 ;; This function is called by:
 10946 ;;		i1_USBDeviceTasks
 10947 ;; This function uses a non-reentrant model
 10948 ;;
 10949                           
 10950                           
 10951                           ;psect for function i1_USBDeviceInit
 10952  06E7                     i1_USBDeviceInit:	
 10953                           
 10954                           ;usb_device.c: 279: uint8_t i;
 10955                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 10956                           
 10957                           ;incstack = 0
 10958                           ; Regs used in i1_USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
 10959  06E7  0021               	movlb	1	; select bank1
 10960  06E8  1112               	bcf	18,2	;volatile
 10961                           
 10962                           ;usb_device.c: 285: ;
 10963                           ;usb_device.c: 288: {UEIR = 0;};
 10964  06E9  003D               	movlb	29	; select bank29
 10965  06EA  0193               	clrf	19	;volatile
 10966                           
 10967                           ;usb_device.c: 291: {UIR = 0;};
 10968  06EB  0190               	clrf	16	;volatile
 10969                           
 10970                           ;usb_device.c: 294: UEP0 = 0;
 10971  06EC  0198               	clrf	24	;volatile
 10972                           
 10973                           ;usb_device.c: 296: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 0
      +                          ; };
 10974  06ED  300E               	movlw	14
 10975  06EE  00F2               	movwf	i1USBDeviceInit@p+1
 10976  06EF  3099               	movlw	153
 10977  06F0  00F1               	movwf	i1USBDeviceInit@p
 10978  06F1  01F3               	clrf	i1USBDeviceInit@i_1491
 10979  06F2  3002               	movlw	2
 10980  06F3  0273               	subwf	i1USBDeviceInit@i_1491,w
 10981  06F4  1803               	btfsc	3,0
 10982  06F5  2F07               	goto	i1l6470
 10983  06F6                     i1l6462:	
 10984  06F6  0871               	movf	i1USBDeviceInit@p,w
 10985  06F7  0086               	movwf	6
 10986  06F8  0872               	movf	i1USBDeviceInit@p+1,w
 10987  06F9  0087               	movwf	7
 10988  06FA  0181               	clrf	1
 10989  06FB  3001               	movlw	1
 10990  06FC  07F1               	addwf	i1USBDeviceInit@p,f
 10991  06FD  3000               	movlw	0
 10992  06FE  3DF2               	addwfc	i1USBDeviceInit@p+1,f
 10993  06FF  3001               	movlw	1
 10994  0700  00F0               	movwf	??i1_USBDeviceInit
 10995  0701  0870               	movf	??i1_USBDeviceInit,w
 10996  0702  07F3               	addwf	i1USBDeviceInit@i_1491,f
 10997  0703  3002               	movlw	2
 10998  0704  0273               	subwf	i1USBDeviceInit@i_1491,w
 10999  0705  1C03               	skipc
 11000  0706  2EF6               	goto	i1l6462
 11001  0707                     i1l6470:	
 11002                           
 11003                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 11004  0707  3016               	movlw	22
 11005  0708  003D               	movlb	29	; select bank29
 11006  0709  0091               	movwf	17	;volatile
 11007  070A  309F               	movlw	159
 11008  070B  0097               	movwf	23	;volatile
 11009  070C  307B               	movlw	123
 11010  070D  0092               	movwf	18	;volatile
 11011                           
 11012                           ;usb_device.c: 301: ;
 11013                           ;usb_device.c: 304: ;
 11014                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
 11015  070E  01F4               	clrf	i1USBDeviceInit@i
 11016  070F  300C               	movlw	12
 11017  0710  0274               	subwf	i1USBDeviceInit@i,w
 11018  0711  1803               	btfsc	3,0
 11019  0712  2F2C               	goto	i1l380
 11020  0713                     i1l6478:	
 11021                           
 11022                           ;usb_device.c: 308: {
 11023                           ;usb_device.c: 309: BDT[i].Val = 0x00;
 11024  0713  0874               	movf	i1USBDeviceInit@i,w
 11025  0714  00F0               	movwf	??i1_USBDeviceInit
 11026  0715  3001               	movlw	1
 11027  0716                     u547_25:	
 11028  0716  35F0               	lslf	??i1_USBDeviceInit,f
 11029  0717  3EFF               	addlw	-1
 11030  0718  1D03               	skipz
 11031  0719  2F16               	goto	u547_25
 11032  071A  3570               	lslf	??i1_USBDeviceInit,w
 11033  071B  3E20               	addlw	32
 11034  071C  0086               	movwf	6
 11035  071D  0187               	clrf	7
 11036  071E  3000               	movlw	0
 11037  071F  3FC0               	movwi [0]fsr1
 11038  0720  3000               	movlw	0
 11039  0721  3FC1               	movwi [1]fsr1
 11040  0722  3FC2               	movwi [2]fsr1
 11041  0723  3FC3               	movwi [3]fsr1
 11042  0724  3001               	movlw	1
 11043  0725  00F0               	movwf	??i1_USBDeviceInit
 11044  0726  0870               	movf	??i1_USBDeviceInit,w
 11045  0727  07F4               	addwf	i1USBDeviceInit@i,f
 11046  0728  300C               	movlw	12
 11047  0729  0274               	subwf	i1USBDeviceInit@i,w
 11048  072A  1C03               	skipc
 11049  072B  2F13               	goto	i1l6478
 11050  072C                     i1l380:	
 11051                           
 11052                           ;usb_device.c: 310: }
 11053                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
 11054  072C  003D               	movlb	29	; select bank29
 11055  072D  170E               	bsf	14,6	;volatile
 11056                           
 11057                           ;usb_device.c: 316: UADDR = 0x00;
 11058  072E  0196               	clrf	22	;volatile
 11059                           
 11060                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 11061  072F  120E               	bcf	14,4	;volatile
 11062                           
 11063                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 11064  0730  130E               	bcf	14,6	;volatile
 11065  0731                     i1l6490:	
 11066                           ;usb_device.c: 325: do
 11067                           
 11068                           
 11069                           ;usb_device.c: 326: {
 11070                           ;usb_device.c: 327: (UIR &= 0xF7);
 11071  0731  30F7               	movlw	247
 11072  0732  00F0               	movwf	??i1_USBDeviceInit
 11073  0733  0870               	movf	??i1_USBDeviceInit,w
 11074  0734  0590               	andwf	16,f	;volatile
 11075                           
 11076                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 11077  0735  0021               	movlb	1	; select bank1
 11078  0736  01C5               	clrf	(_inPipes^(0+128)+2)	;volatile
 11079                           
 11080                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 11081  0737  0023               	movlb	3	; select bank3
 11082  0738  01B2               	clrf	(_outPipes^(0+384)+2)	;volatile
 11083                           
 11084                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 11085  0739  01B3               	clrf	(_outPipes^(0+384)+3)	;volatile
 11086  073A  01B4               	clrf	((_outPipes+1)^(0+384)+3)	;volatile
 11087                           
 11088                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 11089  073B  003D               	movlb	29	; select bank29
 11090  073C  1990               	btfsc	16,3	;volatile
 11091  073D  2F31               	goto	i1l6490
 11092                           
 11093                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 11094  073E  3001               	movlw	1
 11095  073F  00F0               	movwf	??i1_USBDeviceInit
 11096  0740  0870               	movf	??i1_USBDeviceInit,w
 11097  0741  0023               	movlb	3	; select bank3
 11098  0742  00DA               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
 11099                           
 11100                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 11101  0743  3001               	movlw	1
 11102  0744  00F0               	movwf	??i1_USBDeviceInit
 11103  0745  0870               	movf	??i1_USBDeviceInit,w
 11104  0746  00D9               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
 11105                           
 11106                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 11107  0747  01D8               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
 11108                           
 11109                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 11110  0748  01D7               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
 11111                           
 11112                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 11113  0749  01DF               	clrf	_USBBusIsSuspended^(0+384)	;volatile
 11114                           
 11115                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 11116  074A  01F4               	clrf	i1USBDeviceInit@i
 11117  074B  3003               	movlw	3
 11118  074C  0274               	subwf	i1USBDeviceInit@i,w
 11119  074D  1803               	btfsc	3,0
 11120  074E  2F73               	goto	i1l6518
 11121  074F                     i1l6512:	
 11122                           
 11123                           ;usb_device.c: 346: {
 11124                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 11125  074F  3574               	lslf	i1USBDeviceInit@i,w
 11126  0750  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 11127  0751  0086               	movwf	6
 11128  0752  3001               	movlw	1	; select bank3/4
 11129  0753  0087               	movwf	7
 11130  0754  3000               	movlw	0
 11131  0755  3FC0               	movwi [0]fsr1
 11132  0756  3FC1               	movwi [1]fsr1
 11133                           
 11134                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 11135  0757  3574               	lslf	i1USBDeviceInit@i,w
 11136  0758  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 11137  0759  0086               	movwf	6
 11138  075A  3001               	movlw	1	; select bank3/4
 11139  075B  0087               	movwf	7
 11140  075C  3000               	movlw	0
 11141  075D  3FC0               	movwi [0]fsr1
 11142  075E  3FC1               	movwi [1]fsr1
 11143                           
 11144                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 11145  075F  0874               	movf	i1USBDeviceInit@i,w
 11146  0760  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
 11147  0761  0086               	movwf	6
 11148  0762  3001               	movlw	1	; select bank3/4
 11149  0763  0087               	movwf	7
 11150  0764  0181               	clrf	1
 11151                           
 11152                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 11153  0765  0874               	movf	i1USBDeviceInit@i,w
 11154  0766  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
 11155  0767  0086               	movwf	6
 11156  0768  3001               	movlw	1	; select bank3/4
 11157  0769  0087               	movwf	7
 11158  076A  0181               	clrf	1
 11159  076B  3001               	movlw	1
 11160  076C  00F0               	movwf	??i1_USBDeviceInit
 11161  076D  0870               	movf	??i1_USBDeviceInit,w
 11162  076E  07F4               	addwf	i1USBDeviceInit@i,f
 11163  076F  3003               	movlw	3
 11164  0770  0274               	subwf	i1USBDeviceInit@i,w
 11165  0771  1C03               	skipc
 11166  0772  2F4F               	goto	i1l6512
 11167  0773                     i1l6518:	
 11168                           
 11169                           ;usb_device.c: 351: }
 11170                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 11171  0773  3028               	movlw	40
 11172  0774  0023               	movlb	3	; select bank3
 11173  0775  00B7               	movwf	_pBDTEntryIn^(0+384)
 11174  0776  3000               	movlw	0
 11175  0777  00B8               	movwf	(_pBDTEntryIn+1)^(0+384)
 11176                           
 11177                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 11178  0778  3016               	movlw	22
 11179  0779  003D               	movlb	29	; select bank29
 11180  077A  0098               	movwf	24	;volatile
 11181                           
 11182                           ;usb_device.c: 358: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 11183  077B  3000               	movlw	0
 11184  077C  0020               	movlb	0	; select bank0
 11185  077D  00A3               	movwf	35	;volatile
 11186  077E  3050               	movlw	80
 11187  077F  00A2               	movwf	34	;volatile
 11188                           
 11189                           ;usb_device.c: 359: BDT[0].CNT = 8;
 11190  0780  3008               	movlw	8
 11191  0781  00A1               	movwf	33	;volatile
 11192                           
 11193                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 11194  0782  3004               	movlw	4
 11195  0783  00F0               	movwf	??i1_USBDeviceInit
 11196  0784  0870               	movf	??i1_USBDeviceInit,w
 11197  0785  00A0               	movwf	32	;volatile
 11198                           
 11199                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 11200  0786  17A0               	bsf	32,7	;volatile
 11201                           
 11202                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 11203  0787  0023               	movlb	3	; select bank3
 11204  0788  01EE               	clrf	_USBActiveConfiguration^(0+384)	;volatile
 11205                           
 11206                           ;usb_device.c: 366: USB1msTickCount = 0;
 11207  0789  3000               	movlw	0
 11208  078A  00C6               	movwf	(_USB1msTickCount+3)^(0+384)	;volatile
 11209  078B  3000               	movlw	0
 11210  078C  00C5               	movwf	(_USB1msTickCount+2)^(0+384)	;volatile
 11211  078D  3000               	movlw	0
 11212  078E  00C4               	movwf	(_USB1msTickCount+1)^(0+384)	;volatile
 11213  078F  3000               	movlw	0
 11214  0790  00C3               	movwf	_USB1msTickCount^(0+384)	;volatile
 11215                           
 11216                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 11217  0791  01D6               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
 11218                           
 11219                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 11220  0792  01E5               	clrf	_USBDeviceState^(0+384)	;volatile
 11221  0793  0008               	return
 11222  0794                     __end_ofi1_USBDeviceInit:	
 11223                           
 11224                           	psect	text49
 11225  15CC                     __ptext49:	
 11226 ;; *************** function i1_USBCtrlEPService *****************
 11227 ;; Defined at:
 11228 ;;		line 2372 in file "mcc_generated_files/usb/usb_device.c"
 11229 ;; Parameters:    Size  Location     Type
 11230 ;;		None
 11231 ;; Auto vars:     Size  Location     Type
 11232 ;;		None
 11233 ;; Return value:  Size  Location     Type
 11234 ;;                  1    wreg      void 
 11235 ;; Registers used:
 11236 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11237 ;; Tracked objects:
 11238 ;;		On entry : 0/0
 11239 ;;		On exit  : 0/0
 11240 ;;		Unchanged: 0/0
 11241 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11244 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11245 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11246 ;;Total ram usage:        3 bytes
 11247 ;; Hardware stack levels used:    1
 11248 ;; Hardware stack levels required when called:    7
 11249 ;; This function calls:
 11250 ;;		i1_USBCtrlTrfInHandler
 11251 ;;		i1_USBCtrlTrfOutHandler
 11252 ;;		i1_USBCtrlTrfSetupHandler
 11253 ;; This function is called by:
 11254 ;;		i1_USBDeviceTasks
 11255 ;; This function uses a non-reentrant model
 11256 ;;
 11257                           
 11258                           
 11259                           ;psect for function i1_USBCtrlEPService
 11260  15CC                     i1_USBCtrlEPService:	
 11261                           
 11262                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
 11263                           
 11264                           ;incstack = 0
 11265 ;; hardware stack exceeded
 11266                           ; Regs used in i1_USBCtrlEPService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11267  15CC  302D               	movlw	45
 11268  15CD  0021               	movlb	1	; select bank1
 11269  15CE  00A0               	movwf	??i1_USBCtrlEPService^(0+128)
 11270  15CF  0820               	movf	??i1_USBCtrlEPService^(0+128),w
 11271  15D0  0023               	movlb	3	; select bank3
 11272  15D1  00DC               	movwf	_USBStatusStageTimeoutCounter^(0+384)	;volatile
 11273                           
 11274                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
 11275  15D2  086D               	movf	_USTATcopy^(0+384),w	;volatile
 11276  15D3  39FD               	andlw	253
 11277  15D4  1D03               	btfss	3,2
 11278  15D5  2E1C               	goto	i1l6594
 11279                           
 11280                           ;usb_device.c: 2383: {
 11281                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 11282  15D6  366D               	lsrf	_USTATcopy^(0+384),w	;volatile
 11283  15D7  393F               	andlw	63
 11284  15D8  0021               	movlb	1	; select bank1
 11285  15D9  00A0               	movwf	??i1_USBCtrlEPService^(0+128)
 11286  15DA  3001               	movlw	1
 11287  15DB                     u557_25:	
 11288  15DB  35A0               	lslf	??i1_USBCtrlEPService^(0+128),f
 11289  15DC  3EFF               	addlw	-1
 11290  15DD  1D03               	skipz
 11291  15DE  2DDB               	goto	u557_25
 11292  15DF  3520               	lslf	??i1_USBCtrlEPService^(0+128),w
 11293  15E0  3E20               	addlw	32
 11294  15E1  00A1               	movwf	(??i1_USBCtrlEPService+1)^(0+128)
 11295  15E2  0821               	movf	(??i1_USBCtrlEPService+1)^(0+128),w
 11296  15E3  0023               	movlb	3	; select bank3
 11297  15E4  00E4               	movwf	_pBDTEntryEP0OutCurrent^(0+384)
 11298                           
 11299                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 11300  15E5  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 11301  15E6  0021               	movlb	1	; select bank1
 11302  15E7  00C8               	movwf	_pBDTEntryEP0OutNext^(0+128)
 11303  15E8  39FF               	andlw	255
 11304  15E9  1D03               	skipz
 11305  15EA  3000               	movlw	0
 11306  15EB  00C9               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
 11307                           
 11308                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 11309  15EC  3004               	movlw	4
 11310  15ED  0648               	xorwf	_pBDTEntryEP0OutNext^(0+128),w
 11311  15EE  00C8               	movwf	_pBDTEntryEP0OutNext^(0+128)
 11312  15EF  3000               	movlw	0
 11313  15F0  0649               	xorwf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 11314  15F1  00C9               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
 11315                           
 11316                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 11317  15F2  0023               	movlb	3	; select bank3
 11318  15F3  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 11319  15F4  0086               	movwf	6
 11320  15F5  0187               	clrf	7
 11321  15F6  0C01               	rrf	1,w
 11322  15F7  0C89               	rrf	9,f
 11323  15F8  390F               	andlw	15
 11324  15F9  3A0D               	xorlw	13
 11325  15FA  1D03               	skipz
 11326  15FB  2E19               	goto	i1l6592
 11327                           
 11328                           ;usb_device.c: 2400: {
 11329                           ;usb_device.c: 2405: __builtin_memcpy((uint8_t*)&SetupPkt,(uint8_t*)((void *)(pBDTEntryE
      +                          P0OutCurrent->ADR)),8);
 11330  15FC  3050               	movlw	80
 11331  15FD  0086               	movwf	6
 11332  15FE  0187               	clrf	7
 11333  15FF  0023               	movlb	3	; select bank3
 11334  1600  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 11335  1601  3E02               	addlw	2
 11336  1602  0084               	movwf	4
 11337  1603  0185               	clrf	5
 11338  1604  3F00               	moviw [0]fsr0
 11339  1605  0021               	movlb	1	; select bank1
 11340  1606  00A0               	movwf	??i1_USBCtrlEPService^(0+128)
 11341  1607  3F01               	moviw [1]fsr0
 11342  1608  00A1               	movwf	(??i1_USBCtrlEPService^(0+128)+1)
 11343  1609  0820               	movf	??i1_USBCtrlEPService^(0+128),w
 11344  160A  0084               	movwf	4
 11345  160B  0821               	movf	(??i1_USBCtrlEPService+1)^(0+128),w
 11346  160C  0085               	movwf	5
 11347  160D  3008               	movlw	8
 11348  160E  00A2               	movwf	(??i1_USBCtrlEPService+2)^(0+128)
 11349  160F  0822               	movf	(??i1_USBCtrlEPService+2)^(0+128),w
 11350  1610  1903               	skipnz
 11351  1611  2E16               	goto	i1l6590
 11352  1612                     u559_2m0:	
 11353  1612  0012               	moviw fsr0++
 11354  1613  001E               	movwi fsr1++
 11355  1614  0BA2               	decfsz	(??i1_USBCtrlEPService+2)^(0+128),f
 11356  1615  2E12               	goto	u559_2m0
 11357  1616                     i1l6590:	
 11358                           
 11359                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
 11360  1616  3194  246F         	fcall	i1_USBCtrlTrfSetupHandler
 11361                           
 11362                           ;usb_device.c: 2409: }
 11363  1618  0008               	return
 11364  1619                     i1l6592:	
 11365                           
 11366                           ;usb_device.c: 2410: else
 11367                           ;usb_device.c: 2411: {
 11368                           ;usb_device.c: 2413: USBCtrlTrfOutHandler();
 11369  1619  3191  2168         	fcall	i1_USBCtrlTrfOutHandler
 11370                           
 11371                           ;usb_device.c: 2414: }
 11372                           ;usb_device.c: 2415: }
 11373  161B  0008               	return
 11374  161C                     i1l6594:	
 11375                           
 11376                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
 11377  161C  30FD               	movlw	253
 11378  161D  0023               	movlb	3	; select bank3
 11379  161E  056D               	andwf	_USTATcopy^(0+384),w	;volatile
 11380  161F  0021               	movlb	1	; select bank1
 11381  1620  00A0               	movwf	??i1_USBCtrlEPService^(0+128)
 11382  1621  3004               	movlw	4
 11383  1622  0620               	xorwf	??i1_USBCtrlEPService^(0+128),w
 11384  1623  1D03               	btfss	3,2
 11385  1624  0008               	return
 11386                           
 11387                           ;usb_device.c: 2417: {
 11388                           ;usb_device.c: 2420: USBCtrlTrfInHandler();
 11389  1625  3188  20D3         	fcall	i1_USBCtrlTrfInHandler
 11390  1627  0008               	return
 11391  1628                     __end_ofi1_USBCtrlEPService:	
 11392                           
 11393                           	psect	text50
 11394  146F                     __ptext50:	
 11395 ;; *************** function i1_USBCtrlTrfSetupHandler *****************
 11396 ;; Defined at:
 11397 ;;		line 2465 in file "mcc_generated_files/usb/usb_device.c"
 11398 ;; Parameters:    Size  Location     Type
 11399 ;;		None
 11400 ;; Auto vars:     Size  Location     Type
 11401 ;;		None
 11402 ;; Return value:  Size  Location     Type
 11403 ;;                  1    wreg      void 
 11404 ;; Registers used:
 11405 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11406 ;; Tracked objects:
 11407 ;;		On entry : 0/0
 11408 ;;		On exit  : 0/0
 11409 ;;		Unchanged: 0/0
 11410 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11413 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11414 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11415 ;;Total ram usage:        1 bytes
 11416 ;; Hardware stack levels used:    1
 11417 ;; Hardware stack levels required when called:    6
 11418 ;; This function calls:
 11419 ;;		i1_USBCheckStdRequest
 11420 ;;		i1_USBCtrlEPServiceComplete
 11421 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 11422 ;; This function is called by:
 11423 ;;		i1_USBCtrlEPService
 11424 ;; This function uses a non-reentrant model
 11425 ;;
 11426                           
 11427                           
 11428                           ;psect for function i1_USBCtrlTrfSetupHandler
 11429  146F                     i1_USBCtrlTrfSetupHandler:	
 11430                           
 11431                           ;usb_device.c: 2470: shortPacketStatus = 0;
 11432                           
 11433                           ;incstack = 0
 11434 ;; hardware stack exceeded
 11435                           ; Regs used in i1_USBCtrlTrfSetupHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11436  146F  0023               	movlb	3	; select bank3
 11437  1470  01E3               	clrf	_shortPacketStatus^(0+384)	;volatile
 11438                           
 11439                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
 11440  1471  01DB               	clrf	_USBDeferStatusStagePacket^(0+384)	;volatile
 11441                           
 11442                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
 11443  1472  01D8               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
 11444                           
 11445                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
 11446  1473  01D7               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
 11447                           
 11448                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
 11449  1474  01DD               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
 11450                           
 11451                           ;usb_device.c: 2475: controlTransferState = 0;
 11452  1475  01E2               	clrf	_controlTransferState^(0+384)	;volatile
 11453                           
 11454                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 11455  1476  307F               	movlw	127
 11456  1477  0020               	movlb	0	; select bank0
 11457  1478  00EE               	movwf	??i1_USBCtrlTrfSetupHandler
 11458  1479  0023               	movlb	3	; select bank3
 11459  147A  0837               	movf	_pBDTEntryIn^(0+384),w
 11460  147B  0086               	movwf	6
 11461  147C  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 11462  147D  0087               	movwf	7
 11463  147E  0020               	movlb	0	; select bank0
 11464  147F  086E               	movf	??i1_USBCtrlTrfSetupHandler,w
 11465  1480  0581               	andwf	1,f
 11466                           
 11467                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 11468  1481  3004               	movlw	4
 11469  1482  0023               	movlb	3	; select bank3
 11470  1483  0637               	xorwf	_pBDTEntryIn^(0+384),w
 11471  1484  00B7               	movwf	_pBDTEntryIn^(0+384)
 11472  1485  3000               	movlw	0
 11473  1486  0638               	xorwf	(_pBDTEntryIn+1)^(0+384),w
 11474  1487  00B8               	movwf	(_pBDTEntryIn+1)^(0+384)
 11475                           
 11476                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 11477  1488  307F               	movlw	127
 11478  1489  0020               	movlb	0	; select bank0
 11479  148A  00EE               	movwf	??i1_USBCtrlTrfSetupHandler
 11480  148B  0023               	movlb	3	; select bank3
 11481  148C  0837               	movf	_pBDTEntryIn^(0+384),w
 11482  148D  0086               	movwf	6
 11483  148E  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 11484  148F  0087               	movwf	7
 11485  1490  0020               	movlb	0	; select bank0
 11486  1491  086E               	movf	??i1_USBCtrlTrfSetupHandler,w
 11487  1492  0581               	andwf	1,f
 11488                           
 11489                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 11490  1493  3004               	movlw	4
 11491  1494  0023               	movlb	3	; select bank3
 11492  1495  0637               	xorwf	_pBDTEntryIn^(0+384),w
 11493  1496  00B7               	movwf	_pBDTEntryIn^(0+384)
 11494  1497  3000               	movlw	0
 11495  1498  0638               	xorwf	(_pBDTEntryIn+1)^(0+384),w
 11496  1499  00B8               	movwf	(_pBDTEntryIn+1)^(0+384)
 11497                           
 11498                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 11499  149A  307F               	movlw	127
 11500  149B  0020               	movlb	0	; select bank0
 11501  149C  00EE               	movwf	??i1_USBCtrlTrfSetupHandler
 11502  149D  0021               	movlb	1	; select bank1
 11503  149E  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 11504  149F  0086               	movwf	6
 11505  14A0  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 11506  14A1  0087               	movwf	7
 11507  14A2  0020               	movlb	0	; select bank0
 11508  14A3  086E               	movf	??i1_USBCtrlTrfSetupHandler,w
 11509  14A4  0581               	andwf	1,f
 11510                           
 11511                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
 11512  14A5  0021               	movlb	1	; select bank1
 11513  14A6  01C5               	clrf	(_inPipes^(0+128)+2)	;volatile
 11514                           
 11515                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
 11516  14A7  01C6               	clrf	(_inPipes^(0+128)+3)	;volatile
 11517  14A8  01C7               	clrf	((_inPipes+1)^(0+128)+3)	;volatile
 11518                           
 11519                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
 11520  14A9  0023               	movlb	3	; select bank3
 11521  14AA  01B2               	clrf	(_outPipes^(0+384)+2)	;volatile
 11522                           
 11523                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
 11524  14AB  01B3               	clrf	(_outPipes^(0+384)+3)	;volatile
 11525  14AC  01B4               	clrf	((_outPipes+1)^(0+384)+3)	;volatile
 11526                           
 11527                           ;usb_device.c: 2500: USBCheckStdRequest();
 11528  14AD  3188  200E  3194   	fcall	i1_USBCheckStdRequest
 11529                           
 11530                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 11531  14B0  3000               	movlw	0
 11532  14B1  0020               	movlb	0	; select bank0
 11533  14B2  00E1               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 11534  14B3  3003               	movlw	3
 11535  14B4  00E0               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 11536  14B5  3000               	movlw	0
 11537  14B6  00E2               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11538  14B7  3000               	movlw	0
 11539  14B8  00E3               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11540  14B9  3000               	movlw	0
 11541  14BA  00E4               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 11542  14BB  00E5               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 11543  14BC  3190  20D8  3194   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 11544                           
 11545                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
 11546  14BF  318E  2637         	fcall	i1_USBCtrlEPServiceComplete
 11547  14C1  0008               	return
 11548  14C2                     __end_ofi1_USBCtrlTrfSetupHandler:	
 11549                           
 11550                           	psect	text51
 11551  0E37                     __ptext51:	
 11552 ;; *************** function i1_USBCtrlEPServiceComplete *****************
 11553 ;; Defined at:
 11554 ;;		line 1616 in file "mcc_generated_files/usb/usb_device.c"
 11555 ;; Parameters:    Size  Location     Type
 11556 ;;		None
 11557 ;; Auto vars:     Size  Location     Type
 11558 ;;		None
 11559 ;; Return value:  Size  Location     Type
 11560 ;;                  1    wreg      void 
 11561 ;; Registers used:
 11562 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11563 ;; Tracked objects:
 11564 ;;		On entry : 0/0
 11565 ;;		On exit  : 0/0
 11566 ;;		Unchanged: 0/0
 11567 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11570 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11571 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11572 ;;Total ram usage:        2 bytes
 11573 ;; Hardware stack levels used:    1
 11574 ;; Hardware stack levels required when called:    2
 11575 ;; This function calls:
 11576 ;;		i1_USBCtrlEPAllowDataStage
 11577 ;;		i1_USBCtrlEPAllowStatusStage
 11578 ;; This function is called by:
 11579 ;;		i1_USBCtrlTrfSetupHandler
 11580 ;; This function uses a non-reentrant model
 11581 ;;
 11582                           
 11583                           
 11584                           ;psect for function i1_USBCtrlEPServiceComplete
 11585  0E37                     i1_USBCtrlEPServiceComplete:	
 11586                           
 11587                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 11588                           
 11589                           ;incstack = 0
 11590                           ; Regs used in i1_USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11591  0E37  003D               	movlb	29	; select bank29
 11592  0E38  120E               	bcf	14,4	;volatile
 11593                           
 11594                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 11595  0E39  0021               	movlb	1	; select bank1
 11596  0E3A  1BC5               	btfsc	(_inPipes^(0+128)+2),7	;volatile
 11597  0E3B  2E7E               	goto	i1l465
 11598                           
 11599                           ;usb_device.c: 1629: {
 11600                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 11601  0E3C  0023               	movlb	3	; select bank3
 11602  0E3D  1FB2               	btfss	(_outPipes^(0+384)+2),7	;volatile
 11603  0E3E  2E4C               	goto	i1l5562
 11604                           
 11605                           ;usb_device.c: 1631: {
 11606                           ;usb_device.c: 1632: controlTransferState = 2;
 11607  0E3F  3002               	movlw	2
 11608  0E40  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 11609  0E41  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 11610  0E42  00E2               	movwf	_controlTransferState^(0+384)	;volatile
 11611                           
 11612                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 11613  0E43  0857               	movf	_USBDeferOUTDataStagePackets^(0+384),w	;volatile
 11614  0E44  1D03               	btfss	3,2
 11615  0E45  2E48               	goto	i1l5558
 11616                           
 11617                           ;usb_device.c: 1644: {
 11618                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 11619  0E46  3195  2570         	fcall	i1_USBCtrlEPAllowDataStage
 11620  0E48                     i1l5558:	
 11621                           
 11622                           ;usb_device.c: 1646: }
 11623                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 11624  0E48  0023               	movlb	3	; select bank3
 11625  0E49  01D9               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
 11626                           
 11627                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 11628  0E4A  01DA               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
 11629                           
 11630                           ;usb_device.c: 1652: }
 11631  0E4B  0008               	return
 11632  0E4C                     i1l5562:	
 11633                           
 11634                           ;usb_device.c: 1653: else
 11635                           ;usb_device.c: 1654: {
 11636                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
 11637  0E4C  0021               	movlb	1	; select bank1
 11638  0E4D  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 11639  0E4E  3E01               	addlw	1
 11640  0E4F  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 11641  0E50  3000               	movlw	0
 11642  0E51  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 11643  0E52  00F6               	movwf	??i1_USBCtrlEPServiceComplete+1
 11644  0E53  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 11645  0E54  0086               	movwf	6
 11646  0E55  0876               	movf	??i1_USBCtrlEPServiceComplete+1,w
 11647  0E56  0087               	movwf	7
 11648  0E57  3008               	movlw	8
 11649  0E58  0081               	movwf	1
 11650                           
 11651                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 11652  0E59  3050               	movlw	80
 11653  0E5A  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 11654  0E5B  3000               	movlw	0
 11655  0E5C  00F6               	movwf	??i1_USBCtrlEPServiceComplete+1
 11656  0E5D  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 11657  0E5E  0086               	movwf	6
 11658  0E5F  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 11659  0E60  0087               	movwf	7
 11660  0E61  3142               	addfsr 1,2
 11661  0E62  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 11662  0E63  3FC0               	movwi [0]fsr1
 11663  0E64  0876               	movf	??i1_USBCtrlEPServiceComplete+1,w
 11664  0E65  3FC1               	movwi [1]fsr1
 11665                           
 11666                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 11667  0E66  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 11668  0E67  0086               	movwf	6
 11669  0E68  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 11670  0E69  0087               	movwf	7
 11671  0E6A  300C               	movlw	12
 11672  0E6B  0081               	movwf	1
 11673                           
 11674                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 11675  0E6C  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 11676  0E6D  0086               	movwf	6
 11677  0E6E  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 11678  0E6F  0087               	movwf	7
 11679  0E70  1781               	bsf	1,7
 11680                           
 11681                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 11682  0E71  0023               	movlb	3	; select bank3
 11683  0E72  0837               	movf	_pBDTEntryIn^(0+384),w
 11684  0E73  0086               	movwf	6
 11685  0E74  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 11686  0E75  0087               	movwf	7
 11687  0E76  3004               	movlw	4
 11688  0E77  0081               	movwf	1
 11689                           
 11690                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 11691  0E78  0837               	movf	_pBDTEntryIn^(0+384),w
 11692  0E79  0086               	movwf	6
 11693  0E7A  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 11694  0E7B  0087               	movwf	7
 11695  0E7C  1781               	bsf	1,7
 11696                           
 11697                           ;usb_device.c: 1665: }
 11698                           ;usb_device.c: 1666: }
 11699  0E7D  0008               	return
 11700  0E7E                     i1l465:	
 11701                           
 11702                           ;usb_device.c: 1667: else
 11703                           ;usb_device.c: 1668: {
 11704                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 11705  0E7E  0020               	movlb	0	; select bank0
 11706  0E7F  1FD0               	btfss	80,7	;volatile
 11707  0E80  2E95               	goto	i1l5588
 11708                           
 11709                           ;usb_device.c: 1670: {
 11710                           ;usb_device.c: 1671: controlTransferState = 1;
 11711  0E81  3001               	movlw	1
 11712  0E82  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 11713  0E83  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 11714  0E84  0023               	movlb	3	; select bank3
 11715  0E85  00E2               	movwf	_controlTransferState^(0+384)	;volatile
 11716                           
 11717                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 11718  0E86  0858               	movf	_USBDeferINDataStagePackets^(0+384),w	;volatile
 11719  0E87  1D03               	btfss	3,2
 11720  0E88  2E8C               	goto	i1l5580
 11721                           
 11722                           ;usb_device.c: 1686: {
 11723                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 11724  0E89  3195  2570  318E   	fcall	i1_USBCtrlEPAllowDataStage
 11725  0E8C                     i1l5580:	
 11726                           
 11727                           ;usb_device.c: 1688: }
 11728                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 11729  0E8C  0023               	movlb	3	; select bank3
 11730  0E8D  01D9               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
 11731                           
 11732                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 11733  0E8E  01DA               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
 11734                           
 11735                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 11736  0E8F  085B               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
 11737  0E90  1D03               	btfss	3,2
 11738  0E91  0008               	return
 11739                           
 11740                           ;usb_device.c: 1713: {
 11741                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 11742  0E92  3187  2794         	fcall	i1_USBCtrlEPAllowStatusStage
 11743                           
 11744                           ;usb_device.c: 1715: }
 11745                           ;usb_device.c: 1716: }
 11746  0E94  0008               	return
 11747  0E95                     i1l5588:	
 11748                           
 11749                           ;usb_device.c: 1717: else
 11750                           ;usb_device.c: 1718: {
 11751                           ;usb_device.c: 1729: controlTransferState = 2;
 11752  0E95  3002               	movlw	2
 11753  0E96  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 11754  0E97  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 11755  0E98  0023               	movlb	3	; select bank3
 11756  0E99  00E2               	movwf	_controlTransferState^(0+384)	;volatile
 11757                           
 11758                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
 11759  0E9A  0021               	movlb	1	; select bank1
 11760  0E9B  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 11761  0E9C  3E01               	addlw	1
 11762  0E9D  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 11763  0E9E  3000               	movlw	0
 11764  0E9F  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 11765  0EA0  00F6               	movwf	??i1_USBCtrlEPServiceComplete+1
 11766  0EA1  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 11767  0EA2  0086               	movwf	6
 11768  0EA3  0876               	movf	??i1_USBCtrlEPServiceComplete+1,w
 11769  0EA4  0087               	movwf	7
 11770  0EA5  3008               	movlw	8
 11771  0EA6  0081               	movwf	1
 11772                           
 11773                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 11774  0EA7  3050               	movlw	80
 11775  0EA8  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 11776  0EA9  3000               	movlw	0
 11777  0EAA  00F6               	movwf	??i1_USBCtrlEPServiceComplete+1
 11778  0EAB  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 11779  0EAC  0086               	movwf	6
 11780  0EAD  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 11781  0EAE  0087               	movwf	7
 11782  0EAF  3142               	addfsr 1,2
 11783  0EB0  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 11784  0EB1  3FC0               	movwi [0]fsr1
 11785  0EB2  0876               	movf	??i1_USBCtrlEPServiceComplete+1,w
 11786  0EB3  3FC1               	movwi [1]fsr1
 11787                           
 11788                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 11789  0EB4  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 11790  0EB5  0086               	movwf	6
 11791  0EB6  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 11792  0EB7  0087               	movwf	7
 11793  0EB8  3004               	movlw	4
 11794  0EB9  0081               	movwf	1
 11795                           
 11796                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 11797  0EBA  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 11798  0EBB  0086               	movwf	6
 11799  0EBC  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 11800  0EBD  0087               	movwf	7
 11801  0EBE  1781               	bsf	1,7
 11802                           
 11803                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 11804  0EBF  0023               	movlb	3	; select bank3
 11805  0EC0  01D9               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
 11806                           
 11807                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 11808  0EC1  01DA               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
 11809                           
 11810                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 11811  0EC2  085B               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
 11812  0EC3  1D03               	btfss	3,2
 11813  0EC4  0008               	return
 11814                           
 11815                           ;usb_device.c: 1741: {
 11816                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 11817  0EC5  3187  2794         	fcall	i1_USBCtrlEPAllowStatusStage
 11818  0EC7  0008               	return
 11819  0EC8                     __end_ofi1_USBCtrlEPServiceComplete:	
 11820                           
 11821                           	psect	text52
 11822  1570                     __ptext52:	
 11823 ;; *************** function i1_USBCtrlEPAllowDataStage *****************
 11824 ;; Defined at:
 11825 ;;		line 1488 in file "mcc_generated_files/usb/usb_device.c"
 11826 ;; Parameters:    Size  Location     Type
 11827 ;;		None
 11828 ;; Auto vars:     Size  Location     Type
 11829 ;;		None
 11830 ;; Return value:  Size  Location     Type
 11831 ;;                  1    wreg      void 
 11832 ;; Registers used:
 11833 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11834 ;; Tracked objects:
 11835 ;;		On entry : 0/0
 11836 ;;		On exit  : 0/0
 11837 ;;		Unchanged: 0/0
 11838 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11841 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11842 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11843 ;;Total ram usage:        2 bytes
 11844 ;; Hardware stack levels used:    1
 11845 ;; Hardware stack levels required when called:    1
 11846 ;; This function calls:
 11847 ;;		i1_USBCtrlTrfTxService
 11848 ;; This function is called by:
 11849 ;;		i1_USBCtrlEPServiceComplete
 11850 ;; This function uses a non-reentrant model
 11851 ;;
 11852                           
 11853                           
 11854                           ;psect for function i1_USBCtrlEPAllowDataStage
 11855  1570                     i1_USBCtrlEPAllowDataStage:	
 11856                           
 11857                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 11858                           
 11859                           ;incstack = 0
 11860                           ; Regs used in i1_USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11861  1570  0023               	movlb	3	; select bank3
 11862  1571  01D8               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
 11863                           
 11864                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 11865  1572  01D7               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
 11866                           
 11867                           ;usb_device.c: 1493: if(controlTransferState == 2)
 11868  1573  3002               	movlw	2
 11869  1574  0662               	xorwf	_controlTransferState^(0+384),w	;volatile
 11870  1575  1D03               	btfss	3,2
 11871  1576  2D9D               	goto	i1l5180
 11872                           
 11873                           ;usb_device.c: 1494: {
 11874                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
 11875  1577  0021               	movlb	1	; select bank1
 11876  1578  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 11877  1579  3E01               	addlw	1
 11878  157A  00F3               	movwf	??i1_USBCtrlEPAllowDataStage
 11879  157B  3000               	movlw	0
 11880  157C  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 11881  157D  00F4               	movwf	??i1_USBCtrlEPAllowDataStage+1
 11882  157E  0873               	movf	??i1_USBCtrlEPAllowDataStage,w
 11883  157F  0086               	movwf	6
 11884  1580  0874               	movf	??i1_USBCtrlEPAllowDataStage+1,w
 11885  1581  0087               	movwf	7
 11886  1582  3008               	movlw	8
 11887  1583  0081               	movwf	1
 11888                           
 11889                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
 11890  1584  3058               	movlw	88
 11891  1585  00F3               	movwf	??i1_USBCtrlEPAllowDataStage
 11892  1586  3000               	movlw	0
 11893  1587  00F4               	movwf	??i1_USBCtrlEPAllowDataStage+1
 11894  1588  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 11895  1589  0086               	movwf	6
 11896  158A  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 11897  158B  0087               	movwf	7
 11898  158C  3142               	addfsr 1,2
 11899  158D  0873               	movf	??i1_USBCtrlEPAllowDataStage,w
 11900  158E  3FC0               	movwi [0]fsr1
 11901  158F  0874               	movf	??i1_USBCtrlEPAllowDataStage+1,w
 11902  1590  3FC1               	movwi [1]fsr1
 11903                           
 11904                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 11905  1591  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 11906  1592  0086               	movwf	6
 11907  1593  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 11908  1594  0087               	movwf	7
 11909  1595  3048               	movlw	72
 11910  1596  0081               	movwf	1
 11911                           
 11912                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 11913  1597  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 11914  1598  0086               	movwf	6
 11915  1599  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 11916  159A  0087               	movwf	7
 11917  159B  1781               	bsf	1,7
 11918                           
 11919                           ;usb_device.c: 1500: }
 11920  159C  0008               	return
 11921  159D                     i1l5180:	
 11922                           
 11923                           ;usb_device.c: 1501: else
 11924                           ;usb_device.c: 1502: {
 11925                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 11926  159D  0021               	movlb	1	; select bank1
 11927  159E  0847               	movf	((_inPipes+1)^(0+128)+3),w	;volatile
 11928  159F  0020               	movlb	0	; select bank0
 11929  15A0  0257               	subwf	87,w	;volatile
 11930  15A1  1D03               	skipz
 11931  15A2  2DA7               	goto	u420_25
 11932  15A3  0021               	movlb	1	; select bank1
 11933  15A4  0846               	movf	(_inPipes^(0+128)+3),w	;volatile
 11934  15A5  0020               	movlb	0	; select bank0
 11935  15A6  0256               	subwf	86,w	;volatile
 11936  15A7                     u420_25:	
 11937  15A7  1803               	skipnc
 11938  15A8  2DB0               	goto	i1l5184
 11939                           
 11940                           ;usb_device.c: 1506: {
 11941                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 11942  15A9  0857               	movf	87,w	;volatile
 11943  15AA  0021               	movlb	1	; select bank1
 11944  15AB  00C7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
 11945  15AC  0020               	movlb	0	; select bank0
 11946  15AD  0856               	movf	86,w	;volatile
 11947  15AE  0021               	movlb	1	; select bank1
 11948  15AF  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
 11949  15B0                     i1l5184:	
 11950                           
 11951                           ;usb_device.c: 1508: }
 11952                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 11953  15B0  3189  21AC         	fcall	i1_USBCtrlTrfTxService
 11954                           
 11955                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
 11956  15B2  3058               	movlw	88
 11957  15B3  00F3               	movwf	??i1_USBCtrlEPAllowDataStage
 11958  15B4  3000               	movlw	0
 11959  15B5  00F4               	movwf	??i1_USBCtrlEPAllowDataStage+1
 11960  15B6  0023               	movlb	3	; select bank3
 11961  15B7  0837               	movf	_pBDTEntryIn^(0+384),w
 11962  15B8  0086               	movwf	6
 11963  15B9  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 11964  15BA  0087               	movwf	7
 11965  15BB  3142               	addfsr 1,2
 11966  15BC  0873               	movf	??i1_USBCtrlEPAllowDataStage,w
 11967  15BD  3FC0               	movwi [0]fsr1
 11968  15BE  0874               	movf	??i1_USBCtrlEPAllowDataStage+1,w
 11969  15BF  3FC1               	movwi [1]fsr1
 11970                           
 11971                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 11972  15C0  0837               	movf	_pBDTEntryIn^(0+384),w
 11973  15C1  0086               	movwf	6
 11974  15C2  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 11975  15C3  0087               	movwf	7
 11976  15C4  3048               	movlw	72
 11977  15C5  0081               	movwf	1
 11978                           
 11979                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 11980  15C6  0837               	movf	_pBDTEntryIn^(0+384),w
 11981  15C7  0086               	movwf	6
 11982  15C8  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 11983  15C9  0087               	movwf	7
 11984  15CA  1781               	bsf	1,7
 11985  15CB  0008               	return
 11986  15CC                     __end_ofi1_USBCtrlEPAllowDataStage:	
 11987                           
 11988                           	psect	text53
 11989  080E                     __ptext53:	
 11990 ;; *************** function i1_USBCheckStdRequest *****************
 11991 ;; Defined at:
 11992 ;;		line 2686 in file "mcc_generated_files/usb/usb_device.c"
 11993 ;; Parameters:    Size  Location     Type
 11994 ;;		None
 11995 ;; Auto vars:     Size  Location     Type
 11996 ;;		None
 11997 ;; Return value:  Size  Location     Type
 11998 ;;                  1    wreg      void 
 11999 ;; Registers used:
 12000 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12001 ;; Tracked objects:
 12002 ;;		On entry : 0/0
 12003 ;;		On exit  : 0/0
 12004 ;;		Unchanged: 0/0
 12005 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12008 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12009 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12010 ;;Total ram usage:        1 bytes
 12011 ;; Hardware stack levels used:    1
 12012 ;; Hardware stack levels required when called:    5
 12013 ;; This function calls:
 12014 ;;		i1_USBStdFeatureReqHandler
 12015 ;;		i1_USBStdGetDscHandler
 12016 ;;		i1_USBStdGetStatusHandler
 12017 ;;		i1_USBStdSetCfgHandler
 12018 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 12019 ;; This function is called by:
 12020 ;;		i1_USBCtrlTrfSetupHandler
 12021 ;; This function uses a non-reentrant model
 12022 ;;
 12023                           
 12024                           
 12025                           ;psect for function i1_USBCheckStdRequest
 12026  080E                     i1_USBCheckStdRequest:	
 12027                           
 12028                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
 12029                           
 12030                           ;incstack = 0
 12031 ;; hardware stack exceeded
 12032                           ; Regs used in i1_USBCheckStdRequest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12033  080E  0020               	movlb	0	; select bank0
 12034  080F  0E50               	swapf	80,w	;volatile
 12035  0810  0C89               	rrf	9,f
 12036  0811  3903               	andlw	3
 12037  0812  3A00               	xorlw	0
 12038  0813  1D03               	btfss	3,2
 12039  0814  0008               	return
 12040  0815  2864               	goto	i1l5682
 12041  0816                     i1l592:	
 12042                           ;usb_device.c: 2691: {
 12043                           ;usb_device.c: 2692: case 5:
 12044                           
 12045                           ;usb_device.c: 2690: switch(SetupPkt.bRequest)
 12046                           
 12047                           
 12048                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
 12049  0816  0021               	movlb	1	; select bank1
 12050  0817  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 12051                           
 12052                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
 12053  0818  3008               	movlw	8
 12054  0819  0020               	movlb	0	; select bank0
 12055  081A  00ED               	movwf	??i1_USBCheckStdRequest
 12056  081B  086D               	movf	??i1_USBCheckStdRequest,w
 12057  081C  0023               	movlb	3	; select bank3
 12058  081D  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
 12059                           
 12060                           ;usb_device.c: 2696: break;
 12061  081E  0008               	return
 12062  081F                     i1l5652:	
 12063                           ;usb_device.c: 2697: case 6:
 12064                           
 12065                           
 12066                           ;usb_device.c: 2698: USBStdGetDscHandler();
 12067  081F  318B  2314         	fcall	i1_USBStdGetDscHandler
 12068                           
 12069                           ;usb_device.c: 2699: break;
 12070  0821  0008               	return
 12071  0822                     i1l5654:	
 12072                           ;usb_device.c: 2700: case 9:
 12073                           
 12074                           
 12075                           ;usb_device.c: 2701: USBStdSetCfgHandler();
 12076  0822  318D  2519         	fcall	i1_USBStdSetCfgHandler
 12077                           
 12078                           ;usb_device.c: 2702: break;
 12079  0824  0008               	return
 12080  0825                     i1l5656:	
 12081                           ;usb_device.c: 2703: case 8:
 12082                           
 12083                           
 12084                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 12085  0825  30EE               	movlw	low _USBActiveConfiguration
 12086  0826  0021               	movlb	1	; select bank1
 12087  0827  00C3               	movwf	_inPipes^(0+128)	;volatile
 12088  0828  3001               	movlw	high _USBActiveConfiguration
 12089  0829  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
 12090                           
 12091                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 12092  082A  1445               	bsf	(_inPipes^(0+128)+2),0	;volatile
 12093                           
 12094                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
 12095  082B  3001               	movlw	1
 12096  082C  0020               	movlb	0	; select bank0
 12097  082D  00ED               	movwf	??i1_USBCheckStdRequest
 12098  082E  086D               	movf	??i1_USBCheckStdRequest,w
 12099  082F  0021               	movlb	1	; select bank1
 12100  0830  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
 12101                           
 12102                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
 12103  0831  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 12104                           
 12105                           ;usb_device.c: 2708: break;
 12106  0832  0008               	return
 12107  0833                     i1l5664:	
 12108                           ;usb_device.c: 2709: case 0:
 12109                           
 12110                           
 12111                           ;usb_device.c: 2710: USBStdGetStatusHandler();
 12112  0833  3194  24C2         	fcall	i1_USBStdGetStatusHandler
 12113                           
 12114                           ;usb_device.c: 2711: break;
 12115  0835  0008               	return
 12116  0836                     i1l5666:	
 12117                           ;usb_device.c: 2712: case 1:
 12118                           
 12119                           
 12120                           ;usb_device.c: 2713: case 3:
 12121                           ;usb_device.c: 2714: USBStdFeatureReqHandler();
 12122  0836  3181  21B8         	fcall	i1_USBStdFeatureReqHandler
 12123                           
 12124                           ;usb_device.c: 2715: break;
 12125  0838  0008               	return
 12126  0839                     i1l5668:	
 12127                           ;usb_device.c: 2716: case 10:
 12128                           
 12129                           
 12130                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 12131  0839  0020               	movlb	0	; select bank0
 12132  083A  0854               	movf	84,w	;volatile
 12133  083B  3EEB               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
 12134  083C  0021               	movlb	1	; select bank1
 12135  083D  00C3               	movwf	_inPipes^(0+128)	;volatile
 12136  083E  3001               	movlw	1
 12137  083F  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
 12138                           
 12139                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 12140  0840  1445               	bsf	(_inPipes^(0+128)+2),0	;volatile
 12141                           
 12142                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
 12143  0841  3001               	movlw	1
 12144  0842  0020               	movlb	0	; select bank0
 12145  0843  00ED               	movwf	??i1_USBCheckStdRequest
 12146  0844  086D               	movf	??i1_USBCheckStdRequest,w
 12147  0845  0021               	movlb	1	; select bank1
 12148  0846  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
 12149                           
 12150                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
 12151  0847  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 12152                           
 12153                           ;usb_device.c: 2721: break;
 12154  0848  0008               	return
 12155  0849                     i1l601:	
 12156                           ;usb_device.c: 2722: case 11:
 12157                           
 12158                           
 12159                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 12160  0849  0021               	movlb	1	; select bank1
 12161  084A  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 12162                           
 12163                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 12164  084B  0020               	movlb	0	; select bank0
 12165  084C  0852               	movf	82,w	;volatile
 12166  084D  00ED               	movwf	??i1_USBCheckStdRequest
 12167  084E  0854               	movf	84,w	;volatile
 12168  084F  3EEB               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
 12169  0850  0086               	movwf	6
 12170  0851  3001               	movlw	1	; select bank3/4
 12171  0852  0087               	movwf	7
 12172  0853  086D               	movf	??i1_USBCheckStdRequest,w
 12173  0854  0081               	movwf	1
 12174                           
 12175                           ;usb_device.c: 2725: break;
 12176  0855  0008               	return
 12177  0856                     i1l5678:	
 12178                           ;usb_device.c: 2726: case 7:
 12179                           
 12180                           
 12181                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 12182  0856  3000               	movlw	0
 12183  0857  00E1               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 12184  0858  3002               	movlw	2
 12185  0859  00E0               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 12186  085A  3000               	movlw	0
 12187  085B  00E2               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 12188  085C  3000               	movlw	0
 12189  085D  00E3               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 12190  085E  3000               	movlw	0
 12191  085F  00E4               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 12192  0860  00E5               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 12193  0861  3190  20D8         	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 12194                           
 12195                           ;usb_device.c: 2732: }
 12196                           
 12197                           ;usb_device.c: 2731: break;
 12198                           
 12199                           ;usb_device.c: 2730: default:
 12200                           
 12201                           ;usb_device.c: 2729: case 12:
 12202                           
 12203                           ;usb_device.c: 2728: break;
 12204  0863  0008               	return
 12205  0864                     i1l5682:	
 12206  0864  0020               	movlb	0	; select bank0
 12207  0865  0851               	movf	81,w	;volatile
 12208                           
 12209                           ; Switch size 1, requested type "space"
 12210                           ; Number of cases is 11, Range of values is 0 to 12
 12211                           ; switch strategies available:
 12212                           ; Name         Instructions Cycles
 12213                           ; direct_byte           32     6 (fixed)
 12214                           ; simple_byte           34    18 (average)
 12215                           ; jumptable            260     6 (fixed)
 12216                           ;	Chosen strategy is direct_byte
 12217  0866  0084               	movwf	4
 12218  0867  300D               	movlw	13
 12219  0868  0204               	subwf	4,w
 12220  0869  1803               	skipnc
 12221  086A  0008               	return
 12222  086B  3198               	movlp	high i1S8522
 12223  086C  3504               	lslf	4,w
 12224  086D  3EAB               	addlw	low i1S8522
 12225  086E  0082               	movwf	2
 12226  086F                     i1l590:	
 12227  086F  0008               	return
 12228  0870                     __end_ofi1_USBCheckStdRequest:	
 12229                           
 12230                           	psect	swtext2
 12231  18AB                     __pswtext2:	
 12232  18AB                     i1S8522:	
 12233  18AB  3188  2833         	ljmp	i1l5664
 12234  18AD  3188  2836         	ljmp	i1l5666
 12235  18AF  3188  286F         	ljmp	i1l590
 12236  18B1  3188  2836         	ljmp	i1l5666
 12237  18B3  3188  286F         	ljmp	i1l590
 12238  18B5  3188  2816         	ljmp	i1l592
 12239  18B7  3188  281F         	ljmp	i1l5652
 12240  18B9  3188  2856         	ljmp	i1l5678
 12241  18BB  3188  2825         	ljmp	i1l5656
 12242  18BD  3188  2822         	ljmp	i1l5654
 12243  18BF  3188  2839         	ljmp	i1l5668
 12244  18C1  3188  2849         	ljmp	i1l601
 12245  18C3  3188  286F         	ljmp	i1l590
 12246                           
 12247                           	psect	text54
 12248  0D19                     __ptext54:	
 12249 ;; *************** function i1_USBStdSetCfgHandler *****************
 12250 ;; Defined at:
 12251 ;;		line 1968 in file "mcc_generated_files/usb/usb_device.c"
 12252 ;; Parameters:    Size  Location     Type
 12253 ;;		None
 12254 ;; Auto vars:     Size  Location     Type
 12255 ;;  USBStdSetCfg    2    7[BANK0h] PTR unsigned char 
 12256 ;;		 -> UEP1(1), 
 12257 ;;  USBStdSetCfg    1   10[BANK0h] unsigned char 
 12258 ;;  USBStdSetCfg    1    9[BANK0h] unsigned char 
 12259 ;; Return value:  Size  Location     Type
 12260 ;;                  1    wreg      void 
 12261 ;; Registers used:
 12262 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12263 ;; Tracked objects:
 12264 ;;		On entry : 0/0
 12265 ;;		On exit  : 0/0
 12266 ;;		Unchanged: 0/0
 12267 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12269 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12270 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12271 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12272 ;;Total ram usage:        5 bytes
 12273 ;; Hardware stack levels used:    1
 12274 ;; Hardware stack levels required when called:    4
 12275 ;; This function calls:
 12276 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 12277 ;;		i1_memset
 12278 ;; This function is called by:
 12279 ;;		i1_USBCheckStdRequest
 12280 ;; This function uses a non-reentrant model
 12281 ;;
 12282                           
 12283                           
 12284                           ;psect for function i1_USBStdSetCfgHandler
 12285  0D19                     i1_USBStdSetCfgHandler:	
 12286                           
 12287                           ;usb_device.c: 1970: uint8_t i;
 12288                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 12289                           
 12290                           ;incstack = 0
 12291 ;; hardware stack exceeded
 12292                           ; Regs used in i1_USBStdSetCfgHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12293  0D19  0021               	movlb	1	; select bank1
 12294  0D1A  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 12295                           
 12296                           ;usb_device.c: 1976: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 
      +                          0; };
 12297  0D1B  300E               	movlw	14
 12298  0D1C  0020               	movlb	0	; select bank0
 12299  0D1D  00E8               	movwf	i1USBStdSetCfgHandler@p+1
 12300  0D1E  3099               	movlw	153
 12301  0D1F  00E7               	movwf	i1USBStdSetCfgHandler@p
 12302  0D20  01E9               	clrf	i1USBStdSetCfgHandler@i_2163
 12303  0D21  3002               	movlw	2
 12304  0D22  0269               	subwf	i1USBStdSetCfgHandler@i_2163,w
 12305  0D23  1803               	btfsc	3,0
 12306  0D24  2D36               	goto	i1l5208
 12307  0D25                     i1l5200:	
 12308  0D25  0867               	movf	i1USBStdSetCfgHandler@p,w
 12309  0D26  0086               	movwf	6
 12310  0D27  0868               	movf	i1USBStdSetCfgHandler@p+1,w
 12311  0D28  0087               	movwf	7
 12312  0D29  0181               	clrf	1
 12313  0D2A  3001               	movlw	1
 12314  0D2B  07E7               	addwf	i1USBStdSetCfgHandler@p,f
 12315  0D2C  3000               	movlw	0
 12316  0D2D  3DE8               	addwfc	i1USBStdSetCfgHandler@p+1,f
 12317  0D2E  3001               	movlw	1
 12318  0D2F  00E6               	movwf	??i1_USBStdSetCfgHandler
 12319  0D30  0866               	movf	??i1_USBStdSetCfgHandler,w
 12320  0D31  07E9               	addwf	i1USBStdSetCfgHandler@i_2163,f
 12321  0D32  3002               	movlw	2
 12322  0D33  0269               	subwf	i1USBStdSetCfgHandler@i_2163,w
 12323  0D34  1C03               	skipc
 12324  0D35  2D25               	goto	i1l5200
 12325  0D36                     i1l5208:	
 12326                           
 12327                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 12328  0D36  3020               	movlw	32
 12329  0D37  00F0               	movwf	i1memset@p1
 12330  0D38  3000               	movlw	0
 12331  0D39  00F1               	movwf	i1memset@p1+1
 12332  0D3A  3000               	movlw	0
 12333  0D3B  00F2               	movwf	i1memset@c
 12334  0D3C  00F3               	movwf	i1memset@c+1
 12335  0D3D  3030               	movlw	48
 12336  0D3E  00F4               	movwf	i1memset@n
 12337  0D3F  3000               	movlw	0
 12338  0D40  00F5               	movwf	i1memset@n+1
 12339  0D41  319E  2642  318D   	fcall	i1_memset
 12340                           
 12341                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 12342  0D44  003D               	movlb	29	; select bank29
 12343  0D45  170E               	bsf	14,6	;volatile
 12344                           
 12345                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
 12346  0D46  0020               	movlb	0	; select bank0
 12347  0D47  01EA               	clrf	i1USBStdSetCfgHandler@i
 12348  0D48  3003               	movlw	3
 12349  0D49  026A               	subwf	i1USBStdSetCfgHandler@i,w
 12350  0D4A  1803               	btfsc	3,0
 12351  0D4B  2D60               	goto	i1l5224
 12352  0D4C                     i1l5218:	
 12353                           
 12354                           ;usb_device.c: 1988: {
 12355                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 12356  0D4C  086A               	movf	i1USBStdSetCfgHandler@i,w
 12357  0D4D  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
 12358  0D4E  0086               	movwf	6
 12359  0D4F  3001               	movlw	1	; select bank3/4
 12360  0D50  0087               	movwf	7
 12361  0D51  0181               	clrf	1
 12362                           
 12363                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 12364  0D52  086A               	movf	i1USBStdSetCfgHandler@i,w
 12365  0D53  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
 12366  0D54  0086               	movwf	6
 12367  0D55  3001               	movlw	1	; select bank3/4
 12368  0D56  0087               	movwf	7
 12369  0D57  0181               	clrf	1
 12370  0D58  3001               	movlw	1
 12371  0D59  00E6               	movwf	??i1_USBStdSetCfgHandler
 12372  0D5A  0866               	movf	??i1_USBStdSetCfgHandler,w
 12373  0D5B  07EA               	addwf	i1USBStdSetCfgHandler@i,f
 12374  0D5C  3003               	movlw	3
 12375  0D5D  026A               	subwf	i1USBStdSetCfgHandler@i,w
 12376  0D5E  1C03               	skipc
 12377  0D5F  2D4C               	goto	i1l5218
 12378  0D60                     i1l5224:	
 12379                           
 12380                           ;usb_device.c: 1991: }
 12381                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 12382  0D60  30EB               	movlw	low _USBAlternateInterface
 12383  0D61  00F0               	movwf	i1memset@p1
 12384  0D62  3001               	movlw	high _USBAlternateInterface
 12385  0D63  00F1               	movwf	i1memset@p1+1
 12386  0D64  3000               	movlw	0
 12387  0D65  00F2               	movwf	i1memset@c
 12388  0D66  00F3               	movwf	i1memset@c+1
 12389  0D67  3002               	movlw	2
 12390  0D68  00F4               	movwf	i1memset@n
 12391  0D69  3000               	movlw	0
 12392  0D6A  00F5               	movwf	i1memset@n+1
 12393  0D6B  319E  2642  318D   	fcall	i1_memset
 12394                           
 12395                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 12396  0D6E  003D               	movlb	29	; select bank29
 12397  0D6F  130E               	bcf	14,6	;volatile
 12398                           
 12399                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 12400  0D70  3028               	movlw	40
 12401  0D71  0023               	movlb	3	; select bank3
 12402  0D72  00B7               	movwf	_pBDTEntryIn^(0+384)
 12403  0D73  3000               	movlw	0
 12404  0D74  00B8               	movwf	(_pBDTEntryIn+1)^(0+384)
 12405                           
 12406                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 12407  0D75  3020               	movlw	32
 12408  0D76  0020               	movlb	0	; select bank0
 12409  0D77  00E6               	movwf	??i1_USBStdSetCfgHandler
 12410  0D78  0866               	movf	??i1_USBStdSetCfgHandler,w
 12411  0D79  0023               	movlb	3	; select bank3
 12412  0D7A  00E4               	movwf	_pBDTEntryEP0OutCurrent^(0+384)
 12413                           
 12414                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 12415  0D7B  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 12416  0D7C  0021               	movlb	1	; select bank1
 12417  0D7D  00C8               	movwf	_pBDTEntryEP0OutNext^(0+128)
 12418  0D7E  39FF               	andlw	255
 12419  0D7F  1D03               	skipz
 12420  0D80  3000               	movlw	0
 12421  0D81  00C9               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
 12422                           
 12423                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 12424  0D82  0020               	movlb	0	; select bank0
 12425  0D83  0852               	movf	82,w	;volatile
 12426  0D84  00E6               	movwf	??i1_USBStdSetCfgHandler
 12427  0D85  0866               	movf	??i1_USBStdSetCfgHandler,w
 12428  0D86  0023               	movlb	3	; select bank3
 12429  0D87  00EE               	movwf	_USBActiveConfiguration^(0+384)	;volatile
 12430                           
 12431                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 12432  0D88  086E               	movf	_USBActiveConfiguration^(0+384),w	;volatile
 12433  0D89  1D03               	btfss	3,2
 12434  0D8A  2D92               	goto	i1l5240
 12435                           
 12436                           ;usb_device.c: 2010: {
 12437                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 12438  0D8B  3010               	movlw	16
 12439  0D8C  0020               	movlb	0	; select bank0
 12440  0D8D  00E6               	movwf	??i1_USBStdSetCfgHandler
 12441  0D8E  0866               	movf	??i1_USBStdSetCfgHandler,w
 12442  0D8F  0023               	movlb	3	; select bank3
 12443  0D90  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
 12444                           
 12445                           ;usb_device.c: 2013: }
 12446  0D91  0008               	return
 12447  0D92                     i1l5240:	
 12448                           
 12449                           ;usb_device.c: 2014: else
 12450                           ;usb_device.c: 2015: {
 12451                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 12452  0D92  3000               	movlw	0
 12453  0D93  0020               	movlb	0	; select bank0
 12454  0D94  00E1               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 12455  0D95  3001               	movlw	1
 12456  0D96  00E0               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 12457  0D97  30EE               	movlw	low _USBActiveConfiguration
 12458  0D98  00E2               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 12459  0D99  3001               	movlw	high _USBActiveConfiguration
 12460  0D9A  00E3               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 12461  0D9B  3001               	movlw	1
 12462  0D9C  00E4               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 12463  0D9D  3000               	movlw	0
 12464  0D9E  00E5               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 12465  0D9F  3190  20D8         	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 12466                           
 12467                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 12468  0DA1  3020               	movlw	32
 12469  0DA2  0020               	movlb	0	; select bank0
 12470  0DA3  00E6               	movwf	??i1_USBStdSetCfgHandler
 12471  0DA4  0866               	movf	??i1_USBStdSetCfgHandler,w
 12472  0DA5  0023               	movlb	3	; select bank3
 12473  0DA6  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
 12474  0DA7  0008               	return
 12475  0DA8                     __end_ofi1_USBStdSetCfgHandler:	
 12476                           
 12477                           	psect	text55
 12478  1E42                     __ptext55:	
 12479 ;; *************** function i1_memset *****************
 12480 ;; Defined at:
 12481 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
 12482 ;; Parameters:    Size  Location     Type
 12483 ;;  p1              2    0[COMMON] PTR void 
 12484 ;;		 -> USBAlternateInterface(2), BDT(48), 
 12485 ;;  c               2    2[COMMON] int 
 12486 ;;  n               2    4[COMMON] unsigned int 
 12487 ;; Auto vars:     Size  Location     Type
 12488 ;;  memset          2    6[COMMON] PTR unsigned char 
 12489 ;;		 -> USBAlternateInterface(2), BDT(48), 
 12490 ;; Return value:  Size  Location     Type
 12491 ;;                  1    wreg      PTR void 
 12492 ;; Registers used:
 12493 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12494 ;; Tracked objects:
 12495 ;;		On entry : 0/0
 12496 ;;		On exit  : 0/0
 12497 ;;		Unchanged: 0/0
 12498 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12499 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12500 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12502 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12503 ;;Total ram usage:        8 bytes
 12504 ;; Hardware stack levels used:    1
 12505 ;; This function calls:
 12506 ;;		Nothing
 12507 ;; This function is called by:
 12508 ;;		i1_USBStdSetCfgHandler
 12509 ;; This function uses a non-reentrant model
 12510 ;;
 12511                           
 12512                           
 12513                           ;psect for function i1_memset
 12514  1E42                     i1_memset:	
 12515                           
 12516                           ;incstack = 0
 12517                           ; Regs used in i1_memset: [wreg+fsr1l+fsr1h+status,2+status,0]
 12518  1E42  0871               	movf	i1memset@p1+1,w
 12519  1E43  00F7               	movwf	i1memset@p+1
 12520  1E44  0870               	movf	i1memset@p1,w
 12521  1E45  00F6               	movwf	i1memset@p
 12522  1E46                     i1l4868:	
 12523  1E46  3001               	movlw	1
 12524  1E47  02F4               	subwf	i1memset@n,f
 12525  1E48  3000               	movlw	0
 12526  1E49  3BF5               	subwfb	i1memset@n+1,f
 12527  1E4A  0A74               	incf	i1memset@n,w
 12528  1E4B  1903               	btfsc	3,2
 12529  1E4C  0A75               	incf	i1memset@n+1,w
 12530  1E4D  1903               	btfsc	3,2
 12531  1E4E  0008               	return
 12532  1E4F  0876               	movf	i1memset@p,w
 12533  1E50  0086               	movwf	6
 12534  1E51  0877               	movf	i1memset@p+1,w
 12535  1E52  0087               	movwf	7
 12536  1E53  0872               	movf	i1memset@c,w
 12537  1E54  0081               	movwf	1
 12538  1E55  3001               	movlw	1
 12539  1E56  07F6               	addwf	i1memset@p,f
 12540  1E57  3000               	movlw	0
 12541  1E58  3DF7               	addwfc	i1memset@p+1,f
 12542  1E59  2E46               	goto	i1l4868
 12543  1E5A                     __end_ofi1_memset:	
 12544                           ;	Return value of i1_memset is never used
 12545                           
 12546                           
 12547                           	psect	text56
 12548  14C2                     __ptext56:	
 12549 ;; *************** function i1_USBStdGetStatusHandler *****************
 12550 ;; Defined at:
 12551 ;;		line 2129 in file "mcc_generated_files/usb/usb_device.c"
 12552 ;; Parameters:    Size  Location     Type
 12553 ;;		None
 12554 ;; Auto vars:     Size  Location     Type
 12555 ;;  USBStdGetSta    2    1[COMMON] PTR struct __BDT
 12556 ;;		 -> RAM(4096), BDT(48), NULL(0), 
 12557 ;; Return value:  Size  Location     Type
 12558 ;;                  1    wreg      void 
 12559 ;; Registers used:
 12560 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 12561 ;; Tracked objects:
 12562 ;;		On entry : 0/0
 12563 ;;		On exit  : 0/0
 12564 ;;		Unchanged: 0/0
 12565 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12567 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12568 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12569 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12570 ;;Total ram usage:        3 bytes
 12571 ;; Hardware stack levels used:    1
 12572 ;; This function calls:
 12573 ;;		Nothing
 12574 ;; This function is called by:
 12575 ;;		i1_USBCheckStdRequest
 12576 ;; This function uses a non-reentrant model
 12577 ;;
 12578                           
 12579                           
 12580                           ;psect for function i1_USBStdGetStatusHandler
 12581  14C2                     i1_USBStdGetStatusHandler:	
 12582                           
 12583                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 12584                           
 12585                           ;incstack = 0
 12586                           ; Regs used in i1_USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
 12587  14C2  0020               	movlb	0	; select bank0
 12588  14C3  01D8               	clrf	88	;volatile
 12589                           
 12590                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 12591  14C4  01D9               	clrf	89	;volatile
 12592                           
 12593                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 12594  14C5  2CFE               	goto	i1l5296
 12595  14C6                     i1l530:	
 12596                           ;usb_device.c: 2135: {
 12597                           ;usb_device.c: 2136: case (0x00):
 12598                           
 12599                           
 12600                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 12601  14C6  0021               	movlb	1	; select bank1
 12602  14C7  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 12603                           
 12604                           ;usb_device.c: 2145: }
 12605                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 12606                           
 12607                           ;usb_device.c: 2143: {
 12608                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 12609                           
 12610                           ;usb_device.c: 2142: if(0 == 1)
 12611  14C8  0023               	movlb	3	; select bank3
 12612  14C9  0360               	decf	_RemoteWakeup^(0+384),w	;volatile
 12613  14CA  1D03               	btfss	3,2
 12614  14CB  2D0A               	goto	i1l533
 12615                           
 12616                           ;usb_device.c: 2148: {
 12617                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 12618  14CC  0020               	movlb	0	; select bank0
 12619  14CD  14D8               	bsf	88,1	;volatile
 12620                           
 12621                           ;usb_device.c: 2150: }
 12622                           ;usb_device.c: 2151: break;
 12623  14CE  2D0A               	goto	i1l533
 12624  14CF                     i1l534:	
 12625                           ;usb_device.c: 2152: case (0x01):
 12626                           
 12627                           
 12628                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 12629  14CF  0021               	movlb	1	; select bank1
 12630  14D0  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 12631                           
 12632                           ;usb_device.c: 2154: break;
 12633  14D1  2D0A               	goto	i1l533
 12634  14D2                     i1l535:	
 12635                           ;usb_device.c: 2155: case (0x02):
 12636                           
 12637                           
 12638                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 12639  14D2  0021               	movlb	1	; select bank1
 12640  14D3  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 12641                           
 12642                           ;usb_device.c: 2160: {
 12643                           ;usb_device.c: 2161: BDT_ENTRY *p;
 12644                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 12645  14D4  0020               	movlb	0	; select bank0
 12646  14D5  1BD4               	btfsc	84,7	;volatile
 12647  14D6  2CE2               	goto	i1l5286
 12648                           
 12649                           ;usb_device.c: 2164: {
 12650                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 12651  14D7  0854               	movf	84,w	;volatile
 12652  14D8  390F               	andlw	15
 12653  14D9  0709               	addwf	9,w
 12654  14DA  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 12655  14DB  0086               	movwf	6
 12656  14DC  3001               	movlw	1	; select bank3/4
 12657  14DD  0087               	movwf	7
 12658  14DE  3F40               	moviw [0]fsr1
 12659  14DF  00F1               	movwf	i1USBStdGetStatusHandler@p
 12660  14E0  3F41               	moviw [1]fsr1
 12661  14E1  2CEC               	goto	L13
 12662  14E2                     i1l5286:	
 12663                           ;usb_device.c: 2166: }
 12664                           
 12665                           
 12666                           ;usb_device.c: 2167: else
 12667                           ;usb_device.c: 2168: {
 12668                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 12669  14E2  0854               	movf	84,w	;volatile
 12670  14E3  390F               	andlw	15
 12671  14E4  0709               	addwf	9,w
 12672  14E5  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 12673  14E6  0086               	movwf	6
 12674  14E7  3001               	movlw	1	; select bank3/4
 12675  14E8  0087               	movwf	7
 12676  14E9  3F40               	moviw [0]fsr1
 12677  14EA  00F1               	movwf	i1USBStdGetStatusHandler@p
 12678  14EB  3F41               	moviw [1]fsr1
 12679  14EC                     L13:	
 12680  14EC  00F2               	movwf	i1USBStdGetStatusHandler@p+1
 12681                           
 12682                           ;usb_device.c: 2170: }
 12683                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 12684  14ED  0871               	movf	i1USBStdGetStatusHandler@p,w
 12685  14EE  0086               	movwf	6
 12686  14EF  0872               	movf	i1USBStdGetStatusHandler@p+1,w
 12687  14F0  0087               	movwf	7
 12688  14F1  1F81               	btfss	1,7
 12689  14F2  2D0A               	goto	i1l533
 12690  14F3  0871               	movf	i1USBStdGetStatusHandler@p,w
 12691  14F4  0086               	movwf	6
 12692  14F5  0872               	movf	i1USBStdGetStatusHandler@p+1,w
 12693  14F6  0087               	movwf	7
 12694  14F7  1D01               	btfss	1,2
 12695  14F8  2D0A               	goto	i1l533
 12696                           
 12697                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 12698  14F9  3001               	movlw	1
 12699  14FA  00F0               	movwf	??i1_USBStdGetStatusHandler
 12700  14FB  0870               	movf	??i1_USBStdGetStatusHandler,w
 12701  14FC  00D8               	movwf	88	;volatile
 12702                           
 12703                           ;usb_device.c: 2175: }
 12704                           ;usb_device.c: 2176: }
 12705                           
 12706                           ;usb_device.c: 2174: break;
 12707  14FD  2D0A               	goto	i1l533
 12708  14FE                     i1l5296:	
 12709  14FE  0850               	movf	80,w	;volatile
 12710  14FF  391F               	andlw	31
 12711                           
 12712                           ; Switch size 1, requested type "space"
 12713                           ; Number of cases is 3, Range of values is 0 to 2
 12714                           ; switch strategies available:
 12715                           ; Name         Instructions Cycles
 12716                           ; simple_byte           10     6 (average)
 12717                           ; direct_byte           12     6 (fixed)
 12718                           ; jumptable            260     6 (fixed)
 12719                           ;	Chosen strategy is simple_byte
 12720  1500  3A00               	xorlw	0	; case 0
 12721  1501  1903               	skipnz
 12722  1502  2CC6               	goto	i1l530
 12723  1503  3A01               	xorlw	1	; case 1
 12724  1504  1903               	skipnz
 12725  1505  2CCF               	goto	i1l534
 12726  1506  3A03               	xorlw	3	; case 2
 12727  1507  1903               	skipnz
 12728  1508  2CD2               	goto	i1l535
 12729  1509  2D0A               	goto	i1l533
 12730  150A                     i1l533:	
 12731                           
 12732                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 12733  150A  0021               	movlb	1	; select bank1
 12734  150B  1FC5               	btfss	(_inPipes^(0+128)+2),7	;volatile
 12735  150C  0008               	return
 12736                           
 12737                           ;usb_device.c: 2179: {
 12738                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 12739  150D  3058               	movlw	88
 12740  150E  00C3               	movwf	_inPipes^(0+128)	;volatile
 12741  150F  3000               	movlw	0
 12742  1510  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
 12743                           
 12744                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 12745  1511  1445               	bsf	(_inPipes^(0+128)+2),0	;volatile
 12746                           
 12747                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 12748  1512  3002               	movlw	2
 12749  1513  00F0               	movwf	??i1_USBStdGetStatusHandler
 12750  1514  0870               	movf	??i1_USBStdGetStatusHandler,w
 12751  1515  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
 12752  1516  0008               	return
 12753  1517                     __end_ofi1_USBStdGetStatusHandler:	
 12754                           
 12755                           	psect	text57
 12756  0B14                     __ptext57:	
 12757 ;; *************** function i1_USBStdGetDscHandler *****************
 12758 ;; Defined at:
 12759 ;;		line 2043 in file "mcc_generated_files/usb/usb_device.c"
 12760 ;; Parameters:    Size  Location     Type
 12761 ;;		None
 12762 ;; Auto vars:     Size  Location     Type
 12763 ;;		None
 12764 ;; Return value:  Size  Location     Type
 12765 ;;                  1    wreg      void 
 12766 ;; Registers used:
 12767 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 12768 ;; Tracked objects:
 12769 ;;		On entry : 0/0
 12770 ;;		On exit  : 0/0
 12771 ;;		Unchanged: 0/0
 12772 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12775 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12776 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12777 ;;Total ram usage:        3 bytes
 12778 ;; Hardware stack levels used:    1
 12779 ;; This function calls:
 12780 ;;		Nothing
 12781 ;; This function is called by:
 12782 ;;		i1_USBCheckStdRequest
 12783 ;; This function uses a non-reentrant model
 12784 ;;
 12785                           
 12786                           
 12787                           ;psect for function i1_USBStdGetDscHandler
 12788  0B14                     i1_USBStdGetDscHandler:	
 12789                           
 12790                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 12791                           
 12792                           ;incstack = 0
 12793                           ; Regs used in i1_USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
 12794  0B14  3080               	movlw	128
 12795  0B15  0020               	movlb	0	; select bank0
 12796  0B16  0650               	xorwf	80,w	;volatile
 12797  0B17  1D03               	btfss	3,2
 12798  0B18  0008               	return
 12799                           
 12800                           ;usb_device.c: 2046: {
 12801                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 12802  0B19  30C0               	movlw	192
 12803  0B1A  00F0               	movwf	??i1_USBStdGetDscHandler
 12804  0B1B  0870               	movf	??i1_USBStdGetDscHandler,w
 12805  0B1C  0021               	movlb	1	; select bank1
 12806  0B1D  00C5               	movwf	(_inPipes^(0+128)+2)	;volatile
 12807                           
 12808                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 12809  0B1E  2B86               	goto	i1l5274
 12810  0B1F                     i1l5248:	
 12811                           ;usb_device.c: 2050: {
 12812                           ;usb_device.c: 2051: case 0x01:
 12813                           
 12814                           
 12815                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 12816  0B1F  30C5               	movlw	low (_device_dsc| (0+32768))
 12817  0B20  0021               	movlb	1	; select bank1
 12818  0B21  00C3               	movwf	_inPipes^(0+128)	;volatile
 12819  0B22  3098               	movlw	high (_device_dsc| (0+32768))
 12820  0B23  00C4               	movwf	(_inPipes^(0+128)+1)	;volatile
 12821                           
 12822                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 12823  0B24  3000               	movlw	0
 12824  0B25  00C7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
 12825  0B26  3012               	movlw	18
 12826  0B27  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
 12827                           
 12828                           ;usb_device.c: 2058: break;
 12829  0B28  0008               	return
 12830  0B29                     i1l5252:	
 12831                           ;usb_device.c: 2059: case 0x02:
 12832                           
 12833                           
 12834                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 12835  0B29  0020               	movlb	0	; select bank0
 12836  0B2A  0852               	movf	82,w	;volatile
 12837  0B2B  1D03               	btfss	3,2
 12838  0B2C  2B5C               	goto	i1l5260
 12839                           
 12840                           ;usb_device.c: 2064: {
 12841                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 12842  0B2D  0852               	movf	82,w	;volatile
 12843  0B2E  00F0               	movwf	??i1_USBStdGetDscHandler
 12844  0B2F  01F1               	clrf	??i1_USBStdGetDscHandler+1
 12845  0B30  35F0               	lslf	??i1_USBStdGetDscHandler,f
 12846  0B31  0DF1               	rlf	??i1_USBStdGetDscHandler+1,f
 12847  0B32  30E8               	movlw	low (_USB_CD_Ptr| (0+32768))
 12848  0B33  0770               	addwf	??i1_USBStdGetDscHandler,w
 12849  0B34  0084               	movwf	4
 12850  0B35  3098               	movlw	high (_USB_CD_Ptr| (0+32768))
 12851  0B36  3D71               	addwfc	??i1_USBStdGetDscHandler+1,w
 12852  0B37  0085               	movwf	5
 12853  0B38  3F00               	moviw [0]fsr0
 12854  0B39  0021               	movlb	1	; select bank1
 12855  0B3A  00C3               	movwf	_inPipes^(0+128)	;volatile
 12856  0B3B  3F01               	moviw [1]fsr0
 12857  0B3C  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
 12858                           
 12859                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 12860  0B3D  0844               	movf	(_inPipes+1)^(0+128),w	;volatile
 12861  0B3E  00F1               	movwf	??i1_USBStdGetDscHandler+1
 12862  0B3F  0843               	movf	_inPipes^(0+128),w	;volatile
 12863  0B40  00F0               	movwf	??i1_USBStdGetDscHandler
 12864  0B41  3002               	movlw	2
 12865  0B42  0770               	addwf	??i1_USBStdGetDscHandler,w
 12866  0B43  0084               	movwf	4
 12867  0B44  0871               	movf	??i1_USBStdGetDscHandler+1,w
 12868  0B45  1803               	skipnc
 12869  0B46  0A71               	incf	??i1_USBStdGetDscHandler+1,w
 12870  0B47  0085               	movwf	5
 12871  0B48  0800               	movf	0,w	;code access
 12872  0B49  00F2               	movwf	??i1_USBStdGetDscHandler+2
 12873  0B4A  0872               	movf	??i1_USBStdGetDscHandler+2,w
 12874  0B4B  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
 12875                           
 12876                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 12877  0B4C  0844               	movf	(_inPipes+1)^(0+128),w	;volatile
 12878  0B4D  00F1               	movwf	??i1_USBStdGetDscHandler+1
 12879  0B4E  0843               	movf	_inPipes^(0+128),w	;volatile
 12880  0B4F  00F0               	movwf	??i1_USBStdGetDscHandler
 12881  0B50  3003               	movlw	3
 12882  0B51  0770               	addwf	??i1_USBStdGetDscHandler,w
 12883  0B52  0084               	movwf	4
 12884  0B53  0871               	movf	??i1_USBStdGetDscHandler+1,w
 12885  0B54  1803               	skipnc
 12886  0B55  0A71               	incf	??i1_USBStdGetDscHandler+1,w
 12887  0B56  0085               	movwf	5
 12888  0B57  0800               	movf	0,w	;code access
 12889  0B58  00F2               	movwf	??i1_USBStdGetDscHandler+2
 12890  0B59  0872               	movf	??i1_USBStdGetDscHandler+2,w
 12891  0B5A  00C7               	movwf	(_inPipes^(0+128)+4)	;volatile
 12892                           
 12893                           ;usb_device.c: 2076: }
 12894  0B5B  0008               	return
 12895  0B5C                     i1l5260:	
 12896                           
 12897                           ;usb_device.c: 2077: else
 12898                           ;usb_device.c: 2078: {
 12899                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 12900  0B5C  0021               	movlb	1	; select bank1
 12901  0B5D  01C5               	clrf	(_inPipes^(0+128)+2)	;volatile
 12902                           
 12903                           ;usb_device.c: 2080: }
 12904                           ;usb_device.c: 2081: break;
 12905  0B5E  0008               	return
 12906  0B5F                     i1l5262:	
 12907                           ;usb_device.c: 2082: case 0x03:
 12908                           
 12909                           
 12910                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 12911  0B5F  3003               	movlw	3
 12912  0B60  0020               	movlb	0	; select bank0
 12913  0B61  0252               	subwf	82,w	;volatile
 12914  0B62  1803               	skipnc
 12915  0B63  2B80               	goto	i1l5268
 12916                           
 12917                           ;usb_device.c: 2087: {
 12918                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 12919  0B64  0852               	movf	82,w	;volatile
 12920  0B65  00F0               	movwf	??i1_USBStdGetDscHandler
 12921  0B66  01F1               	clrf	??i1_USBStdGetDscHandler+1
 12922  0B67  35F0               	lslf	??i1_USBStdGetDscHandler,f
 12923  0B68  0DF1               	rlf	??i1_USBStdGetDscHandler+1,f
 12924  0B69  30DF               	movlw	low (_USB_SD_Ptr| (0+32768))
 12925  0B6A  0770               	addwf	??i1_USBStdGetDscHandler,w
 12926  0B6B  0084               	movwf	4
 12927  0B6C  3098               	movlw	high (_USB_SD_Ptr| (0+32768))
 12928  0B6D  3D71               	addwfc	??i1_USBStdGetDscHandler+1,w
 12929  0B6E  0085               	movwf	5
 12930  0B6F  3F00               	moviw [0]fsr0
 12931  0B70  0021               	movlb	1	; select bank1
 12932  0B71  00C3               	movwf	_inPipes^(0+128)	;volatile
 12933  0B72  3F01               	moviw [1]fsr0
 12934  0B73  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
 12935                           
 12936                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 12937  0B74  0843               	movf	_inPipes^(0+128),w	;volatile
 12938  0B75  0084               	movwf	4
 12939  0B76  0844               	movf	(_inPipes+1)^(0+128),w	;volatile
 12940  0B77  0085               	movwf	5
 12941  0B78  0800               	movf	0,w	;code access
 12942  0B79  00F0               	movwf	??i1_USBStdGetDscHandler
 12943  0B7A  01F1               	clrf	??i1_USBStdGetDscHandler+1
 12944  0B7B  0870               	movf	??i1_USBStdGetDscHandler,w
 12945  0B7C  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
 12946  0B7D  0871               	movf	??i1_USBStdGetDscHandler+1,w
 12947  0B7E  00C7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
 12948                           
 12949                           ;usb_device.c: 2092: }
 12950  0B7F  0008               	return
 12951  0B80                     i1l5268:	
 12952                           
 12953                           ;usb_device.c: 2102: else
 12954                           ;usb_device.c: 2103: {
 12955                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 12956  0B80  0021               	movlb	1	; select bank1
 12957  0B81  01C5               	clrf	(_inPipes^(0+128)+2)	;volatile
 12958                           
 12959                           ;usb_device.c: 2105: }
 12960                           ;usb_device.c: 2106: break;
 12961  0B82  0008               	return
 12962  0B83                     i1l5270:	
 12963                           ;usb_device.c: 2107: default:
 12964                           
 12965                           
 12966                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 12967  0B83  0021               	movlb	1	; select bank1
 12968  0B84  01C5               	clrf	(_inPipes^(0+128)+2)	;volatile
 12969                           
 12970                           ;usb_device.c: 2110: }
 12971                           
 12972                           ;usb_device.c: 2109: break;
 12973  0B85  0008               	return
 12974  0B86                     i1l5274:	
 12975  0B86  0020               	movlb	0	; select bank0
 12976  0B87  0853               	movf	83,w	;volatile
 12977                           
 12978                           ; Switch size 1, requested type "space"
 12979                           ; Number of cases is 3, Range of values is 1 to 3
 12980                           ; switch strategies available:
 12981                           ; Name         Instructions Cycles
 12982                           ; simple_byte           10     6 (average)
 12983                           ; direct_byte           15     9 (fixed)
 12984                           ; jumptable            263     9 (fixed)
 12985                           ;	Chosen strategy is simple_byte
 12986  0B88  3A01               	xorlw	1	; case 1
 12987  0B89  1903               	skipnz
 12988  0B8A  2B1F               	goto	i1l5248
 12989  0B8B  3A03               	xorlw	3	; case 2
 12990  0B8C  1903               	skipnz
 12991  0B8D  2B29               	goto	i1l5252
 12992  0B8E  3A01               	xorlw	1	; case 3
 12993  0B8F  1903               	skipnz
 12994  0B90  2B5F               	goto	i1l5262
 12995  0B91  2B83               	goto	i1l5270
 12996  0B92  0008               	return
 12997  0B93                     __end_ofi1_USBStdGetDscHandler:	
 12998                           
 12999                           	psect	text58
 13000  01B8                     __ptext58:	
 13001 ;; *************** function i1_USBStdFeatureReqHandler *****************
 13002 ;; Defined at:
 13003 ;;		line 2754 in file "mcc_generated_files/usb/usb_device.c"
 13004 ;; Parameters:    Size  Location     Type
 13005 ;;		None
 13006 ;; Auto vars:     Size  Location     Type
 13007 ;;  USBStdFeatur    2   11[BANK0h] PTR struct __BDT
 13008 ;;		 -> RAM(4096), BDT(48), NULL(0), 
 13009 ;;  USBStdFeatur    2    8[BANK0h] PTR unsigned char 
 13010 ;;		 -> UEP0(1), 
 13011 ;;  USBStdFeatur    1   10[BANK0h] struct .
 13012 ;; Return value:  Size  Location     Type
 13013 ;;                  1    wreg      void 
 13014 ;; Registers used:
 13015 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13016 ;; Tracked objects:
 13017 ;;		On entry : 0/0
 13018 ;;		On exit  : 0/0
 13019 ;;		Unchanged: 0/0
 13020 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13022 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13023 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13024 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13025 ;;Total ram usage:        7 bytes
 13026 ;; Hardware stack levels used:    1
 13027 ;; Hardware stack levels required when called:    4
 13028 ;; This function calls:
 13029 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 13030 ;; This function is called by:
 13031 ;;		i1_USBCheckStdRequest
 13032 ;; This function uses a non-reentrant model
 13033 ;;
 13034                           
 13035                           
 13036                           ;psect for function i1_USBStdFeatureReqHandler
 13037  01B8                     i1_USBStdFeatureReqHandler:	
 13038                           
 13039                           ;usb_device.c: 2756: BDT_ENTRY *p;
 13040                           ;usb_device.c: 2757: EP_STATUS current_ep_data;
 13041                           ;usb_device.c: 2761: unsigned char* pUEP;
 13042                           ;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&
 13043                           ;usb_device.c: 2800: (SetupPkt.Recipient == (0x00)))
 13044                           
 13045                           ;incstack = 0
 13046 ;; hardware stack exceeded
 13047                           ; Regs used in i1_USBStdFeatureReqHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13048  01B8  0020               	movlb	0	; select bank0
 13049  01B9  0352               	decf	82,w	;volatile
 13050  01BA  1D03               	btfss	3,2
 13051  01BB  29D0               	goto	i1l5316
 13052  01BC  0850               	movf	80,w	;volatile
 13053  01BD  391F               	andlw	31
 13054  01BE  3A00               	xorlw	0
 13055  01BF  1D03               	skipz
 13056  01C0  29D0               	goto	i1l5316
 13057                           
 13058                           ;usb_device.c: 2801: {
 13059                           ;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
 13060  01C1  0021               	movlb	1	; select bank1
 13061  01C2  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 13062                           
 13063                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
 13064  01C3  3003               	movlw	3
 13065  01C4  0020               	movlb	0	; select bank0
 13066  01C5  0651               	xorwf	81,w	;volatile
 13067  01C6  1D03               	btfss	3,2
 13068  01C7  29CE               	goto	i1l5314
 13069                           
 13070                           ;usb_device.c: 2804: RemoteWakeup = 1;
 13071  01C8  3001               	movlw	1
 13072  01C9  00E6               	movwf	??i1_USBStdFeatureReqHandler
 13073  01CA  0866               	movf	??i1_USBStdFeatureReqHandler,w
 13074  01CB  0023               	movlb	3	; select bank3
 13075  01CC  00E0               	movwf	_RemoteWakeup^(0+384)	;volatile
 13076  01CD  29D0               	goto	i1l5316
 13077  01CE                     i1l5314:	
 13078                           
 13079                           ;usb_device.c: 2805: else
 13080                           ;usb_device.c: 2806: RemoteWakeup = 0;
 13081  01CE  0023               	movlb	3	; select bank3
 13082  01CF  01E0               	clrf	_RemoteWakeup^(0+384)	;volatile
 13083  01D0                     i1l5316:	
 13084                           
 13085                           ;usb_device.c: 2807: }
 13086                           ;usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&
 13087                           ;usb_device.c: 2811: (SetupPkt.Recipient == (0x02))&&
 13088                           ;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 13089                           ;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
 13090  01D0  0020               	movlb	0	; select bank0
 13091  01D1  0852               	movf	82,w	;volatile
 13092  01D2  1D03               	btfss	3,2
 13093  01D3  0008               	return
 13094  01D4  0850               	movf	80,w	;volatile
 13095  01D5  391F               	andlw	31
 13096  01D6  3A02               	xorlw	2
 13097  01D7  1D03               	skipz
 13098  01D8  0008               	return
 13099  01D9  0854               	movf	84,w	;volatile
 13100  01DA  390F               	andlw	15
 13101  01DB  3A00               	xorlw	0
 13102  01DC  1903               	skipnz
 13103  01DD  0008               	return
 13104  01DE  0854               	movf	84,w	;volatile
 13105  01DF  390F               	andlw	15
 13106  01E0  00E6               	movwf	??i1_USBStdFeatureReqHandler
 13107  01E1  3003               	movlw	3
 13108  01E2  0266               	subwf	??i1_USBStdFeatureReqHandler,w
 13109  01E3  1803               	skipnc
 13110  01E4  0008               	return
 13111  01E5  3020               	movlw	32
 13112  01E6  0023               	movlb	3	; select bank3
 13113  01E7  0665               	xorwf	_USBDeviceState^(0+384),w	;volatile
 13114  01E8  1D03               	btfss	3,2
 13115  01E9  0008               	return
 13116                           
 13117                           ;usb_device.c: 2814: {
 13118                           ;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
 13119  01EA  0021               	movlb	1	; select bank1
 13120  01EB  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 13121                           
 13122                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
 13123  01EC  0020               	movlb	0	; select bank0
 13124  01ED  1BD4               	btfsc	84,7	;volatile
 13125  01EE  29FE               	goto	i1l5330
 13126                           
 13127                           ;usb_device.c: 2821: {
 13128                           ;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 13129  01EF  0854               	movf	84,w	;volatile
 13130  01F0  390F               	andlw	15
 13131  01F1  0709               	addwf	9,w
 13132  01F2  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 13133  01F3  0086               	movwf	6
 13134  01F4  3001               	movlw	1	; select bank3/4
 13135  01F5  0087               	movwf	7
 13136  01F6  3F40               	moviw [0]fsr1
 13137  01F7  00EB               	movwf	i1USBStdFeatureReqHandler@p
 13138  01F8  3F41               	moviw [1]fsr1
 13139  01F9  00EC               	movwf	i1USBStdFeatureReqHandler@p+1
 13140                           
 13141                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 13142  01FA  0854               	movf	84,w	;volatile
 13143  01FB  390F               	andlw	15
 13144  01FC  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
 13145  01FD  2A0C               	goto	L14
 13146  01FE                     i1l5330:	
 13147                           ;usb_device.c: 2824: }
 13148                           
 13149                           
 13150                           ;usb_device.c: 2825: else
 13151                           ;usb_device.c: 2826: {
 13152                           ;usb_device.c: 2827: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 13153  01FE  0854               	movf	84,w	;volatile
 13154  01FF  390F               	andlw	15
 13155  0200  0709               	addwf	9,w
 13156  0201  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 13157  0202  0086               	movwf	6
 13158  0203  3001               	movlw	1	; select bank3/4
 13159  0204  0087               	movwf	7
 13160  0205  3F40               	moviw [0]fsr1
 13161  0206  00EB               	movwf	i1USBStdFeatureReqHandler@p
 13162  0207  3F41               	moviw [1]fsr1
 13163  0208  00EC               	movwf	i1USBStdFeatureReqHandler@p+1
 13164                           
 13165                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 13166  0209  0854               	movf	84,w	;volatile
 13167  020A  390F               	andlw	15
 13168  020B  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
 13169  020C                     L14:	
 13170  020C  0086               	movwf	6
 13171  020D  3001               	movlw	1	; select bank3/4
 13172  020E  0087               	movwf	7
 13173  020F  0801               	movf	1,w
 13174  0210  00E6               	movwf	??i1_USBStdFeatureReqHandler
 13175  0211  0866               	movf	??i1_USBStdFeatureReqHandler,w
 13176  0212  00EA               	movwf	i1USBStdFeatureReqHandler@current_ep_data
 13177                           
 13178                           ;usb_device.c: 2829: }
 13179                           ;usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
 13180  0213  186A               	btfsc	i1USBStdFeatureReqHandler@current_ep_data,0
 13181  0214  2A1F               	goto	i1l5336
 13182                           
 13183                           ;usb_device.c: 2836: {
 13184                           ;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 13185  0215  30FB               	movlw	251
 13186  0216  00E6               	movwf	??i1_USBStdFeatureReqHandler
 13187  0217  30FF               	movlw	255
 13188  0218  00E7               	movwf	??i1_USBStdFeatureReqHandler+1
 13189  0219  086B               	movf	i1USBStdFeatureReqHandler@p,w
 13190  021A  0566               	andwf	??i1_USBStdFeatureReqHandler,w
 13191  021B  00EB               	movwf	i1USBStdFeatureReqHandler@p
 13192  021C  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 13193  021D  0567               	andwf	??i1_USBStdFeatureReqHandler+1,w
 13194  021E  2A24               	goto	L15
 13195  021F                     i1l5336:	
 13196                           ;usb_device.c: 2838: }
 13197                           
 13198                           
 13199                           ;usb_device.c: 2839: else
 13200                           ;usb_device.c: 2840: {
 13201                           ;usb_device.c: 2841: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
 13202  021F  3004               	movlw	4
 13203  0220  046B               	iorwf	i1USBStdFeatureReqHandler@p,w
 13204  0221  00EB               	movwf	i1USBStdFeatureReqHandler@p
 13205  0222  3000               	movlw	0
 13206  0223  046C               	iorwf	i1USBStdFeatureReqHandler@p+1,w
 13207  0224                     L15:	
 13208  0224  00EC               	movwf	i1USBStdFeatureReqHandler@p+1
 13209                           
 13210                           ;usb_device.c: 2842: }
 13211                           ;usb_device.c: 2847: if(SetupPkt.EPDir == 0)
 13212  0225  1BD4               	btfsc	84,7	;volatile
 13213  0226  2A33               	goto	i1l5342
 13214                           
 13215                           ;usb_device.c: 2848: {
 13216                           ;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 13217  0227  0854               	movf	84,w	;volatile
 13218  0228  390F               	andlw	15
 13219  0229  0709               	addwf	9,w
 13220  022A  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 13221  022B  0086               	movwf	6
 13222  022C  3001               	movlw	1	; select bank3/4
 13223  022D  0087               	movwf	7
 13224  022E  086B               	movf	i1USBStdFeatureReqHandler@p,w
 13225  022F  3FC0               	movwi [0]fsr1
 13226  0230  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 13227  0231  3FC1               	movwi [1]fsr1
 13228                           
 13229                           ;usb_device.c: 2850: }
 13230  0232  2A3E               	goto	i1l5344
 13231  0233                     i1l5342:	
 13232                           
 13233                           ;usb_device.c: 2851: else
 13234                           ;usb_device.c: 2852: {
 13235                           ;usb_device.c: 2853: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 13236  0233  0854               	movf	84,w	;volatile
 13237  0234  390F               	andlw	15
 13238  0235  0709               	addwf	9,w
 13239  0236  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 13240  0237  0086               	movwf	6
 13241  0238  3001               	movlw	1	; select bank3/4
 13242  0239  0087               	movwf	7
 13243  023A  086B               	movf	i1USBStdFeatureReqHandler@p,w
 13244  023B  3FC0               	movwi [0]fsr1
 13245  023C  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 13246  023D  3FC1               	movwi [1]fsr1
 13247  023E                     i1l5344:	
 13248                           
 13249                           ;usb_device.c: 2854: }
 13250                           ;usb_device.c: 2857: if(SetupPkt.bRequest == 3)
 13251  023E  3003               	movlw	3
 13252  023F  0651               	xorwf	81,w	;volatile
 13253  0240  1D03               	btfss	3,2
 13254  0241  2A60               	goto	i1l5358
 13255                           
 13256                           ;usb_device.c: 2858: {
 13257                           ;usb_device.c: 2859: if(p->STAT.UOWN == 1)
 13258  0242  086B               	movf	i1USBStdFeatureReqHandler@p,w
 13259  0243  0086               	movwf	6
 13260  0244  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 13261  0245  0087               	movwf	7
 13262  0246  1F81               	btfss	1,7
 13263  0247  2A55               	goto	i1l5354
 13264                           
 13265                           ;usb_device.c: 2860: {
 13266                           ;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
 13267  0248  1BD4               	btfsc	84,7	;volatile
 13268  0249  2A4E               	goto	i1l5352
 13269                           
 13270                           ;usb_device.c: 2864: {
 13271                           ;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 13272  024A  0854               	movf	84,w	;volatile
 13273  024B  390F               	andlw	15
 13274  024C  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
 13275  024D  2A51               	goto	L16
 13276  024E                     i1l5352:	
 13277                           ;usb_device.c: 2866: }
 13278                           
 13279                           
 13280                           ;usb_device.c: 2867: else
 13281                           ;usb_device.c: 2868: {
 13282                           ;usb_device.c: 2869: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 13283  024E  0854               	movf	84,w	;volatile
 13284  024F  390F               	andlw	15
 13285  0250  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
 13286  0251                     L16:	
 13287  0251  0086               	movwf	6
 13288  0252  3001               	movlw	1	; select bank3/4
 13289  0253  0087               	movwf	7
 13290  0254  1481               	bsf	1,1
 13291  0255                     i1l5354:	
 13292                           
 13293                           ;usb_device.c: 2870: }
 13294                           ;usb_device.c: 2871: }
 13295                           ;usb_device.c: 2874: p->STAT.Val |= 0x04;
 13296  0255  086B               	movf	i1USBStdFeatureReqHandler@p,w
 13297  0256  0086               	movwf	6
 13298  0257  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 13299  0258  0087               	movwf	7
 13300  0259  1501               	bsf	1,2
 13301                           
 13302                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
 13303  025A  086B               	movf	i1USBStdFeatureReqHandler@p,w
 13304  025B  0086               	movwf	6
 13305  025C  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 13306  025D  0087               	movwf	7
 13307  025E  1781               	bsf	1,7
 13308                           
 13309                           ;usb_device.c: 2876: }
 13310  025F  0008               	return
 13311  0260                     i1l5358:	
 13312                           
 13313                           ;usb_device.c: 2877: else
 13314                           ;usb_device.c: 2878: {
 13315                           ;usb_device.c: 2882: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 13316  0260  3004               	movlw	4
 13317  0261  066B               	xorwf	i1USBStdFeatureReqHandler@p,w
 13318  0262  00EB               	movwf	i1USBStdFeatureReqHandler@p
 13319  0263  3000               	movlw	0
 13320  0264  066C               	xorwf	i1USBStdFeatureReqHandler@p+1,w
 13321  0265  00EC               	movwf	i1USBStdFeatureReqHandler@p+1
 13322                           
 13323                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
 13324  0266  086B               	movf	i1USBStdFeatureReqHandler@p,w
 13325  0267  0086               	movwf	6
 13326  0268  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 13327  0269  0087               	movwf	7
 13328  026A  1F81               	btfss	1,7
 13329  026B  2A89               	goto	i1l5368
 13330                           
 13331                           ;usb_device.c: 2885: {
 13332                           ;usb_device.c: 2888: p->STAT.Val &= (~0x80);
 13333  026C  307F               	movlw	127
 13334  026D  00E6               	movwf	??i1_USBStdFeatureReqHandler
 13335  026E  086B               	movf	i1USBStdFeatureReqHandler@p,w
 13336  026F  0086               	movwf	6
 13337  0270  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 13338  0271  0087               	movwf	7
 13339  0272  0866               	movf	??i1_USBStdFeatureReqHandler,w
 13340  0273  0581               	andwf	1,f
 13341                           
 13342                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
 13343  0274  086B               	movf	i1USBStdFeatureReqHandler@p,w
 13344  0275  0086               	movwf	6
 13345  0276  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 13346  0277  0087               	movwf	7
 13347  0278  1701               	bsf	1,6
 13348                           
 13349                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 13350  0279  3000               	movlw	0
 13351  027A  00E1               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 13352  027B  3005               	movlw	5
 13353  027C  00E0               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 13354  027D  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 13355  027E  00E3               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 13356  027F  086B               	movf	i1USBStdFeatureReqHandler@p,w
 13357  0280  00E2               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 13358  0281  3002               	movlw	2
 13359  0282  00E4               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 13360  0283  3000               	movlw	0
 13361  0284  00E5               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 13362  0285  3190  20D8  3181   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 13363                           
 13364                           ;usb_device.c: 2891: }
 13365  0288  2A8F               	goto	i1l5370
 13366  0289                     i1l5368:	
 13367                           
 13368                           ;usb_device.c: 2892: else
 13369                           ;usb_device.c: 2893: {
 13370                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
 13371  0289  0020               	movlb	0	; select bank0
 13372  028A  086B               	movf	i1USBStdFeatureReqHandler@p,w
 13373  028B  0086               	movwf	6
 13374  028C  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 13375  028D  0087               	movwf	7
 13376  028E  1701               	bsf	1,6
 13377  028F                     i1l5370:	
 13378                           
 13379                           ;usb_device.c: 2896: }
 13380                           ;usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 13381  028F  3004               	movlw	4
 13382  0290  0020               	movlb	0	; select bank0
 13383  0291  066B               	xorwf	i1USBStdFeatureReqHandler@p,w
 13384  0292  00EB               	movwf	i1USBStdFeatureReqHandler@p
 13385  0293  3000               	movlw	0
 13386  0294  066C               	xorwf	i1USBStdFeatureReqHandler@p+1,w
 13387  0295  00EC               	movwf	i1USBStdFeatureReqHandler@p+1
 13388                           
 13389                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 13390  0296  18EA               	btfsc	i1USBStdFeatureReqHandler@current_ep_data,1
 13391  0297  2A9E               	goto	i1l626
 13392  0298  086B               	movf	i1USBStdFeatureReqHandler@p,w
 13393  0299  0086               	movwf	6
 13394  029A  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 13395  029B  0087               	movwf	7
 13396  029C  1F81               	btfss	1,7
 13397  029D  2AC3               	goto	i1l5382
 13398  029E                     i1l626:	
 13399                           
 13400                           ;usb_device.c: 2907: {
 13401                           ;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
 13402  029E  1BD4               	btfsc	84,7	;volatile
 13403  029F  2AA4               	goto	i1l5378
 13404                           
 13405                           ;usb_device.c: 2909: {
 13406                           ;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 13407  02A0  0854               	movf	84,w	;volatile
 13408  02A1  390F               	andlw	15
 13409  02A2  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
 13410  02A3  2AA7               	goto	L17
 13411  02A4                     i1l5378:	
 13412                           ;usb_device.c: 2911: }
 13413                           
 13414                           
 13415                           ;usb_device.c: 2912: else
 13416                           ;usb_device.c: 2913: {
 13417                           ;usb_device.c: 2914: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 13418  02A4  0854               	movf	84,w	;volatile
 13419  02A5  390F               	andlw	15
 13420  02A6  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
 13421  02A7                     L17:	
 13422  02A7  0086               	movwf	6
 13423  02A8  3001               	movlw	1	; select bank3/4
 13424  02A9  0087               	movwf	7
 13425  02AA  1081               	bcf	1,1
 13426                           
 13427                           ;usb_device.c: 2915: }
 13428                           ;usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 13429  02AB  303B               	movlw	59
 13430  02AC  00E6               	movwf	??i1_USBStdFeatureReqHandler
 13431  02AD  086B               	movf	i1USBStdFeatureReqHandler@p,w
 13432  02AE  0086               	movwf	6
 13433  02AF  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 13434  02B0  0087               	movwf	7
 13435  02B1  0866               	movf	??i1_USBStdFeatureReqHandler,w
 13436  02B2  0581               	andwf	1,f
 13437                           
 13438                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 13439  02B3  3000               	movlw	0
 13440  02B4  00E1               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 13441  02B5  3005               	movlw	5
 13442  02B6  00E0               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 13443  02B7  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 13444  02B8  00E3               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 13445  02B9  086B               	movf	i1USBStdFeatureReqHandler@p,w
 13446  02BA  00E2               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 13447  02BB  3002               	movlw	2
 13448  02BC  00E4               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 13449  02BD  3000               	movlw	0
 13450  02BE  00E5               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 13451  02BF  3190  20D8  3181   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 13452                           
 13453                           ;usb_device.c: 2921: }
 13454  02C2  2ACC               	goto	i1l5384
 13455  02C3                     i1l5382:	
 13456                           
 13457                           ;usb_device.c: 2922: else
 13458                           ;usb_device.c: 2923: {
 13459                           ;usb_device.c: 2925: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 13460  02C3  303B               	movlw	59
 13461  02C4  0020               	movlb	0	; select bank0
 13462  02C5  00E6               	movwf	??i1_USBStdFeatureReqHandler
 13463  02C6  086B               	movf	i1USBStdFeatureReqHandler@p,w
 13464  02C7  0086               	movwf	6
 13465  02C8  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 13466  02C9  0087               	movwf	7
 13467  02CA  0866               	movf	??i1_USBStdFeatureReqHandler,w
 13468  02CB  0581               	andwf	1,f
 13469  02CC                     i1l5384:	
 13470                           
 13471                           ;usb_device.c: 2926: }
 13472                           ;usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 13473  02CC  0020               	movlb	0	; select bank0
 13474  02CD  0854               	movf	84,w	;volatile
 13475  02CE  390F               	andlw	15
 13476  02CF  3E98               	addlw	152
 13477  02D0  00E6               	movwf	??i1_USBStdFeatureReqHandler
 13478  02D1  01E7               	clrf	??i1_USBStdFeatureReqHandler+1
 13479  02D2  300E               	movlw	14
 13480  02D3  3DE7               	addwfc	??i1_USBStdFeatureReqHandler+1,f
 13481  02D4  0866               	movf	??i1_USBStdFeatureReqHandler,w
 13482  02D5  00E8               	movwf	i1USBStdFeatureReqHandler@pUEP
 13483  02D6  0867               	movf	??i1_USBStdFeatureReqHandler+1,w
 13484  02D7  00E9               	movwf	i1USBStdFeatureReqHandler@pUEP+1
 13485                           
 13486                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
 13487  02D8  30FE               	movlw	254
 13488  02D9  00E6               	movwf	??i1_USBStdFeatureReqHandler
 13489  02DA  0868               	movf	i1USBStdFeatureReqHandler@pUEP,w
 13490  02DB  0086               	movwf	6
 13491  02DC  0869               	movf	i1USBStdFeatureReqHandler@pUEP+1,w
 13492  02DD  0087               	movwf	7
 13493  02DE  0866               	movf	??i1_USBStdFeatureReqHandler,w
 13494  02DF  0581               	andwf	1,f
 13495  02E0  0008               	return
 13496  02E1                     __end_ofi1_USBStdFeatureReqHandler:	
 13497                           
 13498                           	psect	text59
 13499  10D8                     __ptext59:	
 13500 ;; *************** function i1_USER_USB_CALLBACK_EVENT_HANDLER *****************
 13501 ;; Defined at:
 13502 ;;		line 49 in file "mcc_generated_files/usb/usb_device_events.c"
 13503 ;; Parameters:    Size  Location     Type
 13504 ;;  event           2    0[BANK0h] enum E40
 13505 ;;  pdata           2    2[BANK0h] PTR void 
 13506 ;;		 -> RAM(4096), USTATcopy(1), USBActiveConfiguration(1), BDT(48), 
 13507 ;;		 -> NULL(0), 
 13508 ;;  size            2    4[BANK0h] unsigned int 
 13509 ;; Auto vars:     Size  Location     Type
 13510 ;;		None
 13511 ;; Return value:  Size  Location     Type
 13512 ;;                  1    wreg      unsigned char 
 13513 ;; Registers used:
 13514 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13515 ;; Tracked objects:
 13516 ;;		On entry : 0/0
 13517 ;;		On exit  : 0/0
 13518 ;;		Unchanged: 0/0
 13519 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13520 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13523 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13524 ;;Total ram usage:        6 bytes
 13525 ;; Hardware stack levels used:    1
 13526 ;; Hardware stack levels required when called:    3
 13527 ;; This function calls:
 13528 ;;		i1_CDCInitEP
 13529 ;;		i1_USBCheckCDCRequest
 13530 ;; This function is called by:
 13531 ;;		i1_USBDeviceTasks
 13532 ;;		i1_USBStdSetCfgHandler
 13533 ;;		i1_USBSuspend
 13534 ;;		i1_USBWakeFromSuspend
 13535 ;;		i1_USBCtrlTrfSetupHandler
 13536 ;;		i1_USBCheckStdRequest
 13537 ;;		i1_USBStdFeatureReqHandler
 13538 ;; This function uses a non-reentrant model
 13539 ;;
 13540                           
 13541                           
 13542                           ;psect for function i1_USER_USB_CALLBACK_EVENT_HANDLER
 13543  10D8                     i1_USER_USB_CALLBACK_EVENT_HANDLER:	
 13544                           
 13545                           ;usb_device_events.c: 51: switch( (int) event )
 13546                           
 13547                           ;incstack = 0
 13548                           ; Regs used in i1_USER_USB_CALLBACK_EVENT_HANDLER: [wreg-fsr1h+status,2+status,0+pclath+
      +                          cstack]
 13549  10D8  28DF               	goto	i1l4812
 13550  10D9                     i1l4806:	
 13551                           ;usb_device_events.c: 75: case EVENT_CONFIGURED:
 13552                           
 13553                           ;usb_device_events.c: 73: break;
 13554                           
 13555                           ;usb_device_events.c: 68: case EVENT_RESUME:
 13556                           
 13557                           ;usb_device_events.c: 66: break;
 13558                           
 13559                           ;usb_device_events.c: 59: case EVENT_SUSPEND:
 13560                           
 13561                           ;usb_device_events.c: 57: break;
 13562                           
 13563                           ;usb_device_events.c: 56: case EVENT_SOF:
 13564                           
 13565                           ;usb_device_events.c: 54: break;
 13566                           
 13567                           ;usb_device_events.c: 52: {
 13568                           ;usb_device_events.c: 53: case EVENT_TRANSFER:
 13569                           
 13570                           
 13571                           ;usb_device_events.c: 76: CDCInitEP();
 13572  10D9  3191  219E         	fcall	i1_CDCInitEP
 13573                           
 13574                           ;usb_device_events.c: 80: break;
 13575                           
 13576                           ;usb_device_events.c: 79: case EVENT_SET_DESCRIPTOR:
 13577                           
 13578                           ;usb_device_events.c: 77: break;
 13579  10DB  0008               	return
 13580  10DC                     i1l4808:	
 13581                           ;usb_device_events.c: 82: case EVENT_EP0_REQUEST:
 13582                           
 13583                           
 13584                           ;usb_device_events.c: 85: USBCheckCDCRequest();
 13585  10DC  3197  273F         	fcall	i1_USBCheckCDCRequest
 13586                           
 13587                           ;usb_device_events.c: 96: }
 13588                           
 13589                           ;usb_device_events.c: 95: break;
 13590                           
 13591                           ;usb_device_events.c: 94: default:
 13592                           
 13593                           ;usb_device_events.c: 92: break;
 13594                           
 13595                           ;usb_device_events.c: 91: case EVENT_TRANSFER_TERMINATED:
 13596                           
 13597                           ;usb_device_events.c: 89: break;
 13598                           
 13599                           ;usb_device_events.c: 88: case EVENT_BUS_ERROR:
 13600                           
 13601                           ;usb_device_events.c: 86: break;
 13602  10DE  0008               	return
 13603  10DF                     i1l4812:	
 13604                           
 13605                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 13606                           ; Switch size 1, requested type "space"
 13607                           ; Number of cases is 2, Range of values is 0 to 127
 13608                           ; switch strategies available:
 13609                           ; Name         Instructions Cycles
 13610                           ; simple_byte            7     4 (average)
 13611                           ; direct_byte          262     6 (fixed)
 13612                           ; jumptable            260     6 (fixed)
 13613                           ;	Chosen strategy is simple_byte
 13614  10DF  0020               	movlb	0	; select bank0
 13615  10E0  0861               	movf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1,w
 13616  10E1  3A00               	xorlw	0	; case 0
 13617  10E2  1903               	skipnz
 13618  10E3  28E8               	goto	i1l8524
 13619  10E4  3A7F               	xorlw	127	; case 127
 13620  10E5  1903               	skipnz
 13621  10E6  2902               	goto	i1l8526
 13622  10E7  2907               	goto	i1l242
 13623  10E8                     i1l8524:	
 13624                           
 13625                           ; Switch size 1, requested type "space"
 13626                           ; Number of cases is 8, Range of values is 1 to 117
 13627                           ; switch strategies available:
 13628                           ; Name         Instructions Cycles
 13629                           ; simple_byte           25    13 (average)
 13630                           ; direct_byte          243     9 (fixed)
 13631                           ; jumptable            263     9 (fixed)
 13632                           ;	Chosen strategy is simple_byte
 13633  10E8  0860               	movf	i1USER_USB_CALLBACK_EVENT_HANDLER@event,w
 13634  10E9  3A01               	xorlw	1	; case 1
 13635  10EA  1903               	skipnz
 13636  10EB  28D9               	goto	i1l4806
 13637  10EC  3A03               	xorlw	3	; case 2
 13638  10ED  1903               	skipnz
 13639  10EE  2907               	goto	i1l242
 13640  10EF  3A01               	xorlw	1	; case 3
 13641  10F0  1903               	skipnz
 13642  10F1  28DC               	goto	i1l4808
 13643  10F2  3A06               	xorlw	6	; case 5
 13644  10F3  1903               	skipnz
 13645  10F4  2907               	goto	i1l242
 13646  10F5  3A77               	xorlw	119	; case 114
 13647  10F6  1903               	skipnz
 13648  10F7  2907               	goto	i1l242
 13649  10F8  3A01               	xorlw	1	; case 115
 13650  10F9  1903               	skipnz
 13651  10FA  2907               	goto	i1l242
 13652  10FB  3A07               	xorlw	7	; case 116
 13653  10FC  1903               	skipnz
 13654  10FD  2907               	goto	i1l242
 13655  10FE  3A01               	xorlw	1	; case 117
 13656  10FF  1903               	skipnz
 13657  1100  2907               	goto	i1l242
 13658  1101  2907               	goto	i1l242
 13659  1102                     i1l8526:	
 13660                           
 13661                           ; Switch size 1, requested type "space"
 13662                           ; Number of cases is 1, Range of values is 255 to 255
 13663                           ; switch strategies available:
 13664                           ; Name         Instructions Cycles
 13665                           ; simple_byte            4     3 (average)
 13666                           ; direct_byte            7     5 (fixed)
 13667                           ; jumptable            263     9 (fixed)
 13668                           ;	Chosen strategy is simple_byte
 13669  1102  0860               	movf	i1USER_USB_CALLBACK_EVENT_HANDLER@event,w
 13670  1103  3AFF               	xorlw	255	; case 255
 13671  1104  1903               	skipnz
 13672  1105  2907               	goto	i1l242
 13673  1106  2907               	goto	i1l242
 13674  1107                     i1l242:	
 13675                           ;usb_device_events.c: 97: return 1;
 13676                           ;	Return value of i1_USER_USB_CALLBACK_EVENT_HANDLER is never used
 13677                           
 13678  1107  0008               	return
 13679  1108                     __end_ofi1_USER_USB_CALLBACK_EVENT_HANDLER:	
 13680                           
 13681                           	psect	text60
 13682  173F                     __ptext60:	
 13683 ;; *************** function i1_USBCheckCDCRequest *****************
 13684 ;; Defined at:
 13685 ;;		line 146 in file "mcc_generated_files/usb/usb_device_cdc.c"
 13686 ;; Parameters:    Size  Location     Type
 13687 ;;		None
 13688 ;; Auto vars:     Size  Location     Type
 13689 ;;		None
 13690 ;; Return value:  Size  Location     Type
 13691 ;;                  1    wreg      void 
 13692 ;; Registers used:
 13693 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 13694 ;; Tracked objects:
 13695 ;;		On entry : 0/0
 13696 ;;		On exit  : 0/0
 13697 ;;		Unchanged: 0/0
 13698 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13701 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13702 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13703 ;;Total ram usage:        1 bytes
 13704 ;; Hardware stack levels used:    1
 13705 ;; This function calls:
 13706 ;;		Nothing
 13707 ;; This function is called by:
 13708 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 13709 ;; This function uses a non-reentrant model
 13710 ;;
 13711                           
 13712                           
 13713                           ;psect for function i1_USBCheckCDCRequest
 13714  173F                     i1_USBCheckCDCRequest:	
 13715                           
 13716                           ;usb_device_cdc.c: 151: if(SetupPkt.Recipient != (0x01)) return;
 13717                           
 13718                           ;incstack = 0
 13719                           ; Regs used in i1_USBCheckCDCRequest: [wreg-fsr0h+status,2+status,0]
 13720  173F  0020               	movlb	0	; select bank0
 13721  1740  0850               	movf	80,w	;volatile
 13722  1741  391F               	andlw	31
 13723  1742  3A01               	xorlw	1
 13724  1743  1D03               	btfss	3,2
 13725  1744  0008               	return
 13726                           
 13727                           ;usb_device_cdc.c: 156: if(SetupPkt.RequestType != (0x20>>5)) return;
 13728  1745  0E50               	swapf	80,w	;volatile
 13729  1746  0C89               	rrf	9,f
 13730  1747  3903               	andlw	3
 13731  1748  3A01               	xorlw	1
 13732  1749  1D03               	btfss	3,2
 13733  174A  0008               	return
 13734                           
 13735                           ;usb_device_cdc.c: 162: if((SetupPkt.bIntfID != 0x0)&&
 13736                           ;usb_device_cdc.c: 163: (SetupPkt.bIntfID != 0x01)) return;
 13737  174B  0854               	movf	84,w	;volatile
 13738  174C  1903               	btfsc	3,2
 13739  174D  2F8C               	goto	i1l4718
 13740  174E  0354               	decf	84,w	;volatile
 13741  174F  1D03               	btfss	3,2
 13742  1750  0008               	return
 13743  1751  2F8C               	goto	i1l4718
 13744  1752                     i1l4688:	
 13745                           ;usb_device_cdc.c: 166: {
 13746                           ;usb_device_cdc.c: 168: case 0x00:
 13747                           
 13748                           ;usb_device_cdc.c: 165: switch(SetupPkt.bRequest)
 13749                           
 13750                           
 13751                           ;usb_device_cdc.c: 170: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 13752  1752  304F               	movlw	low _dummy_encapsulated_cmd_response
 13753  1753  0021               	movlb	1	; select bank1
 13754  1754  00C3               	movwf	_inPipes^(0+128)	;volatile
 13755  1755  3002               	movlw	high _dummy_encapsulated_cmd_response
 13756  1756  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
 13757                           
 13758                           ;usb_device_cdc.c: 171: inPipes[0].wCount.Val = 0x08;
 13759  1757  3000               	movlw	0
 13760  1758  00C7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
 13761  1759  3008               	movlw	8
 13762  175A  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
 13763                           
 13764                           ;usb_device_cdc.c: 172: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 13765  175B  1445               	bsf	(_inPipes^(0+128)+2),0	;volatile
 13766                           
 13767                           ;usb_device_cdc.c: 173: inPipes[0].info.bits.busy = 1;
 13768  175C  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 13769                           
 13770                           ;usb_device_cdc.c: 174: break;
 13771  175D  0008               	return
 13772  175E                     i1l4696:	
 13773                           ;usb_device_cdc.c: 175: case 0x01:
 13774                           
 13775                           
 13776                           ;usb_device_cdc.c: 177: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 13777  175E  304F               	movlw	low _dummy_encapsulated_cmd_response
 13778  175F  0021               	movlb	1	; select bank1
 13779  1760  00C3               	movwf	_inPipes^(0+128)	;volatile
 13780  1761  3002               	movlw	high _dummy_encapsulated_cmd_response
 13781  1762  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
 13782                           
 13783                           ;usb_device_cdc.c: 178: inPipes[0].info.bits.busy = 1;
 13784  1763  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 13785                           
 13786                           ;usb_device_cdc.c: 179: break;
 13787  1764  0008               	return
 13788  1765                     i1l4700:	
 13789                           ;usb_device_cdc.c: 183: case 0x20:
 13790                           
 13791                           
 13792                           ;usb_device_cdc.c: 184: outPipes[0].wCount.Val = SetupPkt.wLength;
 13793  1765  0020               	movlb	0	; select bank0
 13794  1766  0857               	movf	87,w	;volatile
 13795  1767  0023               	movlb	3	; select bank3
 13796  1768  00B4               	movwf	((_outPipes+1)^(0+384)+3)	;volatile
 13797  1769  0020               	movlb	0	; select bank0
 13798  176A  0856               	movf	86,w	;volatile
 13799  176B  0023               	movlb	3	; select bank3
 13800  176C  00B3               	movwf	(_outPipes^(0+384)+3)	;volatile
 13801                           
 13802                           ;usb_device_cdc.c: 185: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 13803  176D  3057               	movlw	(low (_line_coding| (0+512)))& (0+255)
 13804  176E  00F0               	movwf	??i1_USBCheckCDCRequest
 13805  176F  0870               	movf	??i1_USBCheckCDCRequest,w
 13806  1770  00B0               	movwf	_outPipes^(0+384)	;volatile
 13807                           
 13808                           ;usb_device_cdc.c: 186: outPipes[0].pFunc = (0);
 13809  1771  01B5               	clrf	(low ((_outPipes| (0+256)+5)))^(0+128)	;volatile
 13810  1772  01B6               	clrf	((low ((_outPipes| (0+256)+5))+1))^(0+128)	;volatile
 13811                           
 13812                           ;usb_device_cdc.c: 187: outPipes[0].info.bits.busy = 1;
 13813  1773  17B2               	bsf	(_outPipes^(0+384)+2),7	;volatile
 13814                           
 13815                           ;usb_device_cdc.c: 188: break;
 13816  1774  0008               	return
 13817  1775                     i1l4706:	
 13818                           ;usb_device_cdc.c: 190: case 0x21:
 13819                           
 13820                           
 13821                           ;usb_device_cdc.c: 191: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 13822  1775  3057               	movlw	low _line_coding
 13823  1776  0021               	movlb	1	; select bank1
 13824  1777  00C3               	movwf	_inPipes^(0+128)	;volatile
 13825  1778  3002               	movlw	high _line_coding
 13826  1779  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
 13827  177A  3000               	movlw	0
 13828  177B  00C7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
 13829  177C  3007               	movlw	7
 13830  177D  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
 13831  177E  30C1               	movlw	193
 13832  177F  00F0               	movwf	??i1_USBCheckCDCRequest
 13833  1780  0870               	movf	??i1_USBCheckCDCRequest,w
 13834  1781  00C5               	movwf	(_inPipes^(0+128)+2)	;volatile
 13835                           
 13836                           ;usb_device_cdc.c: 195: break;
 13837  1782  0008               	return
 13838  1783                     i1l4712:	
 13839                           ;usb_device_cdc.c: 197: case 0x22:
 13840                           
 13841                           
 13842                           ;usb_device_cdc.c: 198: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 13843  1783  0020               	movlb	0	; select bank0
 13844  1784  0852               	movf	82,w	;volatile
 13845  1785  00F0               	movwf	??i1_USBCheckCDCRequest
 13846  1786  0870               	movf	??i1_USBCheckCDCRequest,w
 13847  1787  0023               	movlb	3	; select bank3
 13848  1788  00E6               	movwf	_control_signal_bitmap^(0+384)
 13849                           
 13850                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.busy = 1;
 13851  1789  0021               	movlb	1	; select bank1
 13852  178A  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 13853                           
 13854                           ;usb_device_cdc.c: 257: }
 13855                           
 13856                           ;usb_device_cdc.c: 256: break;
 13857                           
 13858                           ;usb_device_cdc.c: 255: default:
 13859                           
 13860                           ;usb_device_cdc.c: 231: break;
 13861  178B  0008               	return
 13862  178C                     i1l4718:	
 13863  178C  0020               	movlb	0	; select bank0
 13864  178D  0851               	movf	81,w	;volatile
 13865                           
 13866                           ; Switch size 1, requested type "space"
 13867                           ; Number of cases is 5, Range of values is 0 to 34
 13868                           ; switch strategies available:
 13869                           ; Name         Instructions Cycles
 13870                           ; simple_byte           16     9 (average)
 13871                           ; direct_byte           76     6 (fixed)
 13872                           ; jumptable            260     6 (fixed)
 13873                           ;	Chosen strategy is simple_byte
 13874  178E  3A00               	xorlw	0	; case 0
 13875  178F  1903               	skipnz
 13876  1790  2F52               	goto	i1l4688
 13877  1791  3A01               	xorlw	1	; case 1
 13878  1792  1903               	skipnz
 13879  1793  2F5E               	goto	i1l4696
 13880  1794  3A21               	xorlw	33	; case 32
 13881  1795  1903               	skipnz
 13882  1796  2F65               	goto	i1l4700
 13883  1797  3A01               	xorlw	1	; case 33
 13884  1798  1903               	skipnz
 13885  1799  2F75               	goto	i1l4706
 13886  179A  3A03               	xorlw	3	; case 34
 13887  179B  1903               	skipnz
 13888  179C  2F83               	goto	i1l4712
 13889  179D  2F9E               	goto	i1l137
 13890  179E                     i1l137:	
 13891  179E  0008               	return
 13892  179F                     __end_ofi1_USBCheckCDCRequest:	
 13893                           
 13894                           	psect	text61
 13895  119E                     __ptext61:	
 13896 ;; *************** function i1_CDCInitEP *****************
 13897 ;; Defined at:
 13898 ;;		line 293 in file "mcc_generated_files/usb/usb_device_cdc.c"
 13899 ;; Parameters:    Size  Location     Type
 13900 ;;		None
 13901 ;; Auto vars:     Size  Location     Type
 13902 ;;		None
 13903 ;; Return value:  Size  Location     Type
 13904 ;;                  1    wreg      void 
 13905 ;; Registers used:
 13906 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13907 ;; Tracked objects:
 13908 ;;		On entry : 0/0
 13909 ;;		On exit  : 0/0
 13910 ;;		Unchanged: 0/0
 13911 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13914 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13915 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13916 ;;Total ram usage:        1 bytes
 13917 ;; Hardware stack levels used:    1
 13918 ;; Hardware stack levels required when called:    2
 13919 ;; This function calls:
 13920 ;;		i1_USBEnableEndpoint
 13921 ;;		i1_USBTransferOnePacket
 13922 ;; This function is called by:
 13923 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 13924 ;; This function uses a non-reentrant model
 13925 ;;
 13926                           
 13927                           
 13928                           ;psect for function i1_CDCInitEP
 13929  119E                     i1_CDCInitEP:	
 13930                           
 13931                           ;usb_device_cdc.c: 296: line_coding.dwDTERate = 19200;
 13932                           
 13933                           ;incstack = 0
 13934                           ; Regs used in i1_CDCInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13935  119E  3000               	movlw	0
 13936  119F  0024               	movlb	4	; select bank4
 13937  11A0  00DA               	movwf	(_line_coding+3)^(0+512)
 13938  11A1  3000               	movlw	0
 13939  11A2  00D9               	movwf	(_line_coding+2)^(0+512)
 13940  11A3  304B               	movlw	75
 13941  11A4  00D8               	movwf	(_line_coding+1)^(0+512)
 13942  11A5  3000               	movlw	0
 13943  11A6  00D7               	movwf	_line_coding^(0+512)
 13944                           
 13945                           ;usb_device_cdc.c: 297: line_coding.bCharFormat = 0x00;
 13946  11A7  01DB               	clrf	(_line_coding^(0+512)+4)
 13947                           
 13948                           ;usb_device_cdc.c: 298: line_coding.bParityType = 0x00;
 13949  11A8  01DC               	clrf	(_line_coding^(0+512)+5)
 13950                           
 13951                           ;usb_device_cdc.c: 299: line_coding.bDataBits = 0x08;
 13952  11A9  3008               	movlw	8
 13953  11AA  00FD               	movwf	??i1_CDCInitEP
 13954  11AB  087D               	movf	??i1_CDCInitEP,w
 13955  11AC  00DD               	movwf	(_line_coding^(0+512)+6)
 13956                           
 13957                           ;usb_device_cdc.c: 301: cdc_rx_len = 0;
 13958  11AD  0023               	movlb	3	; select bank3
 13959  11AE  01EA               	clrf	_cdc_rx_len^(0+384)
 13960                           
 13961                           ;usb_device_cdc.c: 314: USBEnableEndpoint(1,0x02|0x10|0x08);
 13962  11AF  301A               	movlw	26
 13963  11B0  00FD               	movwf	??i1_CDCInitEP
 13964  11B1  087D               	movf	??i1_CDCInitEP,w
 13965  11B2  00F7               	movwf	i1USBEnableEndpoint@options
 13966  11B3  3001               	movlw	1
 13967  11B4  319F  275D  3191   	fcall	i1_USBEnableEndpoint
 13968                           
 13969                           ;usb_device_cdc.c: 315: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 13970  11B7  301E               	movlw	30
 13971  11B8  00FD               	movwf	??i1_CDCInitEP
 13972  11B9  087D               	movf	??i1_CDCInitEP,w
 13973  11BA  00F7               	movwf	i1USBEnableEndpoint@options
 13974  11BB  3002               	movlw	2
 13975  11BC  319F  275D  3191   	fcall	i1_USBEnableEndpoint
 13976                           
 13977                           ;usb_device_cdc.c: 317: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 13978  11BF  01F0               	clrf	i1USBTransferOnePacket@dir
 13979  11C0  30C0               	movlw	192
 13980  11C1  00F1               	movwf	i1USBTransferOnePacket@data
 13981  11C2  3020               	movlw	32
 13982  11C3  00F2               	movwf	i1USBTransferOnePacket@data+1
 13983  11C4  3040               	movlw	64
 13984  11C5  00FD               	movwf	??i1_CDCInitEP
 13985  11C6  087D               	movf	??i1_CDCInitEP,w
 13986  11C7  00F3               	movwf	i1USBTransferOnePacket@len
 13987  11C8  3002               	movlw	2
 13988  11C9  318C  2412         	fcall	i1_USBTransferOnePacket
 13989  11CB  0871               	movf	?i1_USBTransferOnePacket+1,w
 13990  11CC  0023               	movlb	3	; select bank3
 13991  11CD  00D0               	movwf	(_CDCDataOutHandle+1)^(0+384)
 13992  11CE  0870               	movf	?i1_USBTransferOnePacket,w
 13993  11CF  00CF               	movwf	_CDCDataOutHandle^(0+384)
 13994                           
 13995                           ;usb_device_cdc.c: 318: CDCDataInHandle = (0);
 13996  11D0  01CD               	clrf	_CDCDataInHandle^(0+384)
 13997  11D1  01CE               	clrf	(_CDCDataInHandle+1)^(0+384)
 13998                           
 13999                           ;usb_device_cdc.c: 345: cdc_trf_state = 0;
 14000  11D2  01E9               	clrf	_cdc_trf_state^(0+384)
 14001  11D3  0008               	return
 14002  11D4                     __end_ofi1_CDCInitEP:	
 14003                           
 14004                           	psect	text62
 14005  0C12                     __ptext62:	
 14006 ;; *************** function i1_USBTransferOnePacket *****************
 14007 ;; Defined at:
 14008 ;;		line 995 in file "mcc_generated_files/usb/usb_device.c"
 14009 ;; Parameters:    Size  Location     Type
 14010 ;;  ep              1    wreg     unsigned char 
 14011 ;;  dir             1    0[COMMON] unsigned char 
 14012 ;;  data            2    1[COMMON] PTR unsigned char 
 14013 ;;		 -> cdc_data_tx(64), NULL(0), cdc_data_rx(64), 
 14014 ;;  len             1    3[COMMON] unsigned char 
 14015 ;; Auto vars:     Size  Location     Type
 14016 ;;  ep              1    8[COMMON] unsigned char 
 14017 ;;  USBTransferO    2    9[COMMON] PTR volatile struct __BD
 14018 ;;		 -> RAM(4096), BDT(48), NULL(0), 
 14019 ;; Return value:  Size  Location     Type
 14020 ;;                  2    0[COMMON] PTR void 
 14021 ;; Registers used:
 14022 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14023 ;; Tracked objects:
 14024 ;;		On entry : 0/0
 14025 ;;		On exit  : 0/0
 14026 ;;		Unchanged: 0/0
 14027 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14028 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14029 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14030 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14031 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14032 ;;Total ram usage:       11 bytes
 14033 ;; Hardware stack levels used:    1
 14034 ;; This function calls:
 14035 ;;		Nothing
 14036 ;; This function is called by:
 14037 ;;		i1_CDCInitEP
 14038 ;; This function uses a non-reentrant model
 14039 ;;
 14040                           
 14041                           
 14042                           ;psect for function i1_USBTransferOnePacket
 14043  0C12                     i1_USBTransferOnePacket:	
 14044                           
 14045                           ;incstack = 0
 14046                           ; Regs used in i1_USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
 14047                           ;i1USBTransferOnePacket@ep stored from wreg
 14048  0C12  00F8               	movwf	i1USBTransferOnePacket@ep
 14049                           
 14050                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 14051                           ;usb_device.c: 1000: if(dir != 0)
 14052  0C13  0870               	movf	i1USBTransferOnePacket@dir,w
 14053  0C14  1903               	btfsc	3,2
 14054  0C15  2C1F               	goto	i1l4586
 14055                           
 14056                           ;usb_device.c: 1001: {
 14057                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 14058  0C16  3578               	lslf	i1USBTransferOnePacket@ep,w
 14059  0C17  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 14060  0C18  0086               	movwf	6
 14061  0C19  3001               	movlw	1	; select bank3/4
 14062  0C1A  0087               	movwf	7
 14063  0C1B  3F40               	moviw [0]fsr1
 14064  0C1C  00F9               	movwf	i1USBTransferOnePacket@handle
 14065  0C1D  3F41               	moviw [1]fsr1
 14066  0C1E  2C27               	goto	L18
 14067  0C1F                     i1l4586:	
 14068                           ;usb_device.c: 1004: }
 14069                           
 14070                           
 14071                           ;usb_device.c: 1005: else
 14072                           ;usb_device.c: 1006: {
 14073                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 14074  0C1F  3578               	lslf	i1USBTransferOnePacket@ep,w
 14075  0C20  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 14076  0C21  0086               	movwf	6
 14077  0C22  3001               	movlw	1	; select bank3/4
 14078  0C23  0087               	movwf	7
 14079  0C24  3F40               	moviw [0]fsr1
 14080  0C25  00F9               	movwf	i1USBTransferOnePacket@handle
 14081  0C26  3F41               	moviw [1]fsr1
 14082  0C27                     L18:	
 14083  0C27  00FA               	movwf	i1USBTransferOnePacket@handle+1
 14084                           
 14085                           ;usb_device.c: 1009: }
 14086                           ;usb_device.c: 1013: if(handle == 0)
 14087  0C28  0879               	movf	i1USBTransferOnePacket@handle,w
 14088  0C29  047A               	iorwf	i1USBTransferOnePacket@handle+1,w
 14089  0C2A  1D03               	btfss	3,2
 14090  0C2B  2C2F               	goto	i1l4594
 14091                           
 14092                           ;usb_device.c: 1014: {
 14093                           ;usb_device.c: 1015: return 0;
 14094  0C2C  01F0               	clrf	?i1_USBTransferOnePacket
 14095  0C2D  01F1               	clrf	?i1_USBTransferOnePacket+1
 14096  0C2E  0008               	return
 14097  0C2F                     i1l4594:	
 14098                           
 14099                           ;usb_device.c: 1016: }
 14100                           ;usb_device.c: 1029: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
 14101  0C2F  30FF               	movlw	255
 14102  0C30  0571               	andwf	i1USBTransferOnePacket@data,w
 14103  0C31  00F4               	movwf	??i1_USBTransferOnePacket
 14104  0C32  307F               	movlw	127
 14105  0C33  0572               	andwf	i1USBTransferOnePacket@data+1,w
 14106  0C34  00F5               	movwf	??i1_USBTransferOnePacket+1
 14107  0C35  0879               	movf	i1USBTransferOnePacket@handle,w
 14108  0C36  0086               	movwf	6
 14109  0C37  087A               	movf	i1USBTransferOnePacket@handle+1,w
 14110  0C38  0087               	movwf	7
 14111  0C39  3142               	addfsr 1,2
 14112  0C3A  0874               	movf	??i1_USBTransferOnePacket,w
 14113  0C3B  3FC0               	movwi [0]fsr1
 14114  0C3C  0875               	movf	??i1_USBTransferOnePacket+1,w
 14115  0C3D  3FC1               	movwi [1]fsr1
 14116                           
 14117                           ;usb_device.c: 1030: handle->CNT = len;
 14118  0C3E  0879               	movf	i1USBTransferOnePacket@handle,w
 14119  0C3F  3E01               	addlw	1
 14120  0C40  00F4               	movwf	??i1_USBTransferOnePacket
 14121  0C41  3000               	movlw	0
 14122  0C42  3D7A               	addwfc	i1USBTransferOnePacket@handle+1,w
 14123  0C43  00F5               	movwf	??i1_USBTransferOnePacket+1
 14124  0C44  0874               	movf	??i1_USBTransferOnePacket,w
 14125  0C45  0086               	movwf	6
 14126  0C46  0875               	movf	??i1_USBTransferOnePacket+1,w
 14127  0C47  0087               	movwf	7
 14128  0C48  0873               	movf	i1USBTransferOnePacket@len,w
 14129  0C49  0081               	movwf	1
 14130                           
 14131                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 14132  0C4A  3040               	movlw	64
 14133  0C4B  00F4               	movwf	??i1_USBTransferOnePacket
 14134  0C4C  0879               	movf	i1USBTransferOnePacket@handle,w
 14135  0C4D  0086               	movwf	6
 14136  0C4E  087A               	movf	i1USBTransferOnePacket@handle+1,w
 14137  0C4F  0087               	movwf	7
 14138  0C50  0874               	movf	??i1_USBTransferOnePacket,w
 14139  0C51  0581               	andwf	1,f
 14140                           
 14141                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 14142  0C52  0879               	movf	i1USBTransferOnePacket@handle,w
 14143  0C53  0086               	movwf	6
 14144  0C54  087A               	movf	i1USBTransferOnePacket@handle+1,w
 14145  0C55  0087               	movwf	7
 14146  0C56  1581               	bsf	1,3
 14147                           
 14148                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 14149  0C57  0879               	movf	i1USBTransferOnePacket@handle,w
 14150  0C58  0086               	movwf	6
 14151  0C59  087A               	movf	i1USBTransferOnePacket@handle+1,w
 14152  0C5A  0087               	movwf	7
 14153  0C5B  1781               	bsf	1,7
 14154                           
 14155                           ;usb_device.c: 1036: if(dir != 0)
 14156  0C5C  0870               	movf	i1USBTransferOnePacket@dir,w
 14157  0C5D  1903               	btfsc	3,2
 14158  0C5E  2C78               	goto	i1l4604
 14159                           
 14160                           ;usb_device.c: 1037: {
 14161                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
 14162  0C5F  3578               	lslf	i1USBTransferOnePacket@ep,w
 14163  0C60  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 14164  0C61  0086               	movwf	6
 14165  0C62  3001               	movlw	1	; select bank3/4
 14166  0C63  0087               	movwf	7
 14167  0C64  3F40               	moviw [0]fsr1
 14168  0C65  00F4               	movwf	??i1_USBTransferOnePacket
 14169  0C66  3F41               	moviw [1]fsr1
 14170  0C67  00F5               	movwf	??i1_USBTransferOnePacket+1
 14171  0C68  3004               	movlw	4
 14172  0C69  0674               	xorwf	??i1_USBTransferOnePacket,w
 14173  0C6A  00F6               	movwf	??i1_USBTransferOnePacket+2
 14174  0C6B  3000               	movlw	0
 14175  0C6C  0675               	xorwf	??i1_USBTransferOnePacket+1,w
 14176  0C6D  00F7               	movwf	??i1_USBTransferOnePacket+3
 14177  0C6E  3578               	lslf	i1USBTransferOnePacket@ep,w
 14178  0C6F  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 14179  0C70  0086               	movwf	6
 14180  0C71  3001               	movlw	1	; select bank3/4
 14181  0C72  0087               	movwf	7
 14182  0C73  0876               	movf	??i1_USBTransferOnePacket+2,w
 14183  0C74  3FC0               	movwi [0]fsr1
 14184  0C75  0877               	movf	??i1_USBTransferOnePacket+3,w
 14185  0C76  3FC1               	movwi [1]fsr1
 14186                           
 14187                           ;usb_device.c: 1040: }
 14188  0C77  2C90               	goto	i1l4606
 14189  0C78                     i1l4604:	
 14190                           
 14191                           ;usb_device.c: 1041: else
 14192                           ;usb_device.c: 1042: {
 14193                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
 14194  0C78  3578               	lslf	i1USBTransferOnePacket@ep,w
 14195  0C79  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 14196  0C7A  0086               	movwf	6
 14197  0C7B  3001               	movlw	1	; select bank3/4
 14198  0C7C  0087               	movwf	7
 14199  0C7D  3F40               	moviw [0]fsr1
 14200  0C7E  00F4               	movwf	??i1_USBTransferOnePacket
 14201  0C7F  3F41               	moviw [1]fsr1
 14202  0C80  00F5               	movwf	??i1_USBTransferOnePacket+1
 14203  0C81  3004               	movlw	4
 14204  0C82  0674               	xorwf	??i1_USBTransferOnePacket,w
 14205  0C83  00F6               	movwf	??i1_USBTransferOnePacket+2
 14206  0C84  3000               	movlw	0
 14207  0C85  0675               	xorwf	??i1_USBTransferOnePacket+1,w
 14208  0C86  00F7               	movwf	??i1_USBTransferOnePacket+3
 14209  0C87  3578               	lslf	i1USBTransferOnePacket@ep,w
 14210  0C88  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 14211  0C89  0086               	movwf	6
 14212  0C8A  3001               	movlw	1	; select bank3/4
 14213  0C8B  0087               	movwf	7
 14214  0C8C  0876               	movf	??i1_USBTransferOnePacket+2,w
 14215  0C8D  3FC0               	movwi [0]fsr1
 14216  0C8E  0877               	movf	??i1_USBTransferOnePacket+3,w
 14217  0C8F  3FC1               	movwi [1]fsr1
 14218  0C90                     i1l4606:	
 14219                           
 14220                           ;usb_device.c: 1045: }
 14221                           ;usb_device.c: 1046: return (void*)handle;
 14222  0C90  087A               	movf	i1USBTransferOnePacket@handle+1,w
 14223  0C91  00F1               	movwf	?i1_USBTransferOnePacket+1
 14224  0C92  0879               	movf	i1USBTransferOnePacket@handle,w
 14225  0C93  00F0               	movwf	?i1_USBTransferOnePacket
 14226  0C94  0008               	return
 14227  0C95                     __end_ofi1_USBTransferOnePacket:	
 14228                           
 14229                           	psect	text63
 14230  1F5D                     __ptext63:	
 14231 ;; *************** function i1_USBEnableEndpoint *****************
 14232 ;; Defined at:
 14233 ;;		line 878 in file "mcc_generated_files/usb/usb_device.c"
 14234 ;; Parameters:    Size  Location     Type
 14235 ;;  ep              1    wreg     unsigned char 
 14236 ;;  options         1    7[COMMON] unsigned char 
 14237 ;; Auto vars:     Size  Location     Type
 14238 ;;  ep              1   12[COMMON] unsigned char 
 14239 ;;  USBEnableEnd    2   10[COMMON] PTR unsigned char 
 14240 ;;		 -> UEP0(1), 
 14241 ;; Return value:  Size  Location     Type
 14242 ;;                  1    wreg      void 
 14243 ;; Registers used:
 14244 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14245 ;; Tracked objects:
 14246 ;;		On entry : 0/0
 14247 ;;		On exit  : 0/0
 14248 ;;		Unchanged: 0/0
 14249 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14250 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14251 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14252 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14253 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14254 ;;Total ram usage:        6 bytes
 14255 ;; Hardware stack levels used:    1
 14256 ;; Hardware stack levels required when called:    1
 14257 ;; This function calls:
 14258 ;;		i1_USBConfigureEndpoint
 14259 ;; This function is called by:
 14260 ;;		i1_CDCInitEP
 14261 ;; This function uses a non-reentrant model
 14262 ;;
 14263                           
 14264                           
 14265                           ;psect for function i1_USBEnableEndpoint
 14266  1F5D                     i1_USBEnableEndpoint:	
 14267                           
 14268                           ;incstack = 0
 14269                           ; Regs used in i1_USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14270                           ;i1USBEnableEndpoint@ep stored from wreg
 14271  1F5D  00FC               	movwf	i1USBEnableEndpoint@ep
 14272                           
 14273                           ;usb_device.c: 880: unsigned char* p;
 14274                           ;usb_device.c: 884: if(options & 0x04)
 14275  1F5E  1D77               	btfss	i1USBEnableEndpoint@options,2
 14276  1F5F  2F65               	goto	i1l4574
 14277                           
 14278                           ;usb_device.c: 885: {
 14279                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 14280  1F60  01F0               	clrf	i1USBConfigureEndpoint@direction
 14281  1F61  087C               	movf	i1USBEnableEndpoint@ep,w
 14282  1F62  3192  22C5  319F   	fcall	i1_USBConfigureEndpoint
 14283  1F65                     i1l4574:	
 14284                           
 14285                           ;usb_device.c: 887: }
 14286                           ;usb_device.c: 888: if(options & 0x02)
 14287  1F65  1CF7               	btfss	i1USBEnableEndpoint@options,1
 14288  1F66  2F6C               	goto	i1l4578
 14289                           
 14290                           ;usb_device.c: 889: {
 14291                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 14292  1F67  01F0               	clrf	i1USBConfigureEndpoint@direction
 14293  1F68  0AF0               	incf	i1USBConfigureEndpoint@direction,f
 14294  1F69  087C               	movf	i1USBEnableEndpoint@ep,w
 14295  1F6A  3192  22C5         	fcall	i1_USBConfigureEndpoint
 14296  1F6C                     i1l4578:	
 14297                           
 14298                           ;usb_device.c: 891: }
 14299                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 14300  1F6C  087C               	movf	i1USBEnableEndpoint@ep,w
 14301  1F6D  3E98               	addlw	152
 14302  1F6E  00F8               	movwf	??i1_USBEnableEndpoint
 14303  1F6F  01F9               	clrf	??i1_USBEnableEndpoint+1
 14304  1F70  300E               	movlw	14
 14305  1F71  3DF9               	addwfc	??i1_USBEnableEndpoint+1,f
 14306  1F72  0878               	movf	??i1_USBEnableEndpoint,w
 14307  1F73  00FA               	movwf	i1USBEnableEndpoint@p
 14308  1F74  0879               	movf	??i1_USBEnableEndpoint+1,w
 14309  1F75  00FB               	movwf	i1USBEnableEndpoint@p+1
 14310                           
 14311                           ;usb_device.c: 901: *p = options;
 14312  1F76  087A               	movf	i1USBEnableEndpoint@p,w
 14313  1F77  0086               	movwf	6
 14314  1F78  087B               	movf	i1USBEnableEndpoint@p+1,w
 14315  1F79  0087               	movwf	7
 14316  1F7A  0877               	movf	i1USBEnableEndpoint@options,w
 14317  1F7B  0081               	movwf	1
 14318  1F7C  0008               	return
 14319  1F7D                     __end_ofi1_USBEnableEndpoint:	
 14320                           
 14321                           	psect	text64
 14322  12C5                     __ptext64:	
 14323 ;; *************** function i1_USBConfigureEndpoint *****************
 14324 ;; Defined at:
 14325 ;;		line 1543 in file "mcc_generated_files/usb/usb_device.c"
 14326 ;; Parameters:    Size  Location     Type
 14327 ;;  EPNum           1    wreg     unsigned char 
 14328 ;;  direction       1    0[COMMON] unsigned char 
 14329 ;; Auto vars:     Size  Location     Type
 14330 ;;  EPNum           1    5[COMMON] unsigned char 
 14331 ;;  USBConfigure    1    6[COMMON] PTR volatile struct __BD
 14332 ;;		 -> BDT(48), 
 14333 ;; Return value:  Size  Location     Type
 14334 ;;                  1    wreg      void 
 14335 ;; Registers used:
 14336 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14337 ;; Tracked objects:
 14338 ;;		On entry : 0/0
 14339 ;;		On exit  : 0/0
 14340 ;;		Unchanged: 0/0
 14341 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14342 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14343 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14344 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14345 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14346 ;;Total ram usage:        7 bytes
 14347 ;; Hardware stack levels used:    1
 14348 ;; This function calls:
 14349 ;;		Nothing
 14350 ;; This function is called by:
 14351 ;;		i1_USBEnableEndpoint
 14352 ;; This function uses a non-reentrant model
 14353 ;;
 14354                           
 14355                           
 14356                           ;psect for function i1_USBConfigureEndpoint
 14357  12C5                     i1_USBConfigureEndpoint:	
 14358                           
 14359                           ;incstack = 0
 14360                           ; Regs used in i1_USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
 14361                           ;i1USBConfigureEndpoint@EPNum stored from wreg
 14362  12C5  00F5               	movwf	i1USBConfigureEndpoint@EPNum
 14363                           
 14364                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 14365                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 14366  12C6  3020               	movlw	32
 14367  12C7  00F1               	movwf	??i1_USBConfigureEndpoint
 14368  12C8  0871               	movf	??i1_USBConfigureEndpoint,w
 14369  12C9  00F6               	movwf	i1USBConfigureEndpoint@handle
 14370                           
 14371                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 14372  12CA  0870               	movf	i1USBConfigureEndpoint@direction,w
 14373  12CB  00F1               	movwf	??i1_USBConfigureEndpoint
 14374  12CC  3001               	movlw	1
 14375  12CD                     u341_25:	
 14376  12CD  35F1               	lslf	??i1_USBConfigureEndpoint,f
 14377  12CE  0B89               	decfsz	9,f
 14378  12CF  2ACD               	goto	u341_25
 14379  12D0  0875               	movf	i1USBConfigureEndpoint@EPNum,w
 14380  12D1  00F2               	movwf	??i1_USBConfigureEndpoint+1
 14381  12D2  3001               	movlw	1
 14382  12D3                     u342_25:	
 14383  12D3  35F2               	lslf	??i1_USBConfigureEndpoint+1,f
 14384  12D4  3EFF               	addlw	-1
 14385  12D5  1D03               	skipz
 14386  12D6  2AD3               	goto	u342_25
 14387  12D7  3572               	lslf	??i1_USBConfigureEndpoint+1,w
 14388  12D8  0771               	addwf	??i1_USBConfigureEndpoint,w
 14389  12D9  00F3               	movwf	??i1_USBConfigureEndpoint+2
 14390  12DA  3001               	movlw	1
 14391  12DB                     u343_25:	
 14392  12DB  35F3               	lslf	??i1_USBConfigureEndpoint+2,f
 14393  12DC  3EFF               	addlw	-1
 14394  12DD  1D03               	skipz
 14395  12DE  2ADB               	goto	u343_25
 14396  12DF  3573               	lslf	??i1_USBConfigureEndpoint+2,w
 14397  12E0  00F4               	movwf	??i1_USBConfigureEndpoint+3
 14398  12E1  0874               	movf	??i1_USBConfigureEndpoint+3,w
 14399  12E2  07F6               	addwf	i1USBConfigureEndpoint@handle,f
 14400                           
 14401                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 14402  12E3  0876               	movf	i1USBConfigureEndpoint@handle,w
 14403  12E4  0086               	movwf	6
 14404  12E5  0187               	clrf	7
 14405  12E6  1381               	bcf	1,7
 14406                           
 14407                           ;usb_device.c: 1557: if(direction == 0)
 14408  12E7  0870               	movf	i1USBConfigureEndpoint@direction,w
 14409  12E8  1D03               	btfss	3,2
 14410  12E9  2AF4               	goto	i1l4524
 14411                           
 14412                           ;usb_device.c: 1558: {
 14413                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 14414  12EA  3575               	lslf	i1USBConfigureEndpoint@EPNum,w
 14415  12EB  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 14416  12EC  0086               	movwf	6
 14417  12ED  3001               	movlw	1	; select bank3/4
 14418  12EE  0087               	movwf	7
 14419  12EF  0876               	movf	i1USBConfigureEndpoint@handle,w
 14420  12F0  3FC0               	movwi [0]fsr1
 14421  12F1  3000               	movlw	0
 14422  12F2  3FC1               	movwi [1]fsr1
 14423                           
 14424                           ;usb_device.c: 1560: }
 14425  12F3  2AFD               	goto	i1l4526
 14426  12F4                     i1l4524:	
 14427                           
 14428                           ;usb_device.c: 1561: else
 14429                           ;usb_device.c: 1562: {
 14430                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 14431  12F4  3575               	lslf	i1USBConfigureEndpoint@EPNum,w
 14432  12F5  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 14433  12F6  0086               	movwf	6
 14434  12F7  3001               	movlw	1	; select bank3/4
 14435  12F8  0087               	movwf	7
 14436  12F9  0876               	movf	i1USBConfigureEndpoint@handle,w
 14437  12FA  3FC0               	movwi [0]fsr1
 14438  12FB  3000               	movlw	0
 14439  12FC  3FC1               	movwi [1]fsr1
 14440  12FD                     i1l4526:	
 14441                           
 14442                           ;usb_device.c: 1564: }
 14443                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 14444  12FD  0876               	movf	i1USBConfigureEndpoint@handle,w
 14445  12FE  0086               	movwf	6
 14446  12FF  0187               	clrf	7
 14447  1300  1301               	bcf	1,6
 14448                           
 14449                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 14450  1301  0876               	movf	i1USBConfigureEndpoint@handle,w
 14451  1302  3E04               	addlw	4
 14452  1303  0086               	movwf	6
 14453  1304  0187               	clrf	7
 14454  1305  1701               	bsf	1,6
 14455  1306  0008               	return
 14456  1307                     __end_ofi1_USBConfigureEndpoint:	
 14457                           
 14458                           	psect	text65
 14459  1168                     __ptext65:	
 14460 ;; *************** function i1_USBCtrlTrfOutHandler *****************
 14461 ;; Defined at:
 14462 ;;		line 2538 in file "mcc_generated_files/usb/usb_device.c"
 14463 ;; Parameters:    Size  Location     Type
 14464 ;;		None
 14465 ;; Auto vars:     Size  Location     Type
 14466 ;;		None
 14467 ;; Return value:  Size  Location     Type
 14468 ;;                  1    wreg      void 
 14469 ;; Registers used:
 14470 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14471 ;; Tracked objects:
 14472 ;;		On entry : 0/0
 14473 ;;		On exit  : 0/0
 14474 ;;		Unchanged: 0/0
 14475 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14478 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14479 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14480 ;;Total ram usage:        2 bytes
 14481 ;; Hardware stack levels used:    1
 14482 ;; Hardware stack levels required when called:    2
 14483 ;; This function calls:
 14484 ;;		i1_USBCtrlTrfRxService
 14485 ;; This function is called by:
 14486 ;;		i1_USBCtrlEPService
 14487 ;; This function uses a non-reentrant model
 14488 ;;
 14489                           
 14490                           
 14491                           ;psect for function i1_USBCtrlTrfOutHandler
 14492  1168                     i1_USBCtrlTrfOutHandler:	
 14493                           
 14494                           ;usb_device.c: 2540: if(controlTransferState == 2)
 14495                           
 14496                           ;incstack = 0
 14497                           ; Regs used in i1_USBCtrlTrfOutHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 14498  1168  3002               	movlw	2
 14499  1169  0023               	movlb	3	; select bank3
 14500  116A  0662               	xorwf	_controlTransferState^(0+384),w	;volatile
 14501  116B  1D03               	btfss	3,2
 14502  116C  2970               	goto	i1l5954
 14503                           
 14504                           ;usb_device.c: 2541: {
 14505                           ;usb_device.c: 2542: USBCtrlTrfRxService();
 14506  116D  318F  275D         	fcall	i1_USBCtrlTrfRxService
 14507                           
 14508                           ;usb_device.c: 2543: }
 14509  116F  0008               	return
 14510  1170                     i1l5954:	
 14511                           
 14512                           ;usb_device.c: 2544: else
 14513                           ;usb_device.c: 2545: {
 14514                           ;usb_device.c: 2548: controlTransferState = 0;
 14515  1170  0023               	movlb	3	; select bank3
 14516  1171  01E2               	clrf	_controlTransferState^(0+384)	;volatile
 14517                           
 14518                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
 14519  1172  085D               	movf	_BothEP0OutUOWNsSet^(0+384),w	;volatile
 14520  1173  1D03               	btfss	3,2
 14521  1174  299B               	goto	i1l5966
 14522                           
 14523                           ;usb_device.c: 2556: {
 14524                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 8;
 14525  1175  0021               	movlb	1	; select bank1
 14526  1176  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14527  1177  3E01               	addlw	1
 14528  1178  00F6               	movwf	??i1_USBCtrlTrfOutHandler
 14529  1179  3000               	movlw	0
 14530  117A  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14531  117B  00F7               	movwf	??i1_USBCtrlTrfOutHandler+1
 14532  117C  0876               	movf	??i1_USBCtrlTrfOutHandler,w
 14533  117D  0086               	movwf	6
 14534  117E  0877               	movf	??i1_USBCtrlTrfOutHandler+1,w
 14535  117F  0087               	movwf	7
 14536  1180  3008               	movlw	8
 14537  1181  0081               	movwf	1
 14538                           
 14539                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 14540  1182  3050               	movlw	80
 14541  1183  00F6               	movwf	??i1_USBCtrlTrfOutHandler
 14542  1184  3000               	movlw	0
 14543  1185  00F7               	movwf	??i1_USBCtrlTrfOutHandler+1
 14544  1186  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14545  1187  0086               	movwf	6
 14546  1188  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14547  1189  0087               	movwf	7
 14548  118A  3142               	addfsr 1,2
 14549  118B  0876               	movf	??i1_USBCtrlTrfOutHandler,w
 14550  118C  3FC0               	movwi [0]fsr1
 14551  118D  0877               	movf	??i1_USBCtrlTrfOutHandler+1,w
 14552  118E  3FC1               	movwi [1]fsr1
 14553                           
 14554                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 14555  118F  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14556  1190  0086               	movwf	6
 14557  1191  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14558  1192  0087               	movwf	7
 14559  1193  300C               	movlw	12
 14560  1194  0081               	movwf	1
 14561                           
 14562                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 14563  1195  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14564  1196  0086               	movwf	6
 14565  1197  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14566  1198  0087               	movwf	7
 14567  1199  1781               	bsf	1,7
 14568                           
 14569                           ;usb_device.c: 2561: }
 14570  119A  0008               	return
 14571  119B                     i1l5966:	
 14572                           
 14573                           ;usb_device.c: 2562: else
 14574                           ;usb_device.c: 2563: {
 14575                           ;usb_device.c: 2564: BothEP0OutUOWNsSet = 0;
 14576  119B  0023               	movlb	3	; select bank3
 14577  119C  01DD               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
 14578  119D  0008               	return
 14579  119E                     __end_ofi1_USBCtrlTrfOutHandler:	
 14580                           
 14581                           	psect	text66
 14582  0F5D                     __ptext66:	
 14583 ;; *************** function i1_USBCtrlTrfRxService *****************
 14584 ;; Defined at:
 14585 ;;		line 1852 in file "mcc_generated_files/usb/usb_device.c"
 14586 ;; Parameters:    Size  Location     Type
 14587 ;;		None
 14588 ;; Auto vars:     Size  Location     Type
 14589 ;;  USBCtrlTrfRx    1    5[COMMON] unsigned char 
 14590 ;;  USBCtrlTrfRx    1    4[COMMON] unsigned char 
 14591 ;; Return value:  Size  Location     Type
 14592 ;;                  1    wreg      void 
 14593 ;; Registers used:
 14594 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14595 ;; Tracked objects:
 14596 ;;		On entry : 0/0
 14597 ;;		On exit  : 0/0
 14598 ;;		Unchanged: 0/0
 14599 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14601 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14602 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14603 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14604 ;;Total ram usage:        4 bytes
 14605 ;; Hardware stack levels used:    1
 14606 ;; Hardware stack levels required when called:    1
 14607 ;; This function calls:
 14608 ;;		i1_USBCtrlEPAllowStatusStage
 14609 ;; This function is called by:
 14610 ;;		i1_USBCtrlTrfOutHandler
 14611 ;; This function uses a non-reentrant model
 14612 ;;
 14613                           
 14614                           
 14615                           ;psect for function i1_USBCtrlTrfRxService
 14616  0F5D                     i1_USBCtrlTrfRxService:	
 14617                           
 14618                           ;usb_device.c: 1854: uint8_t byteToRead;
 14619                           ;usb_device.c: 1855: uint8_t i;
 14620                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 14621                           
 14622                           ;incstack = 0
 14623                           ; Regs used in i1_USBCtrlTrfRxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 14624  0F5D  0023               	movlb	3	; select bank3
 14625  0F5E  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 14626  0F5F  0086               	movwf	6
 14627  0F60  0187               	clrf	7
 14628  0F61  3F41               	moviw [1]fsr1
 14629  0F62  00F5               	movwf	i1USBCtrlTrfRxService@byteToRead
 14630                           
 14631                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 14632  0F63  0875               	movf	i1USBCtrlTrfRxService@byteToRead,w
 14633  0F64  00F2               	movwf	??i1_USBCtrlTrfRxService
 14634  0F65  01F3               	clrf	??i1_USBCtrlTrfRxService+1
 14635  0F66  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 14636  0F67  0234               	subwf	((_outPipes+1)^(0+384)+3),w	;volatile
 14637  0F68  1D03               	skipz
 14638  0F69  2F6C               	goto	u475_25
 14639  0F6A  0872               	movf	??i1_USBCtrlTrfRxService,w
 14640  0F6B  0233               	subwf	(_outPipes^(0+384)+3),w	;volatile
 14641  0F6C                     u475_25:	
 14642  0F6C  1803               	skipnc
 14643  0F6D  2F72               	goto	i1l493
 14644                           
 14645                           ;usb_device.c: 1866: {
 14646                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 14647  0F6E  0833               	movf	(_outPipes^(0+384)+3),w	;volatile
 14648  0F6F  00F2               	movwf	??i1_USBCtrlTrfRxService
 14649  0F70  0872               	movf	??i1_USBCtrlTrfRxService,w
 14650  0F71  00F5               	movwf	i1USBCtrlTrfRxService@byteToRead
 14651  0F72                     i1l493:	
 14652                           
 14653                           ;usb_device.c: 1868: }
 14654                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 14655  0F72  0875               	movf	i1USBCtrlTrfRxService@byteToRead,w
 14656  0F73  00F2               	movwf	??i1_USBCtrlTrfRxService
 14657  0F74  01F3               	clrf	??i1_USBCtrlTrfRxService+1
 14658  0F75  0872               	movf	??i1_USBCtrlTrfRxService,w
 14659  0F76  02B3               	subwf	(_outPipes^(0+384)+3),f	;volatile
 14660  0F77  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 14661  0F78  3BB4               	subwfb	((_outPipes+1)^(0+384)+3),f	;volatile
 14662                           
 14663                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 14664  0F79  01F4               	clrf	i1USBCtrlTrfRxService@i
 14665  0F7A                     i1l5618:	
 14666  0F7A  0875               	movf	i1USBCtrlTrfRxService@byteToRead,w
 14667  0F7B  0274               	subwf	i1USBCtrlTrfRxService@i,w
 14668  0F7C  1803               	btfsc	3,0
 14669  0F7D  2F93               	goto	i1l5620
 14670                           
 14671                           ;usb_device.c: 1875: {
 14672                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 14673  0F7E  0874               	movf	i1USBCtrlTrfRxService@i,w
 14674  0F7F  3E58               	addlw	88
 14675  0F80  0086               	movwf	6
 14676  0F81  0187               	clrf	7
 14677  0F82  0801               	movf	1,w
 14678  0F83  00F2               	movwf	??i1_USBCtrlTrfRxService
 14679  0F84  0830               	movf	_outPipes^(0+384),w	;volatile
 14680  0F85  0086               	movwf	6
 14681  0F86  3002               	movlw	2	; select bank4/5
 14682  0F87  0087               	movwf	7
 14683  0F88  0872               	movf	??i1_USBCtrlTrfRxService,w
 14684  0F89  0081               	movwf	1
 14685  0F8A  3001               	movlw	1
 14686  0F8B  00F2               	movwf	??i1_USBCtrlTrfRxService
 14687  0F8C  0872               	movf	??i1_USBCtrlTrfRxService,w
 14688  0F8D  07B0               	addwf	_outPipes^(0+384),f	;volatile
 14689  0F8E  3001               	movlw	1
 14690  0F8F  00F2               	movwf	??i1_USBCtrlTrfRxService
 14691  0F90  0872               	movf	??i1_USBCtrlTrfRxService,w
 14692  0F91  07F4               	addwf	i1USBCtrlTrfRxService@i,f
 14693  0F92  2F7A               	goto	i1l5618
 14694  0F93                     i1l5620:	
 14695                           
 14696                           ;usb_device.c: 1877: }
 14697                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 14698  0F93  0833               	movf	(_outPipes^(0+384)+3),w	;volatile
 14699  0F94  0434               	iorwf	((_outPipes+1)^(0+384)+3),w	;volatile
 14700  0F95  1903               	btfsc	3,2
 14701  0F96  2FD1               	goto	i1l5632
 14702                           
 14703                           ;usb_device.c: 1882: {
 14704                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 14705  0F97  0021               	movlb	1	; select bank1
 14706  0F98  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14707  0F99  3E01               	addlw	1
 14708  0F9A  00F2               	movwf	??i1_USBCtrlTrfRxService
 14709  0F9B  3000               	movlw	0
 14710  0F9C  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14711  0F9D  00F3               	movwf	??i1_USBCtrlTrfRxService+1
 14712  0F9E  0872               	movf	??i1_USBCtrlTrfRxService,w
 14713  0F9F  0086               	movwf	6
 14714  0FA0  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 14715  0FA1  0087               	movwf	7
 14716  0FA2  3008               	movlw	8
 14717  0FA3  0081               	movwf	1
 14718                           
 14719                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
 14720  0FA4  3058               	movlw	88
 14721  0FA5  00F2               	movwf	??i1_USBCtrlTrfRxService
 14722  0FA6  3000               	movlw	0
 14723  0FA7  00F3               	movwf	??i1_USBCtrlTrfRxService+1
 14724  0FA8  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14725  0FA9  0086               	movwf	6
 14726  0FAA  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14727  0FAB  0087               	movwf	7
 14728  0FAC  3142               	addfsr 1,2
 14729  0FAD  0872               	movf	??i1_USBCtrlTrfRxService,w
 14730  0FAE  3FC0               	movwi [0]fsr1
 14731  0FAF  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 14732  0FB0  3FC1               	movwi [1]fsr1
 14733                           
 14734                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 14735  0FB1  0023               	movlb	3	; select bank3
 14736  0FB2  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 14737  0FB3  0086               	movwf	6
 14738  0FB4  0187               	clrf	7
 14739  0FB5  1B01               	btfsc	1,6
 14740  0FB6  2FC4               	goto	i1l5630
 14741                           
 14742                           ;usb_device.c: 1886: {
 14743                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 14744  0FB7  0021               	movlb	1	; select bank1
 14745  0FB8  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14746  0FB9  0086               	movwf	6
 14747  0FBA  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14748  0FBB  0087               	movwf	7
 14749  0FBC  3048               	movlw	72
 14750  0FBD  0081               	movwf	1
 14751                           
 14752                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 14753  0FBE  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14754  0FBF  0086               	movwf	6
 14755  0FC0  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14756  0FC1  0087               	movwf	7
 14757  0FC2  1781               	bsf	1,7
 14758                           
 14759                           ;usb_device.c: 1889: }
 14760  0FC3  0008               	return
 14761  0FC4                     i1l5630:	
 14762                           
 14763                           ;usb_device.c: 1890: else
 14764                           ;usb_device.c: 1891: {
 14765                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 14766  0FC4  0021               	movlb	1	; select bank1
 14767  0FC5  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14768  0FC6  0086               	movwf	6
 14769  0FC7  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14770  0FC8  0087               	movwf	7
 14771  0FC9  3008               	movlw	8
 14772  0FCA  0081               	movwf	1
 14773                           
 14774                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 14775  0FCB  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14776  0FCC  0086               	movwf	6
 14777  0FCD  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14778  0FCE  0087               	movwf	7
 14779  0FCF  1781               	bsf	1,7
 14780                           
 14781                           ;usb_device.c: 1894: }
 14782                           ;usb_device.c: 1895: }
 14783  0FD0  0008               	return
 14784  0FD1                     i1l5632:	
 14785                           
 14786                           ;usb_device.c: 1896: else
 14787                           ;usb_device.c: 1897: {
 14788                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 14789  0FD1  0021               	movlb	1	; select bank1
 14790  0FD2  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14791  0FD3  3E01               	addlw	1
 14792  0FD4  00F2               	movwf	??i1_USBCtrlTrfRxService
 14793  0FD5  3000               	movlw	0
 14794  0FD6  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14795  0FD7  00F3               	movwf	??i1_USBCtrlTrfRxService+1
 14796  0FD8  0872               	movf	??i1_USBCtrlTrfRxService,w
 14797  0FD9  0086               	movwf	6
 14798  0FDA  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 14799  0FDB  0087               	movwf	7
 14800  0FDC  3008               	movlw	8
 14801  0FDD  0081               	movwf	1
 14802                           
 14803                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 14804  0FDE  3050               	movlw	80
 14805  0FDF  00F2               	movwf	??i1_USBCtrlTrfRxService
 14806  0FE0  3000               	movlw	0
 14807  0FE1  00F3               	movwf	??i1_USBCtrlTrfRxService+1
 14808  0FE2  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14809  0FE3  0086               	movwf	6
 14810  0FE4  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14811  0FE5  0087               	movwf	7
 14812  0FE6  3142               	addfsr 1,2
 14813  0FE7  0872               	movf	??i1_USBCtrlTrfRxService,w
 14814  0FE8  3FC0               	movwi [0]fsr1
 14815  0FE9  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 14816  0FEA  3FC1               	movwi [1]fsr1
 14817                           
 14818                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 14819  0FEB  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14820  0FEC  0086               	movwf	6
 14821  0FED  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14822  0FEE  0087               	movwf	7
 14823  0FEF  3004               	movlw	4
 14824  0FF0  0081               	movwf	1
 14825                           
 14826                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 14827  0FF1  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14828  0FF2  0086               	movwf	6
 14829  0FF3  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14830  0FF4  0087               	movwf	7
 14831  0FF5  1781               	bsf	1,7
 14832                           
 14833                           ;usb_device.c: 1915: {
 14834                           ;usb_device.c: 1921: outPipes[0].pFunc();
 14835  0FF6  0023               	movlb	3	; select bank3
 14836  0FF7  0835               	movf	(low ((_outPipes| (0+256)+5)))^(0+128),w	;volatile
 14837  0FF8  0836               	movf	((low ((_outPipes| (0+256)+5))+1))^(0+128),w	;volatile
 14838                           
 14839                           ;usb_device.c: 1926: }
 14840                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 14841  0FF9  13B2               	bcf	(_outPipes^(0+384)+2),7	;volatile
 14842                           
 14843                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 14844  0FFA  085B               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
 14845  0FFB  1D03               	btfss	3,2
 14846  0FFC  0008               	return
 14847                           
 14848                           ;usb_device.c: 1942: {
 14849                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 14850  0FFD  3187  2794         	fcall	i1_USBCtrlEPAllowStatusStage
 14851  0FFF  0008               	return
 14852  1000                     __end_ofi1_USBCtrlTrfRxService:	
 14853                           
 14854                           	psect	text67
 14855  0794                     __ptext67:	
 14856 ;; *************** function i1_USBCtrlEPAllowStatusStage *****************
 14857 ;; Defined at:
 14858 ;;		line 1416 in file "mcc_generated_files/usb/usb_device.c"
 14859 ;; Parameters:    Size  Location     Type
 14860 ;;		None
 14861 ;; Auto vars:     Size  Location     Type
 14862 ;;		None
 14863 ;; Return value:  Size  Location     Type
 14864 ;;                  1    wreg      void 
 14865 ;; Registers used:
 14866 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14867 ;; Tracked objects:
 14868 ;;		On entry : 0/0
 14869 ;;		On exit  : 0/0
 14870 ;;		Unchanged: 0/0
 14871 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14874 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14875 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14876 ;;Total ram usage:        2 bytes
 14877 ;; Hardware stack levels used:    1
 14878 ;; This function calls:
 14879 ;;		Nothing
 14880 ;; This function is called by:
 14881 ;;		i1_USBDeviceTasks
 14882 ;;		i1_USBCtrlEPServiceComplete
 14883 ;;		i1_USBCtrlTrfRxService
 14884 ;; This function uses a non-reentrant model
 14885 ;;
 14886                           
 14887                           
 14888                           ;psect for function i1_USBCtrlEPAllowStatusStage
 14889  0794                     i1_USBCtrlEPAllowStatusStage:	
 14890                           
 14891                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 14892                           
 14893                           ;incstack = 0
 14894                           ; Regs used in i1_USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
 14895  0794  0023               	movlb	3	; select bank3
 14896  0795  085A               	movf	_USBStatusStageEnabledFlag1^(0+384),w	;volatile
 14897  0796  1D03               	btfss	3,2
 14898  0797  0008               	return
 14899                           
 14900                           ;usb_device.c: 1424: {
 14901                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 14902  0798  3001               	movlw	1
 14903  0799  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 14904  079A  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 14905  079B  00DA               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
 14906                           
 14907                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 14908  079C  0859               	movf	_USBStatusStageEnabledFlag2^(0+384),w	;volatile
 14909  079D  1D03               	btfss	3,2
 14910  079E  0008               	return
 14911                           
 14912                           ;usb_device.c: 1427: {
 14913                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 14914  079F  3001               	movlw	1
 14915  07A0  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 14916  07A1  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 14917  07A2  00D9               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
 14918                           
 14919                           ;usb_device.c: 1432: if(controlTransferState == 2)
 14920  07A3  3002               	movlw	2
 14921  07A4  0662               	xorwf	_controlTransferState^(0+384),w	;volatile
 14922  07A5  1D03               	btfss	3,2
 14923  07A6  2FB9               	goto	i1l5148
 14924                           
 14925                           ;usb_device.c: 1433: {
 14926                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 14927  07A7  0837               	movf	_pBDTEntryIn^(0+384),w
 14928  07A8  0086               	movwf	6
 14929  07A9  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 14930  07AA  0087               	movwf	7
 14931  07AB  3141               	addfsr 1,1
 14932  07AC  0181               	clrf	1
 14933                           
 14934                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 14935  07AD  0837               	movf	_pBDTEntryIn^(0+384),w
 14936  07AE  0086               	movwf	6
 14937  07AF  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 14938  07B0  0087               	movwf	7
 14939  07B1  3048               	movlw	72
 14940  07B2  0081               	movwf	1
 14941                           
 14942                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 14943  07B3  0837               	movf	_pBDTEntryIn^(0+384),w
 14944  07B4  0086               	movwf	6
 14945  07B5  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 14946  07B6  0087               	movwf	7
 14947  07B7  1781               	bsf	1,7
 14948                           
 14949                           ;usb_device.c: 1437: }
 14950  07B8  0008               	return
 14951  07B9                     i1l5148:	
 14952                           
 14953                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 14954  07B9  0362               	decf	_controlTransferState^(0+384),w	;volatile
 14955  07BA  1D03               	btfss	3,2
 14956  07BB  0008               	return
 14957                           
 14958                           ;usb_device.c: 1439: {
 14959                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 14960  07BC  01DD               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
 14961                           
 14962                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 14963  07BD  3008               	movlw	8
 14964  07BE  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 14965  07BF  0A64               	incf	_pBDTEntryEP0OutCurrent^(0+384),w
 14966  07C0  0086               	movwf	6
 14967  07C1  0187               	clrf	7
 14968  07C2  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 14969  07C3  0081               	movwf	1
 14970                           
 14971                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 14972  07C4  3050               	movlw	80
 14973  07C5  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 14974  07C6  3000               	movlw	0
 14975  07C7  00F1               	movwf	??i1_USBCtrlEPAllowStatusStage+1
 14976  07C8  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 14977  07C9  3E02               	addlw	2
 14978  07CA  0086               	movwf	6
 14979  07CB  0187               	clrf	7
 14980  07CC  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 14981  07CD  3FC0               	movwi [0]fsr1
 14982  07CE  0871               	movf	??i1_USBCtrlEPAllowStatusStage+1,w
 14983  07CF  3FC1               	movwi [1]fsr1
 14984                           
 14985                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 14986  07D0  3004               	movlw	4
 14987  07D1  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 14988  07D2  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 14989  07D3  0086               	movwf	6
 14990  07D4  0187               	clrf	7
 14991  07D5  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 14992  07D6  0081               	movwf	1
 14993                           
 14994                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 14995  07D7  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 14996  07D8  0086               	movwf	6
 14997  07D9  0187               	clrf	7
 14998  07DA  1781               	bsf	1,7
 14999                           
 15000                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 15001  07DB  3001               	movlw	1
 15002  07DC  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 15003  07DD  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 15004  07DE  00DD               	movwf	_BothEP0OutUOWNsSet^(0+384)	;volatile
 15005                           
 15006                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 15007  07DF  0021               	movlb	1	; select bank1
 15008  07E0  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 15009  07E1  3E01               	addlw	1
 15010  07E2  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 15011  07E3  3000               	movlw	0
 15012  07E4  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 15013  07E5  00F1               	movwf	??i1_USBCtrlEPAllowStatusStage+1
 15014  07E6  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 15015  07E7  0086               	movwf	6
 15016  07E8  0871               	movf	??i1_USBCtrlEPAllowStatusStage+1,w
 15017  07E9  0087               	movwf	7
 15018  07EA  3008               	movlw	8
 15019  07EB  0081               	movwf	1
 15020                           
 15021                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 15022  07EC  3050               	movlw	80
 15023  07ED  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 15024  07EE  3000               	movlw	0
 15025  07EF  00F1               	movwf	??i1_USBCtrlEPAllowStatusStage+1
 15026  07F0  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 15027  07F1  0086               	movwf	6
 15028  07F2  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 15029  07F3  0087               	movwf	7
 15030  07F4  3142               	addfsr 1,2
 15031  07F5  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 15032  07F6  3FC0               	movwi [0]fsr1
 15033  07F7  0871               	movf	??i1_USBCtrlEPAllowStatusStage+1,w
 15034  07F8  3FC1               	movwi [1]fsr1
 15035                           
 15036                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 15037  07F9  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 15038  07FA  0086               	movwf	6
 15039  07FB  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 15040  07FC  0087               	movwf	7
 15041  07FD  3080               	movlw	128
 15042  07FE  0081               	movwf	1
 15043  07FF  0008               	return
 15044  0800                     __end_ofi1_USBCtrlEPAllowStatusStage:	
 15045                           
 15046                           	psect	text68
 15047  08D3                     __ptext68:	
 15048 ;; *************** function i1_USBCtrlTrfInHandler *****************
 15049 ;; Defined at:
 15050 ;;		line 2592 in file "mcc_generated_files/usb/usb_device.c"
 15051 ;; Parameters:    Size  Location     Type
 15052 ;;		None
 15053 ;; Auto vars:     Size  Location     Type
 15054 ;;  USBCtrlTrfIn    1    5[COMMON] unsigned char 
 15055 ;; Return value:  Size  Location     Type
 15056 ;;                  1    wreg      void 
 15057 ;; Registers used:
 15058 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15059 ;; Tracked objects:
 15060 ;;		On entry : 0/0
 15061 ;;		On exit  : 0/0
 15062 ;;		Unchanged: 0/0
 15063 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15065 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15066 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15067 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15068 ;;Total ram usage:        3 bytes
 15069 ;; Hardware stack levels used:    1
 15070 ;; Hardware stack levels required when called:    1
 15071 ;; This function calls:
 15072 ;;		i1_USBCtrlTrfTxService
 15073 ;; This function is called by:
 15074 ;;		i1_USBCtrlEPService
 15075 ;; This function uses a non-reentrant model
 15076 ;;
 15077                           
 15078                           
 15079                           ;psect for function i1_USBCtrlTrfInHandler
 15080  08D3                     i1_USBCtrlTrfInHandler:	
 15081                           
 15082                           ;usb_device.c: 2594: uint8_t lastDTS;
 15083                           ;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 15084                           
 15085                           ;incstack = 0
 15086                           ; Regs used in i1_USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15087  08D3  0023               	movlb	3	; select bank3
 15088  08D4  0837               	movf	_pBDTEntryIn^(0+384),w
 15089  08D5  0086               	movwf	6
 15090  08D6  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 15091  08D7  0087               	movwf	7
 15092  08D8  3000               	movlw	0
 15093  08D9  1B01               	btfsc	1,6
 15094  08DA  3001               	movlw	1
 15095  08DB  00F5               	movwf	i1USBCtrlTrfInHandler@lastDTS
 15096                           
 15097                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 15098  08DC  3004               	movlw	4
 15099  08DD  0637               	xorwf	_pBDTEntryIn^(0+384),w
 15100  08DE  00B7               	movwf	_pBDTEntryIn^(0+384)
 15101  08DF  3000               	movlw	0
 15102  08E0  0638               	xorwf	(_pBDTEntryIn+1)^(0+384),w
 15103  08E1  00B8               	movwf	(_pBDTEntryIn+1)^(0+384)
 15104                           
 15105                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
 15106  08E2  3008               	movlw	8
 15107  08E3  0665               	xorwf	_USBDeviceState^(0+384),w	;volatile
 15108  08E4  1D03               	btfss	3,2
 15109  08E5  28F5               	goto	i1l5982
 15110                           
 15111                           ;usb_device.c: 2605: {
 15112                           ;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
 15113  08E6  0020               	movlb	0	; select bank0
 15114  08E7  0852               	movf	82,w	;volatile
 15115  08E8  397F               	andlw	127
 15116  08E9  003D               	movlb	29	; select bank29
 15117  08EA  0096               	movwf	22	;volatile
 15118                           
 15119                           ;usb_device.c: 2607: if(UADDR != 0u)
 15120  08EB  0816               	movf	22,w	;volatile
 15121  08EC  1903               	btfsc	3,2
 15122  08ED  28F0               	goto	i1l5980
 15123                           
 15124                           ;usb_device.c: 2608: {
 15125                           ;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
 15126  08EE  3010               	movlw	16
 15127  08EF  28F1               	goto	L19
 15128  08F0                     i1l5980:	
 15129                           ;usb_device.c: 2610: }
 15130                           
 15131                           
 15132                           ;usb_device.c: 2611: else
 15133                           ;usb_device.c: 2612: {
 15134                           ;usb_device.c: 2613: USBDeviceState=DEFAULT_STATE;
 15135  08F0  3004               	movlw	4
 15136  08F1                     L19:	
 15137  08F1  00F3               	movwf	??i1_USBCtrlTrfInHandler
 15138  08F2  0873               	movf	??i1_USBCtrlTrfInHandler,w
 15139  08F3  0023               	movlb	3	; select bank3
 15140  08F4  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
 15141  08F5                     i1l5982:	
 15142                           
 15143                           ;usb_device.c: 2614: }
 15144                           ;usb_device.c: 2615: }
 15145                           ;usb_device.c: 2618: if(controlTransferState == 1)
 15146  08F5  0362               	decf	_controlTransferState^(0+384),w	;volatile
 15147  08F6  1D03               	btfss	3,2
 15148  08F7  2934               	goto	i1l578
 15149                           
 15150                           ;usb_device.c: 2619: {
 15151                           ;usb_device.c: 2620: pBDTEntryIn[0]->ADR = (((uint16_t)(CtrlTrfData)) & 0x7FFF);
 15152  08F8  3058               	movlw	88
 15153  08F9  00F3               	movwf	??i1_USBCtrlTrfInHandler
 15154  08FA  3000               	movlw	0
 15155  08FB  00F4               	movwf	??i1_USBCtrlTrfInHandler+1
 15156  08FC  0837               	movf	_pBDTEntryIn^(0+384),w
 15157  08FD  0086               	movwf	6
 15158  08FE  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 15159  08FF  0087               	movwf	7
 15160  0900  3142               	addfsr 1,2
 15161  0901  0873               	movf	??i1_USBCtrlTrfInHandler,w
 15162  0902  3FC0               	movwi [0]fsr1
 15163  0903  0874               	movf	??i1_USBCtrlTrfInHandler+1,w
 15164  0904  3FC1               	movwi [1]fsr1
 15165                           
 15166                           ;usb_device.c: 2621: USBCtrlTrfTxService();
 15167  0905  3189  21AC  3188   	fcall	i1_USBCtrlTrfTxService
 15168                           
 15169                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
 15170  0908  3002               	movlw	2
 15171  0909  0023               	movlb	3	; select bank3
 15172  090A  0663               	xorwf	_shortPacketStatus^(0+384),w	;volatile
 15173  090B  1D03               	btfss	3,2
 15174  090C  2919               	goto	i1l5992
 15175                           
 15176                           ;usb_device.c: 2628: {
 15177                           ;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
 15178  090D  0837               	movf	_pBDTEntryIn^(0+384),w
 15179  090E  0086               	movwf	6
 15180  090F  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 15181  0910  0087               	movwf	7
 15182  0911  3004               	movlw	4
 15183  0912  0081               	movwf	1
 15184                           
 15185                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
 15186  0913  0837               	movf	_pBDTEntryIn^(0+384),w
 15187  0914  0086               	movwf	6
 15188  0915  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 15189  0916  0087               	movwf	7
 15190  0917  1781               	bsf	1,7
 15191                           
 15192                           ;usb_device.c: 2633: }
 15193  0918  0008               	return
 15194  0919                     i1l5992:	
 15195                           
 15196                           ;usb_device.c: 2634: else
 15197                           ;usb_device.c: 2635: {
 15198                           ;usb_device.c: 2636: if(lastDTS == 0)
 15199  0919  0875               	movf	i1USBCtrlTrfInHandler@lastDTS,w
 15200  091A  1D03               	btfss	3,2
 15201  091B  2928               	goto	i1l5996
 15202                           
 15203                           ;usb_device.c: 2637: {
 15204                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 15205  091C  0837               	movf	_pBDTEntryIn^(0+384),w
 15206  091D  0086               	movwf	6
 15207  091E  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 15208  091F  0087               	movwf	7
 15209  0920  3048               	movlw	72
 15210  0921  0081               	movwf	1
 15211                           
 15212                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
 15213  0922  0837               	movf	_pBDTEntryIn^(0+384),w
 15214  0923  0086               	movwf	6
 15215  0924  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 15216  0925  0087               	movwf	7
 15217  0926  1781               	bsf	1,7
 15218                           
 15219                           ;usb_device.c: 2640: }
 15220  0927  0008               	return
 15221  0928                     i1l5996:	
 15222                           
 15223                           ;usb_device.c: 2641: else
 15224                           ;usb_device.c: 2642: {
 15225                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 15226  0928  0837               	movf	_pBDTEntryIn^(0+384),w
 15227  0929  0086               	movwf	6
 15228  092A  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 15229  092B  0087               	movwf	7
 15230  092C  3008               	movlw	8
 15231  092D  0081               	movwf	1
 15232                           
 15233                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
 15234  092E  0837               	movf	_pBDTEntryIn^(0+384),w
 15235  092F  0086               	movwf	6
 15236  0930  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 15237  0931  0087               	movwf	7
 15238  0932  1781               	bsf	1,7
 15239                           
 15240                           ;usb_device.c: 2645: }
 15241                           ;usb_device.c: 2646: }
 15242                           ;usb_device.c: 2647: }
 15243  0933  0008               	return
 15244  0934                     i1l578:	
 15245                           
 15246                           ;usb_device.c: 2648: else
 15247                           ;usb_device.c: 2649: {
 15248                           ;usb_device.c: 2653: if(outPipes[0].info.bits.busy == 1)
 15249  0934  1FB2               	btfss	(_outPipes^(0+384)+2),7	;volatile
 15250  0935  2939               	goto	i1l6000
 15251                           
 15252                           ;usb_device.c: 2656: {
 15253                           ;usb_device.c: 2657: outPipes[0].pFunc();
 15254  0936  0835               	movf	(low ((_outPipes| (0+256)+5)))^(0+128),w	;volatile
 15255  0937  0836               	movf	((low ((_outPipes| (0+256)+5))+1))^(0+128),w	;volatile
 15256                           
 15257                           ;usb_device.c: 2658: }
 15258                           ;usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
 15259  0938  13B2               	bcf	(_outPipes^(0+384)+2),7	;volatile
 15260  0939                     i1l6000:	
 15261                           
 15262                           ;usb_device.c: 2660: }
 15263                           ;usb_device.c: 2662: controlTransferState = 0;
 15264  0939  01E2               	clrf	_controlTransferState^(0+384)	;volatile
 15265  093A  0008               	return
 15266  093B                     __end_ofi1_USBCtrlTrfInHandler:	
 15267                           
 15268                           	psect	text69
 15269  09AC                     __ptext69:	
 15270 ;; *************** function i1_USBCtrlTrfTxService *****************
 15271 ;; Defined at:
 15272 ;;		line 1771 in file "mcc_generated_files/usb/usb_device.c"
 15273 ;; Parameters:    Size  Location     Type
 15274 ;;		None
 15275 ;; Auto vars:     Size  Location     Type
 15276 ;;  USBCtrlTrfTx    1    2[COMMON] unsigned char 
 15277 ;; Return value:  Size  Location     Type
 15278 ;;                  1    wreg      void 
 15279 ;; Registers used:
 15280 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 15281 ;; Tracked objects:
 15282 ;;		On entry : 0/0
 15283 ;;		On exit  : 0/0
 15284 ;;		Unchanged: 0/0
 15285 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15287 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15288 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15289 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15290 ;;Total ram usage:        3 bytes
 15291 ;; Hardware stack levels used:    1
 15292 ;; This function calls:
 15293 ;;		Nothing
 15294 ;; This function is called by:
 15295 ;;		i1_USBCtrlEPAllowDataStage
 15296 ;;		i1_USBCtrlTrfInHandler
 15297 ;; This function uses a non-reentrant model
 15298 ;;
 15299                           
 15300                           
 15301                           ;psect for function i1_USBCtrlTrfTxService
 15302  09AC                     i1_USBCtrlTrfTxService:	
 15303                           
 15304                           ;usb_device.c: 1773: uint8_t byteToSend;
 15305                           ;usb_device.c: 1777: byteToSend = 8;
 15306                           
 15307                           ;incstack = 0
 15308                           ; Regs used in i1_USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
 15309  09AC  3008               	movlw	8
 15310  09AD  00F0               	movwf	??i1_USBCtrlTrfTxService
 15311  09AE  0870               	movf	??i1_USBCtrlTrfTxService,w
 15312  09AF  00F2               	movwf	i1USBCtrlTrfTxService@byteToSend
 15313                           
 15314                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 15315  09B0  3000               	movlw	0
 15316  09B1  0021               	movlb	1	; select bank1
 15317  09B2  0247               	subwf	((_inPipes+1)^(0+128)+3),w	;volatile
 15318  09B3  3008               	movlw	8
 15319  09B4  1903               	skipnz
 15320  09B5  0246               	subwf	(_inPipes^(0+128)+3),w	;volatile
 15321  09B6  1803               	skipnc
 15322  09B7  29C9               	goto	i1l478
 15323                           
 15324                           ;usb_device.c: 1779: {
 15325                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 15326  09B8  0846               	movf	(_inPipes^(0+128)+3),w	;volatile
 15327  09B9  00F0               	movwf	??i1_USBCtrlTrfTxService
 15328  09BA  0870               	movf	??i1_USBCtrlTrfTxService,w
 15329  09BB  00F2               	movwf	i1USBCtrlTrfTxService@byteToSend
 15330                           
 15331                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 15332  09BC  0023               	movlb	3	; select bank3
 15333  09BD  0863               	movf	_shortPacketStatus^(0+384),w	;volatile
 15334  09BE  1D03               	btfss	3,2
 15335  09BF  29C2               	goto	i1l4830
 15336                           
 15337                           ;usb_device.c: 1788: {
 15338                           ;usb_device.c: 1789: shortPacketStatus = 1;
 15339  09C0  3001               	movlw	1
 15340  09C1  29C6               	goto	L20
 15341  09C2                     i1l4830:	
 15342                           ;usb_device.c: 1790: }
 15343                           
 15344                           
 15345                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 15346  09C2  0363               	decf	_shortPacketStatus^(0+384),w	;volatile
 15347  09C3  1D03               	btfss	3,2
 15348  09C4  29C9               	goto	i1l478
 15349                           
 15350                           ;usb_device.c: 1792: {
 15351                           ;usb_device.c: 1793: shortPacketStatus = 2;
 15352  09C5  3002               	movlw	2
 15353  09C6                     L20:	
 15354  09C6  00F0               	movwf	??i1_USBCtrlTrfTxService
 15355  09C7  0870               	movf	??i1_USBCtrlTrfTxService,w
 15356  09C8  00E3               	movwf	_shortPacketStatus^(0+384)	;volatile
 15357  09C9                     i1l478:	
 15358                           
 15359                           ;usb_device.c: 1794: }
 15360                           ;usb_device.c: 1795: }
 15361                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 15362  09C9  0872               	movf	i1USBCtrlTrfTxService@byteToSend,w
 15363  09CA  00F0               	movwf	??i1_USBCtrlTrfTxService
 15364  09CB  01F1               	clrf	??i1_USBCtrlTrfTxService+1
 15365  09CC  0870               	movf	??i1_USBCtrlTrfTxService,w
 15366  09CD  0021               	movlb	1	; select bank1
 15367  09CE  02C6               	subwf	(_inPipes^(0+128)+3),f	;volatile
 15368  09CF  0871               	movf	??i1_USBCtrlTrfTxService+1,w
 15369  09D0  3BC7               	subwfb	((_inPipes+1)^(0+128)+3),f	;volatile
 15370                           
 15371                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 15372  09D1  0023               	movlb	3	; select bank3
 15373  09D2  0837               	movf	_pBDTEntryIn^(0+384),w
 15374  09D3  3E01               	addlw	1
 15375  09D4  00F0               	movwf	??i1_USBCtrlTrfTxService
 15376  09D5  3000               	movlw	0
 15377  09D6  3D38               	addwfc	(_pBDTEntryIn+1)^(0+384),w
 15378  09D7  00F1               	movwf	??i1_USBCtrlTrfTxService+1
 15379  09D8  0870               	movf	??i1_USBCtrlTrfTxService,w
 15380  09D9  0086               	movwf	6
 15381  09DA  0871               	movf	??i1_USBCtrlTrfTxService+1,w
 15382  09DB  0087               	movwf	7
 15383  09DC  0872               	movf	i1USBCtrlTrfTxService@byteToSend,w
 15384  09DD  0081               	movwf	1
 15385                           
 15386                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 15387  09DE  3058               	movlw	88
 15388  09DF  00F0               	movwf	??i1_USBCtrlTrfTxService
 15389  09E0  0870               	movf	??i1_USBCtrlTrfTxService,w
 15390  09E1  00E1               	movwf	_pDst^(0+384)
 15391                           
 15392                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 15393  09E2  0021               	movlb	1	; select bank1
 15394  09E3  1C45               	btfss	(_inPipes^(0+128)+2),0	;volatile
 15395  09E4  29FF               	goto	i1l4850
 15396  09E5  2A1C               	goto	i1l4860
 15397  09E6                     i1l4842:	
 15398                           ;usb_device.c: 1810: {
 15399                           ;usb_device.c: 1811: while(byteToSend)
 15400                           
 15401                           
 15402                           ;usb_device.c: 1812: {
 15403                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 15404  09E6  0021               	movlb	1	; select bank1
 15405  09E7  0843               	movf	_inPipes^(0+128),w	;volatile
 15406  09E8  0084               	movwf	4
 15407  09E9  0844               	movf	(_inPipes+1)^(0+128),w	;volatile
 15408  09EA  0085               	movwf	5
 15409  09EB  0800               	movf	0,w	;code access
 15410  09EC  00F0               	movwf	??i1_USBCtrlTrfTxService
 15411  09ED  0023               	movlb	3	; select bank3
 15412  09EE  0861               	movf	_pDst^(0+384),w
 15413  09EF  0086               	movwf	6
 15414  09F0  0187               	clrf	7
 15415  09F1  0870               	movf	??i1_USBCtrlTrfTxService,w
 15416  09F2  0081               	movwf	1
 15417  09F3  3001               	movlw	1
 15418  09F4  0021               	movlb	1	; select bank1
 15419  09F5  07C3               	addwf	_inPipes^(0+128),f	;volatile
 15420  09F6  3000               	movlw	0
 15421  09F7  3DC4               	addwfc	(_inPipes+1)^(0+128),f	;volatile
 15422  09F8  3001               	movlw	1
 15423  09F9  00F0               	movwf	??i1_USBCtrlTrfTxService
 15424  09FA  0870               	movf	??i1_USBCtrlTrfTxService,w
 15425  09FB  0023               	movlb	3	; select bank3
 15426  09FC  07E1               	addwf	_pDst^(0+384),f
 15427                           
 15428                           ;usb_device.c: 1814: byteToSend--;
 15429  09FD  3001               	movlw	1
 15430  09FE  02F2               	subwf	i1USBCtrlTrfTxService@byteToSend,f
 15431  09FF                     i1l4850:	
 15432  09FF  0872               	movf	i1USBCtrlTrfTxService@byteToSend,w
 15433  0A00  1903               	btfsc	3,2
 15434  0A01  0008               	return
 15435  0A02  29E6               	goto	i1l4842
 15436  0A03                     i1l4852:	
 15437                           ;usb_device.c: 1817: else
 15438                           ;usb_device.c: 1818: {
 15439                           ;usb_device.c: 1819: while(byteToSend)
 15440                           
 15441                           ;usb_device.c: 1815: }
 15442                           ;usb_device.c: 1816: }
 15443                           
 15444                           
 15445                           ;usb_device.c: 1820: {
 15446                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 15447  0A03  0021               	movlb	1	; select bank1
 15448  0A04  0843               	movf	_inPipes^(0+128),w	;volatile
 15449  0A05  0084               	movwf	4
 15450  0A06  0844               	movf	(_inPipes+1)^(0+128),w	;volatile
 15451  0A07  0085               	movwf	5
 15452  0A08  0800               	movf	0,w	;code access
 15453  0A09  00F0               	movwf	??i1_USBCtrlTrfTxService
 15454  0A0A  0023               	movlb	3	; select bank3
 15455  0A0B  0861               	movf	_pDst^(0+384),w
 15456  0A0C  0086               	movwf	6
 15457  0A0D  0187               	clrf	7
 15458  0A0E  0870               	movf	??i1_USBCtrlTrfTxService,w
 15459  0A0F  0081               	movwf	1
 15460  0A10  3001               	movlw	1
 15461  0A11  0021               	movlb	1	; select bank1
 15462  0A12  07C3               	addwf	_inPipes^(0+128),f	;volatile
 15463  0A13  3000               	movlw	0
 15464  0A14  3DC4               	addwfc	(_inPipes+1)^(0+128),f	;volatile
 15465  0A15  3001               	movlw	1
 15466  0A16  00F0               	movwf	??i1_USBCtrlTrfTxService
 15467  0A17  0870               	movf	??i1_USBCtrlTrfTxService,w
 15468  0A18  0023               	movlb	3	; select bank3
 15469  0A19  07E1               	addwf	_pDst^(0+384),f
 15470                           
 15471                           ;usb_device.c: 1822: byteToSend--;
 15472  0A1A  3001               	movlw	1
 15473  0A1B  02F2               	subwf	i1USBCtrlTrfTxService@byteToSend,f
 15474  0A1C                     i1l4860:	
 15475  0A1C  0872               	movf	i1USBCtrlTrfTxService@byteToSend,w
 15476  0A1D  1903               	btfsc	3,2
 15477  0A1E  0008               	return
 15478  0A1F  2A03               	goto	i1l4852
 15479  0A20                     __end_ofi1_USBCtrlTrfTxService:	
 15480                           
 15481                           	psect	text70
 15482  1D25                     __ptext70:	
 15483 ;; *************** function _i2c_busCollisionISR *****************
 15484 ;; Defined at:
 15485 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
 15486 ;; Parameters:    Size  Location     Type
 15487 ;;		None
 15488 ;; Auto vars:     Size  Location     Type
 15489 ;;		None
 15490 ;; Return value:  Size  Location     Type
 15491 ;;                  1    wreg      void 
 15492 ;; Registers used:
 15493 ;;		status,2, status,0, pclath, cstack
 15494 ;; Tracked objects:
 15495 ;;		On entry : 0/0
 15496 ;;		On exit  : 0/0
 15497 ;;		Unchanged: 0/0
 15498 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15503 ;;Total ram usage:        0 bytes
 15504 ;; Hardware stack levels used:    1
 15505 ;; Hardware stack levels required when called:    1
 15506 ;; This function calls:
 15507 ;;		_i2c_driver_clearBusCollision
 15508 ;; This function is called by:
 15509 ;;		_i2c_open
 15510 ;;		_INTERRUPT_InterruptManager
 15511 ;; This function uses a non-reentrant model
 15512 ;;
 15513                           
 15514                           
 15515                           ;psect for function _i2c_busCollisionISR
 15516  1D25                     _i2c_busCollisionISR:	
 15517                           
 15518                           ;i2c_master.c: 437: i2c_driver_clearBusCollision();
 15519                           
 15520                           ;incstack = 0
 15521                           ; Regs used in _i2c_busCollisionISR: [status,2+status,0+pclath+cstack]
 15522  1D25  319D  2522         	fcall	_i2c_driver_clearBusCollision
 15523  1D27  0008               	return
 15524  1D28                     __end_of_i2c_busCollisionISR:	
 15525                           
 15526                           	psect	text71
 15527  1D22                     __ptext71:	
 15528 ;; *************** function _i2c_driver_clearBusCollision *****************
 15529 ;; Defined at:
 15530 ;;		line 253 in file "mcc_generated_files/i2c_driver.c"
 15531 ;; Parameters:    Size  Location     Type
 15532 ;;		None
 15533 ;; Auto vars:     Size  Location     Type
 15534 ;;		None
 15535 ;; Return value:  Size  Location     Type
 15536 ;;                  1    wreg      void 
 15537 ;; Registers used:
 15538 ;;		None
 15539 ;; Tracked objects:
 15540 ;;		On entry : 0/0
 15541 ;;		On exit  : 0/0
 15542 ;;		Unchanged: 0/0
 15543 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15548 ;;Total ram usage:        0 bytes
 15549 ;; Hardware stack levels used:    1
 15550 ;; This function calls:
 15551 ;;		Nothing
 15552 ;; This function is called by:
 15553 ;;		_i2c_busCollisionISR
 15554 ;; This function uses a non-reentrant model
 15555 ;;
 15556                           
 15557                           
 15558                           ;psect for function _i2c_driver_clearBusCollision
 15559  1D22                     _i2c_driver_clearBusCollision:	
 15560                           
 15561                           ;i2c_driver.c: 255: PIR2bits.BCL1IF = 0;
 15562                           
 15563                           ;incstack = 0
 15564                           ; Regs used in _i2c_driver_clearBusCollision: []
 15565  1D22  0020               	movlb	0	; select bank0
 15566  1D23  1192               	bcf	18,3	;volatile
 15567  1D24  0008               	return
 15568  1D25                     __end_of_i2c_driver_clearBusCollision:	
 15569                           
 15570                           	psect	text72
 15571  1F3D                     __ptext72:	
 15572 ;; *************** function _i2c_ISR *****************
 15573 ;; Defined at:
 15574 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 15575 ;; Parameters:    Size  Location     Type
 15576 ;;		None
 15577 ;; Auto vars:     Size  Location     Type
 15578 ;;		None
 15579 ;; Return value:  Size  Location     Type
 15580 ;;                  1    wreg      void 
 15581 ;; Registers used:
 15582 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15583 ;; Tracked objects:
 15584 ;;		On entry : 0/0
 15585 ;;		On exit  : 0/0
 15586 ;;		Unchanged: 0/0
 15587 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15590 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15591 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15592 ;;Total ram usage:        1 bytes
 15593 ;; Hardware stack levels used:    1
 15594 ;; Hardware stack levels required when called:    4
 15595 ;; This function calls:
 15596 ;;		_do_I2C_DO_ACK
 15597 ;;		_do_I2C_DO_ADDRESS_NACK
 15598 ;;		_do_I2C_DO_NACK_RESTART
 15599 ;;		_do_I2C_DO_NACK_STOP
 15600 ;;		_do_I2C_IDLE
 15601 ;;		_do_I2C_RCEN
 15602 ;;		_do_I2C_RESET
 15603 ;;		_do_I2C_RX
 15604 ;;		_do_I2C_SEND_ADR_READ
 15605 ;;		_do_I2C_SEND_ADR_WRITE
 15606 ;;		_do_I2C_SEND_RESTART
 15607 ;;		_do_I2C_SEND_RESTART_READ
 15608 ;;		_do_I2C_SEND_RESTART_WRITE
 15609 ;;		_do_I2C_SEND_STOP
 15610 ;;		_do_I2C_TX
 15611 ;;		_do_I2C_TX_EMPTY
 15612 ;;		_i2c_driver_isNACK
 15613 ;;		_mssp_clearIRQ
 15614 ;; This function is called by:
 15615 ;;		_i2c_open
 15616 ;;		_i2c_poller
 15617 ;;		_INTERRUPT_InterruptManager
 15618 ;; This function uses a non-reentrant model
 15619 ;;
 15620                           
 15621                           
 15622                           ;psect for function _i2c_ISR
 15623  1F3D                     _i2c_ISR:	
 15624                           
 15625                           ;i2c_master.c: 421: mssp_clearIRQ();
 15626                           
 15627                           ;incstack = 0
 15628                           ; Regs used in _i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15629  1F3D  319D  251F  319F   	fcall	_mssp_clearIRQ
 15630                           
 15631                           ;i2c_master.c: 427: if(i2c_status.addressNACKCheck && i2c_driver_isNACK())
 15632  1F40  0024               	movlb	4	; select bank4
 15633  1F41  1DA0               	btfss	_i2c_status^(0+512),3
 15634  1F42  2F4D               	goto	i1l6850
 15635  1F43  319D  2582  319F   	fcall	_i2c_driver_isNACK
 15636  1F46  1C03               	btfss	3,0
 15637  1F47  2F4D               	goto	i1l6850
 15638                           
 15639                           ;i2c_master.c: 428: {
 15640                           ;i2c_master.c: 429: i2c_status.state = I2C_ADDRESS_NACK;
 15641  1F48  300F               	movlw	15
 15642  1F49  00F4               	movwf	??_i2c_ISR
 15643  1F4A  0874               	movf	??_i2c_ISR,w
 15644  1F4B  0024               	movlb	4	; select bank4
 15645  1F4C  00A9               	movwf	(_i2c_status^(0+512)+9)
 15646  1F4D                     i1l6850:	
 15647                           
 15648                           ;i2c_master.c: 430: }
 15649                           ;i2c_master.c: 432: i2c_status.state = fsmStateTable[i2c_status.state]();
 15650  1F4D  0024               	movlb	4	; select bank4
 15651  1F4E  3529               	lslf	(_i2c_status^(0+512)+9),w
 15652  1F4F  3EA0               	addlw	(low (_fsmStateTable| (0+512)))& (0+255)
 15653  1F50  0086               	movwf	6
 15654  1F51  3002               	movlw	2	; select bank5/6
 15655  1F52  0087               	movwf	7
 15656  1F53  3F41               	moviw [1]fsr1
 15657  1F54  008A               	movwf	10
 15658  1F55  3F40               	moviw [0]fsr1
 15659  1F56  000A               	callw
 15660  1F57  319F               	pagesel	$
 15661  1F58  00F4               	movwf	??_i2c_ISR
 15662  1F59  0874               	movf	??_i2c_ISR,w
 15663  1F5A  0024               	movlb	4	; select bank4
 15664  1F5B  00A9               	movwf	(_i2c_status^(0+512)+9)
 15665  1F5C  0008               	return
 15666  1F5D                     __end_of_i2c_ISR:	
 15667                           
 15668                           	psect	text73
 15669  1D1F                     __ptext73:	
 15670 ;; *************** function _mssp_clearIRQ *****************
 15671 ;; Defined at:
 15672 ;;		line 53 in file "mcc_generated_files/i2c_driver.c"
 15673 ;; Parameters:    Size  Location     Type
 15674 ;;		None
 15675 ;; Auto vars:     Size  Location     Type
 15676 ;;		None
 15677 ;; Return value:  Size  Location     Type
 15678 ;;                  1    wreg      void 
 15679 ;; Registers used:
 15680 ;;		None
 15681 ;; Tracked objects:
 15682 ;;		On entry : 0/0
 15683 ;;		On exit  : 0/0
 15684 ;;		Unchanged: 0/0
 15685 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15690 ;;Total ram usage:        0 bytes
 15691 ;; Hardware stack levels used:    1
 15692 ;; This function calls:
 15693 ;;		Nothing
 15694 ;; This function is called by:
 15695 ;;		_i2c_ISR
 15696 ;;		_i2c_open
 15697 ;;		_i2c_close
 15698 ;; This function uses a non-reentrant model
 15699 ;;
 15700                           
 15701                           
 15702                           ;psect for function _mssp_clearIRQ
 15703  1D1F                     _mssp_clearIRQ:	
 15704                           
 15705                           ;i2c_driver.c: 55: PIR1bits.SSP1IF = 0;
 15706                           
 15707                           ;incstack = 0
 15708                           ; Regs used in _mssp_clearIRQ: []
 15709  1D1F  0020               	movlb	0	; select bank0
 15710  1D20  1191               	bcf	17,3	;volatile
 15711  1D21  0008               	return
 15712  1D22                     __end_of_mssp_clearIRQ:	
 15713                           
 15714                           	psect	text74
 15715  1286                     __ptext74:	
 15716 ;; *************** function _do_I2C_RX *****************
 15717 ;; Defined at:
 15718 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 15719 ;; Parameters:    Size  Location     Type
 15720 ;;		None
 15721 ;; Auto vars:     Size  Location     Type
 15722 ;;		None
 15723 ;; Return value:  Size  Location     Type
 15724 ;;                  1    wreg      enum E2347
 15725 ;; Registers used:
 15726 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15727 ;; Tracked objects:
 15728 ;;		On entry : 0/0
 15729 ;;		On exit  : 0/0
 15730 ;;		Unchanged: 0/0
 15731 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15734 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15735 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15736 ;;Total ram usage:        1 bytes
 15737 ;; Hardware stack levels used:    1
 15738 ;; Hardware stack levels required when called:    3
 15739 ;; This function calls:
 15740 ;;		Absolute function
 15741 ;;		_do_I2C_DO_NACK_RESTART
 15742 ;;		_do_I2C_DO_NACK_STOP
 15743 ;;		_i2c_driver_getRXData
 15744 ;;		_i2c_driver_sendACK
 15745 ;;		_i2c_restartWrite
 15746 ;;		_rd1RegCompleteHandler
 15747 ;;		_rd2RegCompleteHandler
 15748 ;;		_rdBlkRegCompleteHandler
 15749 ;;		_returnReset
 15750 ;;		_returnStop
 15751 ;;		_wr1RegCompleteHandler
 15752 ;;		_wr2RegCompleteHandler
 15753 ;; This function is called by:
 15754 ;;		_i2c_ISR
 15755 ;; This function uses a non-reentrant model
 15756 ;;
 15757                           
 15758                           
 15759                           ;psect for function _do_I2C_RX
 15760  1286                     _do_I2C_RX:	
 15761                           
 15762                           ;i2c_master.c: 359: *i2c_status.data_ptr++ = i2c_driver_getRXData();
 15763                           
 15764                           ;incstack = 0
 15765                           ; Regs used in _do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15766  1286  319D  2519  3192   	fcall	_i2c_driver_getRXData
 15767  1289  00F0               	movwf	??_do_I2C_RX
 15768  128A  0024               	movlb	4	; select bank4
 15769  128B  0822               	movf	(low ((_i2c_status| (0+512)+2)))^0,w
 15770  128C  0086               	movwf	6
 15771  128D  0187               	clrf	7
 15772  128E  0870               	movf	??_do_I2C_RX,w
 15773  128F  0081               	movwf	1
 15774  1290  3001               	movlw	1
 15775  1291  00F0               	movwf	??_do_I2C_RX
 15776  1292  0870               	movf	??_do_I2C_RX,w
 15777  1293  07A2               	addwf	(low ((_i2c_status| (0+512)+2)))^0,f
 15778                           
 15779                           ;i2c_master.c: 360: if(--i2c_status.data_length)
 15780  1294  3001               	movlw	1
 15781  1295  02A3               	subwf	(_i2c_status^(0+512)+3),f
 15782  1296  3000               	movlw	0
 15783  1297  3BA4               	subwfb	((_i2c_status+1)^(0+512)+3),f
 15784  1298  0823               	movf	(_i2c_status^(0+512)+3),w
 15785  1299  0424               	iorwf	((_i2c_status+1)^(0+512)+3),w
 15786  129A  1903               	btfsc	3,2
 15787  129B  2AA0               	goto	i1l813
 15788                           
 15789                           ;i2c_master.c: 361: {
 15790                           ;i2c_master.c: 362: i2c_driver_sendACK();
 15791  129C  319D  2528         	fcall	_i2c_driver_sendACK
 15792                           
 15793                           ;i2c_master.c: 363: return I2C_RCEN;
 15794  129E  3005               	movlw	5
 15795                           
 15796                           ;i2c_master.c: 364: }
 15797  129F  0008               	return
 15798  12A0                     i1l813:	
 15799                           
 15800                           ;i2c_master.c: 365: else
 15801                           ;i2c_master.c: 366: {
 15802                           ;i2c_master.c: 367: i2c_status.bufferFree = 1;
 15803  12A0  1520               	bsf	_i2c_status^(0+512),2
 15804                           
 15805                           ;i2c_master.c: 368: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 15806  12A1  2AA8               	goto	i1l6404
 15807  12A2                     i1l6394:	
 15808                           ;i2c_master.c: 369: {
 15809                           ;i2c_master.c: 370: case i2c_restart_write:
 15810                           
 15811                           
 15812                           ;i2c_master.c: 371: case i2c_restart_read:
 15813                           ;i2c_master.c: 372: return do_I2C_DO_NACK_RESTART();
 15814  12A2  319D  2548         	fcall	_do_I2C_DO_NACK_RESTART
 15815  12A4  0008               	return
 15816  12A5                     i1l6398:	
 15817                           ;i2c_master.c: 374: case i2c_continue:
 15818                           
 15819                           ;i2c_master.c: 373: default:
 15820                           
 15821                           
 15822                           ;i2c_master.c: 375: case i2c_stop:
 15823                           ;i2c_master.c: 376: return do_I2C_DO_NACK_STOP();
 15824  12A5  319D  2544         	fcall	_do_I2C_DO_NACK_STOP
 15825                           
 15826                           ;i2c_master.c: 377: }
 15827  12A7  0008               	return
 15828  12A8                     i1l6404:	
 15829  12A8  0024               	movlb	4	; select bank4
 15830  12A9  0837               	movf	(low ((_i2c_status| (0+512)+23)))^0,w
 15831  12AA  00F0               	movwf	??_do_I2C_RX
 15832  12AB  0870               	movf	??_do_I2C_RX,w
 15833  12AC  00F9               	movwf	rdBlkRegCompleteHandler@p
 15834  12AD  300B               	movlw	11
 15835  12AE  3E20               	addlw	(low (_i2c_status| (0+512)))& (0+255)
 15836  12AF  0086               	movwf	6
 15837  12B0  3002               	movlw	2	; select bank4/5
 15838  12B1  0087               	movwf	7
 15839  12B2  3F41               	moviw [1]fsr1
 15840  12B3  008A               	movwf	10
 15841  12B4  3F40               	moviw [0]fsr1
 15842  12B5  000A               	callw
 15843  12B6  3192               	pagesel	$
 15844                           
 15845                           ; Switch size 1, requested type "space"
 15846                           ; Number of cases is 4, Range of values is 1 to 4
 15847                           ; switch strategies available:
 15848                           ; Name         Instructions Cycles
 15849                           ; simple_byte           13     7 (average)
 15850                           ; direct_byte           17     9 (fixed)
 15851                           ; jumptable            263     9 (fixed)
 15852                           ;	Chosen strategy is simple_byte
 15853  12B7  3A01               	xorlw	1	; case 1
 15854  12B8  1903               	skipnz
 15855  12B9  2AA5               	goto	i1l6398
 15856  12BA  3A03               	xorlw	3	; case 2
 15857  12BB  1903               	skipnz
 15858  12BC  2AA2               	goto	i1l6394
 15859  12BD  3A01               	xorlw	1	; case 3
 15860  12BE  1903               	skipnz
 15861  12BF  2AA2               	goto	i1l6394
 15862  12C0  3A07               	xorlw	7	; case 4
 15863  12C1  1903               	skipnz
 15864  12C2  2AA5               	goto	i1l6398
 15865  12C3  2AA5               	goto	i1l6398
 15866  12C4  0008               	return
 15867  12C5                     __end_of_do_I2C_RX:	
 15868                           
 15869                           	psect	text75
 15870  13D3                     __ptext75:	
 15871 ;; *************** function _do_I2C_TX *****************
 15872 ;; Defined at:
 15873 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 15874 ;; Parameters:    Size  Location     Type
 15875 ;;		None
 15876 ;; Auto vars:     Size  Location     Type
 15877 ;;		None
 15878 ;; Return value:  Size  Location     Type
 15879 ;;                  1    wreg      enum E2347
 15880 ;; Registers used:
 15881 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15882 ;; Tracked objects:
 15883 ;;		On entry : 0/0
 15884 ;;		On exit  : 0/0
 15885 ;;		Unchanged: 0/0
 15886 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15888 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15889 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15890 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15891 ;;Total ram usage:        3 bytes
 15892 ;; Hardware stack levels used:    1
 15893 ;; Hardware stack levels required when called:    3
 15894 ;; This function calls:
 15895 ;;		Absolute function
 15896 ;;		_do_I2C_SEND_RESTART_READ
 15897 ;;		_do_I2C_SEND_RESTART_WRITE
 15898 ;;		_do_I2C_SEND_STOP
 15899 ;;		_i2c_driver_TXData
 15900 ;;		_i2c_driver_isNACK
 15901 ;;		_i2c_restartWrite
 15902 ;;		_rd1RegCompleteHandler
 15903 ;;		_rd2RegCompleteHandler
 15904 ;;		_rdBlkRegCompleteHandler
 15905 ;;		_returnReset
 15906 ;;		_returnStop
 15907 ;;		_wr1RegCompleteHandler
 15908 ;;		_wr2RegCompleteHandler
 15909 ;; This function is called by:
 15910 ;;		_i2c_ISR
 15911 ;; This function uses a non-reentrant model
 15912 ;;
 15913                           
 15914                           
 15915                           ;psect for function _do_I2C_TX
 15916  13D3                     _do_I2C_TX:	
 15917                           
 15918                           ;i2c_master.c: 335: if(i2c_driver_isNACK())
 15919                           
 15920                           ;incstack = 0
 15921                           ; Regs used in _do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15922  13D3  319D  2582  3193   	fcall	_i2c_driver_isNACK
 15923  13D6  1803               	btfsc	3,0
 15924  13D7  2BE2               	goto	i1l6368
 15925  13D8  2BFF               	goto	i1l797
 15926  13D9                     i1l6354:	
 15927                           ;i2c_master.c: 338: {
 15928                           ;i2c_master.c: 339: case i2c_restart_read:
 15929                           
 15930                           ;i2c_master.c: 336: {
 15931                           ;i2c_master.c: 337: switch(i2c_status.callbackTable[i2c_dataNACK](i2c_status.callbackPay
      +                          load[i2c_dataNACK]))
 15932                           
 15933                           
 15934                           ;i2c_master.c: 340: return do_I2C_SEND_RESTART_READ();
 15935  13D9  319D  2530         	fcall	_do_I2C_SEND_RESTART_READ
 15936  13DB  0008               	return
 15937  13DC                     i1l6358:	
 15938                           ;i2c_master.c: 341: case i2c_restart_write:
 15939                           
 15940                           
 15941                           ;i2c_master.c: 342: return do_I2C_SEND_RESTART_WRITE();
 15942  13DC  319D  2534         	fcall	_do_I2C_SEND_RESTART_WRITE
 15943  13DE  0008               	return
 15944  13DF                     i1l6362:	
 15945                           ;i2c_master.c: 344: case i2c_continue:
 15946                           
 15947                           ;i2c_master.c: 343: default:
 15948                           
 15949                           
 15950                           ;i2c_master.c: 345: case i2c_stop:
 15951                           ;i2c_master.c: 346: return do_I2C_SEND_STOP();
 15952  13DF  319D  253C         	fcall	_do_I2C_SEND_STOP
 15953                           
 15954                           ;i2c_master.c: 347: }
 15955  13E1  0008               	return
 15956  13E2                     i1l6368:	
 15957  13E2  0024               	movlb	4	; select bank4
 15958  13E3  083A               	movf	(low ((_i2c_status| (0+512)+26)))^0,w
 15959  13E4  00F1               	movwf	??_do_I2C_TX
 15960  13E5  0871               	movf	??_do_I2C_TX,w
 15961  13E6  00F9               	movwf	rdBlkRegCompleteHandler@p
 15962  13E7  3011               	movlw	17
 15963  13E8  3E20               	addlw	(low (_i2c_status| (0+512)))& (0+255)
 15964  13E9  0086               	movwf	6
 15965  13EA  3002               	movlw	2	; select bank4/5
 15966  13EB  0087               	movwf	7
 15967  13EC  3F41               	moviw [1]fsr1
 15968  13ED  008A               	movwf	10
 15969  13EE  3F40               	moviw [0]fsr1
 15970  13EF  000A               	callw
 15971  13F0  3193               	pagesel	$
 15972                           
 15973                           ; Switch size 1, requested type "space"
 15974                           ; Number of cases is 4, Range of values is 1 to 4
 15975                           ; switch strategies available:
 15976                           ; Name         Instructions Cycles
 15977                           ; simple_byte           13     7 (average)
 15978                           ; direct_byte           17     9 (fixed)
 15979                           ; jumptable            263     9 (fixed)
 15980                           ;	Chosen strategy is simple_byte
 15981  13F1  3A01               	xorlw	1	; case 1
 15982  13F2  1903               	skipnz
 15983  13F3  2BDF               	goto	i1l6362
 15984  13F4  3A03               	xorlw	3	; case 2
 15985  13F5  1903               	skipnz
 15986  13F6  2BD9               	goto	i1l6354
 15987  13F7  3A01               	xorlw	1	; case 3
 15988  13F8  1903               	skipnz
 15989  13F9  2BDC               	goto	i1l6358
 15990  13FA  3A07               	xorlw	7	; case 4
 15991  13FB  1903               	skipnz
 15992  13FC  2BDF               	goto	i1l6362
 15993  13FD  2BDF               	goto	i1l6362
 15994                           
 15995                           ;i2c_master.c: 348: }
 15996  13FE  0008               	return
 15997  13FF                     i1l797:	
 15998                           
 15999                           ;i2c_master.c: 349: else
 16000                           ;i2c_master.c: 350: {
 16001                           ;i2c_master.c: 351: i2c_status.addressNACKCheck = 0;
 16002  13FF  0024               	movlb	4	; select bank4
 16003  1400  11A0               	bcf	_i2c_status^(0+512),3
 16004                           
 16005                           ;i2c_master.c: 352: i2c_driver_TXData(*i2c_status.data_ptr++);
 16006  1401  3002               	movlw	2
 16007  1402  3E20               	addlw	(low (_i2c_status| (0+512)))& (0+255)
 16008  1403  0086               	movwf	6
 16009  1404  3002               	movlw	2	; select bank4/5
 16010  1405  0087               	movwf	7
 16011  1406  3F40               	moviw [0]fsr1
 16012  1407  0084               	movwf	4
 16013  1408  0185               	clrf	5
 16014  1409  0A81               	incf	1,f
 16015  140A  0800               	movf	0,w
 16016  140B  319D  2550  3193   	fcall	_i2c_driver_TXData
 16017                           
 16018                           ;i2c_master.c: 353: return (--i2c_status.data_length)?I2C_TX:I2C_TX_EMPTY;
 16019  140E  3001               	movlw	1
 16020  140F  0024               	movlb	4	; select bank4
 16021  1410  02A3               	subwf	(_i2c_status^(0+512)+3),f
 16022  1411  3000               	movlw	0
 16023  1412  3BA4               	subwfb	((_i2c_status+1)^(0+512)+3),f
 16024  1413  0823               	movf	(_i2c_status^(0+512)+3),w
 16025  1414  0424               	iorwf	((_i2c_status+1)^(0+512)+3),w
 16026  1415  1D03               	btfss	3,2
 16027  1416  2C19               	goto	i1l6376
 16028  1417  3006               	movlw	6
 16029  1418  2C1A               	goto	L21
 16030  1419                     i1l6376:	
 16031  1419  3003               	movlw	3
 16032  141A                     L21:	
 16033  141A  00F2               	movwf	_do_I2C_TX$2627
 16034  141B  3000               	movlw	0
 16035  141C  00F3               	movwf	_do_I2C_TX$2627+1
 16036  141D  0872               	movf	_do_I2C_TX$2627,w
 16037  141E  0008               	return
 16038  141F                     __end_of_do_I2C_TX:	
 16039                           
 16040                           	psect	text76
 16041  1012                     __ptext76:	
 16042 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
 16043 ;; Defined at:
 16044 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 16045 ;; Parameters:    Size  Location     Type
 16046 ;;		None
 16047 ;; Auto vars:     Size  Location     Type
 16048 ;;		None
 16049 ;; Return value:  Size  Location     Type
 16050 ;;                  1    wreg      enum E2347
 16051 ;; Registers used:
 16052 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16053 ;; Tracked objects:
 16054 ;;		On entry : 0/0
 16055 ;;		On exit  : 0/0
 16056 ;;		Unchanged: 0/0
 16057 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16060 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16061 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16062 ;;Total ram usage:        1 bytes
 16063 ;; Hardware stack levels used:    1
 16064 ;; Hardware stack levels required when called:    3
 16065 ;; This function calls:
 16066 ;;		Absolute function
 16067 ;;		_do_I2C_SEND_RESTART
 16068 ;;		_do_I2C_SEND_STOP
 16069 ;;		_i2c_restartWrite
 16070 ;;		_rd1RegCompleteHandler
 16071 ;;		_rd2RegCompleteHandler
 16072 ;;		_rdBlkRegCompleteHandler
 16073 ;;		_returnReset
 16074 ;;		_returnStop
 16075 ;;		_wr1RegCompleteHandler
 16076 ;;		_wr2RegCompleteHandler
 16077 ;; This function is called by:
 16078 ;;		_i2c_ISR
 16079 ;; This function uses a non-reentrant model
 16080 ;;
 16081                           
 16082                           
 16083                           ;psect for function _do_I2C_DO_ADDRESS_NACK
 16084  1012                     _do_I2C_DO_ADDRESS_NACK:	
 16085                           
 16086                           ;i2c_master.c: 321: i2c_status.addressNACKCheck = 0;
 16087                           
 16088                           ;incstack = 0
 16089                           ; Regs used in _do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16090  1012  0024               	movlb	4	; select bank4
 16091  1013  11A0               	bcf	_i2c_status^(0+512),3
 16092                           
 16093                           ;i2c_master.c: 322: i2c_status.error = I2C_FAIL;
 16094  1014  3002               	movlw	2
 16095  1015  00F0               	movwf	??_do_I2C_DO_ADDRESS_NACK
 16096  1016  0870               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 16097  1017  00AA               	movwf	(_i2c_status^(0+512)+10)
 16098                           
 16099                           ;i2c_master.c: 323: switch(i2c_status.callbackTable[i2c_addressNACK](i2c_status.callback
      +                          Payload[i2c_addressNACK]))
 16100  1018  281F               	goto	i1l6348
 16101  1019                     i1l6338:	
 16102                           ;i2c_master.c: 324: {
 16103                           ;i2c_master.c: 325: case i2c_restart_read:
 16104                           
 16105                           
 16106                           ;i2c_master.c: 326: case i2c_restart_write:
 16107                           ;i2c_master.c: 327: return do_I2C_SEND_RESTART();
 16108  1019  319D  2538         	fcall	_do_I2C_SEND_RESTART
 16109  101B  0008               	return
 16110  101C                     i1l6342:	
 16111                           ;i2c_master.c: 328: default:
 16112                           
 16113                           
 16114                           ;i2c_master.c: 329: return do_I2C_SEND_STOP();
 16115  101C  319D  253C         	fcall	_do_I2C_SEND_STOP
 16116                           
 16117                           ;i2c_master.c: 330: }
 16118  101E  0008               	return
 16119  101F                     i1l6348:	
 16120  101F  0024               	movlb	4	; select bank4
 16121  1020  0839               	movf	(low ((_i2c_status| (0+512)+25)))^0,w
 16122  1021  00F0               	movwf	??_do_I2C_DO_ADDRESS_NACK
 16123  1022  0870               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 16124  1023  00F9               	movwf	rdBlkRegCompleteHandler@p
 16125  1024  300F               	movlw	15
 16126  1025  3E20               	addlw	(low (_i2c_status| (0+512)))& (0+255)
 16127  1026  0086               	movwf	6
 16128  1027  3002               	movlw	2	; select bank4/5
 16129  1028  0087               	movwf	7
 16130  1029  3F41               	moviw [1]fsr1
 16131  102A  008A               	movwf	10
 16132  102B  3F40               	moviw [0]fsr1
 16133  102C  000A               	callw
 16134  102D  3190               	pagesel	$
 16135                           
 16136                           ; Switch size 1, requested type "space"
 16137                           ; Number of cases is 2, Range of values is 2 to 3
 16138                           ; switch strategies available:
 16139                           ; Name         Instructions Cycles
 16140                           ; simple_byte            7     4 (average)
 16141                           ; direct_byte           13     9 (fixed)
 16142                           ; jumptable            263     9 (fixed)
 16143                           ;	Chosen strategy is simple_byte
 16144  102E  3A02               	xorlw	2	; case 2
 16145  102F  1903               	skipnz
 16146  1030  2819               	goto	i1l6338
 16147  1031  3A01               	xorlw	1	; case 3
 16148  1032  1903               	skipnz
 16149  1033  2819               	goto	i1l6338
 16150  1034  281C               	goto	i1l6342
 16151  1035  0008               	return
 16152  1036                     __end_of_do_I2C_DO_ADDRESS_NACK:	
 16153                           
 16154                           	psect	text77
 16155  1D48                     __ptext77:	
 16156 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
 16157 ;; Defined at:
 16158 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 16159 ;; Parameters:    Size  Location     Type
 16160 ;;		None
 16161 ;; Auto vars:     Size  Location     Type
 16162 ;;		None
 16163 ;; Return value:  Size  Location     Type
 16164 ;;                  1    wreg      enum E2347
 16165 ;; Registers used:
 16166 ;;		wreg, status,2, status,0, pclath, cstack
 16167 ;; Tracked objects:
 16168 ;;		On entry : 0/0
 16169 ;;		On exit  : 0/0
 16170 ;;		Unchanged: 0/0
 16171 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16176 ;;Total ram usage:        0 bytes
 16177 ;; Hardware stack levels used:    1
 16178 ;; Hardware stack levels required when called:    1
 16179 ;; This function calls:
 16180 ;;		_i2c_driver_sendNACK
 16181 ;; This function is called by:
 16182 ;;		_do_I2C_RX
 16183 ;;		_i2c_ISR
 16184 ;; This function uses a non-reentrant model
 16185 ;;
 16186                           
 16187                           
 16188                           ;psect for function _do_I2C_DO_NACK_RESTART
 16189  1D48                     _do_I2C_DO_NACK_RESTART:	
 16190                           
 16191                           ;i2c_master.c: 313: i2c_driver_sendNACK();
 16192                           
 16193                           ;incstack = 0
 16194                           ; Regs used in _do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 16195  1D48  319D  252C         	fcall	_i2c_driver_sendNACK
 16196                           
 16197                           ;i2c_master.c: 314: return I2C_SEND_RESTART;
 16198  1D4A  3009               	movlw	9
 16199  1D4B  0008               	return
 16200  1D4C                     __end_of_do_I2C_DO_NACK_RESTART:	
 16201                           
 16202                           	psect	text78
 16203  1D44                     __ptext78:	
 16204 ;; *************** function _do_I2C_DO_NACK_STOP *****************
 16205 ;; Defined at:
 16206 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 16207 ;; Parameters:    Size  Location     Type
 16208 ;;		None
 16209 ;; Auto vars:     Size  Location     Type
 16210 ;;		None
 16211 ;; Return value:  Size  Location     Type
 16212 ;;                  1    wreg      enum E2347
 16213 ;; Registers used:
 16214 ;;		wreg, status,2, status,0, pclath, cstack
 16215 ;; Tracked objects:
 16216 ;;		On entry : 0/0
 16217 ;;		On exit  : 0/0
 16218 ;;		Unchanged: 0/0
 16219 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16224 ;;Total ram usage:        0 bytes
 16225 ;; Hardware stack levels used:    1
 16226 ;; Hardware stack levels required when called:    1
 16227 ;; This function calls:
 16228 ;;		_i2c_driver_sendNACK
 16229 ;; This function is called by:
 16230 ;;		_do_I2C_RX
 16231 ;;		_i2c_ISR
 16232 ;; This function uses a non-reentrant model
 16233 ;;
 16234                           
 16235                           
 16236                           ;psect for function _do_I2C_DO_NACK_STOP
 16237  1D44                     _do_I2C_DO_NACK_STOP:	
 16238                           
 16239                           ;i2c_master.c: 307: i2c_driver_sendNACK();
 16240                           
 16241                           ;incstack = 0
 16242                           ; Regs used in _do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 16243  1D44  319D  252C         	fcall	_i2c_driver_sendNACK
 16244                           
 16245                           ;i2c_master.c: 308: return I2C_SEND_STOP;
 16246  1D46  300A               	movlw	10
 16247  1D47  0008               	return
 16248  1D48                     __end_of_do_I2C_DO_NACK_STOP:	
 16249                           
 16250                           	psect	text79
 16251  1D40                     __ptext79:	
 16252 ;; *************** function _do_I2C_DO_ACK *****************
 16253 ;; Defined at:
 16254 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 16255 ;; Parameters:    Size  Location     Type
 16256 ;;		None
 16257 ;; Auto vars:     Size  Location     Type
 16258 ;;		None
 16259 ;; Return value:  Size  Location     Type
 16260 ;;                  1    wreg      enum E2347
 16261 ;; Registers used:
 16262 ;;		wreg, status,2, status,0, pclath, cstack
 16263 ;; Tracked objects:
 16264 ;;		On entry : 0/0
 16265 ;;		On exit  : 0/0
 16266 ;;		Unchanged: 0/0
 16267 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16272 ;;Total ram usage:        0 bytes
 16273 ;; Hardware stack levels used:    1
 16274 ;; Hardware stack levels required when called:    1
 16275 ;; This function calls:
 16276 ;;		_i2c_driver_sendACK
 16277 ;; This function is called by:
 16278 ;;		_i2c_ISR
 16279 ;; This function uses a non-reentrant model
 16280 ;;
 16281                           
 16282                           
 16283                           ;psect for function _do_I2C_DO_ACK
 16284  1D40                     _do_I2C_DO_ACK:	
 16285                           
 16286                           ;i2c_master.c: 301: i2c_driver_sendACK();
 16287                           
 16288                           ;incstack = 0
 16289                           ; Regs used in _do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 16290  1D40  319D  2528         	fcall	_i2c_driver_sendACK
 16291                           
 16292                           ;i2c_master.c: 302: return I2C_RCEN;
 16293  1D42  3005               	movlw	5
 16294  1D43  0008               	return
 16295  1D44                     __end_of_do_I2C_DO_ACK:	
 16296                           
 16297                           	psect	text80
 16298  1D5A                     __ptext80:	
 16299 ;; *************** function _do_I2C_RCEN *****************
 16300 ;; Defined at:
 16301 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 16302 ;; Parameters:    Size  Location     Type
 16303 ;;		None
 16304 ;; Auto vars:     Size  Location     Type
 16305 ;;		None
 16306 ;; Return value:  Size  Location     Type
 16307 ;;                  1    wreg      enum E2347
 16308 ;; Registers used:
 16309 ;;		wreg, status,2, status,0, pclath, cstack
 16310 ;; Tracked objects:
 16311 ;;		On entry : 0/0
 16312 ;;		On exit  : 0/0
 16313 ;;		Unchanged: 0/0
 16314 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16319 ;;Total ram usage:        0 bytes
 16320 ;; Hardware stack levels used:    1
 16321 ;; Hardware stack levels required when called:    1
 16322 ;; This function calls:
 16323 ;;		_i2c_driver_startRX
 16324 ;; This function is called by:
 16325 ;;		_i2c_ISR
 16326 ;; This function uses a non-reentrant model
 16327 ;;
 16328                           
 16329                           
 16330                           ;psect for function _do_I2C_RCEN
 16331  1D5A                     _do_I2C_RCEN:	
 16332                           
 16333                           ;i2c_master.c: 294: i2c_status.addressNACKCheck = 0;
 16334                           
 16335                           ;incstack = 0
 16336                           ; Regs used in _do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 16337  1D5A  0024               	movlb	4	; select bank4
 16338  1D5B  11A0               	bcf	_i2c_status^(0+512),3
 16339                           
 16340                           ;i2c_master.c: 295: i2c_driver_startRX();
 16341  1D5C  319D  2516         	fcall	_i2c_driver_startRX
 16342                           
 16343                           ;i2c_master.c: 296: return I2C_RX;
 16344  1D5E  3004               	movlw	4
 16345  1D5F  0008               	return
 16346  1D60                     __end_of_do_I2C_RCEN:	
 16347                           
 16348                           	psect	text81
 16349  1D67                     __ptext81:	
 16350 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
 16351 ;; Defined at:
 16352 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 16353 ;; Parameters:    Size  Location     Type
 16354 ;;		None
 16355 ;; Auto vars:     Size  Location     Type
 16356 ;;		None
 16357 ;; Return value:  Size  Location     Type
 16358 ;;                  1    wreg      enum E2347
 16359 ;; Registers used:
 16360 ;;		wreg, status,2, status,0, pclath, cstack
 16361 ;; Tracked objects:
 16362 ;;		On entry : 0/0
 16363 ;;		On exit  : 0/0
 16364 ;;		Unchanged: 0/0
 16365 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16370 ;;Total ram usage:        0 bytes
 16371 ;; Hardware stack levels used:    1
 16372 ;; Hardware stack levels required when called:    1
 16373 ;; This function calls:
 16374 ;;		_i2c_driver_TXData
 16375 ;; This function is called by:
 16376 ;;		_i2c_ISR
 16377 ;; This function uses a non-reentrant model
 16378 ;;
 16379                           
 16380                           
 16381                           ;psect for function _do_I2C_SEND_ADR_WRITE
 16382  1D67                     _do_I2C_SEND_ADR_WRITE:	
 16383                           
 16384                           ;i2c_master.c: 287: i2c_status.addressNACKCheck = 1;
 16385                           
 16386                           ;incstack = 0
 16387                           ; Regs used in _do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 16388  1D67  0024               	movlb	4	; select bank4
 16389  1D68  15A0               	bsf	_i2c_status^(0+512),3
 16390                           
 16391                           ;i2c_master.c: 288: i2c_driver_TXData(i2c_status.address << 1);
 16392  1D69  3521               	lslf	(_i2c_status^(0+512)+1),w
 16393  1D6A  319D  2550         	fcall	_i2c_driver_TXData
 16394                           
 16395                           ;i2c_master.c: 289: return I2C_TX;
 16396  1D6C  3003               	movlw	3
 16397  1D6D  0008               	return
 16398  1D6E                     __end_of_do_I2C_SEND_ADR_WRITE:	
 16399                           
 16400                           	psect	text82
 16401  1D6E                     __ptext82:	
 16402 ;; *************** function _do_I2C_SEND_ADR_READ *****************
 16403 ;; Defined at:
 16404 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 16405 ;; Parameters:    Size  Location     Type
 16406 ;;		None
 16407 ;; Auto vars:     Size  Location     Type
 16408 ;;		None
 16409 ;; Return value:  Size  Location     Type
 16410 ;;                  1    wreg      enum E2347
 16411 ;; Registers used:
 16412 ;;		wreg, status,2, status,0, pclath, cstack
 16413 ;; Tracked objects:
 16414 ;;		On entry : 0/0
 16415 ;;		On exit  : 0/0
 16416 ;;		Unchanged: 0/0
 16417 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16422 ;;Total ram usage:        0 bytes
 16423 ;; Hardware stack levels used:    1
 16424 ;; Hardware stack levels required when called:    1
 16425 ;; This function calls:
 16426 ;;		_i2c_driver_TXData
 16427 ;; This function is called by:
 16428 ;;		_i2c_ISR
 16429 ;; This function uses a non-reentrant model
 16430 ;;
 16431                           
 16432                           
 16433                           ;psect for function _do_I2C_SEND_ADR_READ
 16434  1D6E                     _do_I2C_SEND_ADR_READ:	
 16435                           
 16436                           ;i2c_master.c: 280: i2c_status.addressNACKCheck = 1;
 16437                           
 16438                           ;incstack = 0
 16439                           ; Regs used in _do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 16440  1D6E  0024               	movlb	4	; select bank4
 16441  1D6F  15A0               	bsf	_i2c_status^(0+512),3
 16442                           
 16443                           ;i2c_master.c: 281: i2c_driver_TXData(i2c_status.address << 1 | 1);
 16444  1D70  1403               	setc
 16445  1D71  0D21               	rlf	(_i2c_status^(0+512)+1),w
 16446  1D72  319D  2550         	fcall	_i2c_driver_TXData
 16447                           
 16448                           ;i2c_master.c: 282: return I2C_RCEN;
 16449  1D74  3005               	movlw	5
 16450  1D75  0008               	return
 16451  1D76                     __end_of_do_I2C_SEND_ADR_READ:	
 16452                           
 16453                           	psect	text83
 16454  1D3C                     __ptext83:	
 16455 ;; *************** function _do_I2C_SEND_STOP *****************
 16456 ;; Defined at:
 16457 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 16458 ;; Parameters:    Size  Location     Type
 16459 ;;		None
 16460 ;; Auto vars:     Size  Location     Type
 16461 ;;		None
 16462 ;; Return value:  Size  Location     Type
 16463 ;;                  1    wreg      enum E2347
 16464 ;; Registers used:
 16465 ;;		wreg, status,2, status,0, pclath, cstack
 16466 ;; Tracked objects:
 16467 ;;		On entry : 0/0
 16468 ;;		On exit  : 0/0
 16469 ;;		Unchanged: 0/0
 16470 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16475 ;;Total ram usage:        0 bytes
 16476 ;; Hardware stack levels used:    1
 16477 ;; Hardware stack levels required when called:    1
 16478 ;; This function calls:
 16479 ;;		_i2c_driver_stop
 16480 ;; This function is called by:
 16481 ;;		_do_I2C_DO_ADDRESS_NACK
 16482 ;;		_do_I2C_TX
 16483 ;;		_do_I2C_TX_EMPTY
 16484 ;;		_i2c_ISR
 16485 ;; This function uses a non-reentrant model
 16486 ;;
 16487                           
 16488                           
 16489                           ;psect for function _do_I2C_SEND_STOP
 16490  1D3C                     _do_I2C_SEND_STOP:	
 16491                           
 16492                           ;i2c_master.c: 274: i2c_driver_stop();
 16493                           
 16494                           ;incstack = 0
 16495                           ; Regs used in _do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 16496  1D3C  319D  2513         	fcall	_i2c_driver_stop
 16497                           
 16498                           ;i2c_master.c: 275: return I2C_IDLE;
 16499  1D3E  3000               	movlw	0
 16500  1D3F  0008               	return
 16501  1D40                     __end_of_do_I2C_SEND_STOP:	
 16502                           
 16503                           	psect	text84
 16504  1D38                     __ptext84:	
 16505 ;; *************** function _do_I2C_SEND_RESTART *****************
 16506 ;; Defined at:
 16507 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 16508 ;; Parameters:    Size  Location     Type
 16509 ;;		None
 16510 ;; Auto vars:     Size  Location     Type
 16511 ;;		None
 16512 ;; Return value:  Size  Location     Type
 16513 ;;                  1    wreg      enum E2347
 16514 ;; Registers used:
 16515 ;;		wreg, status,2, status,0, pclath, cstack
 16516 ;; Tracked objects:
 16517 ;;		On entry : 0/0
 16518 ;;		On exit  : 0/0
 16519 ;;		Unchanged: 0/0
 16520 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16525 ;;Total ram usage:        0 bytes
 16526 ;; Hardware stack levels used:    1
 16527 ;; Hardware stack levels required when called:    1
 16528 ;; This function calls:
 16529 ;;		_i2c_driver_restart
 16530 ;; This function is called by:
 16531 ;;		_do_I2C_DO_ADDRESS_NACK
 16532 ;;		_do_I2C_TX_EMPTY
 16533 ;;		_i2c_ISR
 16534 ;; This function uses a non-reentrant model
 16535 ;;
 16536                           
 16537                           
 16538                           ;psect for function _do_I2C_SEND_RESTART
 16539  1D38                     _do_I2C_SEND_RESTART:	
 16540                           
 16541                           ;i2c_master.c: 268: i2c_driver_restart();
 16542                           
 16543                           ;incstack = 0
 16544                           ; Regs used in _do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 16545  1D38  319D  2510         	fcall	_i2c_driver_restart
 16546                           
 16547                           ;i2c_master.c: 269: return I2C_SEND_ADR_READ;
 16548  1D3A  3001               	movlw	1
 16549  1D3B  0008               	return
 16550  1D3C                     __end_of_do_I2C_SEND_RESTART:	
 16551                           
 16552                           	psect	text85
 16553  1D34                     __ptext85:	
 16554 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
 16555 ;; Defined at:
 16556 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 16557 ;; Parameters:    Size  Location     Type
 16558 ;;		None
 16559 ;; Auto vars:     Size  Location     Type
 16560 ;;		None
 16561 ;; Return value:  Size  Location     Type
 16562 ;;                  1    wreg      enum E2347
 16563 ;; Registers used:
 16564 ;;		wreg, status,2, status,0, pclath, cstack
 16565 ;; Tracked objects:
 16566 ;;		On entry : 0/0
 16567 ;;		On exit  : 0/0
 16568 ;;		Unchanged: 0/0
 16569 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16574 ;;Total ram usage:        0 bytes
 16575 ;; Hardware stack levels used:    1
 16576 ;; Hardware stack levels required when called:    1
 16577 ;; This function calls:
 16578 ;;		_i2c_driver_restart
 16579 ;; This function is called by:
 16580 ;;		_do_I2C_TX
 16581 ;;		_i2c_ISR
 16582 ;; This function uses a non-reentrant model
 16583 ;;
 16584                           
 16585                           
 16586                           ;psect for function _do_I2C_SEND_RESTART_WRITE
 16587  1D34                     _do_I2C_SEND_RESTART_WRITE:	
 16588                           
 16589                           ;i2c_master.c: 262: i2c_driver_restart();
 16590                           
 16591                           ;incstack = 0
 16592                           ; Regs used in _do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 16593  1D34  319D  2510         	fcall	_i2c_driver_restart
 16594                           
 16595                           ;i2c_master.c: 263: return I2C_SEND_ADR_WRITE;
 16596  1D36  3002               	movlw	2
 16597  1D37  0008               	return
 16598  1D38                     __end_of_do_I2C_SEND_RESTART_WRITE:	
 16599                           
 16600                           	psect	text86
 16601  1D30                     __ptext86:	
 16602 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
 16603 ;; Defined at:
 16604 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 16605 ;; Parameters:    Size  Location     Type
 16606 ;;		None
 16607 ;; Auto vars:     Size  Location     Type
 16608 ;;		None
 16609 ;; Return value:  Size  Location     Type
 16610 ;;                  1    wreg      enum E2347
 16611 ;; Registers used:
 16612 ;;		wreg, status,2, status,0, pclath, cstack
 16613 ;; Tracked objects:
 16614 ;;		On entry : 0/0
 16615 ;;		On exit  : 0/0
 16616 ;;		Unchanged: 0/0
 16617 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16622 ;;Total ram usage:        0 bytes
 16623 ;; Hardware stack levels used:    1
 16624 ;; Hardware stack levels required when called:    1
 16625 ;; This function calls:
 16626 ;;		_i2c_driver_restart
 16627 ;; This function is called by:
 16628 ;;		_do_I2C_TX
 16629 ;;		_i2c_ISR
 16630 ;; This function uses a non-reentrant model
 16631 ;;
 16632                           
 16633                           
 16634                           ;psect for function _do_I2C_SEND_RESTART_READ
 16635  1D30                     _do_I2C_SEND_RESTART_READ:	
 16636                           
 16637                           ;i2c_master.c: 256: i2c_driver_restart();
 16638                           
 16639                           ;incstack = 0
 16640                           ; Regs used in _do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 16641  1D30  319D  2510         	fcall	_i2c_driver_restart
 16642                           
 16643                           ;i2c_master.c: 257: return I2C_SEND_ADR_READ;
 16644  1D32  3001               	movlw	1
 16645  1D33  0008               	return
 16646  1D34                     __end_of_do_I2C_SEND_RESTART_READ:	
 16647                           
 16648                           	psect	text87
 16649  1D55                     __ptext87:	
 16650 ;; *************** function _do_I2C_IDLE *****************
 16651 ;; Defined at:
 16652 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 16653 ;; Parameters:    Size  Location     Type
 16654 ;;		None
 16655 ;; Auto vars:     Size  Location     Type
 16656 ;;		None
 16657 ;; Return value:  Size  Location     Type
 16658 ;;                  1    wreg      enum E2347
 16659 ;; Registers used:
 16660 ;;		wreg, status,2
 16661 ;; Tracked objects:
 16662 ;;		On entry : 0/0
 16663 ;;		On exit  : 0/0
 16664 ;;		Unchanged: 0/0
 16665 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16670 ;;Total ram usage:        0 bytes
 16671 ;; Hardware stack levels used:    1
 16672 ;; This function calls:
 16673 ;;		Nothing
 16674 ;; This function is called by:
 16675 ;;		_i2c_ISR
 16676 ;; This function uses a non-reentrant model
 16677 ;;
 16678                           
 16679                           
 16680                           ;psect for function _do_I2C_IDLE
 16681  1D55                     _do_I2C_IDLE:	
 16682                           
 16683                           ;i2c_master.c: 249: i2c_status.busy = 0;
 16684                           
 16685                           ;incstack = 0
 16686                           ; Regs used in _do_I2C_IDLE: [wreg+status,2]
 16687  1D55  0024               	movlb	4	; select bank4
 16688  1D56  1020               	bcf	_i2c_status^(0+512),0
 16689                           
 16690                           ;i2c_master.c: 250: i2c_status.error = I2C_NOERR;
 16691  1D57  01AA               	clrf	(_i2c_status^(0+512)+10)
 16692                           
 16693                           ;i2c_master.c: 251: return I2C_RESET;
 16694  1D58  300E               	movlw	14
 16695  1D59  0008               	return
 16696  1D5A                     __end_of_do_I2C_IDLE:	
 16697                           
 16698                           	psect	text88
 16699  1D60                     __ptext88:	
 16700 ;; *************** function _do_I2C_RESET *****************
 16701 ;; Defined at:
 16702 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 16703 ;; Parameters:    Size  Location     Type
 16704 ;;		None
 16705 ;; Auto vars:     Size  Location     Type
 16706 ;;		None
 16707 ;; Return value:  Size  Location     Type
 16708 ;;                  1    wreg      enum E2347
 16709 ;; Registers used:
 16710 ;;		wreg, status,2, status,0, pclath, cstack
 16711 ;; Tracked objects:
 16712 ;;		On entry : 0/0
 16713 ;;		On exit  : 0/0
 16714 ;;		Unchanged: 0/0
 16715 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16720 ;;Total ram usage:        0 bytes
 16721 ;; Hardware stack levels used:    1
 16722 ;; Hardware stack levels required when called:    1
 16723 ;; This function calls:
 16724 ;;		_i2c_driver_resetBus
 16725 ;; This function is called by:
 16726 ;;		_i2c_ISR
 16727 ;; This function uses a non-reentrant model
 16728 ;;
 16729                           
 16730                           
 16731                           ;psect for function _do_I2C_RESET
 16732  1D60                     _do_I2C_RESET:	
 16733                           
 16734                           ;i2c_master.c: 241: i2c_driver_resetBus();
 16735                           
 16736                           ;incstack = 0
 16737                           ; Regs used in _do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 16738  1D60  319D  250B         	fcall	_i2c_driver_resetBus
 16739                           
 16740                           ;i2c_master.c: 242: i2c_status.busy = 0;
 16741  1D62  0024               	movlb	4	; select bank4
 16742  1D63  1020               	bcf	_i2c_status^(0+512),0
 16743                           
 16744                           ;i2c_master.c: 243: i2c_status.error = I2C_NOERR;
 16745  1D64  01AA               	clrf	(_i2c_status^(0+512)+10)
 16746                           
 16747                           ;i2c_master.c: 244: return I2C_RESET;
 16748  1D65  300E               	movlw	14
 16749  1D66  0008               	return
 16750  1D67                     __end_of_do_I2C_RESET:	
 16751                           
 16752                           	psect	text89
 16753  1083                     __ptext89:	
 16754 ;; *************** function _do_I2C_TX_EMPTY *****************
 16755 ;; Defined at:
 16756 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 16757 ;; Parameters:    Size  Location     Type
 16758 ;;		None
 16759 ;; Auto vars:     Size  Location     Type
 16760 ;;		None
 16761 ;; Return value:  Size  Location     Type
 16762 ;;                  1    wreg      enum E2347
 16763 ;; Registers used:
 16764 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16765 ;; Tracked objects:
 16766 ;;		On entry : 0/0
 16767 ;;		On exit  : 0/0
 16768 ;;		Unchanged: 0/0
 16769 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16772 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16773 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16774 ;;Total ram usage:        1 bytes
 16775 ;; Hardware stack levels used:    1
 16776 ;; Hardware stack levels required when called:    3
 16777 ;; This function calls:
 16778 ;;		Absolute function
 16779 ;;		_do_I2C_SEND_RESTART
 16780 ;;		_do_I2C_SEND_STOP
 16781 ;;		_i2c_restartWrite
 16782 ;;		_mssp_setIRQ
 16783 ;;		_rd1RegCompleteHandler
 16784 ;;		_rd2RegCompleteHandler
 16785 ;;		_rdBlkRegCompleteHandler
 16786 ;;		_returnReset
 16787 ;;		_returnStop
 16788 ;;		_wr1RegCompleteHandler
 16789 ;;		_wr2RegCompleteHandler
 16790 ;; This function is called by:
 16791 ;;		_i2c_ISR
 16792 ;; This function uses a non-reentrant model
 16793 ;;
 16794                           
 16795                           
 16796                           ;psect for function _do_I2C_TX_EMPTY
 16797  1083                     _do_I2C_TX_EMPTY:	
 16798                           
 16799                           ;i2c_master.c: 384: i2c_status.bufferFree = 1;
 16800                           
 16801                           ;incstack = 0
 16802                           ; Regs used in _do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16803  1083  0024               	movlb	4	; select bank4
 16804  1084  1520               	bsf	_i2c_status^(0+512),2
 16805                           
 16806                           ;i2c_master.c: 385: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 16807  1085  2890               	goto	i1l6424
 16808  1086                     i1l6408:	
 16809                           ;i2c_master.c: 386: {
 16810                           ;i2c_master.c: 387: case i2c_restart_read:
 16811                           
 16812                           
 16813                           ;i2c_master.c: 388: case i2c_restart_write:
 16814                           ;i2c_master.c: 389: return do_I2C_SEND_RESTART();
 16815  1086  319D  2538         	fcall	_do_I2C_SEND_RESTART
 16816  1088  0008               	return
 16817  1089                     i1l6412:	
 16818                           ;i2c_master.c: 390: case i2c_continue:
 16819                           
 16820                           
 16821                           ;i2c_master.c: 391: mssp_setIRQ();
 16822  1089  319D  251C         	fcall	_mssp_setIRQ
 16823                           
 16824                           ;i2c_master.c: 392: return I2C_TX;
 16825  108B  3003               	movlw	3
 16826  108C  0008               	return
 16827  108D                     i1l6418:	
 16828                           ;i2c_master.c: 394: case i2c_stop:
 16829                           
 16830                           ;i2c_master.c: 393: default:
 16831                           
 16832                           
 16833                           ;i2c_master.c: 395: return do_I2C_SEND_STOP();
 16834  108D  319D  253C         	fcall	_do_I2C_SEND_STOP
 16835                           
 16836                           ;i2c_master.c: 396: }
 16837  108F  0008               	return
 16838  1090                     i1l6424:	
 16839  1090  0024               	movlb	4	; select bank4
 16840  1091  0837               	movf	(low ((_i2c_status| (0+512)+23)))^0,w
 16841  1092  00F0               	movwf	??_do_I2C_TX_EMPTY
 16842  1093  0870               	movf	??_do_I2C_TX_EMPTY,w
 16843  1094  00F9               	movwf	rdBlkRegCompleteHandler@p
 16844  1095  300B               	movlw	11
 16845  1096  3E20               	addlw	(low (_i2c_status| (0+512)))& (0+255)
 16846  1097  0086               	movwf	6
 16847  1098  3002               	movlw	2	; select bank4/5
 16848  1099  0087               	movwf	7
 16849  109A  3F41               	moviw [1]fsr1
 16850  109B  008A               	movwf	10
 16851  109C  3F40               	moviw [0]fsr1
 16852  109D  000A               	callw
 16853  109E  3190               	pagesel	$
 16854                           
 16855                           ; Switch size 1, requested type "space"
 16856                           ; Number of cases is 4, Range of values is 1 to 4
 16857                           ; switch strategies available:
 16858                           ; Name         Instructions Cycles
 16859                           ; simple_byte           13     7 (average)
 16860                           ; direct_byte           17     9 (fixed)
 16861                           ; jumptable            263     9 (fixed)
 16862                           ;	Chosen strategy is simple_byte
 16863  109F  3A01               	xorlw	1	; case 1
 16864  10A0  1903               	skipnz
 16865  10A1  288D               	goto	i1l6418
 16866  10A2  3A03               	xorlw	3	; case 2
 16867  10A3  1903               	skipnz
 16868  10A4  2886               	goto	i1l6408
 16869  10A5  3A01               	xorlw	1	; case 3
 16870  10A6  1903               	skipnz
 16871  10A7  2886               	goto	i1l6408
 16872  10A8  3A07               	xorlw	7	; case 4
 16873  10A9  1903               	skipnz
 16874  10AA  2889               	goto	i1l6412
 16875  10AB  288D               	goto	i1l6418
 16876  10AC  0008               	return
 16877  10AD                     __end_of_do_I2C_TX_EMPTY:	
 16878                           
 16879                           	psect	text90
 16880  1D1C                     __ptext90:	
 16881 ;; *************** function _mssp_setIRQ *****************
 16882 ;; Defined at:
 16883 ;;		line 58 in file "mcc_generated_files/i2c_driver.c"
 16884 ;; Parameters:    Size  Location     Type
 16885 ;;		None
 16886 ;; Auto vars:     Size  Location     Type
 16887 ;;		None
 16888 ;; Return value:  Size  Location     Type
 16889 ;;                  1    wreg      void 
 16890 ;; Registers used:
 16891 ;;		None
 16892 ;; Tracked objects:
 16893 ;;		On entry : 0/0
 16894 ;;		On exit  : 0/0
 16895 ;;		Unchanged: 0/0
 16896 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16901 ;;Total ram usage:        0 bytes
 16902 ;; Hardware stack levels used:    1
 16903 ;; This function calls:
 16904 ;;		Nothing
 16905 ;; This function is called by:
 16906 ;;		_do_I2C_TX_EMPTY
 16907 ;; This function uses a non-reentrant model
 16908 ;;
 16909                           
 16910                           
 16911                           ;psect for function _mssp_setIRQ
 16912  1D1C                     _mssp_setIRQ:	
 16913                           
 16914                           ;i2c_driver.c: 60: PIR1bits.SSP1IF = 1;
 16915                           
 16916                           ;incstack = 0
 16917                           ; Regs used in _mssp_setIRQ: []
 16918  1D1C  0020               	movlb	0	; select bank0
 16919  1D1D  1591               	bsf	17,3	;volatile
 16920  1D1E  0008               	return
 16921  1D1F                     __end_of_mssp_setIRQ:	
 16922                           
 16923                           	psect	text91
 16924  1D82                     __ptext91:	
 16925 ;; *************** function _i2c_driver_isNACK *****************
 16926 ;; Defined at:
 16927 ;;		line 161 in file "mcc_generated_files/i2c_driver.c"
 16928 ;; Parameters:    Size  Location     Type
 16929 ;;		None
 16930 ;; Auto vars:     Size  Location     Type
 16931 ;;		None
 16932 ;; Return value:  Size  Location     Type
 16933 ;;		None               void
 16934 ;; Registers used:
 16935 ;;		wreg, status,2, status,0
 16936 ;; Tracked objects:
 16937 ;;		On entry : 0/0
 16938 ;;		On exit  : 0/0
 16939 ;;		Unchanged: 0/0
 16940 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16943 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16944 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16945 ;;Total ram usage:        1 bytes
 16946 ;; Hardware stack levels used:    1
 16947 ;; This function calls:
 16948 ;;		Nothing
 16949 ;; This function is called by:
 16950 ;;		_do_I2C_TX
 16951 ;;		_i2c_ISR
 16952 ;; This function uses a non-reentrant model
 16953 ;;
 16954                           
 16955                           
 16956                           ;psect for function _i2c_driver_isNACK
 16957  1D82                     _i2c_driver_isNACK:	
 16958                           
 16959                           ;i2c_driver.c: 163: return SSP1CON2bits.ACKSTAT = 1;
 16960                           
 16961                           ;incstack = 0
 16962                           ; Regs used in _i2c_driver_isNACK: [wreg+status,2+status,0]
 16963  1D82  0024               	movlb	4	; select bank4
 16964  1D83  0816               	movf	22,w	;volatile
 16965  1D84  39BF               	andlw	-65
 16966  1D85  3840               	iorlw	64
 16967  1D86  0096               	movwf	22	;volatile
 16968  1D87  0E16               	swapf	22,w	;volatile
 16969  1D88  0C89               	rrf	9,f
 16970  1D89  0C89               	rrf	9,f
 16971  1D8A  3901               	andlw	1
 16972  1D8B  00F0               	movwf	??_i2c_driver_isNACK
 16973  1D8C  0C70               	rrf	??_i2c_driver_isNACK,w
 16974  1D8D  0008               	return
 16975  1D8E                     __end_of_i2c_driver_isNACK:	
 16976                           
 16977                           	psect	text92
 16978  1D50                     __ptext92:	
 16979 ;; *************** function _i2c_driver_TXData *****************
 16980 ;; Defined at:
 16981 ;;		line 186 in file "mcc_generated_files/i2c_driver.c"
 16982 ;; Parameters:    Size  Location     Type
 16983 ;;  d               1    wreg     unsigned char 
 16984 ;; Auto vars:     Size  Location     Type
 16985 ;;  d               1    0[COMMON] unsigned char 
 16986 ;; Return value:  Size  Location     Type
 16987 ;;                  1    wreg      void 
 16988 ;; Registers used:
 16989 ;;		wreg
 16990 ;; Tracked objects:
 16991 ;;		On entry : 0/0
 16992 ;;		On exit  : 0/0
 16993 ;;		Unchanged: 0/0
 16994 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16996 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16998 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16999 ;;Total ram usage:        1 bytes
 17000 ;; Hardware stack levels used:    1
 17001 ;; This function calls:
 17002 ;;		Nothing
 17003 ;; This function is called by:
 17004 ;;		_do_I2C_SEND_ADR_READ
 17005 ;;		_do_I2C_SEND_ADR_WRITE
 17006 ;;		_do_I2C_TX
 17007 ;; This function uses a non-reentrant model
 17008 ;;
 17009                           
 17010                           
 17011                           ;psect for function _i2c_driver_TXData
 17012  1D50                     _i2c_driver_TXData:	
 17013                           
 17014                           ;incstack = 0
 17015                           ; Regs used in _i2c_driver_TXData: [wreg]
 17016                           ;i2c_driver_TXData@d stored from wreg
 17017  1D50  00F0               	movwf	i2c_driver_TXData@d
 17018                           
 17019                           ;i2c_driver.c: 188: SSP1BUF = d;
 17020  1D51  0870               	movf	i2c_driver_TXData@d,w
 17021  1D52  0024               	movlb	4	; select bank4
 17022  1D53  0091               	movwf	17	;volatile
 17023  1D54  0008               	return
 17024  1D55                     __end_of_i2c_driver_TXData:	
 17025                           
 17026                           	psect	text93
 17027  1D19                     __ptext93:	
 17028 ;; *************** function _i2c_driver_getRXData *****************
 17029 ;; Defined at:
 17030 ;;		line 171 in file "mcc_generated_files/i2c_driver.c"
 17031 ;; Parameters:    Size  Location     Type
 17032 ;;		None
 17033 ;; Auto vars:     Size  Location     Type
 17034 ;;		None
 17035 ;; Return value:  Size  Location     Type
 17036 ;;                  1    wreg      unsigned char 
 17037 ;; Registers used:
 17038 ;;		wreg
 17039 ;; Tracked objects:
 17040 ;;		On entry : 0/0
 17041 ;;		On exit  : 0/0
 17042 ;;		Unchanged: 0/0
 17043 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17048 ;;Total ram usage:        0 bytes
 17049 ;; Hardware stack levels used:    1
 17050 ;; This function calls:
 17051 ;;		Nothing
 17052 ;; This function is called by:
 17053 ;;		_do_I2C_RX
 17054 ;; This function uses a non-reentrant model
 17055 ;;
 17056                           
 17057                           
 17058                           ;psect for function _i2c_driver_getRXData
 17059  1D19                     _i2c_driver_getRXData:	
 17060                           
 17061                           ;i2c_driver.c: 173: return SSP1BUF;
 17062                           
 17063                           ;incstack = 0
 17064                           ; Regs used in _i2c_driver_getRXData: [wreg]
 17065  1D19  0024               	movlb	4	; select bank4
 17066  1D1A  0811               	movf	17,w	;volatile
 17067  1D1B  0008               	return
 17068  1D1C                     __end_of_i2c_driver_getRXData:	
 17069                           
 17070                           	psect	text94
 17071  1D2C                     __ptext94:	
 17072 ;; *************** function _i2c_driver_sendNACK *****************
 17073 ;; Defined at:
 17074 ;;		line 202 in file "mcc_generated_files/i2c_driver.c"
 17075 ;; Parameters:    Size  Location     Type
 17076 ;;		None
 17077 ;; Auto vars:     Size  Location     Type
 17078 ;;		None
 17079 ;; Return value:  Size  Location     Type
 17080 ;;                  1    wreg      void 
 17081 ;; Registers used:
 17082 ;;		None
 17083 ;; Tracked objects:
 17084 ;;		On entry : 0/0
 17085 ;;		On exit  : 0/0
 17086 ;;		Unchanged: 0/0
 17087 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17092 ;;Total ram usage:        0 bytes
 17093 ;; Hardware stack levels used:    1
 17094 ;; This function calls:
 17095 ;;		Nothing
 17096 ;; This function is called by:
 17097 ;;		_do_I2C_DO_NACK_STOP
 17098 ;;		_do_I2C_DO_NACK_RESTART
 17099 ;; This function uses a non-reentrant model
 17100 ;;
 17101                           
 17102                           
 17103                           ;psect for function _i2c_driver_sendNACK
 17104  1D2C                     _i2c_driver_sendNACK:	
 17105                           
 17106                           ;i2c_driver.c: 204: SSP1CON2bits.ACKDT = 1;
 17107                           
 17108                           ;incstack = 0
 17109                           ; Regs used in _i2c_driver_sendNACK: []
 17110  1D2C  0024               	movlb	4	; select bank4
 17111  1D2D  1696               	bsf	22,5	;volatile
 17112                           
 17113                           ;i2c_driver.c: 205: SSP1CON2bits.ACKEN = 1;
 17114  1D2E  1616               	bsf	22,4	;volatile
 17115  1D2F  0008               	return
 17116  1D30                     __end_of_i2c_driver_sendNACK:	
 17117                           
 17118                           	psect	text95
 17119  1D0B                     __ptext95:	
 17120 ;; *************** function _i2c_driver_resetBus *****************
 17121 ;; Defined at:
 17122 ;;		line 141 in file "mcc_generated_files/i2c_driver.c"
 17123 ;; Parameters:    Size  Location     Type
 17124 ;;		None
 17125 ;; Auto vars:     Size  Location     Type
 17126 ;;		None
 17127 ;; Return value:  Size  Location     Type
 17128 ;;                  1    wreg      void 
 17129 ;; Registers used:
 17130 ;;		None
 17131 ;; Tracked objects:
 17132 ;;		On entry : 0/0
 17133 ;;		On exit  : 0/0
 17134 ;;		Unchanged: 0/0
 17135 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17140 ;;Total ram usage:        0 bytes
 17141 ;; Hardware stack levels used:    1
 17142 ;; This function calls:
 17143 ;;		Nothing
 17144 ;; This function is called by:
 17145 ;;		_do_I2C_RESET
 17146 ;; This function uses a non-reentrant model
 17147 ;;
 17148                           
 17149                           
 17150                           ;psect for function _i2c_driver_resetBus
 17151  1D0B                     _i2c_driver_resetBus:	
 17152                           
 17153                           ;incstack = 0
 17154                           ; Regs used in _i2c_driver_resetBus: []
 17155  1D0B  0008               	return
 17156  1D0C                     __end_of_i2c_driver_resetBus:	
 17157                           
 17158                           	psect	text96
 17159  1D16                     __ptext96:	
 17160 ;; *************** function _i2c_driver_startRX *****************
 17161 ;; Defined at:
 17162 ;;		line 166 in file "mcc_generated_files/i2c_driver.c"
 17163 ;; Parameters:    Size  Location     Type
 17164 ;;		None
 17165 ;; Auto vars:     Size  Location     Type
 17166 ;;		None
 17167 ;; Return value:  Size  Location     Type
 17168 ;;                  1    wreg      void 
 17169 ;; Registers used:
 17170 ;;		None
 17171 ;; Tracked objects:
 17172 ;;		On entry : 0/0
 17173 ;;		On exit  : 0/0
 17174 ;;		Unchanged: 0/0
 17175 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17180 ;;Total ram usage:        0 bytes
 17181 ;; Hardware stack levels used:    1
 17182 ;; This function calls:
 17183 ;;		Nothing
 17184 ;; This function is called by:
 17185 ;;		_do_I2C_RCEN
 17186 ;; This function uses a non-reentrant model
 17187 ;;
 17188                           
 17189                           
 17190                           ;psect for function _i2c_driver_startRX
 17191  1D16                     _i2c_driver_startRX:	
 17192                           
 17193                           ;i2c_driver.c: 168: SSP1CON2bits.RCEN = 1;
 17194                           
 17195                           ;incstack = 0
 17196                           ; Regs used in _i2c_driver_startRX: []
 17197  1D16  0024               	movlb	4	; select bank4
 17198  1D17  1596               	bsf	22,3	;volatile
 17199  1D18  0008               	return
 17200  1D19                     __end_of_i2c_driver_startRX:	
 17201                           
 17202                           	psect	text97
 17203  1E2B                     __ptext97:	
 17204 ;; *************** function _rdBlkRegCompleteHandler *****************
 17205 ;; Defined at:
 17206 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 17207 ;; Parameters:    Size  Location     Type
 17208 ;;  p               1    9[COMMON] PTR void 
 17209 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17210 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17211 ;; Auto vars:     Size  Location     Type
 17212 ;;		None
 17213 ;; Return value:  Size  Location     Type
 17214 ;;                  1    wreg      enum E97
 17215 ;; Registers used:
 17216 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17217 ;; Tracked objects:
 17218 ;;		On entry : 0/0
 17219 ;;		On exit  : 0/0
 17220 ;;		Unchanged: 0/0
 17221 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17222 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17225 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17226 ;;Total ram usage:        1 bytes
 17227 ;; Hardware stack levels used:    1
 17228 ;; Hardware stack levels required when called:    2
 17229 ;; This function calls:
 17230 ;;		_i2c_setBuffer
 17231 ;;		_i2c_setDataCompleteCallback
 17232 ;; This function is called by:
 17233 ;;		_i2c_readDataBlock
 17234 ;;		_do_I2C_DO_ADDRESS_NACK
 17235 ;;		_do_I2C_TX
 17236 ;;		_do_I2C_RX
 17237 ;;		_do_I2C_TX_EMPTY
 17238 ;; This function uses a non-reentrant model
 17239 ;;
 17240                           
 17241                           
 17242                           ;psect for function _rdBlkRegCompleteHandler
 17243  1E2B                     _rdBlkRegCompleteHandler:	
 17244                           
 17245                           ;i2c_simple_master.c: 136: i2c_setBuffer(((buf_t *)p)->data,((buf_t*)p)->len);
 17246                           
 17247                           ;incstack = 0
 17248                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 17249  1E2B  0879               	movf	rdBlkRegCompleteHandler@p,w
 17250  1E2C  0086               	movwf	6
 17251  1E2D  0187               	clrf	7
 17252  1E2E  3F40               	moviw [0]fsr1
 17253  1E2F  00F0               	movwf	i2c_setBuffer@bufferSize
 17254  1E30  3F41               	moviw [1]fsr1
 17255  1E31  00F1               	movwf	i2c_setBuffer@bufferSize+1
 17256  1E32  0879               	movf	rdBlkRegCompleteHandler@p,w
 17257  1E33  3E02               	addlw	2
 17258  1E34  0086               	movwf	6
 17259  1E35  0187               	clrf	7
 17260  1E36  0801               	movf	1,w
 17261  1E37  3188  2000  319E   	fcall	_i2c_setBuffer
 17262                           
 17263                           ;i2c_simple_master.c: 137: i2c_setDataCompleteCallback((0),(0));
 17264  1E3A  3000               	movlw	0
 17265  1E3B  00F5               	movwf	i2c_setDataCompleteCallback@cb
 17266  1E3C  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 17267  1E3D  01F7               	clrf	i2c_setDataCompleteCallback@p
 17268  1E3E  319D  2576         	fcall	_i2c_setDataCompleteCallback
 17269                           
 17270                           ;i2c_simple_master.c: 138: return i2c_restart_read;
 17271  1E40  3002               	movlw	2
 17272  1E41  0008               	return
 17273  1E42                     __end_of_rdBlkRegCompleteHandler:	
 17274                           
 17275                           	psect	text98
 17276  1DF1                     __ptext98:	
 17277 ;; *************** function _rd2RegCompleteHandler *****************
 17278 ;; Defined at:
 17279 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 17280 ;; Parameters:    Size  Location     Type
 17281 ;;  p               1    9[COMMON] PTR void 
 17282 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17283 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17284 ;; Auto vars:     Size  Location     Type
 17285 ;;		None
 17286 ;; Return value:  Size  Location     Type
 17287 ;;                  1    wreg      enum E97
 17288 ;; Registers used:
 17289 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17290 ;; Tracked objects:
 17291 ;;		On entry : 0/0
 17292 ;;		On exit  : 0/0
 17293 ;;		Unchanged: 0/0
 17294 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17295 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17298 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17299 ;;Total ram usage:        1 bytes
 17300 ;; Hardware stack levels used:    1
 17301 ;; Hardware stack levels required when called:    2
 17302 ;; This function calls:
 17303 ;;		_i2c_setBuffer
 17304 ;;		_i2c_setDataCompleteCallback
 17305 ;; This function is called by:
 17306 ;;		_i2c_read2ByteRegister
 17307 ;;		_do_I2C_DO_ADDRESS_NACK
 17308 ;;		_do_I2C_TX
 17309 ;;		_do_I2C_RX
 17310 ;;		_do_I2C_TX_EMPTY
 17311 ;; This function uses a non-reentrant model
 17312 ;;
 17313                           
 17314                           
 17315                           ;psect for function _rd2RegCompleteHandler
 17316  1DF1                     _rd2RegCompleteHandler:	
 17317                           
 17318                           ;i2c_simple_master.c: 89: i2c_setBuffer(p,2);
 17319                           
 17320                           ;incstack = 0
 17321                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 17322  1DF1  3002               	movlw	2
 17323  1DF2  00F0               	movwf	i2c_setBuffer@bufferSize
 17324  1DF3  3000               	movlw	0
 17325  1DF4  00F1               	movwf	i2c_setBuffer@bufferSize+1
 17326  1DF5  0879               	movf	rd2RegCompleteHandler@p,w
 17327  1DF6  3188  2000  319D   	fcall	_i2c_setBuffer
 17328                           
 17329                           ;i2c_simple_master.c: 90: i2c_setDataCompleteCallback((0),(0));
 17330  1DF9  3000               	movlw	0
 17331  1DFA  00F5               	movwf	i2c_setDataCompleteCallback@cb
 17332  1DFB  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 17333  1DFC  01F7               	clrf	i2c_setDataCompleteCallback@p
 17334  1DFD  319D  2576         	fcall	_i2c_setDataCompleteCallback
 17335                           
 17336                           ;i2c_simple_master.c: 91: return i2c_restart_read;
 17337  1DFF  3002               	movlw	2
 17338  1E00  0008               	return
 17339  1E01                     __end_of_rd2RegCompleteHandler:	
 17340                           
 17341                           	psect	text99
 17342  1DE1                     __ptext99:	
 17343 ;; *************** function _rd1RegCompleteHandler *****************
 17344 ;; Defined at:
 17345 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 17346 ;; Parameters:    Size  Location     Type
 17347 ;;  p               1    9[COMMON] PTR void 
 17348 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17349 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17350 ;; Auto vars:     Size  Location     Type
 17351 ;;		None
 17352 ;; Return value:  Size  Location     Type
 17353 ;;                  1    wreg      enum E97
 17354 ;; Registers used:
 17355 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17356 ;; Tracked objects:
 17357 ;;		On entry : 0/0
 17358 ;;		On exit  : 0/0
 17359 ;;		Unchanged: 0/0
 17360 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17361 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17364 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17365 ;;Total ram usage:        1 bytes
 17366 ;; Hardware stack levels used:    1
 17367 ;; Hardware stack levels required when called:    2
 17368 ;; This function calls:
 17369 ;;		_i2c_setBuffer
 17370 ;;		_i2c_setDataCompleteCallback
 17371 ;; This function is called by:
 17372 ;;		_i2c_read1ByteRegister
 17373 ;;		_do_I2C_DO_ADDRESS_NACK
 17374 ;;		_do_I2C_TX
 17375 ;;		_do_I2C_RX
 17376 ;;		_do_I2C_TX_EMPTY
 17377 ;; This function uses a non-reentrant model
 17378 ;;
 17379                           
 17380                           
 17381                           ;psect for function _rd1RegCompleteHandler
 17382  1DE1                     _rd1RegCompleteHandler:	
 17383                           
 17384                           ;i2c_simple_master.c: 60: i2c_setBuffer(p,1);
 17385                           
 17386                           ;incstack = 0
 17387                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 17388  1DE1  3001               	movlw	1
 17389  1DE2  00F0               	movwf	i2c_setBuffer@bufferSize
 17390  1DE3  3000               	movlw	0
 17391  1DE4  00F1               	movwf	i2c_setBuffer@bufferSize+1
 17392  1DE5  0879               	movf	rd1RegCompleteHandler@p,w
 17393  1DE6  3188  2000  319D   	fcall	_i2c_setBuffer
 17394                           
 17395                           ;i2c_simple_master.c: 61: i2c_setDataCompleteCallback((0),(0));
 17396  1DE9  3000               	movlw	0
 17397  1DEA  00F5               	movwf	i2c_setDataCompleteCallback@cb
 17398  1DEB  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 17399  1DEC  01F7               	clrf	i2c_setDataCompleteCallback@p
 17400  1DED  319D  2576         	fcall	_i2c_setDataCompleteCallback
 17401                           
 17402                           ;i2c_simple_master.c: 62: return i2c_restart_read;
 17403  1DEF  3002               	movlw	2
 17404  1DF0  0008               	return
 17405  1DF1                     __end_of_rd1RegCompleteHandler:	
 17406                           
 17407                           	psect	text100
 17408  1DD1                     __ptext100:	
 17409 ;; *************** function _wr1RegCompleteHandler *****************
 17410 ;; Defined at:
 17411 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 17412 ;; Parameters:    Size  Location     Type
 17413 ;;  p               1    9[COMMON] PTR void 
 17414 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17415 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17416 ;; Auto vars:     Size  Location     Type
 17417 ;;		None
 17418 ;; Return value:  Size  Location     Type
 17419 ;;                  1    wreg      enum E97
 17420 ;; Registers used:
 17421 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17422 ;; Tracked objects:
 17423 ;;		On entry : 0/0
 17424 ;;		On exit  : 0/0
 17425 ;;		Unchanged: 0/0
 17426 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17427 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17430 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17431 ;;Total ram usage:        1 bytes
 17432 ;; Hardware stack levels used:    1
 17433 ;; Hardware stack levels required when called:    2
 17434 ;; This function calls:
 17435 ;;		_i2c_setBuffer
 17436 ;;		_i2c_setDataCompleteCallback
 17437 ;; This function is called by:
 17438 ;;		_i2c_write1ByteRegister
 17439 ;;		_do_I2C_DO_ADDRESS_NACK
 17440 ;;		_do_I2C_TX
 17441 ;;		_do_I2C_RX
 17442 ;;		_do_I2C_TX_EMPTY
 17443 ;; This function uses a non-reentrant model
 17444 ;;
 17445                           
 17446                           
 17447                           ;psect for function _wr1RegCompleteHandler
 17448  1DD1                     _wr1RegCompleteHandler:	
 17449                           
 17450                           ;i2c_simple_master.c: 33: i2c_setBuffer(p,1);
 17451                           
 17452                           ;incstack = 0
 17453                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 17454  1DD1  3001               	movlw	1
 17455  1DD2  00F0               	movwf	i2c_setBuffer@bufferSize
 17456  1DD3  3000               	movlw	0
 17457  1DD4  00F1               	movwf	i2c_setBuffer@bufferSize+1
 17458  1DD5  0879               	movf	wr1RegCompleteHandler@p,w
 17459  1DD6  3188  2000  319D   	fcall	_i2c_setBuffer
 17460                           
 17461                           ;i2c_simple_master.c: 34: i2c_setDataCompleteCallback((0),(0));
 17462  1DD9  3000               	movlw	0
 17463  1DDA  00F5               	movwf	i2c_setDataCompleteCallback@cb
 17464  1DDB  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 17465  1DDC  01F7               	clrf	i2c_setDataCompleteCallback@p
 17466  1DDD  319D  2576         	fcall	_i2c_setDataCompleteCallback
 17467                           
 17468                           ;i2c_simple_master.c: 35: return i2c_continue;
 17469  1DDF  3004               	movlw	4
 17470  1DE0  0008               	return
 17471  1DE1                     __end_of_wr1RegCompleteHandler:	
 17472                           
 17473                           	psect	text101
 17474  0002                     __ptext101:	
 17475 ;; *************** function _i2c_restartWrite *****************
 17476 ;; Defined at:
 17477 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
 17478 ;; Parameters:    Size  Location     Type
 17479 ;;  p               1    9[COMMON] PTR void 
 17480 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17481 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17482 ;; Auto vars:     Size  Location     Type
 17483 ;;		None
 17484 ;; Return value:  Size  Location     Type
 17485 ;;                  1    wreg      enum E96
 17486 ;; Registers used:
 17487 ;;		wreg
 17488 ;; Tracked objects:
 17489 ;;		On entry : 0/0
 17490 ;;		On exit  : 0/0
 17491 ;;		Unchanged: 0/0
 17492 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17493 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17496 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17497 ;;Total ram usage:        1 bytes
 17498 ;; Hardware stack levels used:    1
 17499 ;; This function calls:
 17500 ;;		Nothing
 17501 ;; This function is called by:
 17502 ;;		_i2c_write1ByteRegister
 17503 ;;		_i2c_writeNBytes
 17504 ;;		_i2c_read1ByteRegister
 17505 ;;		_i2c_read2ByteRegister
 17506 ;;		_i2c_write2ByteRegister
 17507 ;;		_i2c_readDataBlock
 17508 ;;		_do_I2C_DO_ADDRESS_NACK
 17509 ;;		_do_I2C_TX
 17510 ;;		_do_I2C_RX
 17511 ;;		_do_I2C_TX_EMPTY
 17512 ;; This function uses a non-reentrant model
 17513 ;;
 17514                           
 17515                           
 17516                           ;psect for function _i2c_restartWrite
 17517  0002                     _i2c_restartWrite:	
 17518                           
 17519                           ;i2c_types.c: 37: return i2c_restart_write;
 17520                           
 17521                           ;incstack = 0
 17522                           ; Regs used in _i2c_restartWrite: [wreg]
 17523  0002  3003               	movlw	3
 17524  0003  0008               	return
 17525  0004                     __end_of_i2c_restartWrite:	
 17526                           
 17527                           	psect	text102
 17528  1D0E                     __ptext102:	
 17529 ;; *************** function _returnReset *****************
 17530 ;; Defined at:
 17531 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 17532 ;; Parameters:    Size  Location     Type
 17533 ;;  p               1    9[COMMON] PTR void 
 17534 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17535 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17536 ;; Auto vars:     Size  Location     Type
 17537 ;;		None
 17538 ;; Return value:  Size  Location     Type
 17539 ;;                  1    wreg      enum E2181
 17540 ;; Registers used:
 17541 ;;		wreg
 17542 ;; Tracked objects:
 17543 ;;		On entry : 0/0
 17544 ;;		On exit  : 0/0
 17545 ;;		Unchanged: 0/0
 17546 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17547 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17550 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17551 ;;Total ram usage:        1 bytes
 17552 ;; Hardware stack levels used:    1
 17553 ;; This function calls:
 17554 ;;		Nothing
 17555 ;; This function is called by:
 17556 ;;		_i2c_open
 17557 ;;		_do_I2C_DO_ADDRESS_NACK
 17558 ;;		_do_I2C_TX
 17559 ;;		_do_I2C_RX
 17560 ;;		_do_I2C_TX_EMPTY
 17561 ;; This function uses a non-reentrant model
 17562 ;;
 17563                           
 17564                           
 17565                           ;psect for function _returnReset
 17566  1D0E                     _returnReset:	
 17567                           
 17568                           ;i2c_master.c: 450: return i2c_reset_link;
 17569                           
 17570                           ;incstack = 0
 17571                           ; Regs used in _returnReset: [wreg]
 17572  1D0E  3005               	movlw	5
 17573  1D0F  0008               	return
 17574  1D10                     __end_of_returnReset:	
 17575                           
 17576                           	psect	text103
 17577  1D0C                     __ptext103:	
 17578 ;; *************** function _returnStop *****************
 17579 ;; Defined at:
 17580 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 17581 ;; Parameters:    Size  Location     Type
 17582 ;;  p               1    9[COMMON] PTR void 
 17583 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17584 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17585 ;; Auto vars:     Size  Location     Type
 17586 ;;		None
 17587 ;; Return value:  Size  Location     Type
 17588 ;;                  1    wreg      enum E2181
 17589 ;; Registers used:
 17590 ;;		wreg
 17591 ;; Tracked objects:
 17592 ;;		On entry : 0/0
 17593 ;;		On exit  : 0/0
 17594 ;;		Unchanged: 0/0
 17595 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17596 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17599 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17600 ;;Total ram usage:        1 bytes
 17601 ;; Hardware stack levels used:    1
 17602 ;; This function calls:
 17603 ;;		Nothing
 17604 ;; This function is called by:
 17605 ;;		_setCallBack
 17606 ;;		_i2c_open
 17607 ;;		_do_I2C_DO_ADDRESS_NACK
 17608 ;;		_do_I2C_TX
 17609 ;;		_do_I2C_RX
 17610 ;;		_do_I2C_TX_EMPTY
 17611 ;; This function uses a non-reentrant model
 17612 ;;
 17613                           
 17614                           
 17615                           ;psect for function _returnStop
 17616  1D0C                     _returnStop:	
 17617                           
 17618                           ;i2c_master.c: 445: return i2c_stop;
 17619                           
 17620                           ;incstack = 0
 17621                           ; Regs used in _returnStop: [wreg]
 17622  1D0C  3001               	movlw	1
 17623  1D0D  0008               	return
 17624  1D0E                     __end_of_returnStop:	
 17625                           
 17626                           	psect	text104
 17627  1DC1                     __ptext104:	
 17628 ;; *************** function _wr2RegCompleteHandler *****************
 17629 ;; Defined at:
 17630 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 17631 ;; Parameters:    Size  Location     Type
 17632 ;;  p               1    9[COMMON] PTR void 
 17633 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17634 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17635 ;; Auto vars:     Size  Location     Type
 17636 ;;		None
 17637 ;; Return value:  Size  Location     Type
 17638 ;;                  1    wreg      enum E97
 17639 ;; Registers used:
 17640 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17641 ;; Tracked objects:
 17642 ;;		On entry : 0/0
 17643 ;;		On exit  : 0/0
 17644 ;;		Unchanged: 0/0
 17645 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17646 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17649 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17650 ;;Total ram usage:        1 bytes
 17651 ;; Hardware stack levels used:    1
 17652 ;; Hardware stack levels required when called:    2
 17653 ;; This function calls:
 17654 ;;		_i2c_setBuffer
 17655 ;;		_i2c_setDataCompleteCallback
 17656 ;; This function is called by:
 17657 ;;		_i2c_write2ByteRegister
 17658 ;;		_do_I2C_DO_ADDRESS_NACK
 17659 ;;		_do_I2C_TX
 17660 ;;		_do_I2C_RX
 17661 ;;		_do_I2C_TX_EMPTY
 17662 ;; This function uses a non-reentrant model
 17663 ;;
 17664                           
 17665                           
 17666                           ;psect for function _wr2RegCompleteHandler
 17667  1DC1                     _wr2RegCompleteHandler:	
 17668                           
 17669                           ;i2c_simple_master.c: 112: i2c_setBuffer(p,2);
 17670                           
 17671                           ;incstack = 0
 17672                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 17673  1DC1  3002               	movlw	2
 17674  1DC2  00F0               	movwf	i2c_setBuffer@bufferSize
 17675  1DC3  3000               	movlw	0
 17676  1DC4  00F1               	movwf	i2c_setBuffer@bufferSize+1
 17677  1DC5  0879               	movf	wr2RegCompleteHandler@p,w
 17678  1DC6  3188  2000  319D   	fcall	_i2c_setBuffer
 17679                           
 17680                           ;i2c_simple_master.c: 113: i2c_setDataCompleteCallback((0),(0));
 17681  1DC9  3000               	movlw	0
 17682  1DCA  00F5               	movwf	i2c_setDataCompleteCallback@cb
 17683  1DCB  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 17684  1DCC  01F7               	clrf	i2c_setDataCompleteCallback@p
 17685  1DCD  319D  2576         	fcall	_i2c_setDataCompleteCallback
 17686                           
 17687                           ;i2c_simple_master.c: 114: return i2c_continue;
 17688  1DCF  3004               	movlw	4
 17689  1DD0  0008               	return
 17690  1DD1                     __end_of_wr2RegCompleteHandler:	
 17691                           
 17692                           	psect	text105
 17693  1D76                     __ptext105:	
 17694 ;; *************** function _i2c_setDataCompleteCallback *****************
 17695 ;; Defined at:
 17696 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
 17697 ;; Parameters:    Size  Location     Type
 17698 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 17699 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 17700 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
 17701 ;;  p               1    7[COMMON] PTR void 
 17702 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17703 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17704 ;; Auto vars:     Size  Location     Type
 17705 ;;		None
 17706 ;; Return value:  Size  Location     Type
 17707 ;;                  1    wreg      void 
 17708 ;; Registers used:
 17709 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17710 ;; Tracked objects:
 17711 ;;		On entry : 0/0
 17712 ;;		On exit  : 0/0
 17713 ;;		Unchanged: 0/0
 17714 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17715 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17717 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17718 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17719 ;;Total ram usage:        4 bytes
 17720 ;; Hardware stack levels used:    1
 17721 ;; Hardware stack levels required when called:    1
 17722 ;; This function calls:
 17723 ;;		_setCallBack
 17724 ;; This function is called by:
 17725 ;;		_wr1RegCompleteHandler
 17726 ;;		_rd1RegCompleteHandler
 17727 ;;		_rd2RegCompleteHandler
 17728 ;;		_wr2RegCompleteHandler
 17729 ;;		_rdBlkRegCompleteHandler
 17730 ;;		_i2c_write1ByteRegister
 17731 ;;		_i2c_read1ByteRegister
 17732 ;;		_i2c_read2ByteRegister
 17733 ;;		_i2c_write2ByteRegister
 17734 ;;		_i2c_readDataBlock
 17735 ;; This function uses a non-reentrant model
 17736 ;;
 17737                           
 17738                           
 17739                           ;psect for function _i2c_setDataCompleteCallback
 17740  1D76                     _i2c_setDataCompleteCallback:	
 17741                           
 17742                           ;i2c_master.c: 91: setCallBack(i2c_dataComplete,cb,p);
 17743                           
 17744                           ;incstack = 0
 17745                           ; Regs used in _i2c_setDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 17746  1D76  0876               	movf	i2c_setDataCompleteCallback@cb+1,w
 17747  1D77  00F1               	movwf	setCallBack@cb+1
 17748  1D78  0875               	movf	i2c_setDataCompleteCallback@cb,w
 17749  1D79  00F0               	movwf	setCallBack@cb
 17750  1D7A  0877               	movf	i2c_setDataCompleteCallback@p,w
 17751  1D7B  00F8               	movwf	??_i2c_setDataCompleteCallback
 17752  1D7C  0878               	movf	??_i2c_setDataCompleteCallback,w
 17753  1D7D  00F2               	movwf	setCallBack@p
 17754  1D7E  3000               	movlw	0
 17755  1D7F  3190  205B         	fcall	_setCallBack
 17756  1D81  0008               	return
 17757  1D82                     __end_of_i2c_setDataCompleteCallback:	
 17758                           
 17759                           	psect	text106
 17760  105B                     __ptext106:	
 17761 ;; *************** function _setCallBack *****************
 17762 ;; Defined at:
 17763 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
 17764 ;; Parameters:    Size  Location     Type
 17765 ;;  idx             1    wreg     enum E2365
 17766 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
 17767 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 17768 ;;		 -> wr1RegCompleteHandler(1), i2c_restartWrite(1), Absolute function(1), 
 17769 ;;  p               1    2[COMMON] PTR void 
 17770 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17771 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17772 ;; Auto vars:     Size  Location     Type
 17773 ;;  idx             1    4[COMMON] enum E2365
 17774 ;; Return value:  Size  Location     Type
 17775 ;;                  1    wreg      void 
 17776 ;; Registers used:
 17777 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17778 ;; Tracked objects:
 17779 ;;		On entry : 0/0
 17780 ;;		On exit  : 0/0
 17781 ;;		Unchanged: 0/0
 17782 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17783 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17784 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17785 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17786 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17787 ;;Total ram usage:        5 bytes
 17788 ;; Hardware stack levels used:    1
 17789 ;; This function calls:
 17790 ;;		Nothing
 17791 ;; This function is called by:
 17792 ;;		_i2c_setDataCompleteCallback
 17793 ;;		_i2c_setWriteCollisionCallback
 17794 ;;		_i2c_setAddressNACKCallback
 17795 ;;		_i2c_setDataNACKCallback
 17796 ;;		_i2c_setTimeOutCallback
 17797 ;; This function uses a non-reentrant model
 17798 ;;
 17799                           
 17800                           
 17801                           ;psect for function _setCallBack
 17802  105B                     _setCallBack:	
 17803                           
 17804                           ;incstack = 0
 17805                           ; Regs used in _setCallBack: [wreg+fsr1l+fsr1h+status,2+status,0]
 17806                           ;setCallBack@idx stored from wreg
 17807  105B  00F4               	movwf	setCallBack@idx
 17808                           
 17809                           ;i2c_master.c: 455: if(cb)
 17810  105C  0870               	movf	setCallBack@cb,w
 17811  105D  0471               	iorwf	setCallBack@cb+1,w
 17812  105E  1903               	btfsc	3,2
 17813  105F  2873               	goto	i1l5130
 17814                           
 17815                           ;i2c_master.c: 456: {
 17816                           ;i2c_master.c: 457: i2c_status.callbackTable[idx] = cb;
 17817  1060  3574               	lslf	setCallBack@idx,w
 17818  1061  3E2B               	addlw	(low ((_i2c_status| (0+512)+11)))& (0+255)
 17819  1062  0086               	movwf	6
 17820  1063  3002               	movlw	2	; select bank4/5
 17821  1064  0087               	movwf	7
 17822  1065  0870               	movf	setCallBack@cb,w
 17823  1066  3FC0               	movwi [0]fsr1
 17824  1067  0871               	movf	setCallBack@cb+1,w
 17825  1068  3FC1               	movwi [1]fsr1
 17826                           
 17827                           ;i2c_master.c: 458: i2c_status.callbackPayload[idx] = p;
 17828  1069  0872               	movf	setCallBack@p,w
 17829  106A  00F3               	movwf	??_setCallBack
 17830  106B  0874               	movf	setCallBack@idx,w
 17831  106C  3E37               	addlw	(low ((_i2c_status| (0+512)+23)))& (0+255)
 17832  106D  0086               	movwf	6
 17833  106E  3002               	movlw	2	; select bank4/5
 17834  106F  0087               	movwf	7
 17835  1070  0873               	movf	??_setCallBack,w
 17836  1071  0081               	movwf	1
 17837                           
 17838                           ;i2c_master.c: 459: }
 17839  1072  0008               	return
 17840  1073                     i1l5130:	
 17841                           
 17842                           ;i2c_master.c: 460: else
 17843                           ;i2c_master.c: 461: {
 17844                           ;i2c_master.c: 462: i2c_status.callbackTable[idx] = returnStop;
 17845  1073  3574               	lslf	setCallBack@idx,w
 17846  1074  3E2B               	addlw	(low ((_i2c_status| (0+512)+11)))& (0+255)
 17847  1075  0086               	movwf	6
 17848  1076  3002               	movlw	2	; select bank4/5
 17849  1077  0087               	movwf	7
 17850  1078  300C               	movlw	low _returnStop
 17851  1079  3FC0               	movwi [0]fsr1
 17852  107A  301D               	movlw	high _returnStop
 17853  107B  3FC1               	movwi [1]fsr1
 17854                           
 17855                           ;i2c_master.c: 463: i2c_status.callbackPayload[idx] = (0);
 17856  107C  0874               	movf	setCallBack@idx,w
 17857  107D  3E37               	addlw	(low ((_i2c_status| (0+512)+23)))& (0+255)
 17858  107E  0086               	movwf	6
 17859  107F  3002               	movlw	2	; select bank4/5
 17860  1080  0087               	movwf	7
 17861  1081  0181               	clrf	1
 17862  1082  0008               	return
 17863  1083                     __end_of_setCallBack:	
 17864                           
 17865                           	psect	text107
 17866  0800                     __ptext107:	
 17867 ;; *************** function _i2c_setBuffer *****************
 17868 ;; Defined at:
 17869 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 17870 ;; Parameters:    Size  Location     Type
 17871 ;;  buffer          1    wreg     PTR void 
 17872 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 17873 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 17874 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 17875 ;;  bufferSize      2    0[COMMON] unsigned int 
 17876 ;; Auto vars:     Size  Location     Type
 17877 ;;  buffer          1    3[COMMON] PTR void 
 17878 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 17879 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 17880 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 17881 ;; Return value:  Size  Location     Type
 17882 ;;                  1    wreg      void 
 17883 ;; Registers used:
 17884 ;;		wreg
 17885 ;; Tracked objects:
 17886 ;;		On entry : 0/0
 17887 ;;		On exit  : 0/0
 17888 ;;		Unchanged: 0/0
 17889 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17890 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17891 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17892 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17893 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17894 ;;Total ram usage:        4 bytes
 17895 ;; Hardware stack levels used:    1
 17896 ;; This function calls:
 17897 ;;		Nothing
 17898 ;; This function is called by:
 17899 ;;		_wr1RegCompleteHandler
 17900 ;;		_rd1RegCompleteHandler
 17901 ;;		_rd2RegCompleteHandler
 17902 ;;		_wr2RegCompleteHandler
 17903 ;;		_rdBlkRegCompleteHandler
 17904 ;;		_i2c_write1ByteRegister
 17905 ;;		_i2c_writeNBytes
 17906 ;;		_i2c_read1ByteRegister
 17907 ;;		_i2c_read2ByteRegister
 17908 ;;		_i2c_write2ByteRegister
 17909 ;;		_i2c_readDataBlock
 17910 ;;		_i2c_readNBytes
 17911 ;; This function uses a non-reentrant model
 17912 ;;
 17913                           
 17914                           
 17915                           ;psect for function _i2c_setBuffer
 17916  0800                     _i2c_setBuffer:	
 17917                           
 17918                           ;incstack = 0
 17919                           ; Regs used in _i2c_setBuffer: [wreg]
 17920                           ;i2c_setBuffer@buffer stored from wreg
 17921  0800  00F3               	movwf	i2c_setBuffer@buffer
 17922                           
 17923                           ;i2c_master.c: 186: if(i2c_status.bufferFree)
 17924  0801  0024               	movlb	4	; select bank4
 17925  0802  1D20               	btfss	_i2c_status^(0+512),2
 17926  0803  0008               	return
 17927                           
 17928                           ;i2c_master.c: 187: {
 17929                           ;i2c_master.c: 188: i2c_status.data_ptr = buffer;
 17930  0804  0873               	movf	i2c_setBuffer@buffer,w
 17931  0805  00F2               	movwf	??_i2c_setBuffer
 17932  0806  0872               	movf	??_i2c_setBuffer,w
 17933  0807  00A2               	movwf	(low ((_i2c_status| (0+512)+2)))^0
 17934                           
 17935                           ;i2c_master.c: 189: i2c_status.data_length = bufferSize;
 17936  0808  0871               	movf	i2c_setBuffer@bufferSize+1,w
 17937  0809  00A4               	movwf	((_i2c_status+1)^(0+512)+3)
 17938  080A  0870               	movf	i2c_setBuffer@bufferSize,w
 17939  080B  00A3               	movwf	(_i2c_status^(0+512)+3)
 17940                           
 17941                           ;i2c_master.c: 190: i2c_status.bufferFree = 0;
 17942  080C  1120               	bcf	_i2c_status^(0+512),2
 17943  080D  0008               	return
 17944  080E                     __end_of_i2c_setBuffer:	
 17945                           
 17946                           	psect	text108
 17947  1D13                     __ptext108:	
 17948 ;; *************** function _i2c_driver_stop *****************
 17949 ;; Defined at:
 17950 ;;		line 156 in file "mcc_generated_files/i2c_driver.c"
 17951 ;; Parameters:    Size  Location     Type
 17952 ;;		None
 17953 ;; Auto vars:     Size  Location     Type
 17954 ;;		None
 17955 ;; Return value:  Size  Location     Type
 17956 ;;                  1    wreg      void 
 17957 ;; Registers used:
 17958 ;;		None
 17959 ;; Tracked objects:
 17960 ;;		On entry : 0/0
 17961 ;;		On exit  : 0/0
 17962 ;;		Unchanged: 0/0
 17963 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17968 ;;Total ram usage:        0 bytes
 17969 ;; Hardware stack levels used:    1
 17970 ;; This function calls:
 17971 ;;		Nothing
 17972 ;; This function is called by:
 17973 ;;		_do_I2C_SEND_STOP
 17974 ;; This function uses a non-reentrant model
 17975 ;;
 17976                           
 17977                           
 17978                           ;psect for function _i2c_driver_stop
 17979  1D13                     _i2c_driver_stop:	
 17980                           
 17981                           ;i2c_driver.c: 158: SSP1CON2bits.PEN = 1;
 17982                           
 17983                           ;incstack = 0
 17984                           ; Regs used in _i2c_driver_stop: []
 17985  1D13  0024               	movlb	4	; select bank4
 17986  1D14  1516               	bsf	22,2	;volatile
 17987  1D15  0008               	return
 17988  1D16                     __end_of_i2c_driver_stop:	
 17989                           
 17990                           	psect	text109
 17991  1D10                     __ptext109:	
 17992 ;; *************** function _i2c_driver_restart *****************
 17993 ;; Defined at:
 17994 ;;		line 151 in file "mcc_generated_files/i2c_driver.c"
 17995 ;; Parameters:    Size  Location     Type
 17996 ;;		None
 17997 ;; Auto vars:     Size  Location     Type
 17998 ;;		None
 17999 ;; Return value:  Size  Location     Type
 18000 ;;                  1    wreg      void 
 18001 ;; Registers used:
 18002 ;;		None
 18003 ;; Tracked objects:
 18004 ;;		On entry : 0/0
 18005 ;;		On exit  : 0/0
 18006 ;;		Unchanged: 0/0
 18007 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18012 ;;Total ram usage:        0 bytes
 18013 ;; Hardware stack levels used:    1
 18014 ;; This function calls:
 18015 ;;		Nothing
 18016 ;; This function is called by:
 18017 ;;		_do_I2C_SEND_RESTART_READ
 18018 ;;		_do_I2C_SEND_RESTART_WRITE
 18019 ;;		_do_I2C_SEND_RESTART
 18020 ;; This function uses a non-reentrant model
 18021 ;;
 18022                           
 18023                           
 18024                           ;psect for function _i2c_driver_restart
 18025  1D10                     _i2c_driver_restart:	
 18026                           
 18027                           ;i2c_driver.c: 153: SSP1CON2bits.RSEN = 1;
 18028                           
 18029                           ;incstack = 0
 18030                           ; Regs used in _i2c_driver_restart: []
 18031  1D10  0024               	movlb	4	; select bank4
 18032  1D11  1496               	bsf	22,1	;volatile
 18033  1D12  0008               	return
 18034  1D13                     __end_of_i2c_driver_restart:	
 18035                           
 18036                           	psect	text110
 18037  1D28                     __ptext110:	
 18038 ;; *************** function _i2c_driver_sendACK *****************
 18039 ;; Defined at:
 18040 ;;		line 196 in file "mcc_generated_files/i2c_driver.c"
 18041 ;; Parameters:    Size  Location     Type
 18042 ;;		None
 18043 ;; Auto vars:     Size  Location     Type
 18044 ;;		None
 18045 ;; Return value:  Size  Location     Type
 18046 ;;                  1    wreg      void 
 18047 ;; Registers used:
 18048 ;;		None
 18049 ;; Tracked objects:
 18050 ;;		On entry : 0/0
 18051 ;;		On exit  : 0/0
 18052 ;;		Unchanged: 0/0
 18053 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18058 ;;Total ram usage:        0 bytes
 18059 ;; Hardware stack levels used:    1
 18060 ;; This function calls:
 18061 ;;		Nothing
 18062 ;; This function is called by:
 18063 ;;		_do_I2C_DO_ACK
 18064 ;;		_do_I2C_RX
 18065 ;; This function uses a non-reentrant model
 18066 ;;
 18067                           
 18068                           
 18069                           ;psect for function _i2c_driver_sendACK
 18070  1D28                     _i2c_driver_sendACK:	
 18071                           
 18072                           ;i2c_driver.c: 198: SSP1CON2bits.ACKDT = 0;
 18073                           
 18074                           ;incstack = 0
 18075                           ; Regs used in _i2c_driver_sendACK: []
 18076  1D28  0024               	movlb	4	; select bank4
 18077  1D29  1296               	bcf	22,5	;volatile
 18078                           
 18079                           ;i2c_driver.c: 199: SSP1CON2bits.ACKEN = 1;
 18080  1D2A  1616               	bsf	22,4	;volatile
 18081  1D2B  0008               	return
 18082  1D2C                     __end_of_i2c_driver_sendACK:	
 18083  007E                     btemp	set	126	;btemp
 18084  007E                     int$flags	set	126
 18085  007E                     wtemp0	set	126


Data Sizes:
    Strings     7
    Constant    175
    Data        32
    BSS         260
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0h           16     16      16
    BANK1            48     35      42
    BANK2             0      0       0
    BANK3            64      1      64
    BANK4            80      5      67
    BANK5            80      0      32
    BANK6            80      0      64
    BANK7            80      0      64
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(1) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    do_I2C_TX$3615$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    do_I2C_RX$3621$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    do_I2C_TX_EMPTY$3627$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_ISR$3633	PTR const FTN()enum E2347 size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    do_I2C_TX_EMPTY$3632	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    do_I2C_TX_EMPTY$3627	PTR FTN(PTR void ,)enum E2181 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), returnReset(), returnStop(), 
		 -> Absolute function(), 

    do_I2C_RX$3626	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    do_I2C_RX$3621	PTR FTN(PTR void ,)enum E2181 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), returnReset(), returnStop(), 
		 -> Absolute function(), 

    do_I2C_TX$3620	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    do_I2C_TX$3615	PTR FTN(PTR void ,)enum E2181 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), returnReset(), returnStop(), 
		 -> Absolute function(), 

    returnStop@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    returnReset@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_restartWrite@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S2378$11$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    __builtin_memcpy$1	PTR const void  size(2) Largest target is 4096
		 -> CtrlTrfData(BANK0h[8]), RAM(DATA[4096]), SetupPkt(ABS[8]), 

    __builtin_memcpy$0	PTR void  size(1) Largest target is 8
		 -> SetupPkt(ABS[8]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), USTATcopy(BANK3[1]), USBActiveConfiguration(BANK3[1]), BDT(ABS[48]), 
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[4]), STR_1(CODE[3]), 

    strncmp@s1	PTR const unsigned char  size(1) Largest target is 64
		 -> readBuffer(BANK6[64]), NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[4]), STR_1(CODE[3]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[4]), STR_1(CODE[3]), 

    strchr@ptr	PTR const unsigned char  size(1) Largest target is 64
		 -> readBuffer(BANK6[64]), NULL(NULL[0]), 

    sp__strchr	PTR unsigned char  size(1) Largest target is 64
		 -> readBuffer(BANK6[64]), NULL(NULL[0]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[4]), STR_1(CODE[3]), 

    strstr@s1	PTR const unsigned char  size(1) Largest target is 64
		 -> readBuffer(BANK6[64]), NULL(NULL[0]), 

    strcpy@from	PTR const unsigned char  size(1) Largest target is 64
		 -> readBuffer(BANK6[64]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 64
		 -> writeBuffer(BANK7[64]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 64
		 -> writeBuffer(BANK7[64]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(ABS[48]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(ABS[48]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 64
		 -> writeBuffer(BANK7[64]), 

    sp__strstr	PTR unsigned char  size(1) Largest target is 64
		 -> readBuffer(BANK6[64]), NULL(NULL[0]), 

    d.data	PTR unsigned char  size(1) Largest target is 0

    S2903$data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@cb	PTR FTN(PTR void ,)enum E2181 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), 

    fsmStateTable	PTR const FTN()enum E2347[16] size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E2181 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), 

    S2378$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S2378$callbackTable	PTR FTN(PTR void ,)enum E2181[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), returnReset(), returnStop(), 
		 -> Absolute function(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E2181[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), returnReset(), returnStop(), 
		 -> Absolute function(), 

    S2378$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    sp____builtin_memcpy	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(ABS[48]), 

    USBStdSetCfgHandler@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    pDst	PTR volatile unsigned char  size(1) Largest target is 8
		 -> CtrlTrfData(BANK0h[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(1) Largest target is 48
		 -> BDT(ABS[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(1) Largest target is 48
		 -> BDT(ABS[48]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAM[64]), NULL(NULL[0]), cdc_data_rx(BIGRAM[64]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    USBDeviceInit@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[26]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    putrsUSBUSART@data	PTR const unsigned char  size(1) Largest target is 64
		 -> writeBuffer(BANK7[64]), 

    putrsUSBUSART@pData	PTR const unsigned char  size(1) Largest target is 64
		 -> writeBuffer(BANK7[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(1) Largest target is 64
		 -> readBuffer(BANK6[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    S543$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S533$wRam	PTR unsigned int  size(1) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(1) Largest target is 0

    S533$bRam	PTR unsigned char  size(1) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S508$wRom	PTR const unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S508$wRam	PTR unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S508$bRom	PTR const unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S508$bRam	PTR unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S275_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S275_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S275_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S275_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    i2c_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_ISR(), Absolute function(), 

    i2c_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_busCollisionISR(), Absolute function(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    i1_USBCtrlEPServiceComplete->i1_USBCtrlEPAllowDataStage
    i1_USBCtrlEPAllowDataStage->i1_USBCtrlTrfTxService
    i1_USER_USB_CALLBACK_EVENT_HANDLER->i1_CDCInitEP
    i1_CDCInitEP->i1_USBEnableEndpoint
    i1_USBEnableEndpoint->i1_USBConfigureEndpoint
    i1_USBCtrlTrfOutHandler->i1_USBCtrlTrfRxService
    i1_USBCtrlTrfRxService->i1_USBCtrlEPAllowStatusStage
    i1_USBCtrlTrfInHandler->i1_USBCtrlTrfTxService
    _i2c_ISR->_do_I2C_TX
    _do_I2C_TX->_i2c_driver_TXData
    _do_I2C_TX->_i2c_driver_isNACK
    _do_I2C_SEND_ADR_WRITE->_i2c_driver_TXData
    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback
    _i2c_setDataCompleteCallback->_setCallBack

Critical Paths under _main in BANK0h

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0h

    _INTERRUPT_InterruptManager->i1_USBDeviceTasks
    i1_USBWakeFromSuspend->i1_USER_USB_CALLBACK_EVENT_HANDLER
    i1_USBSuspend->i1_USER_USB_CALLBACK_EVENT_HANDLER
    i1_USBCtrlEPService->i1_USBCtrlTrfSetupHandler
    i1_USBCtrlTrfSetupHandler->i1_USBCheckStdRequest
    i1_USBCheckStdRequest->i1_USBStdFeatureReqHandler
    i1_USBStdSetCfgHandler->i1_USER_USB_CALLBACK_EVENT_HANDLER
    i1_USBStdFeatureReqHandler->i1_USER_USB_CALLBACK_EVENT_HANDLER

Critical Paths under _main in BANK1

    _UserApplication->_strstr
    _strstr->_strncmp
    _strncmp->_strlen
    _getsUSBUSART->_USBTransferOnePacket
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPService->_USBCtrlTrfSetupHandler
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCtrlEPServiceComplete->_USBCtrlEPAllowDataStage
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_CDCInitEP
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USBCtrlEPAllowStatusStage
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _SYSTEM_Initialize->_USBDeviceInit
    _CDCTxService->_USBTransferOnePacket

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    _INTERRUPT_InterruptManager->i1_USBDeviceTasks
    i1_USBDeviceTasks->i1_USBCtrlEPService

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_USBDeviceTasks

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    _main->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   55546
                          _CDCInitEP
                       _CDCTxService
                  _SYSTEM_Initialize
                     _USBDeviceTasks
                    _UserApplication
 ---------------------------------------------------------------------------------
 (1) _UserApplication                                      4     4      0    3882
                                             25 BANK1      3     3      0
                       _getsUSBUSART
                      _putrsUSBUSART
                             _strcpy
                             _strstr
 ---------------------------------------------------------------------------------
 (2) _strstr                                               6     4      2    1167
                                             19 BANK1      6     4      2
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              7     3      4     348
                                             12 BANK1      7     3      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) _strlen                                               6     4      2     179
                                              6 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (3) _strchr                                               3     1      2     213
                                              6 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               4     3      1     200
                                              6 BANK1      4     3      1
 ---------------------------------------------------------------------------------
 (2) _putrsUSBUSART                                        4     4      0     149
                                              6 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (2) _getsUSBUSART                                         4     3      1    2332
                                             17 BANK1      4     3      1
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       3     3      0   45929
                                              0 BANK3      1     1      0
                                              3 BANK4      2     2      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   1     1      0    6196
                                             26 BANK1      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           1     1      0    6196
                                             26 BANK1      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      1     1      0       0
                                              6 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBIncrement1msInternalTimers                        1     1      0       0
                                              6 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     3     3      0   26877
                                              0 BANK4      3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               1     1      0   26540
                                             34 BANK1      1     1      0
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             2     2      0     136
                                             11 BANK1      2     2      0
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              2     2      0     136
                                              9 BANK1      2     2      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   1     1      0   20208
                                             33 BANK1      1     1      0
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  5     5      0    7070
                                             26 BANK1      5     5      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6     639
                                              6 BANK1      8     2      6
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               3     3      0      68
                                              6 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  3     3      0       0
                                              6 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              7     7      0    6874
                                             26 BANK1      7     7      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USER_USB_CALLBACK_EVENT_HANDLER                      6     0      6    6196
                                             20 BANK1      6     0      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (3) _USBCheckCDCRequest                                   1     1      0       0
                                              6 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (3) _CDCInitEP                                            1     1      0    3045
                                             19 BANK1      1     1      0
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBEnableEndpoint                                    6     5      1     952
                                             13 BANK1      6     5      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (5) _USBConfigureEndpoint                                 7     6      1     524
                                              6 BANK1      7     6      1
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 2     2      0     167
                                             12 BANK1      2     2      0
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  4     4      0     167
                                              8 BANK1      4     4      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            2     2      0       0
                                              6 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  3     3      0     170
                                              9 BANK1      3     3      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfTxService                                  3     3      0     136
                                              6 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     396
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        5     5      0     396
                                              6 BANK1      5     5      0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceAttach                                      1     1      0       0
                                              6 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CDCTxService                                         3     3      0    2294
                                             17 BANK1      3     3      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                11     7      4    2093
                                              6 BANK1     11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          1     1      0  103559
                                              5 BANK1      1     1      0
                   Absolute function *
                            _i2c_ISR *
                _i2c_busCollisionISR *
                   i1_USBDeviceTasks
 ---------------------------------------------------------------------------------
 (11) i1_USBDeviceTasks                                    3     3      0   13677
                                             15 BANK0h     1     1      0
                                              3 BANK1      2     2      0
        i1_USBCtrlEPAllowStatusStage
                 i1_USBCtrlEPService
                    i1_USBDeviceInit
    i1_USBIncrement1msInternalTimers
                  i1_USBStallHandler
                       i1_USBSuspend
               i1_USBWakeFromSuspend
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) i1_USBWakeFromSuspend                                1     1      0    1737
                                              6 BANK0h     1     1      0
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) i1_USBSuspend                                        1     1      0    1737
                                              6 BANK0h     1     1      0
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) i1_USBStallHandler                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) i1_USBIncrement1msInternalTimers                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) i1_USBDeviceInit                                     5     5      0     272
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (12) i1_USBCtrlEPService                                  3     3      0    8148
                                              0 BANK1      3     3      0
              i1_USBCtrlTrfInHandler
             i1_USBCtrlTrfOutHandler
           i1_USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (13) i1_USBCtrlTrfSetupHandler                            1     1      0    7919
                                             14 BANK0h     1     1      0
               i1_USBCheckStdRequest
         i1_USBCtrlEPServiceComplete
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (14) i1_USBCtrlEPServiceComplete                          2     2      0      92
                                              5 COMMON     2     2      0
          i1_USBCtrlEPAllowDataStage
        i1_USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) i1_USBCtrlEPAllowDataStage                           2     2      0      92
                                              3 COMMON     2     2      0
              i1_USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (14) i1_USBCheckStdRequest                                1     1      0    6090
                                             13 BANK0h     1     1      0
          i1_USBStdFeatureReqHandler
              i1_USBStdGetDscHandler
           i1_USBStdGetStatusHandler
              i1_USBStdSetCfgHandler
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) i1_USBStdSetCfgHandler                               5     5      0    2099
                                              6 BANK0h     5     5      0
  i1_USER_USB_CALLBACK_EVENT_HANDLER
                           i1_memset
 ---------------------------------------------------------------------------------
 (16) i1_memset                                            8     2      6     202
                                              0 COMMON     8     2      6
 ---------------------------------------------------------------------------------
 (15) i1_USBStdGetStatusHandler                            3     3      0      46
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (15) i1_USBStdGetDscHandler                               3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (15) i1_USBStdFeatureReqHandler                           7     7      0    2208
                                              6 BANK0h     7     7      0
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) i1_USER_USB_CALLBACK_EVENT_HANDLER                   6     0      6    1737
                                              0 BANK0h     6     0      6
                        i1_CDCInitEP
               i1_USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (13) i1_USBCheckCDCRequest                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) i1_CDCInitEP                                         1     1      0     935
                                             13 COMMON     1     1      0
                i1_USBEnableEndpoint
             i1_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (14) i1_USBTransferOnePacket                             11     7      4     454
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (14) i1_USBEnableEndpoint                                 6     5      1     481
                                              7 COMMON     6     5      1
             i1_USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (15) i1_USBConfigureEndpoint                              7     6      1     274
                                              0 COMMON     7     6      1
 ---------------------------------------------------------------------------------
 (13) i1_USBCtrlTrfOutHandler                              2     2      0     114
                                              6 COMMON     2     2      0
              i1_USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (14) i1_USBCtrlTrfRxService                               4     4      0     114
                                              2 COMMON     4     4      0
        i1_USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) i1_USBCtrlEPAllowStatusStage                         2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (13) i1_USBCtrlTrfInHandler                               3     3      0     115
                                              3 COMMON     3     3      0
              i1_USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (16) i1_USBCtrlTrfTxService                               3     3      0      92
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (11) _i2c_busCollisionISR                                 0     0      0       0
       _i2c_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (12) _i2c_driver_clearBusCollision                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _i2c_ISR                                             1     1      0   89882
                                              4 COMMON     1     1      0
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                  _i2c_driver_isNACK
                      _mssp_clearIRQ
 ---------------------------------------------------------------------------------
 (12) _mssp_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _do_I2C_TX_EMPTY                                     1     1      0   22448
                                              0 COMMON     1     1      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
                        _mssp_setIRQ
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (13) _mssp_setIRQ                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _do_I2C_TX                                           3     3      0   22494
                                              1 COMMON     3     3      0
                   Absolute function *
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                  _i2c_driver_TXData
                  _i2c_driver_isNACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (12) _i2c_driver_isNACK                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _do_I2C_SEND_RESTART_WRITE                           0     0      0       0
                 _i2c_driver_restart
 ---------------------------------------------------------------------------------
 (13) _do_I2C_SEND_RESTART_READ                            0     0      0       0
                 _i2c_driver_restart
 ---------------------------------------------------------------------------------
 (12) _do_I2C_SEND_ADR_WRITE                               0     0      0      22
                  _i2c_driver_TXData
 ---------------------------------------------------------------------------------
 (12) _do_I2C_SEND_ADR_READ                                0     0      0      22
                  _i2c_driver_TXData
 ---------------------------------------------------------------------------------
 (13) _i2c_driver_TXData                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) _do_I2C_RX                                           1     1      0   22448
                                              0 COMMON     1     1      0
                   Absolute function *
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
               _i2c_driver_getRXData
                 _i2c_driver_sendACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (13) _i2c_driver_getRXData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _do_I2C_DO_NACK_STOP                                 0     0      0       0
                _i2c_driver_sendNACK
 ---------------------------------------------------------------------------------
 (13) _do_I2C_DO_NACK_RESTART                              0     0      0       0
                _i2c_driver_sendNACK
 ---------------------------------------------------------------------------------
 (14) _i2c_driver_sendNACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _do_I2C_RESET                                        0     0      0       0
                _i2c_driver_resetBus
 ---------------------------------------------------------------------------------
 (13) _i2c_driver_resetBus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _do_I2C_RCEN                                         0     0      0       0
                 _i2c_driver_startRX
 ---------------------------------------------------------------------------------
 (13) _i2c_driver_startRX                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _do_I2C_IDLE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _do_I2C_DO_ADDRESS_NACK                              1     1      0   22448
                                              0 COMMON     1     1      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (13) _wr2RegCompleteHandler                               1     0      1    4434
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (13) _wr1RegCompleteHandler                               1     0      1    4434
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (13) _returnStop                                          1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (13) _returnReset                                         1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (13) _rdBlkRegCompleteHandler                             1     0      1    4712
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (13) _rd2RegCompleteHandler                               1     0      1    4434
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (13) _rd1RegCompleteHandler                               1     0      1    4434
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) _i2c_setDataCompleteCallback                         4     1      3    2868
                                              5 COMMON     4     1      3
                        _setCallBack
 ---------------------------------------------------------------------------------
 (15) _setCallBack                                         5     2      3    1044
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (14) _i2c_setBuffer                                       4     2      2    1544
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (13) _i2c_restartWrite                                    1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (13) _do_I2C_SEND_STOP                                    0     0      0       0
                    _i2c_driver_stop
 ---------------------------------------------------------------------------------
 (14) _i2c_driver_stop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _do_I2C_SEND_RESTART                                 0     0      0       0
                 _i2c_driver_restart
 ---------------------------------------------------------------------------------
 (14) _i2c_driver_restart                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 (12) _do_I2C_DO_ACK                                       0     0      0       0
                 _i2c_driver_sendACK
 ---------------------------------------------------------------------------------
 (13) _i2c_driver_sendACK                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CDCInitEP
     _USBEnableEndpoint
       _USBConfigureEndpoint
     _USBTransferOnePacket
   _CDCTxService
     _USBTransferOnePacket
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _USBDeviceAttach
     _USBDeviceInit
     _WDT_Initialize
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _USBCheckCDCRequest
     _USBDeviceInit
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _USBCheckCDCRequest
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _USBCheckCDCRequest
     _USER_USB_CALLBACK_EVENT_HANDLER
       _CDCInitEP
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBTransferOnePacket
       _USBCheckCDCRequest
   _UserApplication
     _getsUSBUSART
       _USBTransferOnePacket
     _putrsUSBUSART
     _strcpy
     _strstr
       _strchr
       _strlen
       _strncmp
         _strlen (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _i2c_ISR *
     _do_I2C_DO_ACK *
       _i2c_driver_sendACK
     _do_I2C_DO_ADDRESS_NACK *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c_driver_restart
       _do_I2C_SEND_STOP *
         _i2c_driver_stop
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_DO_NACK_RESTART *
       _i2c_driver_sendNACK
     _do_I2C_DO_NACK_STOP *
       _i2c_driver_sendNACK
     _do_I2C_IDLE *
     _do_I2C_RCEN *
       _i2c_driver_startRX
     _do_I2C_RESET *
       _i2c_driver_resetBus
     _do_I2C_RX *
       Absolute function(Fake) *
       _do_I2C_DO_NACK_RESTART *
         _i2c_driver_sendNACK
       _do_I2C_DO_NACK_STOP *
         _i2c_driver_sendNACK
       _i2c_driver_getRXData *
       _i2c_driver_sendACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_SEND_ADR_READ *
       _i2c_driver_TXData
     _do_I2C_SEND_ADR_WRITE *
       _i2c_driver_TXData
     _do_I2C_SEND_RESTART *
       _i2c_driver_restart
     _do_I2C_SEND_RESTART_READ *
       _i2c_driver_restart
     _do_I2C_SEND_RESTART_WRITE *
       _i2c_driver_restart
     _do_I2C_SEND_STOP *
       _i2c_driver_stop
     _do_I2C_TX *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART_READ *
         _i2c_driver_restart
       _do_I2C_SEND_RESTART_WRITE *
         _i2c_driver_restart
       _do_I2C_SEND_STOP *
         _i2c_driver_stop
       _i2c_driver_TXData *
       _i2c_driver_isNACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_TX_EMPTY *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c_driver_restart
       _do_I2C_SEND_STOP *
         _i2c_driver_stop
       _i2c_restartWrite *
       _mssp_setIRQ *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _i2c_driver_isNACK *
     _mssp_clearIRQ *
   _i2c_busCollisionISR *
     _i2c_driver_clearBusCollision
   i1_USBDeviceTasks *
     i1_USBCtrlEPAllowStatusStage
     i1_USBCtrlEPService
       i1_USBCtrlTrfInHandler
         i1_USBCtrlTrfTxService
       i1_USBCtrlTrfOutHandler
         i1_USBCtrlTrfRxService
           i1_USBCtrlEPAllowStatusStage
       i1_USBCtrlTrfSetupHandler
         i1_USBCheckStdRequest
           i1_USBStdFeatureReqHandler
             i1_USER_USB_CALLBACK_EVENT_HANDLER
               i1_CDCInitEP
                 i1_USBEnableEndpoint
                   i1_USBConfigureEndpoint
                 i1_USBTransferOnePacket
               i1_USBCheckCDCRequest
           i1_USBStdGetDscHandler
           i1_USBStdGetStatusHandler
           i1_USBStdSetCfgHandler
             i1_USER_USB_CALLBACK_EVENT_HANDLER
               i1_CDCInitEP
                 i1_USBEnableEndpoint
                   i1_USBConfigureEndpoint
                 i1_USBTransferOnePacket
               i1_USBCheckCDCRequest
             i1_memset
           i1_USER_USB_CALLBACK_EVENT_HANDLER
             i1_CDCInitEP
               i1_USBEnableEndpoint
                 i1_USBConfigureEndpoint
               i1_USBTransferOnePacket
             i1_USBCheckCDCRequest
         i1_USBCtrlEPServiceComplete
           i1_USBCtrlEPAllowDataStage
             i1_USBCtrlTrfTxService
           i1_USBCtrlEPAllowStatusStage
         i1_USER_USB_CALLBACK_EVENT_HANDLER
           i1_CDCInitEP
             i1_USBEnableEndpoint
               i1_USBConfigureEndpoint
             i1_USBTransferOnePacket
           i1_USBCheckCDCRequest
     i1_USBDeviceInit
     i1_USBIncrement1msInternalTimers
     i1_USBStallHandler
     i1_USBSuspend
       i1_USER_USB_CALLBACK_EVENT_HANDLER
         i1_CDCInitEP
           i1_USBEnableEndpoint
             i1_USBConfigureEndpoint
           i1_USBTransferOnePacket
         i1_USBCheckCDCRequest
     i1_USBWakeFromSuspend
       i1_USER_USB_CALLBACK_EVENT_HANDLER
         i1_CDCInitEP
           i1_USBEnableEndpoint
             i1_USBConfigureEndpoint
           i1_USBTransferOnePacket
         i1_USBCheckCDCRequest
     i1_USER_USB_CALLBACK_EVENT_HANDLER
       i1_CDCInitEP
         i1_USBEnableEndpoint
           i1_USBConfigureEndpoint
         i1_USBTransferOnePacket
       i1_USBCheckCDCRequest

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0h           10      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0h              10     10      10       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               30     23      2A       7       87.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2                0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               40      1      40      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      5      43      13       83.8%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      20      15       40.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0      40      17       80.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0      40      19       80.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     16B      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     16B      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Mar 17 17:18:43 2018

                __end_of_i2c_driver_restart 1D13                                returnReset@p 0079  
                                _USB_SD_Ptr 18DF                  __end_of_i2c_driver_startRX 1D19  
                                         pc 0002                                 __CFG_CP$OFF 0000  
                                        l56 1D96                        __size_of_do_I2C_IDLE 0005  
                       _do_I2C_SEND_RESTART 1D38                        __size_of_do_I2C_RCEN 0006  
                             _USBDeviceInit 057E                          __size_of_CDCInitEP 003E  
                               __CFG_LVP$ON 0000      i1USER_USB_CALLBACK_EVENT_HANDLER@event 0060  
      USER_USB_CALLBACK_EVENT_HANDLER@event 00B4      i1USER_USB_CALLBACK_EVENT_HANDLER@pdata 0062  
      USER_USB_CALLBACK_EVENT_HANDLER@pdata 00B6                                         l137 08D2  
                                       l401 036D                                         l242 1137  
                                       l402 03C7                                         l403 0376  
               __end_of_USBStdGetDscHandler 0C12                                         l440 1ED4  
                                       l601 17D5                                         l530 151B  
                                       l380 05C5                                         l533 1563  
                                       l534 1524                                         l535 1527  
                                       l391 0304                                         l465 0F11  
                                       l626 0172                                         l493 064F  
                                       l397 0342                                         l478 0A3F  
                                       l590 17FF                                         l592 17A7  
                                       l578 09A5                                         _BDT 0020  
                                       _RC3 0073                                         _UIE 0E92  
                                       _UIR 0E90                    i1_USBStdGetStatusHandler 14C2  
                                _USBSuspend 1EFF               i2c_setDataCompleteCallback@cb 0075  
                      USBStdSetCfgHandler@i 00BE                        USBStdSetCfgHandler@p 00BB  
                     __size_of_do_I2C_RESET 0007                                __CFG_BORV$LO 0000  
                                       wreg 0009                              _USBDeviceTasks 02E1  
                              __CFG_IESO$ON 0000                              _USBDeviceState 01E5  
                                      S8516 1891                       ??_USBCtrlTrfRxService 00A8  
                            ??_getsUSBUSART 00B2                    USBEnableEndpoint@options 00AD  
                   ??_rd2RegCompleteHandler 007A                                        l1546 1E17  
                USBConfigureEndpoint@handle 00AC                                        l6126 1ED9  
                                      l8010 059F                                        l8002 058E  
                                      l6170 1157                                        l6162 1148  
                                      l8030 05CA                                        l6158 1142  
                                      l6430 124B                                        l8112 1FB1  
                                      l8018 05AC                                        l7410 088F  
                                      l7402 0883                                        l8114 1FBA  
                                      l8210 0318                                        l6450 1EAD  
                                      l6442 1284                                        l8300 04ED  
                                      l8052 05EE                                        l7500 0A7D  
                                      l7420 08A8                                        l6436 1266  
                                      l7342 1337                                        l7414 0896  
                                      l8222 0333                                        l5902 1382  
                                      l6438 127A                                        l7344 1340  
                                      l7352 1FE6                                        l7432 08C0  
                                      l8144 10CF                                        l8232 0348  
                                      l8216 031E                                        l8306 04F6  
                                      l8058 0612                                        l7426 08B6  
                                      l7610 0DEE                                        l8162 1672  
                                      l8146 10D1                                        l5906 134C  
                                      l7372 0CB3                                        l7364 0CA3  
                                      l8316 0513                                        l8324 052F  
                                      l7508 0A96                                        l7356 1FEE  
                                      l7460 110F                                        l7700 0092  
                                      l7516 1E77                                        l7604 0DDA  
                                      l8164 1675                                        l8084 1692  
                                      l5908 138B                                        l7382 0CFC  
                                      l8342 055F                                        l8326 0534  
                                      l8334 0550                                        l7534 0AC3  
                                      l7454 1109                                        l7702 0094  
                                      l8166 1678                                        l8246 0365  
                                      l8238 034F                                        l8094 16A9  
                                      l5918 1E21                                        l7384 0D14  
                                      l8344 0565                                        l8336 0554  
                                      l8520 1132                                        l7456 110C  
                                      l8272 03AE                                        l8096 16C9  
                                      l8088 16A7                                        l8346 057B  
                                      l7490 0A60                                        l7730 010D  
                                      l7722 00EA                                        l7634 0B9E  
                                      l7626 0E21                                        l7570 1720  
                                      l8274 03BD                                        l8266 0395  
                                      l8098 16DE                                        l7740 0127  
                                      l7716 00C5                                        l7660 0C05  
                                      l8196 02FE                                        l8188 02F1  
                                      l8294 04CD                                        l8286 04C2  
                                      l7478 0A36                                        l8518 1118  
                                      l7654 0BFF                                        l7646 0BDB  
                                      l7638 0BA8                                        l7566 170D  
                                      l7806 0F20                                        l7814 0F29  
                                      l5886 1F23                                        l8366 13C4  
                                      l7744 0133                                        l7728 0100  
                                      l7656 0C02                                        l7648 0BDE  
                                      l7672 1538                                        l7904 17E5  
                                      l5888 1F2F                                        l8392 1008  
                                      l7498 0A79                                        l7770 01A2  
                                      l7754 015D                                        l7738 0120  
                                      l7682 1557                                        l7594 0DC4  
                                      l7586 0DB3                                        l5898 136A  
                                      l7844 065C                                        l7764 0179  
                                      l7756 0163                                        l7908 17F4  
                                      l7846 0679                                        l7856 06AB  
                                      l7944 11DC                                        l7768 0199  
                                      l7880 17B2                                        l7784 0EDB  
                                      l7970 095A                                        l7858 06B8  
                                      l7890 17C1                                        l7882 17B5  
                                      l7972 0960                                        l7956 1207  
                                      l7892 17C4                                        l7788 0EDF  
                                      l7990 09AA                                        l7982 0987  
                                      l7894 17C7                                        l7878 17AF  
                                      l7986 0998                                        STR_1 18E5  
                                      STR_2 18DB                                        _LATA 010C  
                                      _LATC 010E                                        i1l91 002E  
                                      i1l84 0015                                        i1l86 0022  
                     ??_USBCtrlTrfTxService 00A6                                        u7365 0648  
                                      u6725 1310                        ?_do_I2C_SEND_RESTART 0070  
                                      u7535 05AF                                        u6735 1316  
                                      _UCFG 0E91                                        u6745 131E  
                                      _UEP0 0E98                                        _UEP1 0E99  
                                      _UEIE 0E97                                        u6975 1717  
                                      u7695 1637                                        _UEIR 0E93  
                                      _UCON 0E8E                                ?i1_CDCInitEP 0070  
                                      _WPUA 020C             i1USBCtrlTrfTxService@byteToSend 0072  
                   ??_wr2RegCompleteHandler 007A                                __CFG_WRT$OFF 0000  
                             __CFG_FCMEN$ON 0000                             _CDCDataInHandle 01CD  
         __size_of_do_I2C_SEND_RESTART_READ 0004    i1USBStdFeatureReqHandler@current_ep_data 006A  
    USBStdFeatureReqHandler@current_ep_data 00BE                                        _pDst 01E1  
                 ?_do_I2C_SEND_RESTART_READ 0070                             ??_mssp_clearIRQ 0070  
                                      _main 1000                   __size_of_do_I2C_SEND_STOP 0004  
                    __size_of_do_I2C_DO_ACK 0004                                        fsr0h 0005  
                                      fsr1h 0007                                        indf0 0000  
                                      fsr0l 0004                                        indf1 0001  
                               _BaudRateGen 0247                                        fsr1l 0006  
                           _USBDeviceAttach 1EC3                                        btemp 007E  
                             __CFG_BOREN$ON 0000                       ?_do_I2C_SEND_ADR_READ 0070  
                   ?i1_USBCtrlTrfOutHandler 0070                                        start 0034  
            __size_ofi1_USBCtrlTrfRxService 00A3                               _i2c_setBuffer 0800  
             __end_ofi1_USBCtrlTrfRxService 1000                  __end_of_USBCheckStdRequest 1800  
                    ??_USBCtrlTrfOutHandler 00AC                               __CFG_MCLRE$ON 0000  
                           __end_of_i2c_ISR 1F5D                         USBDeviceInit@i_1491 00A9  
                 ??_USBStdFeatureReqHandler 00BA              __size_ofi1_USBCtrlTrfTxService 0074  
          __size_of_rdBlkRegCompleteHandler 0017                       i1_USBStdGetDscHandler 0B14  
                    __size_of_putrsUSBUSART 0030               __end_ofi1_USBCtrlTrfTxService 0A20  
                  ??_do_I2C_DO_NACK_RESTART 0070                    ??_USBStdGetStatusHandler 00A6  
                            ?_USBDeviceInit 0070                                _do_I2C_RESET 1D60  
            __size_of_OSCILLATOR_Initialize 000C               __end_of_OSCILLATOR_Initialize 1D9A  
                               _writeBuffer 03A0                                       ?_main 0070  
                i1USBEnableEndpoint@options 0077                               __CFG_WDTE$OFF 0000  
         __size_of_USBCtrlEPServiceComplete 0095                      __end_of_USBDeviceTasks 03CA  
                 ?_USBCtrlEPServiceComplete 0070                        i1_USBCheckStdRequest 080E  
                                     i1l137 179E                                       i1l401 0455  
                                     i1l242 1107                                       i1l402 04AF  
                                     i1l403 045E                                       i1l601 0849  
                                     i1l530 14C6                                       i1l380 072C  
                                     i1l533 150A                                       i1l534 14CF  
                                     i1l535 14D2                                       i1l391 03ED  
                                     i1l465 0E7E                                       i1l626 029E  
                                     i1l813 12A0                                       i1l493 0F72  
                                     i1l397 042A                                       i1l478 09C9  
                                     i1l590 086F                                       i1l592 0816  
                                     i1l578 0934                                       i1l797 13FF  
                                     _UADDR 0E96                                       u771m0 166E  
                                     _TRISA 008C                                       _TRISC 008E  
                                     _USTAT 0E8F                                  i1memset@p1 0070  
        __size_of_USBCtrlEPAllowStatusStage 007A             __end_of_USBCtrlEPAllowDataStage 173F  
                                     _sd000 18D7                                       _sd001 1843  
                                     _sd002 1877     __end_ofi1_USBIncrement1msInternalTimers 1E72  
  __size_ofi1_USBIncrement1msInternalTimers 0018           ??i1_USBIncrement1msInternalTimers 0070  
          ?i1_USBIncrement1msInternalTimers 0070              ?_USBIncrement1msInternalTimers 0070  
           i1_USBIncrement1msInternalTimers 1E5A                              _WDT_Initialize 1D4C  
          __end_ofi1_USBCtrlTrfSetupHandler 14C2                        _i2c_driver_getRXData 1D19  
                ?_do_I2C_SEND_RESTART_WRITE 0070                       ??_do_I2C_SEND_RESTART 0070  
                                     pclath 000A                  _i2c_driver_busCollisionISR 024D  
                         __end_of_CDCInitEP 1248              __end_ofi1_USBCtrlTrfOutHandler 119E  
                    ?_do_I2C_SEND_ADR_WRITE 0070                                       status 0003  
                                     wtemp0 007E                 UserApplication@numBytesRead 00BB  
                          __end_ofi1_memset 1E5A                             __end_of_strncmp 138E  
        __size_ofi1_USBCtrlEPAllowDataStage 005C                          i2c_driver_TXData@d 0070  
                            ?_i2c_setBuffer 0070                                ?_setCallBack 0070  
                 __size_ofi1_USBDeviceTasks 00E8                  ?i1_USBCtrlEPAllowDataStage 0070  
              __size_of_USBStdSetCfgHandler 008F                               _fsmStateTable 02A0  
                           __initialization 0036                                  _i2c_status 0220  
                              __end_of_main 1012                       _control_signal_bitmap 01E6  
                            __CFG_LPBOR$OFF 0000                 ?_INTERRUPT_InterruptManager 0070  
                 __size_of_USBCtrlEPService 005C                               setCallBack@cb 0070  
                             _do_I2C_DO_ACK 1D40                                      ??_main 00C3  
                     ?i1_USBCheckStdRequest 0070                           ?_i2c_restartWrite 0079  
                           ?_USBDeviceTasks 0070                                 ?_USBSuspend 0070  
                       __CFG_USBLSCLK$48MHz 0000                             i1_USBDeviceInit 06E7  
                        ??_i2c_restartWrite 007A                             _i2c_driver_stop 1D13  
                    __end_of_WDT_Initialize 1D50                     ?_do_I2C_DO_ADDRESS_NACK 0070  
                              _cdc_mem_type 01E7                               _putrsUSBUSART 1138  
                   __end_of_USBDeviceAttach 1EE0                            _CDCDataOutHandle 01CF  
                     ?_i2c_driver_getRXData 0070                                      _ACTCON 039B  
                                    i1S8522 18AB                                      _APFCON 011D  
                                    _ANSELA 018C                                      _ANSELC 018E  
                           getsUSBUSART@len 00B1                                      _BORCON 0116  
                     __size_of_CDCTxService 00CC                                      i1l6000 0939  
                                    i1l5200 0D25                                      i1l5130 1073  
                                    i1l5240 0D92                                      i1l5224 0D60  
                                    i1l5208 0D36                                      i1l5330 01FE  
                                    i1l5314 01CE                                      i1l5218 0D4C  
                                    i1l5148 07B9                                      i1l4524 12F4  
                                    i1l4604 0C78                                      i1l4700 1765  
                                    i1l5316 01D0                                      i1l5260 0B5C  
                                    i1l5252 0B29                                      i1l5180 159D  
                                    i1l4526 12FD                                      i1l4606 0C90  
                                    i1l5342 0233                                      i1l5270 0B83  
                                    i1l5262 0B5F                                      i1l4712 1783  
                                    i1l5352 024E                                      i1l5344 023E  
                                    i1l5336 021F                                      i1l5248 0B1F  
                                    i1l5184 15B0                                      i1l4706 1775  
                                    i1l5370 028F                                      i1l5354 0255  
                                    i1l5274 0B86                                      i1l6412 1089  
                                    i1l6404 12A8                                      i1l5620 0F93  
                                    i1l4812 10DF                                      i1l5268 0B80  
                                    i1l6342 101C                                      i1l4830 09C2  
                                    i1l5630 0FC4                                      i1l4574 1F65  
                                    i1l4718 178C                                      i1l4806 10D9  
                                    i1l5382 02C3                                      i1l5358 0260  
                                    i1l5286 14E2                                      i1l6408 1086  
                                    i1l6424 1090                                      i1l5632 0FD1  
                                    i1l4808 10DC                                      i1l5384 02CC  
                                    i1l5368 0289                                      i1l5296 14FE  
                                    i1l6512 074F                                      i1l6418 108D  
                                    i1l6338 1019                                      i1l6362 13DF  
                                    i1l6354 13D9                                      i1l4842 09E6  
                                    i1l4850 09FF                                      i1l5618 0F7A  
                                    i1l4578 1F6C                                      i1l4594 0C2F  
                                    i1l4586 0C1F                                      i1l5378 02A4  
                                    i1l5562 0E4C                                      i1l6348 101F  
                                    i1l4852 0A03                                      i1l4860 0A1C  
                                    i1l5652 081F                                      i1l5580 0E8C  
                                    i1l6358 13DC                                      i1l5654 0822  
                                    i1l5558 0E48                                      i1l6518 0773  
                                    i1l6470 0707                                      i1l6462 06F6  
                                    i1l6376 1419                                      i1l6368 13E2  
                                    i1l4696 175E                                      i1l4688 1752  
                                    i1l5664 0833                                      i1l5656 0825  
                                    i1l6394 12A2                                      i1l5666 0836  
                                    i1l5682 0864                                      i1l6490 0731  
                                    i1l6546 1054                                      i1l4868 1E46  
                                    i1l5668 0839                                      i1l5588 0E95  
                                    i1l6548 1056                                      i1l6572 1F91  
                                    i1l6398 12A5                                      i1l5678 0856  
                                    i1l6590 1616                                      i1l6478 0713  
                                    i1l6574 1F9A                                      i1l6910 0400  
                                    i1l6592 1619                                      i1l6850 1F4D  
                                    i1l5954 1170                                      i1l6594 161C  
                                    i1l6922 041B                                      i1l5980 08F0  
                                    i1l8524 10E8                                      i1l6932 0430  
                                    i1l6916 0406                                      i1l5982 08F5  
                                    i1l5966 119B                                      i1l8526 1102  
                                    i1l5992 0919                                      i1l6946 044D  
                                    i1l6938 0437                                      i1l5996 0928  
                                    i1l6972 0496                                      i1l6974 04A5  
                                    i1l6966 047D                                      i1l6896 03E7  
                                    i1l6888 03DA                                      u420_25 15A7  
                                    u341_25 12CD                                      u342_25 12D3  
                                    u343_25 12DB                                      _OSCCON 0099  
                                    u475_25 0F6C                                      u547_25 0716  
                                    u557_25 15DB                                      _PLLRDY 04D6  
                             CDCTxService@i 00B2                      ??_do_I2C_SEND_ADR_READ 0070  
                                    _WDTCON 0097                    rdBlkRegCompleteHandler@p 0079  
              i1USBTransferOnePacket@handle 0079                                   ??_i2c_ISR 0074  
                            __CFG_PWRTE$OFF 0000                           _shortPacketStatus 01E3  
         __end_ofi1_USBCtrlEPAllowDataStage 15CC                      ?i1_USBStdGetDscHandler 0070  
                           USBDeviceTasks@i 01EF                 USBStdFeatureReqHandler@pUEP 00BC  
                  USBTransferOnePacket@data 00A7                  USBCtrlTrfInHandler@lastDTS 00AB  
                           ??_USBDeviceInit 00A6                 __end_of_do_I2C_DO_NACK_STOP 1D48  
       __end_of_i2c_setDataCompleteCallback 1D82                 _i2c_setDataCompleteCallback 1D76  
                            __CFG_STVREN$ON 0000                        __end_of_getsUSBUSART 16E0  
             __size_ofi1_USBWakeFromSuspend 0020             __size_of_do_I2C_DO_NACK_RESTART 0004  
                         _USBEnableEndpoint 1FDD             __size_of_USBStdGetStatusHandler 0059  
                   ??i1_USBStdSetCfgHandler 0066                                      _memset 1E72  
             __size_ofi1_USBCheckCDCRequest 0060                              ?_do_I2C_DO_ACK 0070  
                      i1USBEnableEndpoint@p 007A                          ?_USBEnableEndpoint 00AD  
                                    _strchr 1E15                                      _strcpy 1EA7  
                                    _strlen 1F1E                                      _strstr 1248  
             __size_of_USBTransferOnePacket 0084              __end_of_do_I2C_DO_ADDRESS_NACK 1036  
                              _CDCTxService 04B2                             ?_WDT_Initialize 0070  
                              ?_returnReset 0079                              ?_putrsUSBUSART 0070  
                       ??_USBEnableEndpoint 00AE                i1USBConfigureEndpoint@handle 0076  
                              ?_mssp_setIRQ 0070                  __end_ofi1_USBCtrlEPService 1628  
                               _CtrlTrfData 0058                                   ??_strncmp 00B0  
                         i1_USBStallHandler 1036                        _controlTransferState 01E2  
                         _SYSTEM_Initialize 1DB2                     __end_of__initialization 0077  
                i1USBTransferOnePacket@data 0071                             ??_i2c_setBuffer 0072  
                          _do_I2C_SEND_STOP 1D3C                          ?i1_USBStallHandler 0070  
                        __size_of_do_I2C_RX 003F                          __size_of_do_I2C_TX 004C  
                  i1_USBCtrlTrfSetupHandler 146F                        __size_ofi1_CDCInitEP 0036  
                        ?_SYSTEM_Initialize 0070                    __size_of_USBStallHandler 002B  
                  __size_of_do_I2C_TX_EMPTY 002A                              __pcstackBANK0h 0060  
                    i1USBCtrlTrfRxService@i 0074                         __size_of_USBSuspend 001F  
                   _rdBlkRegCompleteHandler 1E2B                              __pcstackCOMMON 0070  
                 __end_of_USBEnableEndpoint 2000                         ??i1_USBStallHandler 0070  
                             __end_of_sd000 18DB                               __end_of_sd001 1877  
                             __end_of_sd002 1891                  ??i1_USBStdGetStatusHandler 0070  
                              __pidataBANK5 1FBD                         ??_SYSTEM_Initialize 00AB  
          __size_of_USBCtrlEPAllowDataStage 005F               __size_of_USBConfigureEndpoint 0043  
                   __end_ofi1_USBDeviceInit 0794                     __end_of_i2c_driver_stop 1D16  
               __end_of_USBCtrlTrfInHandler 09AC                      ??i1_USBCheckStdRequest 006D  
                        _i2c_driver_sendACK 1D28                              _OPTION_REGbits 0095  
                                 ?i1_memset 0070                          _i2c_driver_restart 1D10  
                                _cdc_notice 023D                                  _cdc_rx_len 01EA  
                                _cdc_tx_len 01E8                          _i2c_driver_startRX 1D16  
                    ??_i2c_driver_getRXData 0070                   __end_ofi1_USBStallHandler 105B  
                  ??_USBCtrlTrfSetupHandler 00C2                         ?_i2c_driver_sendACK 0070  
                   _USBTicksSinceSuspendEnd 01D6                              setCallBack@idx 0074  
                    _do_I2C_DO_NACK_RESTART 1D48                            ?_USBDeviceAttach 0070  
                            _do_I2C_TX$2627 0072                   __end_of_SYSTEM_Initialize 1DC1  
                    _USBStdGetStatusHandler 1517                               _buttonPressed 01D5  
                       ?_i2c_driver_restart 0070                                  __pbssBANK1 00C3  
                                __pbssBANK3 01B0                                  __pbssBANK4 0220  
                                __pbssBANK6 0320                                  __pbssBANK7 03A0  
                       ?_i2c_driver_startRX 0070              __size_of_rd2RegCompleteHandler 0010  
             __end_of_rd2RegCompleteHandler 1E01              __size_of_wr2RegCompleteHandler 0010  
             __end_of_wr2RegCompleteHandler 1DD1                       _rd1RegCompleteHandler 1DE1  
                          i1_USBDeviceTasks 03CA                 __size_of_USBWakeFromSuspend 0020  
                             ?i1_USBSuspend 0070                                 _pBDTEntryIn 01B7  
                  __size_of_UserApplication 0045            __end_of_USBCtrlEPServiceComplete 0F5D  
                     i1_USBCtrlTrfInHandler 08D3                ??i1_USBCtrlEPServiceComplete 0075  
                     _wr1RegCompleteHandler 1DD1                __size_of_i2c_busCollisionISR 0003  
               __size_of_USBCheckCDCRequest 0063                                  __pmaintext 1000  
                             ??_do_I2C_IDLE 0070                        USBCtrlTrfRxService@i 00AA  
                      __size_of_setCallBack 0028                               ??_do_I2C_RCEN 0070  
                      ??_i2c_driver_sendACK 0070                             __CFG_PLLMULT$3x 0000  
                           ??_do_I2C_DO_ACK 0070                                  __pintentry 0004  
                      ??_i2c_driver_restart 0070                __size_ofi1_USBEnableEndpoint 0020  
              __size_of_i2c_driver_sendNACK 0004                        ??_i2c_driver_startRX 0070  
                                   ?_memset 00A6                                  _device_dsc 18C5  
                       i2c_setBuffer@buffer 0073                            _USBCtrlEPService 1628  
                                _ep_data_in 01CA                __size_of_i2c_driver_resetBus 0001  
                                   ?_strchr 00A6                                     ?_strcpy 00A6  
                                   ?_strlen 00A6                                     ?_strstr 00B3  
               __end_of_USBCtrlTrfRxService 06E7                           __end_of_do_I2C_RX 12C5  
                         __end_of_do_I2C_TX 141F                          _USBCheckStdRequest 179F  
                         _configDescriptor1 1800                             ??_putrsUSBUSART 00A6  
                                ??i1_memset 0076                 __end_of_USBCtrlTrfTxService 0A9A  
                       _USBStdSetCfgHandler 0DA8                                     _OSCTUNE 0098  
                                   u559_2m0 1612                                     _SSP1ADD 0212  
                                   _SSP1BUF 0211                                     _SSP1MSK 0213  
                       ?_USBCheckStdRequest 0070                __size_of_USBStdGetDscHandler 007F  
                   ??_do_I2C_SEND_ADR_WRITE 0071                                     _UIEbits 0E92  
               ??_do_I2C_SEND_RESTART_WRITE 0070         __size_ofi1_USBCtrlEPServiceComplete 0091  
                                   _UIRbits 0E90                               _cdc_trf_state 01E9  
                  ??i1_USBTransferOnePacket 0074                                     _i2c_ISR 1F3D  
                 ??_rdBlkRegCompleteHandler 007A                              ??i1_USBSuspend 0066  
                     __end_of_mssp_clearIRQ 1D22                                     _pCDCDst 01D1  
                                   _pCDCSrc 01D3                       __size_of_getsUSBUSART 005C  
               ??i1_USBCtrlEPAllowDataStage 0073             ??_USBIncrement1msInternalTimers 00A6  
                      ?_USBStdSetCfgHandler 0070                                   _CDCInitEP 120A  
              i1USBCtrlTrfInHandler@lastDTS 0075                  __size_of_USBEnableEndpoint 0023  
                                _readBuffer 0320                        ??_USBCheckStdRequest 00C1  
                     i1_USBCtrlTrfRxService 0F5D               __size_of_USBCtrlTrfOutHandler 0036  
                          ??_USBDeviceTasks 0261                           ??_USBStallHandler 00A6  
                         ??_do_I2C_TX_EMPTY 0070                            ?i1_USBDeviceInit 0070  
                     i1_USBCtrlTrfTxService 09AC                            ?_i2c_driver_stop 0070  
                        getsUSBUSART@buffer 00B4                             __size_of_memset 0019  
                 __end_of_configDescriptor1 1843                                     __ptext1 138E  
                                   __ptext2 1248                                     __ptext3 134A  
                                   __ptext4 1F1E                                     __ptext5 1E15  
                                   __ptext6 1EA7                                     __ptext7 1138  
                                   __ptext8 1684                                     __ptext9 02E1  
                                   _inPipes 00C3                         __end_of_do_I2C_IDLE 1D5A  
               _USBDeferOUTDataStagePackets 01D7                         __end_of_do_I2C_RCEN 1D60  
                           __size_of_strchr 0016                             __size_of_strcpy 001C  
                           __size_of_strlen 001F                             __size_of_strstr 003E  
                     _OSCILLATOR_Initialize 1D8E                                ??_USBSuspend 00BA  
               __end_of_do_I2C_SEND_RESTART 1D3C                    ??_PIN_MANAGER_Initialize 00A6  
                     i1USBEnableEndpoint@ep 007C                  __size_ofi1_USBStallHandler 0025  
                        __end_of_USB_CD_Ptr 18EA                    _do_I2C_SEND_RESTART_READ 1D30  
                __size_of_SYSTEM_Initialize 000F             __size_of_USBCtrlTrfSetupHandler 0050  
                                   clrloop0 1D9B                    ??i1_USBConfigureEndpoint 0071  
                                   _strncmp 134A                        __size_of_returnReset 0002  
                      end_of_initialization 0077                                _getsUSBUSART 1684  
                        __end_of_USB_SD_Ptr 18E5                        __size_of_mssp_setIRQ 0003  
                       _pBDTEntryEP0OutNext 00C8                   __size_of_i2c_restartWrite 0002  
                                   init_ram 1DA6                                     memset@c 00A8  
                                   memset@n 00AA                                     memset@p 00AC  
                    ?_rd1RegCompleteHandler 0079                                     initloop 1DA7  
                           _USB1msTickCount 01C3             _dummy_encapsulated_cmd_response 024F  
                   ??i1_USBStdGetDscHandler 0070                    ?_USBStdFeatureReqHandler 0070  
                    ?i1_USBCtrlTrfInHandler 0070                      ?_wr1RegCompleteHandler 0079  
                     ??_USBStdSetCfgHandler 00BA                                  ?_CDCInitEP 0070  
                        __end_of_USBSuspend 1F1E                     _USBCtrlEPAllowDataStage 16E0  
                 _do_I2C_SEND_RESTART_WRITE 1D34                    _USBCtrlEPServiceComplete 0EC8  
                         ??_UserApplication 00B9                                     strlen@s 00A6  
                _USBStatusStageEnabledFlag1 01DA                  _USBStatusStageEnabledFlag2 01D9  
                          ??_WDT_Initialize 00A6                          USBEnableEndpoint@p 00B0  
                                _returnStop 1D0C              __size_ofi1_USBStdSetCfgHandler 008F  
           __end_of_rdBlkRegCompleteHandler 1E42                    __end_of_do_I2C_SEND_STOP 1D40  
             __end_ofi1_USBStdSetCfgHandler 0DA8                   i1_USBCtrlEPAllowDataStage 1570  
                          __CFG_FOSC$INTOSC 0000        __size_of_i2c_setDataCompleteCallback 000C  
                        _BothEP0OutUOWNsSet 01DD                  ??i1_USBCtrlTrfSetupHandler 006E  
                 USBStdSetCfgHandler@i_2163 00BD                __end_ofi1_USBWakeFromSuspend 1F9D  
                               returnStop@p 0079                   USBConfigureEndpoint@EPNum 00AB  
              ?i1_USBCtrlEPAllowStatusStage 0070                  ?_USBCtrlEPAllowStatusStage 0070  
              __end_ofi1_USBCheckCDCRequest 179F       i1USER_USB_CALLBACK_EVENT_HANDLER@size 0064  
       USER_USB_CALLBACK_EVENT_HANDLER@size 00B8                                   _USTATcopy 01ED  
              i2c_setDataCompleteCallback@p 0077                    i1USBTransferOnePacket@ep 0078  
              __end_of_USBTransferOnePacket 0D19             __size_ofi1_USBTransferOnePacket 0083  
        __end_ofi1_USBCtrlEPServiceComplete 0EC8                  i1_USBCtrlEPServiceComplete 0E37  
             __size_of_do_I2C_SEND_ADR_READ 0008                          i1_USBCtrlEPService 15CC  
                        __CFG_PLLEN$ENABLED 0000                       i1USBDeviceInit@i_1491 0073  
                    ?i1_USBCtrlTrfRxService 0070                                 _do_I2C_IDLE 1D55  
                    _USBCtrlTrfSetupHandler 141F                                 _do_I2C_RCEN 1D5A  
                    ?i1_USBCtrlTrfTxService 0070                       __end_of_USBDeviceInit 0635  
     __end_of_USBIncrement1msInternalTimers 1EA7      __size_of_USBIncrement1msInternalTimers 001C  
             _USBIncrement1msInternalTimers 1E8B                                   i1memset@c 0072  
                                 i1memset@n 0074                                   i1memset@p 0076  
                       ?i1_USBCtrlEPService 0070        __end_of_i2c_driver_clearBusCollision 1D25  
     __size_of_i2c_driver_clearBusCollision 0003                _i2c_driver_clearBusCollision 1D22  
                    ?_OSCILLATOR_Initialize 0070                          putrsUSBUSART@pData 00A7  
                            __end_of_memset 1E8B                __size_of_do_I2C_DO_NACK_STOP 0004  
                         _USBBusIsSuspended 01DF                        __end_ofi1_USBSuspend 1EFF  
                  __end_ofi1_USBDeviceTasks 04B2                              __end_of_strchr 1E2B  
                            __end_of_strcpy 1EC3                              __end_of_strlen 1F3D  
                   ?_do_I2C_DO_NACK_RESTART 0070                              __end_of_strstr 1286  
                       start_initialization 0036                     ?_USBStdGetStatusHandler 0070  
             USBCtrlTrfRxService@byteToRead 00AB                         _i2c_busCollisionISR 1D25  
           __size_of_PIN_MANAGER_Initialize 0014                    ??i1_USBCtrlTrfOutHandler 0076  
                         __size_ofi1_memset 0018                                 _cdc_data_rx 20C0  
                               _cdc_data_tx 2080                __end_of_USBConfigureEndpoint 134A  
                              setCallBack@p 0072             __end_of_USBStdFeatureReqHandler 01B8  
                       i1_USBEnableEndpoint 1F5D             __size_ofi1_USBConfigureEndpoint 0042  
                       _i2c_driver_sendNACK 1D2C                               ??i1_CDCInitEP 007D  
         __end_of_USBCtrlEPAllowStatusStage 0B14                        ??i1_USBCtrlEPService 00A0  
                   i2c_setBuffer@bufferSize 0070                      rd1RegCompleteHandler@p 0079  
             ??i1_USBCtrlEPAllowStatusStage 0070                    __end_of_USBCtrlEPService 1684  
                       _i2c_driver_resetBus 1D0B               i1USBStdFeatureReqHandler@pUEP 0068  
                     __end_of_i2c_setBuffer 080E                   ??_USBCtrlEPAllowDataStage 00A9  
                               ??_CDCInitEP 00B3                              USBDeviceInit@i 00AA  
                            USBDeviceInit@p 00A7                        ?_i2c_busCollisionISR 0070  
               i1USBStdSetCfgHandler@i_2163 0069                      _pBDTEntryEP0OutCurrent 01E4  
        __size_ofi1_USBStdFeatureReqHandler 0129                     USBTransferOnePacket@dir 00A6  
                   USBTransferOnePacket@len 00A9                  ?i1_USBStdFeatureReqHandler 0070  
               i1USBConfigureEndpoint@EPNum 0075                         _USBStdGetDscHandler 0B93  
                    wr1RegCompleteHandler@p 0079                        ?i1_USBEnableEndpoint 0077  
                      ?_i2c_driver_sendNACK 0070                               ?_do_I2C_RESET 0070  
                               __pdataBANK5 02A0                                    ??_memset 00AC  
                               ?_returnStop 0079                        ?_i2c_driver_resetBus 0070  
                    i1_USBTransferOnePacket 0C12                                    ??_strchr 00A8  
                                  ??_strcpy 00A7                                    ??_strlen 00A8  
                         _i2c_driver_TXData 1D50              __end_of_do_I2C_DO_NACK_RESTART 1D4C  
                                  ??_strstr 00B5               ?_i2c_driver_clearBusCollision 0070  
             __size_ofi1_USBCheckStdRequest 0062                           _i2c_driver_i2cISR 024B  
                    _USBActiveConfiguration 01EE              __end_of_USBStdGetStatusHandler 1570  
                 i1USBTransferOnePacket@dir 0070                   i1USBTransferOnePacket@len 0073  
                        ?_i2c_driver_TXData 0070                                   ___latbits 0002  
                             __pcstackBANK1 00A0                               __pcstackBANK3 01EF  
              __size_of_USBCtrlTrfInHandler 0071                               __pcstackBANK4 025E  
                                 _do_I2C_RX 1286                                   _do_I2C_TX 13D3  
         __size_ofi1_USBStdGetStatusHandler 0055                           _i2c_driver_isNACK 1D82  
                 ?i1_USBStdGetStatusHandler 0070                        ?_USBStdGetDscHandler 0070  
             __size_of_i2c_driver_getRXData 0003                          ?_i2c_driver_isNACK 0070  
                       ??_i2c_driver_TXData 0070              __size_of_do_I2C_SEND_ADR_WRITE 0007  
             __end_of_do_I2C_SEND_ADR_WRITE 1D6E                            _i2c_restartWrite 0002  
                __end_of_USBWakeFromSuspend 1FBD                             _USBStallHandler 10AD  
                                  ?_i2c_ISR 0070                                _pBDTEntryOut 01BD  
                           _do_I2C_TX_EMPTY 1083                  __end_of_USBCheckCDCRequest 08D3  
                             ??_setCallBack 0073                       _rd2RegCompleteHandler 1DF1  
                  __size_of_USBDeviceAttach 001D                         ??_i2c_driver_isNACK 0070  
                     ??_i2c_busCollisionISR 0070                         __end_ofi1_CDCInitEP 11D4  
                    _PIN_MANAGER_Initialize 1E01                       _wr2RegCompleteHandler 1DC1  
               __size_of_i2c_driver_sendACK 0004                       ??i1_USBEnableEndpoint 0078  
                            ??_do_I2C_RESET 0070                                   __ptext100 1DD1  
                                 __ptext101 0002                                   __ptext110 1D28  
                                 __ptext102 1D0E                                   __ptext103 1D0C  
                                 __ptext104 1DC1                                   __ptext105 1D76  
                                 __ptext106 105B                                   __ptext107 0800  
                                 __ptext108 1D13                       ??_i2c_driver_sendNACK 0070  
                                 __ptext109 1D10                      i1_USBConfigureEndpoint 12C5  
         __end_ofi1_USBStdFeatureReqHandler 02E1                        i1_USBWakeFromSuspend 1F7D  
                  ??_do_I2C_DO_ADDRESS_NACK 0070        __size_ofi1_USBCtrlEPAllowStatusStage 006C  
               __size_of_i2c_driver_restart 0003                   __end_of_i2c_driver_TXData 1D55  
                      i1_USBCheckCDCRequest 173F                       __end_of_do_I2C_DO_ACK 1D44  
                     ??_i2c_driver_resetBus 0070                 __size_of_i2c_driver_startRX 0003  
              ??_INTERRUPT_InterruptManager 00A5                                   __pswtext1 1891  
                                 __pswtext2 18AB                  ??_do_I2C_SEND_RESTART_READ 0070  
                      _USBTransferOnePacket 0C95                   __end_of_i2c_driver_isNACK 1D8E  
        __size_of_do_I2C_SEND_RESTART_WRITE 0004                       __end_of_putrsUSBUSART 1168  
                                ?_do_I2C_RX 0070                                  ?_do_I2C_TX 0070  
              __end_of_USBCtrlTrfOutHandler 120A                       ??_USBStdGetDscHandler 00A6  
                               _ep_data_out 01C7             __size_ofi1_USBCtrlTrfOutHandler 0036  
              __size_of_USBCtrlTrfRxService 00B2               USBConfigureEndpoint@direction 00A6  
                   ??_rd1RegCompleteHandler 007A                                    ?_strncmp 00AC  
           i1USBCtrlTrfRxService@byteToRead 0075                     ??i1_USBCtrlTrfInHandler 0073  
                   ??_wr1RegCompleteHandler 007A                __size_of_USBCtrlTrfTxService 007A  
                           _UserApplication 138E                         __size_of_returnStop 0002  
                ??_USBCtrlEPServiceComplete 00AB                                   clear_ram0 1D9A  
                                  _PIE1bits 0091                                    _PIE2bits 0092  
            __size_ofi1_USBStdGetDscHandler 007F               __end_ofi1_USBStdGetDscHandler 0B93  
       __size_of_INTERRUPT_InterruptManager 0030                                    _PIR1bits 0011  
                                  _PIR2bits 0012                                    _UEP0bits 0E98  
                _USBDeferINDataStagePackets 01D8                       ?i1_USBWakeFromSuspend 0070  
                                  _SSP1CON1 0215                                    _SSP1CON2 0216  
               __size_of_USBCheckStdRequest 0061                ?_i2c_setDataCompleteCallback 0075  
                                  _SSP1STAT 0214                                    _UCONbits 0E8E  
                       __end_of_setCallBack 1083                       ?i1_USBCheckCDCRequest 0070  
                      _USBConfigureEndpoint 1307                       __size_ofi1_USBSuspend 001F  
          __size_of_USBStdFeatureReqHandler 013D                       ?_USBTransferOnePacket 00A6  
                         ?_do_I2C_SEND_STOP 0070                               ?_CDCTxService 0070  
                                  i1_memset 1E42                                _RemoteWakeup 01E0  
                             ??_returnReset 007A                          ??_do_I2C_SEND_STOP 0070  
                    __size_of_mssp_clearIRQ 0003                    __size_ofi1_USBDeviceInit 00AD  
                  __size_of_i2c_driver_stop 0003           __end_of_do_I2C_SEND_RESTART_WRITE 1D38  
                             ??_mssp_setIRQ 0070              ??_i2c_driver_clearBusCollision 0070  
                   __end_of_USBStallHandler 10D8                     __end_of_do_I2C_TX_EMPTY 10AD  
                  ?_rdBlkRegCompleteHandler 0079                           putrsUSBUSART@data 00A8  
               ??_USBCtrlEPAllowStatusStage 00A6                 __end_of_USBStdSetCfgHandler 0E37  
              __size_of_do_I2C_SEND_RESTART 0004                                 i1_CDCInitEP 119E  
                    ?_rd2RegCompleteHandler 0079                          __end_of_device_dsc 18D7  
                   ??i1_USBCtrlTrfRxService 0072                         _do_I2C_DO_NACK_STOP 1D44  
                         i1USBDeviceTasks@i 006F                            __size_of_i2c_ISR 0020  
                    ?_wr2RegCompleteHandler 0079                     ?_USBCtrlTrfSetupHandler 0070  
               ?i1_USBCtrlEPServiceComplete 0070                                i1_USBSuspend 1EE0  
                   USBStdGetStatusHandler@p 00A7                     ??i1_USBCtrlTrfTxService 0070  
                    USBTransferOnePacket@ep 00AE                      i1_USBCtrlTrfOutHandler 1168  
                              ?_do_I2C_IDLE 0070                                    _SetupPkt 0050  
                              ?_do_I2C_RCEN 0070                     ??_OSCILLATOR_Initialize 00A6  
                     ?_USBConfigureEndpoint 00A6                           ??_USBDeviceAttach 00A6  
                __size_of_i2c_driver_TXData 0005             __size_of_do_I2C_DO_ADDRESS_NACK 0024  
             ??_i2c_setDataCompleteCallback 0078                   i1USBStdGetStatusHandler@p 0071  
                      ?_do_I2C_DO_NACK_STOP 0070                                 _line_coding 0257  
              __end_of_do_I2C_SEND_ADR_READ 1D76                              ??_CDCTxService 00B1  
                __size_of_i2c_driver_isNACK 000C                       i1_USBStdSetCfgHandler 0D19  
                         ?i1_USBDeviceTasks 0070                     __size_of_USBDeviceTasks 00E9  
                               ??_do_I2C_RX 0070                                 ??_do_I2C_TX 0071  
                                  __ptext10 1F9D                                    __ptext11 1EFF  
                                  __ptext20 1E72                                    __ptext12 10AD  
                                  __ptext21 1517                                    __ptext13 1E8B  
                                  __ptext30 0635                                    __ptext22 0B93  
                                  __ptext14 1628                                    __ptext31 0A9A  
                                  __ptext23 007B                                    __ptext15 141F  
                                  __ptext40 04B2                                    __ptext32 093B  
                                  __ptext24 1108                                    __ptext16 0EC8  
                                  __ptext41 0C95                                    __ptext33 0A20  
                                  __ptext25 0870                                    __ptext17 16E0  
                                  __ptext50 146F                                    __ptext34 1DB2  
                                  __ptext26 120A                                    __ptext18 179F  
                                  __ptext51 0E37                                    __ptext43 03CA  
                                  __ptext35 1D4C                                    __ptext27 1FDD  
                                  __ptext19 0DA8                                    __ptext60 173F  
                                  __ptext52 1570                                    __ptext44 1F7D  
                                  __ptext36 057E                                    __ptext28 1307  
                                  __ptext61 119E                                    __ptext53 080E  
                                  __ptext45 1EE0                                    __ptext37 1EC3  
                                  __ptext29 11D4                                    __ptext70 1D25  
                                  __ptext62 0C12                                    __ptext54 0D19  
                                  __ptext46 1036                                    __ptext38 1E01  
                                  __ptext71 1D22                                    __ptext63 1F5D  
                                  __ptext55 1E42                                    __ptext47 1E5A  
                                  __ptext39 1D8E                                    __ptext80 1D5A  
                                  __ptext72 1F3D                                    __ptext64 12C5  
                                  __ptext56 14C2                                    __ptext48 06E7  
                                  __ptext81 1D67                                    __ptext73 1D1F  
                                  __ptext65 1168                                    __ptext57 0B14  
                                  __ptext49 15CC                                    __ptext90 1D1C  
                                  __ptext82 1D6E                                    __ptext74 1286  
                                  __ptext66 0F5D                                    __ptext58 01B8  
                                  __ptext91 1D82                                    __ptext83 1D3C  
                                  __ptext75 13D3                                    __ptext67 0794  
                                  __ptext59 10D8                                    __ptext92 1D50  
                                  __ptext84 1D38                                    __ptext76 1012  
                                  __ptext68 08D3                                    __ptext93 1D19  
                                  __ptext85 1D34                                    __ptext77 1D48  
                                  __ptext69 09AC                                    __ptext94 1D2C  
                                  __ptext86 1D30                                    __ptext78 1D44  
                                  __ptext95 1D0B                                    __ptext87 1D55  
                                  __ptext79 1D40                                    __ptext96 1D16  
                                  __ptext88 1D60                                    __ptext97 1E2B  
                                  __ptext89 1083                                    __ptext98 1DF1  
                                  __ptext99 1DE1                          ??i1_USBDeviceTasks 00A3  
                              _SSP1CON1bits 0215                                _SSP1CON2bits 0216  
                   __end_of_UserApplication 13D3                        __end_of_do_I2C_RESET 1D67  
                          __size_of_strncmp 0044                                  strcpy@from 00A6  
                       __end_of_returnReset 1D10              __end_of_USBCtrlTrfSetupHandler 146F  
                             __size_of_main 0012                           ?_USBCtrlEPService 0070  
                       __end_of_mssp_setIRQ 1D1F             i1USBConfigureEndpoint@direction 0070  
                                strncmp@len 00AE                                 _setCallBack 105B  
                        ??_USBCtrlEPService 025E                               _mssp_clearIRQ 1D1F  
                       _USBCtrlTrfInHandler 093B           __size_ofi1_USBCtrlTrfSetupHandler 0053  
                    ??i1_USBWakeFromSuspend 0066                   ?i1_USBCtrlTrfSetupHandler 0070  
                                  _outPipes 01B0                 ??i1_USBStdFeatureReqHandler 0066  
                    ??i1_USBCheckCDCRequest 0070                        _USBCtrlTrfOutHandler 11D4  
                                  int$flags 007E                     ?i1_USBTransferOnePacket 0070  
                 _USBCtrlEPAllowStatusStage 0A9A            __end_ofi1_USBStdGetStatusHandler 1517  
        __end_of_INTERRUPT_InterruptManager 0034                  _INTERRUPT_InterruptManager 0004  
                              _SSP1STATbits 0214                      ??_USBTransferOnePacket 00AA  
          __end_of_do_I2C_SEND_RESTART_READ 1D34                                ??_returnStop 007A  
                  __end_of_i2c_restartWrite 0004                       ??_do_I2C_DO_NACK_STOP 0070  
                          putrsUSBUSART@len 00A9                   _USBDeferStatusStagePacket 01DB  
                  CDCTxService@byte_to_send 00B3                            i1USBDeviceInit@i 0074  
                          i1USBDeviceInit@p 0071                                  _INTCONbits 000B  
                      ?_USBCtrlTrfInHandler 0070               USBCtrlTrfTxService@byteToSend 00A8  
                                  memset@p1 00A6                            ?_USBStallHandler 0070  
                  USBStdFeatureReqHandler@p 00BF                            ?_do_I2C_TX_EMPTY 0070  
                   __size_of_WDT_Initialize 0004                      _do_I2C_DO_ADDRESS_NACK 1012  
                                  intlevel1 0000                      __size_of_USBDeviceInit 00B7  
               __size_ofi1_USBCtrlEPService 005C                      rd2RegCompleteHandler@p 0079  
 __end_ofi1_USER_USB_CALLBACK_EVENT_HANDLER 1108  __size_ofi1_USER_USB_CALLBACK_EVENT_HANDLER 0030  
   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 1138    __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0030  
        ?i1_USER_USB_CALLBACK_EVENT_HANDLER 0060         ??i1_USER_USB_CALLBACK_EVENT_HANDLER 007E  
         ??_USER_USB_CALLBACK_EVENT_HANDLER 00BA            ?_USER_USB_CALLBACK_EVENT_HANDLER 00B4  
         i1_USER_USB_CALLBACK_EVENT_HANDLER 10D8             _USER_USB_CALLBACK_EVENT_HANDLER 1108  
                                 strchr@chr 00A6                           ??i1_USBDeviceInit 0070  
                                 strchr@ptr 00A8                __end_ofi1_USBCheckStdRequest 0870  
                         ??_i2c_driver_stop 0070                     ?_PIN_MANAGER_Initialize 0070  
                         i2c_restartWrite@p 0079                           __CFG_CLKOUTEN$OFF 0000  
                        __end_of_returnStop 1D0E                              ?_mssp_clearIRQ 0070  
                                 strncmp@s1 00B2                                   strncmp@s2 00AC  
                   ?i1_USBConfigureEndpoint 0070              __end_ofi1_USBTransferOnePacket 0C95  
                    ??_USBConfigureEndpoint 00A7                       ?_USBCtrlTrfOutHandler 0070  
              __end_of_i2c_driver_getRXData 1D1C                        __CFG_CPUDIV$NOCLKDIV 0000  
                    wr2RegCompleteHandler@p 0079                         _USBCtrlTrfRxService 0635  
                        _USBWakeFromSuspend 1F9D                     _USBStdFeatureReqHandler 007B  
                        _USBCheckCDCRequest 0870                         _USBCtrlTrfTxService 0A20  
                             __pstringtext1 18DF                               __pstringtext2 18E8  
                             __pstringtext3 1800                               __pstringtext4 1843  
                             __pstringtext5 1877                               __pstringtext6 18C5  
                             __pstringtext7 18D7                               __pstringtext8 18E5  
                             __pstringtext9 0000                  i1USBStdFeatureReqHandler@p 006B  
                    ?i1_USBStdSetCfgHandler 0070                      i1USBStdSetCfgHandler@i 006A  
                    i1USBStdSetCfgHandler@p 0067                         ?_USBWakeFromSuspend 0070  
                     ??_USBCtrlTrfInHandler 00A9                                    strcpy@cp 00A9  
                                  strlen@cp 00AA                                    strcpy@to 00A8  
                     _USBAlternateInterface 01EB                      __size_of_i2c_setBuffer 000E  
                       ?_USBCheckCDCRequest 0070                                 _returnReset 1D0E  
                       USBEnableEndpoint@ep 00B2                                    strstr@s1 00B8  
                                  strstr@s2 00B3                   i1_USBStdFeatureReqHandler 01B8  
                           _endpoint_number 01DE                                 _mssp_setIRQ 1D1C  
       __end_ofi1_USBCtrlEPAllowStatusStage 0800                 i1_USBCtrlEPAllowStatusStage 0794  
                      ?_USBCtrlTrfRxService 0070                            ?_UserApplication 0070  
                             ?_getsUSBUSART 00B1              __end_of_PIN_MANAGER_Initialize 1E15  
               __end_of_i2c_busCollisionISR 1D28                    ?_USBCtrlEPAllowDataStage 0070  
                      ?_USBCtrlTrfTxService 0070              __size_of_rd1RegCompleteHandler 0010  
             __end_of_rd1RegCompleteHandler 1DF1              __size_ofi1_USBCtrlTrfInHandler 0068  
              _USBStatusStageTimeoutCounter 01DC               __end_ofi1_USBCtrlTrfInHandler 093B  
            __size_of_wr1RegCompleteHandler 0010               __end_of_wr1RegCompleteHandler 1DE1  
            __end_ofi1_USBConfigureEndpoint 1307                       _do_I2C_SEND_ADR_WRITE 1D67  
                      ??_USBWakeFromSuspend 00BA                 __end_ofi1_USBEnableEndpoint 1F7D  
               __end_of_i2c_driver_sendNACK 1D30                  USBTransferOnePacket@handle 00AF  
                      __end_of_CDCTxService 057E                        _do_I2C_SEND_ADR_READ 1D6E  
                __end_of_i2c_driver_sendACK 1D2C                        ??_USBCheckCDCRequest 00A6  
                                _USB_CD_Ptr 18E8                 __end_of_i2c_driver_resetBus 1D0C  
