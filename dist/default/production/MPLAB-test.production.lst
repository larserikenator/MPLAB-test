

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Mar 18 14:35:42 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1454
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK5,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	cinit,global,class=CODE,merge=1,delta=2
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    18                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1
    19                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    20                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1
    21                           	psect	inittext,global,class=CODE,delta=2
    22                           	psect	clrtext,global,class=CODE,delta=2
    23                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    24                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    25                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    26                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    27                           	psect	cstackBANK0h,global,class=BANK0,space=1,delta=1
    28                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    29                           	psect	text1,local,class=CODE,merge=1,delta=2
    30                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text7,local,class=CODE,merge=1,delta=2
    36                           	psect	text8,local,class=CODE,merge=1,delta=2
    37                           	psect	text9,local,class=CODE,merge=1,delta=2
    38                           	psect	text10,local,class=CODE,merge=1,delta=2
    39                           	psect	text11,local,class=CODE,merge=1,delta=2
    40                           	psect	text12,local,class=CODE,merge=1,delta=2
    41                           	psect	text13,local,class=CODE,merge=1,delta=2
    42                           	psect	text14,local,class=CODE,merge=1,delta=2
    43                           	psect	text15,local,class=CODE,merge=1,delta=2
    44                           	psect	text16,local,class=CODE,merge=1,delta=2
    45                           	psect	text17,local,class=CODE,merge=1,delta=2
    46                           	psect	text18,local,class=CODE,merge=1,delta=2
    47                           	psect	swtext1,local,class=CONST,delta=2
    48                           	psect	text19,local,class=CODE,merge=1,delta=2
    49                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text21,local,class=CODE,merge=1,delta=2
    51                           	psect	text22,local,class=CODE,merge=1,delta=2
    52                           	psect	text23,local,class=CODE,merge=1,delta=2
    53                           	psect	text24,local,class=CODE,merge=1,delta=2
    54                           	psect	text25,local,class=CODE,merge=1,delta=2
    55                           	psect	text26,local,class=CODE,merge=1,delta=2
    56                           	psect	text27,local,class=CODE,merge=1,delta=2
    57                           	psect	text28,local,class=CODE,merge=1,delta=2
    58                           	psect	text29,local,class=CODE,merge=1,delta=2
    59                           	psect	text30,local,class=CODE,merge=1,delta=2
    60                           	psect	text31,local,class=CODE,merge=1,delta=2
    61                           	psect	text32,local,class=CODE,merge=1,delta=2
    62                           	psect	text33,local,class=CODE,merge=1,delta=2
    63                           	psect	text34,local,class=CODE,merge=1,delta=2
    64                           	psect	text35,local,class=CODE,merge=1,delta=2
    65                           	psect	text36,local,class=CODE,merge=1,delta=2
    66                           	psect	text37,local,class=CODE,merge=1,delta=2
    67                           	psect	text38,local,class=CODE,merge=1,delta=2
    68                           	psect	text39,local,class=CODE,merge=1,delta=2
    69                           	psect	text40,local,class=CODE,merge=1,delta=2
    70                           	psect	text41,local,class=CODE,merge=1,delta=2
    71                           	psect	text42,local,class=CODE,merge=1,delta=2
    72                           	psect	intentry,global,class=CODE,delta=2
    73                           	psect	text44,local,class=CODE,merge=1,delta=2
    74                           	psect	text45,local,class=CODE,merge=1,delta=2
    75                           	psect	text46,local,class=CODE,merge=1,delta=2
    76                           	psect	text47,local,class=CODE,merge=1,delta=2
    77                           	psect	text48,local,class=CODE,merge=1,delta=2
    78                           	psect	text49,local,class=CODE,merge=1,delta=2
    79                           	psect	text50,local,class=CODE,merge=1,delta=2
    80                           	psect	text51,local,class=CODE,merge=1,delta=2
    81                           	psect	text52,local,class=CODE,merge=1,delta=2
    82                           	psect	text53,local,class=CODE,merge=1,delta=2
    83                           	psect	text54,local,class=CODE,merge=1,delta=2
    84                           	psect	swtext2,local,class=CONST,delta=2
    85                           	psect	text55,local,class=CODE,merge=1,delta=2
    86                           	psect	text56,local,class=CODE,merge=1,delta=2
    87                           	psect	text57,local,class=CODE,merge=1,delta=2
    88                           	psect	text58,local,class=CODE,merge=1,delta=2
    89                           	psect	text59,local,class=CODE,merge=1,delta=2
    90                           	psect	text60,local,class=CODE,merge=1,delta=2
    91                           	psect	text61,local,class=CODE,merge=1,delta=2
    92                           	psect	text62,local,class=CODE,merge=1,delta=2
    93                           	psect	text63,local,class=CODE,merge=1,delta=2
    94                           	psect	text64,local,class=CODE,merge=1,delta=2
    95                           	psect	text65,local,class=CODE,merge=1,delta=2
    96                           	psect	text66,local,class=CODE,merge=1,delta=2
    97                           	psect	text67,local,class=CODE,merge=1,delta=2
    98                           	psect	text68,local,class=CODE,merge=1,delta=2
    99                           	psect	text69,local,class=CODE,merge=1,delta=2
   100                           	psect	text70,local,class=CODE,merge=1,delta=2
   101                           	psect	text71,local,class=CODE,merge=1,delta=2
   102                           	psect	text72,local,class=CODE,merge=1,inline,delta=2
   103                           	psect	text73,local,class=CODE,merge=1,delta=2
   104                           	psect	text74,local,class=CODE,merge=1,inline,delta=2
   105                           	psect	text75,local,class=CODE,merge=1,delta=2
   106                           	psect	text76,local,class=CODE,merge=1,delta=2
   107                           	psect	text77,local,class=CODE,merge=1,delta=2
   108                           	psect	text78,local,class=CODE,merge=1,delta=2
   109                           	psect	text79,local,class=CODE,merge=1,delta=2
   110                           	psect	text80,local,class=CODE,merge=1,delta=2
   111                           	psect	text81,local,class=CODE,merge=1,delta=2
   112                           	psect	text82,local,class=CODE,merge=1,delta=2
   113                           	psect	text83,local,class=CODE,merge=1,delta=2
   114                           	psect	text84,local,class=CODE,merge=1,delta=2
   115                           	psect	text85,local,class=CODE,merge=1,delta=2
   116                           	psect	text86,local,class=CODE,merge=1,delta=2
   117                           	psect	text87,local,class=CODE,merge=1,delta=2
   118                           	psect	text88,local,class=CODE,merge=1,delta=2
   119                           	psect	text89,local,class=CODE,merge=1,delta=2
   120                           	psect	text90,local,class=CODE,merge=1,delta=2
   121                           	psect	text91,local,class=CODE,merge=1,inline,delta=2
   122                           	psect	text92,local,class=CODE,merge=1,inline,delta=2
   123                           	psect	text93,local,class=CODE,merge=1,inline,delta=2
   124                           	psect	text94,local,class=CODE,merge=1,inline,delta=2
   125                           	psect	text95,local,class=CODE,merge=1,inline,delta=2
   126                           	psect	text96,local,class=CODE,merge=1,inline,delta=2
   127                           	psect	text97,local,class=CODE,merge=1,inline,delta=2
   128                           	psect	text98,local,class=CODE,merge=1,delta=2
   129                           	psect	text99,local,class=CODE,merge=1,delta=2
   130                           	psect	text100,local,class=CODE,merge=1,delta=2
   131                           	psect	text101,local,class=CODE,merge=1,delta=2
   132                           	psect	text102,local,class=CODE,merge=1,delta=2
   133                           	psect	text103,local,class=CODE,merge=1,delta=2
   134                           	psect	text104,local,class=CODE,merge=1,delta=2
   135                           	psect	text105,local,class=CODE,merge=1,delta=2
   136                           	psect	text106,local,class=CODE,merge=1,delta=2
   137                           	psect	text107,local,class=CODE,merge=1,delta=2
   138                           	psect	text108,local,class=CODE,merge=1,delta=2
   139                           	psect	text109,local,class=CODE,merge=1,inline,delta=2
   140                           	psect	text110,local,class=CODE,merge=1,inline,delta=2
   141                           	psect	text111,local,class=CODE,merge=1,inline,delta=2
   142                           	dabs	1,0x120,32
   143                           	dabs	1,0xD0,32
   144                           	dabs	1,0x1A0,16
   145                           	dabs	1,0x140,48
   146                           	dabs	1,0x20,48,_BDT
   147                           	dabs	1,0x50,8,_SetupPkt
   148                           	dabs	1,0x58,8,_CtrlTrfData
   149                           	dabs	1,0x7E,2
   150  0000                     
   151                           ; Version 1.45
   152                           ; Generated 16/11/2017 GMT
   153                           ; 
   154                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   155                           ; All rights reserved.
   156                           ; 
   157                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   158                           ; 
   159                           ; Redistribution and use in source and binary forms, with or without modification, are
   160                           ; permitted provided that the following conditions are met:
   161                           ; 
   162                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   163                           ;        conditions and the following disclaimer.
   164                           ; 
   165                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   166                           ;        of conditions and the following disclaimer in the documentation and/or other
   167                           ;        materials provided with the distribution.
   168                           ; 
   169                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   170                           ;        software without specific prior written permission.
   171                           ; 
   172                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   173                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   174                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   175                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   176                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   177                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   178                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   179                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   180                           ; 
   181                           ; 
   182                           ; Code-generator required, PIC16F1454 Definitions
   183                           ; 
   184                           ; SFR Addresses
   185  0000                     	;# 
   186  0001                     	;# 
   187  0002                     	;# 
   188  0003                     	;# 
   189  0004                     	;# 
   190  0005                     	;# 
   191  0006                     	;# 
   192  0007                     	;# 
   193  0008                     	;# 
   194  0009                     	;# 
   195  000A                     	;# 
   196  000B                     	;# 
   197  000C                     	;# 
   198  000E                     	;# 
   199  0011                     	;# 
   200  0012                     	;# 
   201  0015                     	;# 
   202  0016                     	;# 
   203  0016                     	;# 
   204  0017                     	;# 
   205  0018                     	;# 
   206  0019                     	;# 
   207  001A                     	;# 
   208  001B                     	;# 
   209  001C                     	;# 
   210  008C                     	;# 
   211  008E                     	;# 
   212  0091                     	;# 
   213  0092                     	;# 
   214  0095                     	;# 
   215  0096                     	;# 
   216  0097                     	;# 
   217  0098                     	;# 
   218  0099                     	;# 
   219  009A                     	;# 
   220  010C                     	;# 
   221  010E                     	;# 
   222  0116                     	;# 
   223  0117                     	;# 
   224  011D                     	;# 
   225  018C                     	;# 
   226  018E                     	;# 
   227  0191                     	;# 
   228  0191                     	;# 
   229  0192                     	;# 
   230  0193                     	;# 
   231  0193                     	;# 
   232  0194                     	;# 
   233  0195                     	;# 
   234  0196                     	;# 
   235  0197                     	;# 
   236  0199                     	;# 
   237  019A                     	;# 
   238  019B                     	;# 
   239  019B                     	;# 
   240  019C                     	;# 
   241  019D                     	;# 
   242  019E                     	;# 
   243  019F                     	;# 
   244  020C                     	;# 
   245  0211                     	;# 
   246  0211                     	;# 
   247  0212                     	;# 
   248  0212                     	;# 
   249  0213                     	;# 
   250  0213                     	;# 
   251  0214                     	;# 
   252  0214                     	;# 
   253  0215                     	;# 
   254  0215                     	;# 
   255  0215                     	;# 
   256  0216                     	;# 
   257  0216                     	;# 
   258  0217                     	;# 
   259  0217                     	;# 
   260  0391                     	;# 
   261  0392                     	;# 
   262  0393                     	;# 
   263  039A                     	;# 
   264  039B                     	;# 
   265  0611                     	;# 
   266  0612                     	;# 
   267  0613                     	;# 
   268  0613                     	;# 
   269  0614                     	;# 
   270  0615                     	;# 
   271  0616                     	;# 
   272  0616                     	;# 
   273  0E8E                     	;# 
   274  0E8F                     	;# 
   275  0E90                     	;# 
   276  0E91                     	;# 
   277  0E92                     	;# 
   278  0E93                     	;# 
   279  0E94                     	;# 
   280  0E94                     	;# 
   281  0E95                     	;# 
   282  0E96                     	;# 
   283  0E97                     	;# 
   284  0E98                     	;# 
   285  0E99                     	;# 
   286  0E9A                     	;# 
   287  0E9B                     	;# 
   288  0E9C                     	;# 
   289  0E9D                     	;# 
   290  0E9E                     	;# 
   291  0E9F                     	;# 
   292  0FE4                     	;# 
   293  0FE5                     	;# 
   294  0FE6                     	;# 
   295  0FE7                     	;# 
   296  0FE8                     	;# 
   297  0FE9                     	;# 
   298  0FEA                     	;# 
   299  0FEB                     	;# 
   300  0FED                     	;# 
   301  0FEE                     	;# 
   302  0FEF                     	;# 
   303  0000                     	;# 
   304  0001                     	;# 
   305  0002                     	;# 
   306  0003                     	;# 
   307  0004                     	;# 
   308  0005                     	;# 
   309  0006                     	;# 
   310  0007                     	;# 
   311  0008                     	;# 
   312  0009                     	;# 
   313  000A                     	;# 
   314  000B                     	;# 
   315  000C                     	;# 
   316  000E                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0015                     	;# 
   320  0016                     	;# 
   321  0016                     	;# 
   322  0017                     	;# 
   323  0018                     	;# 
   324  0019                     	;# 
   325  001A                     	;# 
   326  001B                     	;# 
   327  001C                     	;# 
   328  008C                     	;# 
   329  008E                     	;# 
   330  0091                     	;# 
   331  0092                     	;# 
   332  0095                     	;# 
   333  0096                     	;# 
   334  0097                     	;# 
   335  0098                     	;# 
   336  0099                     	;# 
   337  009A                     	;# 
   338  010C                     	;# 
   339  010E                     	;# 
   340  0116                     	;# 
   341  0117                     	;# 
   342  011D                     	;# 
   343  018C                     	;# 
   344  018E                     	;# 
   345  0191                     	;# 
   346  0191                     	;# 
   347  0192                     	;# 
   348  0193                     	;# 
   349  0193                     	;# 
   350  0194                     	;# 
   351  0195                     	;# 
   352  0196                     	;# 
   353  0197                     	;# 
   354  0199                     	;# 
   355  019A                     	;# 
   356  019B                     	;# 
   357  019B                     	;# 
   358  019C                     	;# 
   359  019D                     	;# 
   360  019E                     	;# 
   361  019F                     	;# 
   362  020C                     	;# 
   363  0211                     	;# 
   364  0211                     	;# 
   365  0212                     	;# 
   366  0212                     	;# 
   367  0213                     	;# 
   368  0213                     	;# 
   369  0214                     	;# 
   370  0214                     	;# 
   371  0215                     	;# 
   372  0215                     	;# 
   373  0215                     	;# 
   374  0216                     	;# 
   375  0216                     	;# 
   376  0217                     	;# 
   377  0217                     	;# 
   378  0391                     	;# 
   379  0392                     	;# 
   380  0393                     	;# 
   381  039A                     	;# 
   382  039B                     	;# 
   383  0611                     	;# 
   384  0612                     	;# 
   385  0613                     	;# 
   386  0613                     	;# 
   387  0614                     	;# 
   388  0615                     	;# 
   389  0616                     	;# 
   390  0616                     	;# 
   391  0E8E                     	;# 
   392  0E8F                     	;# 
   393  0E90                     	;# 
   394  0E91                     	;# 
   395  0E92                     	;# 
   396  0E93                     	;# 
   397  0E94                     	;# 
   398  0E94                     	;# 
   399  0E95                     	;# 
   400  0E96                     	;# 
   401  0E97                     	;# 
   402  0E98                     	;# 
   403  0E99                     	;# 
   404  0E9A                     	;# 
   405  0E9B                     	;# 
   406  0E9C                     	;# 
   407  0E9D                     	;# 
   408  0E9E                     	;# 
   409  0E9F                     	;# 
   410  0FE4                     	;# 
   411  0FE5                     	;# 
   412  0FE6                     	;# 
   413  0FE7                     	;# 
   414  0FE8                     	;# 
   415  0FE9                     	;# 
   416  0FEA                     	;# 
   417  0FEB                     	;# 
   418  0FED                     	;# 
   419  0FEE                     	;# 
   420  0FEF                     	;# 
   421  0000                     	;# 
   422  0001                     	;# 
   423  0002                     	;# 
   424  0003                     	;# 
   425  0004                     	;# 
   426  0005                     	;# 
   427  0006                     	;# 
   428  0007                     	;# 
   429  0008                     	;# 
   430  0009                     	;# 
   431  000A                     	;# 
   432  000B                     	;# 
   433  000C                     	;# 
   434  000E                     	;# 
   435  0011                     	;# 
   436  0012                     	;# 
   437  0015                     	;# 
   438  0016                     	;# 
   439  0016                     	;# 
   440  0017                     	;# 
   441  0018                     	;# 
   442  0019                     	;# 
   443  001A                     	;# 
   444  001B                     	;# 
   445  001C                     	;# 
   446  008C                     	;# 
   447  008E                     	;# 
   448  0091                     	;# 
   449  0092                     	;# 
   450  0095                     	;# 
   451  0096                     	;# 
   452  0097                     	;# 
   453  0098                     	;# 
   454  0099                     	;# 
   455  009A                     	;# 
   456  010C                     	;# 
   457  010E                     	;# 
   458  0116                     	;# 
   459  0117                     	;# 
   460  011D                     	;# 
   461  018C                     	;# 
   462  018E                     	;# 
   463  0191                     	;# 
   464  0191                     	;# 
   465  0192                     	;# 
   466  0193                     	;# 
   467  0193                     	;# 
   468  0194                     	;# 
   469  0195                     	;# 
   470  0196                     	;# 
   471  0197                     	;# 
   472  0199                     	;# 
   473  019A                     	;# 
   474  019B                     	;# 
   475  019B                     	;# 
   476  019C                     	;# 
   477  019D                     	;# 
   478  019E                     	;# 
   479  019F                     	;# 
   480  020C                     	;# 
   481  0211                     	;# 
   482  0211                     	;# 
   483  0212                     	;# 
   484  0212                     	;# 
   485  0213                     	;# 
   486  0213                     	;# 
   487  0214                     	;# 
   488  0214                     	;# 
   489  0215                     	;# 
   490  0215                     	;# 
   491  0215                     	;# 
   492  0216                     	;# 
   493  0216                     	;# 
   494  0217                     	;# 
   495  0217                     	;# 
   496  0391                     	;# 
   497  0392                     	;# 
   498  0393                     	;# 
   499  039A                     	;# 
   500  039B                     	;# 
   501  0611                     	;# 
   502  0612                     	;# 
   503  0613                     	;# 
   504  0613                     	;# 
   505  0614                     	;# 
   506  0615                     	;# 
   507  0616                     	;# 
   508  0616                     	;# 
   509  0E8E                     	;# 
   510  0E8F                     	;# 
   511  0E90                     	;# 
   512  0E91                     	;# 
   513  0E92                     	;# 
   514  0E93                     	;# 
   515  0E94                     	;# 
   516  0E94                     	;# 
   517  0E95                     	;# 
   518  0E96                     	;# 
   519  0E97                     	;# 
   520  0E98                     	;# 
   521  0E99                     	;# 
   522  0E9A                     	;# 
   523  0E9B                     	;# 
   524  0E9C                     	;# 
   525  0E9D                     	;# 
   526  0E9E                     	;# 
   527  0E9F                     	;# 
   528  0FE4                     	;# 
   529  0FE5                     	;# 
   530  0FE6                     	;# 
   531  0FE7                     	;# 
   532  0FE8                     	;# 
   533  0FE9                     	;# 
   534  0FEA                     	;# 
   535  0FEB                     	;# 
   536  0FED                     	;# 
   537  0FEE                     	;# 
   538  0FEF                     	;# 
   539  0000                     	;# 
   540  0001                     	;# 
   541  0002                     	;# 
   542  0003                     	;# 
   543  0004                     	;# 
   544  0005                     	;# 
   545  0006                     	;# 
   546  0007                     	;# 
   547  0008                     	;# 
   548  0009                     	;# 
   549  000A                     	;# 
   550  000B                     	;# 
   551  000C                     	;# 
   552  000E                     	;# 
   553  0011                     	;# 
   554  0012                     	;# 
   555  0015                     	;# 
   556  0016                     	;# 
   557  0016                     	;# 
   558  0017                     	;# 
   559  0018                     	;# 
   560  0019                     	;# 
   561  001A                     	;# 
   562  001B                     	;# 
   563  001C                     	;# 
   564  008C                     	;# 
   565  008E                     	;# 
   566  0091                     	;# 
   567  0092                     	;# 
   568  0095                     	;# 
   569  0096                     	;# 
   570  0097                     	;# 
   571  0098                     	;# 
   572  0099                     	;# 
   573  009A                     	;# 
   574  010C                     	;# 
   575  010E                     	;# 
   576  0116                     	;# 
   577  0117                     	;# 
   578  011D                     	;# 
   579  018C                     	;# 
   580  018E                     	;# 
   581  0191                     	;# 
   582  0191                     	;# 
   583  0192                     	;# 
   584  0193                     	;# 
   585  0193                     	;# 
   586  0194                     	;# 
   587  0195                     	;# 
   588  0196                     	;# 
   589  0197                     	;# 
   590  0199                     	;# 
   591  019A                     	;# 
   592  019B                     	;# 
   593  019B                     	;# 
   594  019C                     	;# 
   595  019D                     	;# 
   596  019E                     	;# 
   597  019F                     	;# 
   598  020C                     	;# 
   599  0211                     	;# 
   600  0211                     	;# 
   601  0212                     	;# 
   602  0212                     	;# 
   603  0213                     	;# 
   604  0213                     	;# 
   605  0214                     	;# 
   606  0214                     	;# 
   607  0215                     	;# 
   608  0215                     	;# 
   609  0215                     	;# 
   610  0216                     	;# 
   611  0216                     	;# 
   612  0217                     	;# 
   613  0217                     	;# 
   614  0391                     	;# 
   615  0392                     	;# 
   616  0393                     	;# 
   617  039A                     	;# 
   618  039B                     	;# 
   619  0611                     	;# 
   620  0612                     	;# 
   621  0613                     	;# 
   622  0613                     	;# 
   623  0614                     	;# 
   624  0615                     	;# 
   625  0616                     	;# 
   626  0616                     	;# 
   627  0E8E                     	;# 
   628  0E8F                     	;# 
   629  0E90                     	;# 
   630  0E91                     	;# 
   631  0E92                     	;# 
   632  0E93                     	;# 
   633  0E94                     	;# 
   634  0E94                     	;# 
   635  0E95                     	;# 
   636  0E96                     	;# 
   637  0E97                     	;# 
   638  0E98                     	;# 
   639  0E99                     	;# 
   640  0E9A                     	;# 
   641  0E9B                     	;# 
   642  0E9C                     	;# 
   643  0E9D                     	;# 
   644  0E9E                     	;# 
   645  0E9F                     	;# 
   646  0FE4                     	;# 
   647  0FE5                     	;# 
   648  0FE6                     	;# 
   649  0FE7                     	;# 
   650  0FE8                     	;# 
   651  0FE9                     	;# 
   652  0FEA                     	;# 
   653  0FEB                     	;# 
   654  0FED                     	;# 
   655  0FEE                     	;# 
   656  0FEF                     	;# 
   657  0000                     	;# 
   658  0001                     	;# 
   659  0002                     	;# 
   660  0003                     	;# 
   661  0004                     	;# 
   662  0005                     	;# 
   663  0006                     	;# 
   664  0007                     	;# 
   665  0008                     	;# 
   666  0009                     	;# 
   667  000A                     	;# 
   668  000B                     	;# 
   669  000C                     	;# 
   670  000E                     	;# 
   671  0011                     	;# 
   672  0012                     	;# 
   673  0015                     	;# 
   674  0016                     	;# 
   675  0016                     	;# 
   676  0017                     	;# 
   677  0018                     	;# 
   678  0019                     	;# 
   679  001A                     	;# 
   680  001B                     	;# 
   681  001C                     	;# 
   682  008C                     	;# 
   683  008E                     	;# 
   684  0091                     	;# 
   685  0092                     	;# 
   686  0095                     	;# 
   687  0096                     	;# 
   688  0097                     	;# 
   689  0098                     	;# 
   690  0099                     	;# 
   691  009A                     	;# 
   692  010C                     	;# 
   693  010E                     	;# 
   694  0116                     	;# 
   695  0117                     	;# 
   696  011D                     	;# 
   697  018C                     	;# 
   698  018E                     	;# 
   699  0191                     	;# 
   700  0191                     	;# 
   701  0192                     	;# 
   702  0193                     	;# 
   703  0193                     	;# 
   704  0194                     	;# 
   705  0195                     	;# 
   706  0196                     	;# 
   707  0197                     	;# 
   708  0199                     	;# 
   709  019A                     	;# 
   710  019B                     	;# 
   711  019B                     	;# 
   712  019C                     	;# 
   713  019D                     	;# 
   714  019E                     	;# 
   715  019F                     	;# 
   716  020C                     	;# 
   717  0211                     	;# 
   718  0211                     	;# 
   719  0212                     	;# 
   720  0212                     	;# 
   721  0213                     	;# 
   722  0213                     	;# 
   723  0214                     	;# 
   724  0214                     	;# 
   725  0215                     	;# 
   726  0215                     	;# 
   727  0215                     	;# 
   728  0216                     	;# 
   729  0216                     	;# 
   730  0217                     	;# 
   731  0217                     	;# 
   732  0391                     	;# 
   733  0392                     	;# 
   734  0393                     	;# 
   735  039A                     	;# 
   736  039B                     	;# 
   737  0611                     	;# 
   738  0612                     	;# 
   739  0613                     	;# 
   740  0613                     	;# 
   741  0614                     	;# 
   742  0615                     	;# 
   743  0616                     	;# 
   744  0616                     	;# 
   745  0E8E                     	;# 
   746  0E8F                     	;# 
   747  0E90                     	;# 
   748  0E91                     	;# 
   749  0E92                     	;# 
   750  0E93                     	;# 
   751  0E94                     	;# 
   752  0E94                     	;# 
   753  0E95                     	;# 
   754  0E96                     	;# 
   755  0E97                     	;# 
   756  0E98                     	;# 
   757  0E99                     	;# 
   758  0E9A                     	;# 
   759  0E9B                     	;# 
   760  0E9C                     	;# 
   761  0E9D                     	;# 
   762  0E9E                     	;# 
   763  0E9F                     	;# 
   764  0FE4                     	;# 
   765  0FE5                     	;# 
   766  0FE6                     	;# 
   767  0FE7                     	;# 
   768  0FE8                     	;# 
   769  0FE9                     	;# 
   770  0FEA                     	;# 
   771  0FEB                     	;# 
   772  0FED                     	;# 
   773  0FEE                     	;# 
   774  0FEF                     	;# 
   775  0000                     	;# 
   776  0001                     	;# 
   777  0002                     	;# 
   778  0003                     	;# 
   779  0004                     	;# 
   780  0005                     	;# 
   781  0006                     	;# 
   782  0007                     	;# 
   783  0008                     	;# 
   784  0009                     	;# 
   785  000A                     	;# 
   786  000B                     	;# 
   787  000C                     	;# 
   788  000E                     	;# 
   789  0011                     	;# 
   790  0012                     	;# 
   791  0015                     	;# 
   792  0016                     	;# 
   793  0016                     	;# 
   794  0017                     	;# 
   795  0018                     	;# 
   796  0019                     	;# 
   797  001A                     	;# 
   798  001B                     	;# 
   799  001C                     	;# 
   800  008C                     	;# 
   801  008E                     	;# 
   802  0091                     	;# 
   803  0092                     	;# 
   804  0095                     	;# 
   805  0096                     	;# 
   806  0097                     	;# 
   807  0098                     	;# 
   808  0099                     	;# 
   809  009A                     	;# 
   810  010C                     	;# 
   811  010E                     	;# 
   812  0116                     	;# 
   813  0117                     	;# 
   814  011D                     	;# 
   815  018C                     	;# 
   816  018E                     	;# 
   817  0191                     	;# 
   818  0191                     	;# 
   819  0192                     	;# 
   820  0193                     	;# 
   821  0193                     	;# 
   822  0194                     	;# 
   823  0195                     	;# 
   824  0196                     	;# 
   825  0197                     	;# 
   826  0199                     	;# 
   827  019A                     	;# 
   828  019B                     	;# 
   829  019B                     	;# 
   830  019C                     	;# 
   831  019D                     	;# 
   832  019E                     	;# 
   833  019F                     	;# 
   834  020C                     	;# 
   835  0211                     	;# 
   836  0211                     	;# 
   837  0212                     	;# 
   838  0212                     	;# 
   839  0213                     	;# 
   840  0213                     	;# 
   841  0214                     	;# 
   842  0214                     	;# 
   843  0215                     	;# 
   844  0215                     	;# 
   845  0215                     	;# 
   846  0216                     	;# 
   847  0216                     	;# 
   848  0217                     	;# 
   849  0217                     	;# 
   850  0391                     	;# 
   851  0392                     	;# 
   852  0393                     	;# 
   853  039A                     	;# 
   854  039B                     	;# 
   855  0611                     	;# 
   856  0612                     	;# 
   857  0613                     	;# 
   858  0613                     	;# 
   859  0614                     	;# 
   860  0615                     	;# 
   861  0616                     	;# 
   862  0616                     	;# 
   863  0E8E                     	;# 
   864  0E8F                     	;# 
   865  0E90                     	;# 
   866  0E91                     	;# 
   867  0E92                     	;# 
   868  0E93                     	;# 
   869  0E94                     	;# 
   870  0E94                     	;# 
   871  0E95                     	;# 
   872  0E96                     	;# 
   873  0E97                     	;# 
   874  0E98                     	;# 
   875  0E99                     	;# 
   876  0E9A                     	;# 
   877  0E9B                     	;# 
   878  0E9C                     	;# 
   879  0E9D                     	;# 
   880  0E9E                     	;# 
   881  0E9F                     	;# 
   882  0FE4                     	;# 
   883  0FE5                     	;# 
   884  0FE6                     	;# 
   885  0FE7                     	;# 
   886  0FE8                     	;# 
   887  0FE9                     	;# 
   888  0FEA                     	;# 
   889  0FEB                     	;# 
   890  0FED                     	;# 
   891  0FEE                     	;# 
   892  0FEF                     	;# 
   893  0000                     	;# 
   894  0001                     	;# 
   895  0002                     	;# 
   896  0003                     	;# 
   897  0004                     	;# 
   898  0005                     	;# 
   899  0006                     	;# 
   900  0007                     	;# 
   901  0008                     	;# 
   902  0009                     	;# 
   903  000A                     	;# 
   904  000B                     	;# 
   905  000C                     	;# 
   906  000E                     	;# 
   907  0011                     	;# 
   908  0012                     	;# 
   909  0015                     	;# 
   910  0016                     	;# 
   911  0016                     	;# 
   912  0017                     	;# 
   913  0018                     	;# 
   914  0019                     	;# 
   915  001A                     	;# 
   916  001B                     	;# 
   917  001C                     	;# 
   918  008C                     	;# 
   919  008E                     	;# 
   920  0091                     	;# 
   921  0092                     	;# 
   922  0095                     	;# 
   923  0096                     	;# 
   924  0097                     	;# 
   925  0098                     	;# 
   926  0099                     	;# 
   927  009A                     	;# 
   928  010C                     	;# 
   929  010E                     	;# 
   930  0116                     	;# 
   931  0117                     	;# 
   932  011D                     	;# 
   933  018C                     	;# 
   934  018E                     	;# 
   935  0191                     	;# 
   936  0191                     	;# 
   937  0192                     	;# 
   938  0193                     	;# 
   939  0193                     	;# 
   940  0194                     	;# 
   941  0195                     	;# 
   942  0196                     	;# 
   943  0197                     	;# 
   944  0199                     	;# 
   945  019A                     	;# 
   946  019B                     	;# 
   947  019B                     	;# 
   948  019C                     	;# 
   949  019D                     	;# 
   950  019E                     	;# 
   951  019F                     	;# 
   952  020C                     	;# 
   953  0211                     	;# 
   954  0211                     	;# 
   955  0212                     	;# 
   956  0212                     	;# 
   957  0213                     	;# 
   958  0213                     	;# 
   959  0214                     	;# 
   960  0214                     	;# 
   961  0215                     	;# 
   962  0215                     	;# 
   963  0215                     	;# 
   964  0216                     	;# 
   965  0216                     	;# 
   966  0217                     	;# 
   967  0217                     	;# 
   968  0391                     	;# 
   969  0392                     	;# 
   970  0393                     	;# 
   971  039A                     	;# 
   972  039B                     	;# 
   973  0611                     	;# 
   974  0612                     	;# 
   975  0613                     	;# 
   976  0613                     	;# 
   977  0614                     	;# 
   978  0615                     	;# 
   979  0616                     	;# 
   980  0616                     	;# 
   981  0E8E                     	;# 
   982  0E8F                     	;# 
   983  0E90                     	;# 
   984  0E91                     	;# 
   985  0E92                     	;# 
   986  0E93                     	;# 
   987  0E94                     	;# 
   988  0E94                     	;# 
   989  0E95                     	;# 
   990  0E96                     	;# 
   991  0E97                     	;# 
   992  0E98                     	;# 
   993  0E99                     	;# 
   994  0E9A                     	;# 
   995  0E9B                     	;# 
   996  0E9C                     	;# 
   997  0E9D                     	;# 
   998  0E9E                     	;# 
   999  0E9F                     	;# 
  1000  0FE4                     	;# 
  1001  0FE5                     	;# 
  1002  0FE6                     	;# 
  1003  0FE7                     	;# 
  1004  0FE8                     	;# 
  1005  0FE9                     	;# 
  1006  0FEA                     	;# 
  1007  0FEB                     	;# 
  1008  0FED                     	;# 
  1009  0FEE                     	;# 
  1010  0FEF                     	;# 
  1011  0000                     	;# 
  1012  0001                     	;# 
  1013  0002                     	;# 
  1014  0003                     	;# 
  1015  0004                     	;# 
  1016  0005                     	;# 
  1017  0006                     	;# 
  1018  0007                     	;# 
  1019  0008                     	;# 
  1020  0009                     	;# 
  1021  000A                     	;# 
  1022  000B                     	;# 
  1023  000C                     	;# 
  1024  000E                     	;# 
  1025  0011                     	;# 
  1026  0012                     	;# 
  1027  0015                     	;# 
  1028  0016                     	;# 
  1029  0016                     	;# 
  1030  0017                     	;# 
  1031  0018                     	;# 
  1032  0019                     	;# 
  1033  001A                     	;# 
  1034  001B                     	;# 
  1035  001C                     	;# 
  1036  008C                     	;# 
  1037  008E                     	;# 
  1038  0091                     	;# 
  1039  0092                     	;# 
  1040  0095                     	;# 
  1041  0096                     	;# 
  1042  0097                     	;# 
  1043  0098                     	;# 
  1044  0099                     	;# 
  1045  009A                     	;# 
  1046  010C                     	;# 
  1047  010E                     	;# 
  1048  0116                     	;# 
  1049  0117                     	;# 
  1050  011D                     	;# 
  1051  018C                     	;# 
  1052  018E                     	;# 
  1053  0191                     	;# 
  1054  0191                     	;# 
  1055  0192                     	;# 
  1056  0193                     	;# 
  1057  0193                     	;# 
  1058  0194                     	;# 
  1059  0195                     	;# 
  1060  0196                     	;# 
  1061  0197                     	;# 
  1062  0199                     	;# 
  1063  019A                     	;# 
  1064  019B                     	;# 
  1065  019B                     	;# 
  1066  019C                     	;# 
  1067  019D                     	;# 
  1068  019E                     	;# 
  1069  019F                     	;# 
  1070  020C                     	;# 
  1071  0211                     	;# 
  1072  0211                     	;# 
  1073  0212                     	;# 
  1074  0212                     	;# 
  1075  0213                     	;# 
  1076  0213                     	;# 
  1077  0214                     	;# 
  1078  0214                     	;# 
  1079  0215                     	;# 
  1080  0215                     	;# 
  1081  0215                     	;# 
  1082  0216                     	;# 
  1083  0216                     	;# 
  1084  0217                     	;# 
  1085  0217                     	;# 
  1086  0391                     	;# 
  1087  0392                     	;# 
  1088  0393                     	;# 
  1089  039A                     	;# 
  1090  039B                     	;# 
  1091  0611                     	;# 
  1092  0612                     	;# 
  1093  0613                     	;# 
  1094  0613                     	;# 
  1095  0614                     	;# 
  1096  0615                     	;# 
  1097  0616                     	;# 
  1098  0616                     	;# 
  1099  0E8E                     	;# 
  1100  0E8F                     	;# 
  1101  0E90                     	;# 
  1102  0E91                     	;# 
  1103  0E92                     	;# 
  1104  0E93                     	;# 
  1105  0E94                     	;# 
  1106  0E94                     	;# 
  1107  0E95                     	;# 
  1108  0E96                     	;# 
  1109  0E97                     	;# 
  1110  0E98                     	;# 
  1111  0E99                     	;# 
  1112  0E9A                     	;# 
  1113  0E9B                     	;# 
  1114  0E9C                     	;# 
  1115  0E9D                     	;# 
  1116  0E9E                     	;# 
  1117  0E9F                     	;# 
  1118  0FE4                     	;# 
  1119  0FE5                     	;# 
  1120  0FE6                     	;# 
  1121  0FE7                     	;# 
  1122  0FE8                     	;# 
  1123  0FE9                     	;# 
  1124  0FEA                     	;# 
  1125  0FEB                     	;# 
  1126  0FED                     	;# 
  1127  0FEE                     	;# 
  1128  0FEF                     	;# 
  1129  0000                     	;# 
  1130  0001                     	;# 
  1131  0002                     	;# 
  1132  0003                     	;# 
  1133  0004                     	;# 
  1134  0005                     	;# 
  1135  0006                     	;# 
  1136  0007                     	;# 
  1137  0008                     	;# 
  1138  0009                     	;# 
  1139  000A                     	;# 
  1140  000B                     	;# 
  1141  000C                     	;# 
  1142  000E                     	;# 
  1143  0011                     	;# 
  1144  0012                     	;# 
  1145  0015                     	;# 
  1146  0016                     	;# 
  1147  0016                     	;# 
  1148  0017                     	;# 
  1149  0018                     	;# 
  1150  0019                     	;# 
  1151  001A                     	;# 
  1152  001B                     	;# 
  1153  001C                     	;# 
  1154  008C                     	;# 
  1155  008E                     	;# 
  1156  0091                     	;# 
  1157  0092                     	;# 
  1158  0095                     	;# 
  1159  0096                     	;# 
  1160  0097                     	;# 
  1161  0098                     	;# 
  1162  0099                     	;# 
  1163  009A                     	;# 
  1164  010C                     	;# 
  1165  010E                     	;# 
  1166  0116                     	;# 
  1167  0117                     	;# 
  1168  011D                     	;# 
  1169  018C                     	;# 
  1170  018E                     	;# 
  1171  0191                     	;# 
  1172  0191                     	;# 
  1173  0192                     	;# 
  1174  0193                     	;# 
  1175  0193                     	;# 
  1176  0194                     	;# 
  1177  0195                     	;# 
  1178  0196                     	;# 
  1179  0197                     	;# 
  1180  0199                     	;# 
  1181  019A                     	;# 
  1182  019B                     	;# 
  1183  019B                     	;# 
  1184  019C                     	;# 
  1185  019D                     	;# 
  1186  019E                     	;# 
  1187  019F                     	;# 
  1188  020C                     	;# 
  1189  0211                     	;# 
  1190  0211                     	;# 
  1191  0212                     	;# 
  1192  0212                     	;# 
  1193  0213                     	;# 
  1194  0213                     	;# 
  1195  0214                     	;# 
  1196  0214                     	;# 
  1197  0215                     	;# 
  1198  0215                     	;# 
  1199  0215                     	;# 
  1200  0216                     	;# 
  1201  0216                     	;# 
  1202  0217                     	;# 
  1203  0217                     	;# 
  1204  0391                     	;# 
  1205  0392                     	;# 
  1206  0393                     	;# 
  1207  039A                     	;# 
  1208  039B                     	;# 
  1209  0611                     	;# 
  1210  0612                     	;# 
  1211  0613                     	;# 
  1212  0613                     	;# 
  1213  0614                     	;# 
  1214  0615                     	;# 
  1215  0616                     	;# 
  1216  0616                     	;# 
  1217  0E8E                     	;# 
  1218  0E8F                     	;# 
  1219  0E90                     	;# 
  1220  0E91                     	;# 
  1221  0E92                     	;# 
  1222  0E93                     	;# 
  1223  0E94                     	;# 
  1224  0E94                     	;# 
  1225  0E95                     	;# 
  1226  0E96                     	;# 
  1227  0E97                     	;# 
  1228  0E98                     	;# 
  1229  0E99                     	;# 
  1230  0E9A                     	;# 
  1231  0E9B                     	;# 
  1232  0E9C                     	;# 
  1233  0E9D                     	;# 
  1234  0E9E                     	;# 
  1235  0E9F                     	;# 
  1236  0FE4                     	;# 
  1237  0FE5                     	;# 
  1238  0FE6                     	;# 
  1239  0FE7                     	;# 
  1240  0FE8                     	;# 
  1241  0FE9                     	;# 
  1242  0FEA                     	;# 
  1243  0FEB                     	;# 
  1244  0FED                     	;# 
  1245  0FEE                     	;# 
  1246  0FEF                     	;# 
  1247  0000                     	;# 
  1248  0001                     	;# 
  1249  0002                     	;# 
  1250  0003                     	;# 
  1251  0004                     	;# 
  1252  0005                     	;# 
  1253  0006                     	;# 
  1254  0007                     	;# 
  1255  0008                     	;# 
  1256  0009                     	;# 
  1257  000A                     	;# 
  1258  000B                     	;# 
  1259  000C                     	;# 
  1260  000E                     	;# 
  1261  0011                     	;# 
  1262  0012                     	;# 
  1263  0015                     	;# 
  1264  0016                     	;# 
  1265  0016                     	;# 
  1266  0017                     	;# 
  1267  0018                     	;# 
  1268  0019                     	;# 
  1269  001A                     	;# 
  1270  001B                     	;# 
  1271  001C                     	;# 
  1272  008C                     	;# 
  1273  008E                     	;# 
  1274  0091                     	;# 
  1275  0092                     	;# 
  1276  0095                     	;# 
  1277  0096                     	;# 
  1278  0097                     	;# 
  1279  0098                     	;# 
  1280  0099                     	;# 
  1281  009A                     	;# 
  1282  010C                     	;# 
  1283  010E                     	;# 
  1284  0116                     	;# 
  1285  0117                     	;# 
  1286  011D                     	;# 
  1287  018C                     	;# 
  1288  018E                     	;# 
  1289  0191                     	;# 
  1290  0191                     	;# 
  1291  0192                     	;# 
  1292  0193                     	;# 
  1293  0193                     	;# 
  1294  0194                     	;# 
  1295  0195                     	;# 
  1296  0196                     	;# 
  1297  0197                     	;# 
  1298  0199                     	;# 
  1299  019A                     	;# 
  1300  019B                     	;# 
  1301  019B                     	;# 
  1302  019C                     	;# 
  1303  019D                     	;# 
  1304  019E                     	;# 
  1305  019F                     	;# 
  1306  020C                     	;# 
  1307  0211                     	;# 
  1308  0211                     	;# 
  1309  0212                     	;# 
  1310  0212                     	;# 
  1311  0213                     	;# 
  1312  0213                     	;# 
  1313  0214                     	;# 
  1314  0214                     	;# 
  1315  0215                     	;# 
  1316  0215                     	;# 
  1317  0215                     	;# 
  1318  0216                     	;# 
  1319  0216                     	;# 
  1320  0217                     	;# 
  1321  0217                     	;# 
  1322  0391                     	;# 
  1323  0392                     	;# 
  1324  0393                     	;# 
  1325  039A                     	;# 
  1326  039B                     	;# 
  1327  0611                     	;# 
  1328  0612                     	;# 
  1329  0613                     	;# 
  1330  0613                     	;# 
  1331  0614                     	;# 
  1332  0615                     	;# 
  1333  0616                     	;# 
  1334  0616                     	;# 
  1335  0E8E                     	;# 
  1336  0E8F                     	;# 
  1337  0E90                     	;# 
  1338  0E91                     	;# 
  1339  0E92                     	;# 
  1340  0E93                     	;# 
  1341  0E94                     	;# 
  1342  0E94                     	;# 
  1343  0E95                     	;# 
  1344  0E96                     	;# 
  1345  0E97                     	;# 
  1346  0E98                     	;# 
  1347  0E99                     	;# 
  1348  0E9A                     	;# 
  1349  0E9B                     	;# 
  1350  0E9C                     	;# 
  1351  0E9D                     	;# 
  1352  0E9E                     	;# 
  1353  0E9F                     	;# 
  1354  0FE4                     	;# 
  1355  0FE5                     	;# 
  1356  0FE6                     	;# 
  1357  0FE7                     	;# 
  1358  0FE8                     	;# 
  1359  0FE9                     	;# 
  1360  0FEA                     	;# 
  1361  0FEB                     	;# 
  1362  0FED                     	;# 
  1363  0FEE                     	;# 
  1364  0FEF                     	;# 
  1365  0000                     	;# 
  1366  0001                     	;# 
  1367  0002                     	;# 
  1368  0003                     	;# 
  1369  0004                     	;# 
  1370  0005                     	;# 
  1371  0006                     	;# 
  1372  0007                     	;# 
  1373  0008                     	;# 
  1374  0009                     	;# 
  1375  000A                     	;# 
  1376  000B                     	;# 
  1377  000C                     	;# 
  1378  000E                     	;# 
  1379  0011                     	;# 
  1380  0012                     	;# 
  1381  0015                     	;# 
  1382  0016                     	;# 
  1383  0016                     	;# 
  1384  0017                     	;# 
  1385  0018                     	;# 
  1386  0019                     	;# 
  1387  001A                     	;# 
  1388  001B                     	;# 
  1389  001C                     	;# 
  1390  008C                     	;# 
  1391  008E                     	;# 
  1392  0091                     	;# 
  1393  0092                     	;# 
  1394  0095                     	;# 
  1395  0096                     	;# 
  1396  0097                     	;# 
  1397  0098                     	;# 
  1398  0099                     	;# 
  1399  009A                     	;# 
  1400  010C                     	;# 
  1401  010E                     	;# 
  1402  0116                     	;# 
  1403  0117                     	;# 
  1404  011D                     	;# 
  1405  018C                     	;# 
  1406  018E                     	;# 
  1407  0191                     	;# 
  1408  0191                     	;# 
  1409  0192                     	;# 
  1410  0193                     	;# 
  1411  0193                     	;# 
  1412  0194                     	;# 
  1413  0195                     	;# 
  1414  0196                     	;# 
  1415  0197                     	;# 
  1416  0199                     	;# 
  1417  019A                     	;# 
  1418  019B                     	;# 
  1419  019B                     	;# 
  1420  019C                     	;# 
  1421  019D                     	;# 
  1422  019E                     	;# 
  1423  019F                     	;# 
  1424  020C                     	;# 
  1425  0211                     	;# 
  1426  0211                     	;# 
  1427  0212                     	;# 
  1428  0212                     	;# 
  1429  0213                     	;# 
  1430  0213                     	;# 
  1431  0214                     	;# 
  1432  0214                     	;# 
  1433  0215                     	;# 
  1434  0215                     	;# 
  1435  0215                     	;# 
  1436  0216                     	;# 
  1437  0216                     	;# 
  1438  0217                     	;# 
  1439  0217                     	;# 
  1440  0391                     	;# 
  1441  0392                     	;# 
  1442  0393                     	;# 
  1443  039A                     	;# 
  1444  039B                     	;# 
  1445  0611                     	;# 
  1446  0612                     	;# 
  1447  0613                     	;# 
  1448  0613                     	;# 
  1449  0614                     	;# 
  1450  0615                     	;# 
  1451  0616                     	;# 
  1452  0616                     	;# 
  1453  0E8E                     	;# 
  1454  0E8F                     	;# 
  1455  0E90                     	;# 
  1456  0E91                     	;# 
  1457  0E92                     	;# 
  1458  0E93                     	;# 
  1459  0E94                     	;# 
  1460  0E94                     	;# 
  1461  0E95                     	;# 
  1462  0E96                     	;# 
  1463  0E97                     	;# 
  1464  0E98                     	;# 
  1465  0E99                     	;# 
  1466  0E9A                     	;# 
  1467  0E9B                     	;# 
  1468  0E9C                     	;# 
  1469  0E9D                     	;# 
  1470  0E9E                     	;# 
  1471  0E9F                     	;# 
  1472  0FE4                     	;# 
  1473  0FE5                     	;# 
  1474  0FE6                     	;# 
  1475  0FE7                     	;# 
  1476  0FE8                     	;# 
  1477  0FE9                     	;# 
  1478  0FEA                     	;# 
  1479  0FEB                     	;# 
  1480  0FED                     	;# 
  1481  0FEE                     	;# 
  1482  0FEF                     	;_cdc_data_rx
  1483                           
  1484                           	psect	idataBANK5
  1485  1FBD                     __pidataBANK5:	
  1486                           
  1487                           ;initializer for _fsmStateTable
  1488  1FBD  3446               	retlw	low _do_I2C_IDLE
  1489  1FBE  341D               	retlw	high _do_I2C_IDLE
  1490  1FBF  345F               	retlw	low _do_I2C_SEND_ADR_READ
  1491  1FC0  341D               	retlw	high _do_I2C_SEND_ADR_READ
  1492  1FC1  3458               	retlw	low _do_I2C_SEND_ADR_WRITE
  1493  1FC2  341D               	retlw	high _do_I2C_SEND_ADR_WRITE
  1494  1FC3  34D3               	retlw	low _do_I2C_TX
  1495  1FC4  3413               	retlw	high _do_I2C_TX
  1496  1FC5  3486               	retlw	low _do_I2C_RX
  1497  1FC6  3412               	retlw	high _do_I2C_RX
  1498  1FC7  344B               	retlw	low _do_I2C_RCEN
  1499  1FC8  341D               	retlw	high _do_I2C_RCEN
  1500  1FC9  3483               	retlw	low _do_I2C_TX_EMPTY
  1501  1FCA  3410               	retlw	high _do_I2C_TX_EMPTY
  1502  1FCB  3421               	retlw	low _do_I2C_SEND_RESTART_READ
  1503  1FCC  341D               	retlw	high _do_I2C_SEND_RESTART_READ
  1504  1FCD  3425               	retlw	low _do_I2C_SEND_RESTART_WRITE
  1505  1FCE  341D               	retlw	high _do_I2C_SEND_RESTART_WRITE
  1506  1FCF  3429               	retlw	low _do_I2C_SEND_RESTART
  1507  1FD0  341D               	retlw	high _do_I2C_SEND_RESTART
  1508  1FD1  342D               	retlw	low _do_I2C_SEND_STOP
  1509  1FD2  341D               	retlw	high _do_I2C_SEND_STOP
  1510  1FD3  3431               	retlw	low _do_I2C_DO_ACK
  1511  1FD4  341D               	retlw	high _do_I2C_DO_ACK
  1512  1FD5  3435               	retlw	low _do_I2C_DO_NACK_STOP
  1513  1FD6  341D               	retlw	high _do_I2C_DO_NACK_STOP
  1514  1FD7  3439               	retlw	low _do_I2C_DO_NACK_RESTART
  1515  1FD8  341D               	retlw	high _do_I2C_DO_NACK_RESTART
  1516  1FD9  3451               	retlw	low _do_I2C_RESET
  1517  1FDA  341D               	retlw	high _do_I2C_RESET
  1518  1FDB  3412               	retlw	low _do_I2C_DO_ADDRESS_NACK
  1519  1FDC  3410               	retlw	high _do_I2C_DO_ADDRESS_NACK
  1520                           
  1521                           	psect	stringtext1
  1522  18DF                     __pstringtext1:	
  1523  18DF                     _USB_SD_Ptr:	
  1524  18DF  34D7               	retlw	low (_sd000| (0+32768))
  1525  18E0  3498               	retlw	high (_sd000| (0+32768))
  1526  18E1  3443               	retlw	low (_sd001| (0+32768))
  1527  18E2  3498               	retlw	high (_sd001| (0+32768))
  1528  18E3  3477               	retlw	low (_sd002| (0+32768))
  1529  18E4  3498               	retlw	high (_sd002| (0+32768))
  1530  18E5                     __end_of_USB_SD_Ptr:	
  1531                           
  1532                           	psect	stringtext2
  1533  18E8                     __pstringtext2:	
  1534  18E8                     _USB_CD_Ptr:	
  1535  18E8  3400               	retlw	low (_configDescriptor1| (0+32768))
  1536  18E9  3498               	retlw	high (_configDescriptor1| (0+32768))
  1537  18EA                     __end_of_USB_CD_Ptr:	
  1538                           
  1539                           	psect	stringtext3
  1540  1800                     __pstringtext3:	
  1541  1800                     _configDescriptor1:	
  1542  1800  3409               	retlw	9
  1543  1801  3402               	retlw	2
  1544  1802  3443               	retlw	67
  1545  1803  3400               	retlw	0
  1546  1804  3402               	retlw	2
  1547  1805  3401               	retlw	1
  1548  1806  3400               	retlw	0
  1549  1807  34C0               	retlw	192
  1550  1808  3432               	retlw	50
  1551  1809  3409               	retlw	9
  1552  180A  3404               	retlw	4
  1553  180B  3400               	retlw	0
  1554  180C  3400               	retlw	0
  1555  180D  3401               	retlw	1
  1556  180E  3402               	retlw	2
  1557  180F  3402               	retlw	2
  1558  1810  3401               	retlw	1
  1559  1811  3400               	retlw	0
  1560  1812  3405               	retlw	5
  1561  1813  3424               	retlw	36
  1562  1814  3400               	retlw	0
  1563  1815  3410               	retlw	16
  1564  1816  3401               	retlw	1
  1565  1817  3404               	retlw	4
  1566  1818  3424               	retlw	36
  1567  1819  3402               	retlw	2
  1568  181A  3402               	retlw	2
  1569  181B  3405               	retlw	5
  1570  181C  3424               	retlw	36
  1571  181D  3406               	retlw	6
  1572  181E  3400               	retlw	0
  1573  181F  3401               	retlw	1
  1574  1820  3405               	retlw	5
  1575  1821  3424               	retlw	36
  1576  1822  3401               	retlw	1
  1577  1823  3400               	retlw	0
  1578  1824  3401               	retlw	1
  1579  1825  3407               	retlw	7
  1580  1826  3405               	retlw	5
  1581  1827  3481               	retlw	129
  1582  1828  3403               	retlw	3
  1583  1829  340A               	retlw	10
  1584  182A  3400               	retlw	0
  1585  182B  3402               	retlw	2
  1586  182C  3409               	retlw	9
  1587  182D  3404               	retlw	4
  1588  182E  3401               	retlw	1
  1589  182F  3400               	retlw	0
  1590  1830  3402               	retlw	2
  1591  1831  340A               	retlw	10
  1592  1832  3400               	retlw	0
  1593  1833  3400               	retlw	0
  1594  1834  3400               	retlw	0
  1595  1835  3407               	retlw	7
  1596  1836  3405               	retlw	5
  1597  1837  3402               	retlw	2
  1598  1838  3402               	retlw	2
  1599  1839  3440               	retlw	64
  1600  183A  3400               	retlw	0
  1601  183B  3400               	retlw	0
  1602  183C  3407               	retlw	7
  1603  183D  3405               	retlw	5
  1604  183E  3482               	retlw	130
  1605  183F  3402               	retlw	2
  1606  1840  3440               	retlw	64
  1607  1841  3400               	retlw	0
  1608  1842  3400               	retlw	0
  1609  1843                     __end_of_configDescriptor1:	
  1610                           
  1611                           	psect	stringtext4
  1612  1843                     __pstringtext4:	
  1613  1843                     _sd001:	
  1614  1843  3434               	retlw	52
  1615  1844  3403               	retlw	3
  1616  1845  344D               	retlw	77
  1617  1846  3400               	retlw	0
  1618  1847  3469               	retlw	105
  1619  1848  3400               	retlw	0
  1620  1849  3463               	retlw	99
  1621  184A  3400               	retlw	0
  1622  184B  3472               	retlw	114
  1623  184C  3400               	retlw	0
  1624  184D  346F               	retlw	111
  1625  184E  3400               	retlw	0
  1626  184F  3463               	retlw	99
  1627  1850  3400               	retlw	0
  1628  1851  3468               	retlw	104
  1629  1852  3400               	retlw	0
  1630  1853  3469               	retlw	105
  1631  1854  3400               	retlw	0
  1632  1855  3470               	retlw	112
  1633  1856  3400               	retlw	0
  1634  1857  3420               	retlw	32
  1635  1858  3400               	retlw	0
  1636  1859  3454               	retlw	84
  1637  185A  3400               	retlw	0
  1638  185B  3465               	retlw	101
  1639  185C  3400               	retlw	0
  1640  185D  3463               	retlw	99
  1641  185E  3400               	retlw	0
  1642  185F  3468               	retlw	104
  1643  1860  3400               	retlw	0
  1644  1861  346E               	retlw	110
  1645  1862  3400               	retlw	0
  1646  1863  346F               	retlw	111
  1647  1864  3400               	retlw	0
  1648  1865  346C               	retlw	108
  1649  1866  3400               	retlw	0
  1650  1867  346F               	retlw	111
  1651  1868  3400               	retlw	0
  1652  1869  3467               	retlw	103
  1653  186A  3400               	retlw	0
  1654  186B  3479               	retlw	121
  1655  186C  3400               	retlw	0
  1656  186D  3420               	retlw	32
  1657  186E  3400               	retlw	0
  1658  186F  3449               	retlw	73
  1659  1870  3400               	retlw	0
  1660  1871  346E               	retlw	110
  1661  1872  3400               	retlw	0
  1662  1873  3463               	retlw	99
  1663  1874  3400               	retlw	0
  1664  1875  342E               	retlw	46
  1665  1876  3400               	retlw	0
  1666  1877                     __end_of_sd001:	
  1667                           
  1668                           	psect	stringtext5
  1669  1877                     __pstringtext5:	
  1670  1877                     _sd002:	
  1671  1877  341A               	retlw	26
  1672  1878  3403               	retlw	3
  1673  1879  3450               	retlw	80
  1674  187A  3400               	retlw	0
  1675  187B  3472               	retlw	114
  1676  187C  3400               	retlw	0
  1677  187D  346F               	retlw	111
  1678  187E  3400               	retlw	0
  1679  187F  3464               	retlw	100
  1680  1880  3400               	retlw	0
  1681  1881  3475               	retlw	117
  1682  1882  3400               	retlw	0
  1683  1883  3463               	retlw	99
  1684  1884  3400               	retlw	0
  1685  1885  3474               	retlw	116
  1686  1886  3400               	retlw	0
  1687  1887  3420               	retlw	32
  1688  1888  3400               	retlw	0
  1689  1889  344E               	retlw	78
  1690  188A  3400               	retlw	0
  1691  188B  3461               	retlw	97
  1692  188C  3400               	retlw	0
  1693  188D  346D               	retlw	109
  1694  188E  3400               	retlw	0
  1695  188F  3465               	retlw	101
  1696  1890  3400               	retlw	0
  1697  1891                     __end_of_sd002:	
  1698                           
  1699                           	psect	stringtext6
  1700  18C5                     __pstringtext6:	
  1701  18C5                     _device_dsc:	
  1702  18C5  3412               	retlw	18
  1703  18C6  3401               	retlw	1
  1704  18C7  3400               	retlw	0
  1705  18C8  3402               	retlw	2
  1706  18C9  3402               	retlw	2
  1707  18CA  3400               	retlw	0
  1708  18CB  3400               	retlw	0
  1709  18CC  3408               	retlw	8
  1710  18CD  34D8               	retlw	216
  1711  18CE  3404               	retlw	4
  1712  18CF  340A               	retlw	10
  1713  18D0  3400               	retlw	0
  1714  18D1  3400               	retlw	0
  1715  18D2  3401               	retlw	1
  1716  18D3  3401               	retlw	1
  1717  18D4  3402               	retlw	2
  1718  18D5  3400               	retlw	0
  1719  18D6  3401               	retlw	1
  1720  18D7                     __end_of_device_dsc:	
  1721                           
  1722                           	psect	stringtext7
  1723  18D7                     __pstringtext7:	
  1724  18D7                     _sd000:	
  1725  18D7  3404               	retlw	4
  1726  18D8  3403               	retlw	3
  1727  18D9  3409               	retlw	9
  1728  18DA  3404               	retlw	4
  1729  18DB                     __end_of_sd000:	
  1730  20C0                     _cdc_data_rx	set	8384
  1731  2080                     _cdc_data_tx	set	8320
  1732  0011                     _PIR1bits	set	17
  1733  0012                     _PIR2bits	set	18
  1734  000B                     _INTCONbits	set	11
  1735  0073                     _RC3	set	115
  1736  0091                     _PIE1bits	set	145
  1737  0092                     _PIE2bits	set	146
  1738  0097                     _WDTCON	set	151
  1739  0098                     _OSCTUNE	set	152
  1740  0099                     _OSCCON	set	153
  1741  0095                     _OPTION_REGbits	set	149
  1742  008E                     _TRISC	set	142
  1743  008C                     _TRISA	set	140
  1744  04D6                     _PLLRDY	set	1238
  1745  0116                     _BORCON	set	278
  1746  011D                     _APFCON	set	285
  1747  010E                     _LATC	set	270
  1748  010C                     _LATA	set	268
  1749  019A                     _TXREG	set	410
  1750  0199                     _RCREG	set	409
  1751  019D                     _RCSTAbits	set	413
  1752  019C                     _SPBRGH	set	412
  1753  019B                     _SPBRGL	set	411
  1754  019E                     _TXSTA	set	414
  1755  019D                     _RCSTA	set	413
  1756  019F                     _BAUDCON	set	415
  1757  018C                     _ANSELA	set	396
  1758  018E                     _ANSELC	set	398
  1759  0214                     _SSP1STATbits	set	532
  1760  0213                     _SSP1MSK	set	531
  1761  0211                     _SSP1BUF	set	529
  1762  0216                     _SSP1CON2bits	set	534
  1763  0212                     _SSP1ADD	set	530
  1764  0216                     _SSP1CON2	set	534
  1765  0215                     _SSP1CON1	set	533
  1766  0214                     _SSP1STAT	set	532
  1767  0215                     _SSP1CON1bits	set	533
  1768  020C                     _WPUA	set	524
  1769  039B                     _ACTCON	set	923
  1770  0E98                     _UEP0bits	set	3736
  1771  0E8E                     _UCON	set	3726
  1772  0E8F                     _USTAT	set	3727
  1773  0E92                     _UIEbits	set	3730
  1774  0E90                     _UIRbits	set	3728
  1775  0E96                     _UADDR	set	3734
  1776  0E8E                     _UCONbits	set	3726
  1777  0E92                     _UIE	set	3730
  1778  0E97                     _UEIE	set	3735
  1779  0E91                     _UCFG	set	3729
  1780  0E90                     _UIR	set	3728
  1781  0E93                     _UEIR	set	3731
  1782  0E99                     _UEP1	set	3737
  1783  0E98                     _UEP0	set	3736
  1784  18DB                     STR_2:	
  1785  18DB  344F               	retlw	79	;'O'
  1786  18DC  3446               	retlw	70	;'F'
  1787  18DD  3446               	retlw	70	;'F'
  1788  18DE  3400               	retlw	0
  1789                           
  1790                           	psect	stringtext8
  1791  18E5                     __pstringtext8:	
  1792  18E5                     STR_1:	
  1793  18E5  344F               	retlw	79	;'O'
  1794  18E6  344E               	retlw	78	;'N'
  1795  18E7  3400               	retlw	0
  1796                           
  1797                           	psect	stringtext9
  1798  0000                     __pstringtext9:	
  1799                           
  1800                           ; #config settings
  1801  0000                     
  1802                           	psect	cinit
  1803  0036                     start_initialization:	
  1804  0036                     __initialization:	
  1805                           
  1806                           ; Initialize objects allocated to BANK5
  1807  0036  30BD               	movlw	low __pidataBANK5
  1808  0037  0084               	movwf	4
  1809  0038  309F               	movlw	(high __pidataBANK5)| (0+128)
  1810  0039  0085               	movwf	5
  1811  003A  30A0               	movlw	low __pdataBANK5
  1812  003B  0086               	movwf	6
  1813  003C  3002               	movlw	high __pdataBANK5
  1814  003D  0087               	movwf	7
  1815  003E  3000               	movlw	0
  1816  003F  00FF               	movwf	btemp+1
  1817  0040  3020               	movlw	32
  1818  0041  319D  25A3  3180   	fcall	init_ram
  1819                           
  1820                           ; Clear objects allocated to BANK1
  1821  0044  0021               	movlb	1	; select bank1
  1822  0045  01C3               	clrf	__pbssBANK1& (0+127)
  1823  0046  01C4               	clrf	(__pbssBANK1+1)& (0+127)
  1824  0047  01C5               	clrf	(__pbssBANK1+2)& (0+127)
  1825  0048  01C6               	clrf	(__pbssBANK1+3)& (0+127)
  1826  0049  01C7               	clrf	(__pbssBANK1+4)& (0+127)
  1827  004A  01C8               	clrf	(__pbssBANK1+5)& (0+127)
  1828  004B  01C9               	clrf	(__pbssBANK1+6)& (0+127)
  1829                           
  1830                           ; Clear objects allocated to BANK3
  1831  004C  30B0               	movlw	low __pbssBANK3
  1832  004D  0084               	movwf	4
  1833  004E  3001               	movlw	high __pbssBANK3
  1834  004F  0085               	movwf	5
  1835  0050  303F               	movlw	63
  1836  0051  00FE               	movwf	btemp
  1837  0052  3000               	movlw	0
  1838  0053  00FF               	movwf	btemp+1
  1839  0054  319D  2597  3180   	fcall	clear_ram0
  1840                           
  1841                           ; Clear objects allocated to BANK4
  1842  0057  3020               	movlw	low __pbssBANK4
  1843  0058  0084               	movwf	4
  1844  0059  3002               	movlw	high __pbssBANK4
  1845  005A  0085               	movwf	5
  1846  005B  303E               	movlw	62
  1847  005C  00FE               	movwf	btemp
  1848  005D  3000               	movlw	0
  1849  005E  00FF               	movwf	btemp+1
  1850  005F  319D  2597  3180   	fcall	clear_ram0
  1851                           
  1852                           ; Clear objects allocated to BANK6
  1853  0062  3020               	movlw	low __pbssBANK6
  1854  0063  0084               	movwf	4
  1855  0064  3003               	movlw	high __pbssBANK6
  1856  0065  0085               	movwf	5
  1857  0066  3040               	movlw	64
  1858  0067  00FE               	movwf	btemp
  1859  0068  3000               	movlw	0
  1860  0069  00FF               	movwf	btemp+1
  1861  006A  319D  2597  3180   	fcall	clear_ram0
  1862                           
  1863                           ; Clear objects allocated to BANK7
  1864  006D  30A0               	movlw	low __pbssBANK7
  1865  006E  0084               	movwf	4
  1866  006F  3003               	movlw	high __pbssBANK7
  1867  0070  0085               	movwf	5
  1868  0071  3040               	movlw	64
  1869  0072  00FE               	movwf	btemp
  1870  0073  3000               	movlw	0
  1871  0074  00FF               	movwf	btemp+1
  1872  0075  319D  2597         	fcall	clear_ram0
  1873  0077                     end_of_initialization:	
  1874                           ;End of C runtime variable initialization code
  1875                           
  1876  0077                     __end_of__initialization:	
  1877  0077  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1878  0078  0020               	movlb	0
  1879  0079  3190  2800         	ljmp	_main	;jump to C main() function
  1880                           
  1881                           	psect	bssBANK1
  1882  00C3                     __pbssBANK1:	
  1883  00C3                     _inPipes:	
  1884  00C3                     	ds	5
  1885  00C8                     _pBDTEntryEP0OutNext:	
  1886  00C8                     	ds	2
  1887                           
  1888                           	psect	bssBANK3
  1889  01B0                     __pbssBANK3:	
  1890  01B0                     _outPipes:	
  1891  01B0                     	ds	7
  1892  01B7                     _pBDTEntryIn:	
  1893  01B7                     	ds	6
  1894  01BD                     _pBDTEntryOut:	
  1895  01BD                     	ds	6
  1896  01C3                     _USB1msTickCount:	
  1897  01C3                     	ds	4
  1898  01C7                     _ep_data_out:	
  1899  01C7                     	ds	3
  1900  01CA                     _ep_data_in:	
  1901  01CA                     	ds	3
  1902  01CD                     _CDCDataInHandle:	
  1903  01CD                     	ds	2
  1904  01CF                     _CDCDataOutHandle:	
  1905  01CF                     	ds	2
  1906  01D1                     _pCDCDst:	
  1907  01D1                     	ds	2
  1908  01D3                     _pCDCSrc:	
  1909  01D3                     	ds	2
  1910  01D5                     _buttonPressed:	
  1911  01D5                     	ds	1
  1912  01D6                     _USBTicksSinceSuspendEnd:	
  1913  01D6                     	ds	1
  1914  01D7                     _USBDeferOUTDataStagePackets:	
  1915  01D7                     	ds	1
  1916  01D8                     _USBDeferINDataStagePackets:	
  1917  01D8                     	ds	1
  1918  01D9                     _USBStatusStageEnabledFlag2:	
  1919  01D9                     	ds	1
  1920  01DA                     _USBStatusStageEnabledFlag1:	
  1921  01DA                     	ds	1
  1922  01DB                     _USBDeferStatusStagePacket:	
  1923  01DB                     	ds	1
  1924  01DC                     _USBStatusStageTimeoutCounter:	
  1925  01DC                     	ds	1
  1926  01DD                     _BothEP0OutUOWNsSet:	
  1927  01DD                     	ds	1
  1928  01DE                     _endpoint_number:	
  1929  01DE                     	ds	1
  1930  01DF                     _USBBusIsSuspended:	
  1931  01DF                     	ds	1
  1932  01E0                     _RemoteWakeup:	
  1933  01E0                     	ds	1
  1934  01E1                     _pDst:	
  1935  01E1                     	ds	1
  1936  01E2                     _controlTransferState:	
  1937  01E2                     	ds	1
  1938  01E3                     _shortPacketStatus:	
  1939  01E3                     	ds	1
  1940  01E4                     _pBDTEntryEP0OutCurrent:	
  1941  01E4                     	ds	1
  1942  01E5                     _USBDeviceState:	
  1943  01E5                     	ds	1
  1944  01E6                     _control_signal_bitmap:	
  1945  01E6                     	ds	1
  1946  01E7                     _cdc_mem_type:	
  1947  01E7                     	ds	1
  1948  01E8                     _cdc_tx_len:	
  1949  01E8                     	ds	1
  1950  01E9                     _cdc_trf_state:	
  1951  01E9                     	ds	1
  1952  01EA                     _cdc_rx_len:	
  1953  01EA                     	ds	1
  1954  01EB                     _USBAlternateInterface:	
  1955  01EB                     	ds	2
  1956  01ED                     _USTATcopy:	
  1957  01ED                     	ds	1
  1958  01EE                     _USBActiveConfiguration:	
  1959  01EE                     	ds	1
  1960                           
  1961                           	psect	bssBANK4
  1962  0220                     __pbssBANK4:	
  1963  0220                     _i2c_status:	
  1964  0220                     	ds	29
  1965  023D                     _cdc_notice:	
  1966  023D                     	ds	10
  1967  0247                     _BaudRateGen:	
  1968  0247                     	ds	4
  1969  024B                     _i2c_driver_i2cISR:	
  1970  024B                     	ds	2
  1971  024D                     _i2c_driver_busCollisionISR:	
  1972  024D                     	ds	2
  1973  024F                     _dummy_encapsulated_cmd_response:	
  1974  024F                     	ds	8
  1975  0257                     _line_coding:	
  1976  0257                     	ds	7
  1977                           
  1978                           	psect	dataBANK5
  1979  02A0                     __pdataBANK5:	
  1980  02A0                     _fsmStateTable:	
  1981  02A0                     	ds	32
  1982                           
  1983                           	psect	bssBANK6
  1984  0320                     __pbssBANK6:	
  1985  0320                     _readBuffer:	
  1986  0320                     	ds	64
  1987                           
  1988                           	psect	bssBANK7
  1989  03A0                     __pbssBANK7:	
  1990  03A0                     _writeBuffer:	
  1991  03A0                     	ds	64
  1992                           
  1993                           	psect	inittext
  1994  1DA3                     init_ram:	
  1995  1DA3  00FE               	movwf	126
  1996  1DA4                     initloop:	
  1997  1DA4  0012               	moviw fsr0++
  1998  1DA5  001E               	movwi fsr1++
  1999  1DA6  3001               	movlw	1
  2000  1DA7  02FE               	subwf	126,f
  2001  1DA8  3000               	movlw	0
  2002  1DA9  3BFF               	subwfb	127,f
  2003  1DAA  087F               	movf	127,w
  2004  1DAB  047E               	iorwf	126,w
  2005  1DAC  1903               	btfsc	3,2
  2006  1DAD  3400               	retlw	0
  2007  1DAE  2DA4               	goto	initloop
  2008                           
  2009                           	psect	clrtext
  2010  1D97                     clear_ram0:	
  2011                           ;	Called with FSR0 containing the base address, and
  2012                           ;	btemp/btemp+1 has the size to clear
  2013                           
  2014  1D97  0064               	clrwdt	;clear the watchdog before getting into this loop
  2015  1D98                     clrloop0:	
  2016  1D98  0180               	clrf	0	;clear RAM location pointed to by FSR
  2017  1D99  3101               	addfsr 0,1
  2018  1D9A  3001               	movlw	1
  2019  1D9B  02FE               	subwf	126,f
  2020  1D9C  3000               	movlw	0
  2021  1D9D  3BFF               	subwfb	127,f
  2022  1D9E  087F               	movf	127,w
  2023  1D9F  047E               	iorwf	126,w
  2024  1DA0  1903               	btfsc	3,2
  2025  1DA1  3400               	retlw	0	;all done for this memory range, return
  2026  1DA2  2D98               	goto	clrloop0	;have we reached the end yet?
  2027                           
  2028                           	psect	cstackBANK4
  2029  025E                     __pcstackBANK4:	
  2030  025E                     ??_USBCtrlEPService:	
  2031                           
  2032                           ; 1 bytes @ 0x0
  2033  025E                     	ds	3
  2034  0261                     ??_USBDeviceTasks:	
  2035                           
  2036                           ; 1 bytes @ 0x3
  2037  0261                     	ds	2
  2038                           
  2039                           	psect	cstackBANK3
  2040  01EF                     __pcstackBANK3:	
  2041  01EF                     USBDeviceTasks@i:	
  2042                           
  2043                           ; 1 bytes @ 0x0
  2044  01EF                     	ds	1
  2045                           
  2046                           	psect	cstackBANK1
  2047  00A0                     __pcstackBANK1:	
  2048  00A0                     ??i1_USBCtrlEPService:	
  2049                           
  2050                           ; 1 bytes @ 0x0
  2051  00A0                     	ds	3
  2052  00A3                     ??i1_USBDeviceTasks:	
  2053                           
  2054                           ; 1 bytes @ 0x3
  2055  00A3                     	ds	2
  2056  00A5                     ??_INTERRUPT_InterruptManager:	
  2057                           
  2058                           ; 1 bytes @ 0x5
  2059  00A5                     	ds	1
  2060  00A6                     ??_OSCILLATOR_Initialize:	
  2061  00A6                     ??_WDT_Initialize:	
  2062                           ; 1 bytes @ 0x6
  2063                           
  2064  00A6                     ??_USBDeviceInit:	
  2065                           ; 1 bytes @ 0x6
  2066                           
  2067  00A6                     ??_USBDeviceAttach:	
  2068                           ; 1 bytes @ 0x6
  2069                           
  2070  00A6                     ??_EUSART_Initialize:	
  2071                           ; 1 bytes @ 0x6
  2072                           
  2073  00A6                     ??_USBIncrement1msInternalTimers:	
  2074                           ; 1 bytes @ 0x6
  2075                           
  2076  00A6                     ??_USBCtrlEPAllowStatusStage:	
  2077                           ; 1 bytes @ 0x6
  2078                           
  2079  00A6                     ??_USBStallHandler:	
  2080                           ; 1 bytes @ 0x6
  2081                           
  2082  00A6                     ?_USBConfigureEndpoint:	
  2083                           ; 1 bytes @ 0x6
  2084                           
  2085  00A6                     ??_USBCtrlTrfTxService:	
  2086                           ; 1 bytes @ 0x6
  2087                           
  2088  00A6                     ?_strcpy:	
  2089                           ; 1 bytes @ 0x6
  2090                           
  2091  00A6                     ?_strchr:	
  2092                           ; 1 bytes @ 0x6
  2093                           
  2094  00A6                     ??_PIN_MANAGER_Initialize:	
  2095                           ; 1 bytes @ 0x6
  2096                           
  2097  00A6                     ??_USBCheckCDCRequest:	
  2098                           ; 1 bytes @ 0x6
  2099                           
  2100  00A6                     ??_putrsUSBUSART:	
  2101                           ; 1 bytes @ 0x6
  2102                           
  2103  00A6                     ??_USBStdGetDscHandler:	
  2104                           ; 1 bytes @ 0x6
  2105                           
  2106  00A6                     ??_USBStdGetStatusHandler:	
  2107                           ; 1 bytes @ 0x6
  2108                           
  2109  00A6                     ?_USBTransferOnePacket:	
  2110                           ; 1 bytes @ 0x6
  2111                           
  2112  00A6                     ?_memset:	
  2113                           ; 2 bytes @ 0x6
  2114                           
  2115  00A6                     ?_strlen:	
  2116                           ; 2 bytes @ 0x6
  2117                           
  2118  00A6                     USBTransferOnePacket@dir:	
  2119                           ; 2 bytes @ 0x6
  2120                           
  2121  00A6                     USBConfigureEndpoint@direction:	
  2122                           ; 1 bytes @ 0x6
  2123                           
  2124  00A6                     strcpy@from:	
  2125                           ; 1 bytes @ 0x6
  2126                           
  2127  00A6                     memset@p1:	
  2128                           ; 1 bytes @ 0x6
  2129                           
  2130  00A6                     strchr@chr:	
  2131                           ; 2 bytes @ 0x6
  2132                           
  2133  00A6                     strlen@s:	
  2134                           ; 2 bytes @ 0x6
  2135                           
  2136                           
  2137                           ; 2 bytes @ 0x6
  2138  00A6                     	ds	1
  2139  00A7                     ??_USBConfigureEndpoint:	
  2140  00A7                     ??_strcpy:	
  2141                           ; 1 bytes @ 0x7
  2142                           
  2143  00A7                     putrsUSBUSART@pData:	
  2144                           ; 1 bytes @ 0x7
  2145                           
  2146  00A7                     USBDeviceInit@p:	
  2147                           ; 1 bytes @ 0x7
  2148                           
  2149  00A7                     USBTransferOnePacket@data:	
  2150                           ; 2 bytes @ 0x7
  2151                           
  2152  00A7                     USBStdGetStatusHandler@p:	
  2153                           ; 2 bytes @ 0x7
  2154                           
  2155                           
  2156                           ; 2 bytes @ 0x7
  2157  00A7                     	ds	1
  2158  00A8                     ??_strlen:	
  2159  00A8                     ??_strchr:	
  2160                           ; 1 bytes @ 0x8
  2161                           
  2162  00A8                     ??_USBCtrlTrfRxService:	
  2163                           ; 1 bytes @ 0x8
  2164                           
  2165  00A8                     putrsUSBUSART@data:	
  2166                           ; 1 bytes @ 0x8
  2167                           
  2168  00A8                     USBCtrlTrfTxService@byteToSend:	
  2169                           ; 1 bytes @ 0x8
  2170                           
  2171  00A8                     strcpy@to:	
  2172                           ; 1 bytes @ 0x8
  2173                           
  2174  00A8                     strchr@ptr:	
  2175                           ; 1 bytes @ 0x8
  2176                           
  2177  00A8                     memset@c:	
  2178                           ; 1 bytes @ 0x8
  2179                           
  2180                           
  2181                           ; 2 bytes @ 0x8
  2182  00A8                     	ds	1
  2183  00A9                     ??_USBCtrlTrfInHandler:	
  2184  00A9                     ??_USBCtrlEPAllowDataStage:	
  2185                           ; 1 bytes @ 0x9
  2186                           
  2187  00A9                     putrsUSBUSART@len:	
  2188                           ; 1 bytes @ 0x9
  2189                           
  2190  00A9                     USBDeviceInit@i_1495:	
  2191                           ; 1 bytes @ 0x9
  2192                           
  2193  00A9                     USBTransferOnePacket@len:	
  2194                           ; 1 bytes @ 0x9
  2195                           
  2196  00A9                     strcpy@cp:	
  2197                           ; 1 bytes @ 0x9
  2198                           
  2199                           
  2200                           ; 1 bytes @ 0x9
  2201  00A9                     	ds	1
  2202  00AA                     ??_USBTransferOnePacket:	
  2203  00AA                     USBDeviceInit@i:	
  2204                           ; 1 bytes @ 0xA
  2205                           
  2206  00AA                     USBCtrlTrfRxService@i:	
  2207                           ; 1 bytes @ 0xA
  2208                           
  2209  00AA                     memset@n:	
  2210                           ; 1 bytes @ 0xA
  2211                           
  2212  00AA                     strlen@cp:	
  2213                           ; 2 bytes @ 0xA
  2214                           
  2215                           
  2216                           ; 2 bytes @ 0xA
  2217  00AA                     	ds	1
  2218  00AB                     ??_SYSTEM_Initialize:	
  2219  00AB                     ??_USBCtrlEPServiceComplete:	
  2220                           ; 1 bytes @ 0xB
  2221                           
  2222  00AB                     USBConfigureEndpoint@EPNum:	
  2223                           ; 1 bytes @ 0xB
  2224                           
  2225  00AB                     USBCtrlTrfRxService@byteToRead:	
  2226                           ; 1 bytes @ 0xB
  2227                           
  2228  00AB                     USBCtrlTrfInHandler@lastDTS:	
  2229                           ; 1 bytes @ 0xB
  2230                           
  2231                           
  2232                           ; 1 bytes @ 0xB
  2233  00AB                     	ds	1
  2234  00AC                     ??_memset:	
  2235  00AC                     ??_USBCtrlTrfOutHandler:	
  2236                           ; 1 bytes @ 0xC
  2237                           
  2238  00AC                     ?_strncmp:	
  2239                           ; 1 bytes @ 0xC
  2240                           
  2241  00AC                     USBConfigureEndpoint@handle:	
  2242                           ; 2 bytes @ 0xC
  2243                           
  2244  00AC                     memset@p:	
  2245                           ; 1 bytes @ 0xC
  2246                           
  2247  00AC                     strncmp@s2:	
  2248                           ; 2 bytes @ 0xC
  2249                           
  2250                           
  2251                           ; 2 bytes @ 0xC
  2252  00AC                     	ds	1
  2253  00AD                     ?_USBEnableEndpoint:	
  2254  00AD                     USBEnableEndpoint@options:	
  2255                           ; 1 bytes @ 0xD
  2256                           
  2257                           
  2258                           ; 1 bytes @ 0xD
  2259  00AD                     	ds	1
  2260  00AE                     ??_USBEnableEndpoint:	
  2261  00AE                     USBTransferOnePacket@ep:	
  2262                           ; 1 bytes @ 0xE
  2263                           
  2264  00AE                     strncmp@len:	
  2265                           ; 1 bytes @ 0xE
  2266                           
  2267                           
  2268                           ; 2 bytes @ 0xE
  2269  00AE                     	ds	1
  2270  00AF                     USBTransferOnePacket@handle:	
  2271                           
  2272                           ; 2 bytes @ 0xF
  2273  00AF                     	ds	1
  2274  00B0                     ??_strncmp:	
  2275  00B0                     USBEnableEndpoint@p:	
  2276                           ; 1 bytes @ 0x10
  2277                           
  2278                           
  2279                           ; 2 bytes @ 0x10
  2280  00B0                     	ds	1
  2281  00B1                     ?_getsUSBUSART:	
  2282  00B1                     ??_CDCTxService:	
  2283                           ; 1 bytes @ 0x11
  2284                           
  2285  00B1                     getsUSBUSART@len:	
  2286                           ; 1 bytes @ 0x11
  2287                           
  2288                           
  2289                           ; 1 bytes @ 0x11
  2290  00B1                     	ds	1
  2291  00B2                     ??_getsUSBUSART:	
  2292  00B2                     CDCTxService@i:	
  2293                           ; 1 bytes @ 0x12
  2294                           
  2295  00B2                     USBEnableEndpoint@ep:	
  2296                           ; 1 bytes @ 0x12
  2297                           
  2298  00B2                     strncmp@s1:	
  2299                           ; 1 bytes @ 0x12
  2300                           
  2301                           
  2302                           ; 1 bytes @ 0x12
  2303  00B2                     	ds	1
  2304  00B3                     ?_strstr:	
  2305  00B3                     ??_CDCInitEP:	
  2306                           ; 1 bytes @ 0x13
  2307                           
  2308  00B3                     CDCTxService@byte_to_send:	
  2309                           ; 1 bytes @ 0x13
  2310                           
  2311  00B3                     strstr@s2:	
  2312                           ; 1 bytes @ 0x13
  2313                           
  2314                           
  2315                           ; 2 bytes @ 0x13
  2316  00B3                     	ds	1
  2317  00B4                     ?_USER_USB_CALLBACK_EVENT_HANDLER:	
  2318  00B4                     getsUSBUSART@buffer:	
  2319                           ; 1 bytes @ 0x14
  2320                           
  2321  00B4                     USER_USB_CALLBACK_EVENT_HANDLER@event:	
  2322                           ; 1 bytes @ 0x14
  2323                           
  2324                           
  2325                           ; 2 bytes @ 0x14
  2326  00B4                     	ds	1
  2327  00B5                     ??_strstr:	
  2328                           
  2329                           ; 1 bytes @ 0x15
  2330  00B5                     	ds	1
  2331  00B6                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  2332                           
  2333                           ; 2 bytes @ 0x16
  2334  00B6                     	ds	2
  2335  00B8                     strstr@s1:	
  2336  00B8                     USER_USB_CALLBACK_EVENT_HANDLER@size:	
  2337                           ; 1 bytes @ 0x18
  2338                           
  2339                           
  2340                           ; 2 bytes @ 0x18
  2341  00B8                     	ds	1
  2342  00B9                     ??_UserApplication:	
  2343                           
  2344                           ; 1 bytes @ 0x19
  2345  00B9                     	ds	1
  2346  00BA                     ??_USBWakeFromSuspend:	
  2347  00BA                     ??_USBSuspend:	
  2348                           ; 1 bytes @ 0x1A
  2349                           
  2350  00BA                     ??_USBStdFeatureReqHandler:	
  2351                           ; 1 bytes @ 0x1A
  2352                           
  2353  00BA                     ??_USER_USB_CALLBACK_EVENT_HANDLER:	
  2354                           ; 1 bytes @ 0x1A
  2355                           
  2356  00BA                     ??_USBStdSetCfgHandler:	
  2357                           ; 1 bytes @ 0x1A
  2358                           
  2359                           
  2360                           ; 1 bytes @ 0x1A
  2361  00BA                     	ds	1
  2362  00BB                     UserApplication@numBytesRead:	
  2363  00BB                     USBStdSetCfgHandler@p:	
  2364                           ; 1 bytes @ 0x1B
  2365                           
  2366                           
  2367                           ; 2 bytes @ 0x1B
  2368  00BB                     	ds	1
  2369  00BC                     USBStdFeatureReqHandler@pUEP:	
  2370                           
  2371                           ; 2 bytes @ 0x1C
  2372  00BC                     	ds	1
  2373  00BD                     USBStdSetCfgHandler@i_2167:	
  2374                           
  2375                           ; 1 bytes @ 0x1D
  2376  00BD                     	ds	1
  2377  00BE                     USBStdSetCfgHandler@i:	
  2378  00BE                     USBStdFeatureReqHandler@current_ep_data:	
  2379                           ; 1 bytes @ 0x1E
  2380                           
  2381                           
  2382                           ; 1 bytes @ 0x1E
  2383  00BE                     	ds	1
  2384  00BF                     USBStdFeatureReqHandler@p:	
  2385                           
  2386                           ; 2 bytes @ 0x1F
  2387  00BF                     	ds	2
  2388  00C1                     ??_USBCheckStdRequest:	
  2389                           
  2390                           ; 1 bytes @ 0x21
  2391  00C1                     	ds	1
  2392  00C2                     ??_USBCtrlTrfSetupHandler:	
  2393                           
  2394                           ; 1 bytes @ 0x22
  2395  00C2                     	ds	1
  2396  00C3                     ??_main:	
  2397                           
  2398                           	psect	cstackCOMMON
  2399  0070                     __pcstackCOMMON:	
  2400                           ; 1 bytes @ 0x23
  2401                           
  2402  0070                     ?_i2c_driver_isNACK:	
  2403  0070                     ?_OSCILLATOR_Initialize:	
  2404                           ; 1 bit 
  2405                           
  2406  0070                     ?_WDT_Initialize:	
  2407                           ; 1 bytes @ 0x0
  2408                           
  2409  0070                     ?_USBDeviceInit:	
  2410                           ; 1 bytes @ 0x0
  2411                           
  2412  0070                     ?_USBDeviceAttach:	
  2413                           ; 1 bytes @ 0x0
  2414                           
  2415  0070                     ?_EUSART_Initialize:	
  2416                           ; 1 bytes @ 0x0
  2417                           
  2418  0070                     ?_USBDeviceTasks:	
  2419                           ; 1 bytes @ 0x0
  2420                           
  2421  0070                     ?_USBWakeFromSuspend:	
  2422                           ; 1 bytes @ 0x0
  2423                           
  2424  0070                     ?_USBSuspend:	
  2425                           ; 1 bytes @ 0x0
  2426                           
  2427  0070                     ?_USBIncrement1msInternalTimers:	
  2428                           ; 1 bytes @ 0x0
  2429                           
  2430  0070                     ?_USBCtrlEPAllowStatusStage:	
  2431                           ; 1 bytes @ 0x0
  2432                           
  2433  0070                     ?_USBStallHandler:	
  2434                           ; 1 bytes @ 0x0
  2435                           
  2436  0070                     ?_USBCtrlEPService:	
  2437                           ; 1 bytes @ 0x0
  2438                           
  2439  0070                     ?_USBCtrlTrfTxService:	
  2440                           ; 1 bytes @ 0x0
  2441                           
  2442  0070                     ?_USBCtrlTrfSetupHandler:	
  2443                           ; 1 bytes @ 0x0
  2444                           
  2445  0070                     ?_USBCtrlTrfOutHandler:	
  2446                           ; 1 bytes @ 0x0
  2447                           
  2448  0070                     ?_USBCtrlTrfInHandler:	
  2449                           ; 1 bytes @ 0x0
  2450                           
  2451  0070                     ?_USBCheckStdRequest:	
  2452                           ; 1 bytes @ 0x0
  2453                           
  2454  0070                     ?_USBStdFeatureReqHandler:	
  2455                           ; 1 bytes @ 0x0
  2456                           
  2457  0070                     ?_setCallBack:	
  2458                           ; 1 bytes @ 0x0
  2459                           
  2460  0070                     ?_mssp_clearIRQ:	
  2461                           ; 1 bytes @ 0x0
  2462                           
  2463  0070                     ??_mssp_clearIRQ:	
  2464                           ; 1 bytes @ 0x0
  2465                           
  2466  0070                     ?_i2c_busCollisionISR:	
  2467                           ; 1 bytes @ 0x0
  2468                           
  2469  0070                     ??_i2c_busCollisionISR:	
  2470                           ; 1 bytes @ 0x0
  2471                           
  2472  0070                     ?_i2c_ISR:	
  2473                           ; 1 bytes @ 0x0
  2474                           
  2475  0070                     ?_i2c_driver_resetBus:	
  2476                           ; 1 bytes @ 0x0
  2477                           
  2478  0070                     ??_i2c_driver_resetBus:	
  2479                           ; 1 bytes @ 0x0
  2480                           
  2481  0070                     ?_i2c_driver_restart:	
  2482                           ; 1 bytes @ 0x0
  2483                           
  2484  0070                     ??_i2c_driver_restart:	
  2485                           ; 1 bytes @ 0x0
  2486                           
  2487  0070                     ?_i2c_driver_stop:	
  2488                           ; 1 bytes @ 0x0
  2489                           
  2490  0070                     ??_i2c_driver_stop:	
  2491                           ; 1 bytes @ 0x0
  2492                           
  2493  0070                     ?_i2c_driver_TXData:	
  2494                           ; 1 bytes @ 0x0
  2495                           
  2496  0070                     ??_i2c_driver_TXData:	
  2497                           ; 1 bytes @ 0x0
  2498                           
  2499  0070                     ?_i2c_driver_startRX:	
  2500                           ; 1 bytes @ 0x0
  2501                           
  2502  0070                     ??_i2c_driver_startRX:	
  2503                           ; 1 bytes @ 0x0
  2504                           
  2505  0070                     ?_i2c_driver_sendACK:	
  2506                           ; 1 bytes @ 0x0
  2507                           
  2508  0070                     ??_i2c_driver_sendACK:	
  2509                           ; 1 bytes @ 0x0
  2510                           
  2511  0070                     ?_i2c_driver_sendNACK:	
  2512                           ; 1 bytes @ 0x0
  2513                           
  2514  0070                     ??_i2c_driver_sendNACK:	
  2515                           ; 1 bytes @ 0x0
  2516                           
  2517  0070                     ??_i2c_driver_isNACK:	
  2518                           ; 1 bytes @ 0x0
  2519                           
  2520  0070                     ?_i2c_driver_getRXData:	
  2521                           ; 1 bytes @ 0x0
  2522                           
  2523  0070                     ??_i2c_driver_getRXData:	
  2524                           ; 1 bytes @ 0x0
  2525                           
  2526  0070                     ?_mssp_setIRQ:	
  2527                           ; 1 bytes @ 0x0
  2528                           
  2529  0070                     ??_mssp_setIRQ:	
  2530                           ; 1 bytes @ 0x0
  2531                           
  2532  0070                     ?_i2c_driver_clearBusCollision:	
  2533                           ; 1 bytes @ 0x0
  2534                           
  2535  0070                     ??_i2c_driver_clearBusCollision:	
  2536                           ; 1 bytes @ 0x0
  2537                           
  2538  0070                     ?_UserApplication:	
  2539                           ; 1 bytes @ 0x0
  2540                           
  2541  0070                     ?_PIN_MANAGER_Initialize:	
  2542                           ; 1 bytes @ 0x0
  2543                           
  2544  0070                     ?_SYSTEM_Initialize:	
  2545                           ; 1 bytes @ 0x0
  2546                           
  2547  0070                     ?_INTERRUPT_InterruptManager:	
  2548                           ; 1 bytes @ 0x0
  2549                           
  2550  0070                     ?_USBCheckCDCRequest:	
  2551                           ; 1 bytes @ 0x0
  2552                           
  2553  0070                     ?_CDCInitEP:	
  2554                           ; 1 bytes @ 0x0
  2555                           
  2556  0070                     ?_putrsUSBUSART:	
  2557                           ; 1 bytes @ 0x0
  2558                           
  2559  0070                     ?_CDCTxService:	
  2560                           ; 1 bytes @ 0x0
  2561                           
  2562  0070                     ?_USBCtrlEPAllowDataStage:	
  2563                           ; 1 bytes @ 0x0
  2564                           
  2565  0070                     ?_USBCtrlEPServiceComplete:	
  2566                           ; 1 bytes @ 0x0
  2567                           
  2568  0070                     ?_USBCtrlTrfRxService:	
  2569                           ; 1 bytes @ 0x0
  2570                           
  2571  0070                     ?_USBStdSetCfgHandler:	
  2572                           ; 1 bytes @ 0x0
  2573                           
  2574  0070                     ?_USBStdGetDscHandler:	
  2575                           ; 1 bytes @ 0x0
  2576                           
  2577  0070                     ?_USBStdGetStatusHandler:	
  2578                           ; 1 bytes @ 0x0
  2579                           
  2580  0070                     ?_i2c_setBuffer:	
  2581                           ; 1 bytes @ 0x0
  2582                           
  2583  0070                     ?_do_I2C_RESET:	
  2584                           ; 1 bytes @ 0x0
  2585                           
  2586  0070                     ??_do_I2C_RESET:	
  2587                           ; 1 bytes @ 0x0
  2588                           
  2589  0070                     ?_do_I2C_IDLE:	
  2590                           ; 1 bytes @ 0x0
  2591                           
  2592  0070                     ??_do_I2C_IDLE:	
  2593                           ; 1 bytes @ 0x0
  2594                           
  2595  0070                     ?_do_I2C_SEND_RESTART_READ:	
  2596                           ; 1 bytes @ 0x0
  2597                           
  2598  0070                     ??_do_I2C_SEND_RESTART_READ:	
  2599                           ; 1 bytes @ 0x0
  2600                           
  2601  0070                     ?_do_I2C_SEND_RESTART_WRITE:	
  2602                           ; 1 bytes @ 0x0
  2603                           
  2604  0070                     ??_do_I2C_SEND_RESTART_WRITE:	
  2605                           ; 1 bytes @ 0x0
  2606                           
  2607  0070                     ?_do_I2C_SEND_RESTART:	
  2608                           ; 1 bytes @ 0x0
  2609                           
  2610  0070                     ??_do_I2C_SEND_RESTART:	
  2611                           ; 1 bytes @ 0x0
  2612                           
  2613  0070                     ?_do_I2C_SEND_STOP:	
  2614                           ; 1 bytes @ 0x0
  2615                           
  2616  0070                     ??_do_I2C_SEND_STOP:	
  2617                           ; 1 bytes @ 0x0
  2618                           
  2619  0070                     ?_do_I2C_SEND_ADR_READ:	
  2620                           ; 1 bytes @ 0x0
  2621                           
  2622  0070                     ??_do_I2C_SEND_ADR_READ:	
  2623                           ; 1 bytes @ 0x0
  2624                           
  2625  0070                     ?_do_I2C_SEND_ADR_WRITE:	
  2626                           ; 1 bytes @ 0x0
  2627                           
  2628  0070                     ?_do_I2C_RCEN:	
  2629                           ; 1 bytes @ 0x0
  2630                           
  2631  0070                     ??_do_I2C_RCEN:	
  2632                           ; 1 bytes @ 0x0
  2633                           
  2634  0070                     ?_do_I2C_DO_ACK:	
  2635                           ; 1 bytes @ 0x0
  2636                           
  2637  0070                     ??_do_I2C_DO_ACK:	
  2638                           ; 1 bytes @ 0x0
  2639                           
  2640  0070                     ?_do_I2C_DO_NACK_STOP:	
  2641                           ; 1 bytes @ 0x0
  2642                           
  2643  0070                     ??_do_I2C_DO_NACK_STOP:	
  2644                           ; 1 bytes @ 0x0
  2645                           
  2646  0070                     ?_do_I2C_DO_NACK_RESTART:	
  2647                           ; 1 bytes @ 0x0
  2648                           
  2649  0070                     ??_do_I2C_DO_NACK_RESTART:	
  2650                           ; 1 bytes @ 0x0
  2651                           
  2652  0070                     ?_do_I2C_DO_ADDRESS_NACK:	
  2653                           ; 1 bytes @ 0x0
  2654                           
  2655  0070                     ??_do_I2C_DO_ADDRESS_NACK:	
  2656                           ; 1 bytes @ 0x0
  2657                           
  2658  0070                     ?_do_I2C_TX:	
  2659                           ; 1 bytes @ 0x0
  2660                           
  2661  0070                     ?_do_I2C_RX:	
  2662                           ; 1 bytes @ 0x0
  2663                           
  2664  0070                     ??_do_I2C_RX:	
  2665                           ; 1 bytes @ 0x0
  2666                           
  2667  0070                     ?_do_I2C_TX_EMPTY:	
  2668                           ; 1 bytes @ 0x0
  2669                           
  2670  0070                     ??_do_I2C_TX_EMPTY:	
  2671                           ; 1 bytes @ 0x0
  2672                           
  2673  0070                     ?_main:	
  2674                           ; 1 bytes @ 0x0
  2675                           
  2676  0070                     ?i1_USBCheckCDCRequest:	
  2677                           ; 1 bytes @ 0x0
  2678                           
  2679  0070                     ??i1_USBCheckCDCRequest:	
  2680                           ; 1 bytes @ 0x0
  2681                           
  2682  0070                     ?i1_CDCInitEP:	
  2683                           ; 1 bytes @ 0x0
  2684                           
  2685  0070                     ?i1_USBDeviceInit:	
  2686                           ; 1 bytes @ 0x0
  2687                           
  2688  0070                     ??i1_USBDeviceInit:	
  2689                           ; 1 bytes @ 0x0
  2690                           
  2691  0070                     ?i1_USBDeviceTasks:	
  2692                           ; 1 bytes @ 0x0
  2693                           
  2694  0070                     ?i1_USBCtrlEPAllowStatusStage:	
  2695                           ; 1 bytes @ 0x0
  2696                           
  2697  0070                     ??i1_USBCtrlEPAllowStatusStage:	
  2698                           ; 1 bytes @ 0x0
  2699                           
  2700  0070                     ?i1_USBCtrlEPAllowDataStage:	
  2701                           ; 1 bytes @ 0x0
  2702                           
  2703  0070                     ?i1_USBConfigureEndpoint:	
  2704                           ; 1 bytes @ 0x0
  2705                           
  2706  0070                     ?i1_USBCtrlEPServiceComplete:	
  2707                           ; 1 bytes @ 0x0
  2708                           
  2709  0070                     ?i1_USBCtrlTrfTxService:	
  2710                           ; 1 bytes @ 0x0
  2711                           
  2712  0070                     ??i1_USBCtrlTrfTxService:	
  2713                           ; 1 bytes @ 0x0
  2714                           
  2715  0070                     ?i1_USBCtrlTrfRxService:	
  2716                           ; 1 bytes @ 0x0
  2717                           
  2718  0070                     ?i1_USBStdSetCfgHandler:	
  2719                           ; 1 bytes @ 0x0
  2720                           
  2721  0070                     ?i1_USBStdGetDscHandler:	
  2722                           ; 1 bytes @ 0x0
  2723                           
  2724  0070                     ??i1_USBStdGetDscHandler:	
  2725                           ; 1 bytes @ 0x0
  2726                           
  2727  0070                     ?i1_USBStdGetStatusHandler:	
  2728                           ; 1 bytes @ 0x0
  2729                           
  2730  0070                     ??i1_USBStdGetStatusHandler:	
  2731                           ; 1 bytes @ 0x0
  2732                           
  2733  0070                     ?i1_USBStallHandler:	
  2734                           ; 1 bytes @ 0x0
  2735                           
  2736  0070                     ??i1_USBStallHandler:	
  2737                           ; 1 bytes @ 0x0
  2738                           
  2739  0070                     ?i1_USBSuspend:	
  2740                           ; 1 bytes @ 0x0
  2741                           
  2742  0070                     ?i1_USBWakeFromSuspend:	
  2743                           ; 1 bytes @ 0x0
  2744                           
  2745  0070                     ?i1_USBCtrlEPService:	
  2746                           ; 1 bytes @ 0x0
  2747                           
  2748  0070                     ?i1_USBCtrlTrfSetupHandler:	
  2749                           ; 1 bytes @ 0x0
  2750                           
  2751  0070                     ?i1_USBCtrlTrfOutHandler:	
  2752                           ; 1 bytes @ 0x0
  2753                           
  2754  0070                     ?i1_USBCtrlTrfInHandler:	
  2755                           ; 1 bytes @ 0x0
  2756                           
  2757  0070                     ?i1_USBCheckStdRequest:	
  2758                           ; 1 bytes @ 0x0
  2759                           
  2760  0070                     ?i1_USBStdFeatureReqHandler:	
  2761                           ; 1 bytes @ 0x0
  2762                           
  2763  0070                     ?i1_USBIncrement1msInternalTimers:	
  2764                           ; 1 bytes @ 0x0
  2765                           
  2766  0070                     ??i1_USBIncrement1msInternalTimers:	
  2767                           ; 1 bytes @ 0x0
  2768                           
  2769  0070                     ?i1_memset:	
  2770                           ; 1 bytes @ 0x0
  2771                           
  2772  0070                     ?i1_USBTransferOnePacket:	
  2773                           ; 1 bytes @ 0x0
  2774                           
  2775  0070                     i2c_driver_TXData@d:	
  2776                           ; 2 bytes @ 0x0
  2777                           
  2778  0070                     i1USBTransferOnePacket@dir:	
  2779                           ; 1 bytes @ 0x0
  2780                           
  2781  0070                     i1USBConfigureEndpoint@direction:	
  2782                           ; 1 bytes @ 0x0
  2783                           
  2784  0070                     i2c_setBuffer@bufferSize:	
  2785                           ; 1 bytes @ 0x0
  2786                           
  2787  0070                     setCallBack@cb:	
  2788                           ; 2 bytes @ 0x0
  2789                           
  2790  0070                     i1memset@p1:	
  2791                           ; 2 bytes @ 0x0
  2792                           
  2793                           
  2794                           ; 2 bytes @ 0x0
  2795  0070                     	ds	1
  2796  0071                     ??_do_I2C_SEND_ADR_WRITE:	
  2797  0071                     ??_do_I2C_TX:	
  2798                           ; 1 bytes @ 0x1
  2799                           
  2800  0071                     ??i1_USBConfigureEndpoint:	
  2801                           ; 1 bytes @ 0x1
  2802                           
  2803  0071                     i1USBDeviceInit@p:	
  2804                           ; 1 bytes @ 0x1
  2805                           
  2806  0071                     i1USBTransferOnePacket@data:	
  2807                           ; 2 bytes @ 0x1
  2808                           
  2809  0071                     i1USBStdGetStatusHandler@p:	
  2810                           ; 2 bytes @ 0x1
  2811                           
  2812                           
  2813                           ; 2 bytes @ 0x1
  2814  0071                     	ds	1
  2815  0072                     ??_i2c_setBuffer:	
  2816  0072                     ??i1_USBCtrlTrfRxService:	
  2817                           ; 1 bytes @ 0x2
  2818                           
  2819  0072                     setCallBack@p:	
  2820                           ; 1 bytes @ 0x2
  2821                           
  2822  0072                     i1USBCtrlTrfTxService@byteToSend:	
  2823                           ; 1 bytes @ 0x2
  2824                           
  2825  0072                     _do_I2C_TX$2631:	
  2826                           ; 1 bytes @ 0x2
  2827                           
  2828  0072                     i1memset@c:	
  2829                           ; 2 bytes @ 0x2
  2830                           
  2831                           
  2832                           ; 2 bytes @ 0x2
  2833  0072                     	ds	1
  2834  0073                     ??_setCallBack:	
  2835  0073                     ??i1_USBCtrlEPAllowDataStage:	
  2836                           ; 1 bytes @ 0x3
  2837                           
  2838  0073                     ??i1_USBCtrlTrfInHandler:	
  2839                           ; 1 bytes @ 0x3
  2840                           
  2841  0073                     i2c_setBuffer@buffer:	
  2842                           ; 1 bytes @ 0x3
  2843                           
  2844  0073                     i1USBDeviceInit@i_1495:	
  2845                           ; 1 bytes @ 0x3
  2846                           
  2847  0073                     i1USBTransferOnePacket@len:	
  2848                           ; 1 bytes @ 0x3
  2849                           
  2850                           
  2851                           ; 1 bytes @ 0x3
  2852  0073                     	ds	1
  2853  0074                     ??_i2c_ISR:	
  2854  0074                     ??i1_USBTransferOnePacket:	
  2855                           ; 1 bytes @ 0x4
  2856                           
  2857  0074                     setCallBack@idx:	
  2858                           ; 1 bytes @ 0x4
  2859                           
  2860  0074                     i1USBDeviceInit@i:	
  2861                           ; 1 bytes @ 0x4
  2862                           
  2863  0074                     i1USBCtrlTrfRxService@i:	
  2864                           ; 1 bytes @ 0x4
  2865                           
  2866  0074                     i1memset@n:	
  2867                           ; 1 bytes @ 0x4
  2868                           
  2869                           
  2870                           ; 2 bytes @ 0x4
  2871  0074                     	ds	1
  2872  0075                     ?_i2c_setDataCompleteCallback:	
  2873  0075                     ??i1_USBCtrlEPServiceComplete:	
  2874                           ; 1 bytes @ 0x5
  2875                           
  2876  0075                     i1USBConfigureEndpoint@EPNum:	
  2877                           ; 1 bytes @ 0x5
  2878                           
  2879  0075                     i1USBCtrlTrfRxService@byteToRead:	
  2880                           ; 1 bytes @ 0x5
  2881                           
  2882  0075                     i1USBCtrlTrfInHandler@lastDTS:	
  2883                           ; 1 bytes @ 0x5
  2884                           
  2885  0075                     i2c_setDataCompleteCallback@cb:	
  2886                           ; 1 bytes @ 0x5
  2887                           
  2888                           
  2889                           ; 2 bytes @ 0x5
  2890  0075                     	ds	1
  2891  0076                     ??i1_USBCtrlTrfOutHandler:	
  2892  0076                     ??i1_memset:	
  2893                           ; 1 bytes @ 0x6
  2894                           
  2895  0076                     i1USBConfigureEndpoint@handle:	
  2896                           ; 1 bytes @ 0x6
  2897                           
  2898  0076                     i1memset@p:	
  2899                           ; 1 bytes @ 0x6
  2900                           
  2901                           
  2902                           ; 2 bytes @ 0x6
  2903  0076                     	ds	1
  2904  0077                     ?i1_USBEnableEndpoint:	
  2905  0077                     i2c_setDataCompleteCallback@p:	
  2906                           ; 1 bytes @ 0x7
  2907                           
  2908  0077                     i1USBEnableEndpoint@options:	
  2909                           ; 1 bytes @ 0x7
  2910                           
  2911                           
  2912                           ; 1 bytes @ 0x7
  2913  0077                     	ds	1
  2914  0078                     ??_i2c_setDataCompleteCallback:	
  2915  0078                     ??i1_USBEnableEndpoint:	
  2916                           ; 1 bytes @ 0x8
  2917                           
  2918  0078                     i1USBTransferOnePacket@ep:	
  2919                           ; 1 bytes @ 0x8
  2920                           
  2921                           
  2922                           ; 1 bytes @ 0x8
  2923  0078                     	ds	1
  2924  0079                     ?_returnStop:	
  2925  0079                     ?_returnReset:	
  2926                           ; 1 bytes @ 0x9
  2927                           
  2928  0079                     ?_i2c_restartWrite:	
  2929                           ; 1 bytes @ 0x9
  2930                           
  2931  0079                     ?_wr1RegCompleteHandler:	
  2932                           ; 1 bytes @ 0x9
  2933                           
  2934  0079                     ?_rd1RegCompleteHandler:	
  2935                           ; 1 bytes @ 0x9
  2936                           
  2937  0079                     ?_rd2RegCompleteHandler:	
  2938                           ; 1 bytes @ 0x9
  2939                           
  2940  0079                     ?_wr2RegCompleteHandler:	
  2941                           ; 1 bytes @ 0x9
  2942                           
  2943  0079                     ?_rdBlkRegCompleteHandler:	
  2944                           ; 1 bytes @ 0x9
  2945                           
  2946  0079                     returnStop@p:	
  2947                           ; 1 bytes @ 0x9
  2948                           
  2949  0079                     returnReset@p:	
  2950                           ; 1 bytes @ 0x9
  2951                           
  2952  0079                     i2c_restartWrite@p:	
  2953                           ; 1 bytes @ 0x9
  2954                           
  2955  0079                     wr1RegCompleteHandler@p:	
  2956                           ; 1 bytes @ 0x9
  2957                           
  2958  0079                     rd1RegCompleteHandler@p:	
  2959                           ; 1 bytes @ 0x9
  2960                           
  2961  0079                     rd2RegCompleteHandler@p:	
  2962                           ; 1 bytes @ 0x9
  2963                           
  2964  0079                     wr2RegCompleteHandler@p:	
  2965                           ; 1 bytes @ 0x9
  2966                           
  2967  0079                     rdBlkRegCompleteHandler@p:	
  2968                           ; 1 bytes @ 0x9
  2969                           
  2970  0079                     i1USBTransferOnePacket@handle:	
  2971                           ; 1 bytes @ 0x9
  2972                           
  2973                           
  2974                           ; 2 bytes @ 0x9
  2975  0079                     	ds	1
  2976  007A                     ??_returnStop:	
  2977  007A                     ??_returnReset:	
  2978                           ; 1 bytes @ 0xA
  2979                           
  2980  007A                     ??_i2c_restartWrite:	
  2981                           ; 1 bytes @ 0xA
  2982                           
  2983  007A                     ??_wr1RegCompleteHandler:	
  2984                           ; 1 bytes @ 0xA
  2985                           
  2986  007A                     ??_rd1RegCompleteHandler:	
  2987                           ; 1 bytes @ 0xA
  2988                           
  2989  007A                     ??_rd2RegCompleteHandler:	
  2990                           ; 1 bytes @ 0xA
  2991                           
  2992  007A                     ??_wr2RegCompleteHandler:	
  2993                           ; 1 bytes @ 0xA
  2994                           
  2995  007A                     ??_rdBlkRegCompleteHandler:	
  2996                           ; 1 bytes @ 0xA
  2997                           
  2998  007A                     i1USBEnableEndpoint@p:	
  2999                           ; 1 bytes @ 0xA
  3000                           
  3001                           
  3002                           ; 2 bytes @ 0xA
  3003  007A                     	ds	2
  3004  007C                     i1USBEnableEndpoint@ep:	
  3005                           
  3006                           ; 1 bytes @ 0xC
  3007  007C                     	ds	1
  3008  007D                     ??i1_CDCInitEP:	
  3009                           
  3010                           ; 1 bytes @ 0xD
  3011  007D                     	ds	1
  3012  007E                     ??i1_USER_USB_CALLBACK_EVENT_HANDLER:	
  3013                           
  3014                           	psect	cstackBANK0h
  3015  0060                     __pcstackBANK0h:	
  3016                           ; 1 bytes @ 0xE
  3017                           
  3018  0060                     ?i1_USER_USB_CALLBACK_EVENT_HANDLER:	
  3019  0060                     i1USER_USB_CALLBACK_EVENT_HANDLER@event:	
  3020                           ; 1 bytes @ 0x0
  3021                           
  3022                           
  3023                           ; 2 bytes @ 0x0
  3024  0060                     	ds	2
  3025  0062                     i1USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  3026                           
  3027                           ; 2 bytes @ 0x2
  3028  0062                     	ds	2
  3029  0064                     i1USER_USB_CALLBACK_EVENT_HANDLER@size:	
  3030                           
  3031                           ; 2 bytes @ 0x4
  3032  0064                     	ds	2
  3033  0066                     ??i1_USBStdSetCfgHandler:	
  3034  0066                     ??i1_USBSuspend:	
  3035                           ; 1 bytes @ 0x6
  3036                           
  3037  0066                     ??i1_USBWakeFromSuspend:	
  3038                           ; 1 bytes @ 0x6
  3039                           
  3040  0066                     ??i1_USBStdFeatureReqHandler:	
  3041                           ; 1 bytes @ 0x6
  3042                           
  3043                           
  3044                           ; 1 bytes @ 0x6
  3045  0066                     	ds	1
  3046  0067                     i1USBStdSetCfgHandler@p:	
  3047                           
  3048                           ; 2 bytes @ 0x7
  3049  0067                     	ds	1
  3050  0068                     i1USBStdFeatureReqHandler@pUEP:	
  3051                           
  3052                           ; 2 bytes @ 0x8
  3053  0068                     	ds	1
  3054  0069                     i1USBStdSetCfgHandler@i_2167:	
  3055                           
  3056                           ; 1 bytes @ 0x9
  3057  0069                     	ds	1
  3058  006A                     i1USBStdSetCfgHandler@i:	
  3059  006A                     i1USBStdFeatureReqHandler@current_ep_data:	
  3060                           ; 1 bytes @ 0xA
  3061                           
  3062                           
  3063                           ; 1 bytes @ 0xA
  3064  006A                     	ds	1
  3065  006B                     i1USBStdFeatureReqHandler@p:	
  3066                           
  3067                           ; 2 bytes @ 0xB
  3068  006B                     	ds	2
  3069  006D                     ??i1_USBCheckStdRequest:	
  3070                           
  3071                           ; 1 bytes @ 0xD
  3072  006D                     	ds	1
  3073  006E                     ??i1_USBCtrlTrfSetupHandler:	
  3074                           
  3075                           ; 1 bytes @ 0xE
  3076  006E                     	ds	1
  3077  006F                     i1USBDeviceTasks@i:	
  3078                           
  3079                           ; 1 bytes @ 0xF
  3080  006F                     	ds	1
  3081                           
  3082                           	psect	maintext
  3083  1000                     __pmaintext:	
  3084 ;;
  3085 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3086 ;;
  3087 ;; *************** function _main *****************
  3088 ;; Defined at:
  3089 ;;		line 58 in file "main.c"
  3090 ;; Parameters:    Size  Location     Type
  3091 ;;		None
  3092 ;; Auto vars:     Size  Location     Type
  3093 ;;		None
  3094 ;; Return value:  Size  Location     Type
  3095 ;;                  1    wreg      void 
  3096 ;; Registers used:
  3097 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3098 ;; Tracked objects:
  3099 ;;		On entry : B1F/0
  3100 ;;		On exit  : 0/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3107 ;;Total ram usage:        0 bytes
  3108 ;; Hardware stack levels required when called:   19
  3109 ;; This function calls:
  3110 ;;		_CDCInitEP
  3111 ;;		_CDCTxService
  3112 ;;		_SYSTEM_Initialize
  3113 ;;		_USBDeviceTasks
  3114 ;;		_UserApplication
  3115 ;; This function is called by:
  3116 ;;		Startup code after reset
  3117 ;; This function uses a non-reentrant model
  3118 ;;
  3119                           
  3120                           
  3121                           ;psect for function _main
  3122  1000                     _main:	
  3123                           
  3124                           ;main.c: 62: SYSTEM_Initialize();
  3125                           
  3126                           ;incstack = 0
  3127 ;; hardware stack exceeded
  3128                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3129  1000  319D  25EF  3190   	fcall	_SYSTEM_Initialize
  3130                           
  3131                           ;main.c: 63: CDCInitEP();
  3132  1003  3192  220A  3190   	fcall	_CDCInitEP
  3133                           
  3134                           ;main.c: 64: RC3 = 0;
  3135  1006  0020               	movlb	0	; select bank0
  3136  1007  118E               	bcf	14,3	;volatile
  3137  1008                     l8450:	
  3138                           ;main.c: 81: while(1)
  3139                           
  3140                           
  3141                           ;main.c: 82: {
  3142                           ;main.c: 83: USBDeviceTasks();
  3143  1008  3182  22E1  3190   	fcall	_USBDeviceTasks
  3144                           
  3145                           ;main.c: 89: UserApplication();
  3146  100B  3193  238E  3190   	fcall	_UserApplication
  3147                           
  3148                           ;main.c: 91: CDCTxService();
  3149  100E  3184  24B2  3190   	fcall	_CDCTxService
  3150  1011  2808               	goto	l8450
  3151  1012                     __end_of_main:	
  3152                           
  3153                           	psect	text1
  3154  138E                     __ptext1:	
  3155 ;; *************** function _UserApplication *****************
  3156 ;; Defined at:
  3157 ;;		line 95 in file "main.c"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;		None
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;  numBytesRead    1   27[BANK1 ] unsigned char 
  3162 ;;  i               1    0        unsigned char 
  3163 ;; Return value:  Size  Location     Type
  3164 ;;                  1    wreg      void 
  3165 ;; Registers used:
  3166 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3167 ;; Tracked objects:
  3168 ;;		On entry : 0/0
  3169 ;;		On exit  : 0/0
  3170 ;;		Unchanged: 0/0
  3171 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3173 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3174 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3175 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3176 ;;Total ram usage:        3 bytes
  3177 ;; Hardware stack levels used:    1
  3178 ;; Hardware stack levels required when called:   12
  3179 ;; This function calls:
  3180 ;;		_getsUSBUSART
  3181 ;;		_putrsUSBUSART
  3182 ;;		_strcpy
  3183 ;;		_strstr
  3184 ;; This function is called by:
  3185 ;;		_main
  3186 ;; This function uses a non-reentrant model
  3187 ;;
  3188                           
  3189                           
  3190                           ;psect for function _UserApplication
  3191  138E                     _UserApplication:	
  3192                           
  3193                           ;main.c: 104: if( USBDeviceState < CONFIGURED_STATE || UCONbits.SUSPND== 1 )
  3194                           
  3195                           ;incstack = 0
  3196                           ; Regs used in _UserApplication: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3197  138E  3020               	movlw	32
  3198  138F  0023               	movlb	3	; select bank3
  3199  1390  0265               	subwf	_USBDeviceState^(0+384),w	;volatile
  3200  1391  1C03               	skipc
  3201  1392  0008               	return
  3202  1393  003D               	movlb	29	; select bank29
  3203  1394  188E               	btfsc	14,1	;volatile
  3204  1395  0008               	return
  3205                           
  3206                           ;main.c: 107: }
  3207                           ;main.c: 109: if( (cdc_trf_state == 0) == 1)
  3208                           
  3209                           ;main.c: 105: {
  3210                           ;main.c: 106: return;
  3211  1396  0023               	movlb	3	; select bank3
  3212  1397  0869               	movf	_cdc_trf_state^(0+384),w
  3213  1398  1D03               	btfss	3,2
  3214  1399  0008               	return
  3215                           
  3216                           ;main.c: 110: {
  3217                           ;main.c: 111: uint8_t i;
  3218                           ;main.c: 112: uint8_t numBytesRead;
  3219                           ;main.c: 114: numBytesRead = getsUSBUSART(readBuffer, sizeof(readBuffer));
  3220  139A  3040               	movlw	64
  3221  139B  0021               	movlb	1	; select bank1
  3222  139C  00B9               	movwf	??_UserApplication^(0+128)
  3223  139D  0839               	movf	??_UserApplication^(0+128),w
  3224  139E  00B1               	movwf	getsUSBUSART@len^(0+128)
  3225  139F  3020               	movlw	(low (_readBuffer| (0+768)))& (0+255)
  3226  13A0  3196  2684  3193   	fcall	_getsUSBUSART
  3227  13A3  0021               	movlb	1	; select bank1
  3228  13A4  00BA               	movwf	(??_UserApplication+1)^(0+128)
  3229  13A5  083A               	movf	(??_UserApplication+1)^(0+128),w
  3230  13A6  00BB               	movwf	UserApplication@numBytesRead^(0+128)
  3231                           
  3232                           ;main.c: 115: if(numBytesRead > 0)
  3233  13A7  083B               	movf	UserApplication@numBytesRead^(0+128),w
  3234  13A8  1903               	btfsc	3,2
  3235  13A9  0008               	return
  3236                           
  3237                           ;main.c: 116: {
  3238                           ;main.c: 118: if(strstr(readBuffer, "ON")) {
  3239  13AA  30E5               	movlw	low (STR_1| (0+32768))
  3240  13AB  00B3               	movwf	strstr@s2^(0+128)
  3241  13AC  3098               	movlw	high (STR_1| (0+32768))
  3242  13AD  00B4               	movwf	(strstr@s2^(0+128)+1)
  3243  13AE  3020               	movlw	(low (_readBuffer| (0+768)))& (0+255)
  3244  13AF  3192  2248  3193   	fcall	_strstr
  3245  13B2  3A00               	xorlw	0
  3246  13B3  1903               	skipnz
  3247  13B4  2BC4               	goto	l8424
  3248                           
  3249                           ;main.c: 119: RC3 = 1;
  3250  13B5  0020               	movlb	0	; select bank0
  3251  13B6  158E               	bsf	14,3	;volatile
  3252                           
  3253                           ;main.c: 120: strcpy(writeBuffer, readBuffer);
  3254  13B7  3020               	movlw	(low (_readBuffer| (0+768)))& (0+255)
  3255  13B8  0021               	movlb	1	; select bank1
  3256  13B9  00B9               	movwf	??_UserApplication^(0+128)
  3257  13BA  0839               	movf	??_UserApplication^(0+128),w
  3258  13BB  00A6               	movwf	strcpy@from^(0+128)
  3259  13BC  30A0               	movlw	(low (_writeBuffer| (0+768)))& (0+255)
  3260  13BD  319E  26A7  3193   	fcall	_strcpy
  3261                           
  3262                           ;main.c: 121: putrsUSBUSART(writeBuffer);
  3263  13C0  30A0               	movlw	(low (_writeBuffer| (0+768)))& (0+255)
  3264  13C1  3191  2138  3193   	fcall	_putrsUSBUSART
  3265  13C4                     l8424:	
  3266                           
  3267                           ;main.c: 122: }
  3268                           ;main.c: 123: if(strstr(readBuffer, "OFF")) RC3 = 0;
  3269  13C4  30DB               	movlw	low (STR_2| (0+32768))
  3270  13C5  0021               	movlb	1	; select bank1
  3271  13C6  00B3               	movwf	strstr@s2^(0+128)
  3272  13C7  3098               	movlw	high (STR_2| (0+32768))
  3273  13C8  00B4               	movwf	(strstr@s2^(0+128)+1)
  3274  13C9  3020               	movlw	(low (_readBuffer| (0+768)))& (0+255)
  3275  13CA  3192  2248  3193   	fcall	_strstr
  3276  13CD  3A00               	xorlw	0
  3277  13CE  1903               	skipnz
  3278  13CF  0008               	return
  3279  13D0  0020               	movlb	0	; select bank0
  3280  13D1  118E               	bcf	14,3	;volatile
  3281  13D2  0008               	return
  3282  13D3                     __end_of_UserApplication:	
  3283                           
  3284                           	psect	text2
  3285  1248                     __ptext2:	
  3286 ;; *************** function _strstr *****************
  3287 ;; Defined at:
  3288 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strstr.c"
  3289 ;; Parameters:    Size  Location     Type
  3290 ;;  s1              1    wreg     PTR const unsigned char 
  3291 ;;		 -> readBuffer(64), NULL(0), 
  3292 ;;  s2              2   19[BANK1 ] PTR const unsigned char 
  3293 ;;		 -> STR_2(4), STR_1(3), 
  3294 ;; Auto vars:     Size  Location     Type
  3295 ;;  s1              1   24[BANK1 ] PTR const unsigned char 
  3296 ;;		 -> readBuffer(64), NULL(0), 
  3297 ;; Return value:  Size  Location     Type
  3298 ;;                  1    wreg      PTR unsigned char 
  3299 ;; Registers used:
  3300 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3301 ;; Tracked objects:
  3302 ;;		On entry : 0/0
  3303 ;;		On exit  : 0/0
  3304 ;;		Unchanged: 0/0
  3305 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3306 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3307 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3308 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3309 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3310 ;;Total ram usage:        6 bytes
  3311 ;; Hardware stack levels used:    1
  3312 ;; Hardware stack levels required when called:   11
  3313 ;; This function calls:
  3314 ;;		_strchr
  3315 ;;		_strlen
  3316 ;;		_strncmp
  3317 ;; This function is called by:
  3318 ;;		_UserApplication
  3319 ;; This function uses a non-reentrant model
  3320 ;;
  3321                           
  3322                           
  3323                           ;psect for function _strstr
  3324  1248                     _strstr:	
  3325                           
  3326                           ;incstack = 0
  3327                           ; Regs used in _strstr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3328                           ;strstr@s1 stored from wreg
  3329  1248  0021               	movlb	1	; select bank1
  3330  1249  00B8               	movwf	strstr@s1^(0+128)
  3331  124A  2A7A               	goto	l6492
  3332  124B                     l6484:	
  3333  124B  0834               	movf	(strstr@s2+1)^(0+128),w
  3334  124C  00AD               	movwf	(strncmp@s2+1)^(0+128)
  3335  124D  0833               	movf	strstr@s2^(0+128),w
  3336  124E  00AC               	movwf	strncmp@s2^(0+128)
  3337  124F  0834               	movf	(strstr@s2+1)^(0+128),w
  3338  1250  00A7               	movwf	(strlen@s+1)^(0+128)
  3339  1251  0833               	movf	strstr@s2^(0+128),w
  3340  1252  00A6               	movwf	strlen@s^(0+128)
  3341  1253  319F  271E  3192   	fcall	_strlen
  3342  1256  0021               	movlb	1	; select bank1
  3343  1257  0827               	movf	(?_strlen+1)^(0+128),w
  3344  1258  00AF               	movwf	(strncmp@len+1)^(0+128)
  3345  1259  0826               	movf	?_strlen^(0+128),w
  3346  125A  00AE               	movwf	strncmp@len^(0+128)
  3347  125B  0838               	movf	strstr@s1^(0+128),w
  3348  125C  3193  234A  3192   	fcall	_strncmp
  3349  125F  0021               	movlb	1	; select bank1
  3350  1260  082C               	movf	?_strncmp^(0+128),w
  3351  1261  042D               	iorwf	(?_strncmp+1)^(0+128),w
  3352  1262  1D03               	btfss	3,2
  3353  1263  2A66               	goto	l6490
  3354  1264  0838               	movf	strstr@s1^(0+128),w
  3355  1265  0008               	return
  3356  1266                     l6490:	
  3357  1266  0833               	movf	strstr@s2^(0+128),w
  3358  1267  0084               	movwf	4
  3359  1268  0834               	movf	(strstr@s2+1)^(0+128),w
  3360  1269  0085               	movwf	5
  3361  126A  0800               	movf	0,w	;code access
  3362  126B  00B5               	movwf	??_strstr^(0+128)
  3363  126C  01B6               	clrf	(??_strstr^(0+128)+1)
  3364  126D  0835               	movf	??_strstr^(0+128),w
  3365  126E  00A6               	movwf	strchr@chr^(0+128)
  3366  126F  0836               	movf	(??_strstr+1)^(0+128),w
  3367  1270  00A7               	movwf	(strchr@chr+1)^(0+128)
  3368  1271  0838               	movf	strstr@s1^(0+128),w
  3369  1272  3E01               	addlw	1
  3370  1273  319E  2615  3192   	fcall	_strchr
  3371  1276  0021               	movlb	1	; select bank1
  3372  1277  00B7               	movwf	(??_strstr+2)^(0+128)
  3373  1278  0837               	movf	(??_strstr+2)^(0+128),w
  3374  1279  00B8               	movwf	strstr@s1^(0+128)
  3375  127A                     l6492:	
  3376  127A  0838               	movf	strstr@s1^(0+128),w
  3377  127B  1903               	btfsc	3,2
  3378  127C  2A84               	goto	l6496
  3379  127D  0838               	movf	strstr@s1^(0+128),w
  3380  127E  0086               	movwf	6
  3381  127F  3003               	movlw	3	; select bank6/7
  3382  1280  0087               	movwf	7
  3383  1281  0801               	movf	1,w
  3384  1282  1D03               	btfss	3,2
  3385  1283  2A4B               	goto	l6484
  3386  1284                     l6496:	
  3387  1284  3000               	movlw	0
  3388  1285  0008               	return
  3389  1286                     __end_of_strstr:	
  3390                           
  3391                           	psect	text3
  3392  134A                     __ptext3:	
  3393 ;; *************** function _strncmp *****************
  3394 ;; Defined at:
  3395 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
  3396 ;; Parameters:    Size  Location     Type
  3397 ;;  s1              1    wreg     PTR const unsigned char 
  3398 ;;		 -> readBuffer(64), NULL(0), 
  3399 ;;  s2              2   12[BANK1 ] PTR const unsigned char 
  3400 ;;		 -> STR_2(4), STR_1(3), 
  3401 ;;  len             2   14[BANK1 ] unsigned int 
  3402 ;; Auto vars:     Size  Location     Type
  3403 ;;  s1              1   18[BANK1 ] PTR const unsigned char 
  3404 ;;		 -> readBuffer(64), NULL(0), 
  3405 ;; Return value:  Size  Location     Type
  3406 ;;                  2   12[BANK1 ] int 
  3407 ;; Registers used:
  3408 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  3409 ;; Tracked objects:
  3410 ;;		On entry : 0/0
  3411 ;;		On exit  : 0/0
  3412 ;;		Unchanged: 0/0
  3413 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3414 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3415 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3416 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3417 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  3418 ;;Total ram usage:        7 bytes
  3419 ;; Hardware stack levels used:    1
  3420 ;; Hardware stack levels required when called:   10
  3421 ;; This function calls:
  3422 ;;		Nothing
  3423 ;; This function is called by:
  3424 ;;		_strstr
  3425 ;; This function uses a non-reentrant model
  3426 ;;
  3427                           
  3428                           
  3429                           ;psect for function _strncmp
  3430  134A                     _strncmp:	
  3431                           
  3432                           ;incstack = 0
  3433                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
  3434                           ;strncmp@s1 stored from wreg
  3435  134A  0021               	movlb	1	; select bank1
  3436  134B  00B2               	movwf	strncmp@s1^(0+128)
  3437  134C                     l5958:	
  3438  134C  3001               	movlw	1
  3439  134D  02AE               	subwf	strncmp@len^(0+128),f
  3440  134E  3000               	movlw	0
  3441  134F  3BAF               	subwfb	(strncmp@len+1)^(0+128),f
  3442  1350  0A2E               	incf	strncmp@len^(0+128),w
  3443  1351  1903               	btfsc	3,2
  3444  1352  0A2F               	incf	(strncmp@len+1)^(0+128),w
  3445  1353  1903               	btfsc	3,2
  3446  1354  2B8B               	goto	l5960
  3447  1355  0832               	movf	strncmp@s1^(0+128),w
  3448  1356  0086               	movwf	6
  3449  1357  3003               	movlw	3	; select bank6/7
  3450  1358  0087               	movwf	7
  3451  1359  0801               	movf	1,w
  3452  135A  1903               	btfsc	3,2
  3453  135B  2B6A               	goto	l5950
  3454  135C  082C               	movf	strncmp@s2^(0+128),w
  3455  135D  0084               	movwf	4
  3456  135E  082D               	movf	(strncmp@s2+1)^(0+128),w
  3457  135F  0085               	movwf	5
  3458  1360  0800               	movf	0,w	;code access
  3459  1361  00B0               	movwf	??_strncmp^(0+128)
  3460  1362  0832               	movf	strncmp@s1^(0+128),w
  3461  1363  0086               	movwf	6
  3462  1364  3003               	movlw	3	; select bank6/7
  3463  1365  0087               	movwf	7
  3464  1366  0801               	movf	1,w
  3465  1367  0630               	xorwf	??_strncmp^(0+128),w
  3466  1368  1903               	skipnz
  3467  1369  2B82               	goto	l5954
  3468  136A                     l5950:	
  3469  136A  082C               	movf	strncmp@s2^(0+128),w
  3470  136B  0084               	movwf	4
  3471  136C  082D               	movf	(strncmp@s2+1)^(0+128),w
  3472  136D  0085               	movwf	5
  3473  136E  0800               	movf	0,w	;code access
  3474  136F  00B0               	movwf	??_strncmp^(0+128)
  3475  1370  01B1               	clrf	(??_strncmp^(0+128)+1)
  3476  1371  09B0               	comf	??_strncmp^(0+128),f
  3477  1372  09B1               	comf	(??_strncmp^(0+128)+1),f
  3478  1373  0AB0               	incf	??_strncmp^(0+128),f
  3479  1374  1903               	skipnz
  3480  1375  0AB1               	incf	(??_strncmp^(0+128)+1),f
  3481  1376  0832               	movf	strncmp@s1^(0+128),w
  3482  1377  0086               	movwf	6
  3483  1378  3003               	movlw	3	; select bank6/7
  3484  1379  0087               	movwf	7
  3485  137A  0801               	movf	1,w
  3486  137B  0730               	addwf	??_strncmp^(0+128),w
  3487  137C  00AC               	movwf	?_strncmp^(0+128)
  3488  137D  0831               	movf	(??_strncmp+1)^(0+128),w
  3489  137E  1803               	skipnc
  3490  137F  0A31               	incf	(??_strncmp+1)^(0+128),w
  3491  1380  00AD               	movwf	(?_strncmp^(0+128)+1)
  3492  1381  0008               	return
  3493  1382                     l5954:	
  3494  1382  3001               	movlw	1
  3495  1383  00B0               	movwf	??_strncmp^(0+128)
  3496  1384  0830               	movf	??_strncmp^(0+128),w
  3497  1385  07B2               	addwf	strncmp@s1^(0+128),f
  3498  1386  3001               	movlw	1
  3499  1387  07AC               	addwf	strncmp@s2^(0+128),f
  3500  1388  3000               	movlw	0
  3501  1389  3DAD               	addwfc	(strncmp@s2+1)^(0+128),f
  3502  138A  2B4C               	goto	l5958
  3503  138B                     l5960:	
  3504  138B  01AC               	clrf	?_strncmp^(0+128)
  3505  138C  01AD               	clrf	(?_strncmp+1)^(0+128)
  3506  138D  0008               	return
  3507  138E                     __end_of_strncmp:	
  3508                           
  3509                           	psect	text4
  3510  1F1E                     __ptext4:	
  3511 ;; *************** function _strlen *****************
  3512 ;; Defined at:
  3513 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
  3514 ;; Parameters:    Size  Location     Type
  3515 ;;  s               2    6[BANK1 ] PTR const unsigned char 
  3516 ;;		 -> STR_2(4), STR_1(3), 
  3517 ;; Auto vars:     Size  Location     Type
  3518 ;;  cp              2   10[BANK1 ] PTR const unsigned char 
  3519 ;;		 -> STR_2(4), STR_1(3), 
  3520 ;; Return value:  Size  Location     Type
  3521 ;;                  2    6[BANK1 ] unsigned int 
  3522 ;; Registers used:
  3523 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3524 ;; Tracked objects:
  3525 ;;		On entry : 0/0
  3526 ;;		On exit  : 0/0
  3527 ;;		Unchanged: 0/0
  3528 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3529 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3530 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3531 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3532 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3533 ;;Total ram usage:        6 bytes
  3534 ;; Hardware stack levels used:    1
  3535 ;; Hardware stack levels required when called:   10
  3536 ;; This function calls:
  3537 ;;		Nothing
  3538 ;; This function is called by:
  3539 ;;		_strstr
  3540 ;; This function uses a non-reentrant model
  3541 ;;
  3542                           
  3543                           
  3544                           ;psect for function _strlen
  3545  1F1E                     _strlen:	
  3546                           
  3547                           ;incstack = 0
  3548                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  3549  1F1E  0021               	movlb	1	; select bank1
  3550  1F1F  0827               	movf	(strlen@s+1)^(0+128),w
  3551  1F20  00AB               	movwf	(strlen@cp+1)^(0+128)
  3552  1F21  0826               	movf	strlen@s^(0+128),w
  3553  1F22  00AA               	movwf	strlen@cp^(0+128)
  3554  1F23                     l5938:	
  3555  1F23  082A               	movf	strlen@cp^(0+128),w
  3556  1F24  0084               	movwf	4
  3557  1F25  082B               	movf	(strlen@cp+1)^(0+128),w
  3558  1F26  0085               	movwf	5
  3559  1F27  0012               	moviw fsr0++
  3560  1F28  1903               	btfsc	3,2
  3561  1F29  2F2F               	goto	l5940
  3562  1F2A  3001               	movlw	1
  3563  1F2B  07AA               	addwf	strlen@cp^(0+128),f
  3564  1F2C  3000               	movlw	0
  3565  1F2D  3DAB               	addwfc	(strlen@cp+1)^(0+128),f
  3566  1F2E  2F23               	goto	l5938
  3567  1F2F                     l5940:	
  3568  1F2F  0926               	comf	strlen@s^(0+128),w
  3569  1F30  00A8               	movwf	??_strlen^(0+128)
  3570  1F31  0927               	comf	(strlen@s+1)^(0+128),w
  3571  1F32  00A9               	movwf	(??_strlen^(0+128)+1)
  3572  1F33  0AA8               	incf	??_strlen^(0+128),f
  3573  1F34  1903               	skipnz
  3574  1F35  0AA9               	incf	(??_strlen^(0+128)+1),f
  3575  1F36  082A               	movf	strlen@cp^(0+128),w
  3576  1F37  0728               	addwf	??_strlen^(0+128),w
  3577  1F38  00A6               	movwf	?_strlen^(0+128)
  3578  1F39  082B               	movf	(strlen@cp+1)^(0+128),w
  3579  1F3A  3D29               	addwfc	(??_strlen+1)^(0+128),w
  3580  1F3B  00A7               	movwf	(?_strlen+1)^(0+128)
  3581  1F3C  0008               	return
  3582  1F3D                     __end_of_strlen:	
  3583                           
  3584                           	psect	text5
  3585  1E15                     __ptext5:	
  3586 ;; *************** function _strchr *****************
  3587 ;; Defined at:
  3588 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strchr.c"
  3589 ;; Parameters:    Size  Location     Type
  3590 ;;  ptr             1    wreg     PTR const unsigned char 
  3591 ;;		 -> readBuffer(64), NULL(0), 
  3592 ;;  chr             2    6[BANK1 ] int 
  3593 ;; Auto vars:     Size  Location     Type
  3594 ;;  ptr             1    8[BANK1 ] PTR const unsigned char 
  3595 ;;		 -> readBuffer(64), NULL(0), 
  3596 ;; Return value:  Size  Location     Type
  3597 ;;                  1    wreg      PTR unsigned char 
  3598 ;; Registers used:
  3599 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3600 ;; Tracked objects:
  3601 ;;		On entry : 0/0
  3602 ;;		On exit  : 0/0
  3603 ;;		Unchanged: 0/0
  3604 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3605 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3606 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3608 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3609 ;;Total ram usage:        3 bytes
  3610 ;; Hardware stack levels used:    1
  3611 ;; Hardware stack levels required when called:   10
  3612 ;; This function calls:
  3613 ;;		Nothing
  3614 ;; This function is called by:
  3615 ;;		_strstr
  3616 ;; This function uses a non-reentrant model
  3617 ;;
  3618                           
  3619                           
  3620                           ;psect for function _strchr
  3621  1E15                     _strchr:	
  3622                           
  3623                           ;incstack = 0
  3624                           ; Regs used in _strchr: [wreg+fsr1l+fsr1h+status,2+status,0]
  3625                           ;strchr@ptr stored from wreg
  3626  1E15  0021               	movlb	1	; select bank1
  3627  1E16  00A8               	movwf	strchr@ptr^(0+128)
  3628  1E17                     l1582:	
  3629  1E17  0828               	movf	strchr@ptr^(0+128),w
  3630  1E18  0086               	movwf	6
  3631  1E19  3003               	movlw	3	; select bank6/7
  3632  1E1A  0087               	movwf	7
  3633  1E1B  0801               	movf	1,w
  3634  1E1C  0626               	xorwf	strchr@chr^(0+128),w
  3635  1E1D  1D03               	skipz
  3636  1E1E  2E21               	goto	l5970
  3637  1E1F  0828               	movf	strchr@ptr^(0+128),w
  3638  1E20  0008               	return
  3639  1E21                     l5970:	
  3640  1E21  0828               	movf	strchr@ptr^(0+128),w
  3641  1E22  0086               	movwf	6
  3642  1E23  3003               	movlw	3	; select bank6/7
  3643  1E24  0087               	movwf	7
  3644  1E25  0AA8               	incf	strchr@ptr^(0+128),f
  3645  1E26  0801               	movf	1,w
  3646  1E27  1D03               	btfss	3,2
  3647  1E28  2E17               	goto	l1582
  3648  1E29  3000               	movlw	0
  3649  1E2A  0008               	return
  3650  1E2B                     __end_of_strchr:	
  3651                           
  3652                           	psect	text6
  3653  1EA7                     __ptext6:	
  3654 ;; *************** function _strcpy *****************
  3655 ;; Defined at:
  3656 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcpy.c"
  3657 ;; Parameters:    Size  Location     Type
  3658 ;;  to              1    wreg     PTR unsigned char 
  3659 ;;		 -> writeBuffer(64), 
  3660 ;;  from            1    6[BANK1 ] PTR const unsigned char 
  3661 ;;		 -> readBuffer(64), 
  3662 ;; Auto vars:     Size  Location     Type
  3663 ;;  to              1    8[BANK1 ] PTR unsigned char 
  3664 ;;		 -> writeBuffer(64), 
  3665 ;;  cp              1    9[BANK1 ] PTR unsigned char 
  3666 ;;		 -> writeBuffer(64), 
  3667 ;; Return value:  Size  Location     Type
  3668 ;;                  1    wreg      PTR unsigned char 
  3669 ;; Registers used:
  3670 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  3671 ;; Tracked objects:
  3672 ;;		On entry : 0/0
  3673 ;;		On exit  : 0/0
  3674 ;;		Unchanged: 0/0
  3675 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3676 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3677 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3678 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3679 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3680 ;;Total ram usage:        4 bytes
  3681 ;; Hardware stack levels used:    1
  3682 ;; Hardware stack levels required when called:   10
  3683 ;; This function calls:
  3684 ;;		Nothing
  3685 ;; This function is called by:
  3686 ;;		_UserApplication
  3687 ;; This function uses a non-reentrant model
  3688 ;;
  3689                           
  3690                           
  3691                           ;psect for function _strcpy
  3692  1EA7                     _strcpy:	
  3693                           
  3694                           ;incstack = 0
  3695                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0]
  3696                           ;strcpy@to stored from wreg
  3697  1EA7  0021               	movlb	1	; select bank1
  3698  1EA8  00A8               	movwf	strcpy@to^(0+128)
  3699  1EA9  0828               	movf	strcpy@to^(0+128),w
  3700  1EAA  00A7               	movwf	??_strcpy^(0+128)
  3701  1EAB  0827               	movf	??_strcpy^(0+128),w
  3702  1EAC  00A9               	movwf	strcpy@cp^(0+128)
  3703  1EAD                     l6504:	
  3704  1EAD  0829               	movf	strcpy@cp^(0+128),w
  3705  1EAE  0086               	movwf	6
  3706  1EAF  3003               	movlw	3	; select bank6/7
  3707  1EB0  0087               	movwf	7
  3708  1EB1  0826               	movf	strcpy@from^(0+128),w
  3709  1EB2  0084               	movwf	4
  3710  1EB3  3003               	movlw	3	; select bank6/7
  3711  1EB4  0085               	movwf	5
  3712  1EB5  0800               	movf	0,w
  3713  1EB6  3FC0               	movwi [0]fsr1
  3714  1EB7  0889               	movf	9,f
  3715  1EB8  1903               	btfsc	3,2
  3716  1EB9  0008               	return
  3717  1EBA  3001               	movlw	1
  3718  1EBB  00A7               	movwf	??_strcpy^(0+128)
  3719  1EBC  0827               	movf	??_strcpy^(0+128),w
  3720  1EBD  07A9               	addwf	strcpy@cp^(0+128),f
  3721  1EBE  3001               	movlw	1
  3722  1EBF  00A7               	movwf	??_strcpy^(0+128)
  3723  1EC0  0827               	movf	??_strcpy^(0+128),w
  3724  1EC1  07A6               	addwf	strcpy@from^(0+128),f
  3725  1EC2  2EAD               	goto	l6504
  3726  1EC3                     __end_of_strcpy:	
  3727                           ;	Return value of _strcpy is never used
  3728                           
  3729                           
  3730                           	psect	text7
  3731  1138                     __ptext7:	
  3732 ;; *************** function _putrsUSBUSART *****************
  3733 ;; Defined at:
  3734 ;;		line 725 in file "mcc_generated_files/usb/usb_device_cdc.c"
  3735 ;; Parameters:    Size  Location     Type
  3736 ;;  data            1    wreg     PTR const unsigned char 
  3737 ;;		 -> writeBuffer(64), 
  3738 ;; Auto vars:     Size  Location     Type
  3739 ;;  data            1    8[BANK1 ] PTR const unsigned char 
  3740 ;;		 -> writeBuffer(64), 
  3741 ;;  len             1    9[BANK1 ] unsigned char 
  3742 ;;  pData           1    7[BANK1 ] PTR const unsigned char 
  3743 ;;		 -> writeBuffer(64), 
  3744 ;; Return value:  Size  Location     Type
  3745 ;;                  1    wreg      void 
  3746 ;; Registers used:
  3747 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3748 ;; Tracked objects:
  3749 ;;		On entry : 0/0
  3750 ;;		On exit  : 0/0
  3751 ;;		Unchanged: 0/0
  3752 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3754 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3755 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3756 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3757 ;;Total ram usage:        4 bytes
  3758 ;; Hardware stack levels used:    1
  3759 ;; Hardware stack levels required when called:   10
  3760 ;; This function calls:
  3761 ;;		Nothing
  3762 ;; This function is called by:
  3763 ;;		_UserApplication
  3764 ;; This function uses a non-reentrant model
  3765 ;;
  3766                           
  3767                           
  3768                           ;psect for function _putrsUSBUSART
  3769  1138                     _putrsUSBUSART:	
  3770                           
  3771                           ;incstack = 0
  3772                           ; Regs used in _putrsUSBUSART: [wreg+fsr1l+fsr1h+status,2+status,0]
  3773                           ;putrsUSBUSART@data stored from wreg
  3774  1138  0021               	movlb	1	; select bank1
  3775  1139  00A8               	movwf	putrsUSBUSART@data^(0+128)
  3776                           
  3777                           ;usb_device_cdc.c: 727: uint8_t len;
  3778                           ;usb_device_cdc.c: 728: const const char *pData;
  3779                           ;usb_device_cdc.c: 753: {PIE2bits.USBIE = 0;};
  3780  113A  1112               	bcf	18,2	;volatile
  3781                           
  3782                           ;usb_device_cdc.c: 754: if(cdc_trf_state != 0)
  3783  113B  0023               	movlb	3	; select bank3
  3784  113C  0869               	movf	_cdc_trf_state^(0+384),w
  3785  113D  1903               	btfsc	3,2
  3786  113E  2942               	goto	l6212
  3787                           
  3788                           ;usb_device_cdc.c: 755: {
  3789                           ;usb_device_cdc.c: 756: {PIE2bits.USBIE = 1;};
  3790  113F  0021               	movlb	1	; select bank1
  3791  1140  1512               	bsf	18,2	;volatile
  3792                           
  3793                           ;usb_device_cdc.c: 757: return;
  3794  1141  0008               	return
  3795  1142                     l6212:	
  3796                           
  3797                           ;usb_device_cdc.c: 758: }
  3798                           ;usb_device_cdc.c: 764: len = 0;
  3799  1142  0021               	movlb	1	; select bank1
  3800  1143  01A9               	clrf	putrsUSBUSART@len^(0+128)
  3801                           
  3802                           ;usb_device_cdc.c: 765: pData = data;
  3803  1144  0828               	movf	putrsUSBUSART@data^(0+128),w
  3804  1145  00A6               	movwf	??_putrsUSBUSART^(0+128)
  3805  1146  0826               	movf	??_putrsUSBUSART^(0+128),w
  3806  1147  00A7               	movwf	putrsUSBUSART@pData^(0+128)
  3807  1148                     l6216:	
  3808                           ;usb_device_cdc.c: 766: do
  3809                           
  3810                           
  3811                           ;usb_device_cdc.c: 767: {
  3812                           ;usb_device_cdc.c: 768: len++;
  3813  1148  3001               	movlw	1
  3814  1149  00A6               	movwf	??_putrsUSBUSART^(0+128)
  3815  114A  0826               	movf	??_putrsUSBUSART^(0+128),w
  3816  114B  07A9               	addwf	putrsUSBUSART@len^(0+128),f
  3817                           
  3818                           ;usb_device_cdc.c: 769: if(len == 255) break;
  3819  114C  0A29               	incf	putrsUSBUSART@len^(0+128),w
  3820  114D  1903               	btfsc	3,2
  3821  114E  2957               	goto	l6224
  3822                           
  3823                           ;usb_device_cdc.c: 770: }while(*pData++);
  3824  114F  0827               	movf	putrsUSBUSART@pData^(0+128),w
  3825  1150  0086               	movwf	6
  3826  1151  3003               	movlw	3	; select bank6/7
  3827  1152  0087               	movwf	7
  3828  1153  0AA7               	incf	putrsUSBUSART@pData^(0+128),f
  3829  1154  0801               	movf	1,w
  3830  1155  1D03               	btfss	3,2
  3831  1156  2948               	goto	l6216
  3832  1157                     l6224:	
  3833                           
  3834                           ;usb_device_cdc.c: 779: { pCDCSrc.bRom = (const uint8_t*)data; cdc_tx_len = len; cdc_mem
      +                          _type = 0x00; cdc_trf_state = 1; };
  3835  1157  0828               	movf	putrsUSBUSART@data^(0+128),w
  3836  1158  0023               	movlb	3	; select bank3
  3837  1159  00D3               	movwf	_pCDCSrc^(0+384)
  3838  115A  3003               	movlw	3
  3839  115B  00D4               	movwf	(_pCDCSrc+1)^(0+384)
  3840  115C  0021               	movlb	1	; select bank1
  3841  115D  0829               	movf	putrsUSBUSART@len^(0+128),w
  3842  115E  00A6               	movwf	??_putrsUSBUSART^(0+128)
  3843  115F  0826               	movf	??_putrsUSBUSART^(0+128),w
  3844  1160  0023               	movlb	3	; select bank3
  3845  1161  00E8               	movwf	_cdc_tx_len^(0+384)
  3846  1162  01E7               	clrf	_cdc_mem_type^(0+384)
  3847  1163  01E9               	clrf	_cdc_trf_state^(0+384)
  3848  1164  0AE9               	incf	_cdc_trf_state^(0+384),f
  3849                           
  3850                           ;usb_device_cdc.c: 780: {PIE2bits.USBIE = 1;};
  3851  1165  0021               	movlb	1	; select bank1
  3852  1166  1512               	bsf	18,2	;volatile
  3853  1167  0008               	return
  3854  1168                     __end_of_putrsUSBUSART:	
  3855                           
  3856                           	psect	text8
  3857  1684                     __ptext8:	
  3858 ;; *************** function _getsUSBUSART *****************
  3859 ;; Defined at:
  3860 ;;		line 484 in file "mcc_generated_files/usb/usb_device_cdc.c"
  3861 ;; Parameters:    Size  Location     Type
  3862 ;;  buffer          1    wreg     PTR unsigned char 
  3863 ;;		 -> readBuffer(64), 
  3864 ;;  len             1   17[BANK1 ] unsigned char 
  3865 ;; Auto vars:     Size  Location     Type
  3866 ;;  buffer          1   20[BANK1 ] PTR unsigned char 
  3867 ;;		 -> readBuffer(64), 
  3868 ;; Return value:  Size  Location     Type
  3869 ;;                  1    wreg      unsigned char 
  3870 ;; Registers used:
  3871 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3872 ;; Tracked objects:
  3873 ;;		On entry : 0/0
  3874 ;;		On exit  : 0/0
  3875 ;;		Unchanged: 0/0
  3876 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3877 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3878 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3879 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3880 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3881 ;;Total ram usage:        4 bytes
  3882 ;; Hardware stack levels used:    1
  3883 ;; Hardware stack levels required when called:   11
  3884 ;; This function calls:
  3885 ;;		_USBTransferOnePacket
  3886 ;; This function is called by:
  3887 ;;		_UserApplication
  3888 ;; This function uses a non-reentrant model
  3889 ;;
  3890                           
  3891                           
  3892                           ;psect for function _getsUSBUSART
  3893  1684                     _getsUSBUSART:	
  3894                           
  3895                           ;incstack = 0
  3896                           ; Regs used in _getsUSBUSART: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3897                           ;getsUSBUSART@buffer stored from wreg
  3898  1684  0021               	movlb	1	; select bank1
  3899  1685  00B4               	movwf	getsUSBUSART@buffer^(0+128)
  3900                           
  3901                           ;usb_device_cdc.c: 486: cdc_rx_len = 0;
  3902  1686  0023               	movlb	3	; select bank3
  3903  1687  01EA               	clrf	_cdc_rx_len^(0+384)
  3904                           
  3905                           ;usb_device_cdc.c: 488: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
  3906  1688  084F               	movf	_CDCDataOutHandle^(0+384),w
  3907  1689  0450               	iorwf	(_CDCDataOutHandle+1)^(0+384),w
  3908  168A  1903               	btfsc	3,2
  3909  168B  2E92               	goto	l8140
  3910  168C  084F               	movf	_CDCDataOutHandle^(0+384),w
  3911  168D  0086               	movwf	6
  3912  168E  0850               	movf	(_CDCDataOutHandle+1)^(0+384),w
  3913  168F  0087               	movwf	7
  3914  1690  1B81               	btfsc	1,7
  3915  1691  2EDE               	goto	l8154
  3916  1692                     l8140:	
  3917                           
  3918                           ;usb_device_cdc.c: 489: {
  3919                           ;usb_device_cdc.c: 494: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
  3920  1692  084F               	movf	_CDCDataOutHandle^(0+384),w
  3921  1693  0086               	movwf	6
  3922  1694  0850               	movf	(_CDCDataOutHandle+1)^(0+384),w
  3923  1695  0087               	movwf	7
  3924  1696  3141               	addfsr 1,1
  3925  1697  0021               	movlb	1	; select bank1
  3926  1698  0831               	movf	getsUSBUSART@len^(0+128),w
  3927  1699  0201               	subwf	1,w
  3928  169A  1803               	skipnc
  3929  169B  2EA7               	goto	l8144
  3930                           
  3931                           ;usb_device_cdc.c: 495: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
  3932  169C  0023               	movlb	3	; select bank3
  3933  169D  084F               	movf	_CDCDataOutHandle^(0+384),w
  3934  169E  0086               	movwf	6
  3935  169F  0850               	movf	(_CDCDataOutHandle+1)^(0+384),w
  3936  16A0  0087               	movwf	7
  3937  16A1  3141               	addfsr 1,1
  3938  16A2  0801               	movf	1,w
  3939  16A3  0021               	movlb	1	; select bank1
  3940  16A4  00B2               	movwf	??_getsUSBUSART^(0+128)
  3941  16A5  0832               	movf	??_getsUSBUSART^(0+128),w
  3942  16A6  00B1               	movwf	getsUSBUSART@len^(0+128)
  3943  16A7                     l8144:	
  3944                           
  3945                           ;usb_device_cdc.c: 500: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
  3946  16A7  0023               	movlb	3	; select bank3
  3947  16A8  01EA               	clrf	_cdc_rx_len^(0+384)
  3948  16A9                     l8150:	
  3949  16A9  0021               	movlb	1	; select bank1
  3950  16AA  0831               	movf	getsUSBUSART@len^(0+128),w
  3951  16AB  0023               	movlb	3	; select bank3
  3952  16AC  026A               	subwf	_cdc_rx_len^(0+384),w
  3953  16AD  1803               	btfsc	3,0
  3954  16AE  2EC9               	goto	l8152
  3955                           
  3956                           ;usb_device_cdc.c: 501: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
  3957  16AF  086A               	movf	_cdc_rx_len^(0+384),w
  3958  16B0  3EC0               	addlw	192
  3959  16B1  0086               	movwf	6
  3960  16B2  0187               	clrf	7
  3961  16B3  3020               	movlw	32
  3962  16B4  3D87               	addwfc	7,f
  3963  16B5  0801               	movf	1,w
  3964  16B6  0021               	movlb	1	; select bank1
  3965  16B7  00B2               	movwf	??_getsUSBUSART^(0+128)
  3966  16B8  0023               	movlb	3	; select bank3
  3967  16B9  086A               	movf	_cdc_rx_len^(0+384),w
  3968  16BA  0021               	movlb	1	; select bank1
  3969  16BB  0734               	addwf	getsUSBUSART@buffer^(0+128),w
  3970  16BC  00B3               	movwf	(??_getsUSBUSART+1)^(0+128)
  3971  16BD  0833               	movf	(??_getsUSBUSART+1)^(0+128),w
  3972  16BE  0086               	movwf	6
  3973  16BF  3003               	movlw	3	; select bank6/7
  3974  16C0  0087               	movwf	7
  3975  16C1  0832               	movf	??_getsUSBUSART^(0+128),w
  3976  16C2  0081               	movwf	1
  3977  16C3  3001               	movlw	1
  3978  16C4  00B2               	movwf	??_getsUSBUSART^(0+128)
  3979  16C5  0832               	movf	??_getsUSBUSART^(0+128),w
  3980  16C6  0023               	movlb	3	; select bank3
  3981  16C7  07EA               	addwf	_cdc_rx_len^(0+384),f
  3982  16C8  2EA9               	goto	l8150
  3983  16C9                     l8152:	
  3984                           
  3985                           ;usb_device_cdc.c: 507: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  3986  16C9  0021               	movlb	1	; select bank1
  3987  16CA  01A6               	clrf	USBTransferOnePacket@dir^(0+128)
  3988  16CB  30C0               	movlw	192
  3989  16CC  00A7               	movwf	USBTransferOnePacket@data^(0+128)
  3990  16CD  3020               	movlw	32
  3991  16CE  00A8               	movwf	(USBTransferOnePacket@data^(0+128)+1)
  3992  16CF  3040               	movlw	64
  3993  16D0  00B2               	movwf	??_getsUSBUSART^(0+128)
  3994  16D1  0832               	movf	??_getsUSBUSART^(0+128),w
  3995  16D2  00A9               	movwf	USBTransferOnePacket@len^(0+128)
  3996  16D3  3002               	movlw	2
  3997  16D4  318C  2495         	fcall	_USBTransferOnePacket
  3998  16D6  0021               	movlb	1	; select bank1
  3999  16D7  0827               	movf	(?_USBTransferOnePacket+1)^(0+128),w
  4000  16D8  0023               	movlb	3	; select bank3
  4001  16D9  00D0               	movwf	(_CDCDataOutHandle+1)^(0+384)
  4002  16DA  0021               	movlb	1	; select bank1
  4003  16DB  0826               	movf	?_USBTransferOnePacket^(0+128),w
  4004  16DC  0023               	movlb	3	; select bank3
  4005  16DD  00CF               	movwf	_CDCDataOutHandle^(0+384)
  4006  16DE                     l8154:	
  4007                           
  4008                           ;usb_device_cdc.c: 509: }
  4009                           ;usb_device_cdc.c: 511: return cdc_rx_len;
  4010  16DE  086A               	movf	_cdc_rx_len^(0+384),w
  4011  16DF  0008               	return
  4012  16E0                     __end_of_getsUSBUSART:	
  4013                           
  4014                           	psect	text9
  4015  02E1                     __ptext9:	
  4016 ;; *************** function _USBDeviceTasks *****************
  4017 ;; Defined at:
  4018 ;;		line 477 in file "mcc_generated_files/usb/usb_device.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;		None
  4021 ;; Auto vars:     Size  Location     Type
  4022 ;;  i               1    0[BANK3 ] unsigned char 
  4023 ;; Return value:  Size  Location     Type
  4024 ;;                  1    wreg      void 
  4025 ;; Registers used:
  4026 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4027 ;; Tracked objects:
  4028 ;;		On entry : 0/0
  4029 ;;		On exit  : 0/0
  4030 ;;		Unchanged: 0/0
  4031 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4033 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  4034 ;;      Temps:          0       0       0       0       0       2       0       0       0       0       0       0       
      +0       0
  4035 ;;      Totals:         0       0       0       0       1       2       0       0       0       0       0       0       
      +0       0
  4036 ;;Total ram usage:        3 bytes
  4037 ;; Hardware stack levels used:    1
  4038 ;; Hardware stack levels required when called:   18
  4039 ;; This function calls:
  4040 ;;		_USBCtrlEPAllowStatusStage
  4041 ;;		_USBCtrlEPService
  4042 ;;		_USBDeviceInit
  4043 ;;		_USBIncrement1msInternalTimers
  4044 ;;		_USBStallHandler
  4045 ;;		_USBSuspend
  4046 ;;		_USBWakeFromSuspend
  4047 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4048 ;; This function is called by:
  4049 ;;		_main
  4050 ;; This function uses a non-reentrant model
  4051 ;;
  4052                           
  4053                           
  4054                           ;psect for function _USBDeviceTasks
  4055  02E1                     _USBDeviceTasks:	
  4056                           
  4057                           ;usb_device.c: 479: uint8_t i;
  4058                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
  4059                           
  4060                           ;incstack = 0
  4061 ;; hardware stack exceeded
  4062                           ; Regs used in _USBDeviceTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4063  02E1  0023               	movlb	3	; select bank3
  4064  02E2  0365               	decf	_USBDeviceState^(0+384),w	;volatile
  4065  02E3  1D03               	btfss	3,2
  4066  02E4  2AF1               	goto	l8246
  4067                           
  4068                           ;usb_device.c: 591: {
  4069                           ;usb_device.c: 601: if(!UCONbits.SE0)
  4070  02E5  003D               	movlb	29	; select bank29
  4071  02E6  1A8E               	btfsc	14,5	;volatile
  4072  02E7  2AF1               	goto	l8246
  4073                           
  4074                           ;usb_device.c: 602: {
  4075                           ;usb_device.c: 608: {UIR = 0;};
  4076  02E8  0190               	clrf	16	;volatile
  4077                           
  4078                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
  4079  02E9  1412               	bsf	18,0	;volatile
  4080                           
  4081                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
  4082  02EA  1612               	bsf	18,4	;volatile
  4083                           
  4084                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
  4085  02EB  3002               	movlw	2
  4086  02EC  0024               	movlb	4	; select bank4
  4087  02ED  00E1               	movwf	??_USBDeviceTasks^(0+512)
  4088  02EE  0861               	movf	??_USBDeviceTasks^(0+512),w
  4089  02EF  0023               	movlb	3	; select bank3
  4090  02F0  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
  4091  02F1                     l8246:	
  4092                           
  4093                           ;usb_device.c: 617: }
  4094                           ;usb_device.c: 618: }
  4095                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  4096  02F1  003D               	movlb	29	; select bank29
  4097  02F2  1910               	btfsc	16,2	;volatile
  4098  02F3  1D12               	btfss	18,2	;volatile
  4099  02F4  2AFE               	goto	l8254
  4100                           
  4101                           ;usb_device.c: 635: {
  4102                           ;usb_device.c: 636: (UIR &= 0xFB);
  4103  02F5  30FB               	movlw	251
  4104  02F6  0024               	movlb	4	; select bank4
  4105  02F7  00E1               	movwf	??_USBDeviceTasks^(0+512)
  4106  02F8  0861               	movf	??_USBDeviceTasks^(0+512),w
  4107  02F9  003D               	movlb	29	; select bank29
  4108  02FA  0590               	andwf	16,f	;volatile
  4109                           
  4110                           ;usb_device.c: 640: USBWakeFromSuspend();
  4111  02FB  319F  279D  3182   	fcall	_USBWakeFromSuspend
  4112  02FE                     l8254:	
  4113                           
  4114                           ;usb_device.c: 642: }
  4115                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
  4116  02FE  003D               	movlb	29	; select bank29
  4117  02FF  1C8E               	btfss	14,1	;volatile
  4118  0300  2B04               	goto	l393
  4119                           
  4120                           ;usb_device.c: 648: {
  4121                           ;usb_device.c: 649: PIR2bits.USBIF = 0;;
  4122  0301  0020               	movlb	0	; select bank0
  4123  0302  1112               	bcf	18,2	;volatile
  4124                           
  4125                           ;usb_device.c: 650: return;
  4126  0303  0008               	return
  4127  0304                     l393:	
  4128                           
  4129                           ;usb_device.c: 651: }
  4130                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
  4131  0304  1810               	btfsc	16,0	;volatile
  4132  0305  1C12               	btfss	18,0	;volatile
  4133  0306  2B18               	goto	l8268
  4134                           
  4135                           ;usb_device.c: 664: {
  4136                           ;usb_device.c: 665: USBDeviceInit();
  4137  0307  3185  257E  3182   	fcall	_USBDeviceInit
  4138                           
  4139                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
  4140  030A  0021               	movlb	1	; select bank1
  4141  030B  1512               	bsf	18,2	;volatile
  4142                           
  4143                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
  4144  030C  3004               	movlw	4
  4145  030D  0024               	movlb	4	; select bank4
  4146  030E  00E1               	movwf	??_USBDeviceTasks^(0+512)
  4147  030F  0861               	movf	??_USBDeviceTasks^(0+512),w
  4148  0310  0023               	movlb	3	; select bank3
  4149  0311  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
  4150                           
  4151                           ;usb_device.c: 681: (UIR &= 0xFE);
  4152  0312  30FE               	movlw	254
  4153  0313  0024               	movlb	4	; select bank4
  4154  0314  00E1               	movwf	??_USBDeviceTasks^(0+512)
  4155  0315  0861               	movf	??_USBDeviceTasks^(0+512),w
  4156  0316  003D               	movlb	29	; select bank29
  4157  0317  0590               	andwf	16,f	;volatile
  4158  0318                     l8268:	
  4159                           
  4160                           ;usb_device.c: 682: }
  4161                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  4162  0318  1A10               	btfsc	16,4	;volatile
  4163  0319  1E12               	btfss	18,4	;volatile
  4164  031A  2B1E               	goto	l8274
  4165                           
  4166                           ;usb_device.c: 688: {
  4167                           ;usb_device.c: 694: USBSuspend();
  4168  031B  319E  26FF  3182   	fcall	_USBSuspend
  4169  031E                     l8274:	
  4170                           
  4171                           ;usb_device.c: 696: }
  4172                           ;usb_device.c: 708: if(UIRbits.SOFIF)
  4173  031E  003D               	movlb	29	; select bank29
  4174  031F  1F10               	btfss	16,6	;volatile
  4175  0320  2B48               	goto	l8290
  4176                           
  4177                           ;usb_device.c: 709: {
  4178                           ;usb_device.c: 711: if(UIEbits.SOFIE)
  4179  0321  1F12               	btfss	18,6	;volatile
  4180  0322  2B33               	goto	l8280
  4181                           
  4182                           ;usb_device.c: 712: {
  4183                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  4184  0323  3073               	movlw	115
  4185  0324  0021               	movlb	1	; select bank1
  4186  0325  00B4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  4187  0326  3000               	movlw	0
  4188  0327  00B5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)+1)
  4189  0328  3000               	movlw	0
  4190  0329  00B6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  4191  032A  3000               	movlw	0
  4192  032B  00B7               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  4193  032C  3001               	movlw	1
  4194  032D  00B8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  4195  032E  3000               	movlw	0
  4196  032F  00B9               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)+1)
  4197  0330  3191  2108  3182   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4198  0333                     l8280:	
  4199                           
  4200                           ;usb_device.c: 714: }
  4201                           ;usb_device.c: 715: (UIR &= 0xBF);
  4202  0333  30BF               	movlw	191
  4203  0334  0024               	movlb	4	; select bank4
  4204  0335  00E1               	movwf	??_USBDeviceTasks^(0+512)
  4205  0336  0861               	movf	??_USBDeviceTasks^(0+512),w
  4206  0337  003D               	movlb	29	; select bank29
  4207  0338  0590               	andwf	16,f	;volatile
  4208                           
  4209                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
  4210  0339  319E  268B  3182   	fcall	_USBIncrement1msInternalTimers
  4211                           
  4212                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
  4213  033C  0023               	movlb	3	; select bank3
  4214  033D  085C               	movf	_USBStatusStageTimeoutCounter^(0+384),w	;volatile
  4215  033E  1903               	btfsc	3,2
  4216  033F  2B42               	goto	l399
  4217                           
  4218                           ;usb_device.c: 736: {
  4219                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
  4220  0340  3001               	movlw	1
  4221  0341  02DC               	subwf	_USBStatusStageTimeoutCounter^(0+384),f	;volatile
  4222  0342                     l399:	
  4223                           
  4224                           ;usb_device.c: 738: }
  4225                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
  4226  0342  085C               	movf	_USBStatusStageTimeoutCounter^(0+384),w	;volatile
  4227  0343  1D03               	btfss	3,2
  4228  0344  2B48               	goto	l8290
  4229                           
  4230                           ;usb_device.c: 745: {
  4231                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
  4232  0345  318A  229A  3182   	fcall	_USBCtrlEPAllowStatusStage
  4233  0348                     l8290:	
  4234                           
  4235                           ;usb_device.c: 747: }
  4236                           ;usb_device.c: 749: }
  4237                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
  4238  0348  003D               	movlb	29	; select bank29
  4239  0349  1A90               	btfsc	16,5	;volatile
  4240  034A  1E92               	btfss	18,5	;volatile
  4241  034B  2B4F               	goto	l8296
  4242                           
  4243                           ;usb_device.c: 752: {
  4244                           ;usb_device.c: 753: USBStallHandler();
  4245  034C  3190  20AD  3182   	fcall	_USBStallHandler
  4246  034F                     l8296:	
  4247                           
  4248                           ;usb_device.c: 754: }
  4249                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
  4250  034F  003D               	movlb	29	; select bank29
  4251  0350  1890               	btfsc	16,1	;volatile
  4252  0351  1C92               	btfss	18,1	;volatile
  4253  0352  2B65               	goto	l8304
  4254                           
  4255                           ;usb_device.c: 757: {
  4256                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  4257  0353  30FF               	movlw	255
  4258  0354  0021               	movlb	1	; select bank1
  4259  0355  00B4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  4260  0356  307F               	movlw	127
  4261  0357  00B5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)+1)
  4262  0358  3000               	movlw	0
  4263  0359  00B6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  4264  035A  3000               	movlw	0
  4265  035B  00B7               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  4266  035C  3001               	movlw	1
  4267  035D  00B8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  4268  035E  3000               	movlw	0
  4269  035F  00B9               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)+1)
  4270  0360  3191  2108  3182   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4271                           
  4272                           ;usb_device.c: 759: {UEIR = 0;};
  4273  0363  003D               	movlb	29	; select bank29
  4274  0364  0193               	clrf	19	;volatile
  4275  0365                     l8304:	
  4276                           
  4277                           ;usb_device.c: 767: }
  4278                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
  4279  0365  3004               	movlw	4
  4280  0366  0023               	movlb	3	; select bank3
  4281  0367  0265               	subwf	_USBDeviceState^(0+384),w	;volatile
  4282  0368  1803               	skipnc
  4283  0369  2B6D               	goto	l403
  4284                           
  4285                           ;usb_device.c: 775: {
  4286                           ;usb_device.c: 776: PIR2bits.USBIF = 0;;
  4287  036A  0020               	movlb	0	; select bank0
  4288  036B  1112               	bcf	18,2	;volatile
  4289                           
  4290                           ;usb_device.c: 777: return;
  4291  036C  0008               	return
  4292  036D                     l403:	
  4293                           
  4294                           ;usb_device.c: 778: }
  4295                           ;usb_device.c: 783: if(UIEbits.TRNIE)
  4296  036D  003D               	movlb	29	; select bank29
  4297  036E  1D92               	btfss	18,3	;volatile
  4298  036F  2BC7               	goto	l404
  4299                           
  4300                           ;usb_device.c: 784: {
  4301                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
  4302  0370  0023               	movlb	3	; select bank3
  4303  0371  01EF               	clrf	USBDeviceTasks@i^(0+384)
  4304  0372  3004               	movlw	4
  4305  0373  026F               	subwf	USBDeviceTasks@i^(0+384),w
  4306  0374  1803               	btfsc	3,0
  4307  0375  2BC7               	goto	l404
  4308  0376                     l405:	
  4309                           
  4310                           ;usb_device.c: 786: {
  4311                           ;usb_device.c: 787: if(UIRbits.TRNIF)
  4312  0376  003D               	movlb	29	; select bank29
  4313  0377  1D90               	btfss	16,3	;volatile
  4314  0378  2BC7               	goto	l404
  4315                           
  4316                           ;usb_device.c: 788: {
  4317                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
  4318  0379  080F               	movf	15,w	;volatile
  4319  037A  0024               	movlb	4	; select bank4
  4320  037B  00E1               	movwf	??_USBDeviceTasks^(0+512)
  4321  037C  0861               	movf	??_USBDeviceTasks^(0+512),w
  4322  037D  0023               	movlb	3	; select bank3
  4323  037E  00ED               	movwf	_USTATcopy^(0+384)	;volatile
  4324                           
  4325                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
  4326  037F  0C6D               	rrf	_USTATcopy^(0+384),w	;volatile
  4327  0380  0024               	movlb	4	; select bank4
  4328  0381  00E1               	movwf	??_USBDeviceTasks^(0+512)
  4329  0382  0CE1               	rrf	??_USBDeviceTasks^(0+512),f
  4330  0383  0C61               	rrf	??_USBDeviceTasks^(0+512),w
  4331  0384  390F               	andlw	15
  4332  0385  00E2               	movwf	(??_USBDeviceTasks+1)^(0+512)
  4333  0386  0862               	movf	(??_USBDeviceTasks+1)^(0+512),w
  4334  0387  0023               	movlb	3	; select bank3
  4335  0388  00DE               	movwf	_endpoint_number^(0+384)	;volatile
  4336                           
  4337                           ;usb_device.c: 793: (UIR &= 0xF7);
  4338  0389  30F7               	movlw	247
  4339  038A  0024               	movlb	4	; select bank4
  4340  038B  00E1               	movwf	??_USBDeviceTasks^(0+512)
  4341  038C  0861               	movf	??_USBDeviceTasks^(0+512),w
  4342  038D  003D               	movlb	29	; select bank29
  4343  038E  0590               	andwf	16,f	;volatile
  4344                           
  4345                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
  4346  038F  0023               	movlb	3	; select bank3
  4347  0390  196D               	btfsc	_USTATcopy^(0+384),2	;volatile
  4348  0391  2B95               	goto	l8324
  4349                           
  4350                           ;usb_device.c: 799: {
  4351                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  4352  0392  085E               	movf	_endpoint_number^(0+384),w	;volatile
  4353  0393  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  4354  0394  2B98               	goto	L1
  4355  0395                     l8324:	
  4356                           ;usb_device.c: 801: }
  4357                           
  4358                           
  4359                           ;usb_device.c: 802: else
  4360                           ;usb_device.c: 803: {
  4361                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  4362  0395  0023               	movlb	3	; select bank3
  4363  0396  085E               	movf	_endpoint_number^(0+384),w	;volatile
  4364  0397  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  4365  0398                     L1:	
  4366  0398  0086               	movwf	6
  4367  0399  3001               	movlw	1	; select bank3/4
  4368  039A  0087               	movwf	7
  4369  039B  0801               	movf	1,w
  4370  039C  3901               	andlw	1
  4371  039D  0024               	movlb	4	; select bank4
  4372  039E  00E1               	movwf	??_USBDeviceTasks^(0+512)
  4373  039F  3001               	movlw	1
  4374  03A0  06E1               	xorwf	??_USBDeviceTasks^(0+512),f
  4375  03A1  0801               	movf	1,w
  4376  03A2  0661               	xorwf	??_USBDeviceTasks^(0+512),w
  4377  03A3  39FE               	andlw	-2
  4378  03A4  0661               	xorwf	??_USBDeviceTasks^(0+512),w
  4379  03A5  0081               	movwf	1
  4380                           
  4381                           ;usb_device.c: 805: }
  4382                           ;usb_device.c: 810: if(endpoint_number == 0)
  4383  03A6  0023               	movlb	3	; select bank3
  4384  03A7  085E               	movf	_endpoint_number^(0+384),w	;volatile
  4385  03A8  1D03               	btfss	3,2
  4386  03A9  2BAE               	goto	l8330
  4387                           
  4388                           ;usb_device.c: 811: {
  4389                           ;usb_device.c: 812: USBCtrlEPService();
  4390  03AA  3196  2628  3182   	fcall	_USBCtrlEPService
  4391                           
  4392                           ;usb_device.c: 813: }
  4393  03AD  2BBD               	goto	l8332
  4394  03AE                     l8330:	
  4395                           
  4396                           ;usb_device.c: 814: else
  4397                           ;usb_device.c: 815: {
  4398                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  4399  03AE  3072               	movlw	114
  4400  03AF  0021               	movlb	1	; select bank1
  4401  03B0  00B4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  4402  03B1  3000               	movlw	0
  4403  03B2  00B5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)+1)
  4404  03B3  30ED               	movlw	low _USTATcopy
  4405  03B4  00B6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  4406  03B5  3001               	movlw	high _USTATcopy
  4407  03B6  00B7               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  4408  03B7  3000               	movlw	0
  4409  03B8  00B8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  4410  03B9  00B9               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
  4411  03BA  3191  2108  3182   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4412  03BD                     l8332:	
  4413                           ;usb_device.c: 819: else
  4414                           ;usb_device.c: 820: {
  4415                           ;usb_device.c: 821: break;
  4416                           
  4417                           ;usb_device.c: 817: }
  4418                           ;usb_device.c: 818: }
  4419                           
  4420  03BD  3001               	movlw	1
  4421  03BE  0024               	movlb	4	; select bank4
  4422  03BF  00E1               	movwf	??_USBDeviceTasks^(0+512)
  4423  03C0  0861               	movf	??_USBDeviceTasks^(0+512),w
  4424  03C1  0023               	movlb	3	; select bank3
  4425  03C2  07EF               	addwf	USBDeviceTasks@i^(0+384),f
  4426  03C3  3004               	movlw	4
  4427  03C4  026F               	subwf	USBDeviceTasks@i^(0+384),w
  4428  03C5  1C03               	skipc
  4429  03C6  2B76               	goto	l405
  4430  03C7                     l404:	
  4431                           
  4432                           ;usb_device.c: 822: }
  4433                           ;usb_device.c: 823: }
  4434                           ;usb_device.c: 824: }
  4435                           ;usb_device.c: 826: PIR2bits.USBIF = 0;;
  4436  03C7  0020               	movlb	0	; select bank0
  4437  03C8  1112               	bcf	18,2	;volatile
  4438  03C9  0008               	return
  4439  03CA                     __end_of_USBDeviceTasks:	
  4440                           
  4441                           	psect	text10
  4442  1F9D                     __ptext10:	
  4443 ;; *************** function _USBWakeFromSuspend *****************
  4444 ;; Defined at:
  4445 ;;		line 2303 in file "mcc_generated_files/usb/usb_device.c"
  4446 ;; Parameters:    Size  Location     Type
  4447 ;;		None
  4448 ;; Auto vars:     Size  Location     Type
  4449 ;;		None
  4450 ;; Return value:  Size  Location     Type
  4451 ;;                  1    wreg      void 
  4452 ;; Registers used:
  4453 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4454 ;; Tracked objects:
  4455 ;;		On entry : 0/0
  4456 ;;		On exit  : 0/0
  4457 ;;		Unchanged: 0/0
  4458 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4461 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4462 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4463 ;;Total ram usage:        1 bytes
  4464 ;; Hardware stack levels used:    1
  4465 ;; Hardware stack levels required when called:   14
  4466 ;; This function calls:
  4467 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4468 ;; This function is called by:
  4469 ;;		_USBDeviceTasks
  4470 ;; This function uses a non-reentrant model
  4471 ;;
  4472                           
  4473                           
  4474                           ;psect for function _USBWakeFromSuspend
  4475  1F9D                     _USBWakeFromSuspend:	
  4476                           
  4477                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
  4478                           
  4479                           ;incstack = 0
  4480                           ; Regs used in _USBWakeFromSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4481  1F9D  0023               	movlb	3	; select bank3
  4482  1F9E  01DF               	clrf	_USBBusIsSuspended^(0+384)	;volatile
  4483                           
  4484                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  4485  1F9F  3074               	movlw	116
  4486  1FA0  0021               	movlb	1	; select bank1
  4487  1FA1  00B4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  4488  1FA2  3000               	movlw	0
  4489  1FA3  00B5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)+1)
  4490  1FA4  3000               	movlw	0
  4491  1FA5  00B6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  4492  1FA6  3000               	movlw	0
  4493  1FA7  00B7               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  4494  1FA8  3000               	movlw	0
  4495  1FA9  00B8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  4496  1FAA  00B9               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
  4497  1FAB  3191  2108  319F   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4498                           
  4499                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
  4500  1FAE  003D               	movlb	29	; select bank29
  4501  1FAF  108E               	bcf	14,1	;volatile
  4502                           
  4503                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
  4504  1FB0  1112               	bcf	18,2	;volatile
  4505  1FB1                     l8168:	
  4506                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
  4507                           
  4508  1FB1  1D10               	btfss	16,2	;volatile
  4509  1FB2  2FBA               	goto	l8170
  4510                           
  4511                           ;usb_device.c: 2343: {
  4512                           ;usb_device.c: 2344: (UIR &= 0xFB);
  4513  1FB3  30FB               	movlw	251
  4514  1FB4  0021               	movlb	1	; select bank1
  4515  1FB5  00BA               	movwf	??_USBWakeFromSuspend^(0+128)
  4516  1FB6  083A               	movf	??_USBWakeFromSuspend^(0+128),w
  4517  1FB7  003D               	movlb	29	; select bank29
  4518  1FB8  0590               	andwf	16,f	;volatile
  4519  1FB9  2FB1               	goto	l8168
  4520  1FBA                     l8170:	
  4521                           
  4522                           ;usb_device.c: 2345: }
  4523                           ;usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
  4524  1FBA  0023               	movlb	3	; select bank3
  4525  1FBB  01D6               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  4526  1FBC  0008               	return
  4527  1FBD                     __end_of_USBWakeFromSuspend:	
  4528                           
  4529                           	psect	text11
  4530  1EFF                     __ptext11:	
  4531 ;; *************** function _USBSuspend *****************
  4532 ;; Defined at:
  4533 ;;		line 2245 in file "mcc_generated_files/usb/usb_device.c"
  4534 ;; Parameters:    Size  Location     Type
  4535 ;;		None
  4536 ;; Auto vars:     Size  Location     Type
  4537 ;;		None
  4538 ;; Return value:  Size  Location     Type
  4539 ;;                  1    wreg      void 
  4540 ;; Registers used:
  4541 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4542 ;; Tracked objects:
  4543 ;;		On entry : 0/0
  4544 ;;		On exit  : 0/0
  4545 ;;		Unchanged: 0/0
  4546 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4549 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4550 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4551 ;;Total ram usage:        1 bytes
  4552 ;; Hardware stack levels used:    1
  4553 ;; Hardware stack levels required when called:   14
  4554 ;; This function calls:
  4555 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4556 ;; This function is called by:
  4557 ;;		_USBDeviceTasks
  4558 ;; This function uses a non-reentrant model
  4559 ;;
  4560                           
  4561                           
  4562                           ;psect for function _USBSuspend
  4563  1EFF                     _USBSuspend:	
  4564                           
  4565                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
  4566                           
  4567                           ;incstack = 0
  4568                           ; Regs used in _USBSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4569  1EFF  003D               	movlb	29	; select bank29
  4570  1F00  1512               	bsf	18,2	;volatile
  4571                           
  4572                           ;usb_device.c: 2271: (UIR &= 0xEF);
  4573  1F01  30EF               	movlw	239
  4574  1F02  0021               	movlb	1	; select bank1
  4575  1F03  00BA               	movwf	??_USBSuspend^(0+128)
  4576  1F04  083A               	movf	??_USBSuspend^(0+128),w
  4577  1F05  003D               	movlb	29	; select bank29
  4578  1F06  0590               	andwf	16,f	;volatile
  4579                           
  4580                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
  4581  1F07  148E               	bsf	14,1	;volatile
  4582                           
  4583                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
  4584  1F08  3001               	movlw	1
  4585  1F09  0021               	movlb	1	; select bank1
  4586  1F0A  00BA               	movwf	??_USBSuspend^(0+128)
  4587  1F0B  083A               	movf	??_USBSuspend^(0+128),w
  4588  1F0C  0023               	movlb	3	; select bank3
  4589  1F0D  00DF               	movwf	_USBBusIsSuspended^(0+384)	;volatile
  4590                           
  4591                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
  4592  1F0E  01D6               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  4593                           
  4594                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  4595  1F0F  3075               	movlw	117
  4596  1F10  0021               	movlb	1	; select bank1
  4597  1F11  00B4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  4598  1F12  3000               	movlw	0
  4599  1F13  00B5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)+1)
  4600  1F14  3000               	movlw	0
  4601  1F15  00B6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  4602  1F16  3000               	movlw	0
  4603  1F17  00B7               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  4604  1F18  3000               	movlw	0
  4605  1F19  00B8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  4606  1F1A  00B9               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
  4607  1F1B  3191  2108         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4608  1F1D  0008               	return
  4609  1F1E                     __end_of_USBSuspend:	
  4610                           
  4611                           	psect	text12
  4612  10AD                     __ptext12:	
  4613 ;; *************** function _USBStallHandler *****************
  4614 ;; Defined at:
  4615 ;;		line 2202 in file "mcc_generated_files/usb/usb_device.c"
  4616 ;; Parameters:    Size  Location     Type
  4617 ;;		None
  4618 ;; Auto vars:     Size  Location     Type
  4619 ;;		None
  4620 ;; Return value:  Size  Location     Type
  4621 ;;                  1    wreg      void 
  4622 ;; Registers used:
  4623 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4624 ;; Tracked objects:
  4625 ;;		On entry : 0/0
  4626 ;;		On exit  : 0/0
  4627 ;;		Unchanged: 0/0
  4628 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4631 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4632 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4633 ;;Total ram usage:        1 bytes
  4634 ;; Hardware stack levels used:    1
  4635 ;; Hardware stack levels required when called:   10
  4636 ;; This function calls:
  4637 ;;		Nothing
  4638 ;; This function is called by:
  4639 ;;		_USBDeviceTasks
  4640 ;; This function uses a non-reentrant model
  4641 ;;
  4642                           
  4643                           
  4644                           ;psect for function _USBStallHandler
  4645  10AD                     _USBStallHandler:	
  4646                           
  4647                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
  4648                           
  4649                           ;incstack = 0
  4650                           ; Regs used in _USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  4651  10AD  003D               	movlb	29	; select bank29
  4652  10AE  1C18               	btfss	24,0	;volatile
  4653  10AF  28D1               	goto	l8202
  4654                           
  4655                           ;usb_device.c: 2215: {
  4656                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  4657  10B0  0023               	movlb	3	; select bank3
  4658  10B1  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  4659  10B2  0086               	movwf	6
  4660  10B3  0187               	clrf	7
  4661  10B4  3080               	movlw	128
  4662  10B5  0601               	xorwf	1,w
  4663  10B6  1D03               	btfss	3,2
  4664  10B7  28CF               	goto	l8200
  4665  10B8  0837               	movf	_pBDTEntryIn^(0+384),w
  4666  10B9  0086               	movwf	6
  4667  10BA  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  4668  10BB  0087               	movwf	7
  4669  10BC  3084               	movlw	132
  4670  10BD  0601               	xorwf	1,w
  4671  10BE  1D03               	btfss	3,2
  4672  10BF  28CF               	goto	l8200
  4673                           
  4674                           ;usb_device.c: 2218: {
  4675                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  4676  10C0  300C               	movlw	12
  4677  10C1  0021               	movlb	1	; select bank1
  4678  10C2  00A6               	movwf	??_USBStallHandler^(0+128)
  4679  10C3  0023               	movlb	3	; select bank3
  4680  10C4  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  4681  10C5  0086               	movwf	6
  4682  10C6  0187               	clrf	7
  4683  10C7  0021               	movlb	1	; select bank1
  4684  10C8  0826               	movf	??_USBStallHandler^(0+128),w
  4685  10C9  0081               	movwf	1
  4686                           
  4687                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  4688  10CA  0023               	movlb	3	; select bank3
  4689  10CB  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  4690  10CC  0086               	movwf	6
  4691  10CD  0187               	clrf	7
  4692  10CE  1781               	bsf	1,7
  4693  10CF                     l8200:	
  4694                           
  4695                           ;usb_device.c: 2222: }
  4696                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
  4697  10CF  003D               	movlb	29	; select bank29
  4698  10D0  1018               	bcf	24,0	;volatile
  4699  10D1                     l8202:	
  4700                           
  4701                           ;usb_device.c: 2224: }
  4702                           ;usb_device.c: 2226: (UIR &= 0xDF);
  4703  10D1  30DF               	movlw	223
  4704  10D2  0021               	movlb	1	; select bank1
  4705  10D3  00A6               	movwf	??_USBStallHandler^(0+128)
  4706  10D4  0826               	movf	??_USBStallHandler^(0+128),w
  4707  10D5  003D               	movlb	29	; select bank29
  4708  10D6  0590               	andwf	16,f	;volatile
  4709  10D7  0008               	return
  4710  10D8                     __end_of_USBStallHandler:	
  4711                           
  4712                           	psect	text13
  4713  1E8B                     __ptext13:	
  4714 ;; *************** function _USBIncrement1msInternalTimers *****************
  4715 ;; Defined at:
  4716 ;;		line 3025 in file "mcc_generated_files/usb/usb_device.c"
  4717 ;; Parameters:    Size  Location     Type
  4718 ;;		None
  4719 ;; Auto vars:     Size  Location     Type
  4720 ;;		None
  4721 ;; Return value:  Size  Location     Type
  4722 ;;                  1    wreg      void 
  4723 ;; Registers used:
  4724 ;;		wreg, status,2, status,0
  4725 ;; Tracked objects:
  4726 ;;		On entry : 0/0
  4727 ;;		On exit  : 0/0
  4728 ;;		Unchanged: 0/0
  4729 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4732 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4733 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4734 ;;Total ram usage:        1 bytes
  4735 ;; Hardware stack levels used:    1
  4736 ;; Hardware stack levels required when called:   10
  4737 ;; This function calls:
  4738 ;;		Nothing
  4739 ;; This function is called by:
  4740 ;;		_USBDeviceTasks
  4741 ;; This function uses a non-reentrant model
  4742 ;;
  4743                           
  4744                           
  4745                           ;psect for function _USBIncrement1msInternalTimers
  4746  1E8B                     _USBIncrement1msInternalTimers:	
  4747                           
  4748                           ;usb_device.c: 3033: USB1msTickCount++;
  4749                           
  4750                           ;incstack = 0
  4751                           ; Regs used in _USBIncrement1msInternalTimers: [wreg+status,2+status,0]
  4752  1E8B  3001               	movlw	1
  4753  1E8C  0023               	movlb	3	; select bank3
  4754  1E8D  07C3               	addwf	_USB1msTickCount^(0+384),f	;volatile
  4755  1E8E  3000               	movlw	0
  4756  1E8F  3DC4               	addwfc	(_USB1msTickCount+1)^(0+384),f	;volatile
  4757  1E90  3000               	movlw	0
  4758  1E91  3DC5               	addwfc	(_USB1msTickCount+2)^(0+384),f	;volatile
  4759  1E92  3000               	movlw	0
  4760  1E93  3DC6               	addwfc	(_USB1msTickCount+3)^(0+384),f	;volatile
  4761                           
  4762                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
  4763  1E94  085F               	movf	_USBBusIsSuspended^(0+384),w	;volatile
  4764  1E95  1D03               	btfss	3,2
  4765  1E96  0008               	return
  4766                           
  4767                           ;usb_device.c: 3035: {
  4768                           ;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
  4769  1E97  3001               	movlw	1
  4770  1E98  0021               	movlb	1	; select bank1
  4771  1E99  00A6               	movwf	??_USBIncrement1msInternalTimers^(0+128)
  4772  1E9A  0826               	movf	??_USBIncrement1msInternalTimers^(0+128),w
  4773  1E9B  0023               	movlb	3	; select bank3
  4774  1E9C  07D6               	addwf	_USBTicksSinceSuspendEnd^(0+384),f	;volatile
  4775                           
  4776                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
  4777  1E9D  0856               	movf	_USBTicksSinceSuspendEnd^(0+384),w	;volatile
  4778  1E9E  1D03               	btfss	3,2
  4779  1E9F  0008               	return
  4780                           
  4781                           ;usb_device.c: 3039: {
  4782                           ;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
  4783  1EA0  30FF               	movlw	255
  4784  1EA1  0021               	movlb	1	; select bank1
  4785  1EA2  00A6               	movwf	??_USBIncrement1msInternalTimers^(0+128)
  4786  1EA3  0826               	movf	??_USBIncrement1msInternalTimers^(0+128),w
  4787  1EA4  0023               	movlb	3	; select bank3
  4788  1EA5  00D6               	movwf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  4789  1EA6  0008               	return
  4790  1EA7                     __end_of_USBIncrement1msInternalTimers:	
  4791                           
  4792                           	psect	text14
  4793  1628                     __ptext14:	
  4794 ;; *************** function _USBCtrlEPService *****************
  4795 ;; Defined at:
  4796 ;;		line 2372 in file "mcc_generated_files/usb/usb_device.c"
  4797 ;; Parameters:    Size  Location     Type
  4798 ;;		None
  4799 ;; Auto vars:     Size  Location     Type
  4800 ;;		None
  4801 ;; Return value:  Size  Location     Type
  4802 ;;                  1    wreg      void 
  4803 ;; Registers used:
  4804 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4805 ;; Tracked objects:
  4806 ;;		On entry : 0/0
  4807 ;;		On exit  : 0/0
  4808 ;;		Unchanged: 0/0
  4809 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4812 ;;      Temps:          0       0       0       0       0       3       0       0       0       0       0       0       
      +0       0
  4813 ;;      Totals:         0       0       0       0       0       3       0       0       0       0       0       0       
      +0       0
  4814 ;;Total ram usage:        3 bytes
  4815 ;; Hardware stack levels used:    1
  4816 ;; Hardware stack levels required when called:   17
  4817 ;; This function calls:
  4818 ;;		_USBCtrlTrfInHandler
  4819 ;;		_USBCtrlTrfOutHandler
  4820 ;;		_USBCtrlTrfSetupHandler
  4821 ;; This function is called by:
  4822 ;;		_USBDeviceTasks
  4823 ;; This function uses a non-reentrant model
  4824 ;;
  4825                           
  4826                           
  4827                           ;psect for function _USBCtrlEPService
  4828  1628                     _USBCtrlEPService:	
  4829                           
  4830                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
  4831                           
  4832                           ;incstack = 0
  4833 ;; hardware stack exceeded
  4834                           ; Regs used in _USBCtrlEPService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4835  1628  302D               	movlw	45
  4836  1629  0024               	movlb	4	; select bank4
  4837  162A  00DE               	movwf	??_USBCtrlEPService^(0+512)
  4838  162B  085E               	movf	??_USBCtrlEPService^(0+512),w
  4839  162C  0023               	movlb	3	; select bank3
  4840  162D  00DC               	movwf	_USBStatusStageTimeoutCounter^(0+384)	;volatile
  4841                           
  4842                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
  4843  162E  086D               	movf	_USTATcopy^(0+384),w	;volatile
  4844  162F  39FD               	andlw	253
  4845  1630  1D03               	btfss	3,2
  4846  1631  2E78               	goto	l8222
  4847                           
  4848                           ;usb_device.c: 2383: {
  4849                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  4850  1632  366D               	lsrf	_USTATcopy^(0+384),w	;volatile
  4851  1633  393F               	andlw	63
  4852  1634  0024               	movlb	4	; select bank4
  4853  1635  00DE               	movwf	??_USBCtrlEPService^(0+512)
  4854  1636  3001               	movlw	1
  4855  1637                     u7725:	
  4856  1637  35DE               	lslf	??_USBCtrlEPService^(0+512),f
  4857  1638  3EFF               	addlw	-1
  4858  1639  1D03               	skipz
  4859  163A  2E37               	goto	u7725
  4860  163B  355E               	lslf	??_USBCtrlEPService^(0+512),w
  4861  163C  3E20               	addlw	32
  4862  163D  00DF               	movwf	(??_USBCtrlEPService+1)^(0+512)
  4863  163E  085F               	movf	(??_USBCtrlEPService+1)^(0+512),w
  4864  163F  0023               	movlb	3	; select bank3
  4865  1640  00E4               	movwf	_pBDTEntryEP0OutCurrent^(0+384)
  4866                           
  4867                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  4868  1641  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  4869  1642  0021               	movlb	1	; select bank1
  4870  1643  00C8               	movwf	_pBDTEntryEP0OutNext^(0+128)
  4871  1644  39FF               	andlw	255
  4872  1645  1D03               	skipz
  4873  1646  3000               	movlw	0
  4874  1647  00C9               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
  4875                           
  4876                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
  4877  1648  3004               	movlw	4
  4878  1649  0648               	xorwf	_pBDTEntryEP0OutNext^(0+128),w
  4879  164A  00C8               	movwf	_pBDTEntryEP0OutNext^(0+128)
  4880  164B  3000               	movlw	0
  4881  164C  0649               	xorwf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  4882  164D  00C9               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
  4883                           
  4884                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  4885  164E  0023               	movlb	3	; select bank3
  4886  164F  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  4887  1650  0086               	movwf	6
  4888  1651  0187               	clrf	7
  4889  1652  0C01               	rrf	1,w
  4890  1653  0C89               	rrf	9,f
  4891  1654  390F               	andlw	15
  4892  1655  3A0D               	xorlw	13
  4893  1656  1D03               	skipz
  4894  1657  2E75               	goto	l8220
  4895                           
  4896                           ;usb_device.c: 2400: {
  4897                           ;usb_device.c: 2405: __builtin_memcpy((uint8_t*)&SetupPkt,(uint8_t*)((void *)(pBDTEntryE
      +                          P0OutCurrent->ADR)),8);
  4898  1658  3050               	movlw	80
  4899  1659  0086               	movwf	6
  4900  165A  0187               	clrf	7
  4901  165B  0023               	movlb	3	; select bank3
  4902  165C  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  4903  165D  3E02               	addlw	2
  4904  165E  0084               	movwf	4
  4905  165F  0185               	clrf	5
  4906  1660  3F00               	moviw [0]fsr0
  4907  1661  0024               	movlb	4	; select bank4
  4908  1662  00DE               	movwf	??_USBCtrlEPService^(0+512)
  4909  1663  3F01               	moviw [1]fsr0
  4910  1664  00DF               	movwf	(??_USBCtrlEPService^(0+512)+1)
  4911  1665  085E               	movf	??_USBCtrlEPService^(0+512),w
  4912  1666  0084               	movwf	4
  4913  1667  085F               	movf	(??_USBCtrlEPService+1)^(0+512),w
  4914  1668  0085               	movwf	5
  4915  1669  3008               	movlw	8
  4916  166A  00E0               	movwf	(??_USBCtrlEPService+2)^(0+512)
  4917  166B  0860               	movf	(??_USBCtrlEPService+2)^(0+512),w
  4918  166C  1903               	skipnz
  4919  166D  2E72               	goto	l8218
  4920  166E                     u774m0:	
  4921  166E  0012               	moviw fsr0++
  4922  166F  001E               	movwi fsr1++
  4923  1670  0BE0               	decfsz	(??_USBCtrlEPService+2)^(0+512),f
  4924  1671  2E6E               	goto	u774m0
  4925  1672                     l8218:	
  4926                           
  4927                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
  4928  1672  3194  241F         	fcall	_USBCtrlTrfSetupHandler
  4929                           
  4930                           ;usb_device.c: 2409: }
  4931  1674  0008               	return
  4932  1675                     l8220:	
  4933                           
  4934                           ;usb_device.c: 2410: else
  4935                           ;usb_device.c: 2411: {
  4936                           ;usb_device.c: 2413: USBCtrlTrfOutHandler();
  4937  1675  3191  21D4         	fcall	_USBCtrlTrfOutHandler
  4938                           
  4939                           ;usb_device.c: 2414: }
  4940                           ;usb_device.c: 2415: }
  4941  1677  0008               	return
  4942  1678                     l8222:	
  4943                           
  4944                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
  4945  1678  30FD               	movlw	253
  4946  1679  0023               	movlb	3	; select bank3
  4947  167A  056D               	andwf	_USTATcopy^(0+384),w	;volatile
  4948  167B  0024               	movlb	4	; select bank4
  4949  167C  00DE               	movwf	??_USBCtrlEPService^(0+512)
  4950  167D  3004               	movlw	4
  4951  167E  065E               	xorwf	??_USBCtrlEPService^(0+512),w
  4952  167F  1D03               	btfss	3,2
  4953  1680  0008               	return
  4954                           
  4955                           ;usb_device.c: 2417: {
  4956                           ;usb_device.c: 2420: USBCtrlTrfInHandler();
  4957  1681  3189  213B         	fcall	_USBCtrlTrfInHandler
  4958  1683  0008               	return
  4959  1684                     __end_of_USBCtrlEPService:	
  4960                           
  4961                           	psect	text15
  4962  141F                     __ptext15:	
  4963 ;; *************** function _USBCtrlTrfSetupHandler *****************
  4964 ;; Defined at:
  4965 ;;		line 2465 in file "mcc_generated_files/usb/usb_device.c"
  4966 ;; Parameters:    Size  Location     Type
  4967 ;;		None
  4968 ;; Auto vars:     Size  Location     Type
  4969 ;;		None
  4970 ;; Return value:  Size  Location     Type
  4971 ;;                  1    wreg      void 
  4972 ;; Registers used:
  4973 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4974 ;; Tracked objects:
  4975 ;;		On entry : 0/0
  4976 ;;		On exit  : 0/0
  4977 ;;		Unchanged: 0/0
  4978 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4981 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4982 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4983 ;;Total ram usage:        1 bytes
  4984 ;; Hardware stack levels used:    1
  4985 ;; Hardware stack levels required when called:   16
  4986 ;; This function calls:
  4987 ;;		_USBCheckStdRequest
  4988 ;;		_USBCtrlEPServiceComplete
  4989 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4990 ;; This function is called by:
  4991 ;;		_USBCtrlEPService
  4992 ;; This function uses a non-reentrant model
  4993 ;;
  4994                           
  4995                           
  4996                           ;psect for function _USBCtrlTrfSetupHandler
  4997  141F                     _USBCtrlTrfSetupHandler:	
  4998                           
  4999                           ;usb_device.c: 2470: shortPacketStatus = 0;
  5000                           
  5001                           ;incstack = 0
  5002 ;; hardware stack exceeded
  5003                           ; Regs used in _USBCtrlTrfSetupHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5004  141F  0023               	movlb	3	; select bank3
  5005  1420  01E3               	clrf	_shortPacketStatus^(0+384)	;volatile
  5006                           
  5007                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
  5008  1421  01DB               	clrf	_USBDeferStatusStagePacket^(0+384)	;volatile
  5009                           
  5010                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
  5011  1422  01D8               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  5012                           
  5013                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
  5014  1423  01D7               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  5015                           
  5016                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
  5017  1424  01DD               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  5018                           
  5019                           ;usb_device.c: 2475: controlTransferState = 0;
  5020  1425  01E2               	clrf	_controlTransferState^(0+384)	;volatile
  5021                           
  5022                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  5023  1426  307F               	movlw	127
  5024  1427  0021               	movlb	1	; select bank1
  5025  1428  00C2               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
  5026  1429  0023               	movlb	3	; select bank3
  5027  142A  0837               	movf	_pBDTEntryIn^(0+384),w
  5028  142B  0086               	movwf	6
  5029  142C  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  5030  142D  0087               	movwf	7
  5031  142E  0021               	movlb	1	; select bank1
  5032  142F  0842               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
  5033  1430  0581               	andwf	1,f
  5034                           
  5035                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  5036  1431  3004               	movlw	4
  5037  1432  0023               	movlb	3	; select bank3
  5038  1433  0637               	xorwf	_pBDTEntryIn^(0+384),w
  5039  1434  00B7               	movwf	_pBDTEntryIn^(0+384)
  5040  1435  3000               	movlw	0
  5041  1436  0638               	xorwf	(_pBDTEntryIn+1)^(0+384),w
  5042  1437  00B8               	movwf	(_pBDTEntryIn+1)^(0+384)
  5043                           
  5044                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  5045  1438  307F               	movlw	127
  5046  1439  0021               	movlb	1	; select bank1
  5047  143A  00C2               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
  5048  143B  0023               	movlb	3	; select bank3
  5049  143C  0837               	movf	_pBDTEntryIn^(0+384),w
  5050  143D  0086               	movwf	6
  5051  143E  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  5052  143F  0087               	movwf	7
  5053  1440  0021               	movlb	1	; select bank1
  5054  1441  0842               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
  5055  1442  0581               	andwf	1,f
  5056                           
  5057                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  5058  1443  3004               	movlw	4
  5059  1444  0023               	movlb	3	; select bank3
  5060  1445  0637               	xorwf	_pBDTEntryIn^(0+384),w
  5061  1446  00B7               	movwf	_pBDTEntryIn^(0+384)
  5062  1447  3000               	movlw	0
  5063  1448  0638               	xorwf	(_pBDTEntryIn+1)^(0+384),w
  5064  1449  00B8               	movwf	(_pBDTEntryIn+1)^(0+384)
  5065                           
  5066                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  5067  144A  307F               	movlw	127
  5068  144B  0021               	movlb	1	; select bank1
  5069  144C  00C2               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
  5070  144D  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5071  144E  0086               	movwf	6
  5072  144F  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5073  1450  0087               	movwf	7
  5074  1451  0842               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
  5075  1452  0581               	andwf	1,f
  5076                           
  5077                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
  5078  1453  01C5               	clrf	(_inPipes^(0+128)+2)	;volatile
  5079                           
  5080                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
  5081  1454  01C6               	clrf	(_inPipes^(0+128)+3)	;volatile
  5082  1455  01C7               	clrf	((_inPipes+1)^(0+128)+3)	;volatile
  5083                           
  5084                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
  5085  1456  0023               	movlb	3	; select bank3
  5086  1457  01B2               	clrf	(_outPipes^(0+384)+2)	;volatile
  5087                           
  5088                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
  5089  1458  01B3               	clrf	(_outPipes^(0+384)+3)	;volatile
  5090  1459  01B4               	clrf	((_outPipes+1)^(0+384)+3)	;volatile
  5091                           
  5092                           ;usb_device.c: 2500: USBCheckStdRequest();
  5093  145A  3197  279F  3194   	fcall	_USBCheckStdRequest
  5094                           
  5095                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  5096  145D  3000               	movlw	0
  5097  145E  0021               	movlb	1	; select bank1
  5098  145F  00B5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
  5099  1460  3003               	movlw	3
  5100  1461  00B4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  5101  1462  3000               	movlw	0
  5102  1463  00B6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  5103  1464  3000               	movlw	0
  5104  1465  00B7               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  5105  1466  3000               	movlw	0
  5106  1467  00B8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  5107  1468  00B9               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
  5108  1469  3191  2108  3194   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5109                           
  5110                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
  5111  146C  318E  26C8         	fcall	_USBCtrlEPServiceComplete
  5112  146E  0008               	return
  5113  146F                     __end_of_USBCtrlTrfSetupHandler:	
  5114                           
  5115                           	psect	text16
  5116  0EC8                     __ptext16:	
  5117 ;; *************** function _USBCtrlEPServiceComplete *****************
  5118 ;; Defined at:
  5119 ;;		line 1616 in file "mcc_generated_files/usb/usb_device.c"
  5120 ;; Parameters:    Size  Location     Type
  5121 ;;		None
  5122 ;; Auto vars:     Size  Location     Type
  5123 ;;		None
  5124 ;; Return value:  Size  Location     Type
  5125 ;;                  1    wreg      void 
  5126 ;; Registers used:
  5127 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5128 ;; Tracked objects:
  5129 ;;		On entry : 0/0
  5130 ;;		On exit  : 0/0
  5131 ;;		Unchanged: 0/0
  5132 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5135 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5136 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5137 ;;Total ram usage:        2 bytes
  5138 ;; Hardware stack levels used:    1
  5139 ;; Hardware stack levels required when called:   12
  5140 ;; This function calls:
  5141 ;;		_USBCtrlEPAllowDataStage
  5142 ;;		_USBCtrlEPAllowStatusStage
  5143 ;; This function is called by:
  5144 ;;		_USBCtrlTrfSetupHandler
  5145 ;; This function uses a non-reentrant model
  5146 ;;
  5147                           
  5148                           
  5149                           ;psect for function _USBCtrlEPServiceComplete
  5150  0EC8                     _USBCtrlEPServiceComplete:	
  5151                           
  5152                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
  5153                           
  5154                           ;incstack = 0
  5155                           ; Regs used in _USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5156  0EC8  003D               	movlb	29	; select bank29
  5157  0EC9  120E               	bcf	14,4	;volatile
  5158                           
  5159                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
  5160  0ECA  0021               	movlb	1	; select bank1
  5161  0ECB  1BC5               	btfsc	(_inPipes^(0+128)+2),7	;volatile
  5162  0ECC  2F11               	goto	l467
  5163                           
  5164                           ;usb_device.c: 1629: {
  5165                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
  5166  0ECD  0023               	movlb	3	; select bank3
  5167  0ECE  1FB2               	btfss	(_outPipes^(0+384)+2),7	;volatile
  5168  0ECF  2EDF               	goto	l7844
  5169                           
  5170                           ;usb_device.c: 1631: {
  5171                           ;usb_device.c: 1632: controlTransferState = 2;
  5172  0ED0  3002               	movlw	2
  5173  0ED1  0021               	movlb	1	; select bank1
  5174  0ED2  00AB               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  5175  0ED3  082B               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  5176  0ED4  0023               	movlb	3	; select bank3
  5177  0ED5  00E2               	movwf	_controlTransferState^(0+384)	;volatile
  5178                           
  5179                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
  5180  0ED6  0857               	movf	_USBDeferOUTDataStagePackets^(0+384),w	;volatile
  5181  0ED7  1D03               	btfss	3,2
  5182  0ED8  2EDB               	goto	l7840
  5183                           
  5184                           ;usb_device.c: 1644: {
  5185                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
  5186  0ED9  3196  26E0         	fcall	_USBCtrlEPAllowDataStage
  5187  0EDB                     l7840:	
  5188                           
  5189                           ;usb_device.c: 1646: }
  5190                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
  5191  0EDB  0023               	movlb	3	; select bank3
  5192  0EDC  01D9               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  5193                           
  5194                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
  5195  0EDD  01DA               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  5196                           
  5197                           ;usb_device.c: 1652: }
  5198  0EDE  0008               	return
  5199  0EDF                     l7844:	
  5200                           
  5201                           ;usb_device.c: 1653: else
  5202                           ;usb_device.c: 1654: {
  5203                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
  5204  0EDF  0021               	movlb	1	; select bank1
  5205  0EE0  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5206  0EE1  3E01               	addlw	1
  5207  0EE2  00AB               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  5208  0EE3  3000               	movlw	0
  5209  0EE4  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5210  0EE5  00AC               	movwf	(??_USBCtrlEPServiceComplete+1)^(0+128)
  5211  0EE6  082B               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  5212  0EE7  0086               	movwf	6
  5213  0EE8  082C               	movf	(??_USBCtrlEPServiceComplete+1)^(0+128),w
  5214  0EE9  0087               	movwf	7
  5215  0EEA  3008               	movlw	8
  5216  0EEB  0081               	movwf	1
  5217                           
  5218                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  5219  0EEC  3050               	movlw	80
  5220  0EED  00AB               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  5221  0EEE  3000               	movlw	0
  5222  0EEF  00AC               	movwf	(??_USBCtrlEPServiceComplete^(0+128)+1)
  5223  0EF0  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5224  0EF1  0086               	movwf	6
  5225  0EF2  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5226  0EF3  0087               	movwf	7
  5227  0EF4  3142               	addfsr 1,2
  5228  0EF5  082B               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  5229  0EF6  3FC0               	movwi [0]fsr1
  5230  0EF7  082C               	movf	(??_USBCtrlEPServiceComplete^(0+128)+1),w
  5231  0EF8  3FC1               	movwi [1]fsr1
  5232                           
  5233                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  5234  0EF9  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5235  0EFA  0086               	movwf	6
  5236  0EFB  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5237  0EFC  0087               	movwf	7
  5238  0EFD  300C               	movlw	12
  5239  0EFE  0081               	movwf	1
  5240                           
  5241                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5242  0EFF  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5243  0F00  0086               	movwf	6
  5244  0F01  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5245  0F02  0087               	movwf	7
  5246  0F03  1781               	bsf	1,7
  5247                           
  5248                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
  5249  0F04  0023               	movlb	3	; select bank3
  5250  0F05  0837               	movf	_pBDTEntryIn^(0+384),w
  5251  0F06  0086               	movwf	6
  5252  0F07  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  5253  0F08  0087               	movwf	7
  5254  0F09  3004               	movlw	4
  5255  0F0A  0081               	movwf	1
  5256                           
  5257                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
  5258  0F0B  0837               	movf	_pBDTEntryIn^(0+384),w
  5259  0F0C  0086               	movwf	6
  5260  0F0D  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  5261  0F0E  0087               	movwf	7
  5262  0F0F  1781               	bsf	1,7
  5263                           
  5264                           ;usb_device.c: 1665: }
  5265                           ;usb_device.c: 1666: }
  5266  0F10  0008               	return
  5267  0F11                     l467:	
  5268                           
  5269                           ;usb_device.c: 1667: else
  5270                           ;usb_device.c: 1668: {
  5271                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
  5272  0F11  0020               	movlb	0	; select bank0
  5273  0F12  1FD0               	btfss	80,7	;volatile
  5274  0F13  2F29               	goto	l7870
  5275                           
  5276                           ;usb_device.c: 1670: {
  5277                           ;usb_device.c: 1671: controlTransferState = 1;
  5278  0F14  3001               	movlw	1
  5279  0F15  0021               	movlb	1	; select bank1
  5280  0F16  00AB               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  5281  0F17  082B               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  5282  0F18  0023               	movlb	3	; select bank3
  5283  0F19  00E2               	movwf	_controlTransferState^(0+384)	;volatile
  5284                           
  5285                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
  5286  0F1A  0858               	movf	_USBDeferINDataStagePackets^(0+384),w	;volatile
  5287  0F1B  1D03               	btfss	3,2
  5288  0F1C  2F20               	goto	l7862
  5289                           
  5290                           ;usb_device.c: 1686: {
  5291                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
  5292  0F1D  3196  26E0  318E   	fcall	_USBCtrlEPAllowDataStage
  5293  0F20                     l7862:	
  5294                           
  5295                           ;usb_device.c: 1688: }
  5296                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
  5297  0F20  0023               	movlb	3	; select bank3
  5298  0F21  01D9               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  5299                           
  5300                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
  5301  0F22  01DA               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  5302                           
  5303                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
  5304  0F23  085B               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
  5305  0F24  1D03               	btfss	3,2
  5306  0F25  0008               	return
  5307                           
  5308                           ;usb_device.c: 1713: {
  5309                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
  5310  0F26  318A  229A         	fcall	_USBCtrlEPAllowStatusStage
  5311                           
  5312                           ;usb_device.c: 1715: }
  5313                           ;usb_device.c: 1716: }
  5314  0F28  0008               	return
  5315  0F29                     l7870:	
  5316                           
  5317                           ;usb_device.c: 1717: else
  5318                           ;usb_device.c: 1718: {
  5319                           ;usb_device.c: 1729: controlTransferState = 2;
  5320  0F29  3002               	movlw	2
  5321  0F2A  0021               	movlb	1	; select bank1
  5322  0F2B  00AB               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  5323  0F2C  082B               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  5324  0F2D  0023               	movlb	3	; select bank3
  5325  0F2E  00E2               	movwf	_controlTransferState^(0+384)	;volatile
  5326                           
  5327                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
  5328  0F2F  0021               	movlb	1	; select bank1
  5329  0F30  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5330  0F31  3E01               	addlw	1
  5331  0F32  00AB               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  5332  0F33  3000               	movlw	0
  5333  0F34  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5334  0F35  00AC               	movwf	(??_USBCtrlEPServiceComplete+1)^(0+128)
  5335  0F36  082B               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  5336  0F37  0086               	movwf	6
  5337  0F38  082C               	movf	(??_USBCtrlEPServiceComplete+1)^(0+128),w
  5338  0F39  0087               	movwf	7
  5339  0F3A  3008               	movlw	8
  5340  0F3B  0081               	movwf	1
  5341                           
  5342                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  5343  0F3C  3050               	movlw	80
  5344  0F3D  00AB               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  5345  0F3E  3000               	movlw	0
  5346  0F3F  00AC               	movwf	(??_USBCtrlEPServiceComplete^(0+128)+1)
  5347  0F40  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5348  0F41  0086               	movwf	6
  5349  0F42  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5350  0F43  0087               	movwf	7
  5351  0F44  3142               	addfsr 1,2
  5352  0F45  082B               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  5353  0F46  3FC0               	movwi [0]fsr1
  5354  0F47  082C               	movf	(??_USBCtrlEPServiceComplete^(0+128)+1),w
  5355  0F48  3FC1               	movwi [1]fsr1
  5356                           
  5357                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  5358  0F49  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5359  0F4A  0086               	movwf	6
  5360  0F4B  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5361  0F4C  0087               	movwf	7
  5362  0F4D  3004               	movlw	4
  5363  0F4E  0081               	movwf	1
  5364                           
  5365                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5366  0F4F  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5367  0F50  0086               	movwf	6
  5368  0F51  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5369  0F52  0087               	movwf	7
  5370  0F53  1781               	bsf	1,7
  5371                           
  5372                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
  5373  0F54  0023               	movlb	3	; select bank3
  5374  0F55  01D9               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  5375                           
  5376                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
  5377  0F56  01DA               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  5378                           
  5379                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
  5380  0F57  085B               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
  5381  0F58  1D03               	btfss	3,2
  5382  0F59  0008               	return
  5383                           
  5384                           ;usb_device.c: 1741: {
  5385                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
  5386  0F5A  318A  229A         	fcall	_USBCtrlEPAllowStatusStage
  5387  0F5C  0008               	return
  5388  0F5D                     __end_of_USBCtrlEPServiceComplete:	
  5389                           
  5390                           	psect	text17
  5391  16E0                     __ptext17:	
  5392 ;; *************** function _USBCtrlEPAllowDataStage *****************
  5393 ;; Defined at:
  5394 ;;		line 1488 in file "mcc_generated_files/usb/usb_device.c"
  5395 ;; Parameters:    Size  Location     Type
  5396 ;;		None
  5397 ;; Auto vars:     Size  Location     Type
  5398 ;;		None
  5399 ;; Return value:  Size  Location     Type
  5400 ;;                  1    wreg      void 
  5401 ;; Registers used:
  5402 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5403 ;; Tracked objects:
  5404 ;;		On entry : 0/0
  5405 ;;		On exit  : 0/0
  5406 ;;		Unchanged: 0/0
  5407 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5410 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5411 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5412 ;;Total ram usage:        2 bytes
  5413 ;; Hardware stack levels used:    1
  5414 ;; Hardware stack levels required when called:   11
  5415 ;; This function calls:
  5416 ;;		_USBCtrlTrfTxService
  5417 ;; This function is called by:
  5418 ;;		_USBCtrlEPServiceComplete
  5419 ;; This function uses a non-reentrant model
  5420 ;;
  5421                           
  5422                           
  5423                           ;psect for function _USBCtrlEPAllowDataStage
  5424  16E0                     _USBCtrlEPAllowDataStage:	
  5425                           
  5426                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
  5427                           
  5428                           ;incstack = 0
  5429                           ; Regs used in _USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5430  16E0  0023               	movlb	3	; select bank3
  5431  16E1  01D8               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  5432                           
  5433                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
  5434  16E2  01D7               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  5435                           
  5436                           ;usb_device.c: 1493: if(controlTransferState == 2)
  5437  16E3  3002               	movlw	2
  5438  16E4  0662               	xorwf	_controlTransferState^(0+384),w	;volatile
  5439  16E5  1D03               	btfss	3,2
  5440  16E6  2F0D               	goto	l7622
  5441                           
  5442                           ;usb_device.c: 1494: {
  5443                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
  5444  16E7  0021               	movlb	1	; select bank1
  5445  16E8  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5446  16E9  3E01               	addlw	1
  5447  16EA  00A9               	movwf	??_USBCtrlEPAllowDataStage^(0+128)
  5448  16EB  3000               	movlw	0
  5449  16EC  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5450  16ED  00AA               	movwf	(??_USBCtrlEPAllowDataStage+1)^(0+128)
  5451  16EE  0829               	movf	??_USBCtrlEPAllowDataStage^(0+128),w
  5452  16EF  0086               	movwf	6
  5453  16F0  082A               	movf	(??_USBCtrlEPAllowDataStage+1)^(0+128),w
  5454  16F1  0087               	movwf	7
  5455  16F2  3008               	movlw	8
  5456  16F3  0081               	movwf	1
  5457                           
  5458                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  5459  16F4  3058               	movlw	88
  5460  16F5  00A9               	movwf	??_USBCtrlEPAllowDataStage^(0+128)
  5461  16F6  3000               	movlw	0
  5462  16F7  00AA               	movwf	(??_USBCtrlEPAllowDataStage^(0+128)+1)
  5463  16F8  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5464  16F9  0086               	movwf	6
  5465  16FA  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5466  16FB  0087               	movwf	7
  5467  16FC  3142               	addfsr 1,2
  5468  16FD  0829               	movf	??_USBCtrlEPAllowDataStage^(0+128),w
  5469  16FE  3FC0               	movwi [0]fsr1
  5470  16FF  082A               	movf	(??_USBCtrlEPAllowDataStage^(0+128)+1),w
  5471  1700  3FC1               	movwi [1]fsr1
  5472                           
  5473                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  5474  1701  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5475  1702  0086               	movwf	6
  5476  1703  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5477  1704  0087               	movwf	7
  5478  1705  3048               	movlw	72
  5479  1706  0081               	movwf	1
  5480                           
  5481                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5482  1707  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5483  1708  0086               	movwf	6
  5484  1709  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5485  170A  0087               	movwf	7
  5486  170B  1781               	bsf	1,7
  5487                           
  5488                           ;usb_device.c: 1500: }
  5489  170C  0008               	return
  5490  170D                     l7622:	
  5491                           
  5492                           ;usb_device.c: 1501: else
  5493                           ;usb_device.c: 1502: {
  5494                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  5495  170D  0021               	movlb	1	; select bank1
  5496  170E  0847               	movf	((_inPipes+1)^(0+128)+3),w	;volatile
  5497  170F  0020               	movlb	0	; select bank0
  5498  1710  0257               	subwf	87,w	;volatile
  5499  1711  1D03               	skipz
  5500  1712  2F17               	goto	u7005
  5501  1713  0021               	movlb	1	; select bank1
  5502  1714  0846               	movf	(_inPipes^(0+128)+3),w	;volatile
  5503  1715  0020               	movlb	0	; select bank0
  5504  1716  0256               	subwf	86,w	;volatile
  5505  1717                     u7005:	
  5506  1717  1803               	skipnc
  5507  1718  2F20               	goto	l7626
  5508                           
  5509                           ;usb_device.c: 1506: {
  5510                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
  5511  1719  0857               	movf	87,w	;volatile
  5512  171A  0021               	movlb	1	; select bank1
  5513  171B  00C7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  5514  171C  0020               	movlb	0	; select bank0
  5515  171D  0856               	movf	86,w	;volatile
  5516  171E  0021               	movlb	1	; select bank1
  5517  171F  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
  5518  1720                     l7626:	
  5519                           
  5520                           ;usb_device.c: 1508: }
  5521                           ;usb_device.c: 1509: USBCtrlTrfTxService();
  5522  1720  318A  2220         	fcall	_USBCtrlTrfTxService
  5523                           
  5524                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  5525  1722  3058               	movlw	88
  5526  1723  0021               	movlb	1	; select bank1
  5527  1724  00A9               	movwf	??_USBCtrlEPAllowDataStage^(0+128)
  5528  1725  3000               	movlw	0
  5529  1726  00AA               	movwf	(??_USBCtrlEPAllowDataStage^(0+128)+1)
  5530  1727  0023               	movlb	3	; select bank3
  5531  1728  0837               	movf	_pBDTEntryIn^(0+384),w
  5532  1729  0086               	movwf	6
  5533  172A  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  5534  172B  0087               	movwf	7
  5535  172C  3142               	addfsr 1,2
  5536  172D  0021               	movlb	1	; select bank1
  5537  172E  0829               	movf	??_USBCtrlEPAllowDataStage^(0+128),w
  5538  172F  3FC0               	movwi [0]fsr1
  5539  1730  082A               	movf	(??_USBCtrlEPAllowDataStage^(0+128)+1),w
  5540  1731  3FC1               	movwi [1]fsr1
  5541                           
  5542                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  5543  1732  0023               	movlb	3	; select bank3
  5544  1733  0837               	movf	_pBDTEntryIn^(0+384),w
  5545  1734  0086               	movwf	6
  5546  1735  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  5547  1736  0087               	movwf	7
  5548  1737  3048               	movlw	72
  5549  1738  0081               	movwf	1
  5550                           
  5551                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
  5552  1739  0837               	movf	_pBDTEntryIn^(0+384),w
  5553  173A  0086               	movwf	6
  5554  173B  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  5555  173C  0087               	movwf	7
  5556  173D  1781               	bsf	1,7
  5557  173E  0008               	return
  5558  173F                     __end_of_USBCtrlEPAllowDataStage:	
  5559                           
  5560                           	psect	text18
  5561  179F                     __ptext18:	
  5562 ;; *************** function _USBCheckStdRequest *****************
  5563 ;; Defined at:
  5564 ;;		line 2686 in file "mcc_generated_files/usb/usb_device.c"
  5565 ;; Parameters:    Size  Location     Type
  5566 ;;		None
  5567 ;; Auto vars:     Size  Location     Type
  5568 ;;		None
  5569 ;; Return value:  Size  Location     Type
  5570 ;;                  1    wreg      void 
  5571 ;; Registers used:
  5572 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5573 ;; Tracked objects:
  5574 ;;		On entry : 0/0
  5575 ;;		On exit  : 0/0
  5576 ;;		Unchanged: 0/0
  5577 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5580 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5581 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5582 ;;Total ram usage:        1 bytes
  5583 ;; Hardware stack levels used:    1
  5584 ;; Hardware stack levels required when called:   15
  5585 ;; This function calls:
  5586 ;;		_USBStdFeatureReqHandler
  5587 ;;		_USBStdGetDscHandler
  5588 ;;		_USBStdGetStatusHandler
  5589 ;;		_USBStdSetCfgHandler
  5590 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5591 ;; This function is called by:
  5592 ;;		_USBCtrlTrfSetupHandler
  5593 ;; This function uses a non-reentrant model
  5594 ;;
  5595                           
  5596                           
  5597                           ;psect for function _USBCheckStdRequest
  5598  179F                     _USBCheckStdRequest:	
  5599                           
  5600                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
  5601                           
  5602                           ;incstack = 0
  5603 ;; hardware stack exceeded
  5604                           ; Regs used in _USBCheckStdRequest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5605  179F  0020               	movlb	0	; select bank0
  5606  17A0  0E50               	swapf	80,w	;volatile
  5607  17A1  0C89               	rrf	9,f
  5608  17A2  3903               	andlw	3
  5609  17A3  3A00               	xorlw	0
  5610  17A4  1D03               	btfss	3,2
  5611  17A5  0008               	return
  5612  17A6  2FF4               	goto	l7964
  5613  17A7                     l594:	
  5614                           ;usb_device.c: 2691: {
  5615                           ;usb_device.c: 2692: case 5:
  5616                           
  5617                           ;usb_device.c: 2690: switch(SetupPkt.bRequest)
  5618                           
  5619                           
  5620                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
  5621  17A7  0021               	movlb	1	; select bank1
  5622  17A8  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5623                           
  5624                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
  5625  17A9  3008               	movlw	8
  5626  17AA  00C1               	movwf	??_USBCheckStdRequest^(0+128)
  5627  17AB  0841               	movf	??_USBCheckStdRequest^(0+128),w
  5628  17AC  0023               	movlb	3	; select bank3
  5629  17AD  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
  5630                           
  5631                           ;usb_device.c: 2696: break;
  5632  17AE  0008               	return
  5633  17AF                     l7934:	
  5634                           ;usb_device.c: 2697: case 6:
  5635                           
  5636                           
  5637                           ;usb_device.c: 2698: USBStdGetDscHandler();
  5638  17AF  318B  2393         	fcall	_USBStdGetDscHandler
  5639                           
  5640                           ;usb_device.c: 2699: break;
  5641  17B1  0008               	return
  5642  17B2                     l7936:	
  5643                           ;usb_device.c: 2700: case 9:
  5644                           
  5645                           
  5646                           ;usb_device.c: 2701: USBStdSetCfgHandler();
  5647  17B2  318D  25A8         	fcall	_USBStdSetCfgHandler
  5648                           
  5649                           ;usb_device.c: 2702: break;
  5650  17B4  0008               	return
  5651  17B5                     l7938:	
  5652                           ;usb_device.c: 2703: case 8:
  5653                           
  5654                           
  5655                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  5656  17B5  30EE               	movlw	low _USBActiveConfiguration
  5657  17B6  0021               	movlb	1	; select bank1
  5658  17B7  00C3               	movwf	_inPipes^(0+128)	;volatile
  5659  17B8  3001               	movlw	high _USBActiveConfiguration
  5660  17B9  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
  5661                           
  5662                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  5663  17BA  1445               	bsf	(_inPipes^(0+128)+2),0	;volatile
  5664                           
  5665                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
  5666  17BB  3001               	movlw	1
  5667  17BC  00C1               	movwf	??_USBCheckStdRequest^(0+128)
  5668  17BD  0841               	movf	??_USBCheckStdRequest^(0+128),w
  5669  17BE  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
  5670                           
  5671                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
  5672  17BF  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5673                           
  5674                           ;usb_device.c: 2708: break;
  5675  17C0  0008               	return
  5676  17C1                     l7946:	
  5677                           ;usb_device.c: 2709: case 0:
  5678                           
  5679                           
  5680                           ;usb_device.c: 2710: USBStdGetStatusHandler();
  5681  17C1  3195  2517         	fcall	_USBStdGetStatusHandler
  5682                           
  5683                           ;usb_device.c: 2711: break;
  5684  17C3  0008               	return
  5685  17C4                     l7948:	
  5686                           ;usb_device.c: 2712: case 1:
  5687                           
  5688                           
  5689                           ;usb_device.c: 2713: case 3:
  5690                           ;usb_device.c: 2714: USBStdFeatureReqHandler();
  5691  17C4  3180  207B         	fcall	_USBStdFeatureReqHandler
  5692                           
  5693                           ;usb_device.c: 2715: break;
  5694  17C6  0008               	return
  5695  17C7                     l7950:	
  5696                           ;usb_device.c: 2716: case 10:
  5697                           
  5698                           
  5699                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  5700  17C7  0020               	movlb	0	; select bank0
  5701  17C8  0854               	movf	84,w	;volatile
  5702  17C9  3EEB               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
  5703  17CA  0021               	movlb	1	; select bank1
  5704  17CB  00C3               	movwf	_inPipes^(0+128)	;volatile
  5705  17CC  3001               	movlw	1
  5706  17CD  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
  5707                           
  5708                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  5709  17CE  1445               	bsf	(_inPipes^(0+128)+2),0	;volatile
  5710                           
  5711                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
  5712  17CF  3001               	movlw	1
  5713  17D0  00C1               	movwf	??_USBCheckStdRequest^(0+128)
  5714  17D1  0841               	movf	??_USBCheckStdRequest^(0+128),w
  5715  17D2  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
  5716                           
  5717                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
  5718  17D3  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5719                           
  5720                           ;usb_device.c: 2721: break;
  5721  17D4  0008               	return
  5722  17D5                     l603:	
  5723                           ;usb_device.c: 2722: case 11:
  5724                           
  5725                           
  5726                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
  5727  17D5  0021               	movlb	1	; select bank1
  5728  17D6  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5729                           
  5730                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  5731  17D7  0020               	movlb	0	; select bank0
  5732  17D8  0852               	movf	82,w	;volatile
  5733  17D9  0021               	movlb	1	; select bank1
  5734  17DA  00C1               	movwf	??_USBCheckStdRequest^(0+128)
  5735  17DB  0020               	movlb	0	; select bank0
  5736  17DC  0854               	movf	84,w	;volatile
  5737  17DD  3EEB               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
  5738  17DE  0086               	movwf	6
  5739  17DF  3001               	movlw	1	; select bank3/4
  5740  17E0  0087               	movwf	7
  5741  17E1  0021               	movlb	1	; select bank1
  5742  17E2  0841               	movf	??_USBCheckStdRequest^(0+128),w
  5743  17E3  0081               	movwf	1
  5744                           
  5745                           ;usb_device.c: 2725: break;
  5746  17E4  0008               	return
  5747  17E5                     l7960:	
  5748                           ;usb_device.c: 2726: case 7:
  5749                           
  5750                           
  5751                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  5752  17E5  3000               	movlw	0
  5753  17E6  0021               	movlb	1	; select bank1
  5754  17E7  00B5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
  5755  17E8  3002               	movlw	2
  5756  17E9  00B4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  5757  17EA  3000               	movlw	0
  5758  17EB  00B6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  5759  17EC  3000               	movlw	0
  5760  17ED  00B7               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  5761  17EE  3000               	movlw	0
  5762  17EF  00B8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  5763  17F0  00B9               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
  5764  17F1  3191  2108         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5765                           
  5766                           ;usb_device.c: 2732: }
  5767                           
  5768                           ;usb_device.c: 2731: break;
  5769                           
  5770                           ;usb_device.c: 2730: default:
  5771                           
  5772                           ;usb_device.c: 2729: case 12:
  5773                           
  5774                           ;usb_device.c: 2728: break;
  5775  17F3  0008               	return
  5776  17F4                     l7964:	
  5777  17F4  0020               	movlb	0	; select bank0
  5778  17F5  0851               	movf	81,w	;volatile
  5779                           
  5780                           ; Switch size 1, requested type "space"
  5781                           ; Number of cases is 11, Range of values is 0 to 12
  5782                           ; switch strategies available:
  5783                           ; Name         Instructions Cycles
  5784                           ; direct_byte           32     6 (fixed)
  5785                           ; simple_byte           34    18 (average)
  5786                           ; jumptable            260     6 (fixed)
  5787                           ;	Chosen strategy is direct_byte
  5788  17F6  0084               	movwf	4
  5789  17F7  300D               	movlw	13
  5790  17F8  0204               	subwf	4,w
  5791  17F9  1803               	skipnc
  5792  17FA  0008               	return
  5793  17FB  3198               	movlp	high S8574
  5794  17FC  3504               	lslf	4,w
  5795  17FD  3E91               	addlw	low S8574
  5796  17FE  0082               	movwf	2
  5797  17FF                     l592:	
  5798  17FF  0008               	return
  5799  1800                     __end_of_USBCheckStdRequest:	
  5800                           
  5801                           	psect	swtext1
  5802  1891                     __pswtext1:	
  5803  1891                     S8574:	
  5804  1891  3197  2FC1         	ljmp	l7946
  5805  1893  3197  2FC4         	ljmp	l7948
  5806  1895  3197  2FFF         	ljmp	l592
  5807  1897  3197  2FC4         	ljmp	l7948
  5808  1899  3197  2FFF         	ljmp	l592
  5809  189B  3197  2FA7         	ljmp	l594
  5810  189D  3197  2FAF         	ljmp	l7934
  5811  189F  3197  2FE5         	ljmp	l7960
  5812  18A1  3197  2FB5         	ljmp	l7938
  5813  18A3  3197  2FB2         	ljmp	l7936
  5814  18A5  3197  2FC7         	ljmp	l7950
  5815  18A7  3197  2FD5         	ljmp	l603
  5816  18A9  3197  2FFF         	ljmp	l592
  5817                           
  5818                           	psect	text19
  5819  0DA8                     __ptext19:	
  5820 ;; *************** function _USBStdSetCfgHandler *****************
  5821 ;; Defined at:
  5822 ;;		line 1968 in file "mcc_generated_files/usb/usb_device.c"
  5823 ;; Parameters:    Size  Location     Type
  5824 ;;		None
  5825 ;; Auto vars:     Size  Location     Type
  5826 ;;  p               2   27[BANK1 ] PTR unsigned char 
  5827 ;;		 -> UEP1(1), 
  5828 ;;  i               1   29[BANK1 ] unsigned char 
  5829 ;;  i               1   30[BANK1 ] unsigned char 
  5830 ;; Return value:  Size  Location     Type
  5831 ;;                  1    wreg      void 
  5832 ;; Registers used:
  5833 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5834 ;; Tracked objects:
  5835 ;;		On entry : 0/0
  5836 ;;		On exit  : 0/0
  5837 ;;		Unchanged: 0/0
  5838 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5840 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5841 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5842 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5843 ;;Total ram usage:        5 bytes
  5844 ;; Hardware stack levels used:    1
  5845 ;; Hardware stack levels required when called:   14
  5846 ;; This function calls:
  5847 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5848 ;;		_memset
  5849 ;; This function is called by:
  5850 ;;		_USBCheckStdRequest
  5851 ;; This function uses a non-reentrant model
  5852 ;;
  5853                           
  5854                           
  5855                           ;psect for function _USBStdSetCfgHandler
  5856  0DA8                     _USBStdSetCfgHandler:	
  5857                           
  5858                           ;usb_device.c: 1970: uint8_t i;
  5859                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
  5860                           
  5861                           ;incstack = 0
  5862 ;; hardware stack exceeded
  5863                           ; Regs used in _USBStdSetCfgHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5864  0DA8  0021               	movlb	1	; select bank1
  5865  0DA9  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5866                           
  5867                           ;usb_device.c: 1976: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 
      +                          0; };
  5868  0DAA  300E               	movlw	14
  5869  0DAB  00BC               	movwf	(USBStdSetCfgHandler@p+1)^(0+128)
  5870  0DAC  3099               	movlw	153
  5871  0DAD  00BB               	movwf	USBStdSetCfgHandler@p^(0+128)
  5872  0DAE  01BD               	clrf	USBStdSetCfgHandler@i_2167^(0+128)
  5873  0DAF  3002               	movlw	2
  5874  0DB0  023D               	subwf	USBStdSetCfgHandler@i_2167^(0+128),w
  5875  0DB1  1803               	btfsc	3,0
  5876  0DB2  2DC4               	goto	l7650
  5877  0DB3                     l7642:	
  5878  0DB3  083B               	movf	USBStdSetCfgHandler@p^(0+128),w
  5879  0DB4  0086               	movwf	6
  5880  0DB5  083C               	movf	(USBStdSetCfgHandler@p+1)^(0+128),w
  5881  0DB6  0087               	movwf	7
  5882  0DB7  0181               	clrf	1
  5883  0DB8  3001               	movlw	1
  5884  0DB9  07BB               	addwf	USBStdSetCfgHandler@p^(0+128),f
  5885  0DBA  3000               	movlw	0
  5886  0DBB  3DBC               	addwfc	(USBStdSetCfgHandler@p+1)^(0+128),f
  5887  0DBC  3001               	movlw	1
  5888  0DBD  00BA               	movwf	??_USBStdSetCfgHandler^(0+128)
  5889  0DBE  083A               	movf	??_USBStdSetCfgHandler^(0+128),w
  5890  0DBF  07BD               	addwf	USBStdSetCfgHandler@i_2167^(0+128),f
  5891  0DC0  3002               	movlw	2
  5892  0DC1  023D               	subwf	USBStdSetCfgHandler@i_2167^(0+128),w
  5893  0DC2  1C03               	skipc
  5894  0DC3  2DB3               	goto	l7642
  5895  0DC4                     l7650:	
  5896                           
  5897                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  5898  0DC4  3020               	movlw	32
  5899  0DC5  00A6               	movwf	memset@p1^(0+128)
  5900  0DC6  3000               	movlw	0
  5901  0DC7  00A7               	movwf	(memset@p1+1)^(0+128)
  5902  0DC8  3000               	movlw	0
  5903  0DC9  00A8               	movwf	memset@c^(0+128)
  5904  0DCA  00A9               	movwf	(memset@c+1)^(0+128)
  5905  0DCB  3030               	movlw	48
  5906  0DCC  00AA               	movwf	memset@n^(0+128)
  5907  0DCD  3000               	movlw	0
  5908  0DCE  00AB               	movwf	(memset@n^(0+128)+1)
  5909  0DCF  319E  2672  318D   	fcall	_memset
  5910                           
  5911                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
  5912  0DD2  003D               	movlb	29	; select bank29
  5913  0DD3  170E               	bsf	14,6	;volatile
  5914                           
  5915                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
  5916  0DD4  0021               	movlb	1	; select bank1
  5917  0DD5  01BE               	clrf	USBStdSetCfgHandler@i^(0+128)
  5918  0DD6  3003               	movlw	3
  5919  0DD7  023E               	subwf	USBStdSetCfgHandler@i^(0+128),w
  5920  0DD8  1803               	btfsc	3,0
  5921  0DD9  2DEE               	goto	l7666
  5922  0DDA                     l7660:	
  5923                           
  5924                           ;usb_device.c: 1988: {
  5925                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
  5926  0DDA  083E               	movf	USBStdSetCfgHandler@i^(0+128),w
  5927  0DDB  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  5928  0DDC  0086               	movwf	6
  5929  0DDD  3001               	movlw	1	; select bank3/4
  5930  0DDE  0087               	movwf	7
  5931  0DDF  0181               	clrf	1
  5932                           
  5933                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
  5934  0DE0  083E               	movf	USBStdSetCfgHandler@i^(0+128),w
  5935  0DE1  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  5936  0DE2  0086               	movwf	6
  5937  0DE3  3001               	movlw	1	; select bank3/4
  5938  0DE4  0087               	movwf	7
  5939  0DE5  0181               	clrf	1
  5940  0DE6  3001               	movlw	1
  5941  0DE7  00BA               	movwf	??_USBStdSetCfgHandler^(0+128)
  5942  0DE8  083A               	movf	??_USBStdSetCfgHandler^(0+128),w
  5943  0DE9  07BE               	addwf	USBStdSetCfgHandler@i^(0+128),f
  5944  0DEA  3003               	movlw	3
  5945  0DEB  023E               	subwf	USBStdSetCfgHandler@i^(0+128),w
  5946  0DEC  1C03               	skipc
  5947  0DED  2DDA               	goto	l7660
  5948  0DEE                     l7666:	
  5949                           
  5950                           ;usb_device.c: 1991: }
  5951                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
  5952  0DEE  30EB               	movlw	low _USBAlternateInterface
  5953  0DEF  00A6               	movwf	memset@p1^(0+128)
  5954  0DF0  3001               	movlw	high _USBAlternateInterface
  5955  0DF1  00A7               	movwf	(memset@p1+1)^(0+128)
  5956  0DF2  3000               	movlw	0
  5957  0DF3  00A8               	movwf	memset@c^(0+128)
  5958  0DF4  00A9               	movwf	(memset@c+1)^(0+128)
  5959  0DF5  3002               	movlw	2
  5960  0DF6  00AA               	movwf	memset@n^(0+128)
  5961  0DF7  3000               	movlw	0
  5962  0DF8  00AB               	movwf	(memset@n^(0+128)+1)
  5963  0DF9  319E  2672  318D   	fcall	_memset
  5964                           
  5965                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
  5966  0DFC  003D               	movlb	29	; select bank29
  5967  0DFD  130E               	bcf	14,6	;volatile
  5968                           
  5969                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  5970  0DFE  3028               	movlw	40
  5971  0DFF  0023               	movlb	3	; select bank3
  5972  0E00  00B7               	movwf	_pBDTEntryIn^(0+384)
  5973  0E01  3000               	movlw	0
  5974  0E02  00B8               	movwf	(_pBDTEntryIn+1)^(0+384)
  5975                           
  5976                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  5977  0E03  3020               	movlw	32
  5978  0E04  0021               	movlb	1	; select bank1
  5979  0E05  00BA               	movwf	??_USBStdSetCfgHandler^(0+128)
  5980  0E06  083A               	movf	??_USBStdSetCfgHandler^(0+128),w
  5981  0E07  0023               	movlb	3	; select bank3
  5982  0E08  00E4               	movwf	_pBDTEntryEP0OutCurrent^(0+384)
  5983                           
  5984                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  5985  0E09  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  5986  0E0A  0021               	movlb	1	; select bank1
  5987  0E0B  00C8               	movwf	_pBDTEntryEP0OutNext^(0+128)
  5988  0E0C  39FF               	andlw	255
  5989  0E0D  1D03               	skipz
  5990  0E0E  3000               	movlw	0
  5991  0E0F  00C9               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
  5992                           
  5993                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  5994  0E10  0020               	movlb	0	; select bank0
  5995  0E11  0852               	movf	82,w	;volatile
  5996  0E12  0021               	movlb	1	; select bank1
  5997  0E13  00BA               	movwf	??_USBStdSetCfgHandler^(0+128)
  5998  0E14  083A               	movf	??_USBStdSetCfgHandler^(0+128),w
  5999  0E15  0023               	movlb	3	; select bank3
  6000  0E16  00EE               	movwf	_USBActiveConfiguration^(0+384)	;volatile
  6001                           
  6002                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
  6003  0E17  086E               	movf	_USBActiveConfiguration^(0+384),w	;volatile
  6004  0E18  1D03               	btfss	3,2
  6005  0E19  2E21               	goto	l7682
  6006                           
  6007                           ;usb_device.c: 2010: {
  6008                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
  6009  0E1A  3010               	movlw	16
  6010  0E1B  0021               	movlb	1	; select bank1
  6011  0E1C  00BA               	movwf	??_USBStdSetCfgHandler^(0+128)
  6012  0E1D  083A               	movf	??_USBStdSetCfgHandler^(0+128),w
  6013  0E1E  0023               	movlb	3	; select bank3
  6014  0E1F  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
  6015                           
  6016                           ;usb_device.c: 2013: }
  6017  0E20  0008               	return
  6018  0E21                     l7682:	
  6019                           
  6020                           ;usb_device.c: 2014: else
  6021                           ;usb_device.c: 2015: {
  6022                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  6023  0E21  3000               	movlw	0
  6024  0E22  0021               	movlb	1	; select bank1
  6025  0E23  00B5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
  6026  0E24  3001               	movlw	1
  6027  0E25  00B4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  6028  0E26  30EE               	movlw	low _USBActiveConfiguration
  6029  0E27  00B6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  6030  0E28  3001               	movlw	high _USBActiveConfiguration
  6031  0E29  00B7               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  6032  0E2A  3001               	movlw	1
  6033  0E2B  00B8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  6034  0E2C  3000               	movlw	0
  6035  0E2D  00B9               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)+1)
  6036  0E2E  3191  2108         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6037                           
  6038                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
  6039  0E30  3020               	movlw	32
  6040  0E31  0021               	movlb	1	; select bank1
  6041  0E32  00BA               	movwf	??_USBStdSetCfgHandler^(0+128)
  6042  0E33  083A               	movf	??_USBStdSetCfgHandler^(0+128),w
  6043  0E34  0023               	movlb	3	; select bank3
  6044  0E35  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
  6045  0E36  0008               	return
  6046  0E37                     __end_of_USBStdSetCfgHandler:	
  6047                           
  6048                           	psect	text20
  6049  1E72                     __ptext20:	
  6050 ;; *************** function _memset *****************
  6051 ;; Defined at:
  6052 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
  6053 ;; Parameters:    Size  Location     Type
  6054 ;;  p1              2    6[BANK1 ] PTR void 
  6055 ;;		 -> USBAlternateInterface(2), BDT(48), 
  6056 ;;  c               2    8[BANK1 ] int 
  6057 ;;  n               2   10[BANK1 ] unsigned int 
  6058 ;; Auto vars:     Size  Location     Type
  6059 ;;  p               2   12[BANK1 ] PTR unsigned char 
  6060 ;;		 -> USBAlternateInterface(2), BDT(48), 
  6061 ;; Return value:  Size  Location     Type
  6062 ;;                  2    6[BANK1 ] PTR void 
  6063 ;; Registers used:
  6064 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6065 ;; Tracked objects:
  6066 ;;		On entry : 0/0
  6067 ;;		On exit  : 0/0
  6068 ;;		Unchanged: 0/0
  6069 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6070 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  6071 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6073 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6074 ;;Total ram usage:        8 bytes
  6075 ;; Hardware stack levels used:    1
  6076 ;; Hardware stack levels required when called:   10
  6077 ;; This function calls:
  6078 ;;		Nothing
  6079 ;; This function is called by:
  6080 ;;		_USBStdSetCfgHandler
  6081 ;; This function uses a non-reentrant model
  6082 ;;
  6083                           
  6084                           
  6085                           ;psect for function _memset
  6086  1E72                     _memset:	
  6087                           
  6088                           ;incstack = 0
  6089                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  6090  1E72  0021               	movlb	1	; select bank1
  6091  1E73  0827               	movf	(memset@p1+1)^(0+128),w
  6092  1E74  00AD               	movwf	(memset@p+1)^(0+128)
  6093  1E75  0826               	movf	memset@p1^(0+128),w
  6094  1E76  00AC               	movwf	memset@p^(0+128)
  6095  1E77                     l7572:	
  6096  1E77  3001               	movlw	1
  6097  1E78  02AA               	subwf	memset@n^(0+128),f
  6098  1E79  3000               	movlw	0
  6099  1E7A  3BAB               	subwfb	(memset@n+1)^(0+128),f
  6100  1E7B  0A2A               	incf	memset@n^(0+128),w
  6101  1E7C  1903               	btfsc	3,2
  6102  1E7D  0A2B               	incf	(memset@n+1)^(0+128),w
  6103  1E7E  1903               	btfsc	3,2
  6104  1E7F  0008               	return
  6105  1E80  082C               	movf	memset@p^(0+128),w
  6106  1E81  0086               	movwf	6
  6107  1E82  082D               	movf	(memset@p+1)^(0+128),w
  6108  1E83  0087               	movwf	7
  6109  1E84  0828               	movf	memset@c^(0+128),w
  6110  1E85  0081               	movwf	1
  6111  1E86  3001               	movlw	1
  6112  1E87  07AC               	addwf	memset@p^(0+128),f
  6113  1E88  3000               	movlw	0
  6114  1E89  3DAD               	addwfc	(memset@p+1)^(0+128),f
  6115  1E8A  2E77               	goto	l7572
  6116  1E8B                     __end_of_memset:	
  6117                           ;	Return value of _memset is never used
  6118                           
  6119                           
  6120                           	psect	text21
  6121  1517                     __ptext21:	
  6122 ;; *************** function _USBStdGetStatusHandler *****************
  6123 ;; Defined at:
  6124 ;;		line 2129 in file "mcc_generated_files/usb/usb_device.c"
  6125 ;; Parameters:    Size  Location     Type
  6126 ;;		None
  6127 ;; Auto vars:     Size  Location     Type
  6128 ;;  p               2    7[BANK1 ] PTR struct __BDT
  6129 ;;		 -> RAM(4096), BDT(48), NULL(0), 
  6130 ;; Return value:  Size  Location     Type
  6131 ;;                  1    wreg      void 
  6132 ;; Registers used:
  6133 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  6134 ;; Tracked objects:
  6135 ;;		On entry : 0/0
  6136 ;;		On exit  : 0/0
  6137 ;;		Unchanged: 0/0
  6138 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6140 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6141 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6142 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6143 ;;Total ram usage:        3 bytes
  6144 ;; Hardware stack levels used:    1
  6145 ;; Hardware stack levels required when called:   10
  6146 ;; This function calls:
  6147 ;;		Nothing
  6148 ;; This function is called by:
  6149 ;;		_USBCheckStdRequest
  6150 ;; This function uses a non-reentrant model
  6151 ;;
  6152                           
  6153                           
  6154                           ;psect for function _USBStdGetStatusHandler
  6155  1517                     _USBStdGetStatusHandler:	
  6156                           
  6157                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
  6158                           
  6159                           ;incstack = 0
  6160                           ; Regs used in _USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
  6161  1517  0020               	movlb	0	; select bank0
  6162  1518  01D8               	clrf	88	;volatile
  6163                           
  6164                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
  6165  1519  01D9               	clrf	89	;volatile
  6166                           
  6167                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
  6168  151A  2D57               	goto	l7738
  6169  151B                     l532:	
  6170                           ;usb_device.c: 2135: {
  6171                           ;usb_device.c: 2136: case (0x00):
  6172                           
  6173                           
  6174                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
  6175  151B  0021               	movlb	1	; select bank1
  6176  151C  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  6177                           
  6178                           ;usb_device.c: 2145: }
  6179                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
  6180                           
  6181                           ;usb_device.c: 2143: {
  6182                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
  6183                           
  6184                           ;usb_device.c: 2142: if(0 == 1)
  6185  151D  0023               	movlb	3	; select bank3
  6186  151E  0360               	decf	_RemoteWakeup^(0+384),w	;volatile
  6187  151F  1D03               	btfss	3,2
  6188  1520  2D63               	goto	l535
  6189                           
  6190                           ;usb_device.c: 2148: {
  6191                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
  6192  1521  0020               	movlb	0	; select bank0
  6193  1522  14D8               	bsf	88,1	;volatile
  6194                           
  6195                           ;usb_device.c: 2150: }
  6196                           ;usb_device.c: 2151: break;
  6197  1523  2D63               	goto	l535
  6198  1524                     l536:	
  6199                           ;usb_device.c: 2152: case (0x01):
  6200                           
  6201                           
  6202                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
  6203  1524  0021               	movlb	1	; select bank1
  6204  1525  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  6205                           
  6206                           ;usb_device.c: 2154: break;
  6207  1526  2D63               	goto	l535
  6208  1527                     l537:	
  6209                           ;usb_device.c: 2155: case (0x02):
  6210                           
  6211                           
  6212                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
  6213  1527  0021               	movlb	1	; select bank1
  6214  1528  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  6215                           
  6216                           ;usb_device.c: 2160: {
  6217                           ;usb_device.c: 2161: BDT_ENTRY *p;
  6218                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
  6219  1529  0020               	movlb	0	; select bank0
  6220  152A  1BD4               	btfsc	84,7	;volatile
  6221  152B  2D38               	goto	l7728
  6222                           
  6223                           ;usb_device.c: 2164: {
  6224                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  6225  152C  0854               	movf	84,w	;volatile
  6226  152D  390F               	andlw	15
  6227  152E  0709               	addwf	9,w
  6228  152F  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  6229  1530  0086               	movwf	6
  6230  1531  3001               	movlw	1	; select bank3/4
  6231  1532  0087               	movwf	7
  6232  1533  3F40               	moviw [0]fsr1
  6233  1534  0021               	movlb	1	; select bank1
  6234  1535  00A7               	movwf	USBStdGetStatusHandler@p^(0+128)
  6235  1536  3F41               	moviw [1]fsr1
  6236  1537  2D44               	goto	L2
  6237  1538                     l7728:	
  6238                           ;usb_device.c: 2166: }
  6239                           
  6240                           
  6241                           ;usb_device.c: 2167: else
  6242                           ;usb_device.c: 2168: {
  6243                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  6244  1538  0020               	movlb	0	; select bank0
  6245  1539  0854               	movf	84,w	;volatile
  6246  153A  390F               	andlw	15
  6247  153B  0709               	addwf	9,w
  6248  153C  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  6249  153D  0086               	movwf	6
  6250  153E  3001               	movlw	1	; select bank3/4
  6251  153F  0087               	movwf	7
  6252  1540  3F40               	moviw [0]fsr1
  6253  1541  0021               	movlb	1	; select bank1
  6254  1542  00A7               	movwf	USBStdGetStatusHandler@p^(0+128)
  6255  1543  3F41               	moviw [1]fsr1
  6256  1544                     L2:	
  6257  1544  00A8               	movwf	(USBStdGetStatusHandler@p+1)^(0+128)
  6258                           
  6259                           ;usb_device.c: 2170: }
  6260                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  6261  1545  0827               	movf	USBStdGetStatusHandler@p^(0+128),w
  6262  1546  0086               	movwf	6
  6263  1547  0828               	movf	(USBStdGetStatusHandler@p+1)^(0+128),w
  6264  1548  0087               	movwf	7
  6265  1549  1F81               	btfss	1,7
  6266  154A  2D63               	goto	l535
  6267  154B  0827               	movf	USBStdGetStatusHandler@p^(0+128),w
  6268  154C  0086               	movwf	6
  6269  154D  0828               	movf	(USBStdGetStatusHandler@p+1)^(0+128),w
  6270  154E  0087               	movwf	7
  6271  154F  1D01               	btfss	1,2
  6272  1550  2D63               	goto	l535
  6273                           
  6274                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
  6275  1551  3001               	movlw	1
  6276  1552  00A6               	movwf	??_USBStdGetStatusHandler^(0+128)
  6277  1553  0826               	movf	??_USBStdGetStatusHandler^(0+128),w
  6278  1554  0020               	movlb	0	; select bank0
  6279  1555  00D8               	movwf	88	;volatile
  6280                           
  6281                           ;usb_device.c: 2175: }
  6282                           ;usb_device.c: 2176: }
  6283                           
  6284                           ;usb_device.c: 2174: break;
  6285  1556  2D63               	goto	l535
  6286  1557                     l7738:	
  6287  1557  0850               	movf	80,w	;volatile
  6288  1558  391F               	andlw	31
  6289                           
  6290                           ; Switch size 1, requested type "space"
  6291                           ; Number of cases is 3, Range of values is 0 to 2
  6292                           ; switch strategies available:
  6293                           ; Name         Instructions Cycles
  6294                           ; simple_byte           10     6 (average)
  6295                           ; direct_byte           12     6 (fixed)
  6296                           ; jumptable            260     6 (fixed)
  6297                           ;	Chosen strategy is simple_byte
  6298  1559  3A00               	xorlw	0	; case 0
  6299  155A  1903               	skipnz
  6300  155B  2D1B               	goto	l532
  6301  155C  3A01               	xorlw	1	; case 1
  6302  155D  1903               	skipnz
  6303  155E  2D24               	goto	l536
  6304  155F  3A03               	xorlw	3	; case 2
  6305  1560  1903               	skipnz
  6306  1561  2D27               	goto	l537
  6307  1562  2D63               	goto	l535
  6308  1563                     l535:	
  6309                           
  6310                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
  6311  1563  0021               	movlb	1	; select bank1
  6312  1564  1FC5               	btfss	(_inPipes^(0+128)+2),7	;volatile
  6313  1565  0008               	return
  6314                           
  6315                           ;usb_device.c: 2179: {
  6316                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  6317  1566  3058               	movlw	88
  6318  1567  00C3               	movwf	_inPipes^(0+128)	;volatile
  6319  1568  3000               	movlw	0
  6320  1569  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
  6321                           
  6322                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6323  156A  1445               	bsf	(_inPipes^(0+128)+2),0	;volatile
  6324                           
  6325                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
  6326  156B  3002               	movlw	2
  6327  156C  00A6               	movwf	??_USBStdGetStatusHandler^(0+128)
  6328  156D  0826               	movf	??_USBStdGetStatusHandler^(0+128),w
  6329  156E  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
  6330  156F  0008               	return
  6331  1570                     __end_of_USBStdGetStatusHandler:	
  6332                           
  6333                           	psect	text22
  6334  0B93                     __ptext22:	
  6335 ;; *************** function _USBStdGetDscHandler *****************
  6336 ;; Defined at:
  6337 ;;		line 2043 in file "mcc_generated_files/usb/usb_device.c"
  6338 ;; Parameters:    Size  Location     Type
  6339 ;;		None
  6340 ;; Auto vars:     Size  Location     Type
  6341 ;;		None
  6342 ;; Return value:  Size  Location     Type
  6343 ;;                  1    wreg      void 
  6344 ;; Registers used:
  6345 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  6346 ;; Tracked objects:
  6347 ;;		On entry : 0/0
  6348 ;;		On exit  : 0/0
  6349 ;;		Unchanged: 0/0
  6350 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6353 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6354 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6355 ;;Total ram usage:        3 bytes
  6356 ;; Hardware stack levels used:    1
  6357 ;; Hardware stack levels required when called:   10
  6358 ;; This function calls:
  6359 ;;		Nothing
  6360 ;; This function is called by:
  6361 ;;		_USBCheckStdRequest
  6362 ;; This function uses a non-reentrant model
  6363 ;;
  6364                           
  6365                           
  6366                           ;psect for function _USBStdGetDscHandler
  6367  0B93                     _USBStdGetDscHandler:	
  6368                           
  6369                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
  6370                           
  6371                           ;incstack = 0
  6372                           ; Regs used in _USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
  6373  0B93  3080               	movlw	128
  6374  0B94  0020               	movlb	0	; select bank0
  6375  0B95  0650               	xorwf	80,w	;volatile
  6376  0B96  1D03               	btfss	3,2
  6377  0B97  0008               	return
  6378                           
  6379                           ;usb_device.c: 2046: {
  6380                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  6381  0B98  30C0               	movlw	192
  6382  0B99  0021               	movlb	1	; select bank1
  6383  0B9A  00A6               	movwf	??_USBStdGetDscHandler^(0+128)
  6384  0B9B  0826               	movf	??_USBStdGetDscHandler^(0+128),w
  6385  0B9C  00C5               	movwf	(_inPipes^(0+128)+2)	;volatile
  6386                           
  6387                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
  6388  0B9D  2C05               	goto	l7716
  6389  0B9E                     l7690:	
  6390                           ;usb_device.c: 2050: {
  6391                           ;usb_device.c: 2051: case 0x01:
  6392                           
  6393                           
  6394                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  6395  0B9E  30C5               	movlw	low (_device_dsc| (0+32768))
  6396  0B9F  0021               	movlb	1	; select bank1
  6397  0BA0  00C3               	movwf	_inPipes^(0+128)	;volatile
  6398  0BA1  3098               	movlw	high (_device_dsc| (0+32768))
  6399  0BA2  00C4               	movwf	(_inPipes^(0+128)+1)	;volatile
  6400                           
  6401                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
  6402  0BA3  3000               	movlw	0
  6403  0BA4  00C7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  6404  0BA5  3012               	movlw	18
  6405  0BA6  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
  6406                           
  6407                           ;usb_device.c: 2058: break;
  6408  0BA7  0008               	return
  6409  0BA8                     l7694:	
  6410                           ;usb_device.c: 2059: case 0x02:
  6411                           
  6412                           
  6413                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
  6414  0BA8  0020               	movlb	0	; select bank0
  6415  0BA9  0852               	movf	82,w	;volatile
  6416  0BAA  1D03               	btfss	3,2
  6417  0BAB  2BDB               	goto	l7702
  6418                           
  6419                           ;usb_device.c: 2064: {
  6420                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  6421  0BAC  0852               	movf	82,w	;volatile
  6422  0BAD  0021               	movlb	1	; select bank1
  6423  0BAE  00A6               	movwf	??_USBStdGetDscHandler^(0+128)
  6424  0BAF  01A7               	clrf	(??_USBStdGetDscHandler^(0+128)+1)
  6425  0BB0  35A6               	lslf	??_USBStdGetDscHandler^(0+128),f
  6426  0BB1  0DA7               	rlf	(??_USBStdGetDscHandler^(0+128)+1),f
  6427  0BB2  30E8               	movlw	low (_USB_CD_Ptr| (0+32768))
  6428  0BB3  0726               	addwf	??_USBStdGetDscHandler^(0+128),w
  6429  0BB4  0084               	movwf	4
  6430  0BB5  3098               	movlw	high (_USB_CD_Ptr| (0+32768))
  6431  0BB6  3D27               	addwfc	(??_USBStdGetDscHandler+1)^(0+128),w
  6432  0BB7  0085               	movwf	5
  6433  0BB8  3F00               	moviw [0]fsr0
  6434  0BB9  00C3               	movwf	_inPipes^(0+128)	;volatile
  6435  0BBA  3F01               	moviw [1]fsr0
  6436  0BBB  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
  6437                           
  6438                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  6439  0BBC  0844               	movf	(_inPipes+1)^(0+128),w	;volatile
  6440  0BBD  00A7               	movwf	(??_USBStdGetDscHandler^(0+128)+1)
  6441  0BBE  0843               	movf	_inPipes^(0+128),w	;volatile
  6442  0BBF  00A6               	movwf	??_USBStdGetDscHandler^(0+128)
  6443  0BC0  3002               	movlw	2
  6444  0BC1  0726               	addwf	??_USBStdGetDscHandler^(0+128),w
  6445  0BC2  0084               	movwf	4
  6446  0BC3  0827               	movf	(??_USBStdGetDscHandler^(0+128)+1),w
  6447  0BC4  1803               	skipnc
  6448  0BC5  0A27               	incf	(??_USBStdGetDscHandler^(0+128)+1),w
  6449  0BC6  0085               	movwf	5
  6450  0BC7  0800               	movf	0,w	;code access
  6451  0BC8  00A8               	movwf	(??_USBStdGetDscHandler+2)^(0+128)
  6452  0BC9  0828               	movf	(??_USBStdGetDscHandler+2)^(0+128),w
  6453  0BCA  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
  6454                           
  6455                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  6456  0BCB  0844               	movf	(_inPipes+1)^(0+128),w	;volatile
  6457  0BCC  00A7               	movwf	(??_USBStdGetDscHandler^(0+128)+1)
  6458  0BCD  0843               	movf	_inPipes^(0+128),w	;volatile
  6459  0BCE  00A6               	movwf	??_USBStdGetDscHandler^(0+128)
  6460  0BCF  3003               	movlw	3
  6461  0BD0  0726               	addwf	??_USBStdGetDscHandler^(0+128),w
  6462  0BD1  0084               	movwf	4
  6463  0BD2  0827               	movf	(??_USBStdGetDscHandler^(0+128)+1),w
  6464  0BD3  1803               	skipnc
  6465  0BD4  0A27               	incf	(??_USBStdGetDscHandler^(0+128)+1),w
  6466  0BD5  0085               	movwf	5
  6467  0BD6  0800               	movf	0,w	;code access
  6468  0BD7  00A8               	movwf	(??_USBStdGetDscHandler+2)^(0+128)
  6469  0BD8  0828               	movf	(??_USBStdGetDscHandler+2)^(0+128),w
  6470  0BD9  00C7               	movwf	(_inPipes^(0+128)+4)	;volatile
  6471                           
  6472                           ;usb_device.c: 2076: }
  6473  0BDA  0008               	return
  6474  0BDB                     l7702:	
  6475                           
  6476                           ;usb_device.c: 2077: else
  6477                           ;usb_device.c: 2078: {
  6478                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
  6479  0BDB  0021               	movlb	1	; select bank1
  6480  0BDC  01C5               	clrf	(_inPipes^(0+128)+2)	;volatile
  6481                           
  6482                           ;usb_device.c: 2080: }
  6483                           ;usb_device.c: 2081: break;
  6484  0BDD  0008               	return
  6485  0BDE                     l7704:	
  6486                           ;usb_device.c: 2082: case 0x03:
  6487                           
  6488                           
  6489                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
  6490  0BDE  3003               	movlw	3
  6491  0BDF  0020               	movlb	0	; select bank0
  6492  0BE0  0252               	subwf	82,w	;volatile
  6493  0BE1  1803               	skipnc
  6494  0BE2  2BFF               	goto	l7710
  6495                           
  6496                           ;usb_device.c: 2087: {
  6497                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  6498  0BE3  0852               	movf	82,w	;volatile
  6499  0BE4  0021               	movlb	1	; select bank1
  6500  0BE5  00A6               	movwf	??_USBStdGetDscHandler^(0+128)
  6501  0BE6  01A7               	clrf	(??_USBStdGetDscHandler^(0+128)+1)
  6502  0BE7  35A6               	lslf	??_USBStdGetDscHandler^(0+128),f
  6503  0BE8  0DA7               	rlf	(??_USBStdGetDscHandler^(0+128)+1),f
  6504  0BE9  30DF               	movlw	low (_USB_SD_Ptr| (0+32768))
  6505  0BEA  0726               	addwf	??_USBStdGetDscHandler^(0+128),w
  6506  0BEB  0084               	movwf	4
  6507  0BEC  3098               	movlw	high (_USB_SD_Ptr| (0+32768))
  6508  0BED  3D27               	addwfc	(??_USBStdGetDscHandler+1)^(0+128),w
  6509  0BEE  0085               	movwf	5
  6510  0BEF  3F00               	moviw [0]fsr0
  6511  0BF0  00C3               	movwf	_inPipes^(0+128)	;volatile
  6512  0BF1  3F01               	moviw [1]fsr0
  6513  0BF2  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
  6514                           
  6515                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  6516  0BF3  0843               	movf	_inPipes^(0+128),w	;volatile
  6517  0BF4  0084               	movwf	4
  6518  0BF5  0844               	movf	(_inPipes+1)^(0+128),w	;volatile
  6519  0BF6  0085               	movwf	5
  6520  0BF7  0800               	movf	0,w	;code access
  6521  0BF8  00A6               	movwf	??_USBStdGetDscHandler^(0+128)
  6522  0BF9  01A7               	clrf	(??_USBStdGetDscHandler^(0+128)+1)
  6523  0BFA  0826               	movf	??_USBStdGetDscHandler^(0+128),w
  6524  0BFB  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
  6525  0BFC  0827               	movf	(??_USBStdGetDscHandler+1)^(0+128),w
  6526  0BFD  00C7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  6527                           
  6528                           ;usb_device.c: 2092: }
  6529  0BFE  0008               	return
  6530  0BFF                     l7710:	
  6531                           
  6532                           ;usb_device.c: 2102: else
  6533                           ;usb_device.c: 2103: {
  6534                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
  6535  0BFF  0021               	movlb	1	; select bank1
  6536  0C00  01C5               	clrf	(_inPipes^(0+128)+2)	;volatile
  6537                           
  6538                           ;usb_device.c: 2105: }
  6539                           ;usb_device.c: 2106: break;
  6540  0C01  0008               	return
  6541  0C02                     l7712:	
  6542                           ;usb_device.c: 2107: default:
  6543                           
  6544                           
  6545                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
  6546  0C02  0021               	movlb	1	; select bank1
  6547  0C03  01C5               	clrf	(_inPipes^(0+128)+2)	;volatile
  6548                           
  6549                           ;usb_device.c: 2110: }
  6550                           
  6551                           ;usb_device.c: 2109: break;
  6552  0C04  0008               	return
  6553  0C05                     l7716:	
  6554  0C05  0020               	movlb	0	; select bank0
  6555  0C06  0853               	movf	83,w	;volatile
  6556                           
  6557                           ; Switch size 1, requested type "space"
  6558                           ; Number of cases is 3, Range of values is 1 to 3
  6559                           ; switch strategies available:
  6560                           ; Name         Instructions Cycles
  6561                           ; simple_byte           10     6 (average)
  6562                           ; direct_byte           15     9 (fixed)
  6563                           ; jumptable            263     9 (fixed)
  6564                           ;	Chosen strategy is simple_byte
  6565  0C07  3A01               	xorlw	1	; case 1
  6566  0C08  1903               	skipnz
  6567  0C09  2B9E               	goto	l7690
  6568  0C0A  3A03               	xorlw	3	; case 2
  6569  0C0B  1903               	skipnz
  6570  0C0C  2BA8               	goto	l7694
  6571  0C0D  3A01               	xorlw	1	; case 3
  6572  0C0E  1903               	skipnz
  6573  0C0F  2BDE               	goto	l7704
  6574  0C10  2C02               	goto	l7712
  6575  0C11  0008               	return
  6576  0C12                     __end_of_USBStdGetDscHandler:	
  6577                           
  6578                           	psect	text23
  6579  007B                     __ptext23:	
  6580 ;; *************** function _USBStdFeatureReqHandler *****************
  6581 ;; Defined at:
  6582 ;;		line 2754 in file "mcc_generated_files/usb/usb_device.c"
  6583 ;; Parameters:    Size  Location     Type
  6584 ;;		None
  6585 ;; Auto vars:     Size  Location     Type
  6586 ;;  p               2   31[BANK1 ] PTR struct __BDT
  6587 ;;		 -> RAM(4096), BDT(48), NULL(0), 
  6588 ;;  pUEP            2   28[BANK1 ] PTR unsigned char 
  6589 ;;		 -> UEP0(1), 
  6590 ;;  current_ep_d    1   30[BANK1 ] struct .
  6591 ;; Return value:  Size  Location     Type
  6592 ;;                  1    wreg      void 
  6593 ;; Registers used:
  6594 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6595 ;; Tracked objects:
  6596 ;;		On entry : 0/0
  6597 ;;		On exit  : 0/0
  6598 ;;		Unchanged: 0/0
  6599 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6601 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  6602 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6603 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  6604 ;;Total ram usage:        7 bytes
  6605 ;; Hardware stack levels used:    1
  6606 ;; Hardware stack levels required when called:   14
  6607 ;; This function calls:
  6608 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6609 ;; This function is called by:
  6610 ;;		_USBCheckStdRequest
  6611 ;; This function uses a non-reentrant model
  6612 ;;
  6613                           
  6614                           
  6615                           ;psect for function _USBStdFeatureReqHandler
  6616  007B                     _USBStdFeatureReqHandler:	
  6617                           
  6618                           ;usb_device.c: 2756: BDT_ENTRY *p;
  6619                           ;usb_device.c: 2757: EP_STATUS current_ep_data;
  6620                           ;usb_device.c: 2761: unsigned char* pUEP;
  6621                           ;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&
  6622                           ;usb_device.c: 2800: (SetupPkt.Recipient == (0x00)))
  6623                           
  6624                           ;incstack = 0
  6625 ;; hardware stack exceeded
  6626                           ; Regs used in _USBStdFeatureReqHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6627  007B  0020               	movlb	0	; select bank0
  6628  007C  0352               	decf	82,w	;volatile
  6629  007D  1D03               	btfss	3,2
  6630  007E  2894               	goto	l7758
  6631  007F  0850               	movf	80,w	;volatile
  6632  0080  391F               	andlw	31
  6633  0081  3A00               	xorlw	0
  6634  0082  1D03               	skipz
  6635  0083  2894               	goto	l7758
  6636                           
  6637                           ;usb_device.c: 2801: {
  6638                           ;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
  6639  0084  0021               	movlb	1	; select bank1
  6640  0085  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  6641                           
  6642                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
  6643  0086  3003               	movlw	3
  6644  0087  0020               	movlb	0	; select bank0
  6645  0088  0651               	xorwf	81,w	;volatile
  6646  0089  1D03               	btfss	3,2
  6647  008A  2892               	goto	l7756
  6648                           
  6649                           ;usb_device.c: 2804: RemoteWakeup = 1;
  6650  008B  3001               	movlw	1
  6651  008C  0021               	movlb	1	; select bank1
  6652  008D  00BA               	movwf	??_USBStdFeatureReqHandler^(0+128)
  6653  008E  083A               	movf	??_USBStdFeatureReqHandler^(0+128),w
  6654  008F  0023               	movlb	3	; select bank3
  6655  0090  00E0               	movwf	_RemoteWakeup^(0+384)	;volatile
  6656  0091  2894               	goto	l7758
  6657  0092                     l7756:	
  6658                           
  6659                           ;usb_device.c: 2805: else
  6660                           ;usb_device.c: 2806: RemoteWakeup = 0;
  6661  0092  0023               	movlb	3	; select bank3
  6662  0093  01E0               	clrf	_RemoteWakeup^(0+384)	;volatile
  6663  0094                     l7758:	
  6664                           
  6665                           ;usb_device.c: 2807: }
  6666                           ;usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&
  6667                           ;usb_device.c: 2811: (SetupPkt.Recipient == (0x02))&&
  6668                           ;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
  6669                           ;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
  6670  0094  0020               	movlb	0	; select bank0
  6671  0095  0852               	movf	82,w	;volatile
  6672  0096  1D03               	btfss	3,2
  6673  0097  0008               	return
  6674  0098  0850               	movf	80,w	;volatile
  6675  0099  391F               	andlw	31
  6676  009A  3A02               	xorlw	2
  6677  009B  1D03               	skipz
  6678  009C  0008               	return
  6679  009D  0854               	movf	84,w	;volatile
  6680  009E  390F               	andlw	15
  6681  009F  3A00               	xorlw	0
  6682  00A0  1903               	skipnz
  6683  00A1  0008               	return
  6684  00A2  0854               	movf	84,w	;volatile
  6685  00A3  390F               	andlw	15
  6686  00A4  0021               	movlb	1	; select bank1
  6687  00A5  00BA               	movwf	??_USBStdFeatureReqHandler^(0+128)
  6688  00A6  3003               	movlw	3
  6689  00A7  023A               	subwf	??_USBStdFeatureReqHandler^(0+128),w
  6690  00A8  1803               	skipnc
  6691  00A9  0008               	return
  6692  00AA  3020               	movlw	32
  6693  00AB  0023               	movlb	3	; select bank3
  6694  00AC  0665               	xorwf	_USBDeviceState^(0+384),w	;volatile
  6695  00AD  1D03               	btfss	3,2
  6696  00AE  0008               	return
  6697                           
  6698                           ;usb_device.c: 2814: {
  6699                           ;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
  6700  00AF  0021               	movlb	1	; select bank1
  6701  00B0  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  6702                           
  6703                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
  6704  00B1  0020               	movlb	0	; select bank0
  6705  00B2  1BD4               	btfsc	84,7	;volatile
  6706  00B3  28C5               	goto	l7772
  6707                           
  6708                           ;usb_device.c: 2821: {
  6709                           ;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  6710  00B4  0854               	movf	84,w	;volatile
  6711  00B5  390F               	andlw	15
  6712  00B6  0709               	addwf	9,w
  6713  00B7  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  6714  00B8  0086               	movwf	6
  6715  00B9  3001               	movlw	1	; select bank3/4
  6716  00BA  0087               	movwf	7
  6717  00BB  3F40               	moviw [0]fsr1
  6718  00BC  0021               	movlb	1	; select bank1
  6719  00BD  00BF               	movwf	USBStdFeatureReqHandler@p^(0+128)
  6720  00BE  3F41               	moviw [1]fsr1
  6721  00BF  00C0               	movwf	(USBStdFeatureReqHandler@p+1)^(0+128)
  6722                           
  6723                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  6724  00C0  0020               	movlb	0	; select bank0
  6725  00C1  0854               	movf	84,w	;volatile
  6726  00C2  390F               	andlw	15
  6727  00C3  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  6728  00C4  28D6               	goto	L3
  6729  00C5                     l7772:	
  6730                           ;usb_device.c: 2824: }
  6731                           
  6732                           
  6733                           ;usb_device.c: 2825: else
  6734                           ;usb_device.c: 2826: {
  6735                           ;usb_device.c: 2827: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  6736  00C5  0020               	movlb	0	; select bank0
  6737  00C6  0854               	movf	84,w	;volatile
  6738  00C7  390F               	andlw	15
  6739  00C8  0709               	addwf	9,w
  6740  00C9  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  6741  00CA  0086               	movwf	6
  6742  00CB  3001               	movlw	1	; select bank3/4
  6743  00CC  0087               	movwf	7
  6744  00CD  3F40               	moviw [0]fsr1
  6745  00CE  0021               	movlb	1	; select bank1
  6746  00CF  00BF               	movwf	USBStdFeatureReqHandler@p^(0+128)
  6747  00D0  3F41               	moviw [1]fsr1
  6748  00D1  00C0               	movwf	(USBStdFeatureReqHandler@p+1)^(0+128)
  6749                           
  6750                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  6751  00D2  0020               	movlb	0	; select bank0
  6752  00D3  0854               	movf	84,w	;volatile
  6753  00D4  390F               	andlw	15
  6754  00D5  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  6755  00D6                     L3:	
  6756  00D6  0086               	movwf	6
  6757  00D7  3001               	movlw	1	; select bank3/4
  6758  00D8  0087               	movwf	7
  6759  00D9  0801               	movf	1,w
  6760  00DA  0021               	movlb	1	; select bank1
  6761  00DB  00BA               	movwf	??_USBStdFeatureReqHandler^(0+128)
  6762  00DC  083A               	movf	??_USBStdFeatureReqHandler^(0+128),w
  6763  00DD  00BE               	movwf	USBStdFeatureReqHandler@current_ep_data^(0+128)
  6764                           
  6765                           ;usb_device.c: 2829: }
  6766                           ;usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
  6767  00DE  183E               	btfsc	USBStdFeatureReqHandler@current_ep_data^(0+128),0
  6768  00DF  28EA               	goto	l7778
  6769                           
  6770                           ;usb_device.c: 2836: {
  6771                           ;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
  6772  00E0  30FB               	movlw	251
  6773  00E1  00BA               	movwf	??_USBStdFeatureReqHandler^(0+128)
  6774  00E2  30FF               	movlw	255
  6775  00E3  00BB               	movwf	(??_USBStdFeatureReqHandler^(0+128)+1)
  6776  00E4  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6777  00E5  053A               	andwf	??_USBStdFeatureReqHandler^(0+128),w
  6778  00E6  00BF               	movwf	USBStdFeatureReqHandler@p^(0+128)
  6779  00E7  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6780  00E8  053B               	andwf	(??_USBStdFeatureReqHandler+1)^(0+128),w
  6781  00E9  28EF               	goto	L4
  6782  00EA                     l7778:	
  6783                           ;usb_device.c: 2838: }
  6784                           
  6785                           
  6786                           ;usb_device.c: 2839: else
  6787                           ;usb_device.c: 2840: {
  6788                           ;usb_device.c: 2841: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
  6789  00EA  3004               	movlw	4
  6790  00EB  043F               	iorwf	USBStdFeatureReqHandler@p^(0+128),w
  6791  00EC  00BF               	movwf	USBStdFeatureReqHandler@p^(0+128)
  6792  00ED  3000               	movlw	0
  6793  00EE  0440               	iorwf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6794  00EF                     L4:	
  6795  00EF  00C0               	movwf	(USBStdFeatureReqHandler@p+1)^(0+128)
  6796                           
  6797                           ;usb_device.c: 2842: }
  6798                           ;usb_device.c: 2847: if(SetupPkt.EPDir == 0)
  6799  00F0  0020               	movlb	0	; select bank0
  6800  00F1  1BD4               	btfsc	84,7	;volatile
  6801  00F2  2900               	goto	l7784
  6802                           
  6803                           ;usb_device.c: 2848: {
  6804                           ;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  6805  00F3  0854               	movf	84,w	;volatile
  6806  00F4  390F               	andlw	15
  6807  00F5  0709               	addwf	9,w
  6808  00F6  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  6809  00F7  0086               	movwf	6
  6810  00F8  3001               	movlw	1	; select bank3/4
  6811  00F9  0087               	movwf	7
  6812  00FA  0021               	movlb	1	; select bank1
  6813  00FB  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6814  00FC  3FC0               	movwi [0]fsr1
  6815  00FD  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6816  00FE  3FC1               	movwi [1]fsr1
  6817                           
  6818                           ;usb_device.c: 2850: }
  6819  00FF  290D               	goto	l7786
  6820  0100                     l7784:	
  6821                           
  6822                           ;usb_device.c: 2851: else
  6823                           ;usb_device.c: 2852: {
  6824                           ;usb_device.c: 2853: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  6825  0100  0020               	movlb	0	; select bank0
  6826  0101  0854               	movf	84,w	;volatile
  6827  0102  390F               	andlw	15
  6828  0103  0709               	addwf	9,w
  6829  0104  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  6830  0105  0086               	movwf	6
  6831  0106  3001               	movlw	1	; select bank3/4
  6832  0107  0087               	movwf	7
  6833  0108  0021               	movlb	1	; select bank1
  6834  0109  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6835  010A  3FC0               	movwi [0]fsr1
  6836  010B  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6837  010C  3FC1               	movwi [1]fsr1
  6838  010D                     l7786:	
  6839                           
  6840                           ;usb_device.c: 2854: }
  6841                           ;usb_device.c: 2857: if(SetupPkt.bRequest == 3)
  6842  010D  3003               	movlw	3
  6843  010E  0020               	movlb	0	; select bank0
  6844  010F  0651               	xorwf	81,w	;volatile
  6845  0110  1D03               	btfss	3,2
  6846  0111  2933               	goto	l7800
  6847                           
  6848                           ;usb_device.c: 2858: {
  6849                           ;usb_device.c: 2859: if(p->STAT.UOWN == 1)
  6850  0112  0021               	movlb	1	; select bank1
  6851  0113  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6852  0114  0086               	movwf	6
  6853  0115  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6854  0116  0087               	movwf	7
  6855  0117  1F81               	btfss	1,7
  6856  0118  2927               	goto	l7796
  6857                           
  6858                           ;usb_device.c: 2860: {
  6859                           ;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
  6860  0119  0020               	movlb	0	; select bank0
  6861  011A  1BD4               	btfsc	84,7	;volatile
  6862  011B  2920               	goto	l7794
  6863                           
  6864                           ;usb_device.c: 2864: {
  6865                           ;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  6866  011C  0854               	movf	84,w	;volatile
  6867  011D  390F               	andlw	15
  6868  011E  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  6869  011F  2923               	goto	L5
  6870  0120                     l7794:	
  6871                           ;usb_device.c: 2866: }
  6872                           
  6873                           
  6874                           ;usb_device.c: 2867: else
  6875                           ;usb_device.c: 2868: {
  6876                           ;usb_device.c: 2869: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  6877  0120  0854               	movf	84,w	;volatile
  6878  0121  390F               	andlw	15
  6879  0122  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  6880  0123                     L5:	
  6881  0123  0086               	movwf	6
  6882  0124  3001               	movlw	1	; select bank3/4
  6883  0125  0087               	movwf	7
  6884  0126  1481               	bsf	1,1
  6885  0127                     l7796:	
  6886                           
  6887                           ;usb_device.c: 2870: }
  6888                           ;usb_device.c: 2871: }
  6889                           ;usb_device.c: 2874: p->STAT.Val |= 0x04;
  6890  0127  0021               	movlb	1	; select bank1
  6891  0128  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6892  0129  0086               	movwf	6
  6893  012A  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6894  012B  0087               	movwf	7
  6895  012C  1501               	bsf	1,2
  6896                           
  6897                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
  6898  012D  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6899  012E  0086               	movwf	6
  6900  012F  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6901  0130  0087               	movwf	7
  6902  0131  1781               	bsf	1,7
  6903                           
  6904                           ;usb_device.c: 2876: }
  6905  0132  0008               	return
  6906  0133                     l7800:	
  6907                           
  6908                           ;usb_device.c: 2877: else
  6909                           ;usb_device.c: 2878: {
  6910                           ;usb_device.c: 2882: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  6911  0133  3004               	movlw	4
  6912  0134  0021               	movlb	1	; select bank1
  6913  0135  063F               	xorwf	USBStdFeatureReqHandler@p^(0+128),w
  6914  0136  00BF               	movwf	USBStdFeatureReqHandler@p^(0+128)
  6915  0137  3000               	movlw	0
  6916  0138  0640               	xorwf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6917  0139  00C0               	movwf	(USBStdFeatureReqHandler@p+1)^(0+128)
  6918                           
  6919                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
  6920  013A  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6921  013B  0086               	movwf	6
  6922  013C  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6923  013D  0087               	movwf	7
  6924  013E  1F81               	btfss	1,7
  6925  013F  295D               	goto	l7810
  6926                           
  6927                           ;usb_device.c: 2885: {
  6928                           ;usb_device.c: 2888: p->STAT.Val &= (~0x80);
  6929  0140  307F               	movlw	127
  6930  0141  00BA               	movwf	??_USBStdFeatureReqHandler^(0+128)
  6931  0142  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6932  0143  0086               	movwf	6
  6933  0144  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6934  0145  0087               	movwf	7
  6935  0146  083A               	movf	??_USBStdFeatureReqHandler^(0+128),w
  6936  0147  0581               	andwf	1,f
  6937                           
  6938                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
  6939  0148  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6940  0149  0086               	movwf	6
  6941  014A  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6942  014B  0087               	movwf	7
  6943  014C  1701               	bsf	1,6
  6944                           
  6945                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  6946  014D  3000               	movlw	0
  6947  014E  00B5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
  6948  014F  3005               	movlw	5
  6949  0150  00B4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  6950  0151  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6951  0152  00B7               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  6952  0153  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6953  0154  00B6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  6954  0155  3002               	movlw	2
  6955  0156  00B8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  6956  0157  3000               	movlw	0
  6957  0158  00B9               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)+1)
  6958  0159  3191  2108  3180   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6959                           
  6960                           ;usb_device.c: 2891: }
  6961  015C  2963               	goto	l7812
  6962  015D                     l7810:	
  6963                           
  6964                           ;usb_device.c: 2892: else
  6965                           ;usb_device.c: 2893: {
  6966                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
  6967  015D  0021               	movlb	1	; select bank1
  6968  015E  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6969  015F  0086               	movwf	6
  6970  0160  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6971  0161  0087               	movwf	7
  6972  0162  1701               	bsf	1,6
  6973  0163                     l7812:	
  6974                           
  6975                           ;usb_device.c: 2896: }
  6976                           ;usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  6977  0163  3004               	movlw	4
  6978  0164  0021               	movlb	1	; select bank1
  6979  0165  063F               	xorwf	USBStdFeatureReqHandler@p^(0+128),w
  6980  0166  00BF               	movwf	USBStdFeatureReqHandler@p^(0+128)
  6981  0167  3000               	movlw	0
  6982  0168  0640               	xorwf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6983  0169  00C0               	movwf	(USBStdFeatureReqHandler@p+1)^(0+128)
  6984                           
  6985                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  6986  016A  18BE               	btfsc	USBStdFeatureReqHandler@current_ep_data^(0+128),1
  6987  016B  2972               	goto	l628
  6988  016C  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6989  016D  0086               	movwf	6
  6990  016E  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6991  016F  0087               	movwf	7
  6992  0170  1F81               	btfss	1,7
  6993  0171  2999               	goto	l7824
  6994  0172                     l628:	
  6995                           
  6996                           ;usb_device.c: 2907: {
  6997                           ;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
  6998  0172  0020               	movlb	0	; select bank0
  6999  0173  1BD4               	btfsc	84,7	;volatile
  7000  0174  2979               	goto	l7820
  7001                           
  7002                           ;usb_device.c: 2909: {
  7003                           ;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7004  0175  0854               	movf	84,w	;volatile
  7005  0176  390F               	andlw	15
  7006  0177  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  7007  0178  297C               	goto	L6
  7008  0179                     l7820:	
  7009                           ;usb_device.c: 2911: }
  7010                           
  7011                           
  7012                           ;usb_device.c: 2912: else
  7013                           ;usb_device.c: 2913: {
  7014                           ;usb_device.c: 2914: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7015  0179  0854               	movf	84,w	;volatile
  7016  017A  390F               	andlw	15
  7017  017B  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  7018  017C                     L6:	
  7019  017C  0086               	movwf	6
  7020  017D  3001               	movlw	1	; select bank3/4
  7021  017E  0087               	movwf	7
  7022  017F  1081               	bcf	1,1
  7023                           
  7024                           ;usb_device.c: 2915: }
  7025                           ;usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7026  0180  303B               	movlw	59
  7027  0181  0021               	movlb	1	; select bank1
  7028  0182  00BA               	movwf	??_USBStdFeatureReqHandler^(0+128)
  7029  0183  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  7030  0184  0086               	movwf	6
  7031  0185  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  7032  0186  0087               	movwf	7
  7033  0187  083A               	movf	??_USBStdFeatureReqHandler^(0+128),w
  7034  0188  0581               	andwf	1,f
  7035                           
  7036                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7037  0189  3000               	movlw	0
  7038  018A  00B5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
  7039  018B  3005               	movlw	5
  7040  018C  00B4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  7041  018D  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  7042  018E  00B7               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  7043  018F  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  7044  0190  00B6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  7045  0191  3002               	movlw	2
  7046  0192  00B8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  7047  0193  3000               	movlw	0
  7048  0194  00B9               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)+1)
  7049  0195  3191  2108  3180   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  7050                           
  7051                           ;usb_device.c: 2921: }
  7052  0198  29A2               	goto	l7826
  7053  0199                     l7824:	
  7054                           
  7055                           ;usb_device.c: 2922: else
  7056                           ;usb_device.c: 2923: {
  7057                           ;usb_device.c: 2925: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7058  0199  303B               	movlw	59
  7059  019A  0021               	movlb	1	; select bank1
  7060  019B  00BA               	movwf	??_USBStdFeatureReqHandler^(0+128)
  7061  019C  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  7062  019D  0086               	movwf	6
  7063  019E  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  7064  019F  0087               	movwf	7
  7065  01A0  083A               	movf	??_USBStdFeatureReqHandler^(0+128),w
  7066  01A1  0581               	andwf	1,f
  7067  01A2                     l7826:	
  7068                           
  7069                           ;usb_device.c: 2926: }
  7070                           ;usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  7071  01A2  0020               	movlb	0	; select bank0
  7072  01A3  0854               	movf	84,w	;volatile
  7073  01A4  390F               	andlw	15
  7074  01A5  3E98               	addlw	152
  7075  01A6  0021               	movlb	1	; select bank1
  7076  01A7  00BA               	movwf	??_USBStdFeatureReqHandler^(0+128)
  7077  01A8  01BB               	clrf	(??_USBStdFeatureReqHandler^(0+128)+1)
  7078  01A9  300E               	movlw	14
  7079  01AA  3DBB               	addwfc	(??_USBStdFeatureReqHandler^(0+128)+1),f
  7080  01AB  083A               	movf	??_USBStdFeatureReqHandler^(0+128),w
  7081  01AC  00BC               	movwf	USBStdFeatureReqHandler@pUEP^(0+128)
  7082  01AD  083B               	movf	(??_USBStdFeatureReqHandler+1)^(0+128),w
  7083  01AE  00BD               	movwf	(USBStdFeatureReqHandler@pUEP+1)^(0+128)
  7084                           
  7085                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
  7086  01AF  30FE               	movlw	254
  7087  01B0  00BA               	movwf	??_USBStdFeatureReqHandler^(0+128)
  7088  01B1  083C               	movf	USBStdFeatureReqHandler@pUEP^(0+128),w
  7089  01B2  0086               	movwf	6
  7090  01B3  083D               	movf	(USBStdFeatureReqHandler@pUEP+1)^(0+128),w
  7091  01B4  0087               	movwf	7
  7092  01B5  083A               	movf	??_USBStdFeatureReqHandler^(0+128),w
  7093  01B6  0581               	andwf	1,f
  7094  01B7  0008               	return
  7095  01B8                     __end_of_USBStdFeatureReqHandler:	
  7096                           
  7097                           	psect	text24
  7098  1108                     __ptext24:	
  7099 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  7100 ;; Defined at:
  7101 ;;		line 49 in file "mcc_generated_files/usb/usb_device_events.c"
  7102 ;; Parameters:    Size  Location     Type
  7103 ;;  event           2   20[BANK1 ] enum E40
  7104 ;;  pdata           2   22[BANK1 ] PTR void 
  7105 ;;		 -> RAM(4096), USTATcopy(1), USBActiveConfiguration(1), BDT(48), 
  7106 ;;		 -> NULL(0), 
  7107 ;;  size            2   24[BANK1 ] unsigned int 
  7108 ;; Auto vars:     Size  Location     Type
  7109 ;;		None
  7110 ;; Return value:  Size  Location     Type
  7111 ;;                  1    wreg      unsigned char 
  7112 ;; Registers used:
  7113 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7114 ;; Tracked objects:
  7115 ;;		On entry : 0/0
  7116 ;;		On exit  : 0/0
  7117 ;;		Unchanged: 0/0
  7118 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7119 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  7120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7122 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  7123 ;;Total ram usage:        6 bytes
  7124 ;; Hardware stack levels used:    1
  7125 ;; Hardware stack levels required when called:   13
  7126 ;; This function calls:
  7127 ;;		_CDCInitEP
  7128 ;;		_USBCheckCDCRequest
  7129 ;; This function is called by:
  7130 ;;		_USBDeviceTasks
  7131 ;;		_USBStdSetCfgHandler
  7132 ;;		_USBSuspend
  7133 ;;		_USBWakeFromSuspend
  7134 ;;		_USBCtrlTrfSetupHandler
  7135 ;;		_USBCheckStdRequest
  7136 ;;		_USBStdFeatureReqHandler
  7137 ;; This function uses a non-reentrant model
  7138 ;;
  7139                           
  7140                           
  7141                           ;psect for function _USER_USB_CALLBACK_EVENT_HANDLER
  7142  1108                     _USER_USB_CALLBACK_EVENT_HANDLER:	
  7143                           
  7144                           ;usb_device_events.c: 51: switch( (int) event )
  7145                           
  7146                           ;incstack = 0
  7147                           ; Regs used in _USER_USB_CALLBACK_EVENT_HANDLER: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  7148  1108  290F               	goto	l7516
  7149  1109                     l7510:	
  7150                           ;usb_device_events.c: 75: case EVENT_CONFIGURED:
  7151                           
  7152                           ;usb_device_events.c: 73: break;
  7153                           
  7154                           ;usb_device_events.c: 68: case EVENT_RESUME:
  7155                           
  7156                           ;usb_device_events.c: 66: break;
  7157                           
  7158                           ;usb_device_events.c: 59: case EVENT_SUSPEND:
  7159                           
  7160                           ;usb_device_events.c: 57: break;
  7161                           
  7162                           ;usb_device_events.c: 56: case EVENT_SOF:
  7163                           
  7164                           ;usb_device_events.c: 54: break;
  7165                           
  7166                           ;usb_device_events.c: 52: {
  7167                           ;usb_device_events.c: 53: case EVENT_TRANSFER:
  7168                           
  7169                           
  7170                           ;usb_device_events.c: 76: CDCInitEP();
  7171  1109  3192  220A         	fcall	_CDCInitEP
  7172                           
  7173                           ;usb_device_events.c: 80: break;
  7174                           
  7175                           ;usb_device_events.c: 79: case EVENT_SET_DESCRIPTOR:
  7176                           
  7177                           ;usb_device_events.c: 77: break;
  7178  110B  0008               	return
  7179  110C                     l7512:	
  7180                           ;usb_device_events.c: 82: case EVENT_EP0_REQUEST:
  7181                           
  7182                           
  7183                           ;usb_device_events.c: 85: USBCheckCDCRequest();
  7184  110C  3188  2070         	fcall	_USBCheckCDCRequest
  7185                           
  7186                           ;usb_device_events.c: 96: }
  7187                           
  7188                           ;usb_device_events.c: 95: break;
  7189                           
  7190                           ;usb_device_events.c: 94: default:
  7191                           
  7192                           ;usb_device_events.c: 92: break;
  7193                           
  7194                           ;usb_device_events.c: 91: case EVENT_TRANSFER_TERMINATED:
  7195                           
  7196                           ;usb_device_events.c: 89: break;
  7197                           
  7198                           ;usb_device_events.c: 88: case EVENT_BUS_ERROR:
  7199                           
  7200                           ;usb_device_events.c: 86: break;
  7201  110E  0008               	return
  7202  110F                     l7516:	
  7203                           
  7204                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  7205                           ; Switch size 1, requested type "space"
  7206                           ; Number of cases is 2, Range of values is 0 to 127
  7207                           ; switch strategies available:
  7208                           ; Name         Instructions Cycles
  7209                           ; simple_byte            7     4 (average)
  7210                           ; direct_byte          262     6 (fixed)
  7211                           ; jumptable            260     6 (fixed)
  7212                           ;	Chosen strategy is simple_byte
  7213  110F  0021               	movlb	1	; select bank1
  7214  1110  0835               	movf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128),w
  7215  1111  3A00               	xorlw	0	; case 0
  7216  1112  1903               	skipnz
  7217  1113  2918               	goto	l8576
  7218  1114  3A7F               	xorlw	127	; case 127
  7219  1115  1903               	skipnz
  7220  1116  2932               	goto	l8578
  7221  1117  2937               	goto	l244
  7222  1118                     l8576:	
  7223                           
  7224                           ; Switch size 1, requested type "space"
  7225                           ; Number of cases is 8, Range of values is 1 to 117
  7226                           ; switch strategies available:
  7227                           ; Name         Instructions Cycles
  7228                           ; simple_byte           25    13 (average)
  7229                           ; direct_byte          243     9 (fixed)
  7230                           ; jumptable            263     9 (fixed)
  7231                           ;	Chosen strategy is simple_byte
  7232  1118  0834               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128),w
  7233  1119  3A01               	xorlw	1	; case 1
  7234  111A  1903               	skipnz
  7235  111B  2909               	goto	l7510
  7236  111C  3A03               	xorlw	3	; case 2
  7237  111D  1903               	skipnz
  7238  111E  2937               	goto	l244
  7239  111F  3A01               	xorlw	1	; case 3
  7240  1120  1903               	skipnz
  7241  1121  290C               	goto	l7512
  7242  1122  3A06               	xorlw	6	; case 5
  7243  1123  1903               	skipnz
  7244  1124  2937               	goto	l244
  7245  1125  3A77               	xorlw	119	; case 114
  7246  1126  1903               	skipnz
  7247  1127  2937               	goto	l244
  7248  1128  3A01               	xorlw	1	; case 115
  7249  1129  1903               	skipnz
  7250  112A  2937               	goto	l244
  7251  112B  3A07               	xorlw	7	; case 116
  7252  112C  1903               	skipnz
  7253  112D  2937               	goto	l244
  7254  112E  3A01               	xorlw	1	; case 117
  7255  112F  1903               	skipnz
  7256  1130  2937               	goto	l244
  7257  1131  2937               	goto	l244
  7258  1132                     l8578:	
  7259                           
  7260                           ; Switch size 1, requested type "space"
  7261                           ; Number of cases is 1, Range of values is 255 to 255
  7262                           ; switch strategies available:
  7263                           ; Name         Instructions Cycles
  7264                           ; simple_byte            4     3 (average)
  7265                           ; direct_byte            7     5 (fixed)
  7266                           ; jumptable            263     9 (fixed)
  7267                           ;	Chosen strategy is simple_byte
  7268  1132  0834               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128),w
  7269  1133  3AFF               	xorlw	255	; case 255
  7270  1134  1903               	skipnz
  7271  1135  2937               	goto	l244
  7272  1136  2937               	goto	l244
  7273  1137                     l244:	
  7274                           ;usb_device_events.c: 97: return 1;
  7275                           ;	Return value of _USER_USB_CALLBACK_EVENT_HANDLER is never used
  7276                           
  7277  1137  0008               	return
  7278  1138                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:	
  7279                           
  7280                           	psect	text25
  7281  0870                     __ptext25:	
  7282 ;; *************** function _USBCheckCDCRequest *****************
  7283 ;; Defined at:
  7284 ;;		line 146 in file "mcc_generated_files/usb/usb_device_cdc.c"
  7285 ;; Parameters:    Size  Location     Type
  7286 ;;		None
  7287 ;; Auto vars:     Size  Location     Type
  7288 ;;		None
  7289 ;; Return value:  Size  Location     Type
  7290 ;;                  1    wreg      void 
  7291 ;; Registers used:
  7292 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7293 ;; Tracked objects:
  7294 ;;		On entry : 0/0
  7295 ;;		On exit  : 0/0
  7296 ;;		Unchanged: 0/0
  7297 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7300 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7301 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7302 ;;Total ram usage:        1 bytes
  7303 ;; Hardware stack levels used:    1
  7304 ;; Hardware stack levels required when called:   10
  7305 ;; This function calls:
  7306 ;;		Nothing
  7307 ;; This function is called by:
  7308 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7309 ;; This function uses a non-reentrant model
  7310 ;;
  7311                           
  7312                           
  7313                           ;psect for function _USBCheckCDCRequest
  7314  0870                     _USBCheckCDCRequest:	
  7315                           
  7316                           ;usb_device_cdc.c: 151: if(SetupPkt.Recipient != (0x01)) return;
  7317                           
  7318                           ;incstack = 0
  7319                           ; Regs used in _USBCheckCDCRequest: [wreg-fsr0h+status,2+status,0]
  7320  0870  0020               	movlb	0	; select bank0
  7321  0871  0850               	movf	80,w	;volatile
  7322  0872  391F               	andlw	31
  7323  0873  3A01               	xorlw	1
  7324  0874  1D03               	btfss	3,2
  7325  0875  0008               	return
  7326                           
  7327                           ;usb_device_cdc.c: 156: if(SetupPkt.RequestType != (0x20>>5)) return;
  7328  0876  0E50               	swapf	80,w	;volatile
  7329  0877  0C89               	rrf	9,f
  7330  0878  3903               	andlw	3
  7331  0879  3A01               	xorlw	1
  7332  087A  1D03               	btfss	3,2
  7333  087B  0008               	return
  7334                           
  7335                           ;usb_device_cdc.c: 162: if((SetupPkt.bIntfID != 0x0)&&
  7336                           ;usb_device_cdc.c: 163: (SetupPkt.bIntfID != 0x01)) return;
  7337  087C  0854               	movf	84,w	;volatile
  7338  087D  1903               	btfsc	3,2
  7339  087E  28C0               	goto	l7488
  7340  087F  0354               	decf	84,w	;volatile
  7341  0880  1D03               	btfss	3,2
  7342  0881  0008               	return
  7343  0882  28C0               	goto	l7488
  7344  0883                     l7458:	
  7345                           ;usb_device_cdc.c: 166: {
  7346                           ;usb_device_cdc.c: 168: case 0x00:
  7347                           
  7348                           ;usb_device_cdc.c: 165: switch(SetupPkt.bRequest)
  7349                           
  7350                           
  7351                           ;usb_device_cdc.c: 170: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  7352  0883  304F               	movlw	low _dummy_encapsulated_cmd_response
  7353  0884  0021               	movlb	1	; select bank1
  7354  0885  00C3               	movwf	_inPipes^(0+128)	;volatile
  7355  0886  3002               	movlw	high _dummy_encapsulated_cmd_response
  7356  0887  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
  7357                           
  7358                           ;usb_device_cdc.c: 171: inPipes[0].wCount.Val = 0x08;
  7359  0888  3000               	movlw	0
  7360  0889  00C7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  7361  088A  3008               	movlw	8
  7362  088B  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
  7363                           
  7364                           ;usb_device_cdc.c: 172: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  7365  088C  1445               	bsf	(_inPipes^(0+128)+2),0	;volatile
  7366                           
  7367                           ;usb_device_cdc.c: 173: inPipes[0].info.bits.busy = 1;
  7368  088D  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  7369                           
  7370                           ;usb_device_cdc.c: 174: break;
  7371  088E  0008               	return
  7372  088F                     l7466:	
  7373                           ;usb_device_cdc.c: 175: case 0x01:
  7374                           
  7375                           
  7376                           ;usb_device_cdc.c: 177: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  7377  088F  304F               	movlw	low _dummy_encapsulated_cmd_response
  7378  0890  0021               	movlb	1	; select bank1
  7379  0891  00C3               	movwf	_inPipes^(0+128)	;volatile
  7380  0892  3002               	movlw	high _dummy_encapsulated_cmd_response
  7381  0893  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
  7382                           
  7383                           ;usb_device_cdc.c: 178: inPipes[0].info.bits.busy = 1;
  7384  0894  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  7385                           
  7386                           ;usb_device_cdc.c: 179: break;
  7387  0895  0008               	return
  7388  0896                     l7470:	
  7389                           ;usb_device_cdc.c: 183: case 0x20:
  7390                           
  7391                           
  7392                           ;usb_device_cdc.c: 184: outPipes[0].wCount.Val = SetupPkt.wLength;
  7393  0896  0020               	movlb	0	; select bank0
  7394  0897  0857               	movf	87,w	;volatile
  7395  0898  0023               	movlb	3	; select bank3
  7396  0899  00B4               	movwf	((_outPipes+1)^(0+384)+3)	;volatile
  7397  089A  0020               	movlb	0	; select bank0
  7398  089B  0856               	movf	86,w	;volatile
  7399  089C  0023               	movlb	3	; select bank3
  7400  089D  00B3               	movwf	(_outPipes^(0+384)+3)	;volatile
  7401                           
  7402                           ;usb_device_cdc.c: 185: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
  7403  089E  3057               	movlw	(low (_line_coding| (0+512)))& (0+255)
  7404  089F  0021               	movlb	1	; select bank1
  7405  08A0  00A6               	movwf	??_USBCheckCDCRequest^(0+128)
  7406  08A1  0826               	movf	??_USBCheckCDCRequest^(0+128),w
  7407  08A2  0023               	movlb	3	; select bank3
  7408  08A3  00B0               	movwf	_outPipes^(0+384)	;volatile
  7409                           
  7410                           ;usb_device_cdc.c: 186: outPipes[0].pFunc = (0);
  7411  08A4  01B5               	clrf	(low ((_outPipes| (0+256)+5)))^(0+128)	;volatile
  7412  08A5  01B6               	clrf	((low ((_outPipes| (0+256)+5))+1))^(0+128)	;volatile
  7413                           
  7414                           ;usb_device_cdc.c: 187: outPipes[0].info.bits.busy = 1;
  7415  08A6  17B2               	bsf	(_outPipes^(0+384)+2),7	;volatile
  7416                           
  7417                           ;usb_device_cdc.c: 188: break;
  7418  08A7  0008               	return
  7419  08A8                     l7476:	
  7420                           ;usb_device_cdc.c: 190: case 0x21:
  7421                           
  7422                           
  7423                           ;usb_device_cdc.c: 191: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  7424  08A8  3057               	movlw	low _line_coding
  7425  08A9  0021               	movlb	1	; select bank1
  7426  08AA  00C3               	movwf	_inPipes^(0+128)	;volatile
  7427  08AB  3002               	movlw	high _line_coding
  7428  08AC  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
  7429  08AD  3000               	movlw	0
  7430  08AE  00C7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  7431  08AF  3007               	movlw	7
  7432  08B0  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
  7433  08B1  30C1               	movlw	193
  7434  08B2  00A6               	movwf	??_USBCheckCDCRequest^(0+128)
  7435  08B3  0826               	movf	??_USBCheckCDCRequest^(0+128),w
  7436  08B4  00C5               	movwf	(_inPipes^(0+128)+2)	;volatile
  7437                           
  7438                           ;usb_device_cdc.c: 195: break;
  7439  08B5  0008               	return
  7440  08B6                     l7482:	
  7441                           ;usb_device_cdc.c: 197: case 0x22:
  7442                           
  7443                           
  7444                           ;usb_device_cdc.c: 198: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
  7445  08B6  0020               	movlb	0	; select bank0
  7446  08B7  0852               	movf	82,w	;volatile
  7447  08B8  0021               	movlb	1	; select bank1
  7448  08B9  00A6               	movwf	??_USBCheckCDCRequest^(0+128)
  7449  08BA  0826               	movf	??_USBCheckCDCRequest^(0+128),w
  7450  08BB  0023               	movlb	3	; select bank3
  7451  08BC  00E6               	movwf	_control_signal_bitmap^(0+384)
  7452                           
  7453                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.busy = 1;
  7454  08BD  0021               	movlb	1	; select bank1
  7455  08BE  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  7456                           
  7457                           ;usb_device_cdc.c: 257: }
  7458                           
  7459                           ;usb_device_cdc.c: 256: break;
  7460                           
  7461                           ;usb_device_cdc.c: 255: default:
  7462                           
  7463                           ;usb_device_cdc.c: 231: break;
  7464  08BF  0008               	return
  7465  08C0                     l7488:	
  7466  08C0  0020               	movlb	0	; select bank0
  7467  08C1  0851               	movf	81,w	;volatile
  7468                           
  7469                           ; Switch size 1, requested type "space"
  7470                           ; Number of cases is 5, Range of values is 0 to 34
  7471                           ; switch strategies available:
  7472                           ; Name         Instructions Cycles
  7473                           ; simple_byte           16     9 (average)
  7474                           ; direct_byte           76     6 (fixed)
  7475                           ; jumptable            260     6 (fixed)
  7476                           ;	Chosen strategy is simple_byte
  7477  08C2  3A00               	xorlw	0	; case 0
  7478  08C3  1903               	skipnz
  7479  08C4  2883               	goto	l7458
  7480  08C5  3A01               	xorlw	1	; case 1
  7481  08C6  1903               	skipnz
  7482  08C7  288F               	goto	l7466
  7483  08C8  3A21               	xorlw	33	; case 32
  7484  08C9  1903               	skipnz
  7485  08CA  2896               	goto	l7470
  7486  08CB  3A01               	xorlw	1	; case 33
  7487  08CC  1903               	skipnz
  7488  08CD  28A8               	goto	l7476
  7489  08CE  3A03               	xorlw	3	; case 34
  7490  08CF  1903               	skipnz
  7491  08D0  28B6               	goto	l7482
  7492  08D1  28D2               	goto	l139
  7493  08D2                     l139:	
  7494  08D2  0008               	return
  7495  08D3                     __end_of_USBCheckCDCRequest:	
  7496                           
  7497                           	psect	text26
  7498  120A                     __ptext26:	
  7499 ;; *************** function _CDCInitEP *****************
  7500 ;; Defined at:
  7501 ;;		line 293 in file "mcc_generated_files/usb/usb_device_cdc.c"
  7502 ;; Parameters:    Size  Location     Type
  7503 ;;		None
  7504 ;; Auto vars:     Size  Location     Type
  7505 ;;		None
  7506 ;; Return value:  Size  Location     Type
  7507 ;;                  1    wreg      void 
  7508 ;; Registers used:
  7509 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7510 ;; Tracked objects:
  7511 ;;		On entry : 0/0
  7512 ;;		On exit  : 0/0
  7513 ;;		Unchanged: 0/0
  7514 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7517 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7518 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7519 ;;Total ram usage:        1 bytes
  7520 ;; Hardware stack levels used:    1
  7521 ;; Hardware stack levels required when called:   12
  7522 ;; This function calls:
  7523 ;;		_USBEnableEndpoint
  7524 ;;		_USBTransferOnePacket
  7525 ;; This function is called by:
  7526 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7527 ;;		_main
  7528 ;; This function uses a non-reentrant model
  7529 ;;
  7530                           
  7531                           
  7532                           ;psect for function _CDCInitEP
  7533  120A                     _CDCInitEP:	
  7534                           
  7535                           ;usb_device_cdc.c: 296: line_coding.dwDTERate = 19200;
  7536                           
  7537                           ;incstack = 0
  7538                           ; Regs used in _CDCInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7539  120A  3000               	movlw	0
  7540  120B  0024               	movlb	4	; select bank4
  7541  120C  00DA               	movwf	(_line_coding+3)^(0+512)
  7542  120D  3000               	movlw	0
  7543  120E  00D9               	movwf	(_line_coding+2)^(0+512)
  7544  120F  304B               	movlw	75
  7545  1210  00D8               	movwf	(_line_coding+1)^(0+512)
  7546  1211  3000               	movlw	0
  7547  1212  00D7               	movwf	_line_coding^(0+512)
  7548                           
  7549                           ;usb_device_cdc.c: 297: line_coding.bCharFormat = 0x00;
  7550  1213  01DB               	clrf	(_line_coding^(0+512)+4)
  7551                           
  7552                           ;usb_device_cdc.c: 298: line_coding.bParityType = 0x00;
  7553  1214  01DC               	clrf	(_line_coding^(0+512)+5)
  7554                           
  7555                           ;usb_device_cdc.c: 299: line_coding.bDataBits = 0x08;
  7556  1215  3008               	movlw	8
  7557  1216  0021               	movlb	1	; select bank1
  7558  1217  00B3               	movwf	??_CDCInitEP^(0+128)
  7559  1218  0833               	movf	??_CDCInitEP^(0+128),w
  7560  1219  0024               	movlb	4	; select bank4
  7561  121A  00DD               	movwf	(_line_coding^(0+512)+6)
  7562                           
  7563                           ;usb_device_cdc.c: 301: cdc_rx_len = 0;
  7564  121B  0023               	movlb	3	; select bank3
  7565  121C  01EA               	clrf	_cdc_rx_len^(0+384)
  7566                           
  7567                           ;usb_device_cdc.c: 314: USBEnableEndpoint(1,0x02|0x10|0x08);
  7568  121D  301A               	movlw	26
  7569  121E  0021               	movlb	1	; select bank1
  7570  121F  00B3               	movwf	??_CDCInitEP^(0+128)
  7571  1220  0833               	movf	??_CDCInitEP^(0+128),w
  7572  1221  00AD               	movwf	USBEnableEndpoint@options^(0+128)
  7573  1222  3001               	movlw	1
  7574  1223  319F  27DD  3192   	fcall	_USBEnableEndpoint
  7575                           
  7576                           ;usb_device_cdc.c: 315: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
  7577  1226  301E               	movlw	30
  7578  1227  0021               	movlb	1	; select bank1
  7579  1228  00B3               	movwf	??_CDCInitEP^(0+128)
  7580  1229  0833               	movf	??_CDCInitEP^(0+128),w
  7581  122A  00AD               	movwf	USBEnableEndpoint@options^(0+128)
  7582  122B  3002               	movlw	2
  7583  122C  319F  27DD  3192   	fcall	_USBEnableEndpoint
  7584                           
  7585                           ;usb_device_cdc.c: 317: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  7586  122F  0021               	movlb	1	; select bank1
  7587  1230  01A6               	clrf	USBTransferOnePacket@dir^(0+128)
  7588  1231  30C0               	movlw	192
  7589  1232  00A7               	movwf	USBTransferOnePacket@data^(0+128)
  7590  1233  3020               	movlw	32
  7591  1234  00A8               	movwf	(USBTransferOnePacket@data^(0+128)+1)
  7592  1235  3040               	movlw	64
  7593  1236  00B3               	movwf	??_CDCInitEP^(0+128)
  7594  1237  0833               	movf	??_CDCInitEP^(0+128),w
  7595  1238  00A9               	movwf	USBTransferOnePacket@len^(0+128)
  7596  1239  3002               	movlw	2
  7597  123A  318C  2495         	fcall	_USBTransferOnePacket
  7598  123C  0021               	movlb	1	; select bank1
  7599  123D  0827               	movf	(?_USBTransferOnePacket+1)^(0+128),w
  7600  123E  0023               	movlb	3	; select bank3
  7601  123F  00D0               	movwf	(_CDCDataOutHandle+1)^(0+384)
  7602  1240  0021               	movlb	1	; select bank1
  7603  1241  0826               	movf	?_USBTransferOnePacket^(0+128),w
  7604  1242  0023               	movlb	3	; select bank3
  7605  1243  00CF               	movwf	_CDCDataOutHandle^(0+384)
  7606                           
  7607                           ;usb_device_cdc.c: 318: CDCDataInHandle = (0);
  7608  1244  01CD               	clrf	_CDCDataInHandle^(0+384)
  7609  1245  01CE               	clrf	(_CDCDataInHandle+1)^(0+384)
  7610                           
  7611                           ;usb_device_cdc.c: 345: cdc_trf_state = 0;
  7612  1246  01E9               	clrf	_cdc_trf_state^(0+384)
  7613  1247  0008               	return
  7614  1248                     __end_of_CDCInitEP:	
  7615                           
  7616                           	psect	text27
  7617  1FDD                     __ptext27:	
  7618 ;; *************** function _USBEnableEndpoint *****************
  7619 ;; Defined at:
  7620 ;;		line 878 in file "mcc_generated_files/usb/usb_device.c"
  7621 ;; Parameters:    Size  Location     Type
  7622 ;;  ep              1    wreg     unsigned char 
  7623 ;;  options         1   13[BANK1 ] unsigned char 
  7624 ;; Auto vars:     Size  Location     Type
  7625 ;;  ep              1   18[BANK1 ] unsigned char 
  7626 ;;  p               2   16[BANK1 ] PTR unsigned char 
  7627 ;;		 -> UEP0(1), 
  7628 ;; Return value:  Size  Location     Type
  7629 ;;                  1    wreg      void 
  7630 ;; Registers used:
  7631 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7632 ;; Tracked objects:
  7633 ;;		On entry : 0/0
  7634 ;;		On exit  : 0/0
  7635 ;;		Unchanged: 0/0
  7636 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7637 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7638 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7639 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7640 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  7641 ;;Total ram usage:        6 bytes
  7642 ;; Hardware stack levels used:    1
  7643 ;; Hardware stack levels required when called:   11
  7644 ;; This function calls:
  7645 ;;		_USBConfigureEndpoint
  7646 ;; This function is called by:
  7647 ;;		_CDCInitEP
  7648 ;; This function uses a non-reentrant model
  7649 ;;
  7650                           
  7651                           
  7652                           ;psect for function _USBEnableEndpoint
  7653  1FDD                     _USBEnableEndpoint:	
  7654                           
  7655                           ;incstack = 0
  7656                           ; Regs used in _USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7657                           ;USBEnableEndpoint@ep stored from wreg
  7658  1FDD  0021               	movlb	1	; select bank1
  7659  1FDE  00B2               	movwf	USBEnableEndpoint@ep^(0+128)
  7660                           
  7661                           ;usb_device.c: 880: unsigned char* p;
  7662                           ;usb_device.c: 884: if(options & 0x04)
  7663  1FDF  1D2D               	btfss	USBEnableEndpoint@options^(0+128),2
  7664  1FE0  2FE6               	goto	l7408
  7665                           
  7666                           ;usb_device.c: 885: {
  7667                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
  7668  1FE1  01A6               	clrf	USBConfigureEndpoint@direction^(0+128)
  7669  1FE2  0832               	movf	USBEnableEndpoint@ep^(0+128),w
  7670  1FE3  3193  2307  319F   	fcall	_USBConfigureEndpoint
  7671  1FE6                     l7408:	
  7672                           
  7673                           ;usb_device.c: 887: }
  7674                           ;usb_device.c: 888: if(options & 0x02)
  7675  1FE6  0021               	movlb	1	; select bank1
  7676  1FE7  1CAD               	btfss	USBEnableEndpoint@options^(0+128),1
  7677  1FE8  2FEE               	goto	l7412
  7678                           
  7679                           ;usb_device.c: 889: {
  7680                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
  7681  1FE9  01A6               	clrf	USBConfigureEndpoint@direction^(0+128)
  7682  1FEA  0AA6               	incf	USBConfigureEndpoint@direction^(0+128),f
  7683  1FEB  0832               	movf	USBEnableEndpoint@ep^(0+128),w
  7684  1FEC  3193  2307         	fcall	_USBConfigureEndpoint
  7685  1FEE                     l7412:	
  7686                           
  7687                           ;usb_device.c: 891: }
  7688                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
  7689  1FEE  0021               	movlb	1	; select bank1
  7690  1FEF  0832               	movf	USBEnableEndpoint@ep^(0+128),w
  7691  1FF0  3E98               	addlw	152
  7692  1FF1  00AE               	movwf	??_USBEnableEndpoint^(0+128)
  7693  1FF2  01AF               	clrf	(??_USBEnableEndpoint^(0+128)+1)
  7694  1FF3  300E               	movlw	14
  7695  1FF4  3DAF               	addwfc	(??_USBEnableEndpoint^(0+128)+1),f
  7696  1FF5  082E               	movf	??_USBEnableEndpoint^(0+128),w
  7697  1FF6  00B0               	movwf	USBEnableEndpoint@p^(0+128)
  7698  1FF7  082F               	movf	(??_USBEnableEndpoint+1)^(0+128),w
  7699  1FF8  00B1               	movwf	(USBEnableEndpoint@p+1)^(0+128)
  7700                           
  7701                           ;usb_device.c: 901: *p = options;
  7702  1FF9  0830               	movf	USBEnableEndpoint@p^(0+128),w
  7703  1FFA  0086               	movwf	6
  7704  1FFB  0831               	movf	(USBEnableEndpoint@p+1)^(0+128),w
  7705  1FFC  0087               	movwf	7
  7706  1FFD  082D               	movf	USBEnableEndpoint@options^(0+128),w
  7707  1FFE  0081               	movwf	1
  7708  1FFF  0008               	return
  7709  2000                     __end_of_USBEnableEndpoint:	
  7710                           
  7711                           	psect	text28
  7712  1307                     __ptext28:	
  7713 ;; *************** function _USBConfigureEndpoint *****************
  7714 ;; Defined at:
  7715 ;;		line 1543 in file "mcc_generated_files/usb/usb_device.c"
  7716 ;; Parameters:    Size  Location     Type
  7717 ;;  EPNum           1    wreg     unsigned char 
  7718 ;;  direction       1    6[BANK1 ] unsigned char 
  7719 ;; Auto vars:     Size  Location     Type
  7720 ;;  EPNum           1   11[BANK1 ] unsigned char 
  7721 ;;  handle          1   12[BANK1 ] PTR volatile struct __BD
  7722 ;;		 -> BDT(48), 
  7723 ;; Return value:  Size  Location     Type
  7724 ;;                  1    wreg      void 
  7725 ;; Registers used:
  7726 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7727 ;; Tracked objects:
  7728 ;;		On entry : 0/0
  7729 ;;		On exit  : 0/0
  7730 ;;		Unchanged: 0/0
  7731 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7732 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7733 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7734 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7735 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  7736 ;;Total ram usage:        7 bytes
  7737 ;; Hardware stack levels used:    1
  7738 ;; Hardware stack levels required when called:   10
  7739 ;; This function calls:
  7740 ;;		Nothing
  7741 ;; This function is called by:
  7742 ;;		_USBEnableEndpoint
  7743 ;; This function uses a non-reentrant model
  7744 ;;
  7745                           
  7746                           
  7747                           ;psect for function _USBConfigureEndpoint
  7748  1307                     _USBConfigureEndpoint:	
  7749                           
  7750                           ;incstack = 0
  7751                           ; Regs used in _USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
  7752                           ;USBConfigureEndpoint@EPNum stored from wreg
  7753  1307  0021               	movlb	1	; select bank1
  7754  1308  00AB               	movwf	USBConfigureEndpoint@EPNum^(0+128)
  7755                           
  7756                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
  7757                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
  7758  1309  3020               	movlw	32
  7759  130A  00A7               	movwf	??_USBConfigureEndpoint^(0+128)
  7760  130B  0827               	movf	??_USBConfigureEndpoint^(0+128),w
  7761  130C  00AC               	movwf	USBConfigureEndpoint@handle^(0+128)
  7762                           
  7763                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
  7764  130D  0826               	movf	USBConfigureEndpoint@direction^(0+128),w
  7765  130E  00A7               	movwf	??_USBConfigureEndpoint^(0+128)
  7766  130F  3001               	movlw	1
  7767  1310                     u6755:	
  7768  1310  35A7               	lslf	??_USBConfigureEndpoint^(0+128),f
  7769  1311  0B89               	decfsz	9,f
  7770  1312  2B10               	goto	u6755
  7771  1313  082B               	movf	USBConfigureEndpoint@EPNum^(0+128),w
  7772  1314  00A8               	movwf	(??_USBConfigureEndpoint+1)^(0+128)
  7773  1315  3001               	movlw	1
  7774  1316                     u6765:	
  7775  1316  35A8               	lslf	(??_USBConfigureEndpoint+1)^(0+128),f
  7776  1317  3EFF               	addlw	-1
  7777  1318  1D03               	skipz
  7778  1319  2B16               	goto	u6765
  7779  131A  3528               	lslf	(??_USBConfigureEndpoint+1)^(0+128),w
  7780  131B  0727               	addwf	??_USBConfigureEndpoint^(0+128),w
  7781  131C  00A9               	movwf	(??_USBConfigureEndpoint+2)^(0+128)
  7782  131D  3001               	movlw	1
  7783  131E                     u6775:	
  7784  131E  35A9               	lslf	(??_USBConfigureEndpoint+2)^(0+128),f
  7785  131F  3EFF               	addlw	-1
  7786  1320  1D03               	skipz
  7787  1321  2B1E               	goto	u6775
  7788  1322  3529               	lslf	(??_USBConfigureEndpoint+2)^(0+128),w
  7789  1323  00AA               	movwf	(??_USBConfigureEndpoint+3)^(0+128)
  7790  1324  082A               	movf	(??_USBConfigureEndpoint+3)^(0+128),w
  7791  1325  07AC               	addwf	USBConfigureEndpoint@handle^(0+128),f
  7792                           
  7793                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
  7794  1326  082C               	movf	USBConfigureEndpoint@handle^(0+128),w
  7795  1327  0086               	movwf	6
  7796  1328  0187               	clrf	7
  7797  1329  1381               	bcf	1,7
  7798                           
  7799                           ;usb_device.c: 1557: if(direction == 0)
  7800  132A  0826               	movf	USBConfigureEndpoint@direction^(0+128),w
  7801  132B  1D03               	btfss	3,2
  7802  132C  2B37               	goto	l7398
  7803                           
  7804                           ;usb_device.c: 1558: {
  7805                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
  7806  132D  352B               	lslf	USBConfigureEndpoint@EPNum^(0+128),w
  7807  132E  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  7808  132F  0086               	movwf	6
  7809  1330  3001               	movlw	1	; select bank3/4
  7810  1331  0087               	movwf	7
  7811  1332  082C               	movf	USBConfigureEndpoint@handle^(0+128),w
  7812  1333  3FC0               	movwi [0]fsr1
  7813  1334  3000               	movlw	0
  7814  1335  3FC1               	movwi [1]fsr1
  7815                           
  7816                           ;usb_device.c: 1560: }
  7817  1336  2B40               	goto	l7400
  7818  1337                     l7398:	
  7819                           
  7820                           ;usb_device.c: 1561: else
  7821                           ;usb_device.c: 1562: {
  7822                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
  7823  1337  352B               	lslf	USBConfigureEndpoint@EPNum^(0+128),w
  7824  1338  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  7825  1339  0086               	movwf	6
  7826  133A  3001               	movlw	1	; select bank3/4
  7827  133B  0087               	movwf	7
  7828  133C  082C               	movf	USBConfigureEndpoint@handle^(0+128),w
  7829  133D  3FC0               	movwi [0]fsr1
  7830  133E  3000               	movlw	0
  7831  133F  3FC1               	movwi [1]fsr1
  7832  1340                     l7400:	
  7833                           
  7834                           ;usb_device.c: 1564: }
  7835                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
  7836  1340  082C               	movf	USBConfigureEndpoint@handle^(0+128),w
  7837  1341  0086               	movwf	6
  7838  1342  0187               	clrf	7
  7839  1343  1301               	bcf	1,6
  7840                           
  7841                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
  7842  1344  082C               	movf	USBConfigureEndpoint@handle^(0+128),w
  7843  1345  3E04               	addlw	4
  7844  1346  0086               	movwf	6
  7845  1347  0187               	clrf	7
  7846  1348  1701               	bsf	1,6
  7847  1349  0008               	return
  7848  134A                     __end_of_USBConfigureEndpoint:	
  7849                           
  7850                           	psect	text29
  7851  11D4                     __ptext29:	
  7852 ;; *************** function _USBCtrlTrfOutHandler *****************
  7853 ;; Defined at:
  7854 ;;		line 2538 in file "mcc_generated_files/usb/usb_device.c"
  7855 ;; Parameters:    Size  Location     Type
  7856 ;;		None
  7857 ;; Auto vars:     Size  Location     Type
  7858 ;;		None
  7859 ;; Return value:  Size  Location     Type
  7860 ;;                  1    wreg      void 
  7861 ;; Registers used:
  7862 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7863 ;; Tracked objects:
  7864 ;;		On entry : 0/0
  7865 ;;		On exit  : 0/0
  7866 ;;		Unchanged: 0/0
  7867 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7870 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7871 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7872 ;;Total ram usage:        2 bytes
  7873 ;; Hardware stack levels used:    1
  7874 ;; Hardware stack levels required when called:   12
  7875 ;; This function calls:
  7876 ;;		_USBCtrlTrfRxService
  7877 ;; This function is called by:
  7878 ;;		_USBCtrlEPService
  7879 ;; This function uses a non-reentrant model
  7880 ;;
  7881                           
  7882                           
  7883                           ;psect for function _USBCtrlTrfOutHandler
  7884  11D4                     _USBCtrlTrfOutHandler:	
  7885                           
  7886                           ;usb_device.c: 2540: if(controlTransferState == 2)
  7887                           
  7888                           ;incstack = 0
  7889                           ; Regs used in _USBCtrlTrfOutHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7890  11D4  3002               	movlw	2
  7891  11D5  0023               	movlb	3	; select bank3
  7892  11D6  0662               	xorwf	_controlTransferState^(0+384),w	;volatile
  7893  11D7  1D03               	btfss	3,2
  7894  11D8  29DC               	goto	l8000
  7895                           
  7896                           ;usb_device.c: 2541: {
  7897                           ;usb_device.c: 2542: USBCtrlTrfRxService();
  7898  11D9  3186  2635         	fcall	_USBCtrlTrfRxService
  7899                           
  7900                           ;usb_device.c: 2543: }
  7901  11DB  0008               	return
  7902  11DC                     l8000:	
  7903                           
  7904                           ;usb_device.c: 2544: else
  7905                           ;usb_device.c: 2545: {
  7906                           ;usb_device.c: 2548: controlTransferState = 0;
  7907  11DC  0023               	movlb	3	; select bank3
  7908  11DD  01E2               	clrf	_controlTransferState^(0+384)	;volatile
  7909                           
  7910                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
  7911  11DE  085D               	movf	_BothEP0OutUOWNsSet^(0+384),w	;volatile
  7912  11DF  1D03               	btfss	3,2
  7913  11E0  2A07               	goto	l8012
  7914                           
  7915                           ;usb_device.c: 2556: {
  7916                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 8;
  7917  11E1  0021               	movlb	1	; select bank1
  7918  11E2  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7919  11E3  3E01               	addlw	1
  7920  11E4  00AC               	movwf	??_USBCtrlTrfOutHandler^(0+128)
  7921  11E5  3000               	movlw	0
  7922  11E6  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7923  11E7  00AD               	movwf	(??_USBCtrlTrfOutHandler+1)^(0+128)
  7924  11E8  082C               	movf	??_USBCtrlTrfOutHandler^(0+128),w
  7925  11E9  0086               	movwf	6
  7926  11EA  082D               	movf	(??_USBCtrlTrfOutHandler+1)^(0+128),w
  7927  11EB  0087               	movwf	7
  7928  11EC  3008               	movlw	8
  7929  11ED  0081               	movwf	1
  7930                           
  7931                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  7932  11EE  3050               	movlw	80
  7933  11EF  00AC               	movwf	??_USBCtrlTrfOutHandler^(0+128)
  7934  11F0  3000               	movlw	0
  7935  11F1  00AD               	movwf	(??_USBCtrlTrfOutHandler^(0+128)+1)
  7936  11F2  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7937  11F3  0086               	movwf	6
  7938  11F4  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7939  11F5  0087               	movwf	7
  7940  11F6  3142               	addfsr 1,2
  7941  11F7  082C               	movf	??_USBCtrlTrfOutHandler^(0+128),w
  7942  11F8  3FC0               	movwi [0]fsr1
  7943  11F9  082D               	movf	(??_USBCtrlTrfOutHandler^(0+128)+1),w
  7944  11FA  3FC1               	movwi [1]fsr1
  7945                           
  7946                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  7947  11FB  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7948  11FC  0086               	movwf	6
  7949  11FD  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7950  11FE  0087               	movwf	7
  7951  11FF  300C               	movlw	12
  7952  1200  0081               	movwf	1
  7953                           
  7954                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7955  1201  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7956  1202  0086               	movwf	6
  7957  1203  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7958  1204  0087               	movwf	7
  7959  1205  1781               	bsf	1,7
  7960                           
  7961                           ;usb_device.c: 2561: }
  7962  1206  0008               	return
  7963  1207                     l8012:	
  7964                           
  7965                           ;usb_device.c: 2562: else
  7966                           ;usb_device.c: 2563: {
  7967                           ;usb_device.c: 2564: BothEP0OutUOWNsSet = 0;
  7968  1207  0023               	movlb	3	; select bank3
  7969  1208  01DD               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  7970  1209  0008               	return
  7971  120A                     __end_of_USBCtrlTrfOutHandler:	
  7972                           
  7973                           	psect	text30
  7974  0635                     __ptext30:	
  7975 ;; *************** function _USBCtrlTrfRxService *****************
  7976 ;; Defined at:
  7977 ;;		line 1852 in file "mcc_generated_files/usb/usb_device.c"
  7978 ;; Parameters:    Size  Location     Type
  7979 ;;		None
  7980 ;; Auto vars:     Size  Location     Type
  7981 ;;  byteToRead      1   11[BANK1 ] unsigned char 
  7982 ;;  i               1   10[BANK1 ] unsigned char 
  7983 ;; Return value:  Size  Location     Type
  7984 ;;                  1    wreg      void 
  7985 ;; Registers used:
  7986 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7987 ;; Tracked objects:
  7988 ;;		On entry : 0/0
  7989 ;;		On exit  : 0/0
  7990 ;;		Unchanged: 0/0
  7991 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7993 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7994 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7995 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7996 ;;Total ram usage:        4 bytes
  7997 ;; Hardware stack levels used:    1
  7998 ;; Hardware stack levels required when called:   11
  7999 ;; This function calls:
  8000 ;;		_USBCtrlEPAllowStatusStage
  8001 ;; This function is called by:
  8002 ;;		_USBCtrlTrfOutHandler
  8003 ;; This function uses a non-reentrant model
  8004 ;;
  8005                           
  8006                           
  8007                           ;psect for function _USBCtrlTrfRxService
  8008  0635                     _USBCtrlTrfRxService:	
  8009                           
  8010                           ;usb_device.c: 1854: uint8_t byteToRead;
  8011                           ;usb_device.c: 1855: uint8_t i;
  8012                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  8013                           
  8014                           ;incstack = 0
  8015                           ; Regs used in _USBCtrlTrfRxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8016  0635  0023               	movlb	3	; select bank3
  8017  0636  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  8018  0637  0086               	movwf	6
  8019  0638  0187               	clrf	7
  8020  0639  3F41               	moviw [1]fsr1
  8021  063A  0021               	movlb	1	; select bank1
  8022  063B  00AB               	movwf	USBCtrlTrfRxService@byteToRead^(0+128)
  8023                           
  8024                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
  8025  063C  082B               	movf	USBCtrlTrfRxService@byteToRead^(0+128),w
  8026  063D  00A8               	movwf	??_USBCtrlTrfRxService^(0+128)
  8027  063E  01A9               	clrf	(??_USBCtrlTrfRxService^(0+128)+1)
  8028  063F  0829               	movf	(??_USBCtrlTrfRxService+1)^(0+128),w
  8029  0640  0023               	movlb	3	; select bank3
  8030  0641  0234               	subwf	((_outPipes+1)^(0+384)+3),w	;volatile
  8031  0642  1D03               	skipz
  8032  0643  2E48               	goto	u7395
  8033  0644  0021               	movlb	1	; select bank1
  8034  0645  0828               	movf	??_USBCtrlTrfRxService^(0+128),w
  8035  0646  0023               	movlb	3	; select bank3
  8036  0647  0233               	subwf	(_outPipes^(0+384)+3),w	;volatile
  8037  0648                     u7395:	
  8038  0648  1803               	skipnc
  8039  0649  2E4F               	goto	l495
  8040                           
  8041                           ;usb_device.c: 1866: {
  8042                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
  8043  064A  0833               	movf	(_outPipes^(0+384)+3),w	;volatile
  8044  064B  0021               	movlb	1	; select bank1
  8045  064C  00A8               	movwf	??_USBCtrlTrfRxService^(0+128)
  8046  064D  0828               	movf	??_USBCtrlTrfRxService^(0+128),w
  8047  064E  00AB               	movwf	USBCtrlTrfRxService@byteToRead^(0+128)
  8048  064F                     l495:	
  8049                           
  8050                           ;usb_device.c: 1868: }
  8051                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
  8052  064F  0021               	movlb	1	; select bank1
  8053  0650  082B               	movf	USBCtrlTrfRxService@byteToRead^(0+128),w
  8054  0651  00A8               	movwf	??_USBCtrlTrfRxService^(0+128)
  8055  0652  01A9               	clrf	(??_USBCtrlTrfRxService^(0+128)+1)
  8056  0653  0828               	movf	??_USBCtrlTrfRxService^(0+128),w
  8057  0654  0023               	movlb	3	; select bank3
  8058  0655  02B3               	subwf	(_outPipes^(0+384)+3),f	;volatile
  8059  0656  0021               	movlb	1	; select bank1
  8060  0657  0829               	movf	(??_USBCtrlTrfRxService+1)^(0+128),w
  8061  0658  0023               	movlb	3	; select bank3
  8062  0659  3BB4               	subwfb	((_outPipes+1)^(0+384)+3),f	;volatile
  8063                           
  8064                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
  8065  065A  0021               	movlb	1	; select bank1
  8066  065B  01AA               	clrf	USBCtrlTrfRxService@i^(0+128)
  8067  065C                     l7900:	
  8068  065C  082B               	movf	USBCtrlTrfRxService@byteToRead^(0+128),w
  8069  065D  022A               	subwf	USBCtrlTrfRxService@i^(0+128),w
  8070  065E  1803               	btfsc	3,0
  8071  065F  2E79               	goto	l7902
  8072                           
  8073                           ;usb_device.c: 1875: {
  8074                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  8075  0660  082A               	movf	USBCtrlTrfRxService@i^(0+128),w
  8076  0661  3E58               	addlw	88
  8077  0662  0086               	movwf	6
  8078  0663  0187               	clrf	7
  8079  0664  0801               	movf	1,w
  8080  0665  00A8               	movwf	??_USBCtrlTrfRxService^(0+128)
  8081  0666  0023               	movlb	3	; select bank3
  8082  0667  0830               	movf	_outPipes^(0+384),w	;volatile
  8083  0668  0086               	movwf	6
  8084  0669  3002               	movlw	2	; select bank4/5
  8085  066A  0087               	movwf	7
  8086  066B  0021               	movlb	1	; select bank1
  8087  066C  0828               	movf	??_USBCtrlTrfRxService^(0+128),w
  8088  066D  0081               	movwf	1
  8089  066E  3001               	movlw	1
  8090  066F  00A8               	movwf	??_USBCtrlTrfRxService^(0+128)
  8091  0670  0828               	movf	??_USBCtrlTrfRxService^(0+128),w
  8092  0671  0023               	movlb	3	; select bank3
  8093  0672  07B0               	addwf	_outPipes^(0+384),f	;volatile
  8094  0673  3001               	movlw	1
  8095  0674  0021               	movlb	1	; select bank1
  8096  0675  00A8               	movwf	??_USBCtrlTrfRxService^(0+128)
  8097  0676  0828               	movf	??_USBCtrlTrfRxService^(0+128),w
  8098  0677  07AA               	addwf	USBCtrlTrfRxService@i^(0+128),f
  8099  0678  2E5C               	goto	l7900
  8100  0679                     l7902:	
  8101                           
  8102                           ;usb_device.c: 1877: }
  8103                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
  8104  0679  0023               	movlb	3	; select bank3
  8105  067A  0833               	movf	(_outPipes^(0+384)+3),w	;volatile
  8106  067B  0434               	iorwf	((_outPipes+1)^(0+384)+3),w	;volatile
  8107  067C  1903               	btfsc	3,2
  8108  067D  2EB8               	goto	l7914
  8109                           
  8110                           ;usb_device.c: 1882: {
  8111                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
  8112  067E  0021               	movlb	1	; select bank1
  8113  067F  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8114  0680  3E01               	addlw	1
  8115  0681  00A8               	movwf	??_USBCtrlTrfRxService^(0+128)
  8116  0682  3000               	movlw	0
  8117  0683  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8118  0684  00A9               	movwf	(??_USBCtrlTrfRxService+1)^(0+128)
  8119  0685  0828               	movf	??_USBCtrlTrfRxService^(0+128),w
  8120  0686  0086               	movwf	6
  8121  0687  0829               	movf	(??_USBCtrlTrfRxService+1)^(0+128),w
  8122  0688  0087               	movwf	7
  8123  0689  3008               	movlw	8
  8124  068A  0081               	movwf	1
  8125                           
  8126                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  8127  068B  3058               	movlw	88
  8128  068C  00A8               	movwf	??_USBCtrlTrfRxService^(0+128)
  8129  068D  3000               	movlw	0
  8130  068E  00A9               	movwf	(??_USBCtrlTrfRxService^(0+128)+1)
  8131  068F  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8132  0690  0086               	movwf	6
  8133  0691  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8134  0692  0087               	movwf	7
  8135  0693  3142               	addfsr 1,2
  8136  0694  0828               	movf	??_USBCtrlTrfRxService^(0+128),w
  8137  0695  3FC0               	movwi [0]fsr1
  8138  0696  0829               	movf	(??_USBCtrlTrfRxService^(0+128)+1),w
  8139  0697  3FC1               	movwi [1]fsr1
  8140                           
  8141                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  8142  0698  0023               	movlb	3	; select bank3
  8143  0699  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  8144  069A  0086               	movwf	6
  8145  069B  0187               	clrf	7
  8146  069C  1B01               	btfsc	1,6
  8147  069D  2EAB               	goto	l7912
  8148                           
  8149                           ;usb_device.c: 1886: {
  8150                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  8151  069E  0021               	movlb	1	; select bank1
  8152  069F  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8153  06A0  0086               	movwf	6
  8154  06A1  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8155  06A2  0087               	movwf	7
  8156  06A3  3048               	movlw	72
  8157  06A4  0081               	movwf	1
  8158                           
  8159                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8160  06A5  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8161  06A6  0086               	movwf	6
  8162  06A7  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8163  06A8  0087               	movwf	7
  8164  06A9  1781               	bsf	1,7
  8165                           
  8166                           ;usb_device.c: 1889: }
  8167  06AA  0008               	return
  8168  06AB                     l7912:	
  8169                           
  8170                           ;usb_device.c: 1890: else
  8171                           ;usb_device.c: 1891: {
  8172                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
  8173  06AB  0021               	movlb	1	; select bank1
  8174  06AC  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8175  06AD  0086               	movwf	6
  8176  06AE  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8177  06AF  0087               	movwf	7
  8178  06B0  3008               	movlw	8
  8179  06B1  0081               	movwf	1
  8180                           
  8181                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8182  06B2  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8183  06B3  0086               	movwf	6
  8184  06B4  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8185  06B5  0087               	movwf	7
  8186  06B6  1781               	bsf	1,7
  8187                           
  8188                           ;usb_device.c: 1894: }
  8189                           ;usb_device.c: 1895: }
  8190  06B7  0008               	return
  8191  06B8                     l7914:	
  8192                           
  8193                           ;usb_device.c: 1896: else
  8194                           ;usb_device.c: 1897: {
  8195                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
  8196  06B8  0021               	movlb	1	; select bank1
  8197  06B9  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8198  06BA  3E01               	addlw	1
  8199  06BB  00A8               	movwf	??_USBCtrlTrfRxService^(0+128)
  8200  06BC  3000               	movlw	0
  8201  06BD  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8202  06BE  00A9               	movwf	(??_USBCtrlTrfRxService+1)^(0+128)
  8203  06BF  0828               	movf	??_USBCtrlTrfRxService^(0+128),w
  8204  06C0  0086               	movwf	6
  8205  06C1  0829               	movf	(??_USBCtrlTrfRxService+1)^(0+128),w
  8206  06C2  0087               	movwf	7
  8207  06C3  3008               	movlw	8
  8208  06C4  0081               	movwf	1
  8209                           
  8210                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  8211  06C5  3050               	movlw	80
  8212  06C6  00A8               	movwf	??_USBCtrlTrfRxService^(0+128)
  8213  06C7  3000               	movlw	0
  8214  06C8  00A9               	movwf	(??_USBCtrlTrfRxService^(0+128)+1)
  8215  06C9  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8216  06CA  0086               	movwf	6
  8217  06CB  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8218  06CC  0087               	movwf	7
  8219  06CD  3142               	addfsr 1,2
  8220  06CE  0828               	movf	??_USBCtrlTrfRxService^(0+128),w
  8221  06CF  3FC0               	movwi [0]fsr1
  8222  06D0  0829               	movf	(??_USBCtrlTrfRxService^(0+128)+1),w
  8223  06D1  3FC1               	movwi [1]fsr1
  8224                           
  8225                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  8226  06D2  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8227  06D3  0086               	movwf	6
  8228  06D4  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8229  06D5  0087               	movwf	7
  8230  06D6  3004               	movlw	4
  8231  06D7  0081               	movwf	1
  8232                           
  8233                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8234  06D8  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8235  06D9  0086               	movwf	6
  8236  06DA  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8237  06DB  0087               	movwf	7
  8238  06DC  1781               	bsf	1,7
  8239                           
  8240                           ;usb_device.c: 1915: {
  8241                           ;usb_device.c: 1921: outPipes[0].pFunc();
  8242  06DD  0023               	movlb	3	; select bank3
  8243  06DE  0835               	movf	(low ((_outPipes| (0+256)+5)))^(0+128),w	;volatile
  8244  06DF  0836               	movf	((low ((_outPipes| (0+256)+5))+1))^(0+128),w	;volatile
  8245                           
  8246                           ;usb_device.c: 1926: }
  8247                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
  8248  06E0  13B2               	bcf	(_outPipes^(0+384)+2),7	;volatile
  8249                           
  8250                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
  8251  06E1  085B               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
  8252  06E2  1D03               	btfss	3,2
  8253  06E3  0008               	return
  8254                           
  8255                           ;usb_device.c: 1942: {
  8256                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
  8257  06E4  318A  229A         	fcall	_USBCtrlEPAllowStatusStage
  8258  06E6  0008               	return
  8259  06E7                     __end_of_USBCtrlTrfRxService:	
  8260                           
  8261                           	psect	text31
  8262  0A9A                     __ptext31:	
  8263 ;; *************** function _USBCtrlEPAllowStatusStage *****************
  8264 ;; Defined at:
  8265 ;;		line 1416 in file "mcc_generated_files/usb/usb_device.c"
  8266 ;; Parameters:    Size  Location     Type
  8267 ;;		None
  8268 ;; Auto vars:     Size  Location     Type
  8269 ;;		None
  8270 ;; Return value:  Size  Location     Type
  8271 ;;                  1    wreg      void 
  8272 ;; Registers used:
  8273 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8274 ;; Tracked objects:
  8275 ;;		On entry : 0/0
  8276 ;;		On exit  : 0/0
  8277 ;;		Unchanged: 0/0
  8278 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8281 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8282 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8283 ;;Total ram usage:        2 bytes
  8284 ;; Hardware stack levels used:    1
  8285 ;; Hardware stack levels required when called:   10
  8286 ;; This function calls:
  8287 ;;		Nothing
  8288 ;; This function is called by:
  8289 ;;		_USBDeviceTasks
  8290 ;;		_USBCtrlEPServiceComplete
  8291 ;;		_USBCtrlTrfRxService
  8292 ;; This function uses a non-reentrant model
  8293 ;;
  8294                           
  8295                           
  8296                           ;psect for function _USBCtrlEPAllowStatusStage
  8297  0A9A                     _USBCtrlEPAllowStatusStage:	
  8298                           
  8299                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
  8300                           
  8301                           ;incstack = 0
  8302                           ; Regs used in _USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
  8303  0A9A  0023               	movlb	3	; select bank3
  8304  0A9B  085A               	movf	_USBStatusStageEnabledFlag1^(0+384),w	;volatile
  8305  0A9C  1D03               	btfss	3,2
  8306  0A9D  0008               	return
  8307                           
  8308                           ;usb_device.c: 1424: {
  8309                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
  8310  0A9E  3001               	movlw	1
  8311  0A9F  0021               	movlb	1	; select bank1
  8312  0AA0  00A6               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  8313  0AA1  0826               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  8314  0AA2  0023               	movlb	3	; select bank3
  8315  0AA3  00DA               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  8316                           
  8317                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
  8318  0AA4  0859               	movf	_USBStatusStageEnabledFlag2^(0+384),w	;volatile
  8319  0AA5  1D03               	btfss	3,2
  8320  0AA6  0008               	return
  8321                           
  8322                           ;usb_device.c: 1427: {
  8323                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
  8324  0AA7  3001               	movlw	1
  8325  0AA8  0021               	movlb	1	; select bank1
  8326  0AA9  00A6               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  8327  0AAA  0826               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  8328  0AAB  0023               	movlb	3	; select bank3
  8329  0AAC  00D9               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  8330                           
  8331                           ;usb_device.c: 1432: if(controlTransferState == 2)
  8332  0AAD  3002               	movlw	2
  8333  0AAE  0662               	xorwf	_controlTransferState^(0+384),w	;volatile
  8334  0AAF  1D03               	btfss	3,2
  8335  0AB0  2AC3               	goto	l7590
  8336                           
  8337                           ;usb_device.c: 1433: {
  8338                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
  8339  0AB1  0837               	movf	_pBDTEntryIn^(0+384),w
  8340  0AB2  0086               	movwf	6
  8341  0AB3  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  8342  0AB4  0087               	movwf	7
  8343  0AB5  3141               	addfsr 1,1
  8344  0AB6  0181               	clrf	1
  8345                           
  8346                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  8347  0AB7  0837               	movf	_pBDTEntryIn^(0+384),w
  8348  0AB8  0086               	movwf	6
  8349  0AB9  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  8350  0ABA  0087               	movwf	7
  8351  0ABB  3048               	movlw	72
  8352  0ABC  0081               	movwf	1
  8353                           
  8354                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
  8355  0ABD  0837               	movf	_pBDTEntryIn^(0+384),w
  8356  0ABE  0086               	movwf	6
  8357  0ABF  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  8358  0AC0  0087               	movwf	7
  8359  0AC1  1781               	bsf	1,7
  8360                           
  8361                           ;usb_device.c: 1437: }
  8362  0AC2  0008               	return
  8363  0AC3                     l7590:	
  8364                           
  8365                           ;usb_device.c: 1438: else if(controlTransferState == 1)
  8366  0AC3  0362               	decf	_controlTransferState^(0+384),w	;volatile
  8367  0AC4  1D03               	btfss	3,2
  8368  0AC5  0008               	return
  8369                           
  8370                           ;usb_device.c: 1439: {
  8371                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
  8372  0AC6  01DD               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  8373                           
  8374                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
  8375  0AC7  3008               	movlw	8
  8376  0AC8  0021               	movlb	1	; select bank1
  8377  0AC9  00A6               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  8378  0ACA  0023               	movlb	3	; select bank3
  8379  0ACB  0A64               	incf	_pBDTEntryEP0OutCurrent^(0+384),w
  8380  0ACC  0086               	movwf	6
  8381  0ACD  0187               	clrf	7
  8382  0ACE  0021               	movlb	1	; select bank1
  8383  0ACF  0826               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  8384  0AD0  0081               	movwf	1
  8385                           
  8386                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  8387  0AD1  3050               	movlw	80
  8388  0AD2  00A6               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  8389  0AD3  3000               	movlw	0
  8390  0AD4  00A7               	movwf	(??_USBCtrlEPAllowStatusStage^(0+128)+1)
  8391  0AD5  0023               	movlb	3	; select bank3
  8392  0AD6  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  8393  0AD7  3E02               	addlw	2
  8394  0AD8  0086               	movwf	6
  8395  0AD9  0187               	clrf	7
  8396  0ADA  0021               	movlb	1	; select bank1
  8397  0ADB  0826               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  8398  0ADC  3FC0               	movwi [0]fsr1
  8399  0ADD  0827               	movf	(??_USBCtrlEPAllowStatusStage^(0+128)+1),w
  8400  0ADE  3FC1               	movwi [1]fsr1
  8401                           
  8402                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
  8403  0ADF  3004               	movlw	4
  8404  0AE0  00A6               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  8405  0AE1  0023               	movlb	3	; select bank3
  8406  0AE2  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  8407  0AE3  0086               	movwf	6
  8408  0AE4  0187               	clrf	7
  8409  0AE5  0021               	movlb	1	; select bank1
  8410  0AE6  0826               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  8411  0AE7  0081               	movwf	1
  8412                           
  8413                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  8414  0AE8  0023               	movlb	3	; select bank3
  8415  0AE9  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  8416  0AEA  0086               	movwf	6
  8417  0AEB  0187               	clrf	7
  8418  0AEC  1781               	bsf	1,7
  8419                           
  8420                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
  8421  0AED  3001               	movlw	1
  8422  0AEE  0021               	movlb	1	; select bank1
  8423  0AEF  00A6               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  8424  0AF0  0826               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  8425  0AF1  0023               	movlb	3	; select bank3
  8426  0AF2  00DD               	movwf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  8427                           
  8428                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
  8429  0AF3  0021               	movlb	1	; select bank1
  8430  0AF4  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8431  0AF5  3E01               	addlw	1
  8432  0AF6  00A6               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  8433  0AF7  3000               	movlw	0
  8434  0AF8  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8435  0AF9  00A7               	movwf	(??_USBCtrlEPAllowStatusStage+1)^(0+128)
  8436  0AFA  0826               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  8437  0AFB  0086               	movwf	6
  8438  0AFC  0827               	movf	(??_USBCtrlEPAllowStatusStage+1)^(0+128),w
  8439  0AFD  0087               	movwf	7
  8440  0AFE  3008               	movlw	8
  8441  0AFF  0081               	movwf	1
  8442                           
  8443                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  8444  0B00  3050               	movlw	80
  8445  0B01  00A6               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  8446  0B02  3000               	movlw	0
  8447  0B03  00A7               	movwf	(??_USBCtrlEPAllowStatusStage^(0+128)+1)
  8448  0B04  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8449  0B05  0086               	movwf	6
  8450  0B06  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8451  0B07  0087               	movwf	7
  8452  0B08  3142               	addfsr 1,2
  8453  0B09  0826               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  8454  0B0A  3FC0               	movwi [0]fsr1
  8455  0B0B  0827               	movf	(??_USBCtrlEPAllowStatusStage^(0+128)+1),w
  8456  0B0C  3FC1               	movwi [1]fsr1
  8457                           
  8458                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
  8459  0B0D  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8460  0B0E  0086               	movwf	6
  8461  0B0F  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8462  0B10  0087               	movwf	7
  8463  0B11  3080               	movlw	128
  8464  0B12  0081               	movwf	1
  8465  0B13  0008               	return
  8466  0B14                     __end_of_USBCtrlEPAllowStatusStage:	
  8467                           
  8468                           	psect	text32
  8469  093B                     __ptext32:	
  8470 ;; *************** function _USBCtrlTrfInHandler *****************
  8471 ;; Defined at:
  8472 ;;		line 2592 in file "mcc_generated_files/usb/usb_device.c"
  8473 ;; Parameters:    Size  Location     Type
  8474 ;;		None
  8475 ;; Auto vars:     Size  Location     Type
  8476 ;;  lastDTS         1   11[BANK1 ] unsigned char 
  8477 ;; Return value:  Size  Location     Type
  8478 ;;                  1    wreg      void 
  8479 ;; Registers used:
  8480 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8481 ;; Tracked objects:
  8482 ;;		On entry : 0/0
  8483 ;;		On exit  : 0/0
  8484 ;;		Unchanged: 0/0
  8485 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8487 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8488 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8489 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8490 ;;Total ram usage:        3 bytes
  8491 ;; Hardware stack levels used:    1
  8492 ;; Hardware stack levels required when called:   11
  8493 ;; This function calls:
  8494 ;;		_USBCtrlTrfTxService
  8495 ;; This function is called by:
  8496 ;;		_USBCtrlEPService
  8497 ;; This function uses a non-reentrant model
  8498 ;;
  8499                           
  8500                           
  8501                           ;psect for function _USBCtrlTrfInHandler
  8502  093B                     _USBCtrlTrfInHandler:	
  8503                           
  8504                           ;usb_device.c: 2594: uint8_t lastDTS;
  8505                           ;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  8506                           
  8507                           ;incstack = 0
  8508                           ; Regs used in _USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8509  093B  0023               	movlb	3	; select bank3
  8510  093C  0837               	movf	_pBDTEntryIn^(0+384),w
  8511  093D  0086               	movwf	6
  8512  093E  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  8513  093F  0087               	movwf	7
  8514  0940  3000               	movlw	0
  8515  0941  1B01               	btfsc	1,6
  8516  0942  3001               	movlw	1
  8517  0943  0021               	movlb	1	; select bank1
  8518  0944  00AB               	movwf	USBCtrlTrfInHandler@lastDTS^(0+128)
  8519                           
  8520                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  8521  0945  3004               	movlw	4
  8522  0946  0023               	movlb	3	; select bank3
  8523  0947  0637               	xorwf	_pBDTEntryIn^(0+384),w
  8524  0948  00B7               	movwf	_pBDTEntryIn^(0+384)
  8525  0949  3000               	movlw	0
  8526  094A  0638               	xorwf	(_pBDTEntryIn+1)^(0+384),w
  8527  094B  00B8               	movwf	(_pBDTEntryIn+1)^(0+384)
  8528                           
  8529                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
  8530  094C  3008               	movlw	8
  8531  094D  0665               	xorwf	_USBDeviceState^(0+384),w	;volatile
  8532  094E  1D03               	btfss	3,2
  8533  094F  2960               	goto	l8028
  8534                           
  8535                           ;usb_device.c: 2605: {
  8536                           ;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
  8537  0950  0020               	movlb	0	; select bank0
  8538  0951  0852               	movf	82,w	;volatile
  8539  0952  397F               	andlw	127
  8540  0953  003D               	movlb	29	; select bank29
  8541  0954  0096               	movwf	22	;volatile
  8542                           
  8543                           ;usb_device.c: 2607: if(UADDR != 0u)
  8544  0955  0816               	movf	22,w	;volatile
  8545  0956  1903               	btfsc	3,2
  8546  0957  295A               	goto	l8026
  8547                           
  8548                           ;usb_device.c: 2608: {
  8549                           ;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
  8550  0958  3010               	movlw	16
  8551  0959  295B               	goto	L7
  8552  095A                     l8026:	
  8553                           ;usb_device.c: 2610: }
  8554                           
  8555                           
  8556                           ;usb_device.c: 2611: else
  8557                           ;usb_device.c: 2612: {
  8558                           ;usb_device.c: 2613: USBDeviceState=DEFAULT_STATE;
  8559  095A  3004               	movlw	4
  8560  095B                     L7:	
  8561  095B  0021               	movlb	1	; select bank1
  8562  095C  00A9               	movwf	??_USBCtrlTrfInHandler^(0+128)
  8563  095D  0829               	movf	??_USBCtrlTrfInHandler^(0+128),w
  8564  095E  0023               	movlb	3	; select bank3
  8565  095F  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
  8566  0960                     l8028:	
  8567                           
  8568                           ;usb_device.c: 2614: }
  8569                           ;usb_device.c: 2615: }
  8570                           ;usb_device.c: 2618: if(controlTransferState == 1)
  8571  0960  0362               	decf	_controlTransferState^(0+384),w	;volatile
  8572  0961  1D03               	btfss	3,2
  8573  0962  29A5               	goto	l580
  8574                           
  8575                           ;usb_device.c: 2619: {
  8576                           ;usb_device.c: 2620: pBDTEntryIn[0]->ADR = (((uint16_t)(CtrlTrfData)) & 0x7FFF);
  8577  0963  3058               	movlw	88
  8578  0964  0021               	movlb	1	; select bank1
  8579  0965  00A9               	movwf	??_USBCtrlTrfInHandler^(0+128)
  8580  0966  3000               	movlw	0
  8581  0967  00AA               	movwf	(??_USBCtrlTrfInHandler^(0+128)+1)
  8582  0968  0023               	movlb	3	; select bank3
  8583  0969  0837               	movf	_pBDTEntryIn^(0+384),w
  8584  096A  0086               	movwf	6
  8585  096B  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  8586  096C  0087               	movwf	7
  8587  096D  3142               	addfsr 1,2
  8588  096E  0021               	movlb	1	; select bank1
  8589  096F  0829               	movf	??_USBCtrlTrfInHandler^(0+128),w
  8590  0970  3FC0               	movwi [0]fsr1
  8591  0971  082A               	movf	(??_USBCtrlTrfInHandler^(0+128)+1),w
  8592  0972  3FC1               	movwi [1]fsr1
  8593                           
  8594                           ;usb_device.c: 2621: USBCtrlTrfTxService();
  8595  0973  318A  2220  3189   	fcall	_USBCtrlTrfTxService
  8596                           
  8597                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
  8598  0976  3002               	movlw	2
  8599  0977  0023               	movlb	3	; select bank3
  8600  0978  0663               	xorwf	_shortPacketStatus^(0+384),w	;volatile
  8601  0979  1D03               	btfss	3,2
  8602  097A  2987               	goto	l8038
  8603                           
  8604                           ;usb_device.c: 2628: {
  8605                           ;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
  8606  097B  0837               	movf	_pBDTEntryIn^(0+384),w
  8607  097C  0086               	movwf	6
  8608  097D  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  8609  097E  0087               	movwf	7
  8610  097F  3004               	movlw	4
  8611  0980  0081               	movwf	1
  8612                           
  8613                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
  8614  0981  0837               	movf	_pBDTEntryIn^(0+384),w
  8615  0982  0086               	movwf	6
  8616  0983  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  8617  0984  0087               	movwf	7
  8618  0985  1781               	bsf	1,7
  8619                           
  8620                           ;usb_device.c: 2633: }
  8621  0986  0008               	return
  8622  0987                     l8038:	
  8623                           
  8624                           ;usb_device.c: 2634: else
  8625                           ;usb_device.c: 2635: {
  8626                           ;usb_device.c: 2636: if(lastDTS == 0)
  8627  0987  0021               	movlb	1	; select bank1
  8628  0988  082B               	movf	USBCtrlTrfInHandler@lastDTS^(0+128),w
  8629  0989  1D03               	btfss	3,2
  8630  098A  2998               	goto	l8042
  8631                           
  8632                           ;usb_device.c: 2637: {
  8633                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  8634  098B  0023               	movlb	3	; select bank3
  8635  098C  0837               	movf	_pBDTEntryIn^(0+384),w
  8636  098D  0086               	movwf	6
  8637  098E  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  8638  098F  0087               	movwf	7
  8639  0990  3048               	movlw	72
  8640  0991  0081               	movwf	1
  8641                           
  8642                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
  8643  0992  0837               	movf	_pBDTEntryIn^(0+384),w
  8644  0993  0086               	movwf	6
  8645  0994  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  8646  0995  0087               	movwf	7
  8647  0996  1781               	bsf	1,7
  8648                           
  8649                           ;usb_device.c: 2640: }
  8650  0997  0008               	return
  8651  0998                     l8042:	
  8652                           
  8653                           ;usb_device.c: 2641: else
  8654                           ;usb_device.c: 2642: {
  8655                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
  8656  0998  0023               	movlb	3	; select bank3
  8657  0999  0837               	movf	_pBDTEntryIn^(0+384),w
  8658  099A  0086               	movwf	6
  8659  099B  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  8660  099C  0087               	movwf	7
  8661  099D  3008               	movlw	8
  8662  099E  0081               	movwf	1
  8663                           
  8664                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
  8665  099F  0837               	movf	_pBDTEntryIn^(0+384),w
  8666  09A0  0086               	movwf	6
  8667  09A1  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  8668  09A2  0087               	movwf	7
  8669  09A3  1781               	bsf	1,7
  8670                           
  8671                           ;usb_device.c: 2645: }
  8672                           ;usb_device.c: 2646: }
  8673                           ;usb_device.c: 2647: }
  8674  09A4  0008               	return
  8675  09A5                     l580:	
  8676                           
  8677                           ;usb_device.c: 2648: else
  8678                           ;usb_device.c: 2649: {
  8679                           ;usb_device.c: 2653: if(outPipes[0].info.bits.busy == 1)
  8680  09A5  1FB2               	btfss	(_outPipes^(0+384)+2),7	;volatile
  8681  09A6  29AA               	goto	l8046
  8682                           
  8683                           ;usb_device.c: 2656: {
  8684                           ;usb_device.c: 2657: outPipes[0].pFunc();
  8685  09A7  0835               	movf	(low ((_outPipes| (0+256)+5)))^(0+128),w	;volatile
  8686  09A8  0836               	movf	((low ((_outPipes| (0+256)+5))+1))^(0+128),w	;volatile
  8687                           
  8688                           ;usb_device.c: 2658: }
  8689                           ;usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
  8690  09A9  13B2               	bcf	(_outPipes^(0+384)+2),7	;volatile
  8691  09AA                     l8046:	
  8692                           
  8693                           ;usb_device.c: 2660: }
  8694                           ;usb_device.c: 2662: controlTransferState = 0;
  8695  09AA  01E2               	clrf	_controlTransferState^(0+384)	;volatile
  8696  09AB  0008               	return
  8697  09AC                     __end_of_USBCtrlTrfInHandler:	
  8698                           
  8699                           	psect	text33
  8700  0A20                     __ptext33:	
  8701 ;; *************** function _USBCtrlTrfTxService *****************
  8702 ;; Defined at:
  8703 ;;		line 1771 in file "mcc_generated_files/usb/usb_device.c"
  8704 ;; Parameters:    Size  Location     Type
  8705 ;;		None
  8706 ;; Auto vars:     Size  Location     Type
  8707 ;;  byteToSend      1    8[BANK1 ] unsigned char 
  8708 ;; Return value:  Size  Location     Type
  8709 ;;                  1    wreg      void 
  8710 ;; Registers used:
  8711 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  8712 ;; Tracked objects:
  8713 ;;		On entry : 0/0
  8714 ;;		On exit  : 0/0
  8715 ;;		Unchanged: 0/0
  8716 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8718 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8719 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8720 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8721 ;;Total ram usage:        3 bytes
  8722 ;; Hardware stack levels used:    1
  8723 ;; Hardware stack levels required when called:   10
  8724 ;; This function calls:
  8725 ;;		Nothing
  8726 ;; This function is called by:
  8727 ;;		_USBCtrlEPAllowDataStage
  8728 ;;		_USBCtrlTrfInHandler
  8729 ;; This function uses a non-reentrant model
  8730 ;;
  8731                           
  8732                           
  8733                           ;psect for function _USBCtrlTrfTxService
  8734  0A20                     _USBCtrlTrfTxService:	
  8735                           
  8736                           ;usb_device.c: 1773: uint8_t byteToSend;
  8737                           ;usb_device.c: 1777: byteToSend = 8;
  8738                           
  8739                           ;incstack = 0
  8740                           ; Regs used in _USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
  8741  0A20  3008               	movlw	8
  8742  0A21  0021               	movlb	1	; select bank1
  8743  0A22  00A6               	movwf	??_USBCtrlTrfTxService^(0+128)
  8744  0A23  0826               	movf	??_USBCtrlTrfTxService^(0+128),w
  8745  0A24  00A8               	movwf	USBCtrlTrfTxService@byteToSend^(0+128)
  8746                           
  8747                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
  8748  0A25  3000               	movlw	0
  8749  0A26  0247               	subwf	((_inPipes+1)^(0+128)+3),w	;volatile
  8750  0A27  3008               	movlw	8
  8751  0A28  1903               	skipnz
  8752  0A29  0246               	subwf	(_inPipes^(0+128)+3),w	;volatile
  8753  0A2A  1803               	skipnc
  8754  0A2B  2A3F               	goto	l480
  8755                           
  8756                           ;usb_device.c: 1779: {
  8757                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
  8758  0A2C  0846               	movf	(_inPipes^(0+128)+3),w	;volatile
  8759  0A2D  00A6               	movwf	??_USBCtrlTrfTxService^(0+128)
  8760  0A2E  0826               	movf	??_USBCtrlTrfTxService^(0+128),w
  8761  0A2F  00A8               	movwf	USBCtrlTrfTxService@byteToSend^(0+128)
  8762                           
  8763                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
  8764  0A30  0023               	movlb	3	; select bank3
  8765  0A31  0863               	movf	_shortPacketStatus^(0+384),w	;volatile
  8766  0A32  1D03               	btfss	3,2
  8767  0A33  2A36               	goto	l7534
  8768                           
  8769                           ;usb_device.c: 1788: {
  8770                           ;usb_device.c: 1789: shortPacketStatus = 1;
  8771  0A34  3001               	movlw	1
  8772  0A35  2A3A               	goto	L8
  8773  0A36                     l7534:	
  8774                           ;usb_device.c: 1790: }
  8775                           
  8776                           
  8777                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
  8778  0A36  0363               	decf	_shortPacketStatus^(0+384),w	;volatile
  8779  0A37  1D03               	btfss	3,2
  8780  0A38  2A3F               	goto	l480
  8781                           
  8782                           ;usb_device.c: 1792: {
  8783                           ;usb_device.c: 1793: shortPacketStatus = 2;
  8784  0A39  3002               	movlw	2
  8785  0A3A                     L8:	
  8786  0A3A  0021               	movlb	1	; select bank1
  8787  0A3B  00A6               	movwf	??_USBCtrlTrfTxService^(0+128)
  8788  0A3C  0826               	movf	??_USBCtrlTrfTxService^(0+128),w
  8789  0A3D  0023               	movlb	3	; select bank3
  8790  0A3E  00E3               	movwf	_shortPacketStatus^(0+384)	;volatile
  8791  0A3F                     l480:	
  8792                           
  8793                           ;usb_device.c: 1794: }
  8794                           ;usb_device.c: 1795: }
  8795                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
  8796  0A3F  0021               	movlb	1	; select bank1
  8797  0A40  0828               	movf	USBCtrlTrfTxService@byteToSend^(0+128),w
  8798  0A41  00A6               	movwf	??_USBCtrlTrfTxService^(0+128)
  8799  0A42  01A7               	clrf	(??_USBCtrlTrfTxService^(0+128)+1)
  8800  0A43  0826               	movf	??_USBCtrlTrfTxService^(0+128),w
  8801  0A44  02C6               	subwf	(_inPipes^(0+128)+3),f	;volatile
  8802  0A45  0827               	movf	(??_USBCtrlTrfTxService+1)^(0+128),w
  8803  0A46  3BC7               	subwfb	((_inPipes+1)^(0+128)+3),f	;volatile
  8804                           
  8805                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
  8806  0A47  0023               	movlb	3	; select bank3
  8807  0A48  0837               	movf	_pBDTEntryIn^(0+384),w
  8808  0A49  3E01               	addlw	1
  8809  0A4A  0021               	movlb	1	; select bank1
  8810  0A4B  00A6               	movwf	??_USBCtrlTrfTxService^(0+128)
  8811  0A4C  3000               	movlw	0
  8812  0A4D  0023               	movlb	3	; select bank3
  8813  0A4E  3D38               	addwfc	(_pBDTEntryIn+1)^(0+384),w
  8814  0A4F  0021               	movlb	1	; select bank1
  8815  0A50  00A7               	movwf	(??_USBCtrlTrfTxService+1)^(0+128)
  8816  0A51  0826               	movf	??_USBCtrlTrfTxService^(0+128),w
  8817  0A52  0086               	movwf	6
  8818  0A53  0827               	movf	(??_USBCtrlTrfTxService+1)^(0+128),w
  8819  0A54  0087               	movwf	7
  8820  0A55  0828               	movf	USBCtrlTrfTxService@byteToSend^(0+128),w
  8821  0A56  0081               	movwf	1
  8822                           
  8823                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
  8824  0A57  3058               	movlw	88
  8825  0A58  00A6               	movwf	??_USBCtrlTrfTxService^(0+128)
  8826  0A59  0826               	movf	??_USBCtrlTrfTxService^(0+128),w
  8827  0A5A  0023               	movlb	3	; select bank3
  8828  0A5B  00E1               	movwf	_pDst^(0+384)
  8829                           
  8830                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
  8831  0A5C  0021               	movlb	1	; select bank1
  8832  0A5D  1C45               	btfss	(_inPipes^(0+128)+2),0	;volatile
  8833  0A5E  2A79               	goto	l7554
  8834  0A5F  2A96               	goto	l7564
  8835  0A60                     l7546:	
  8836                           ;usb_device.c: 1810: {
  8837                           ;usb_device.c: 1811: while(byteToSend)
  8838                           
  8839                           
  8840                           ;usb_device.c: 1812: {
  8841                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
  8842  0A60  0843               	movf	_inPipes^(0+128),w	;volatile
  8843  0A61  0084               	movwf	4
  8844  0A62  0844               	movf	(_inPipes+1)^(0+128),w	;volatile
  8845  0A63  0085               	movwf	5
  8846  0A64  0800               	movf	0,w	;code access
  8847  0A65  00A6               	movwf	??_USBCtrlTrfTxService^(0+128)
  8848  0A66  0023               	movlb	3	; select bank3
  8849  0A67  0861               	movf	_pDst^(0+384),w
  8850  0A68  0086               	movwf	6
  8851  0A69  0187               	clrf	7
  8852  0A6A  0021               	movlb	1	; select bank1
  8853  0A6B  0826               	movf	??_USBCtrlTrfTxService^(0+128),w
  8854  0A6C  0081               	movwf	1
  8855  0A6D  3001               	movlw	1
  8856  0A6E  07C3               	addwf	_inPipes^(0+128),f	;volatile
  8857  0A6F  3000               	movlw	0
  8858  0A70  3DC4               	addwfc	(_inPipes+1)^(0+128),f	;volatile
  8859  0A71  3001               	movlw	1
  8860  0A72  00A6               	movwf	??_USBCtrlTrfTxService^(0+128)
  8861  0A73  0826               	movf	??_USBCtrlTrfTxService^(0+128),w
  8862  0A74  0023               	movlb	3	; select bank3
  8863  0A75  07E1               	addwf	_pDst^(0+384),f
  8864                           
  8865                           ;usb_device.c: 1814: byteToSend--;
  8866  0A76  3001               	movlw	1
  8867  0A77  0021               	movlb	1	; select bank1
  8868  0A78  02A8               	subwf	USBCtrlTrfTxService@byteToSend^(0+128),f
  8869  0A79                     l7554:	
  8870  0A79  0828               	movf	USBCtrlTrfTxService@byteToSend^(0+128),w
  8871  0A7A  1903               	btfsc	3,2
  8872  0A7B  0008               	return
  8873  0A7C  2A60               	goto	l7546
  8874  0A7D                     l7556:	
  8875                           ;usb_device.c: 1817: else
  8876                           ;usb_device.c: 1818: {
  8877                           ;usb_device.c: 1819: while(byteToSend)
  8878                           
  8879                           ;usb_device.c: 1815: }
  8880                           ;usb_device.c: 1816: }
  8881                           
  8882                           
  8883                           ;usb_device.c: 1820: {
  8884                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
  8885  0A7D  0843               	movf	_inPipes^(0+128),w	;volatile
  8886  0A7E  0084               	movwf	4
  8887  0A7F  0844               	movf	(_inPipes+1)^(0+128),w	;volatile
  8888  0A80  0085               	movwf	5
  8889  0A81  0800               	movf	0,w	;code access
  8890  0A82  00A6               	movwf	??_USBCtrlTrfTxService^(0+128)
  8891  0A83  0023               	movlb	3	; select bank3
  8892  0A84  0861               	movf	_pDst^(0+384),w
  8893  0A85  0086               	movwf	6
  8894  0A86  0187               	clrf	7
  8895  0A87  0021               	movlb	1	; select bank1
  8896  0A88  0826               	movf	??_USBCtrlTrfTxService^(0+128),w
  8897  0A89  0081               	movwf	1
  8898  0A8A  3001               	movlw	1
  8899  0A8B  07C3               	addwf	_inPipes^(0+128),f	;volatile
  8900  0A8C  3000               	movlw	0
  8901  0A8D  3DC4               	addwfc	(_inPipes+1)^(0+128),f	;volatile
  8902  0A8E  3001               	movlw	1
  8903  0A8F  00A6               	movwf	??_USBCtrlTrfTxService^(0+128)
  8904  0A90  0826               	movf	??_USBCtrlTrfTxService^(0+128),w
  8905  0A91  0023               	movlb	3	; select bank3
  8906  0A92  07E1               	addwf	_pDst^(0+384),f
  8907                           
  8908                           ;usb_device.c: 1822: byteToSend--;
  8909  0A93  3001               	movlw	1
  8910  0A94  0021               	movlb	1	; select bank1
  8911  0A95  02A8               	subwf	USBCtrlTrfTxService@byteToSend^(0+128),f
  8912  0A96                     l7564:	
  8913  0A96  0828               	movf	USBCtrlTrfTxService@byteToSend^(0+128),w
  8914  0A97  1903               	btfsc	3,2
  8915  0A98  0008               	return
  8916  0A99  2A7D               	goto	l7556
  8917  0A9A                     __end_of_USBCtrlTrfTxService:	
  8918                           
  8919                           	psect	text34
  8920  1DEF                     __ptext34:	
  8921 ;; *************** function _SYSTEM_Initialize *****************
  8922 ;; Defined at:
  8923 ;;		line 73 in file "mcc_generated_files/mcc.c"
  8924 ;; Parameters:    Size  Location     Type
  8925 ;;		None
  8926 ;; Auto vars:     Size  Location     Type
  8927 ;;		None
  8928 ;; Return value:  Size  Location     Type
  8929 ;;                  1    wreg      void 
  8930 ;; Registers used:
  8931 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8932 ;; Tracked objects:
  8933 ;;		On entry : 0/0
  8934 ;;		On exit  : 0/0
  8935 ;;		Unchanged: 0/0
  8936 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8941 ;;Total ram usage:        0 bytes
  8942 ;; Hardware stack levels used:    1
  8943 ;; Hardware stack levels required when called:   11
  8944 ;; This function calls:
  8945 ;;		_EUSART_Initialize
  8946 ;;		_OSCILLATOR_Initialize
  8947 ;;		_PIN_MANAGER_Initialize
  8948 ;;		_USBDeviceAttach
  8949 ;;		_USBDeviceInit
  8950 ;;		_WDT_Initialize
  8951 ;; This function is called by:
  8952 ;;		_main
  8953 ;; This function uses a non-reentrant model
  8954 ;;
  8955                           
  8956                           
  8957                           ;psect for function _SYSTEM_Initialize
  8958  1DEF                     _SYSTEM_Initialize:	
  8959                           
  8960                           ;mcc.c: 76: PIN_MANAGER_Initialize();
  8961                           
  8962                           ;incstack = 0
  8963                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8964  1DEF  319E  2601  319D   	fcall	_PIN_MANAGER_Initialize
  8965                           
  8966                           ;mcc.c: 77: OSCILLATOR_Initialize();
  8967  1DF2  319D  258B  319D   	fcall	_OSCILLATOR_Initialize
  8968                           
  8969                           ;mcc.c: 78: WDT_Initialize();
  8970  1DF5  319D  253D  319D   	fcall	_WDT_Initialize
  8971                           
  8972                           ;mcc.c: 79: USBDeviceInit();
  8973  1DF8  3185  257E  319D   	fcall	_USBDeviceInit
  8974                           
  8975                           ;mcc.c: 80: USBDeviceAttach();
  8976  1DFB  319E  26C3  319D   	fcall	_USBDeviceAttach
  8977                           
  8978                           ;mcc.c: 81: EUSART_Initialize();
  8979  1DFE  319D  257F         	fcall	_EUSART_Initialize
  8980  1E00  0008               	return
  8981  1E01                     __end_of_SYSTEM_Initialize:	
  8982                           
  8983                           	psect	text35
  8984  1D3D                     __ptext35:	
  8985 ;; *************** function _WDT_Initialize *****************
  8986 ;; Defined at:
  8987 ;;		line 100 in file "mcc_generated_files/mcc.c"
  8988 ;; Parameters:    Size  Location     Type
  8989 ;;		None
  8990 ;; Auto vars:     Size  Location     Type
  8991 ;;		None
  8992 ;; Return value:  Size  Location     Type
  8993 ;;                  1    wreg      void 
  8994 ;; Registers used:
  8995 ;;		wreg
  8996 ;; Tracked objects:
  8997 ;;		On entry : 0/0
  8998 ;;		On exit  : 0/0
  8999 ;;		Unchanged: 0/0
  9000 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9005 ;;Total ram usage:        0 bytes
  9006 ;; Hardware stack levels used:    1
  9007 ;; Hardware stack levels required when called:   10
  9008 ;; This function calls:
  9009 ;;		Nothing
  9010 ;; This function is called by:
  9011 ;;		_SYSTEM_Initialize
  9012 ;; This function uses a non-reentrant model
  9013 ;;
  9014                           
  9015                           
  9016                           ;psect for function _WDT_Initialize
  9017  1D3D                     _WDT_Initialize:	
  9018                           
  9019                           ;mcc.c: 103: WDTCON = 0x16;
  9020                           
  9021                           ;incstack = 0
  9022                           ; Regs used in _WDT_Initialize: [wreg]
  9023  1D3D  3016               	movlw	22
  9024  1D3E  0021               	movlb	1	; select bank1
  9025  1D3F  0097               	movwf	23	;volatile
  9026  1D40  0008               	return
  9027  1D41                     __end_of_WDT_Initialize:	
  9028                           
  9029                           	psect	text36
  9030  057E                     __ptext36:	
  9031 ;; *************** function _USBDeviceInit *****************
  9032 ;; Defined at:
  9033 ;;		line 277 in file "mcc_generated_files/usb/usb_device.c"
  9034 ;; Parameters:    Size  Location     Type
  9035 ;;		None
  9036 ;; Auto vars:     Size  Location     Type
  9037 ;;  p               2    7[BANK1 ] PTR unsigned char 
  9038 ;;		 -> UEP1(1), 
  9039 ;;  i               1    9[BANK1 ] unsigned char 
  9040 ;;  i               1   10[BANK1 ] unsigned char 
  9041 ;; Return value:  Size  Location     Type
  9042 ;;                  1    wreg      void 
  9043 ;; Registers used:
  9044 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9045 ;; Tracked objects:
  9046 ;;		On entry : 0/0
  9047 ;;		On exit  : 0/0
  9048 ;;		Unchanged: 0/0
  9049 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9051 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9052 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9053 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  9054 ;;Total ram usage:        5 bytes
  9055 ;; Hardware stack levels used:    1
  9056 ;; Hardware stack levels required when called:   10
  9057 ;; This function calls:
  9058 ;;		Nothing
  9059 ;; This function is called by:
  9060 ;;		_SYSTEM_Initialize
  9061 ;;		_USBDeviceTasks
  9062 ;; This function uses a non-reentrant model
  9063 ;;
  9064                           
  9065                           
  9066                           ;psect for function _USBDeviceInit
  9067  057E                     _USBDeviceInit:	
  9068                           
  9069                           ;usb_device.c: 279: uint8_t i;
  9070                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  9071                           
  9072                           ;incstack = 0
  9073                           ; Regs used in _USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  9074  057E  0021               	movlb	1	; select bank1
  9075  057F  1112               	bcf	18,2	;volatile
  9076                           
  9077                           ;usb_device.c: 285: ;
  9078                           ;usb_device.c: 288: {UEIR = 0;};
  9079  0580  003D               	movlb	29	; select bank29
  9080  0581  0193               	clrf	19	;volatile
  9081                           
  9082                           ;usb_device.c: 291: {UIR = 0;};
  9083  0582  0190               	clrf	16	;volatile
  9084                           
  9085                           ;usb_device.c: 294: UEP0 = 0;
  9086  0583  0198               	clrf	24	;volatile
  9087                           
  9088                           ;usb_device.c: 296: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 0
      +                          ; };
  9089  0584  300E               	movlw	14
  9090  0585  0021               	movlb	1	; select bank1
  9091  0586  00A8               	movwf	(USBDeviceInit@p+1)^(0+128)
  9092  0587  3099               	movlw	153
  9093  0588  00A7               	movwf	USBDeviceInit@p^(0+128)
  9094  0589  01A9               	clrf	USBDeviceInit@i_1495^(0+128)
  9095  058A  3002               	movlw	2
  9096  058B  0229               	subwf	USBDeviceInit@i_1495^(0+128),w
  9097  058C  1803               	btfsc	3,0
  9098  058D  2D9F               	goto	l8066
  9099  058E                     l8058:	
  9100  058E  0827               	movf	USBDeviceInit@p^(0+128),w
  9101  058F  0086               	movwf	6
  9102  0590  0828               	movf	(USBDeviceInit@p+1)^(0+128),w
  9103  0591  0087               	movwf	7
  9104  0592  0181               	clrf	1
  9105  0593  3001               	movlw	1
  9106  0594  07A7               	addwf	USBDeviceInit@p^(0+128),f
  9107  0595  3000               	movlw	0
  9108  0596  3DA8               	addwfc	(USBDeviceInit@p+1)^(0+128),f
  9109  0597  3001               	movlw	1
  9110  0598  00A6               	movwf	??_USBDeviceInit^(0+128)
  9111  0599  0826               	movf	??_USBDeviceInit^(0+128),w
  9112  059A  07A9               	addwf	USBDeviceInit@i_1495^(0+128),f
  9113  059B  3002               	movlw	2
  9114  059C  0229               	subwf	USBDeviceInit@i_1495^(0+128),w
  9115  059D  1C03               	skipc
  9116  059E  2D8E               	goto	l8058
  9117  059F                     l8066:	
  9118                           
  9119                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  9120  059F  3016               	movlw	22
  9121  05A0  003D               	movlb	29	; select bank29
  9122  05A1  0091               	movwf	17	;volatile
  9123  05A2  309F               	movlw	159
  9124  05A3  0097               	movwf	23	;volatile
  9125  05A4  307B               	movlw	123
  9126  05A5  0092               	movwf	18	;volatile
  9127                           
  9128                           ;usb_device.c: 301: ;
  9129                           ;usb_device.c: 304: ;
  9130                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  9131  05A6  0021               	movlb	1	; select bank1
  9132  05A7  01AA               	clrf	USBDeviceInit@i^(0+128)
  9133  05A8  300C               	movlw	12
  9134  05A9  022A               	subwf	USBDeviceInit@i^(0+128),w
  9135  05AA  1803               	btfsc	3,0
  9136  05AB  2DC5               	goto	l382
  9137  05AC                     l8074:	
  9138                           
  9139                           ;usb_device.c: 308: {
  9140                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  9141  05AC  082A               	movf	USBDeviceInit@i^(0+128),w
  9142  05AD  00A6               	movwf	??_USBDeviceInit^(0+128)
  9143  05AE  3001               	movlw	1
  9144  05AF                     u7565:	
  9145  05AF  35A6               	lslf	??_USBDeviceInit^(0+128),f
  9146  05B0  3EFF               	addlw	-1
  9147  05B1  1D03               	skipz
  9148  05B2  2DAF               	goto	u7565
  9149  05B3  3526               	lslf	??_USBDeviceInit^(0+128),w
  9150  05B4  3E20               	addlw	32
  9151  05B5  0086               	movwf	6
  9152  05B6  0187               	clrf	7
  9153  05B7  3000               	movlw	0
  9154  05B8  3FC0               	movwi [0]fsr1
  9155  05B9  3000               	movlw	0
  9156  05BA  3FC1               	movwi [1]fsr1
  9157  05BB  3FC2               	movwi [2]fsr1
  9158  05BC  3FC3               	movwi [3]fsr1
  9159  05BD  3001               	movlw	1
  9160  05BE  00A6               	movwf	??_USBDeviceInit^(0+128)
  9161  05BF  0826               	movf	??_USBDeviceInit^(0+128),w
  9162  05C0  07AA               	addwf	USBDeviceInit@i^(0+128),f
  9163  05C1  300C               	movlw	12
  9164  05C2  022A               	subwf	USBDeviceInit@i^(0+128),w
  9165  05C3  1C03               	skipc
  9166  05C4  2DAC               	goto	l8074
  9167  05C5                     l382:	
  9168                           
  9169                           ;usb_device.c: 310: }
  9170                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  9171  05C5  003D               	movlb	29	; select bank29
  9172  05C6  170E               	bsf	14,6	;volatile
  9173                           
  9174                           ;usb_device.c: 316: UADDR = 0x00;
  9175  05C7  0196               	clrf	22	;volatile
  9176                           
  9177                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  9178  05C8  120E               	bcf	14,4	;volatile
  9179                           
  9180                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  9181  05C9  130E               	bcf	14,6	;volatile
  9182  05CA                     l8086:	
  9183                           ;usb_device.c: 325: do
  9184                           
  9185                           
  9186                           ;usb_device.c: 326: {
  9187                           ;usb_device.c: 327: (UIR &= 0xF7);
  9188  05CA  30F7               	movlw	247
  9189  05CB  0021               	movlb	1	; select bank1
  9190  05CC  00A6               	movwf	??_USBDeviceInit^(0+128)
  9191  05CD  0826               	movf	??_USBDeviceInit^(0+128),w
  9192  05CE  003D               	movlb	29	; select bank29
  9193  05CF  0590               	andwf	16,f	;volatile
  9194                           
  9195                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  9196  05D0  0021               	movlb	1	; select bank1
  9197  05D1  01C5               	clrf	(_inPipes^(0+128)+2)	;volatile
  9198                           
  9199                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  9200  05D2  0023               	movlb	3	; select bank3
  9201  05D3  01B2               	clrf	(_outPipes^(0+384)+2)	;volatile
  9202                           
  9203                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  9204  05D4  01B3               	clrf	(_outPipes^(0+384)+3)	;volatile
  9205  05D5  01B4               	clrf	((_outPipes+1)^(0+384)+3)	;volatile
  9206                           
  9207                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  9208  05D6  003D               	movlb	29	; select bank29
  9209  05D7  1990               	btfsc	16,3	;volatile
  9210  05D8  2DCA               	goto	l8086
  9211                           
  9212                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  9213  05D9  3001               	movlw	1
  9214  05DA  0021               	movlb	1	; select bank1
  9215  05DB  00A6               	movwf	??_USBDeviceInit^(0+128)
  9216  05DC  0826               	movf	??_USBDeviceInit^(0+128),w
  9217  05DD  0023               	movlb	3	; select bank3
  9218  05DE  00DA               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  9219                           
  9220                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  9221  05DF  3001               	movlw	1
  9222  05E0  0021               	movlb	1	; select bank1
  9223  05E1  00A6               	movwf	??_USBDeviceInit^(0+128)
  9224  05E2  0826               	movf	??_USBDeviceInit^(0+128),w
  9225  05E3  0023               	movlb	3	; select bank3
  9226  05E4  00D9               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  9227                           
  9228                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  9229  05E5  01D8               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  9230                           
  9231                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  9232  05E6  01D7               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  9233                           
  9234                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  9235  05E7  01DF               	clrf	_USBBusIsSuspended^(0+384)	;volatile
  9236                           
  9237                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  9238  05E8  0021               	movlb	1	; select bank1
  9239  05E9  01AA               	clrf	USBDeviceInit@i^(0+128)
  9240  05EA  3003               	movlw	3
  9241  05EB  022A               	subwf	USBDeviceInit@i^(0+128),w
  9242  05EC  1803               	btfsc	3,0
  9243  05ED  2E12               	goto	l8114
  9244  05EE                     l8108:	
  9245                           
  9246                           ;usb_device.c: 346: {
  9247                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  9248  05EE  352A               	lslf	USBDeviceInit@i^(0+128),w
  9249  05EF  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  9250  05F0  0086               	movwf	6
  9251  05F1  3001               	movlw	1	; select bank3/4
  9252  05F2  0087               	movwf	7
  9253  05F3  3000               	movlw	0
  9254  05F4  3FC0               	movwi [0]fsr1
  9255  05F5  3FC1               	movwi [1]fsr1
  9256                           
  9257                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  9258  05F6  352A               	lslf	USBDeviceInit@i^(0+128),w
  9259  05F7  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  9260  05F8  0086               	movwf	6
  9261  05F9  3001               	movlw	1	; select bank3/4
  9262  05FA  0087               	movwf	7
  9263  05FB  3000               	movlw	0
  9264  05FC  3FC0               	movwi [0]fsr1
  9265  05FD  3FC1               	movwi [1]fsr1
  9266                           
  9267                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  9268  05FE  082A               	movf	USBDeviceInit@i^(0+128),w
  9269  05FF  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  9270  0600  0086               	movwf	6
  9271  0601  3001               	movlw	1	; select bank3/4
  9272  0602  0087               	movwf	7
  9273  0603  0181               	clrf	1
  9274                           
  9275                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  9276  0604  082A               	movf	USBDeviceInit@i^(0+128),w
  9277  0605  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  9278  0606  0086               	movwf	6
  9279  0607  3001               	movlw	1	; select bank3/4
  9280  0608  0087               	movwf	7
  9281  0609  0181               	clrf	1
  9282  060A  3001               	movlw	1
  9283  060B  00A6               	movwf	??_USBDeviceInit^(0+128)
  9284  060C  0826               	movf	??_USBDeviceInit^(0+128),w
  9285  060D  07AA               	addwf	USBDeviceInit@i^(0+128),f
  9286  060E  3003               	movlw	3
  9287  060F  022A               	subwf	USBDeviceInit@i^(0+128),w
  9288  0610  1C03               	skipc
  9289  0611  2DEE               	goto	l8108
  9290  0612                     l8114:	
  9291                           
  9292                           ;usb_device.c: 351: }
  9293                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  9294  0612  3028               	movlw	40
  9295  0613  0023               	movlb	3	; select bank3
  9296  0614  00B7               	movwf	_pBDTEntryIn^(0+384)
  9297  0615  3000               	movlw	0
  9298  0616  00B8               	movwf	(_pBDTEntryIn+1)^(0+384)
  9299                           
  9300                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  9301  0617  3016               	movlw	22
  9302  0618  003D               	movlb	29	; select bank29
  9303  0619  0098               	movwf	24	;volatile
  9304                           
  9305                           ;usb_device.c: 358: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  9306  061A  3000               	movlw	0
  9307  061B  0020               	movlb	0	; select bank0
  9308  061C  00A3               	movwf	35	;volatile
  9309  061D  3050               	movlw	80
  9310  061E  00A2               	movwf	34	;volatile
  9311                           
  9312                           ;usb_device.c: 359: BDT[0].CNT = 8;
  9313  061F  3008               	movlw	8
  9314  0620  00A1               	movwf	33	;volatile
  9315                           
  9316                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  9317  0621  3004               	movlw	4
  9318  0622  0021               	movlb	1	; select bank1
  9319  0623  00A6               	movwf	??_USBDeviceInit^(0+128)
  9320  0624  0826               	movf	??_USBDeviceInit^(0+128),w
  9321  0625  0020               	movlb	0	; select bank0
  9322  0626  00A0               	movwf	32	;volatile
  9323                           
  9324                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  9325  0627  17A0               	bsf	32,7	;volatile
  9326                           
  9327                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  9328  0628  0023               	movlb	3	; select bank3
  9329  0629  01EE               	clrf	_USBActiveConfiguration^(0+384)	;volatile
  9330                           
  9331                           ;usb_device.c: 366: USB1msTickCount = 0;
  9332  062A  3000               	movlw	0
  9333  062B  00C6               	movwf	(_USB1msTickCount+3)^(0+384)	;volatile
  9334  062C  3000               	movlw	0
  9335  062D  00C5               	movwf	(_USB1msTickCount+2)^(0+384)	;volatile
  9336  062E  3000               	movlw	0
  9337  062F  00C4               	movwf	(_USB1msTickCount+1)^(0+384)	;volatile
  9338  0630  3000               	movlw	0
  9339  0631  00C3               	movwf	_USB1msTickCount^(0+384)	;volatile
  9340                           
  9341                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  9342  0632  01D6               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  9343                           
  9344                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  9345  0633  01E5               	clrf	_USBDeviceState^(0+384)	;volatile
  9346  0634  0008               	return
  9347  0635                     __end_of_USBDeviceInit:	
  9348                           
  9349                           	psect	text37
  9350  1EC3                     __ptext37:	
  9351 ;; *************** function _USBDeviceAttach *****************
  9352 ;; Defined at:
  9353 ;;		line 1352 in file "mcc_generated_files/usb/usb_device.c"
  9354 ;; Parameters:    Size  Location     Type
  9355 ;;		None
  9356 ;; Auto vars:     Size  Location     Type
  9357 ;;		None
  9358 ;; Return value:  Size  Location     Type
  9359 ;;                  1    wreg      void 
  9360 ;; Registers used:
  9361 ;;		wreg, status,2, status,0
  9362 ;; Tracked objects:
  9363 ;;		On entry : 0/0
  9364 ;;		On exit  : 0/0
  9365 ;;		Unchanged: 0/0
  9366 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9369 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9370 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9371 ;;Total ram usage:        1 bytes
  9372 ;; Hardware stack levels used:    1
  9373 ;; Hardware stack levels required when called:   10
  9374 ;; This function calls:
  9375 ;;		Nothing
  9376 ;; This function is called by:
  9377 ;;		_SYSTEM_Initialize
  9378 ;; This function uses a non-reentrant model
  9379 ;;
  9380                           
  9381                           
  9382                           ;psect for function _USBDeviceAttach
  9383  1EC3                     _USBDeviceAttach:	
  9384                           
  9385                           ;usb_device.c: 1356: {
  9386                           ;usb_device.c: 1357: if(1 == 1)
  9387                           
  9388                           ;incstack = 0
  9389                           ; Regs used in _USBDeviceAttach: [wreg+status,2+status,0]
  9390  1EC3  0023               	movlb	3	; select bank3
  9391  1EC4  0865               	movf	_USBDeviceState^(0+384),w	;volatile
  9392  1EC5  1D03               	btfss	3,2
  9393  1EC6  0008               	return
  9394                           
  9395                           ;usb_device.c: 1358: {
  9396                           ;usb_device.c: 1360: UCON = 0;
  9397  1EC7  003D               	movlb	29	; select bank29
  9398  1EC8  018E               	clrf	14	;volatile
  9399                           
  9400                           ;usb_device.c: 1363: UIE = 0;
  9401  1EC9  0192               	clrf	18	;volatile
  9402                           
  9403                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  9404  1ECA  3016               	movlw	22
  9405  1ECB  0091               	movwf	17	;volatile
  9406  1ECC  309F               	movlw	159
  9407  1ECD  0097               	movwf	23	;volatile
  9408  1ECE  307B               	movlw	123
  9409  1ECF  0092               	movwf	18	;volatile
  9410                           
  9411                           ;usb_device.c: 1369: {PIE2bits.USBIE = 1;INTCONbits.PEIE = 1; INTCONbits.GIE = 1;};
  9412  1ED0  0021               	movlb	1	; select bank1
  9413  1ED1  1512               	bsf	18,2	;volatile
  9414  1ED2  170B               	bsf	11,6	;volatile
  9415  1ED3  178B               	bsf	11,7	;volatile
  9416  1ED4                     l442:	
  9417                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  9418                           
  9419  1ED4  003D               	movlb	29	; select bank29
  9420  1ED5  198E               	btfsc	14,3	;volatile
  9421  1ED6  2ED9               	goto	l6178
  9422  1ED7  158E               	bsf	14,3	;volatile
  9423  1ED8  2ED4               	goto	l442
  9424  1ED9                     l6178:	
  9425                           
  9426                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  9427  1ED9  3001               	movlw	1
  9428  1EDA  0021               	movlb	1	; select bank1
  9429  1EDB  00A6               	movwf	??_USBDeviceAttach^(0+128)
  9430  1EDC  0826               	movf	??_USBDeviceAttach^(0+128),w
  9431  1EDD  0023               	movlb	3	; select bank3
  9432  1EDE  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
  9433  1EDF  0008               	return
  9434  1EE0                     __end_of_USBDeviceAttach:	
  9435                           
  9436                           	psect	text38
  9437  1E01                     __ptext38:	
  9438 ;; *************** function _PIN_MANAGER_Initialize *****************
  9439 ;; Defined at:
  9440 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  9441 ;; Parameters:    Size  Location     Type
  9442 ;;		None
  9443 ;; Auto vars:     Size  Location     Type
  9444 ;;		None
  9445 ;; Return value:  Size  Location     Type
  9446 ;;                  1    wreg      void 
  9447 ;; Registers used:
  9448 ;;		wreg, status,2
  9449 ;; Tracked objects:
  9450 ;;		On entry : 0/0
  9451 ;;		On exit  : 0/0
  9452 ;;		Unchanged: 0/0
  9453 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9458 ;;Total ram usage:        0 bytes
  9459 ;; Hardware stack levels used:    1
  9460 ;; Hardware stack levels required when called:   10
  9461 ;; This function calls:
  9462 ;;		Nothing
  9463 ;; This function is called by:
  9464 ;;		_SYSTEM_Initialize
  9465 ;; This function uses a non-reentrant model
  9466 ;;
  9467                           
  9468                           
  9469                           ;psect for function _PIN_MANAGER_Initialize
  9470  1E01                     _PIN_MANAGER_Initialize:	
  9471                           
  9472                           ;pin_manager.c: 57: LATA = 0x00;
  9473                           
  9474                           ;incstack = 0
  9475                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9476  1E01  0022               	movlb	2	; select bank2
  9477  1E02  018C               	clrf	12	;volatile
  9478                           
  9479                           ;pin_manager.c: 58: LATC = 0x00;
  9480  1E03  018E               	clrf	14	;volatile
  9481                           
  9482                           ;pin_manager.c: 63: TRISA = 0x30;
  9483  1E04  3030               	movlw	48
  9484  1E05  0021               	movlb	1	; select bank1
  9485  1E06  008C               	movwf	12	;volatile
  9486                           
  9487                           ;pin_manager.c: 64: TRISC = 0x37;
  9488  1E07  3037               	movlw	55
  9489  1E08  008E               	movwf	14	;volatile
  9490                           
  9491                           ;pin_manager.c: 69: ANSELC = 0x08;
  9492  1E09  3008               	movlw	8
  9493  1E0A  0023               	movlb	3	; select bank3
  9494  1E0B  008E               	movwf	14	;volatile
  9495                           
  9496                           ;pin_manager.c: 70: ANSELA = 0x10;
  9497  1E0C  3010               	movlw	16
  9498  1E0D  008C               	movwf	12	;volatile
  9499                           
  9500                           ;pin_manager.c: 75: WPUA = 0x00;
  9501  1E0E  0024               	movlb	4	; select bank4
  9502  1E0F  018C               	clrf	12	;volatile
  9503                           
  9504                           ;pin_manager.c: 76: OPTION_REGbits.nWPUEN = 1;
  9505  1E10  0021               	movlb	1	; select bank1
  9506  1E11  1795               	bsf	21,7	;volatile
  9507                           
  9508                           ;pin_manager.c: 82: APFCON = 0x00;
  9509  1E12  0022               	movlb	2	; select bank2
  9510  1E13  019D               	clrf	29	;volatile
  9511  1E14  0008               	return
  9512  1E15                     __end_of_PIN_MANAGER_Initialize:	
  9513                           
  9514                           	psect	text39
  9515  1D8B                     __ptext39:	
  9516 ;; *************** function _OSCILLATOR_Initialize *****************
  9517 ;; Defined at:
  9518 ;;		line 84 in file "mcc_generated_files/mcc.c"
  9519 ;; Parameters:    Size  Location     Type
  9520 ;;		None
  9521 ;; Auto vars:     Size  Location     Type
  9522 ;;		None
  9523 ;; Return value:  Size  Location     Type
  9524 ;;                  1    wreg      void 
  9525 ;; Registers used:
  9526 ;;		wreg, status,2
  9527 ;; Tracked objects:
  9528 ;;		On entry : 0/0
  9529 ;;		On exit  : 0/0
  9530 ;;		Unchanged: 0/0
  9531 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9536 ;;Total ram usage:        0 bytes
  9537 ;; Hardware stack levels used:    1
  9538 ;; Hardware stack levels required when called:   10
  9539 ;; This function calls:
  9540 ;;		Nothing
  9541 ;; This function is called by:
  9542 ;;		_SYSTEM_Initialize
  9543 ;; This function uses a non-reentrant model
  9544 ;;
  9545                           
  9546                           
  9547                           ;psect for function _OSCILLATOR_Initialize
  9548  1D8B                     _OSCILLATOR_Initialize:	
  9549                           
  9550                           ;mcc.c: 87: OSCCON = 0x7C;
  9551                           
  9552                           ;incstack = 0
  9553                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9554  1D8B  307C               	movlw	124
  9555  1D8C  0021               	movlb	1	; select bank1
  9556  1D8D  0099               	movwf	25	;volatile
  9557                           
  9558                           ;mcc.c: 89: OSCTUNE = 0x00;
  9559  1D8E  0198               	clrf	24	;volatile
  9560                           
  9561                           ;mcc.c: 91: ACTCON = 0x00;
  9562  1D8F  0027               	movlb	7	; select bank7
  9563  1D90  019B               	clrf	27	;volatile
  9564                           
  9565                           ;mcc.c: 93: BORCON = 0x00;
  9566  1D91  0022               	movlb	2	; select bank2
  9567  1D92  0196               	clrf	22	;volatile
  9568  1D93                     l58:	
  9569                           ;mcc.c: 96: {
  9570                           
  9571                           ;mcc.c: 95: while(PLLRDY == 0)
  9572                           
  9573  1D93  0021               	movlb	1	; select bank1
  9574  1D94  1B1A               	btfsc	26,6	;volatile
  9575  1D95  0008               	return
  9576  1D96  2D93               	goto	l58
  9577  1D97                     __end_of_OSCILLATOR_Initialize:	
  9578                           
  9579                           	psect	text40
  9580  1D7F                     __ptext40:	
  9581 ;; *************** function _EUSART_Initialize *****************
  9582 ;; Defined at:
  9583 ;;		line 53 in file "mcc_generated_files/eusart.c"
  9584 ;; Parameters:    Size  Location     Type
  9585 ;;		None
  9586 ;; Auto vars:     Size  Location     Type
  9587 ;;		None
  9588 ;; Return value:  Size  Location     Type
  9589 ;;                  1    wreg      void 
  9590 ;; Registers used:
  9591 ;;		wreg
  9592 ;; Tracked objects:
  9593 ;;		On entry : 0/0
  9594 ;;		On exit  : 0/0
  9595 ;;		Unchanged: 0/0
  9596 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9601 ;;Total ram usage:        0 bytes
  9602 ;; Hardware stack levels used:    1
  9603 ;; Hardware stack levels required when called:   10
  9604 ;; This function calls:
  9605 ;;		Nothing
  9606 ;; This function is called by:
  9607 ;;		_SYSTEM_Initialize
  9608 ;; This function uses a non-reentrant model
  9609 ;;
  9610                           
  9611                           
  9612                           ;psect for function _EUSART_Initialize
  9613  1D7F                     _EUSART_Initialize:	
  9614                           
  9615                           ;eusart.c: 58: BAUDCON = 0x08;
  9616                           
  9617                           ;incstack = 0
  9618                           ; Regs used in _EUSART_Initialize: [wreg]
  9619  1D7F  3008               	movlw	8
  9620  1D80  0023               	movlb	3	; select bank3
  9621  1D81  009F               	movwf	31	;volatile
  9622                           
  9623                           ;eusart.c: 61: RCSTA = 0x80;
  9624  1D82  3080               	movlw	128
  9625  1D83  009D               	movwf	29	;volatile
  9626                           
  9627                           ;eusart.c: 64: TXSTA = 0x04;
  9628  1D84  3004               	movlw	4
  9629  1D85  009E               	movwf	30	;volatile
  9630                           
  9631                           ;eusart.c: 67: SPBRGL = 0xE1;
  9632  1D86  30E1               	movlw	225
  9633  1D87  009B               	movwf	27	;volatile
  9634                           
  9635                           ;eusart.c: 70: SPBRGH = 0x04;
  9636  1D88  3004               	movlw	4
  9637  1D89  009C               	movwf	28	;volatile
  9638  1D8A  0008               	return
  9639  1D8B                     __end_of_EUSART_Initialize:	
  9640                           
  9641                           	psect	text41
  9642  04B2                     __ptext41:	
  9643 ;; *************** function _CDCTxService *****************
  9644 ;; Defined at:
  9645 ;;		line 835 in file "mcc_generated_files/usb/usb_device_cdc.c"
  9646 ;; Parameters:    Size  Location     Type
  9647 ;;		None
  9648 ;; Auto vars:     Size  Location     Type
  9649 ;;  byte_to_send    1   19[BANK1 ] unsigned char 
  9650 ;;  i               1   18[BANK1 ] unsigned char 
  9651 ;; Return value:  Size  Location     Type
  9652 ;;                  1    wreg      void 
  9653 ;; Registers used:
  9654 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9655 ;; Tracked objects:
  9656 ;;		On entry : 0/0
  9657 ;;		On exit  : 0/0
  9658 ;;		Unchanged: 0/0
  9659 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9661 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9662 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9663 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9664 ;;Total ram usage:        3 bytes
  9665 ;; Hardware stack levels used:    1
  9666 ;; Hardware stack levels required when called:   11
  9667 ;; This function calls:
  9668 ;;		_USBTransferOnePacket
  9669 ;; This function is called by:
  9670 ;;		_main
  9671 ;; This function uses a non-reentrant model
  9672 ;;
  9673                           
  9674                           
  9675                           ;psect for function _CDCTxService
  9676  04B2                     _CDCTxService:	
  9677                           
  9678                           ;usb_device_cdc.c: 837: uint8_t byte_to_send;
  9679                           ;usb_device_cdc.c: 838: uint8_t i;
  9680                           ;usb_device_cdc.c: 840: {PIE2bits.USBIE = 0;};
  9681                           
  9682                           ;incstack = 0
  9683                           ; Regs used in _CDCTxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9684  04B2  0021               	movlb	1	; select bank1
  9685  04B3  1112               	bcf	18,2	;volatile
  9686                           
  9687                           ;usb_device_cdc.c: 842: {};
  9688                           ;usb_device_cdc.c: 844: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
  9689  04B4  0023               	movlb	3	; select bank3
  9690  04B5  084D               	movf	_CDCDataInHandle^(0+384),w
  9691  04B6  044E               	iorwf	(_CDCDataInHandle+1)^(0+384),w
  9692  04B7  1903               	btfsc	3,2
  9693  04B8  2CC2               	goto	l8344
  9694  04B9  084D               	movf	_CDCDataInHandle^(0+384),w
  9695  04BA  0086               	movwf	6
  9696  04BB  084E               	movf	(_CDCDataInHandle+1)^(0+384),w
  9697  04BC  0087               	movwf	7
  9698  04BD  1F81               	btfss	1,7
  9699  04BE  2CC2               	goto	l8344
  9700                           
  9701                           ;usb_device_cdc.c: 845: {
  9702                           ;usb_device_cdc.c: 846: {PIE2bits.USBIE = 1;};
  9703  04BF  0021               	movlb	1	; select bank1
  9704  04C0  1512               	bsf	18,2	;volatile
  9705                           
  9706                           ;usb_device_cdc.c: 847: return;
  9707  04C1  0008               	return
  9708  04C2                     l8344:	
  9709                           
  9710                           ;usb_device_cdc.c: 848: }
  9711                           ;usb_device_cdc.c: 855: if(cdc_trf_state == 3)
  9712  04C2  3003               	movlw	3
  9713  04C3  0023               	movlb	3	; select bank3
  9714  04C4  0669               	xorwf	_cdc_trf_state^(0+384),w
  9715  04C5  1903               	btfsc	3,2
  9716                           
  9717                           ;usb_device_cdc.c: 856: cdc_trf_state = 0;
  9718  04C6  01E9               	clrf	_cdc_trf_state^(0+384)
  9719                           
  9720                           ;usb_device_cdc.c: 861: if(cdc_trf_state == 0)
  9721  04C7  0869               	movf	_cdc_trf_state^(0+384),w
  9722  04C8  1D03               	btfss	3,2
  9723  04C9  2CCD               	goto	l8352
  9724                           
  9725                           ;usb_device_cdc.c: 862: {
  9726                           ;usb_device_cdc.c: 863: {PIE2bits.USBIE = 1;};
  9727  04CA  0021               	movlb	1	; select bank1
  9728  04CB  1512               	bsf	18,2	;volatile
  9729                           
  9730                           ;usb_device_cdc.c: 864: return;
  9731  04CC  0008               	return
  9732  04CD                     l8352:	
  9733                           
  9734                           ;usb_device_cdc.c: 865: }
  9735                           ;usb_device_cdc.c: 870: if(cdc_trf_state == 2)
  9736  04CD  3002               	movlw	2
  9737  04CE  0023               	movlb	3	; select bank3
  9738  04CF  0669               	xorwf	_cdc_trf_state^(0+384),w
  9739  04D0  1D03               	btfss	3,2
  9740  04D1  2CED               	goto	l8358
  9741                           
  9742                           ;usb_device_cdc.c: 871: {
  9743                           ;usb_device_cdc.c: 872: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  9744  04D2  0021               	movlb	1	; select bank1
  9745  04D3  01A6               	clrf	USBTransferOnePacket@dir^(0+128)
  9746  04D4  0AA6               	incf	USBTransferOnePacket@dir^(0+128),f
  9747  04D5  3000               	movlw	0
  9748  04D6  00A7               	movwf	USBTransferOnePacket@data^(0+128)
  9749  04D7  3000               	movlw	0
  9750  04D8  00A8               	movwf	(USBTransferOnePacket@data+1)^(0+128)
  9751  04D9  01A9               	clrf	USBTransferOnePacket@len^(0+128)
  9752  04DA  3002               	movlw	2
  9753  04DB  318C  2495  3184   	fcall	_USBTransferOnePacket
  9754  04DE  0021               	movlb	1	; select bank1
  9755  04DF  0827               	movf	(?_USBTransferOnePacket+1)^(0+128),w
  9756  04E0  0023               	movlb	3	; select bank3
  9757  04E1  00CE               	movwf	(_CDCDataInHandle+1)^(0+384)
  9758  04E2  0021               	movlb	1	; select bank1
  9759  04E3  0826               	movf	?_USBTransferOnePacket^(0+128),w
  9760  04E4  0023               	movlb	3	; select bank3
  9761  04E5  00CD               	movwf	_CDCDataInHandle^(0+384)
  9762                           
  9763                           ;usb_device_cdc.c: 874: cdc_trf_state = 3;
  9764  04E6  3003               	movlw	3
  9765  04E7  0021               	movlb	1	; select bank1
  9766  04E8  00B1               	movwf	??_CDCTxService^(0+128)
  9767  04E9  0831               	movf	??_CDCTxService^(0+128),w
  9768  04EA  0023               	movlb	3	; select bank3
  9769  04EB  00E9               	movwf	_cdc_trf_state^(0+384)
  9770                           
  9771                           ;usb_device_cdc.c: 875: }
  9772  04EC  2D7B               	goto	l8404
  9773  04ED                     l8358:	
  9774                           
  9775                           ;usb_device_cdc.c: 876: else if(cdc_trf_state == 1)
  9776  04ED  0369               	decf	_cdc_trf_state^(0+384),w
  9777  04EE  1D03               	btfss	3,2
  9778  04EF  2D7B               	goto	l8404
  9779                           
  9780                           ;usb_device_cdc.c: 877: {
  9781                           ;usb_device_cdc.c: 881: if(cdc_tx_len > sizeof(cdc_data_tx))
  9782  04F0  3041               	movlw	65
  9783  04F1  0268               	subwf	_cdc_tx_len^(0+384),w
  9784  04F2  1C03               	skipc
  9785  04F3  2CF6               	goto	l8364
  9786                           
  9787                           ;usb_device_cdc.c: 882: byte_to_send = sizeof(cdc_data_tx);
  9788  04F4  3040               	movlw	64
  9789  04F5  2CF8               	goto	L9
  9790  04F6                     l8364:	
  9791                           
  9792                           ;usb_device_cdc.c: 883: else
  9793                           ;usb_device_cdc.c: 884: byte_to_send = cdc_tx_len;
  9794  04F6  0023               	movlb	3	; select bank3
  9795  04F7  0868               	movf	_cdc_tx_len^(0+384),w
  9796  04F8                     L9:	
  9797  04F8  0021               	movlb	1	; select bank1
  9798  04F9  00B1               	movwf	??_CDCTxService^(0+128)
  9799  04FA  0831               	movf	??_CDCTxService^(0+128),w
  9800  04FB  00B3               	movwf	CDCTxService@byte_to_send^(0+128)
  9801                           
  9802                           ;usb_device_cdc.c: 889: cdc_tx_len = cdc_tx_len - byte_to_send;
  9803  04FC  0333               	decf	CDCTxService@byte_to_send^(0+128),w
  9804  04FD  3AFF               	xorlw	255
  9805  04FE  0023               	movlb	3	; select bank3
  9806  04FF  0768               	addwf	_cdc_tx_len^(0+384),w
  9807  0500  0021               	movlb	1	; select bank1
  9808  0501  00B1               	movwf	??_CDCTxService^(0+128)
  9809  0502  0831               	movf	??_CDCTxService^(0+128),w
  9810  0503  0023               	movlb	3	; select bank3
  9811  0504  00E8               	movwf	_cdc_tx_len^(0+384)
  9812                           
  9813                           ;usb_device_cdc.c: 891: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  9814  0505  3020               	movlw	32
  9815  0506  00D2               	movwf	(_pCDCDst+1)^(0+384)
  9816  0507  3080               	movlw	128
  9817  0508  00D1               	movwf	_pCDCDst^(0+384)
  9818                           
  9819                           ;usb_device_cdc.c: 893: i = byte_to_send;
  9820  0509  0021               	movlb	1	; select bank1
  9821  050A  0833               	movf	CDCTxService@byte_to_send^(0+128),w
  9822  050B  00B1               	movwf	??_CDCTxService^(0+128)
  9823  050C  0831               	movf	??_CDCTxService^(0+128),w
  9824  050D  00B2               	movwf	CDCTxService@i^(0+128)
  9825                           
  9826                           ;usb_device_cdc.c: 894: if(cdc_mem_type == 0x00)
  9827  050E  0023               	movlb	3	; select bank3
  9828  050F  0867               	movf	_cdc_mem_type^(0+384),w
  9829  0510  1903               	btfsc	3,2
  9830  0511  2D2F               	goto	l8382
  9831  0512  2D50               	goto	l8392
  9832  0513                     l8374:	
  9833                           ;usb_device_cdc.c: 895: {
  9834                           ;usb_device_cdc.c: 896: while(i)
  9835                           
  9836                           
  9837                           ;usb_device_cdc.c: 897: {
  9838                           ;usb_device_cdc.c: 898: *pCDCDst.bRam = *pCDCSrc.bRom;
  9839  0513  0023               	movlb	3	; select bank3
  9840  0514  0853               	movf	_pCDCSrc^(0+384),w
  9841  0515  0086               	movwf	6
  9842  0516  0854               	movf	(_pCDCSrc+1)^(0+384),w
  9843  0517  0087               	movwf	7
  9844  0518  0801               	movf	1,w
  9845  0519  0021               	movlb	1	; select bank1
  9846  051A  00B1               	movwf	??_CDCTxService^(0+128)
  9847  051B  0023               	movlb	3	; select bank3
  9848  051C  0851               	movf	_pCDCDst^(0+384),w
  9849  051D  0086               	movwf	6
  9850  051E  0852               	movf	(_pCDCDst+1)^(0+384),w
  9851  051F  0087               	movwf	7
  9852  0520  0021               	movlb	1	; select bank1
  9853  0521  0831               	movf	??_CDCTxService^(0+128),w
  9854  0522  0081               	movwf	1
  9855                           
  9856                           ;usb_device_cdc.c: 899: pCDCDst.bRam++;
  9857  0523  3001               	movlw	1
  9858  0524  0023               	movlb	3	; select bank3
  9859  0525  07D1               	addwf	_pCDCDst^(0+384),f
  9860  0526  3000               	movlw	0
  9861  0527  3DD2               	addwfc	(_pCDCDst+1)^(0+384),f
  9862                           
  9863                           ;usb_device_cdc.c: 900: pCDCSrc.bRom++;
  9864  0528  3001               	movlw	1
  9865  0529  07D3               	addwf	_pCDCSrc^(0+384),f
  9866  052A  3000               	movlw	0
  9867  052B  3DD4               	addwfc	(_pCDCSrc+1)^(0+384),f
  9868                           
  9869                           ;usb_device_cdc.c: 901: i--;
  9870  052C  3001               	movlw	1
  9871  052D  0021               	movlb	1	; select bank1
  9872  052E  02B2               	subwf	CDCTxService@i^(0+128),f
  9873  052F                     l8382:	
  9874  052F  0021               	movlb	1	; select bank1
  9875  0530  0832               	movf	CDCTxService@i^(0+128),w
  9876  0531  1903               	btfsc	3,2
  9877  0532  2D54               	goto	l8394
  9878  0533  2D13               	goto	l8374
  9879  0534                     l8384:	
  9880                           ;usb_device_cdc.c: 904: else
  9881                           ;usb_device_cdc.c: 905: {
  9882                           ;usb_device_cdc.c: 906: while(i)
  9883                           
  9884                           ;usb_device_cdc.c: 902: }
  9885                           ;usb_device_cdc.c: 903: }
  9886                           
  9887                           
  9888                           ;usb_device_cdc.c: 907: {
  9889                           ;usb_device_cdc.c: 908: *pCDCDst.bRam = *pCDCSrc.bRam;
  9890  0534  0023               	movlb	3	; select bank3
  9891  0535  0853               	movf	_pCDCSrc^(0+384),w
  9892  0536  0086               	movwf	6
  9893  0537  0854               	movf	(_pCDCSrc+1)^(0+384),w
  9894  0538  0087               	movwf	7
  9895  0539  0801               	movf	1,w
  9896  053A  0021               	movlb	1	; select bank1
  9897  053B  00B1               	movwf	??_CDCTxService^(0+128)
  9898  053C  0023               	movlb	3	; select bank3
  9899  053D  0851               	movf	_pCDCDst^(0+384),w
  9900  053E  0086               	movwf	6
  9901  053F  0852               	movf	(_pCDCDst+1)^(0+384),w
  9902  0540  0087               	movwf	7
  9903  0541  0021               	movlb	1	; select bank1
  9904  0542  0831               	movf	??_CDCTxService^(0+128),w
  9905  0543  0081               	movwf	1
  9906                           
  9907                           ;usb_device_cdc.c: 909: pCDCDst.bRam++;
  9908  0544  3001               	movlw	1
  9909  0545  0023               	movlb	3	; select bank3
  9910  0546  07D1               	addwf	_pCDCDst^(0+384),f
  9911  0547  3000               	movlw	0
  9912  0548  3DD2               	addwfc	(_pCDCDst+1)^(0+384),f
  9913                           
  9914                           ;usb_device_cdc.c: 910: pCDCSrc.bRam++;
  9915  0549  3001               	movlw	1
  9916  054A  07D3               	addwf	_pCDCSrc^(0+384),f
  9917  054B  3000               	movlw	0
  9918  054C  3DD4               	addwfc	(_pCDCSrc+1)^(0+384),f
  9919                           
  9920                           ;usb_device_cdc.c: 911: i--;
  9921  054D  3001               	movlw	1
  9922  054E  0021               	movlb	1	; select bank1
  9923  054F  02B2               	subwf	CDCTxService@i^(0+128),f
  9924  0550                     l8392:	
  9925  0550  0021               	movlb	1	; select bank1
  9926  0551  0832               	movf	CDCTxService@i^(0+128),w
  9927  0552  1D03               	btfss	3,2
  9928  0553  2D34               	goto	l8384
  9929  0554                     l8394:	
  9930                           
  9931                           ;usb_device_cdc.c: 912: }
  9932                           ;usb_device_cdc.c: 913: }
  9933                           ;usb_device_cdc.c: 919: if(cdc_tx_len == 0)
  9934  0554  0023               	movlb	3	; select bank3
  9935  0555  0868               	movf	_cdc_tx_len^(0+384),w
  9936  0556  1D03               	btfss	3,2
  9937  0557  2D65               	goto	l8402
  9938                           
  9939                           ;usb_device_cdc.c: 920: {
  9940                           ;usb_device_cdc.c: 921: if(byte_to_send == 64)
  9941  0558  3040               	movlw	64
  9942  0559  0021               	movlb	1	; select bank1
  9943  055A  0633               	xorwf	CDCTxService@byte_to_send^(0+128),w
  9944  055B  1D03               	btfss	3,2
  9945  055C  2D5F               	goto	l8400
  9946                           
  9947                           ;usb_device_cdc.c: 922: cdc_trf_state = 2;
  9948  055D  3002               	movlw	2
  9949  055E  2D61               	goto	L10
  9950  055F                     l8400:	
  9951                           
  9952                           ;usb_device_cdc.c: 923: else
  9953                           ;usb_device_cdc.c: 924: cdc_trf_state = 3;
  9954  055F  3003               	movlw	3
  9955  0560  0021               	movlb	1	; select bank1
  9956  0561                     L10:	
  9957  0561  00B1               	movwf	??_CDCTxService^(0+128)
  9958  0562  0831               	movf	??_CDCTxService^(0+128),w
  9959  0563  0023               	movlb	3	; select bank3
  9960  0564  00E9               	movwf	_cdc_trf_state^(0+384)
  9961  0565                     l8402:	
  9962                           
  9963                           ;usb_device_cdc.c: 925: }
  9964                           ;usb_device_cdc.c: 926: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  9965  0565  0021               	movlb	1	; select bank1
  9966  0566  01A6               	clrf	USBTransferOnePacket@dir^(0+128)
  9967  0567  0AA6               	incf	USBTransferOnePacket@dir^(0+128),f
  9968  0568  3080               	movlw	128
  9969  0569  00A7               	movwf	USBTransferOnePacket@data^(0+128)
  9970  056A  3020               	movlw	32
  9971  056B  00A8               	movwf	(USBTransferOnePacket@data^(0+128)+1)
  9972  056C  0833               	movf	CDCTxService@byte_to_send^(0+128),w
  9973  056D  00B1               	movwf	??_CDCTxService^(0+128)
  9974  056E  0831               	movf	??_CDCTxService^(0+128),w
  9975  056F  00A9               	movwf	USBTransferOnePacket@len^(0+128)
  9976  0570  3002               	movlw	2
  9977  0571  318C  2495         	fcall	_USBTransferOnePacket
  9978  0573  0021               	movlb	1	; select bank1
  9979  0574  0827               	movf	(?_USBTransferOnePacket+1)^(0+128),w
  9980  0575  0023               	movlb	3	; select bank3
  9981  0576  00CE               	movwf	(_CDCDataInHandle+1)^(0+384)
  9982  0577  0021               	movlb	1	; select bank1
  9983  0578  0826               	movf	?_USBTransferOnePacket^(0+128),w
  9984  0579  0023               	movlb	3	; select bank3
  9985  057A  00CD               	movwf	_CDCDataInHandle^(0+384)
  9986  057B                     l8404:	
  9987                           
  9988                           ;usb_device_cdc.c: 928: }
  9989                           ;usb_device_cdc.c: 930: {PIE2bits.USBIE = 1;};
  9990  057B  0021               	movlb	1	; select bank1
  9991  057C  1512               	bsf	18,2	;volatile
  9992  057D  0008               	return
  9993  057E                     __end_of_CDCTxService:	
  9994                           
  9995                           	psect	text42
  9996  0C95                     __ptext42:	
  9997 ;; *************** function _USBTransferOnePacket *****************
  9998 ;; Defined at:
  9999 ;;		line 995 in file "mcc_generated_files/usb/usb_device.c"
 10000 ;; Parameters:    Size  Location     Type
 10001 ;;  ep              1    wreg     unsigned char 
 10002 ;;  dir             1    6[BANK1 ] unsigned char 
 10003 ;;  data            2    7[BANK1 ] PTR unsigned char 
 10004 ;;		 -> cdc_data_tx(64), NULL(0), cdc_data_rx(64), 
 10005 ;;  len             1    9[BANK1 ] unsigned char 
 10006 ;; Auto vars:     Size  Location     Type
 10007 ;;  ep              1   14[BANK1 ] unsigned char 
 10008 ;;  handle          2   15[BANK1 ] PTR volatile struct __BD
 10009 ;;		 -> RAM(4096), BDT(48), NULL(0), 
 10010 ;; Return value:  Size  Location     Type
 10011 ;;                  2    6[BANK1 ] PTR void 
 10012 ;; Registers used:
 10013 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10014 ;; Tracked objects:
 10015 ;;		On entry : 0/0
 10016 ;;		On exit  : 0/0
 10017 ;;		Unchanged: 0/0
 10018 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10019 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10020 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10021 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10022 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0
 10023 ;;Total ram usage:       11 bytes
 10024 ;; Hardware stack levels used:    1
 10025 ;; Hardware stack levels required when called:   10
 10026 ;; This function calls:
 10027 ;;		Nothing
 10028 ;; This function is called by:
 10029 ;;		_CDCInitEP
 10030 ;;		_getsUSBUSART
 10031 ;;		_CDCTxService
 10032 ;;		_USBCDCEventHandler
 10033 ;; This function uses a non-reentrant model
 10034 ;;
 10035                           
 10036                           
 10037                           ;psect for function _USBTransferOnePacket
 10038  0C95                     _USBTransferOnePacket:	
 10039                           
 10040                           ;incstack = 0
 10041                           ; Regs used in _USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
 10042                           ;USBTransferOnePacket@ep stored from wreg
 10043  0C95  0021               	movlb	1	; select bank1
 10044  0C96  00AE               	movwf	USBTransferOnePacket@ep^(0+128)
 10045                           
 10046                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 10047                           ;usb_device.c: 1000: if(dir != 0)
 10048  0C97  0826               	movf	USBTransferOnePacket@dir^(0+128),w
 10049  0C98  1903               	btfsc	3,2
 10050  0C99  2CA3               	goto	l7420
 10051                           
 10052                           ;usb_device.c: 1001: {
 10053                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 10054  0C9A  352E               	lslf	USBTransferOnePacket@ep^(0+128),w
 10055  0C9B  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 10056  0C9C  0086               	movwf	6
 10057  0C9D  3001               	movlw	1	; select bank3/4
 10058  0C9E  0087               	movwf	7
 10059  0C9F  3F40               	moviw [0]fsr1
 10060  0CA0  00AF               	movwf	USBTransferOnePacket@handle^(0+128)
 10061  0CA1  3F41               	moviw [1]fsr1
 10062  0CA2  2CAB               	goto	L11
 10063  0CA3                     l7420:	
 10064                           ;usb_device.c: 1004: }
 10065                           
 10066                           
 10067                           ;usb_device.c: 1005: else
 10068                           ;usb_device.c: 1006: {
 10069                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 10070  0CA3  352E               	lslf	USBTransferOnePacket@ep^(0+128),w
 10071  0CA4  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 10072  0CA5  0086               	movwf	6
 10073  0CA6  3001               	movlw	1	; select bank3/4
 10074  0CA7  0087               	movwf	7
 10075  0CA8  3F40               	moviw [0]fsr1
 10076  0CA9  00AF               	movwf	USBTransferOnePacket@handle^(0+128)
 10077  0CAA  3F41               	moviw [1]fsr1
 10078  0CAB                     L11:	
 10079  0CAB  00B0               	movwf	(USBTransferOnePacket@handle+1)^(0+128)
 10080                           
 10081                           ;usb_device.c: 1009: }
 10082                           ;usb_device.c: 1013: if(handle == 0)
 10083  0CAC  082F               	movf	USBTransferOnePacket@handle^(0+128),w
 10084  0CAD  0430               	iorwf	(USBTransferOnePacket@handle+1)^(0+128),w
 10085  0CAE  1D03               	btfss	3,2
 10086  0CAF  2CB3               	goto	l7428
 10087                           
 10088                           ;usb_device.c: 1014: {
 10089                           ;usb_device.c: 1015: return 0;
 10090  0CB0  01A6               	clrf	?_USBTransferOnePacket^(0+128)
 10091  0CB1  01A7               	clrf	(?_USBTransferOnePacket+1)^(0+128)
 10092  0CB2  0008               	return
 10093  0CB3                     l7428:	
 10094                           
 10095                           ;usb_device.c: 1016: }
 10096                           ;usb_device.c: 1029: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
 10097  0CB3  30FF               	movlw	255
 10098  0CB4  0527               	andwf	USBTransferOnePacket@data^(0+128),w
 10099  0CB5  00AA               	movwf	??_USBTransferOnePacket^(0+128)
 10100  0CB6  307F               	movlw	127
 10101  0CB7  0528               	andwf	(USBTransferOnePacket@data+1)^(0+128),w
 10102  0CB8  00AB               	movwf	(??_USBTransferOnePacket+1)^(0+128)
 10103  0CB9  082F               	movf	USBTransferOnePacket@handle^(0+128),w
 10104  0CBA  0086               	movwf	6
 10105  0CBB  0830               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
 10106  0CBC  0087               	movwf	7
 10107  0CBD  3142               	addfsr 1,2
 10108  0CBE  082A               	movf	??_USBTransferOnePacket^(0+128),w
 10109  0CBF  3FC0               	movwi [0]fsr1
 10110  0CC0  082B               	movf	(??_USBTransferOnePacket^(0+128)+1),w
 10111  0CC1  3FC1               	movwi [1]fsr1
 10112                           
 10113                           ;usb_device.c: 1030: handle->CNT = len;
 10114  0CC2  082F               	movf	USBTransferOnePacket@handle^(0+128),w
 10115  0CC3  3E01               	addlw	1
 10116  0CC4  00AA               	movwf	??_USBTransferOnePacket^(0+128)
 10117  0CC5  3000               	movlw	0
 10118  0CC6  3D30               	addwfc	(USBTransferOnePacket@handle+1)^(0+128),w
 10119  0CC7  00AB               	movwf	(??_USBTransferOnePacket+1)^(0+128)
 10120  0CC8  082A               	movf	??_USBTransferOnePacket^(0+128),w
 10121  0CC9  0086               	movwf	6
 10122  0CCA  082B               	movf	(??_USBTransferOnePacket+1)^(0+128),w
 10123  0CCB  0087               	movwf	7
 10124  0CCC  0829               	movf	USBTransferOnePacket@len^(0+128),w
 10125  0CCD  0081               	movwf	1
 10126                           
 10127                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 10128  0CCE  3040               	movlw	64
 10129  0CCF  00AA               	movwf	??_USBTransferOnePacket^(0+128)
 10130  0CD0  082F               	movf	USBTransferOnePacket@handle^(0+128),w
 10131  0CD1  0086               	movwf	6
 10132  0CD2  0830               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
 10133  0CD3  0087               	movwf	7
 10134  0CD4  082A               	movf	??_USBTransferOnePacket^(0+128),w
 10135  0CD5  0581               	andwf	1,f
 10136                           
 10137                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 10138  0CD6  082F               	movf	USBTransferOnePacket@handle^(0+128),w
 10139  0CD7  0086               	movwf	6
 10140  0CD8  0830               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
 10141  0CD9  0087               	movwf	7
 10142  0CDA  1581               	bsf	1,3
 10143                           
 10144                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 10145  0CDB  082F               	movf	USBTransferOnePacket@handle^(0+128),w
 10146  0CDC  0086               	movwf	6
 10147  0CDD  0830               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
 10148  0CDE  0087               	movwf	7
 10149  0CDF  1781               	bsf	1,7
 10150                           
 10151                           ;usb_device.c: 1036: if(dir != 0)
 10152  0CE0  0826               	movf	USBTransferOnePacket@dir^(0+128),w
 10153  0CE1  1903               	btfsc	3,2
 10154  0CE2  2CFC               	goto	l7438
 10155                           
 10156                           ;usb_device.c: 1037: {
 10157                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
 10158  0CE3  352E               	lslf	USBTransferOnePacket@ep^(0+128),w
 10159  0CE4  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 10160  0CE5  0086               	movwf	6
 10161  0CE6  3001               	movlw	1	; select bank3/4
 10162  0CE7  0087               	movwf	7
 10163  0CE8  3F40               	moviw [0]fsr1
 10164  0CE9  00AA               	movwf	??_USBTransferOnePacket^(0+128)
 10165  0CEA  3F41               	moviw [1]fsr1
 10166  0CEB  00AB               	movwf	(??_USBTransferOnePacket^(0+128)+1)
 10167  0CEC  3004               	movlw	4
 10168  0CED  062A               	xorwf	??_USBTransferOnePacket^(0+128),w
 10169  0CEE  00AC               	movwf	(??_USBTransferOnePacket+2)^(0+128)
 10170  0CEF  3000               	movlw	0
 10171  0CF0  062B               	xorwf	(??_USBTransferOnePacket+1)^(0+128),w
 10172  0CF1  00AD               	movwf	(??_USBTransferOnePacket+3)^(0+128)
 10173  0CF2  352E               	lslf	USBTransferOnePacket@ep^(0+128),w
 10174  0CF3  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 10175  0CF4  0086               	movwf	6
 10176  0CF5  3001               	movlw	1	; select bank3/4
 10177  0CF6  0087               	movwf	7
 10178  0CF7  082C               	movf	(??_USBTransferOnePacket+2)^(0+128),w
 10179  0CF8  3FC0               	movwi [0]fsr1
 10180  0CF9  082D               	movf	(??_USBTransferOnePacket+3)^(0+128),w
 10181  0CFA  3FC1               	movwi [1]fsr1
 10182                           
 10183                           ;usb_device.c: 1040: }
 10184  0CFB  2D14               	goto	l7440
 10185  0CFC                     l7438:	
 10186                           
 10187                           ;usb_device.c: 1041: else
 10188                           ;usb_device.c: 1042: {
 10189                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
 10190  0CFC  352E               	lslf	USBTransferOnePacket@ep^(0+128),w
 10191  0CFD  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 10192  0CFE  0086               	movwf	6
 10193  0CFF  3001               	movlw	1	; select bank3/4
 10194  0D00  0087               	movwf	7
 10195  0D01  3F40               	moviw [0]fsr1
 10196  0D02  00AA               	movwf	??_USBTransferOnePacket^(0+128)
 10197  0D03  3F41               	moviw [1]fsr1
 10198  0D04  00AB               	movwf	(??_USBTransferOnePacket^(0+128)+1)
 10199  0D05  3004               	movlw	4
 10200  0D06  062A               	xorwf	??_USBTransferOnePacket^(0+128),w
 10201  0D07  00AC               	movwf	(??_USBTransferOnePacket+2)^(0+128)
 10202  0D08  3000               	movlw	0
 10203  0D09  062B               	xorwf	(??_USBTransferOnePacket+1)^(0+128),w
 10204  0D0A  00AD               	movwf	(??_USBTransferOnePacket+3)^(0+128)
 10205  0D0B  352E               	lslf	USBTransferOnePacket@ep^(0+128),w
 10206  0D0C  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 10207  0D0D  0086               	movwf	6
 10208  0D0E  3001               	movlw	1	; select bank3/4
 10209  0D0F  0087               	movwf	7
 10210  0D10  082C               	movf	(??_USBTransferOnePacket+2)^(0+128),w
 10211  0D11  3FC0               	movwi [0]fsr1
 10212  0D12  082D               	movf	(??_USBTransferOnePacket+3)^(0+128),w
 10213  0D13  3FC1               	movwi [1]fsr1
 10214  0D14                     l7440:	
 10215                           
 10216                           ;usb_device.c: 1045: }
 10217                           ;usb_device.c: 1046: return (void*)handle;
 10218  0D14  0830               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
 10219  0D15  00A7               	movwf	(?_USBTransferOnePacket+1)^(0+128)
 10220  0D16  082F               	movf	USBTransferOnePacket@handle^(0+128),w
 10221  0D17  00A6               	movwf	?_USBTransferOnePacket^(0+128)
 10222  0D18  0008               	return
 10223  0D19                     __end_of_USBTransferOnePacket:	
 10224                           
 10225                           	psect	intentry
 10226  0004                     __pintentry:	
 10227 ;; *************** function _INTERRUPT_InterruptManager *****************
 10228 ;; Defined at:
 10229 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
 10230 ;; Parameters:    Size  Location     Type
 10231 ;;		None
 10232 ;; Auto vars:     Size  Location     Type
 10233 ;;		None
 10234 ;; Return value:  Size  Location     Type
 10235 ;;                  1    wreg      void 
 10236 ;; Registers used:
 10237 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10238 ;; Tracked objects:
 10239 ;;		On entry : 0/0
 10240 ;;		On exit  : 0/0
 10241 ;;		Unchanged: 0/0
 10242 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10245 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10246 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10247 ;;Total ram usage:        1 bytes
 10248 ;; Hardware stack levels used:    1
 10249 ;; Hardware stack levels required when called:    9
 10250 ;; This function calls:
 10251 ;;		Absolute function
 10252 ;;		_i2c_ISR
 10253 ;;		_i2c_busCollisionISR
 10254 ;;		i1_USBDeviceTasks
 10255 ;; This function is called by:
 10256 ;;		Interrupt level 1
 10257 ;; This function uses a non-reentrant model
 10258 ;;
 10259                           
 10260  0004                     _INTERRUPT_InterruptManager:	
 10261                           
 10262                           ;incstack = 0
 10263 ;; hardware stack exceeded
 10264  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 10265                           
 10266                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10267  0005  3180               	pagesel	$
 10268  0006  0020               	movlb	0	; select bank0
 10269  0007  087F               	movf	127,w
 10270  0008  0021               	movlb	1	; select bank1
 10271  0009  00A5               	movwf	??_INTERRUPT_InterruptManager^(0+128)
 10272                           
 10273                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1)
 10274  000A  1F0B               	btfss	11,6	;volatile
 10275  000B  282E               	goto	i1l93
 10276                           
 10277                           ;interrupt_manager.c: 55: {
 10278                           ;interrupt_manager.c: 56: if(PIE2bits.USBIE == 1 && PIR2bits.USBIF == 1)
 10279  000C  1D12               	btfss	18,2	;volatile
 10280  000D  2815               	goto	i1l86
 10281  000E  0020               	movlb	0	; select bank0
 10282  000F  1D12               	btfss	18,2	;volatile
 10283  0010  2815               	goto	i1l86
 10284                           
 10285                           ;interrupt_manager.c: 57: {
 10286                           ;interrupt_manager.c: 58: USBDeviceTasks();
 10287  0011  3183  23CA  3180   	fcall	i1_USBDeviceTasks
 10288                           
 10289                           ;interrupt_manager.c: 59: }
 10290  0014  282E               	goto	i1l93
 10291  0015                     i1l86:	
 10292                           
 10293                           ;interrupt_manager.c: 60: else if(PIE2bits.BCL1IE == 1 && PIR2bits.BCL1IF == 1)
 10294  0015  0021               	movlb	1	; select bank1
 10295  0016  1D92               	btfss	18,3	;volatile
 10296  0017  2822               	goto	i1l88
 10297  0018  0020               	movlb	0	; select bank0
 10298  0019  1D92               	btfss	18,3	;volatile
 10299  001A  2822               	goto	i1l88
 10300                           
 10301                           ;interrupt_manager.c: 61: {
 10302                           ;interrupt_manager.c: 62: i2c_driver_busCollisionISR();
 10303  001B  0024               	movlb	4	; select bank4
 10304  001C  084E               	movf	(_i2c_driver_busCollisionISR+1)^(0+512),w
 10305  001D  008A               	movwf	10
 10306  001E  084D               	movf	_i2c_driver_busCollisionISR^(0+512),w
 10307  001F  000A               	callw
 10308  0020  3180               	pagesel	$
 10309                           
 10310                           ;interrupt_manager.c: 63: }
 10311  0021  282E               	goto	i1l93
 10312  0022                     i1l88:	
 10313                           
 10314                           ;interrupt_manager.c: 64: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
 10315  0022  0021               	movlb	1	; select bank1
 10316  0023  1D91               	btfss	17,3	;volatile
 10317  0024  282E               	goto	i1l93
 10318  0025  0020               	movlb	0	; select bank0
 10319  0026  1D91               	btfss	17,3	;volatile
 10320  0027  282E               	goto	i1l93
 10321                           
 10322                           ;interrupt_manager.c: 65: {
 10323                           ;interrupt_manager.c: 66: i2c_driver_i2cISR();
 10324  0028  0024               	movlb	4	; select bank4
 10325  0029  084C               	movf	(_i2c_driver_i2cISR+1)^(0+512),w
 10326  002A  008A               	movwf	10
 10327  002B  084B               	movf	_i2c_driver_i2cISR^(0+512),w
 10328  002C  000A               	callw
 10329  002D  3180               	pagesel	$
 10330  002E                     i1l93:	
 10331                           ;interrupt_manager.c: 73: else
 10332                           ;interrupt_manager.c: 74: {
 10333                           
 10334                           ;interrupt_manager.c: 71: }
 10335                           ;interrupt_manager.c: 72: }
 10336                           
 10337                           ;interrupt_manager.c: 68: else
 10338                           ;interrupt_manager.c: 69: {
 10339                           
 10340                           ;interrupt_manager.c: 67: }
 10341                           
 10342  002E  0021               	movlb	1	; select bank1
 10343  002F  0825               	movf	??_INTERRUPT_InterruptManager^(0+128),w
 10344  0030  0020               	movlb	0	; select bank0
 10345  0031  00FF               	movwf	127
 10346  0032  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 10347  0033  0009               	retfie
 10348  0034                     __end_of_INTERRUPT_InterruptManager:	
 10349                           
 10350                           	psect	text44
 10351  03CA                     __ptext44:	
 10352 ;; *************** function i1_USBDeviceTasks *****************
 10353 ;; Defined at:
 10354 ;;		line 477 in file "mcc_generated_files/usb/usb_device.c"
 10355 ;; Parameters:    Size  Location     Type
 10356 ;;		None
 10357 ;; Auto vars:     Size  Location     Type
 10358 ;;  USBDeviceTas    1   15[BANK0h] unsigned char 
 10359 ;; Return value:  Size  Location     Type
 10360 ;;                  1    wreg      void 
 10361 ;; Registers used:
 10362 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10363 ;; Tracked objects:
 10364 ;;		On entry : 0/0
 10365 ;;		On exit  : 0/0
 10366 ;;		Unchanged: 0/0
 10367 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10369 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10370 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10371 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10372 ;;Total ram usage:        3 bytes
 10373 ;; Hardware stack levels used:    1
 10374 ;; Hardware stack levels required when called:    8
 10375 ;; This function calls:
 10376 ;;		i1_USBCtrlEPAllowStatusStage
 10377 ;;		i1_USBCtrlEPService
 10378 ;;		i1_USBDeviceInit
 10379 ;;		i1_USBIncrement1msInternalTimers
 10380 ;;		i1_USBStallHandler
 10381 ;;		i1_USBSuspend
 10382 ;;		i1_USBWakeFromSuspend
 10383 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 10384 ;; This function is called by:
 10385 ;;		_INTERRUPT_InterruptManager
 10386 ;; This function uses a non-reentrant model
 10387 ;;
 10388                           
 10389                           
 10390                           ;psect for function i1_USBDeviceTasks
 10391  03CA                     i1_USBDeviceTasks:	
 10392                           
 10393                           ;usb_device.c: 479: uint8_t i;
 10394                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 10395                           
 10396                           ;incstack = 0
 10397 ;; hardware stack exceeded
 10398                           ; Regs used in i1_USBDeviceTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10399  03CA  0023               	movlb	3	; select bank3
 10400  03CB  0365               	decf	_USBDeviceState^(0+384),w	;volatile
 10401  03CC  1D03               	btfss	3,2
 10402  03CD  2BDA               	goto	i1l6944
 10403                           
 10404                           ;usb_device.c: 591: {
 10405                           ;usb_device.c: 601: if(!UCONbits.SE0)
 10406  03CE  003D               	movlb	29	; select bank29
 10407  03CF  1A8E               	btfsc	14,5	;volatile
 10408  03D0  2BDA               	goto	i1l6944
 10409                           
 10410                           ;usb_device.c: 602: {
 10411                           ;usb_device.c: 608: {UIR = 0;};
 10412  03D1  0190               	clrf	16	;volatile
 10413                           
 10414                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 10415  03D2  1412               	bsf	18,0	;volatile
 10416                           
 10417                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 10418  03D3  1612               	bsf	18,4	;volatile
 10419                           
 10420                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 10421  03D4  3002               	movlw	2
 10422  03D5  0021               	movlb	1	; select bank1
 10423  03D6  00A3               	movwf	??i1_USBDeviceTasks^(0+128)
 10424  03D7  0823               	movf	??i1_USBDeviceTasks^(0+128),w
 10425  03D8  0023               	movlb	3	; select bank3
 10426  03D9  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
 10427  03DA                     i1l6944:	
 10428                           
 10429                           ;usb_device.c: 617: }
 10430                           ;usb_device.c: 618: }
 10431                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 10432  03DA  003D               	movlb	29	; select bank29
 10433  03DB  1910               	btfsc	16,2	;volatile
 10434  03DC  1D12               	btfss	18,2	;volatile
 10435  03DD  2BE7               	goto	i1l6952
 10436                           
 10437                           ;usb_device.c: 635: {
 10438                           ;usb_device.c: 636: (UIR &= 0xFB);
 10439  03DE  30FB               	movlw	251
 10440  03DF  0021               	movlb	1	; select bank1
 10441  03E0  00A3               	movwf	??i1_USBDeviceTasks^(0+128)
 10442  03E1  0823               	movf	??i1_USBDeviceTasks^(0+128),w
 10443  03E2  003D               	movlb	29	; select bank29
 10444  03E3  0590               	andwf	16,f	;volatile
 10445                           
 10446                           ;usb_device.c: 640: USBWakeFromSuspend();
 10447  03E4  319F  277D  3183   	fcall	i1_USBWakeFromSuspend
 10448  03E7                     i1l6952:	
 10449                           
 10450                           ;usb_device.c: 642: }
 10451                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
 10452  03E7  003D               	movlb	29	; select bank29
 10453  03E8  1C8E               	btfss	14,1	;volatile
 10454  03E9  2BED               	goto	i1l393
 10455                           
 10456                           ;usb_device.c: 648: {
 10457                           ;usb_device.c: 649: PIR2bits.USBIF = 0;;
 10458  03EA  0020               	movlb	0	; select bank0
 10459  03EB  1112               	bcf	18,2	;volatile
 10460                           
 10461                           ;usb_device.c: 650: return;
 10462  03EC  0008               	return
 10463  03ED                     i1l393:	
 10464                           
 10465                           ;usb_device.c: 651: }
 10466                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 10467  03ED  1810               	btfsc	16,0	;volatile
 10468  03EE  1C12               	btfss	18,0	;volatile
 10469  03EF  2C00               	goto	i1l6966
 10470                           
 10471                           ;usb_device.c: 664: {
 10472                           ;usb_device.c: 665: USBDeviceInit();
 10473  03F0  3186  26E7  3183   	fcall	i1_USBDeviceInit
 10474                           
 10475                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
 10476  03F3  0021               	movlb	1	; select bank1
 10477  03F4  1512               	bsf	18,2	;volatile
 10478                           
 10479                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 10480  03F5  3004               	movlw	4
 10481  03F6  00A3               	movwf	??i1_USBDeviceTasks^(0+128)
 10482  03F7  0823               	movf	??i1_USBDeviceTasks^(0+128),w
 10483  03F8  0023               	movlb	3	; select bank3
 10484  03F9  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
 10485                           
 10486                           ;usb_device.c: 681: (UIR &= 0xFE);
 10487  03FA  30FE               	movlw	254
 10488  03FB  0021               	movlb	1	; select bank1
 10489  03FC  00A3               	movwf	??i1_USBDeviceTasks^(0+128)
 10490  03FD  0823               	movf	??i1_USBDeviceTasks^(0+128),w
 10491  03FE  003D               	movlb	29	; select bank29
 10492  03FF  0590               	andwf	16,f	;volatile
 10493  0400                     i1l6966:	
 10494                           
 10495                           ;usb_device.c: 682: }
 10496                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 10497  0400  1A10               	btfsc	16,4	;volatile
 10498  0401  1E12               	btfss	18,4	;volatile
 10499  0402  2C06               	goto	i1l6972
 10500                           
 10501                           ;usb_device.c: 688: {
 10502                           ;usb_device.c: 694: USBSuspend();
 10503  0403  319E  26E0  3183   	fcall	i1_USBSuspend
 10504  0406                     i1l6972:	
 10505                           
 10506                           ;usb_device.c: 696: }
 10507                           ;usb_device.c: 708: if(UIRbits.SOFIF)
 10508  0406  003D               	movlb	29	; select bank29
 10509  0407  1F10               	btfss	16,6	;volatile
 10510  0408  2C30               	goto	i1l6988
 10511                           
 10512                           ;usb_device.c: 709: {
 10513                           ;usb_device.c: 711: if(UIEbits.SOFIE)
 10514  0409  1F12               	btfss	18,6	;volatile
 10515  040A  2C1B               	goto	i1l6978
 10516                           
 10517                           ;usb_device.c: 712: {
 10518                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 10519  040B  3073               	movlw	115
 10520  040C  0020               	movlb	0	; select bank0
 10521  040D  00E0               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 10522  040E  3000               	movlw	0
 10523  040F  00E1               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 10524  0410  3000               	movlw	0
 10525  0411  00E2               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 10526  0412  3000               	movlw	0
 10527  0413  00E3               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 10528  0414  3001               	movlw	1
 10529  0415  00E4               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 10530  0416  3000               	movlw	0
 10531  0417  00E5               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 10532  0418  3190  20D8  3183   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 10533  041B                     i1l6978:	
 10534                           
 10535                           ;usb_device.c: 714: }
 10536                           ;usb_device.c: 715: (UIR &= 0xBF);
 10537  041B  30BF               	movlw	191
 10538  041C  0021               	movlb	1	; select bank1
 10539  041D  00A3               	movwf	??i1_USBDeviceTasks^(0+128)
 10540  041E  0823               	movf	??i1_USBDeviceTasks^(0+128),w
 10541  041F  003D               	movlb	29	; select bank29
 10542  0420  0590               	andwf	16,f	;volatile
 10543                           
 10544                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 10545  0421  319E  265A  3183   	fcall	i1_USBIncrement1msInternalTimers
 10546                           
 10547                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 10548  0424  0023               	movlb	3	; select bank3
 10549  0425  085C               	movf	_USBStatusStageTimeoutCounter^(0+384),w	;volatile
 10550  0426  1903               	btfsc	3,2
 10551  0427  2C2A               	goto	i1l399
 10552                           
 10553                           ;usb_device.c: 736: {
 10554                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 10555  0428  3001               	movlw	1
 10556  0429  02DC               	subwf	_USBStatusStageTimeoutCounter^(0+384),f	;volatile
 10557  042A                     i1l399:	
 10558                           
 10559                           ;usb_device.c: 738: }
 10560                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 10561  042A  085C               	movf	_USBStatusStageTimeoutCounter^(0+384),w	;volatile
 10562  042B  1D03               	btfss	3,2
 10563  042C  2C30               	goto	i1l6988
 10564                           
 10565                           ;usb_device.c: 745: {
 10566                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 10567  042D  3187  2794  3183   	fcall	i1_USBCtrlEPAllowStatusStage
 10568  0430                     i1l6988:	
 10569                           
 10570                           ;usb_device.c: 747: }
 10571                           ;usb_device.c: 749: }
 10572                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 10573  0430  003D               	movlb	29	; select bank29
 10574  0431  1A90               	btfsc	16,5	;volatile
 10575  0432  1E92               	btfss	18,5	;volatile
 10576  0433  2C37               	goto	i1l6994
 10577                           
 10578                           ;usb_device.c: 752: {
 10579                           ;usb_device.c: 753: USBStallHandler();
 10580  0434  3190  2036  3183   	fcall	i1_USBStallHandler
 10581  0437                     i1l6994:	
 10582                           
 10583                           ;usb_device.c: 754: }
 10584                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 10585  0437  003D               	movlb	29	; select bank29
 10586  0438  1890               	btfsc	16,1	;volatile
 10587  0439  1C92               	btfss	18,1	;volatile
 10588  043A  2C4D               	goto	i1l7002
 10589                           
 10590                           ;usb_device.c: 757: {
 10591                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 10592  043B  30FF               	movlw	255
 10593  043C  0020               	movlb	0	; select bank0
 10594  043D  00E0               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 10595  043E  307F               	movlw	127
 10596  043F  00E1               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 10597  0440  3000               	movlw	0
 10598  0441  00E2               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 10599  0442  3000               	movlw	0
 10600  0443  00E3               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 10601  0444  3001               	movlw	1
 10602  0445  00E4               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 10603  0446  3000               	movlw	0
 10604  0447  00E5               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 10605  0448  3190  20D8  3183   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 10606                           
 10607                           ;usb_device.c: 759: {UEIR = 0;};
 10608  044B  003D               	movlb	29	; select bank29
 10609  044C  0193               	clrf	19	;volatile
 10610  044D                     i1l7002:	
 10611                           
 10612                           ;usb_device.c: 767: }
 10613                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 10614  044D  3004               	movlw	4
 10615  044E  0023               	movlb	3	; select bank3
 10616  044F  0265               	subwf	_USBDeviceState^(0+384),w	;volatile
 10617  0450  1803               	skipnc
 10618  0451  2C55               	goto	i1l403
 10619                           
 10620                           ;usb_device.c: 775: {
 10621                           ;usb_device.c: 776: PIR2bits.USBIF = 0;;
 10622  0452  0020               	movlb	0	; select bank0
 10623  0453  1112               	bcf	18,2	;volatile
 10624                           
 10625                           ;usb_device.c: 777: return;
 10626  0454  0008               	return
 10627  0455                     i1l403:	
 10628                           
 10629                           ;usb_device.c: 778: }
 10630                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 10631  0455  003D               	movlb	29	; select bank29
 10632  0456  1D92               	btfss	18,3	;volatile
 10633  0457  2CAF               	goto	i1l404
 10634                           
 10635                           ;usb_device.c: 784: {
 10636                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 10637  0458  0020               	movlb	0	; select bank0
 10638  0459  01EF               	clrf	i1USBDeviceTasks@i
 10639  045A  3004               	movlw	4
 10640  045B  026F               	subwf	i1USBDeviceTasks@i,w
 10641  045C  1803               	btfsc	3,0
 10642  045D  2CAF               	goto	i1l404
 10643  045E                     i1l405:	
 10644                           
 10645                           ;usb_device.c: 786: {
 10646                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 10647  045E  003D               	movlb	29	; select bank29
 10648  045F  1D90               	btfss	16,3	;volatile
 10649  0460  2CAF               	goto	i1l404
 10650                           
 10651                           ;usb_device.c: 788: {
 10652                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 10653  0461  080F               	movf	15,w	;volatile
 10654  0462  0021               	movlb	1	; select bank1
 10655  0463  00A3               	movwf	??i1_USBDeviceTasks^(0+128)
 10656  0464  0823               	movf	??i1_USBDeviceTasks^(0+128),w
 10657  0465  0023               	movlb	3	; select bank3
 10658  0466  00ED               	movwf	_USTATcopy^(0+384)	;volatile
 10659                           
 10660                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 10661  0467  0C6D               	rrf	_USTATcopy^(0+384),w	;volatile
 10662  0468  0021               	movlb	1	; select bank1
 10663  0469  00A3               	movwf	??i1_USBDeviceTasks^(0+128)
 10664  046A  0CA3               	rrf	??i1_USBDeviceTasks^(0+128),f
 10665  046B  0C23               	rrf	??i1_USBDeviceTasks^(0+128),w
 10666  046C  390F               	andlw	15
 10667  046D  00A4               	movwf	(??i1_USBDeviceTasks+1)^(0+128)
 10668  046E  0824               	movf	(??i1_USBDeviceTasks+1)^(0+128),w
 10669  046F  0023               	movlb	3	; select bank3
 10670  0470  00DE               	movwf	_endpoint_number^(0+384)	;volatile
 10671                           
 10672                           ;usb_device.c: 793: (UIR &= 0xF7);
 10673  0471  30F7               	movlw	247
 10674  0472  0021               	movlb	1	; select bank1
 10675  0473  00A3               	movwf	??i1_USBDeviceTasks^(0+128)
 10676  0474  0823               	movf	??i1_USBDeviceTasks^(0+128),w
 10677  0475  003D               	movlb	29	; select bank29
 10678  0476  0590               	andwf	16,f	;volatile
 10679                           
 10680                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 10681  0477  0023               	movlb	3	; select bank3
 10682  0478  196D               	btfsc	_USTATcopy^(0+384),2	;volatile
 10683  0479  2C7D               	goto	i1l7022
 10684                           
 10685                           ;usb_device.c: 799: {
 10686                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 10687  047A  085E               	movf	_endpoint_number^(0+384),w	;volatile
 10688  047B  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
 10689  047C  2C80               	goto	L12
 10690  047D                     i1l7022:	
 10691                           ;usb_device.c: 801: }
 10692                           
 10693                           
 10694                           ;usb_device.c: 802: else
 10695                           ;usb_device.c: 803: {
 10696                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 10697  047D  0023               	movlb	3	; select bank3
 10698  047E  085E               	movf	_endpoint_number^(0+384),w	;volatile
 10699  047F  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
 10700  0480                     L12:	
 10701  0480  0086               	movwf	6
 10702  0481  3001               	movlw	1	; select bank3/4
 10703  0482  0087               	movwf	7
 10704  0483  0801               	movf	1,w
 10705  0484  3901               	andlw	1
 10706  0485  0021               	movlb	1	; select bank1
 10707  0486  00A3               	movwf	??i1_USBDeviceTasks^(0+128)
 10708  0487  3001               	movlw	1
 10709  0488  06A3               	xorwf	??i1_USBDeviceTasks^(0+128),f
 10710  0489  0801               	movf	1,w
 10711  048A  0623               	xorwf	??i1_USBDeviceTasks^(0+128),w
 10712  048B  39FE               	andlw	-2
 10713  048C  0623               	xorwf	??i1_USBDeviceTasks^(0+128),w
 10714  048D  0081               	movwf	1
 10715                           
 10716                           ;usb_device.c: 805: }
 10717                           ;usb_device.c: 810: if(endpoint_number == 0)
 10718  048E  0023               	movlb	3	; select bank3
 10719  048F  085E               	movf	_endpoint_number^(0+384),w	;volatile
 10720  0490  1D03               	btfss	3,2
 10721  0491  2C96               	goto	i1l7028
 10722                           
 10723                           ;usb_device.c: 811: {
 10724                           ;usb_device.c: 812: USBCtrlEPService();
 10725  0492  3195  25CC  3183   	fcall	i1_USBCtrlEPService
 10726                           
 10727                           ;usb_device.c: 813: }
 10728  0495  2CA5               	goto	i1l7030
 10729  0496                     i1l7028:	
 10730                           
 10731                           ;usb_device.c: 814: else
 10732                           ;usb_device.c: 815: {
 10733                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 10734  0496  3072               	movlw	114
 10735  0497  0020               	movlb	0	; select bank0
 10736  0498  00E0               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 10737  0499  3000               	movlw	0
 10738  049A  00E1               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 10739  049B  30ED               	movlw	low _USTATcopy
 10740  049C  00E2               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 10741  049D  3001               	movlw	high _USTATcopy
 10742  049E  00E3               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 10743  049F  3000               	movlw	0
 10744  04A0  00E4               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 10745  04A1  00E5               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 10746  04A2  3190  20D8  3183   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 10747  04A5                     i1l7030:	
 10748                           ;usb_device.c: 819: else
 10749                           ;usb_device.c: 820: {
 10750                           ;usb_device.c: 821: break;
 10751                           
 10752                           ;usb_device.c: 817: }
 10753                           ;usb_device.c: 818: }
 10754                           
 10755  04A5  3001               	movlw	1
 10756  04A6  0021               	movlb	1	; select bank1
 10757  04A7  00A3               	movwf	??i1_USBDeviceTasks^(0+128)
 10758  04A8  0823               	movf	??i1_USBDeviceTasks^(0+128),w
 10759  04A9  0020               	movlb	0	; select bank0
 10760  04AA  07EF               	addwf	i1USBDeviceTasks@i,f
 10761  04AB  3004               	movlw	4
 10762  04AC  026F               	subwf	i1USBDeviceTasks@i,w
 10763  04AD  1C03               	skipc
 10764  04AE  2C5E               	goto	i1l405
 10765  04AF                     i1l404:	
 10766                           
 10767                           ;usb_device.c: 822: }
 10768                           ;usb_device.c: 823: }
 10769                           ;usb_device.c: 824: }
 10770                           ;usb_device.c: 826: PIR2bits.USBIF = 0;;
 10771  04AF  0020               	movlb	0	; select bank0
 10772  04B0  1112               	bcf	18,2	;volatile
 10773  04B1  0008               	return
 10774  04B2                     __end_ofi1_USBDeviceTasks:	
 10775                           
 10776                           	psect	text45
 10777  1F7D                     __ptext45:	
 10778 ;; *************** function i1_USBWakeFromSuspend *****************
 10779 ;; Defined at:
 10780 ;;		line 2303 in file "mcc_generated_files/usb/usb_device.c"
 10781 ;; Parameters:    Size  Location     Type
 10782 ;;		None
 10783 ;; Auto vars:     Size  Location     Type
 10784 ;;		None
 10785 ;; Return value:  Size  Location     Type
 10786 ;;                  1    wreg      void 
 10787 ;; Registers used:
 10788 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10789 ;; Tracked objects:
 10790 ;;		On entry : 0/0
 10791 ;;		On exit  : 0/0
 10792 ;;		Unchanged: 0/0
 10793 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10796 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10797 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10798 ;;Total ram usage:        1 bytes
 10799 ;; Hardware stack levels used:    1
 10800 ;; Hardware stack levels required when called:    4
 10801 ;; This function calls:
 10802 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 10803 ;; This function is called by:
 10804 ;;		i1_USBDeviceTasks
 10805 ;; This function uses a non-reentrant model
 10806 ;;
 10807                           
 10808                           
 10809                           ;psect for function i1_USBWakeFromSuspend
 10810  1F7D                     i1_USBWakeFromSuspend:	
 10811                           
 10812                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
 10813                           
 10814                           ;incstack = 0
 10815                           ; Regs used in i1_USBWakeFromSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10816  1F7D  0023               	movlb	3	; select bank3
 10817  1F7E  01DF               	clrf	_USBBusIsSuspended^(0+384)	;volatile
 10818                           
 10819                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 10820  1F7F  3074               	movlw	116
 10821  1F80  0020               	movlb	0	; select bank0
 10822  1F81  00E0               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 10823  1F82  3000               	movlw	0
 10824  1F83  00E1               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 10825  1F84  3000               	movlw	0
 10826  1F85  00E2               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 10827  1F86  3000               	movlw	0
 10828  1F87  00E3               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 10829  1F88  3000               	movlw	0
 10830  1F89  00E4               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 10831  1F8A  00E5               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 10832  1F8B  3190  20D8  319F   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 10833                           
 10834                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
 10835  1F8E  003D               	movlb	29	; select bank29
 10836  1F8F  108E               	bcf	14,1	;volatile
 10837                           
 10838                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
 10839  1F90  1112               	bcf	18,2	;volatile
 10840  1F91                     i1l6626:	
 10841                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
 10842                           
 10843  1F91  1D10               	btfss	16,2	;volatile
 10844  1F92  2F9A               	goto	i1l6628
 10845                           
 10846                           ;usb_device.c: 2343: {
 10847                           ;usb_device.c: 2344: (UIR &= 0xFB);
 10848  1F93  30FB               	movlw	251
 10849  1F94  0020               	movlb	0	; select bank0
 10850  1F95  00E6               	movwf	??i1_USBWakeFromSuspend
 10851  1F96  0866               	movf	??i1_USBWakeFromSuspend,w
 10852  1F97  003D               	movlb	29	; select bank29
 10853  1F98  0590               	andwf	16,f	;volatile
 10854  1F99  2F91               	goto	i1l6626
 10855  1F9A                     i1l6628:	
 10856                           
 10857                           ;usb_device.c: 2345: }
 10858                           ;usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
 10859  1F9A  0023               	movlb	3	; select bank3
 10860  1F9B  01D6               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
 10861  1F9C  0008               	return
 10862  1F9D                     __end_ofi1_USBWakeFromSuspend:	
 10863                           
 10864                           	psect	text46
 10865  1EE0                     __ptext46:	
 10866 ;; *************** function i1_USBSuspend *****************
 10867 ;; Defined at:
 10868 ;;		line 2245 in file "mcc_generated_files/usb/usb_device.c"
 10869 ;; Parameters:    Size  Location     Type
 10870 ;;		None
 10871 ;; Auto vars:     Size  Location     Type
 10872 ;;		None
 10873 ;; Return value:  Size  Location     Type
 10874 ;;                  1    wreg      void 
 10875 ;; Registers used:
 10876 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10877 ;; Tracked objects:
 10878 ;;		On entry : 0/0
 10879 ;;		On exit  : 0/0
 10880 ;;		Unchanged: 0/0
 10881 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10884 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10885 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10886 ;;Total ram usage:        1 bytes
 10887 ;; Hardware stack levels used:    1
 10888 ;; Hardware stack levels required when called:    4
 10889 ;; This function calls:
 10890 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 10891 ;; This function is called by:
 10892 ;;		i1_USBDeviceTasks
 10893 ;; This function uses a non-reentrant model
 10894 ;;
 10895                           
 10896                           
 10897                           ;psect for function i1_USBSuspend
 10898  1EE0                     i1_USBSuspend:	
 10899                           
 10900                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 10901                           
 10902                           ;incstack = 0
 10903                           ; Regs used in i1_USBSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10904  1EE0  003D               	movlb	29	; select bank29
 10905  1EE1  1512               	bsf	18,2	;volatile
 10906                           
 10907                           ;usb_device.c: 2271: (UIR &= 0xEF);
 10908  1EE2  30EF               	movlw	239
 10909  1EE3  0020               	movlb	0	; select bank0
 10910  1EE4  00E6               	movwf	??i1_USBSuspend
 10911  1EE5  0866               	movf	??i1_USBSuspend,w
 10912  1EE6  003D               	movlb	29	; select bank29
 10913  1EE7  0590               	andwf	16,f	;volatile
 10914                           
 10915                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 10916  1EE8  148E               	bsf	14,1	;volatile
 10917                           
 10918                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 10919  1EE9  3001               	movlw	1
 10920  1EEA  0020               	movlb	0	; select bank0
 10921  1EEB  00E6               	movwf	??i1_USBSuspend
 10922  1EEC  0866               	movf	??i1_USBSuspend,w
 10923  1EED  0023               	movlb	3	; select bank3
 10924  1EEE  00DF               	movwf	_USBBusIsSuspended^(0+384)	;volatile
 10925                           
 10926                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
 10927  1EEF  01D6               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
 10928                           
 10929                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 10930  1EF0  3075               	movlw	117
 10931  1EF1  0020               	movlb	0	; select bank0
 10932  1EF2  00E0               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 10933  1EF3  3000               	movlw	0
 10934  1EF4  00E1               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 10935  1EF5  3000               	movlw	0
 10936  1EF6  00E2               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 10937  1EF7  3000               	movlw	0
 10938  1EF8  00E3               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 10939  1EF9  3000               	movlw	0
 10940  1EFA  00E4               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 10941  1EFB  00E5               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 10942  1EFC  3190  20D8         	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 10943  1EFE  0008               	return
 10944  1EFF                     __end_ofi1_USBSuspend:	
 10945                           
 10946                           	psect	text47
 10947  1036                     __ptext47:	
 10948 ;; *************** function i1_USBStallHandler *****************
 10949 ;; Defined at:
 10950 ;;		line 2202 in file "mcc_generated_files/usb/usb_device.c"
 10951 ;; Parameters:    Size  Location     Type
 10952 ;;		None
 10953 ;; Auto vars:     Size  Location     Type
 10954 ;;		None
 10955 ;; Return value:  Size  Location     Type
 10956 ;;                  1    wreg      void 
 10957 ;; Registers used:
 10958 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10959 ;; Tracked objects:
 10960 ;;		On entry : 0/0
 10961 ;;		On exit  : 0/0
 10962 ;;		Unchanged: 0/0
 10963 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10966 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10967 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10968 ;;Total ram usage:        1 bytes
 10969 ;; Hardware stack levels used:    1
 10970 ;; This function calls:
 10971 ;;		Nothing
 10972 ;; This function is called by:
 10973 ;;		i1_USBDeviceTasks
 10974 ;; This function uses a non-reentrant model
 10975 ;;
 10976                           
 10977                           
 10978                           ;psect for function i1_USBStallHandler
 10979  1036                     i1_USBStallHandler:	
 10980                           
 10981                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 10982                           
 10983                           ;incstack = 0
 10984                           ; Regs used in i1_USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 10985  1036  003D               	movlb	29	; select bank29
 10986  1037  1C18               	btfss	24,0	;volatile
 10987  1038  2856               	goto	i1l6602
 10988                           
 10989                           ;usb_device.c: 2215: {
 10990                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 10991  1039  0023               	movlb	3	; select bank3
 10992  103A  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 10993  103B  0086               	movwf	6
 10994  103C  0187               	clrf	7
 10995  103D  3080               	movlw	128
 10996  103E  0601               	xorwf	1,w
 10997  103F  1D03               	btfss	3,2
 10998  1040  2854               	goto	i1l6600
 10999  1041  0837               	movf	_pBDTEntryIn^(0+384),w
 11000  1042  0086               	movwf	6
 11001  1043  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 11002  1044  0087               	movwf	7
 11003  1045  3084               	movlw	132
 11004  1046  0601               	xorwf	1,w
 11005  1047  1D03               	btfss	3,2
 11006  1048  2854               	goto	i1l6600
 11007                           
 11008                           ;usb_device.c: 2218: {
 11009                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 11010  1049  300C               	movlw	12
 11011  104A  00F0               	movwf	??i1_USBStallHandler
 11012  104B  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 11013  104C  0086               	movwf	6
 11014  104D  0187               	clrf	7
 11015  104E  0870               	movf	??i1_USBStallHandler,w
 11016  104F  0081               	movwf	1
 11017                           
 11018                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 11019  1050  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 11020  1051  0086               	movwf	6
 11021  1052  0187               	clrf	7
 11022  1053  1781               	bsf	1,7
 11023  1054                     i1l6600:	
 11024                           
 11025                           ;usb_device.c: 2222: }
 11026                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 11027  1054  003D               	movlb	29	; select bank29
 11028  1055  1018               	bcf	24,0	;volatile
 11029  1056                     i1l6602:	
 11030                           
 11031                           ;usb_device.c: 2224: }
 11032                           ;usb_device.c: 2226: (UIR &= 0xDF);
 11033  1056  30DF               	movlw	223
 11034  1057  00F0               	movwf	??i1_USBStallHandler
 11035  1058  0870               	movf	??i1_USBStallHandler,w
 11036  1059  0590               	andwf	16,f	;volatile
 11037  105A  0008               	return
 11038  105B                     __end_ofi1_USBStallHandler:	
 11039                           
 11040                           	psect	text48
 11041  1E5A                     __ptext48:	
 11042 ;; *************** function i1_USBIncrement1msInternalTimers *****************
 11043 ;; Defined at:
 11044 ;;		line 3025 in file "mcc_generated_files/usb/usb_device.c"
 11045 ;; Parameters:    Size  Location     Type
 11046 ;;		None
 11047 ;; Auto vars:     Size  Location     Type
 11048 ;;		None
 11049 ;; Return value:  Size  Location     Type
 11050 ;;                  1    wreg      void 
 11051 ;; Registers used:
 11052 ;;		wreg, status,2, status,0
 11053 ;; Tracked objects:
 11054 ;;		On entry : 0/0
 11055 ;;		On exit  : 0/0
 11056 ;;		Unchanged: 0/0
 11057 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11060 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11061 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11062 ;;Total ram usage:        1 bytes
 11063 ;; Hardware stack levels used:    1
 11064 ;; This function calls:
 11065 ;;		Nothing
 11066 ;; This function is called by:
 11067 ;;		i1_USBDeviceTasks
 11068 ;; This function uses a non-reentrant model
 11069 ;;
 11070                           
 11071                           
 11072                           ;psect for function i1_USBIncrement1msInternalTimers
 11073  1E5A                     i1_USBIncrement1msInternalTimers:	
 11074                           
 11075                           ;usb_device.c: 3033: USB1msTickCount++;
 11076                           
 11077                           ;incstack = 0
 11078                           ; Regs used in i1_USBIncrement1msInternalTimers: [wreg+status,2+status,0]
 11079  1E5A  3001               	movlw	1
 11080  1E5B  0023               	movlb	3	; select bank3
 11081  1E5C  07C3               	addwf	_USB1msTickCount^(0+384),f	;volatile
 11082  1E5D  3000               	movlw	0
 11083  1E5E  3DC4               	addwfc	(_USB1msTickCount+1)^(0+384),f	;volatile
 11084  1E5F  3000               	movlw	0
 11085  1E60  3DC5               	addwfc	(_USB1msTickCount+2)^(0+384),f	;volatile
 11086  1E61  3000               	movlw	0
 11087  1E62  3DC6               	addwfc	(_USB1msTickCount+3)^(0+384),f	;volatile
 11088                           
 11089                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
 11090  1E63  085F               	movf	_USBBusIsSuspended^(0+384),w	;volatile
 11091  1E64  1D03               	btfss	3,2
 11092  1E65  0008               	return
 11093                           
 11094                           ;usb_device.c: 3035: {
 11095                           ;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
 11096  1E66  3001               	movlw	1
 11097  1E67  00F0               	movwf	??i1_USBIncrement1msInternalTimers
 11098  1E68  0870               	movf	??i1_USBIncrement1msInternalTimers,w
 11099  1E69  07D6               	addwf	_USBTicksSinceSuspendEnd^(0+384),f	;volatile
 11100                           
 11101                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
 11102  1E6A  0856               	movf	_USBTicksSinceSuspendEnd^(0+384),w	;volatile
 11103  1E6B  1D03               	btfss	3,2
 11104  1E6C  0008               	return
 11105                           
 11106                           ;usb_device.c: 3039: {
 11107                           ;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
 11108  1E6D  30FF               	movlw	255
 11109  1E6E  00F0               	movwf	??i1_USBIncrement1msInternalTimers
 11110  1E6F  0870               	movf	??i1_USBIncrement1msInternalTimers,w
 11111  1E70  00D6               	movwf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
 11112  1E71  0008               	return
 11113  1E72                     __end_ofi1_USBIncrement1msInternalTimers:	
 11114                           
 11115                           	psect	text49
 11116  06E7                     __ptext49:	
 11117 ;; *************** function i1_USBDeviceInit *****************
 11118 ;; Defined at:
 11119 ;;		line 277 in file "mcc_generated_files/usb/usb_device.c"
 11120 ;; Parameters:    Size  Location     Type
 11121 ;;		None
 11122 ;; Auto vars:     Size  Location     Type
 11123 ;;  USBDeviceIni    2    1[COMMON] PTR unsigned char 
 11124 ;;		 -> UEP1(1), 
 11125 ;;  USBDeviceIni    1    4[COMMON] unsigned char 
 11126 ;;  USBDeviceIni    1    3[COMMON] unsigned char 
 11127 ;; Return value:  Size  Location     Type
 11128 ;;                  1    wreg      void 
 11129 ;; Registers used:
 11130 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11131 ;; Tracked objects:
 11132 ;;		On entry : 0/0
 11133 ;;		On exit  : 0/0
 11134 ;;		Unchanged: 0/0
 11135 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11137 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11138 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11139 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11140 ;;Total ram usage:        5 bytes
 11141 ;; Hardware stack levels used:    1
 11142 ;; This function calls:
 11143 ;;		Nothing
 11144 ;; This function is called by:
 11145 ;;		i1_USBDeviceTasks
 11146 ;; This function uses a non-reentrant model
 11147 ;;
 11148                           
 11149                           
 11150                           ;psect for function i1_USBDeviceInit
 11151  06E7                     i1_USBDeviceInit:	
 11152                           
 11153                           ;usb_device.c: 279: uint8_t i;
 11154                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 11155                           
 11156                           ;incstack = 0
 11157                           ; Regs used in i1_USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
 11158  06E7  0021               	movlb	1	; select bank1
 11159  06E8  1112               	bcf	18,2	;volatile
 11160                           
 11161                           ;usb_device.c: 285: ;
 11162                           ;usb_device.c: 288: {UEIR = 0;};
 11163  06E9  003D               	movlb	29	; select bank29
 11164  06EA  0193               	clrf	19	;volatile
 11165                           
 11166                           ;usb_device.c: 291: {UIR = 0;};
 11167  06EB  0190               	clrf	16	;volatile
 11168                           
 11169                           ;usb_device.c: 294: UEP0 = 0;
 11170  06EC  0198               	clrf	24	;volatile
 11171                           
 11172                           ;usb_device.c: 296: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 0
      +                          ; };
 11173  06ED  300E               	movlw	14
 11174  06EE  00F2               	movwf	i1USBDeviceInit@p+1
 11175  06EF  3099               	movlw	153
 11176  06F0  00F1               	movwf	i1USBDeviceInit@p
 11177  06F1  01F3               	clrf	i1USBDeviceInit@i_1495
 11178  06F2  3002               	movlw	2
 11179  06F3  0273               	subwf	i1USBDeviceInit@i_1495,w
 11180  06F4  1803               	btfsc	3,0
 11181  06F5  2F07               	goto	i1l6524
 11182  06F6                     i1l6516:	
 11183  06F6  0871               	movf	i1USBDeviceInit@p,w
 11184  06F7  0086               	movwf	6
 11185  06F8  0872               	movf	i1USBDeviceInit@p+1,w
 11186  06F9  0087               	movwf	7
 11187  06FA  0181               	clrf	1
 11188  06FB  3001               	movlw	1
 11189  06FC  07F1               	addwf	i1USBDeviceInit@p,f
 11190  06FD  3000               	movlw	0
 11191  06FE  3DF2               	addwfc	i1USBDeviceInit@p+1,f
 11192  06FF  3001               	movlw	1
 11193  0700  00F0               	movwf	??i1_USBDeviceInit
 11194  0701  0870               	movf	??i1_USBDeviceInit,w
 11195  0702  07F3               	addwf	i1USBDeviceInit@i_1495,f
 11196  0703  3002               	movlw	2
 11197  0704  0273               	subwf	i1USBDeviceInit@i_1495,w
 11198  0705  1C03               	skipc
 11199  0706  2EF6               	goto	i1l6516
 11200  0707                     i1l6524:	
 11201                           
 11202                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 11203  0707  3016               	movlw	22
 11204  0708  003D               	movlb	29	; select bank29
 11205  0709  0091               	movwf	17	;volatile
 11206  070A  309F               	movlw	159
 11207  070B  0097               	movwf	23	;volatile
 11208  070C  307B               	movlw	123
 11209  070D  0092               	movwf	18	;volatile
 11210                           
 11211                           ;usb_device.c: 301: ;
 11212                           ;usb_device.c: 304: ;
 11213                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
 11214  070E  01F4               	clrf	i1USBDeviceInit@i
 11215  070F  300C               	movlw	12
 11216  0710  0274               	subwf	i1USBDeviceInit@i,w
 11217  0711  1803               	btfsc	3,0
 11218  0712  2F2C               	goto	i1l382
 11219  0713                     i1l6532:	
 11220                           
 11221                           ;usb_device.c: 308: {
 11222                           ;usb_device.c: 309: BDT[i].Val = 0x00;
 11223  0713  0874               	movf	i1USBDeviceInit@i,w
 11224  0714  00F0               	movwf	??i1_USBDeviceInit
 11225  0715  3001               	movlw	1
 11226  0716                     u550_25:	
 11227  0716  35F0               	lslf	??i1_USBDeviceInit,f
 11228  0717  3EFF               	addlw	-1
 11229  0718  1D03               	skipz
 11230  0719  2F16               	goto	u550_25
 11231  071A  3570               	lslf	??i1_USBDeviceInit,w
 11232  071B  3E20               	addlw	32
 11233  071C  0086               	movwf	6
 11234  071D  0187               	clrf	7
 11235  071E  3000               	movlw	0
 11236  071F  3FC0               	movwi [0]fsr1
 11237  0720  3000               	movlw	0
 11238  0721  3FC1               	movwi [1]fsr1
 11239  0722  3FC2               	movwi [2]fsr1
 11240  0723  3FC3               	movwi [3]fsr1
 11241  0724  3001               	movlw	1
 11242  0725  00F0               	movwf	??i1_USBDeviceInit
 11243  0726  0870               	movf	??i1_USBDeviceInit,w
 11244  0727  07F4               	addwf	i1USBDeviceInit@i,f
 11245  0728  300C               	movlw	12
 11246  0729  0274               	subwf	i1USBDeviceInit@i,w
 11247  072A  1C03               	skipc
 11248  072B  2F13               	goto	i1l6532
 11249  072C                     i1l382:	
 11250                           
 11251                           ;usb_device.c: 310: }
 11252                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
 11253  072C  003D               	movlb	29	; select bank29
 11254  072D  170E               	bsf	14,6	;volatile
 11255                           
 11256                           ;usb_device.c: 316: UADDR = 0x00;
 11257  072E  0196               	clrf	22	;volatile
 11258                           
 11259                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 11260  072F  120E               	bcf	14,4	;volatile
 11261                           
 11262                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 11263  0730  130E               	bcf	14,6	;volatile
 11264  0731                     i1l6544:	
 11265                           ;usb_device.c: 325: do
 11266                           
 11267                           
 11268                           ;usb_device.c: 326: {
 11269                           ;usb_device.c: 327: (UIR &= 0xF7);
 11270  0731  30F7               	movlw	247
 11271  0732  00F0               	movwf	??i1_USBDeviceInit
 11272  0733  0870               	movf	??i1_USBDeviceInit,w
 11273  0734  0590               	andwf	16,f	;volatile
 11274                           
 11275                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 11276  0735  0021               	movlb	1	; select bank1
 11277  0736  01C5               	clrf	(_inPipes^(0+128)+2)	;volatile
 11278                           
 11279                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 11280  0737  0023               	movlb	3	; select bank3
 11281  0738  01B2               	clrf	(_outPipes^(0+384)+2)	;volatile
 11282                           
 11283                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 11284  0739  01B3               	clrf	(_outPipes^(0+384)+3)	;volatile
 11285  073A  01B4               	clrf	((_outPipes+1)^(0+384)+3)	;volatile
 11286                           
 11287                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 11288  073B  003D               	movlb	29	; select bank29
 11289  073C  1990               	btfsc	16,3	;volatile
 11290  073D  2F31               	goto	i1l6544
 11291                           
 11292                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 11293  073E  3001               	movlw	1
 11294  073F  00F0               	movwf	??i1_USBDeviceInit
 11295  0740  0870               	movf	??i1_USBDeviceInit,w
 11296  0741  0023               	movlb	3	; select bank3
 11297  0742  00DA               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
 11298                           
 11299                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 11300  0743  3001               	movlw	1
 11301  0744  00F0               	movwf	??i1_USBDeviceInit
 11302  0745  0870               	movf	??i1_USBDeviceInit,w
 11303  0746  00D9               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
 11304                           
 11305                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 11306  0747  01D8               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
 11307                           
 11308                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 11309  0748  01D7               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
 11310                           
 11311                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 11312  0749  01DF               	clrf	_USBBusIsSuspended^(0+384)	;volatile
 11313                           
 11314                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 11315  074A  01F4               	clrf	i1USBDeviceInit@i
 11316  074B  3003               	movlw	3
 11317  074C  0274               	subwf	i1USBDeviceInit@i,w
 11318  074D  1803               	btfsc	3,0
 11319  074E  2F73               	goto	i1l6572
 11320  074F                     i1l6566:	
 11321                           
 11322                           ;usb_device.c: 346: {
 11323                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 11324  074F  3574               	lslf	i1USBDeviceInit@i,w
 11325  0750  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 11326  0751  0086               	movwf	6
 11327  0752  3001               	movlw	1	; select bank3/4
 11328  0753  0087               	movwf	7
 11329  0754  3000               	movlw	0
 11330  0755  3FC0               	movwi [0]fsr1
 11331  0756  3FC1               	movwi [1]fsr1
 11332                           
 11333                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 11334  0757  3574               	lslf	i1USBDeviceInit@i,w
 11335  0758  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 11336  0759  0086               	movwf	6
 11337  075A  3001               	movlw	1	; select bank3/4
 11338  075B  0087               	movwf	7
 11339  075C  3000               	movlw	0
 11340  075D  3FC0               	movwi [0]fsr1
 11341  075E  3FC1               	movwi [1]fsr1
 11342                           
 11343                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 11344  075F  0874               	movf	i1USBDeviceInit@i,w
 11345  0760  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
 11346  0761  0086               	movwf	6
 11347  0762  3001               	movlw	1	; select bank3/4
 11348  0763  0087               	movwf	7
 11349  0764  0181               	clrf	1
 11350                           
 11351                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 11352  0765  0874               	movf	i1USBDeviceInit@i,w
 11353  0766  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
 11354  0767  0086               	movwf	6
 11355  0768  3001               	movlw	1	; select bank3/4
 11356  0769  0087               	movwf	7
 11357  076A  0181               	clrf	1
 11358  076B  3001               	movlw	1
 11359  076C  00F0               	movwf	??i1_USBDeviceInit
 11360  076D  0870               	movf	??i1_USBDeviceInit,w
 11361  076E  07F4               	addwf	i1USBDeviceInit@i,f
 11362  076F  3003               	movlw	3
 11363  0770  0274               	subwf	i1USBDeviceInit@i,w
 11364  0771  1C03               	skipc
 11365  0772  2F4F               	goto	i1l6566
 11366  0773                     i1l6572:	
 11367                           
 11368                           ;usb_device.c: 351: }
 11369                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 11370  0773  3028               	movlw	40
 11371  0774  0023               	movlb	3	; select bank3
 11372  0775  00B7               	movwf	_pBDTEntryIn^(0+384)
 11373  0776  3000               	movlw	0
 11374  0777  00B8               	movwf	(_pBDTEntryIn+1)^(0+384)
 11375                           
 11376                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 11377  0778  3016               	movlw	22
 11378  0779  003D               	movlb	29	; select bank29
 11379  077A  0098               	movwf	24	;volatile
 11380                           
 11381                           ;usb_device.c: 358: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 11382  077B  3000               	movlw	0
 11383  077C  0020               	movlb	0	; select bank0
 11384  077D  00A3               	movwf	35	;volatile
 11385  077E  3050               	movlw	80
 11386  077F  00A2               	movwf	34	;volatile
 11387                           
 11388                           ;usb_device.c: 359: BDT[0].CNT = 8;
 11389  0780  3008               	movlw	8
 11390  0781  00A1               	movwf	33	;volatile
 11391                           
 11392                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 11393  0782  3004               	movlw	4
 11394  0783  00F0               	movwf	??i1_USBDeviceInit
 11395  0784  0870               	movf	??i1_USBDeviceInit,w
 11396  0785  00A0               	movwf	32	;volatile
 11397                           
 11398                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 11399  0786  17A0               	bsf	32,7	;volatile
 11400                           
 11401                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 11402  0787  0023               	movlb	3	; select bank3
 11403  0788  01EE               	clrf	_USBActiveConfiguration^(0+384)	;volatile
 11404                           
 11405                           ;usb_device.c: 366: USB1msTickCount = 0;
 11406  0789  3000               	movlw	0
 11407  078A  00C6               	movwf	(_USB1msTickCount+3)^(0+384)	;volatile
 11408  078B  3000               	movlw	0
 11409  078C  00C5               	movwf	(_USB1msTickCount+2)^(0+384)	;volatile
 11410  078D  3000               	movlw	0
 11411  078E  00C4               	movwf	(_USB1msTickCount+1)^(0+384)	;volatile
 11412  078F  3000               	movlw	0
 11413  0790  00C3               	movwf	_USB1msTickCount^(0+384)	;volatile
 11414                           
 11415                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 11416  0791  01D6               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
 11417                           
 11418                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 11419  0792  01E5               	clrf	_USBDeviceState^(0+384)	;volatile
 11420  0793  0008               	return
 11421  0794                     __end_ofi1_USBDeviceInit:	
 11422                           
 11423                           	psect	text50
 11424  15CC                     __ptext50:	
 11425 ;; *************** function i1_USBCtrlEPService *****************
 11426 ;; Defined at:
 11427 ;;		line 2372 in file "mcc_generated_files/usb/usb_device.c"
 11428 ;; Parameters:    Size  Location     Type
 11429 ;;		None
 11430 ;; Auto vars:     Size  Location     Type
 11431 ;;		None
 11432 ;; Return value:  Size  Location     Type
 11433 ;;                  1    wreg      void 
 11434 ;; Registers used:
 11435 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11436 ;; Tracked objects:
 11437 ;;		On entry : 0/0
 11438 ;;		On exit  : 0/0
 11439 ;;		Unchanged: 0/0
 11440 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11443 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11444 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11445 ;;Total ram usage:        3 bytes
 11446 ;; Hardware stack levels used:    1
 11447 ;; Hardware stack levels required when called:    7
 11448 ;; This function calls:
 11449 ;;		i1_USBCtrlTrfInHandler
 11450 ;;		i1_USBCtrlTrfOutHandler
 11451 ;;		i1_USBCtrlTrfSetupHandler
 11452 ;; This function is called by:
 11453 ;;		i1_USBDeviceTasks
 11454 ;; This function uses a non-reentrant model
 11455 ;;
 11456                           
 11457                           
 11458                           ;psect for function i1_USBCtrlEPService
 11459  15CC                     i1_USBCtrlEPService:	
 11460                           
 11461                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
 11462                           
 11463                           ;incstack = 0
 11464 ;; hardware stack exceeded
 11465                           ; Regs used in i1_USBCtrlEPService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11466  15CC  302D               	movlw	45
 11467  15CD  0021               	movlb	1	; select bank1
 11468  15CE  00A0               	movwf	??i1_USBCtrlEPService^(0+128)
 11469  15CF  0820               	movf	??i1_USBCtrlEPService^(0+128),w
 11470  15D0  0023               	movlb	3	; select bank3
 11471  15D1  00DC               	movwf	_USBStatusStageTimeoutCounter^(0+384)	;volatile
 11472                           
 11473                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
 11474  15D2  086D               	movf	_USTATcopy^(0+384),w	;volatile
 11475  15D3  39FD               	andlw	253
 11476  15D4  1D03               	btfss	3,2
 11477  15D5  2E1C               	goto	i1l6648
 11478                           
 11479                           ;usb_device.c: 2383: {
 11480                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 11481  15D6  366D               	lsrf	_USTATcopy^(0+384),w	;volatile
 11482  15D7  393F               	andlw	63
 11483  15D8  0021               	movlb	1	; select bank1
 11484  15D9  00A0               	movwf	??i1_USBCtrlEPService^(0+128)
 11485  15DA  3001               	movlw	1
 11486  15DB                     u560_25:	
 11487  15DB  35A0               	lslf	??i1_USBCtrlEPService^(0+128),f
 11488  15DC  3EFF               	addlw	-1
 11489  15DD  1D03               	skipz
 11490  15DE  2DDB               	goto	u560_25
 11491  15DF  3520               	lslf	??i1_USBCtrlEPService^(0+128),w
 11492  15E0  3E20               	addlw	32
 11493  15E1  00A1               	movwf	(??i1_USBCtrlEPService+1)^(0+128)
 11494  15E2  0821               	movf	(??i1_USBCtrlEPService+1)^(0+128),w
 11495  15E3  0023               	movlb	3	; select bank3
 11496  15E4  00E4               	movwf	_pBDTEntryEP0OutCurrent^(0+384)
 11497                           
 11498                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 11499  15E5  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 11500  15E6  0021               	movlb	1	; select bank1
 11501  15E7  00C8               	movwf	_pBDTEntryEP0OutNext^(0+128)
 11502  15E8  39FF               	andlw	255
 11503  15E9  1D03               	skipz
 11504  15EA  3000               	movlw	0
 11505  15EB  00C9               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
 11506                           
 11507                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 11508  15EC  3004               	movlw	4
 11509  15ED  0648               	xorwf	_pBDTEntryEP0OutNext^(0+128),w
 11510  15EE  00C8               	movwf	_pBDTEntryEP0OutNext^(0+128)
 11511  15EF  3000               	movlw	0
 11512  15F0  0649               	xorwf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 11513  15F1  00C9               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
 11514                           
 11515                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 11516  15F2  0023               	movlb	3	; select bank3
 11517  15F3  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 11518  15F4  0086               	movwf	6
 11519  15F5  0187               	clrf	7
 11520  15F6  0C01               	rrf	1,w
 11521  15F7  0C89               	rrf	9,f
 11522  15F8  390F               	andlw	15
 11523  15F9  3A0D               	xorlw	13
 11524  15FA  1D03               	skipz
 11525  15FB  2E19               	goto	i1l6646
 11526                           
 11527                           ;usb_device.c: 2400: {
 11528                           ;usb_device.c: 2405: __builtin_memcpy((uint8_t*)&SetupPkt,(uint8_t*)((void *)(pBDTEntryE
      +                          P0OutCurrent->ADR)),8);
 11529  15FC  3050               	movlw	80
 11530  15FD  0086               	movwf	6
 11531  15FE  0187               	clrf	7
 11532  15FF  0023               	movlb	3	; select bank3
 11533  1600  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 11534  1601  3E02               	addlw	2
 11535  1602  0084               	movwf	4
 11536  1603  0185               	clrf	5
 11537  1604  3F00               	moviw [0]fsr0
 11538  1605  0021               	movlb	1	; select bank1
 11539  1606  00A0               	movwf	??i1_USBCtrlEPService^(0+128)
 11540  1607  3F01               	moviw [1]fsr0
 11541  1608  00A1               	movwf	(??i1_USBCtrlEPService^(0+128)+1)
 11542  1609  0820               	movf	??i1_USBCtrlEPService^(0+128),w
 11543  160A  0084               	movwf	4
 11544  160B  0821               	movf	(??i1_USBCtrlEPService+1)^(0+128),w
 11545  160C  0085               	movwf	5
 11546  160D  3008               	movlw	8
 11547  160E  00A2               	movwf	(??i1_USBCtrlEPService+2)^(0+128)
 11548  160F  0822               	movf	(??i1_USBCtrlEPService+2)^(0+128),w
 11549  1610  1903               	skipnz
 11550  1611  2E16               	goto	i1l6644
 11551  1612                     u562_2m0:	
 11552  1612  0012               	moviw fsr0++
 11553  1613  001E               	movwi fsr1++
 11554  1614  0BA2               	decfsz	(??i1_USBCtrlEPService+2)^(0+128),f
 11555  1615  2E12               	goto	u562_2m0
 11556  1616                     i1l6644:	
 11557                           
 11558                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
 11559  1616  3194  246F         	fcall	i1_USBCtrlTrfSetupHandler
 11560                           
 11561                           ;usb_device.c: 2409: }
 11562  1618  0008               	return
 11563  1619                     i1l6646:	
 11564                           
 11565                           ;usb_device.c: 2410: else
 11566                           ;usb_device.c: 2411: {
 11567                           ;usb_device.c: 2413: USBCtrlTrfOutHandler();
 11568  1619  3191  2168         	fcall	i1_USBCtrlTrfOutHandler
 11569                           
 11570                           ;usb_device.c: 2414: }
 11571                           ;usb_device.c: 2415: }
 11572  161B  0008               	return
 11573  161C                     i1l6648:	
 11574                           
 11575                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
 11576  161C  30FD               	movlw	253
 11577  161D  0023               	movlb	3	; select bank3
 11578  161E  056D               	andwf	_USTATcopy^(0+384),w	;volatile
 11579  161F  0021               	movlb	1	; select bank1
 11580  1620  00A0               	movwf	??i1_USBCtrlEPService^(0+128)
 11581  1621  3004               	movlw	4
 11582  1622  0620               	xorwf	??i1_USBCtrlEPService^(0+128),w
 11583  1623  1D03               	btfss	3,2
 11584  1624  0008               	return
 11585                           
 11586                           ;usb_device.c: 2417: {
 11587                           ;usb_device.c: 2420: USBCtrlTrfInHandler();
 11588  1625  3188  20D3         	fcall	i1_USBCtrlTrfInHandler
 11589  1627  0008               	return
 11590  1628                     __end_ofi1_USBCtrlEPService:	
 11591                           
 11592                           	psect	text51
 11593  146F                     __ptext51:	
 11594 ;; *************** function i1_USBCtrlTrfSetupHandler *****************
 11595 ;; Defined at:
 11596 ;;		line 2465 in file "mcc_generated_files/usb/usb_device.c"
 11597 ;; Parameters:    Size  Location     Type
 11598 ;;		None
 11599 ;; Auto vars:     Size  Location     Type
 11600 ;;		None
 11601 ;; Return value:  Size  Location     Type
 11602 ;;                  1    wreg      void 
 11603 ;; Registers used:
 11604 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11605 ;; Tracked objects:
 11606 ;;		On entry : 0/0
 11607 ;;		On exit  : 0/0
 11608 ;;		Unchanged: 0/0
 11609 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11612 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11613 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11614 ;;Total ram usage:        1 bytes
 11615 ;; Hardware stack levels used:    1
 11616 ;; Hardware stack levels required when called:    6
 11617 ;; This function calls:
 11618 ;;		i1_USBCheckStdRequest
 11619 ;;		i1_USBCtrlEPServiceComplete
 11620 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 11621 ;; This function is called by:
 11622 ;;		i1_USBCtrlEPService
 11623 ;; This function uses a non-reentrant model
 11624 ;;
 11625                           
 11626                           
 11627                           ;psect for function i1_USBCtrlTrfSetupHandler
 11628  146F                     i1_USBCtrlTrfSetupHandler:	
 11629                           
 11630                           ;usb_device.c: 2470: shortPacketStatus = 0;
 11631                           
 11632                           ;incstack = 0
 11633 ;; hardware stack exceeded
 11634                           ; Regs used in i1_USBCtrlTrfSetupHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11635  146F  0023               	movlb	3	; select bank3
 11636  1470  01E3               	clrf	_shortPacketStatus^(0+384)	;volatile
 11637                           
 11638                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
 11639  1471  01DB               	clrf	_USBDeferStatusStagePacket^(0+384)	;volatile
 11640                           
 11641                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
 11642  1472  01D8               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
 11643                           
 11644                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
 11645  1473  01D7               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
 11646                           
 11647                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
 11648  1474  01DD               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
 11649                           
 11650                           ;usb_device.c: 2475: controlTransferState = 0;
 11651  1475  01E2               	clrf	_controlTransferState^(0+384)	;volatile
 11652                           
 11653                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 11654  1476  307F               	movlw	127
 11655  1477  0020               	movlb	0	; select bank0
 11656  1478  00EE               	movwf	??i1_USBCtrlTrfSetupHandler
 11657  1479  0023               	movlb	3	; select bank3
 11658  147A  0837               	movf	_pBDTEntryIn^(0+384),w
 11659  147B  0086               	movwf	6
 11660  147C  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 11661  147D  0087               	movwf	7
 11662  147E  0020               	movlb	0	; select bank0
 11663  147F  086E               	movf	??i1_USBCtrlTrfSetupHandler,w
 11664  1480  0581               	andwf	1,f
 11665                           
 11666                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 11667  1481  3004               	movlw	4
 11668  1482  0023               	movlb	3	; select bank3
 11669  1483  0637               	xorwf	_pBDTEntryIn^(0+384),w
 11670  1484  00B7               	movwf	_pBDTEntryIn^(0+384)
 11671  1485  3000               	movlw	0
 11672  1486  0638               	xorwf	(_pBDTEntryIn+1)^(0+384),w
 11673  1487  00B8               	movwf	(_pBDTEntryIn+1)^(0+384)
 11674                           
 11675                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 11676  1488  307F               	movlw	127
 11677  1489  0020               	movlb	0	; select bank0
 11678  148A  00EE               	movwf	??i1_USBCtrlTrfSetupHandler
 11679  148B  0023               	movlb	3	; select bank3
 11680  148C  0837               	movf	_pBDTEntryIn^(0+384),w
 11681  148D  0086               	movwf	6
 11682  148E  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 11683  148F  0087               	movwf	7
 11684  1490  0020               	movlb	0	; select bank0
 11685  1491  086E               	movf	??i1_USBCtrlTrfSetupHandler,w
 11686  1492  0581               	andwf	1,f
 11687                           
 11688                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 11689  1493  3004               	movlw	4
 11690  1494  0023               	movlb	3	; select bank3
 11691  1495  0637               	xorwf	_pBDTEntryIn^(0+384),w
 11692  1496  00B7               	movwf	_pBDTEntryIn^(0+384)
 11693  1497  3000               	movlw	0
 11694  1498  0638               	xorwf	(_pBDTEntryIn+1)^(0+384),w
 11695  1499  00B8               	movwf	(_pBDTEntryIn+1)^(0+384)
 11696                           
 11697                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 11698  149A  307F               	movlw	127
 11699  149B  0020               	movlb	0	; select bank0
 11700  149C  00EE               	movwf	??i1_USBCtrlTrfSetupHandler
 11701  149D  0021               	movlb	1	; select bank1
 11702  149E  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 11703  149F  0086               	movwf	6
 11704  14A0  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 11705  14A1  0087               	movwf	7
 11706  14A2  0020               	movlb	0	; select bank0
 11707  14A3  086E               	movf	??i1_USBCtrlTrfSetupHandler,w
 11708  14A4  0581               	andwf	1,f
 11709                           
 11710                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
 11711  14A5  0021               	movlb	1	; select bank1
 11712  14A6  01C5               	clrf	(_inPipes^(0+128)+2)	;volatile
 11713                           
 11714                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
 11715  14A7  01C6               	clrf	(_inPipes^(0+128)+3)	;volatile
 11716  14A8  01C7               	clrf	((_inPipes+1)^(0+128)+3)	;volatile
 11717                           
 11718                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
 11719  14A9  0023               	movlb	3	; select bank3
 11720  14AA  01B2               	clrf	(_outPipes^(0+384)+2)	;volatile
 11721                           
 11722                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
 11723  14AB  01B3               	clrf	(_outPipes^(0+384)+3)	;volatile
 11724  14AC  01B4               	clrf	((_outPipes+1)^(0+384)+3)	;volatile
 11725                           
 11726                           ;usb_device.c: 2500: USBCheckStdRequest();
 11727  14AD  3188  200E  3194   	fcall	i1_USBCheckStdRequest
 11728                           
 11729                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 11730  14B0  3000               	movlw	0
 11731  14B1  0020               	movlb	0	; select bank0
 11732  14B2  00E1               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 11733  14B3  3003               	movlw	3
 11734  14B4  00E0               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 11735  14B5  3000               	movlw	0
 11736  14B6  00E2               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11737  14B7  3000               	movlw	0
 11738  14B8  00E3               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11739  14B9  3000               	movlw	0
 11740  14BA  00E4               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 11741  14BB  00E5               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 11742  14BC  3190  20D8  3194   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 11743                           
 11744                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
 11745  14BF  318E  2637         	fcall	i1_USBCtrlEPServiceComplete
 11746  14C1  0008               	return
 11747  14C2                     __end_ofi1_USBCtrlTrfSetupHandler:	
 11748                           
 11749                           	psect	text52
 11750  0E37                     __ptext52:	
 11751 ;; *************** function i1_USBCtrlEPServiceComplete *****************
 11752 ;; Defined at:
 11753 ;;		line 1616 in file "mcc_generated_files/usb/usb_device.c"
 11754 ;; Parameters:    Size  Location     Type
 11755 ;;		None
 11756 ;; Auto vars:     Size  Location     Type
 11757 ;;		None
 11758 ;; Return value:  Size  Location     Type
 11759 ;;                  1    wreg      void 
 11760 ;; Registers used:
 11761 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11762 ;; Tracked objects:
 11763 ;;		On entry : 0/0
 11764 ;;		On exit  : 0/0
 11765 ;;		Unchanged: 0/0
 11766 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11769 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11770 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11771 ;;Total ram usage:        2 bytes
 11772 ;; Hardware stack levels used:    1
 11773 ;; Hardware stack levels required when called:    2
 11774 ;; This function calls:
 11775 ;;		i1_USBCtrlEPAllowDataStage
 11776 ;;		i1_USBCtrlEPAllowStatusStage
 11777 ;; This function is called by:
 11778 ;;		i1_USBCtrlTrfSetupHandler
 11779 ;; This function uses a non-reentrant model
 11780 ;;
 11781                           
 11782                           
 11783                           ;psect for function i1_USBCtrlEPServiceComplete
 11784  0E37                     i1_USBCtrlEPServiceComplete:	
 11785                           
 11786                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 11787                           
 11788                           ;incstack = 0
 11789                           ; Regs used in i1_USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11790  0E37  003D               	movlb	29	; select bank29
 11791  0E38  120E               	bcf	14,4	;volatile
 11792                           
 11793                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 11794  0E39  0021               	movlb	1	; select bank1
 11795  0E3A  1BC5               	btfsc	(_inPipes^(0+128)+2),7	;volatile
 11796  0E3B  2E7E               	goto	i1l467
 11797                           
 11798                           ;usb_device.c: 1629: {
 11799                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 11800  0E3C  0023               	movlb	3	; select bank3
 11801  0E3D  1FB2               	btfss	(_outPipes^(0+384)+2),7	;volatile
 11802  0E3E  2E4C               	goto	i1l5614
 11803                           
 11804                           ;usb_device.c: 1631: {
 11805                           ;usb_device.c: 1632: controlTransferState = 2;
 11806  0E3F  3002               	movlw	2
 11807  0E40  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 11808  0E41  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 11809  0E42  00E2               	movwf	_controlTransferState^(0+384)	;volatile
 11810                           
 11811                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 11812  0E43  0857               	movf	_USBDeferOUTDataStagePackets^(0+384),w	;volatile
 11813  0E44  1D03               	btfss	3,2
 11814  0E45  2E48               	goto	i1l5610
 11815                           
 11816                           ;usb_device.c: 1644: {
 11817                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 11818  0E46  3195  2570         	fcall	i1_USBCtrlEPAllowDataStage
 11819  0E48                     i1l5610:	
 11820                           
 11821                           ;usb_device.c: 1646: }
 11822                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 11823  0E48  0023               	movlb	3	; select bank3
 11824  0E49  01D9               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
 11825                           
 11826                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 11827  0E4A  01DA               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
 11828                           
 11829                           ;usb_device.c: 1652: }
 11830  0E4B  0008               	return
 11831  0E4C                     i1l5614:	
 11832                           
 11833                           ;usb_device.c: 1653: else
 11834                           ;usb_device.c: 1654: {
 11835                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
 11836  0E4C  0021               	movlb	1	; select bank1
 11837  0E4D  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 11838  0E4E  3E01               	addlw	1
 11839  0E4F  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 11840  0E50  3000               	movlw	0
 11841  0E51  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 11842  0E52  00F6               	movwf	??i1_USBCtrlEPServiceComplete+1
 11843  0E53  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 11844  0E54  0086               	movwf	6
 11845  0E55  0876               	movf	??i1_USBCtrlEPServiceComplete+1,w
 11846  0E56  0087               	movwf	7
 11847  0E57  3008               	movlw	8
 11848  0E58  0081               	movwf	1
 11849                           
 11850                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 11851  0E59  3050               	movlw	80
 11852  0E5A  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 11853  0E5B  3000               	movlw	0
 11854  0E5C  00F6               	movwf	??i1_USBCtrlEPServiceComplete+1
 11855  0E5D  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 11856  0E5E  0086               	movwf	6
 11857  0E5F  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 11858  0E60  0087               	movwf	7
 11859  0E61  3142               	addfsr 1,2
 11860  0E62  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 11861  0E63  3FC0               	movwi [0]fsr1
 11862  0E64  0876               	movf	??i1_USBCtrlEPServiceComplete+1,w
 11863  0E65  3FC1               	movwi [1]fsr1
 11864                           
 11865                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 11866  0E66  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 11867  0E67  0086               	movwf	6
 11868  0E68  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 11869  0E69  0087               	movwf	7
 11870  0E6A  300C               	movlw	12
 11871  0E6B  0081               	movwf	1
 11872                           
 11873                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 11874  0E6C  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 11875  0E6D  0086               	movwf	6
 11876  0E6E  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 11877  0E6F  0087               	movwf	7
 11878  0E70  1781               	bsf	1,7
 11879                           
 11880                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 11881  0E71  0023               	movlb	3	; select bank3
 11882  0E72  0837               	movf	_pBDTEntryIn^(0+384),w
 11883  0E73  0086               	movwf	6
 11884  0E74  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 11885  0E75  0087               	movwf	7
 11886  0E76  3004               	movlw	4
 11887  0E77  0081               	movwf	1
 11888                           
 11889                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 11890  0E78  0837               	movf	_pBDTEntryIn^(0+384),w
 11891  0E79  0086               	movwf	6
 11892  0E7A  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 11893  0E7B  0087               	movwf	7
 11894  0E7C  1781               	bsf	1,7
 11895                           
 11896                           ;usb_device.c: 1665: }
 11897                           ;usb_device.c: 1666: }
 11898  0E7D  0008               	return
 11899  0E7E                     i1l467:	
 11900                           
 11901                           ;usb_device.c: 1667: else
 11902                           ;usb_device.c: 1668: {
 11903                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 11904  0E7E  0020               	movlb	0	; select bank0
 11905  0E7F  1FD0               	btfss	80,7	;volatile
 11906  0E80  2E95               	goto	i1l5640
 11907                           
 11908                           ;usb_device.c: 1670: {
 11909                           ;usb_device.c: 1671: controlTransferState = 1;
 11910  0E81  3001               	movlw	1
 11911  0E82  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 11912  0E83  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 11913  0E84  0023               	movlb	3	; select bank3
 11914  0E85  00E2               	movwf	_controlTransferState^(0+384)	;volatile
 11915                           
 11916                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 11917  0E86  0858               	movf	_USBDeferINDataStagePackets^(0+384),w	;volatile
 11918  0E87  1D03               	btfss	3,2
 11919  0E88  2E8C               	goto	i1l5632
 11920                           
 11921                           ;usb_device.c: 1686: {
 11922                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 11923  0E89  3195  2570  318E   	fcall	i1_USBCtrlEPAllowDataStage
 11924  0E8C                     i1l5632:	
 11925                           
 11926                           ;usb_device.c: 1688: }
 11927                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 11928  0E8C  0023               	movlb	3	; select bank3
 11929  0E8D  01D9               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
 11930                           
 11931                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 11932  0E8E  01DA               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
 11933                           
 11934                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 11935  0E8F  085B               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
 11936  0E90  1D03               	btfss	3,2
 11937  0E91  0008               	return
 11938                           
 11939                           ;usb_device.c: 1713: {
 11940                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 11941  0E92  3187  2794         	fcall	i1_USBCtrlEPAllowStatusStage
 11942                           
 11943                           ;usb_device.c: 1715: }
 11944                           ;usb_device.c: 1716: }
 11945  0E94  0008               	return
 11946  0E95                     i1l5640:	
 11947                           
 11948                           ;usb_device.c: 1717: else
 11949                           ;usb_device.c: 1718: {
 11950                           ;usb_device.c: 1729: controlTransferState = 2;
 11951  0E95  3002               	movlw	2
 11952  0E96  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 11953  0E97  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 11954  0E98  0023               	movlb	3	; select bank3
 11955  0E99  00E2               	movwf	_controlTransferState^(0+384)	;volatile
 11956                           
 11957                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
 11958  0E9A  0021               	movlb	1	; select bank1
 11959  0E9B  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 11960  0E9C  3E01               	addlw	1
 11961  0E9D  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 11962  0E9E  3000               	movlw	0
 11963  0E9F  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 11964  0EA0  00F6               	movwf	??i1_USBCtrlEPServiceComplete+1
 11965  0EA1  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 11966  0EA2  0086               	movwf	6
 11967  0EA3  0876               	movf	??i1_USBCtrlEPServiceComplete+1,w
 11968  0EA4  0087               	movwf	7
 11969  0EA5  3008               	movlw	8
 11970  0EA6  0081               	movwf	1
 11971                           
 11972                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 11973  0EA7  3050               	movlw	80
 11974  0EA8  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 11975  0EA9  3000               	movlw	0
 11976  0EAA  00F6               	movwf	??i1_USBCtrlEPServiceComplete+1
 11977  0EAB  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 11978  0EAC  0086               	movwf	6
 11979  0EAD  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 11980  0EAE  0087               	movwf	7
 11981  0EAF  3142               	addfsr 1,2
 11982  0EB0  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 11983  0EB1  3FC0               	movwi [0]fsr1
 11984  0EB2  0876               	movf	??i1_USBCtrlEPServiceComplete+1,w
 11985  0EB3  3FC1               	movwi [1]fsr1
 11986                           
 11987                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 11988  0EB4  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 11989  0EB5  0086               	movwf	6
 11990  0EB6  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 11991  0EB7  0087               	movwf	7
 11992  0EB8  3004               	movlw	4
 11993  0EB9  0081               	movwf	1
 11994                           
 11995                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 11996  0EBA  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 11997  0EBB  0086               	movwf	6
 11998  0EBC  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 11999  0EBD  0087               	movwf	7
 12000  0EBE  1781               	bsf	1,7
 12001                           
 12002                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 12003  0EBF  0023               	movlb	3	; select bank3
 12004  0EC0  01D9               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
 12005                           
 12006                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 12007  0EC1  01DA               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
 12008                           
 12009                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 12010  0EC2  085B               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
 12011  0EC3  1D03               	btfss	3,2
 12012  0EC4  0008               	return
 12013                           
 12014                           ;usb_device.c: 1741: {
 12015                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 12016  0EC5  3187  2794         	fcall	i1_USBCtrlEPAllowStatusStage
 12017  0EC7  0008               	return
 12018  0EC8                     __end_ofi1_USBCtrlEPServiceComplete:	
 12019                           
 12020                           	psect	text53
 12021  1570                     __ptext53:	
 12022 ;; *************** function i1_USBCtrlEPAllowDataStage *****************
 12023 ;; Defined at:
 12024 ;;		line 1488 in file "mcc_generated_files/usb/usb_device.c"
 12025 ;; Parameters:    Size  Location     Type
 12026 ;;		None
 12027 ;; Auto vars:     Size  Location     Type
 12028 ;;		None
 12029 ;; Return value:  Size  Location     Type
 12030 ;;                  1    wreg      void 
 12031 ;; Registers used:
 12032 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12033 ;; Tracked objects:
 12034 ;;		On entry : 0/0
 12035 ;;		On exit  : 0/0
 12036 ;;		Unchanged: 0/0
 12037 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12040 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12041 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12042 ;;Total ram usage:        2 bytes
 12043 ;; Hardware stack levels used:    1
 12044 ;; Hardware stack levels required when called:    1
 12045 ;; This function calls:
 12046 ;;		i1_USBCtrlTrfTxService
 12047 ;; This function is called by:
 12048 ;;		i1_USBCtrlEPServiceComplete
 12049 ;; This function uses a non-reentrant model
 12050 ;;
 12051                           
 12052                           
 12053                           ;psect for function i1_USBCtrlEPAllowDataStage
 12054  1570                     i1_USBCtrlEPAllowDataStage:	
 12055                           
 12056                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 12057                           
 12058                           ;incstack = 0
 12059                           ; Regs used in i1_USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12060  1570  0023               	movlb	3	; select bank3
 12061  1571  01D8               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
 12062                           
 12063                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 12064  1572  01D7               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
 12065                           
 12066                           ;usb_device.c: 1493: if(controlTransferState == 2)
 12067  1573  3002               	movlw	2
 12068  1574  0662               	xorwf	_controlTransferState^(0+384),w	;volatile
 12069  1575  1D03               	btfss	3,2
 12070  1576  2D9D               	goto	i1l5232
 12071                           
 12072                           ;usb_device.c: 1494: {
 12073                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
 12074  1577  0021               	movlb	1	; select bank1
 12075  1578  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 12076  1579  3E01               	addlw	1
 12077  157A  00F3               	movwf	??i1_USBCtrlEPAllowDataStage
 12078  157B  3000               	movlw	0
 12079  157C  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 12080  157D  00F4               	movwf	??i1_USBCtrlEPAllowDataStage+1
 12081  157E  0873               	movf	??i1_USBCtrlEPAllowDataStage,w
 12082  157F  0086               	movwf	6
 12083  1580  0874               	movf	??i1_USBCtrlEPAllowDataStage+1,w
 12084  1581  0087               	movwf	7
 12085  1582  3008               	movlw	8
 12086  1583  0081               	movwf	1
 12087                           
 12088                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
 12089  1584  3058               	movlw	88
 12090  1585  00F3               	movwf	??i1_USBCtrlEPAllowDataStage
 12091  1586  3000               	movlw	0
 12092  1587  00F4               	movwf	??i1_USBCtrlEPAllowDataStage+1
 12093  1588  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 12094  1589  0086               	movwf	6
 12095  158A  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 12096  158B  0087               	movwf	7
 12097  158C  3142               	addfsr 1,2
 12098  158D  0873               	movf	??i1_USBCtrlEPAllowDataStage,w
 12099  158E  3FC0               	movwi [0]fsr1
 12100  158F  0874               	movf	??i1_USBCtrlEPAllowDataStage+1,w
 12101  1590  3FC1               	movwi [1]fsr1
 12102                           
 12103                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 12104  1591  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 12105  1592  0086               	movwf	6
 12106  1593  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 12107  1594  0087               	movwf	7
 12108  1595  3048               	movlw	72
 12109  1596  0081               	movwf	1
 12110                           
 12111                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12112  1597  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 12113  1598  0086               	movwf	6
 12114  1599  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 12115  159A  0087               	movwf	7
 12116  159B  1781               	bsf	1,7
 12117                           
 12118                           ;usb_device.c: 1500: }
 12119  159C  0008               	return
 12120  159D                     i1l5232:	
 12121                           
 12122                           ;usb_device.c: 1501: else
 12123                           ;usb_device.c: 1502: {
 12124                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 12125  159D  0021               	movlb	1	; select bank1
 12126  159E  0847               	movf	((_inPipes+1)^(0+128)+3),w	;volatile
 12127  159F  0020               	movlb	0	; select bank0
 12128  15A0  0257               	subwf	87,w	;volatile
 12129  15A1  1D03               	skipz
 12130  15A2  2DA7               	goto	u423_25
 12131  15A3  0021               	movlb	1	; select bank1
 12132  15A4  0846               	movf	(_inPipes^(0+128)+3),w	;volatile
 12133  15A5  0020               	movlb	0	; select bank0
 12134  15A6  0256               	subwf	86,w	;volatile
 12135  15A7                     u423_25:	
 12136  15A7  1803               	skipnc
 12137  15A8  2DB0               	goto	i1l5236
 12138                           
 12139                           ;usb_device.c: 1506: {
 12140                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 12141  15A9  0857               	movf	87,w	;volatile
 12142  15AA  0021               	movlb	1	; select bank1
 12143  15AB  00C7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
 12144  15AC  0020               	movlb	0	; select bank0
 12145  15AD  0856               	movf	86,w	;volatile
 12146  15AE  0021               	movlb	1	; select bank1
 12147  15AF  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
 12148  15B0                     i1l5236:	
 12149                           
 12150                           ;usb_device.c: 1508: }
 12151                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 12152  15B0  3189  21AC         	fcall	i1_USBCtrlTrfTxService
 12153                           
 12154                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
 12155  15B2  3058               	movlw	88
 12156  15B3  00F3               	movwf	??i1_USBCtrlEPAllowDataStage
 12157  15B4  3000               	movlw	0
 12158  15B5  00F4               	movwf	??i1_USBCtrlEPAllowDataStage+1
 12159  15B6  0023               	movlb	3	; select bank3
 12160  15B7  0837               	movf	_pBDTEntryIn^(0+384),w
 12161  15B8  0086               	movwf	6
 12162  15B9  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 12163  15BA  0087               	movwf	7
 12164  15BB  3142               	addfsr 1,2
 12165  15BC  0873               	movf	??i1_USBCtrlEPAllowDataStage,w
 12166  15BD  3FC0               	movwi [0]fsr1
 12167  15BE  0874               	movf	??i1_USBCtrlEPAllowDataStage+1,w
 12168  15BF  3FC1               	movwi [1]fsr1
 12169                           
 12170                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12171  15C0  0837               	movf	_pBDTEntryIn^(0+384),w
 12172  15C1  0086               	movwf	6
 12173  15C2  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 12174  15C3  0087               	movwf	7
 12175  15C4  3048               	movlw	72
 12176  15C5  0081               	movwf	1
 12177                           
 12178                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12179  15C6  0837               	movf	_pBDTEntryIn^(0+384),w
 12180  15C7  0086               	movwf	6
 12181  15C8  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 12182  15C9  0087               	movwf	7
 12183  15CA  1781               	bsf	1,7
 12184  15CB  0008               	return
 12185  15CC                     __end_ofi1_USBCtrlEPAllowDataStage:	
 12186                           
 12187                           	psect	text54
 12188  080E                     __ptext54:	
 12189 ;; *************** function i1_USBCheckStdRequest *****************
 12190 ;; Defined at:
 12191 ;;		line 2686 in file "mcc_generated_files/usb/usb_device.c"
 12192 ;; Parameters:    Size  Location     Type
 12193 ;;		None
 12194 ;; Auto vars:     Size  Location     Type
 12195 ;;		None
 12196 ;; Return value:  Size  Location     Type
 12197 ;;                  1    wreg      void 
 12198 ;; Registers used:
 12199 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12200 ;; Tracked objects:
 12201 ;;		On entry : 0/0
 12202 ;;		On exit  : 0/0
 12203 ;;		Unchanged: 0/0
 12204 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12207 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12208 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12209 ;;Total ram usage:        1 bytes
 12210 ;; Hardware stack levels used:    1
 12211 ;; Hardware stack levels required when called:    5
 12212 ;; This function calls:
 12213 ;;		i1_USBStdFeatureReqHandler
 12214 ;;		i1_USBStdGetDscHandler
 12215 ;;		i1_USBStdGetStatusHandler
 12216 ;;		i1_USBStdSetCfgHandler
 12217 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 12218 ;; This function is called by:
 12219 ;;		i1_USBCtrlTrfSetupHandler
 12220 ;; This function uses a non-reentrant model
 12221 ;;
 12222                           
 12223                           
 12224                           ;psect for function i1_USBCheckStdRequest
 12225  080E                     i1_USBCheckStdRequest:	
 12226                           
 12227                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
 12228                           
 12229                           ;incstack = 0
 12230 ;; hardware stack exceeded
 12231                           ; Regs used in i1_USBCheckStdRequest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12232  080E  0020               	movlb	0	; select bank0
 12233  080F  0E50               	swapf	80,w	;volatile
 12234  0810  0C89               	rrf	9,f
 12235  0811  3903               	andlw	3
 12236  0812  3A00               	xorlw	0
 12237  0813  1D03               	btfss	3,2
 12238  0814  0008               	return
 12239  0815  2864               	goto	i1l5734
 12240  0816                     i1l594:	
 12241                           ;usb_device.c: 2691: {
 12242                           ;usb_device.c: 2692: case 5:
 12243                           
 12244                           ;usb_device.c: 2690: switch(SetupPkt.bRequest)
 12245                           
 12246                           
 12247                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
 12248  0816  0021               	movlb	1	; select bank1
 12249  0817  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 12250                           
 12251                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
 12252  0818  3008               	movlw	8
 12253  0819  0020               	movlb	0	; select bank0
 12254  081A  00ED               	movwf	??i1_USBCheckStdRequest
 12255  081B  086D               	movf	??i1_USBCheckStdRequest,w
 12256  081C  0023               	movlb	3	; select bank3
 12257  081D  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
 12258                           
 12259                           ;usb_device.c: 2696: break;
 12260  081E  0008               	return
 12261  081F                     i1l5704:	
 12262                           ;usb_device.c: 2697: case 6:
 12263                           
 12264                           
 12265                           ;usb_device.c: 2698: USBStdGetDscHandler();
 12266  081F  318B  2314         	fcall	i1_USBStdGetDscHandler
 12267                           
 12268                           ;usb_device.c: 2699: break;
 12269  0821  0008               	return
 12270  0822                     i1l5706:	
 12271                           ;usb_device.c: 2700: case 9:
 12272                           
 12273                           
 12274                           ;usb_device.c: 2701: USBStdSetCfgHandler();
 12275  0822  318D  2519         	fcall	i1_USBStdSetCfgHandler
 12276                           
 12277                           ;usb_device.c: 2702: break;
 12278  0824  0008               	return
 12279  0825                     i1l5708:	
 12280                           ;usb_device.c: 2703: case 8:
 12281                           
 12282                           
 12283                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 12284  0825  30EE               	movlw	low _USBActiveConfiguration
 12285  0826  0021               	movlb	1	; select bank1
 12286  0827  00C3               	movwf	_inPipes^(0+128)	;volatile
 12287  0828  3001               	movlw	high _USBActiveConfiguration
 12288  0829  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
 12289                           
 12290                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 12291  082A  1445               	bsf	(_inPipes^(0+128)+2),0	;volatile
 12292                           
 12293                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
 12294  082B  3001               	movlw	1
 12295  082C  0020               	movlb	0	; select bank0
 12296  082D  00ED               	movwf	??i1_USBCheckStdRequest
 12297  082E  086D               	movf	??i1_USBCheckStdRequest,w
 12298  082F  0021               	movlb	1	; select bank1
 12299  0830  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
 12300                           
 12301                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
 12302  0831  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 12303                           
 12304                           ;usb_device.c: 2708: break;
 12305  0832  0008               	return
 12306  0833                     i1l5716:	
 12307                           ;usb_device.c: 2709: case 0:
 12308                           
 12309                           
 12310                           ;usb_device.c: 2710: USBStdGetStatusHandler();
 12311  0833  3194  24C2         	fcall	i1_USBStdGetStatusHandler
 12312                           
 12313                           ;usb_device.c: 2711: break;
 12314  0835  0008               	return
 12315  0836                     i1l5718:	
 12316                           ;usb_device.c: 2712: case 1:
 12317                           
 12318                           
 12319                           ;usb_device.c: 2713: case 3:
 12320                           ;usb_device.c: 2714: USBStdFeatureReqHandler();
 12321  0836  3181  21B8         	fcall	i1_USBStdFeatureReqHandler
 12322                           
 12323                           ;usb_device.c: 2715: break;
 12324  0838  0008               	return
 12325  0839                     i1l5720:	
 12326                           ;usb_device.c: 2716: case 10:
 12327                           
 12328                           
 12329                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 12330  0839  0020               	movlb	0	; select bank0
 12331  083A  0854               	movf	84,w	;volatile
 12332  083B  3EEB               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
 12333  083C  0021               	movlb	1	; select bank1
 12334  083D  00C3               	movwf	_inPipes^(0+128)	;volatile
 12335  083E  3001               	movlw	1
 12336  083F  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
 12337                           
 12338                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 12339  0840  1445               	bsf	(_inPipes^(0+128)+2),0	;volatile
 12340                           
 12341                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
 12342  0841  3001               	movlw	1
 12343  0842  0020               	movlb	0	; select bank0
 12344  0843  00ED               	movwf	??i1_USBCheckStdRequest
 12345  0844  086D               	movf	??i1_USBCheckStdRequest,w
 12346  0845  0021               	movlb	1	; select bank1
 12347  0846  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
 12348                           
 12349                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
 12350  0847  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 12351                           
 12352                           ;usb_device.c: 2721: break;
 12353  0848  0008               	return
 12354  0849                     i1l603:	
 12355                           ;usb_device.c: 2722: case 11:
 12356                           
 12357                           
 12358                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 12359  0849  0021               	movlb	1	; select bank1
 12360  084A  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 12361                           
 12362                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 12363  084B  0020               	movlb	0	; select bank0
 12364  084C  0852               	movf	82,w	;volatile
 12365  084D  00ED               	movwf	??i1_USBCheckStdRequest
 12366  084E  0854               	movf	84,w	;volatile
 12367  084F  3EEB               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
 12368  0850  0086               	movwf	6
 12369  0851  3001               	movlw	1	; select bank3/4
 12370  0852  0087               	movwf	7
 12371  0853  086D               	movf	??i1_USBCheckStdRequest,w
 12372  0854  0081               	movwf	1
 12373                           
 12374                           ;usb_device.c: 2725: break;
 12375  0855  0008               	return
 12376  0856                     i1l5730:	
 12377                           ;usb_device.c: 2726: case 7:
 12378                           
 12379                           
 12380                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 12381  0856  3000               	movlw	0
 12382  0857  00E1               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 12383  0858  3002               	movlw	2
 12384  0859  00E0               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 12385  085A  3000               	movlw	0
 12386  085B  00E2               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 12387  085C  3000               	movlw	0
 12388  085D  00E3               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 12389  085E  3000               	movlw	0
 12390  085F  00E4               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 12391  0860  00E5               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 12392  0861  3190  20D8         	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 12393                           
 12394                           ;usb_device.c: 2732: }
 12395                           
 12396                           ;usb_device.c: 2731: break;
 12397                           
 12398                           ;usb_device.c: 2730: default:
 12399                           
 12400                           ;usb_device.c: 2729: case 12:
 12401                           
 12402                           ;usb_device.c: 2728: break;
 12403  0863  0008               	return
 12404  0864                     i1l5734:	
 12405  0864  0020               	movlb	0	; select bank0
 12406  0865  0851               	movf	81,w	;volatile
 12407                           
 12408                           ; Switch size 1, requested type "space"
 12409                           ; Number of cases is 11, Range of values is 0 to 12
 12410                           ; switch strategies available:
 12411                           ; Name         Instructions Cycles
 12412                           ; direct_byte           32     6 (fixed)
 12413                           ; simple_byte           34    18 (average)
 12414                           ; jumptable            260     6 (fixed)
 12415                           ;	Chosen strategy is direct_byte
 12416  0866  0084               	movwf	4
 12417  0867  300D               	movlw	13
 12418  0868  0204               	subwf	4,w
 12419  0869  1803               	skipnc
 12420  086A  0008               	return
 12421  086B  3198               	movlp	high i1S8580
 12422  086C  3504               	lslf	4,w
 12423  086D  3EAB               	addlw	low i1S8580
 12424  086E  0082               	movwf	2
 12425  086F                     i1l592:	
 12426  086F  0008               	return
 12427  0870                     __end_ofi1_USBCheckStdRequest:	
 12428                           
 12429                           	psect	swtext2
 12430  18AB                     __pswtext2:	
 12431  18AB                     i1S8580:	
 12432  18AB  3188  2833         	ljmp	i1l5716
 12433  18AD  3188  2836         	ljmp	i1l5718
 12434  18AF  3188  286F         	ljmp	i1l592
 12435  18B1  3188  2836         	ljmp	i1l5718
 12436  18B3  3188  286F         	ljmp	i1l592
 12437  18B5  3188  2816         	ljmp	i1l594
 12438  18B7  3188  281F         	ljmp	i1l5704
 12439  18B9  3188  2856         	ljmp	i1l5730
 12440  18BB  3188  2825         	ljmp	i1l5708
 12441  18BD  3188  2822         	ljmp	i1l5706
 12442  18BF  3188  2839         	ljmp	i1l5720
 12443  18C1  3188  2849         	ljmp	i1l603
 12444  18C3  3188  286F         	ljmp	i1l592
 12445                           
 12446                           	psect	text55
 12447  0D19                     __ptext55:	
 12448 ;; *************** function i1_USBStdSetCfgHandler *****************
 12449 ;; Defined at:
 12450 ;;		line 1968 in file "mcc_generated_files/usb/usb_device.c"
 12451 ;; Parameters:    Size  Location     Type
 12452 ;;		None
 12453 ;; Auto vars:     Size  Location     Type
 12454 ;;  USBStdSetCfg    2    7[BANK0h] PTR unsigned char 
 12455 ;;		 -> UEP1(1), 
 12456 ;;  USBStdSetCfg    1   10[BANK0h] unsigned char 
 12457 ;;  USBStdSetCfg    1    9[BANK0h] unsigned char 
 12458 ;; Return value:  Size  Location     Type
 12459 ;;                  1    wreg      void 
 12460 ;; Registers used:
 12461 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12462 ;; Tracked objects:
 12463 ;;		On entry : 0/0
 12464 ;;		On exit  : 0/0
 12465 ;;		Unchanged: 0/0
 12466 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12468 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12469 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12470 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12471 ;;Total ram usage:        5 bytes
 12472 ;; Hardware stack levels used:    1
 12473 ;; Hardware stack levels required when called:    4
 12474 ;; This function calls:
 12475 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 12476 ;;		i1_memset
 12477 ;; This function is called by:
 12478 ;;		i1_USBCheckStdRequest
 12479 ;; This function uses a non-reentrant model
 12480 ;;
 12481                           
 12482                           
 12483                           ;psect for function i1_USBStdSetCfgHandler
 12484  0D19                     i1_USBStdSetCfgHandler:	
 12485                           
 12486                           ;usb_device.c: 1970: uint8_t i;
 12487                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 12488                           
 12489                           ;incstack = 0
 12490 ;; hardware stack exceeded
 12491                           ; Regs used in i1_USBStdSetCfgHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12492  0D19  0021               	movlb	1	; select bank1
 12493  0D1A  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 12494                           
 12495                           ;usb_device.c: 1976: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 
      +                          0; };
 12496  0D1B  300E               	movlw	14
 12497  0D1C  0020               	movlb	0	; select bank0
 12498  0D1D  00E8               	movwf	i1USBStdSetCfgHandler@p+1
 12499  0D1E  3099               	movlw	153
 12500  0D1F  00E7               	movwf	i1USBStdSetCfgHandler@p
 12501  0D20  01E9               	clrf	i1USBStdSetCfgHandler@i_2167
 12502  0D21  3002               	movlw	2
 12503  0D22  0269               	subwf	i1USBStdSetCfgHandler@i_2167,w
 12504  0D23  1803               	btfsc	3,0
 12505  0D24  2D36               	goto	i1l5260
 12506  0D25                     i1l5252:	
 12507  0D25  0867               	movf	i1USBStdSetCfgHandler@p,w
 12508  0D26  0086               	movwf	6
 12509  0D27  0868               	movf	i1USBStdSetCfgHandler@p+1,w
 12510  0D28  0087               	movwf	7
 12511  0D29  0181               	clrf	1
 12512  0D2A  3001               	movlw	1
 12513  0D2B  07E7               	addwf	i1USBStdSetCfgHandler@p,f
 12514  0D2C  3000               	movlw	0
 12515  0D2D  3DE8               	addwfc	i1USBStdSetCfgHandler@p+1,f
 12516  0D2E  3001               	movlw	1
 12517  0D2F  00E6               	movwf	??i1_USBStdSetCfgHandler
 12518  0D30  0866               	movf	??i1_USBStdSetCfgHandler,w
 12519  0D31  07E9               	addwf	i1USBStdSetCfgHandler@i_2167,f
 12520  0D32  3002               	movlw	2
 12521  0D33  0269               	subwf	i1USBStdSetCfgHandler@i_2167,w
 12522  0D34  1C03               	skipc
 12523  0D35  2D25               	goto	i1l5252
 12524  0D36                     i1l5260:	
 12525                           
 12526                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 12527  0D36  3020               	movlw	32
 12528  0D37  00F0               	movwf	i1memset@p1
 12529  0D38  3000               	movlw	0
 12530  0D39  00F1               	movwf	i1memset@p1+1
 12531  0D3A  3000               	movlw	0
 12532  0D3B  00F2               	movwf	i1memset@c
 12533  0D3C  00F3               	movwf	i1memset@c+1
 12534  0D3D  3030               	movlw	48
 12535  0D3E  00F4               	movwf	i1memset@n
 12536  0D3F  3000               	movlw	0
 12537  0D40  00F5               	movwf	i1memset@n+1
 12538  0D41  319E  2642  318D   	fcall	i1_memset
 12539                           
 12540                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 12541  0D44  003D               	movlb	29	; select bank29
 12542  0D45  170E               	bsf	14,6	;volatile
 12543                           
 12544                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
 12545  0D46  0020               	movlb	0	; select bank0
 12546  0D47  01EA               	clrf	i1USBStdSetCfgHandler@i
 12547  0D48  3003               	movlw	3
 12548  0D49  026A               	subwf	i1USBStdSetCfgHandler@i,w
 12549  0D4A  1803               	btfsc	3,0
 12550  0D4B  2D60               	goto	i1l5276
 12551  0D4C                     i1l5270:	
 12552                           
 12553                           ;usb_device.c: 1988: {
 12554                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 12555  0D4C  086A               	movf	i1USBStdSetCfgHandler@i,w
 12556  0D4D  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
 12557  0D4E  0086               	movwf	6
 12558  0D4F  3001               	movlw	1	; select bank3/4
 12559  0D50  0087               	movwf	7
 12560  0D51  0181               	clrf	1
 12561                           
 12562                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 12563  0D52  086A               	movf	i1USBStdSetCfgHandler@i,w
 12564  0D53  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
 12565  0D54  0086               	movwf	6
 12566  0D55  3001               	movlw	1	; select bank3/4
 12567  0D56  0087               	movwf	7
 12568  0D57  0181               	clrf	1
 12569  0D58  3001               	movlw	1
 12570  0D59  00E6               	movwf	??i1_USBStdSetCfgHandler
 12571  0D5A  0866               	movf	??i1_USBStdSetCfgHandler,w
 12572  0D5B  07EA               	addwf	i1USBStdSetCfgHandler@i,f
 12573  0D5C  3003               	movlw	3
 12574  0D5D  026A               	subwf	i1USBStdSetCfgHandler@i,w
 12575  0D5E  1C03               	skipc
 12576  0D5F  2D4C               	goto	i1l5270
 12577  0D60                     i1l5276:	
 12578                           
 12579                           ;usb_device.c: 1991: }
 12580                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 12581  0D60  30EB               	movlw	low _USBAlternateInterface
 12582  0D61  00F0               	movwf	i1memset@p1
 12583  0D62  3001               	movlw	high _USBAlternateInterface
 12584  0D63  00F1               	movwf	i1memset@p1+1
 12585  0D64  3000               	movlw	0
 12586  0D65  00F2               	movwf	i1memset@c
 12587  0D66  00F3               	movwf	i1memset@c+1
 12588  0D67  3002               	movlw	2
 12589  0D68  00F4               	movwf	i1memset@n
 12590  0D69  3000               	movlw	0
 12591  0D6A  00F5               	movwf	i1memset@n+1
 12592  0D6B  319E  2642  318D   	fcall	i1_memset
 12593                           
 12594                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 12595  0D6E  003D               	movlb	29	; select bank29
 12596  0D6F  130E               	bcf	14,6	;volatile
 12597                           
 12598                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 12599  0D70  3028               	movlw	40
 12600  0D71  0023               	movlb	3	; select bank3
 12601  0D72  00B7               	movwf	_pBDTEntryIn^(0+384)
 12602  0D73  3000               	movlw	0
 12603  0D74  00B8               	movwf	(_pBDTEntryIn+1)^(0+384)
 12604                           
 12605                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 12606  0D75  3020               	movlw	32
 12607  0D76  0020               	movlb	0	; select bank0
 12608  0D77  00E6               	movwf	??i1_USBStdSetCfgHandler
 12609  0D78  0866               	movf	??i1_USBStdSetCfgHandler,w
 12610  0D79  0023               	movlb	3	; select bank3
 12611  0D7A  00E4               	movwf	_pBDTEntryEP0OutCurrent^(0+384)
 12612                           
 12613                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 12614  0D7B  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 12615  0D7C  0021               	movlb	1	; select bank1
 12616  0D7D  00C8               	movwf	_pBDTEntryEP0OutNext^(0+128)
 12617  0D7E  39FF               	andlw	255
 12618  0D7F  1D03               	skipz
 12619  0D80  3000               	movlw	0
 12620  0D81  00C9               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
 12621                           
 12622                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 12623  0D82  0020               	movlb	0	; select bank0
 12624  0D83  0852               	movf	82,w	;volatile
 12625  0D84  00E6               	movwf	??i1_USBStdSetCfgHandler
 12626  0D85  0866               	movf	??i1_USBStdSetCfgHandler,w
 12627  0D86  0023               	movlb	3	; select bank3
 12628  0D87  00EE               	movwf	_USBActiveConfiguration^(0+384)	;volatile
 12629                           
 12630                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 12631  0D88  086E               	movf	_USBActiveConfiguration^(0+384),w	;volatile
 12632  0D89  1D03               	btfss	3,2
 12633  0D8A  2D92               	goto	i1l5292
 12634                           
 12635                           ;usb_device.c: 2010: {
 12636                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 12637  0D8B  3010               	movlw	16
 12638  0D8C  0020               	movlb	0	; select bank0
 12639  0D8D  00E6               	movwf	??i1_USBStdSetCfgHandler
 12640  0D8E  0866               	movf	??i1_USBStdSetCfgHandler,w
 12641  0D8F  0023               	movlb	3	; select bank3
 12642  0D90  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
 12643                           
 12644                           ;usb_device.c: 2013: }
 12645  0D91  0008               	return
 12646  0D92                     i1l5292:	
 12647                           
 12648                           ;usb_device.c: 2014: else
 12649                           ;usb_device.c: 2015: {
 12650                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 12651  0D92  3000               	movlw	0
 12652  0D93  0020               	movlb	0	; select bank0
 12653  0D94  00E1               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 12654  0D95  3001               	movlw	1
 12655  0D96  00E0               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 12656  0D97  30EE               	movlw	low _USBActiveConfiguration
 12657  0D98  00E2               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 12658  0D99  3001               	movlw	high _USBActiveConfiguration
 12659  0D9A  00E3               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 12660  0D9B  3001               	movlw	1
 12661  0D9C  00E4               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 12662  0D9D  3000               	movlw	0
 12663  0D9E  00E5               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 12664  0D9F  3190  20D8         	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 12665                           
 12666                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 12667  0DA1  3020               	movlw	32
 12668  0DA2  0020               	movlb	0	; select bank0
 12669  0DA3  00E6               	movwf	??i1_USBStdSetCfgHandler
 12670  0DA4  0866               	movf	??i1_USBStdSetCfgHandler,w
 12671  0DA5  0023               	movlb	3	; select bank3
 12672  0DA6  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
 12673  0DA7  0008               	return
 12674  0DA8                     __end_ofi1_USBStdSetCfgHandler:	
 12675                           
 12676                           	psect	text56
 12677  1E42                     __ptext56:	
 12678 ;; *************** function i1_memset *****************
 12679 ;; Defined at:
 12680 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
 12681 ;; Parameters:    Size  Location     Type
 12682 ;;  p1              2    0[COMMON] PTR void 
 12683 ;;		 -> USBAlternateInterface(2), BDT(48), 
 12684 ;;  c               2    2[COMMON] int 
 12685 ;;  n               2    4[COMMON] unsigned int 
 12686 ;; Auto vars:     Size  Location     Type
 12687 ;;  memset          2    6[COMMON] PTR unsigned char 
 12688 ;;		 -> USBAlternateInterface(2), BDT(48), 
 12689 ;; Return value:  Size  Location     Type
 12690 ;;                  1    wreg      PTR void 
 12691 ;; Registers used:
 12692 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12693 ;; Tracked objects:
 12694 ;;		On entry : 0/0
 12695 ;;		On exit  : 0/0
 12696 ;;		Unchanged: 0/0
 12697 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12698 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12699 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12701 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12702 ;;Total ram usage:        8 bytes
 12703 ;; Hardware stack levels used:    1
 12704 ;; This function calls:
 12705 ;;		Nothing
 12706 ;; This function is called by:
 12707 ;;		i1_USBStdSetCfgHandler
 12708 ;; This function uses a non-reentrant model
 12709 ;;
 12710                           
 12711                           
 12712                           ;psect for function i1_memset
 12713  1E42                     i1_memset:	
 12714                           
 12715                           ;incstack = 0
 12716                           ; Regs used in i1_memset: [wreg+fsr1l+fsr1h+status,2+status,0]
 12717  1E42  0871               	movf	i1memset@p1+1,w
 12718  1E43  00F7               	movwf	i1memset@p+1
 12719  1E44  0870               	movf	i1memset@p1,w
 12720  1E45  00F6               	movwf	i1memset@p
 12721  1E46                     i1l4920:	
 12722  1E46  3001               	movlw	1
 12723  1E47  02F4               	subwf	i1memset@n,f
 12724  1E48  3000               	movlw	0
 12725  1E49  3BF5               	subwfb	i1memset@n+1,f
 12726  1E4A  0A74               	incf	i1memset@n,w
 12727  1E4B  1903               	btfsc	3,2
 12728  1E4C  0A75               	incf	i1memset@n+1,w
 12729  1E4D  1903               	btfsc	3,2
 12730  1E4E  0008               	return
 12731  1E4F  0876               	movf	i1memset@p,w
 12732  1E50  0086               	movwf	6
 12733  1E51  0877               	movf	i1memset@p+1,w
 12734  1E52  0087               	movwf	7
 12735  1E53  0872               	movf	i1memset@c,w
 12736  1E54  0081               	movwf	1
 12737  1E55  3001               	movlw	1
 12738  1E56  07F6               	addwf	i1memset@p,f
 12739  1E57  3000               	movlw	0
 12740  1E58  3DF7               	addwfc	i1memset@p+1,f
 12741  1E59  2E46               	goto	i1l4920
 12742  1E5A                     __end_ofi1_memset:	
 12743                           ;	Return value of i1_memset is never used
 12744                           
 12745                           
 12746                           	psect	text57
 12747  14C2                     __ptext57:	
 12748 ;; *************** function i1_USBStdGetStatusHandler *****************
 12749 ;; Defined at:
 12750 ;;		line 2129 in file "mcc_generated_files/usb/usb_device.c"
 12751 ;; Parameters:    Size  Location     Type
 12752 ;;		None
 12753 ;; Auto vars:     Size  Location     Type
 12754 ;;  USBStdGetSta    2    1[COMMON] PTR struct __BDT
 12755 ;;		 -> RAM(4096), BDT(48), NULL(0), 
 12756 ;; Return value:  Size  Location     Type
 12757 ;;                  1    wreg      void 
 12758 ;; Registers used:
 12759 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 12760 ;; Tracked objects:
 12761 ;;		On entry : 0/0
 12762 ;;		On exit  : 0/0
 12763 ;;		Unchanged: 0/0
 12764 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12766 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12767 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12768 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12769 ;;Total ram usage:        3 bytes
 12770 ;; Hardware stack levels used:    1
 12771 ;; This function calls:
 12772 ;;		Nothing
 12773 ;; This function is called by:
 12774 ;;		i1_USBCheckStdRequest
 12775 ;; This function uses a non-reentrant model
 12776 ;;
 12777                           
 12778                           
 12779                           ;psect for function i1_USBStdGetStatusHandler
 12780  14C2                     i1_USBStdGetStatusHandler:	
 12781                           
 12782                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 12783                           
 12784                           ;incstack = 0
 12785                           ; Regs used in i1_USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
 12786  14C2  0020               	movlb	0	; select bank0
 12787  14C3  01D8               	clrf	88	;volatile
 12788                           
 12789                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 12790  14C4  01D9               	clrf	89	;volatile
 12791                           
 12792                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 12793  14C5  2CFE               	goto	i1l5348
 12794  14C6                     i1l532:	
 12795                           ;usb_device.c: 2135: {
 12796                           ;usb_device.c: 2136: case (0x00):
 12797                           
 12798                           
 12799                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 12800  14C6  0021               	movlb	1	; select bank1
 12801  14C7  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 12802                           
 12803                           ;usb_device.c: 2145: }
 12804                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 12805                           
 12806                           ;usb_device.c: 2143: {
 12807                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 12808                           
 12809                           ;usb_device.c: 2142: if(0 == 1)
 12810  14C8  0023               	movlb	3	; select bank3
 12811  14C9  0360               	decf	_RemoteWakeup^(0+384),w	;volatile
 12812  14CA  1D03               	btfss	3,2
 12813  14CB  2D0A               	goto	i1l535
 12814                           
 12815                           ;usb_device.c: 2148: {
 12816                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 12817  14CC  0020               	movlb	0	; select bank0
 12818  14CD  14D8               	bsf	88,1	;volatile
 12819                           
 12820                           ;usb_device.c: 2150: }
 12821                           ;usb_device.c: 2151: break;
 12822  14CE  2D0A               	goto	i1l535
 12823  14CF                     i1l536:	
 12824                           ;usb_device.c: 2152: case (0x01):
 12825                           
 12826                           
 12827                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 12828  14CF  0021               	movlb	1	; select bank1
 12829  14D0  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 12830                           
 12831                           ;usb_device.c: 2154: break;
 12832  14D1  2D0A               	goto	i1l535
 12833  14D2                     i1l537:	
 12834                           ;usb_device.c: 2155: case (0x02):
 12835                           
 12836                           
 12837                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 12838  14D2  0021               	movlb	1	; select bank1
 12839  14D3  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 12840                           
 12841                           ;usb_device.c: 2160: {
 12842                           ;usb_device.c: 2161: BDT_ENTRY *p;
 12843                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 12844  14D4  0020               	movlb	0	; select bank0
 12845  14D5  1BD4               	btfsc	84,7	;volatile
 12846  14D6  2CE2               	goto	i1l5338
 12847                           
 12848                           ;usb_device.c: 2164: {
 12849                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 12850  14D7  0854               	movf	84,w	;volatile
 12851  14D8  390F               	andlw	15
 12852  14D9  0709               	addwf	9,w
 12853  14DA  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 12854  14DB  0086               	movwf	6
 12855  14DC  3001               	movlw	1	; select bank3/4
 12856  14DD  0087               	movwf	7
 12857  14DE  3F40               	moviw [0]fsr1
 12858  14DF  00F1               	movwf	i1USBStdGetStatusHandler@p
 12859  14E0  3F41               	moviw [1]fsr1
 12860  14E1  2CEC               	goto	L13
 12861  14E2                     i1l5338:	
 12862                           ;usb_device.c: 2166: }
 12863                           
 12864                           
 12865                           ;usb_device.c: 2167: else
 12866                           ;usb_device.c: 2168: {
 12867                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 12868  14E2  0854               	movf	84,w	;volatile
 12869  14E3  390F               	andlw	15
 12870  14E4  0709               	addwf	9,w
 12871  14E5  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 12872  14E6  0086               	movwf	6
 12873  14E7  3001               	movlw	1	; select bank3/4
 12874  14E8  0087               	movwf	7
 12875  14E9  3F40               	moviw [0]fsr1
 12876  14EA  00F1               	movwf	i1USBStdGetStatusHandler@p
 12877  14EB  3F41               	moviw [1]fsr1
 12878  14EC                     L13:	
 12879  14EC  00F2               	movwf	i1USBStdGetStatusHandler@p+1
 12880                           
 12881                           ;usb_device.c: 2170: }
 12882                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 12883  14ED  0871               	movf	i1USBStdGetStatusHandler@p,w
 12884  14EE  0086               	movwf	6
 12885  14EF  0872               	movf	i1USBStdGetStatusHandler@p+1,w
 12886  14F0  0087               	movwf	7
 12887  14F1  1F81               	btfss	1,7
 12888  14F2  2D0A               	goto	i1l535
 12889  14F3  0871               	movf	i1USBStdGetStatusHandler@p,w
 12890  14F4  0086               	movwf	6
 12891  14F5  0872               	movf	i1USBStdGetStatusHandler@p+1,w
 12892  14F6  0087               	movwf	7
 12893  14F7  1D01               	btfss	1,2
 12894  14F8  2D0A               	goto	i1l535
 12895                           
 12896                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 12897  14F9  3001               	movlw	1
 12898  14FA  00F0               	movwf	??i1_USBStdGetStatusHandler
 12899  14FB  0870               	movf	??i1_USBStdGetStatusHandler,w
 12900  14FC  00D8               	movwf	88	;volatile
 12901                           
 12902                           ;usb_device.c: 2175: }
 12903                           ;usb_device.c: 2176: }
 12904                           
 12905                           ;usb_device.c: 2174: break;
 12906  14FD  2D0A               	goto	i1l535
 12907  14FE                     i1l5348:	
 12908  14FE  0850               	movf	80,w	;volatile
 12909  14FF  391F               	andlw	31
 12910                           
 12911                           ; Switch size 1, requested type "space"
 12912                           ; Number of cases is 3, Range of values is 0 to 2
 12913                           ; switch strategies available:
 12914                           ; Name         Instructions Cycles
 12915                           ; simple_byte           10     6 (average)
 12916                           ; direct_byte           12     6 (fixed)
 12917                           ; jumptable            260     6 (fixed)
 12918                           ;	Chosen strategy is simple_byte
 12919  1500  3A00               	xorlw	0	; case 0
 12920  1501  1903               	skipnz
 12921  1502  2CC6               	goto	i1l532
 12922  1503  3A01               	xorlw	1	; case 1
 12923  1504  1903               	skipnz
 12924  1505  2CCF               	goto	i1l536
 12925  1506  3A03               	xorlw	3	; case 2
 12926  1507  1903               	skipnz
 12927  1508  2CD2               	goto	i1l537
 12928  1509  2D0A               	goto	i1l535
 12929  150A                     i1l535:	
 12930                           
 12931                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 12932  150A  0021               	movlb	1	; select bank1
 12933  150B  1FC5               	btfss	(_inPipes^(0+128)+2),7	;volatile
 12934  150C  0008               	return
 12935                           
 12936                           ;usb_device.c: 2179: {
 12937                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 12938  150D  3058               	movlw	88
 12939  150E  00C3               	movwf	_inPipes^(0+128)	;volatile
 12940  150F  3000               	movlw	0
 12941  1510  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
 12942                           
 12943                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 12944  1511  1445               	bsf	(_inPipes^(0+128)+2),0	;volatile
 12945                           
 12946                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 12947  1512  3002               	movlw	2
 12948  1513  00F0               	movwf	??i1_USBStdGetStatusHandler
 12949  1514  0870               	movf	??i1_USBStdGetStatusHandler,w
 12950  1515  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
 12951  1516  0008               	return
 12952  1517                     __end_ofi1_USBStdGetStatusHandler:	
 12953                           
 12954                           	psect	text58
 12955  0B14                     __ptext58:	
 12956 ;; *************** function i1_USBStdGetDscHandler *****************
 12957 ;; Defined at:
 12958 ;;		line 2043 in file "mcc_generated_files/usb/usb_device.c"
 12959 ;; Parameters:    Size  Location     Type
 12960 ;;		None
 12961 ;; Auto vars:     Size  Location     Type
 12962 ;;		None
 12963 ;; Return value:  Size  Location     Type
 12964 ;;                  1    wreg      void 
 12965 ;; Registers used:
 12966 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 12967 ;; Tracked objects:
 12968 ;;		On entry : 0/0
 12969 ;;		On exit  : 0/0
 12970 ;;		Unchanged: 0/0
 12971 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12974 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12975 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12976 ;;Total ram usage:        3 bytes
 12977 ;; Hardware stack levels used:    1
 12978 ;; This function calls:
 12979 ;;		Nothing
 12980 ;; This function is called by:
 12981 ;;		i1_USBCheckStdRequest
 12982 ;; This function uses a non-reentrant model
 12983 ;;
 12984                           
 12985                           
 12986                           ;psect for function i1_USBStdGetDscHandler
 12987  0B14                     i1_USBStdGetDscHandler:	
 12988                           
 12989                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 12990                           
 12991                           ;incstack = 0
 12992                           ; Regs used in i1_USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
 12993  0B14  3080               	movlw	128
 12994  0B15  0020               	movlb	0	; select bank0
 12995  0B16  0650               	xorwf	80,w	;volatile
 12996  0B17  1D03               	btfss	3,2
 12997  0B18  0008               	return
 12998                           
 12999                           ;usb_device.c: 2046: {
 13000                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 13001  0B19  30C0               	movlw	192
 13002  0B1A  00F0               	movwf	??i1_USBStdGetDscHandler
 13003  0B1B  0870               	movf	??i1_USBStdGetDscHandler,w
 13004  0B1C  0021               	movlb	1	; select bank1
 13005  0B1D  00C5               	movwf	(_inPipes^(0+128)+2)	;volatile
 13006                           
 13007                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 13008  0B1E  2B86               	goto	i1l5326
 13009  0B1F                     i1l5300:	
 13010                           ;usb_device.c: 2050: {
 13011                           ;usb_device.c: 2051: case 0x01:
 13012                           
 13013                           
 13014                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 13015  0B1F  30C5               	movlw	low (_device_dsc| (0+32768))
 13016  0B20  0021               	movlb	1	; select bank1
 13017  0B21  00C3               	movwf	_inPipes^(0+128)	;volatile
 13018  0B22  3098               	movlw	high (_device_dsc| (0+32768))
 13019  0B23  00C4               	movwf	(_inPipes^(0+128)+1)	;volatile
 13020                           
 13021                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 13022  0B24  3000               	movlw	0
 13023  0B25  00C7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
 13024  0B26  3012               	movlw	18
 13025  0B27  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
 13026                           
 13027                           ;usb_device.c: 2058: break;
 13028  0B28  0008               	return
 13029  0B29                     i1l5304:	
 13030                           ;usb_device.c: 2059: case 0x02:
 13031                           
 13032                           
 13033                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 13034  0B29  0020               	movlb	0	; select bank0
 13035  0B2A  0852               	movf	82,w	;volatile
 13036  0B2B  1D03               	btfss	3,2
 13037  0B2C  2B5C               	goto	i1l5312
 13038                           
 13039                           ;usb_device.c: 2064: {
 13040                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 13041  0B2D  0852               	movf	82,w	;volatile
 13042  0B2E  00F0               	movwf	??i1_USBStdGetDscHandler
 13043  0B2F  01F1               	clrf	??i1_USBStdGetDscHandler+1
 13044  0B30  35F0               	lslf	??i1_USBStdGetDscHandler,f
 13045  0B31  0DF1               	rlf	??i1_USBStdGetDscHandler+1,f
 13046  0B32  30E8               	movlw	low (_USB_CD_Ptr| (0+32768))
 13047  0B33  0770               	addwf	??i1_USBStdGetDscHandler,w
 13048  0B34  0084               	movwf	4
 13049  0B35  3098               	movlw	high (_USB_CD_Ptr| (0+32768))
 13050  0B36  3D71               	addwfc	??i1_USBStdGetDscHandler+1,w
 13051  0B37  0085               	movwf	5
 13052  0B38  3F00               	moviw [0]fsr0
 13053  0B39  0021               	movlb	1	; select bank1
 13054  0B3A  00C3               	movwf	_inPipes^(0+128)	;volatile
 13055  0B3B  3F01               	moviw [1]fsr0
 13056  0B3C  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
 13057                           
 13058                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 13059  0B3D  0844               	movf	(_inPipes+1)^(0+128),w	;volatile
 13060  0B3E  00F1               	movwf	??i1_USBStdGetDscHandler+1
 13061  0B3F  0843               	movf	_inPipes^(0+128),w	;volatile
 13062  0B40  00F0               	movwf	??i1_USBStdGetDscHandler
 13063  0B41  3002               	movlw	2
 13064  0B42  0770               	addwf	??i1_USBStdGetDscHandler,w
 13065  0B43  0084               	movwf	4
 13066  0B44  0871               	movf	??i1_USBStdGetDscHandler+1,w
 13067  0B45  1803               	skipnc
 13068  0B46  0A71               	incf	??i1_USBStdGetDscHandler+1,w
 13069  0B47  0085               	movwf	5
 13070  0B48  0800               	movf	0,w	;code access
 13071  0B49  00F2               	movwf	??i1_USBStdGetDscHandler+2
 13072  0B4A  0872               	movf	??i1_USBStdGetDscHandler+2,w
 13073  0B4B  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
 13074                           
 13075                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 13076  0B4C  0844               	movf	(_inPipes+1)^(0+128),w	;volatile
 13077  0B4D  00F1               	movwf	??i1_USBStdGetDscHandler+1
 13078  0B4E  0843               	movf	_inPipes^(0+128),w	;volatile
 13079  0B4F  00F0               	movwf	??i1_USBStdGetDscHandler
 13080  0B50  3003               	movlw	3
 13081  0B51  0770               	addwf	??i1_USBStdGetDscHandler,w
 13082  0B52  0084               	movwf	4
 13083  0B53  0871               	movf	??i1_USBStdGetDscHandler+1,w
 13084  0B54  1803               	skipnc
 13085  0B55  0A71               	incf	??i1_USBStdGetDscHandler+1,w
 13086  0B56  0085               	movwf	5
 13087  0B57  0800               	movf	0,w	;code access
 13088  0B58  00F2               	movwf	??i1_USBStdGetDscHandler+2
 13089  0B59  0872               	movf	??i1_USBStdGetDscHandler+2,w
 13090  0B5A  00C7               	movwf	(_inPipes^(0+128)+4)	;volatile
 13091                           
 13092                           ;usb_device.c: 2076: }
 13093  0B5B  0008               	return
 13094  0B5C                     i1l5312:	
 13095                           
 13096                           ;usb_device.c: 2077: else
 13097                           ;usb_device.c: 2078: {
 13098                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 13099  0B5C  0021               	movlb	1	; select bank1
 13100  0B5D  01C5               	clrf	(_inPipes^(0+128)+2)	;volatile
 13101                           
 13102                           ;usb_device.c: 2080: }
 13103                           ;usb_device.c: 2081: break;
 13104  0B5E  0008               	return
 13105  0B5F                     i1l5314:	
 13106                           ;usb_device.c: 2082: case 0x03:
 13107                           
 13108                           
 13109                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 13110  0B5F  3003               	movlw	3
 13111  0B60  0020               	movlb	0	; select bank0
 13112  0B61  0252               	subwf	82,w	;volatile
 13113  0B62  1803               	skipnc
 13114  0B63  2B80               	goto	i1l5320
 13115                           
 13116                           ;usb_device.c: 2087: {
 13117                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 13118  0B64  0852               	movf	82,w	;volatile
 13119  0B65  00F0               	movwf	??i1_USBStdGetDscHandler
 13120  0B66  01F1               	clrf	??i1_USBStdGetDscHandler+1
 13121  0B67  35F0               	lslf	??i1_USBStdGetDscHandler,f
 13122  0B68  0DF1               	rlf	??i1_USBStdGetDscHandler+1,f
 13123  0B69  30DF               	movlw	low (_USB_SD_Ptr| (0+32768))
 13124  0B6A  0770               	addwf	??i1_USBStdGetDscHandler,w
 13125  0B6B  0084               	movwf	4
 13126  0B6C  3098               	movlw	high (_USB_SD_Ptr| (0+32768))
 13127  0B6D  3D71               	addwfc	??i1_USBStdGetDscHandler+1,w
 13128  0B6E  0085               	movwf	5
 13129  0B6F  3F00               	moviw [0]fsr0
 13130  0B70  0021               	movlb	1	; select bank1
 13131  0B71  00C3               	movwf	_inPipes^(0+128)	;volatile
 13132  0B72  3F01               	moviw [1]fsr0
 13133  0B73  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
 13134                           
 13135                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 13136  0B74  0843               	movf	_inPipes^(0+128),w	;volatile
 13137  0B75  0084               	movwf	4
 13138  0B76  0844               	movf	(_inPipes+1)^(0+128),w	;volatile
 13139  0B77  0085               	movwf	5
 13140  0B78  0800               	movf	0,w	;code access
 13141  0B79  00F0               	movwf	??i1_USBStdGetDscHandler
 13142  0B7A  01F1               	clrf	??i1_USBStdGetDscHandler+1
 13143  0B7B  0870               	movf	??i1_USBStdGetDscHandler,w
 13144  0B7C  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
 13145  0B7D  0871               	movf	??i1_USBStdGetDscHandler+1,w
 13146  0B7E  00C7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
 13147                           
 13148                           ;usb_device.c: 2092: }
 13149  0B7F  0008               	return
 13150  0B80                     i1l5320:	
 13151                           
 13152                           ;usb_device.c: 2102: else
 13153                           ;usb_device.c: 2103: {
 13154                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 13155  0B80  0021               	movlb	1	; select bank1
 13156  0B81  01C5               	clrf	(_inPipes^(0+128)+2)	;volatile
 13157                           
 13158                           ;usb_device.c: 2105: }
 13159                           ;usb_device.c: 2106: break;
 13160  0B82  0008               	return
 13161  0B83                     i1l5322:	
 13162                           ;usb_device.c: 2107: default:
 13163                           
 13164                           
 13165                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 13166  0B83  0021               	movlb	1	; select bank1
 13167  0B84  01C5               	clrf	(_inPipes^(0+128)+2)	;volatile
 13168                           
 13169                           ;usb_device.c: 2110: }
 13170                           
 13171                           ;usb_device.c: 2109: break;
 13172  0B85  0008               	return
 13173  0B86                     i1l5326:	
 13174  0B86  0020               	movlb	0	; select bank0
 13175  0B87  0853               	movf	83,w	;volatile
 13176                           
 13177                           ; Switch size 1, requested type "space"
 13178                           ; Number of cases is 3, Range of values is 1 to 3
 13179                           ; switch strategies available:
 13180                           ; Name         Instructions Cycles
 13181                           ; simple_byte           10     6 (average)
 13182                           ; direct_byte           15     9 (fixed)
 13183                           ; jumptable            263     9 (fixed)
 13184                           ;	Chosen strategy is simple_byte
 13185  0B88  3A01               	xorlw	1	; case 1
 13186  0B89  1903               	skipnz
 13187  0B8A  2B1F               	goto	i1l5300
 13188  0B8B  3A03               	xorlw	3	; case 2
 13189  0B8C  1903               	skipnz
 13190  0B8D  2B29               	goto	i1l5304
 13191  0B8E  3A01               	xorlw	1	; case 3
 13192  0B8F  1903               	skipnz
 13193  0B90  2B5F               	goto	i1l5314
 13194  0B91  2B83               	goto	i1l5322
 13195  0B92  0008               	return
 13196  0B93                     __end_ofi1_USBStdGetDscHandler:	
 13197                           
 13198                           	psect	text59
 13199  01B8                     __ptext59:	
 13200 ;; *************** function i1_USBStdFeatureReqHandler *****************
 13201 ;; Defined at:
 13202 ;;		line 2754 in file "mcc_generated_files/usb/usb_device.c"
 13203 ;; Parameters:    Size  Location     Type
 13204 ;;		None
 13205 ;; Auto vars:     Size  Location     Type
 13206 ;;  USBStdFeatur    2   11[BANK0h] PTR struct __BDT
 13207 ;;		 -> RAM(4096), BDT(48), NULL(0), 
 13208 ;;  USBStdFeatur    2    8[BANK0h] PTR unsigned char 
 13209 ;;		 -> UEP0(1), 
 13210 ;;  USBStdFeatur    1   10[BANK0h] struct .
 13211 ;; Return value:  Size  Location     Type
 13212 ;;                  1    wreg      void 
 13213 ;; Registers used:
 13214 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13215 ;; Tracked objects:
 13216 ;;		On entry : 0/0
 13217 ;;		On exit  : 0/0
 13218 ;;		Unchanged: 0/0
 13219 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13221 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13222 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13223 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13224 ;;Total ram usage:        7 bytes
 13225 ;; Hardware stack levels used:    1
 13226 ;; Hardware stack levels required when called:    4
 13227 ;; This function calls:
 13228 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 13229 ;; This function is called by:
 13230 ;;		i1_USBCheckStdRequest
 13231 ;; This function uses a non-reentrant model
 13232 ;;
 13233                           
 13234                           
 13235                           ;psect for function i1_USBStdFeatureReqHandler
 13236  01B8                     i1_USBStdFeatureReqHandler:	
 13237                           
 13238                           ;usb_device.c: 2756: BDT_ENTRY *p;
 13239                           ;usb_device.c: 2757: EP_STATUS current_ep_data;
 13240                           ;usb_device.c: 2761: unsigned char* pUEP;
 13241                           ;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&
 13242                           ;usb_device.c: 2800: (SetupPkt.Recipient == (0x00)))
 13243                           
 13244                           ;incstack = 0
 13245 ;; hardware stack exceeded
 13246                           ; Regs used in i1_USBStdFeatureReqHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13247  01B8  0020               	movlb	0	; select bank0
 13248  01B9  0352               	decf	82,w	;volatile
 13249  01BA  1D03               	btfss	3,2
 13250  01BB  29D0               	goto	i1l5368
 13251  01BC  0850               	movf	80,w	;volatile
 13252  01BD  391F               	andlw	31
 13253  01BE  3A00               	xorlw	0
 13254  01BF  1D03               	skipz
 13255  01C0  29D0               	goto	i1l5368
 13256                           
 13257                           ;usb_device.c: 2801: {
 13258                           ;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
 13259  01C1  0021               	movlb	1	; select bank1
 13260  01C2  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 13261                           
 13262                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
 13263  01C3  3003               	movlw	3
 13264  01C4  0020               	movlb	0	; select bank0
 13265  01C5  0651               	xorwf	81,w	;volatile
 13266  01C6  1D03               	btfss	3,2
 13267  01C7  29CE               	goto	i1l5366
 13268                           
 13269                           ;usb_device.c: 2804: RemoteWakeup = 1;
 13270  01C8  3001               	movlw	1
 13271  01C9  00E6               	movwf	??i1_USBStdFeatureReqHandler
 13272  01CA  0866               	movf	??i1_USBStdFeatureReqHandler,w
 13273  01CB  0023               	movlb	3	; select bank3
 13274  01CC  00E0               	movwf	_RemoteWakeup^(0+384)	;volatile
 13275  01CD  29D0               	goto	i1l5368
 13276  01CE                     i1l5366:	
 13277                           
 13278                           ;usb_device.c: 2805: else
 13279                           ;usb_device.c: 2806: RemoteWakeup = 0;
 13280  01CE  0023               	movlb	3	; select bank3
 13281  01CF  01E0               	clrf	_RemoteWakeup^(0+384)	;volatile
 13282  01D0                     i1l5368:	
 13283                           
 13284                           ;usb_device.c: 2807: }
 13285                           ;usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&
 13286                           ;usb_device.c: 2811: (SetupPkt.Recipient == (0x02))&&
 13287                           ;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 13288                           ;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
 13289  01D0  0020               	movlb	0	; select bank0
 13290  01D1  0852               	movf	82,w	;volatile
 13291  01D2  1D03               	btfss	3,2
 13292  01D3  0008               	return
 13293  01D4  0850               	movf	80,w	;volatile
 13294  01D5  391F               	andlw	31
 13295  01D6  3A02               	xorlw	2
 13296  01D7  1D03               	skipz
 13297  01D8  0008               	return
 13298  01D9  0854               	movf	84,w	;volatile
 13299  01DA  390F               	andlw	15
 13300  01DB  3A00               	xorlw	0
 13301  01DC  1903               	skipnz
 13302  01DD  0008               	return
 13303  01DE  0854               	movf	84,w	;volatile
 13304  01DF  390F               	andlw	15
 13305  01E0  00E6               	movwf	??i1_USBStdFeatureReqHandler
 13306  01E1  3003               	movlw	3
 13307  01E2  0266               	subwf	??i1_USBStdFeatureReqHandler,w
 13308  01E3  1803               	skipnc
 13309  01E4  0008               	return
 13310  01E5  3020               	movlw	32
 13311  01E6  0023               	movlb	3	; select bank3
 13312  01E7  0665               	xorwf	_USBDeviceState^(0+384),w	;volatile
 13313  01E8  1D03               	btfss	3,2
 13314  01E9  0008               	return
 13315                           
 13316                           ;usb_device.c: 2814: {
 13317                           ;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
 13318  01EA  0021               	movlb	1	; select bank1
 13319  01EB  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 13320                           
 13321                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
 13322  01EC  0020               	movlb	0	; select bank0
 13323  01ED  1BD4               	btfsc	84,7	;volatile
 13324  01EE  29FE               	goto	i1l5382
 13325                           
 13326                           ;usb_device.c: 2821: {
 13327                           ;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 13328  01EF  0854               	movf	84,w	;volatile
 13329  01F0  390F               	andlw	15
 13330  01F1  0709               	addwf	9,w
 13331  01F2  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 13332  01F3  0086               	movwf	6
 13333  01F4  3001               	movlw	1	; select bank3/4
 13334  01F5  0087               	movwf	7
 13335  01F6  3F40               	moviw [0]fsr1
 13336  01F7  00EB               	movwf	i1USBStdFeatureReqHandler@p
 13337  01F8  3F41               	moviw [1]fsr1
 13338  01F9  00EC               	movwf	i1USBStdFeatureReqHandler@p+1
 13339                           
 13340                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 13341  01FA  0854               	movf	84,w	;volatile
 13342  01FB  390F               	andlw	15
 13343  01FC  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
 13344  01FD  2A0C               	goto	L14
 13345  01FE                     i1l5382:	
 13346                           ;usb_device.c: 2824: }
 13347                           
 13348                           
 13349                           ;usb_device.c: 2825: else
 13350                           ;usb_device.c: 2826: {
 13351                           ;usb_device.c: 2827: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 13352  01FE  0854               	movf	84,w	;volatile
 13353  01FF  390F               	andlw	15
 13354  0200  0709               	addwf	9,w
 13355  0201  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 13356  0202  0086               	movwf	6
 13357  0203  3001               	movlw	1	; select bank3/4
 13358  0204  0087               	movwf	7
 13359  0205  3F40               	moviw [0]fsr1
 13360  0206  00EB               	movwf	i1USBStdFeatureReqHandler@p
 13361  0207  3F41               	moviw [1]fsr1
 13362  0208  00EC               	movwf	i1USBStdFeatureReqHandler@p+1
 13363                           
 13364                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 13365  0209  0854               	movf	84,w	;volatile
 13366  020A  390F               	andlw	15
 13367  020B  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
 13368  020C                     L14:	
 13369  020C  0086               	movwf	6
 13370  020D  3001               	movlw	1	; select bank3/4
 13371  020E  0087               	movwf	7
 13372  020F  0801               	movf	1,w
 13373  0210  00E6               	movwf	??i1_USBStdFeatureReqHandler
 13374  0211  0866               	movf	??i1_USBStdFeatureReqHandler,w
 13375  0212  00EA               	movwf	i1USBStdFeatureReqHandler@current_ep_data
 13376                           
 13377                           ;usb_device.c: 2829: }
 13378                           ;usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
 13379  0213  186A               	btfsc	i1USBStdFeatureReqHandler@current_ep_data,0
 13380  0214  2A1F               	goto	i1l5388
 13381                           
 13382                           ;usb_device.c: 2836: {
 13383                           ;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 13384  0215  30FB               	movlw	251
 13385  0216  00E6               	movwf	??i1_USBStdFeatureReqHandler
 13386  0217  30FF               	movlw	255
 13387  0218  00E7               	movwf	??i1_USBStdFeatureReqHandler+1
 13388  0219  086B               	movf	i1USBStdFeatureReqHandler@p,w
 13389  021A  0566               	andwf	??i1_USBStdFeatureReqHandler,w
 13390  021B  00EB               	movwf	i1USBStdFeatureReqHandler@p
 13391  021C  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 13392  021D  0567               	andwf	??i1_USBStdFeatureReqHandler+1,w
 13393  021E  2A24               	goto	L15
 13394  021F                     i1l5388:	
 13395                           ;usb_device.c: 2838: }
 13396                           
 13397                           
 13398                           ;usb_device.c: 2839: else
 13399                           ;usb_device.c: 2840: {
 13400                           ;usb_device.c: 2841: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
 13401  021F  3004               	movlw	4
 13402  0220  046B               	iorwf	i1USBStdFeatureReqHandler@p,w
 13403  0221  00EB               	movwf	i1USBStdFeatureReqHandler@p
 13404  0222  3000               	movlw	0
 13405  0223  046C               	iorwf	i1USBStdFeatureReqHandler@p+1,w
 13406  0224                     L15:	
 13407  0224  00EC               	movwf	i1USBStdFeatureReqHandler@p+1
 13408                           
 13409                           ;usb_device.c: 2842: }
 13410                           ;usb_device.c: 2847: if(SetupPkt.EPDir == 0)
 13411  0225  1BD4               	btfsc	84,7	;volatile
 13412  0226  2A33               	goto	i1l5394
 13413                           
 13414                           ;usb_device.c: 2848: {
 13415                           ;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 13416  0227  0854               	movf	84,w	;volatile
 13417  0228  390F               	andlw	15
 13418  0229  0709               	addwf	9,w
 13419  022A  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 13420  022B  0086               	movwf	6
 13421  022C  3001               	movlw	1	; select bank3/4
 13422  022D  0087               	movwf	7
 13423  022E  086B               	movf	i1USBStdFeatureReqHandler@p,w
 13424  022F  3FC0               	movwi [0]fsr1
 13425  0230  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 13426  0231  3FC1               	movwi [1]fsr1
 13427                           
 13428                           ;usb_device.c: 2850: }
 13429  0232  2A3E               	goto	i1l5396
 13430  0233                     i1l5394:	
 13431                           
 13432                           ;usb_device.c: 2851: else
 13433                           ;usb_device.c: 2852: {
 13434                           ;usb_device.c: 2853: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 13435  0233  0854               	movf	84,w	;volatile
 13436  0234  390F               	andlw	15
 13437  0235  0709               	addwf	9,w
 13438  0236  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 13439  0237  0086               	movwf	6
 13440  0238  3001               	movlw	1	; select bank3/4
 13441  0239  0087               	movwf	7
 13442  023A  086B               	movf	i1USBStdFeatureReqHandler@p,w
 13443  023B  3FC0               	movwi [0]fsr1
 13444  023C  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 13445  023D  3FC1               	movwi [1]fsr1
 13446  023E                     i1l5396:	
 13447                           
 13448                           ;usb_device.c: 2854: }
 13449                           ;usb_device.c: 2857: if(SetupPkt.bRequest == 3)
 13450  023E  3003               	movlw	3
 13451  023F  0651               	xorwf	81,w	;volatile
 13452  0240  1D03               	btfss	3,2
 13453  0241  2A60               	goto	i1l5410
 13454                           
 13455                           ;usb_device.c: 2858: {
 13456                           ;usb_device.c: 2859: if(p->STAT.UOWN == 1)
 13457  0242  086B               	movf	i1USBStdFeatureReqHandler@p,w
 13458  0243  0086               	movwf	6
 13459  0244  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 13460  0245  0087               	movwf	7
 13461  0246  1F81               	btfss	1,7
 13462  0247  2A55               	goto	i1l5406
 13463                           
 13464                           ;usb_device.c: 2860: {
 13465                           ;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
 13466  0248  1BD4               	btfsc	84,7	;volatile
 13467  0249  2A4E               	goto	i1l5404
 13468                           
 13469                           ;usb_device.c: 2864: {
 13470                           ;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 13471  024A  0854               	movf	84,w	;volatile
 13472  024B  390F               	andlw	15
 13473  024C  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
 13474  024D  2A51               	goto	L16
 13475  024E                     i1l5404:	
 13476                           ;usb_device.c: 2866: }
 13477                           
 13478                           
 13479                           ;usb_device.c: 2867: else
 13480                           ;usb_device.c: 2868: {
 13481                           ;usb_device.c: 2869: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 13482  024E  0854               	movf	84,w	;volatile
 13483  024F  390F               	andlw	15
 13484  0250  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
 13485  0251                     L16:	
 13486  0251  0086               	movwf	6
 13487  0252  3001               	movlw	1	; select bank3/4
 13488  0253  0087               	movwf	7
 13489  0254  1481               	bsf	1,1
 13490  0255                     i1l5406:	
 13491                           
 13492                           ;usb_device.c: 2870: }
 13493                           ;usb_device.c: 2871: }
 13494                           ;usb_device.c: 2874: p->STAT.Val |= 0x04;
 13495  0255  086B               	movf	i1USBStdFeatureReqHandler@p,w
 13496  0256  0086               	movwf	6
 13497  0257  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 13498  0258  0087               	movwf	7
 13499  0259  1501               	bsf	1,2
 13500                           
 13501                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
 13502  025A  086B               	movf	i1USBStdFeatureReqHandler@p,w
 13503  025B  0086               	movwf	6
 13504  025C  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 13505  025D  0087               	movwf	7
 13506  025E  1781               	bsf	1,7
 13507                           
 13508                           ;usb_device.c: 2876: }
 13509  025F  0008               	return
 13510  0260                     i1l5410:	
 13511                           
 13512                           ;usb_device.c: 2877: else
 13513                           ;usb_device.c: 2878: {
 13514                           ;usb_device.c: 2882: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 13515  0260  3004               	movlw	4
 13516  0261  066B               	xorwf	i1USBStdFeatureReqHandler@p,w
 13517  0262  00EB               	movwf	i1USBStdFeatureReqHandler@p
 13518  0263  3000               	movlw	0
 13519  0264  066C               	xorwf	i1USBStdFeatureReqHandler@p+1,w
 13520  0265  00EC               	movwf	i1USBStdFeatureReqHandler@p+1
 13521                           
 13522                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
 13523  0266  086B               	movf	i1USBStdFeatureReqHandler@p,w
 13524  0267  0086               	movwf	6
 13525  0268  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 13526  0269  0087               	movwf	7
 13527  026A  1F81               	btfss	1,7
 13528  026B  2A89               	goto	i1l5420
 13529                           
 13530                           ;usb_device.c: 2885: {
 13531                           ;usb_device.c: 2888: p->STAT.Val &= (~0x80);
 13532  026C  307F               	movlw	127
 13533  026D  00E6               	movwf	??i1_USBStdFeatureReqHandler
 13534  026E  086B               	movf	i1USBStdFeatureReqHandler@p,w
 13535  026F  0086               	movwf	6
 13536  0270  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 13537  0271  0087               	movwf	7
 13538  0272  0866               	movf	??i1_USBStdFeatureReqHandler,w
 13539  0273  0581               	andwf	1,f
 13540                           
 13541                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
 13542  0274  086B               	movf	i1USBStdFeatureReqHandler@p,w
 13543  0275  0086               	movwf	6
 13544  0276  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 13545  0277  0087               	movwf	7
 13546  0278  1701               	bsf	1,6
 13547                           
 13548                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 13549  0279  3000               	movlw	0
 13550  027A  00E1               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 13551  027B  3005               	movlw	5
 13552  027C  00E0               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 13553  027D  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 13554  027E  00E3               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 13555  027F  086B               	movf	i1USBStdFeatureReqHandler@p,w
 13556  0280  00E2               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 13557  0281  3002               	movlw	2
 13558  0282  00E4               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 13559  0283  3000               	movlw	0
 13560  0284  00E5               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 13561  0285  3190  20D8  3181   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 13562                           
 13563                           ;usb_device.c: 2891: }
 13564  0288  2A8F               	goto	i1l5422
 13565  0289                     i1l5420:	
 13566                           
 13567                           ;usb_device.c: 2892: else
 13568                           ;usb_device.c: 2893: {
 13569                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
 13570  0289  0020               	movlb	0	; select bank0
 13571  028A  086B               	movf	i1USBStdFeatureReqHandler@p,w
 13572  028B  0086               	movwf	6
 13573  028C  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 13574  028D  0087               	movwf	7
 13575  028E  1701               	bsf	1,6
 13576  028F                     i1l5422:	
 13577                           
 13578                           ;usb_device.c: 2896: }
 13579                           ;usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 13580  028F  3004               	movlw	4
 13581  0290  0020               	movlb	0	; select bank0
 13582  0291  066B               	xorwf	i1USBStdFeatureReqHandler@p,w
 13583  0292  00EB               	movwf	i1USBStdFeatureReqHandler@p
 13584  0293  3000               	movlw	0
 13585  0294  066C               	xorwf	i1USBStdFeatureReqHandler@p+1,w
 13586  0295  00EC               	movwf	i1USBStdFeatureReqHandler@p+1
 13587                           
 13588                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 13589  0296  18EA               	btfsc	i1USBStdFeatureReqHandler@current_ep_data,1
 13590  0297  2A9E               	goto	i1l628
 13591  0298  086B               	movf	i1USBStdFeatureReqHandler@p,w
 13592  0299  0086               	movwf	6
 13593  029A  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 13594  029B  0087               	movwf	7
 13595  029C  1F81               	btfss	1,7
 13596  029D  2AC3               	goto	i1l5434
 13597  029E                     i1l628:	
 13598                           
 13599                           ;usb_device.c: 2907: {
 13600                           ;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
 13601  029E  1BD4               	btfsc	84,7	;volatile
 13602  029F  2AA4               	goto	i1l5430
 13603                           
 13604                           ;usb_device.c: 2909: {
 13605                           ;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 13606  02A0  0854               	movf	84,w	;volatile
 13607  02A1  390F               	andlw	15
 13608  02A2  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
 13609  02A3  2AA7               	goto	L17
 13610  02A4                     i1l5430:	
 13611                           ;usb_device.c: 2911: }
 13612                           
 13613                           
 13614                           ;usb_device.c: 2912: else
 13615                           ;usb_device.c: 2913: {
 13616                           ;usb_device.c: 2914: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 13617  02A4  0854               	movf	84,w	;volatile
 13618  02A5  390F               	andlw	15
 13619  02A6  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
 13620  02A7                     L17:	
 13621  02A7  0086               	movwf	6
 13622  02A8  3001               	movlw	1	; select bank3/4
 13623  02A9  0087               	movwf	7
 13624  02AA  1081               	bcf	1,1
 13625                           
 13626                           ;usb_device.c: 2915: }
 13627                           ;usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 13628  02AB  303B               	movlw	59
 13629  02AC  00E6               	movwf	??i1_USBStdFeatureReqHandler
 13630  02AD  086B               	movf	i1USBStdFeatureReqHandler@p,w
 13631  02AE  0086               	movwf	6
 13632  02AF  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 13633  02B0  0087               	movwf	7
 13634  02B1  0866               	movf	??i1_USBStdFeatureReqHandler,w
 13635  02B2  0581               	andwf	1,f
 13636                           
 13637                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 13638  02B3  3000               	movlw	0
 13639  02B4  00E1               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 13640  02B5  3005               	movlw	5
 13641  02B6  00E0               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 13642  02B7  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 13643  02B8  00E3               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 13644  02B9  086B               	movf	i1USBStdFeatureReqHandler@p,w
 13645  02BA  00E2               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 13646  02BB  3002               	movlw	2
 13647  02BC  00E4               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 13648  02BD  3000               	movlw	0
 13649  02BE  00E5               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 13650  02BF  3190  20D8  3181   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 13651                           
 13652                           ;usb_device.c: 2921: }
 13653  02C2  2ACC               	goto	i1l5436
 13654  02C3                     i1l5434:	
 13655                           
 13656                           ;usb_device.c: 2922: else
 13657                           ;usb_device.c: 2923: {
 13658                           ;usb_device.c: 2925: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 13659  02C3  303B               	movlw	59
 13660  02C4  0020               	movlb	0	; select bank0
 13661  02C5  00E6               	movwf	??i1_USBStdFeatureReqHandler
 13662  02C6  086B               	movf	i1USBStdFeatureReqHandler@p,w
 13663  02C7  0086               	movwf	6
 13664  02C8  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 13665  02C9  0087               	movwf	7
 13666  02CA  0866               	movf	??i1_USBStdFeatureReqHandler,w
 13667  02CB  0581               	andwf	1,f
 13668  02CC                     i1l5436:	
 13669                           
 13670                           ;usb_device.c: 2926: }
 13671                           ;usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 13672  02CC  0020               	movlb	0	; select bank0
 13673  02CD  0854               	movf	84,w	;volatile
 13674  02CE  390F               	andlw	15
 13675  02CF  3E98               	addlw	152
 13676  02D0  00E6               	movwf	??i1_USBStdFeatureReqHandler
 13677  02D1  01E7               	clrf	??i1_USBStdFeatureReqHandler+1
 13678  02D2  300E               	movlw	14
 13679  02D3  3DE7               	addwfc	??i1_USBStdFeatureReqHandler+1,f
 13680  02D4  0866               	movf	??i1_USBStdFeatureReqHandler,w
 13681  02D5  00E8               	movwf	i1USBStdFeatureReqHandler@pUEP
 13682  02D6  0867               	movf	??i1_USBStdFeatureReqHandler+1,w
 13683  02D7  00E9               	movwf	i1USBStdFeatureReqHandler@pUEP+1
 13684                           
 13685                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
 13686  02D8  30FE               	movlw	254
 13687  02D9  00E6               	movwf	??i1_USBStdFeatureReqHandler
 13688  02DA  0868               	movf	i1USBStdFeatureReqHandler@pUEP,w
 13689  02DB  0086               	movwf	6
 13690  02DC  0869               	movf	i1USBStdFeatureReqHandler@pUEP+1,w
 13691  02DD  0087               	movwf	7
 13692  02DE  0866               	movf	??i1_USBStdFeatureReqHandler,w
 13693  02DF  0581               	andwf	1,f
 13694  02E0  0008               	return
 13695  02E1                     __end_ofi1_USBStdFeatureReqHandler:	
 13696                           
 13697                           	psect	text60
 13698  10D8                     __ptext60:	
 13699 ;; *************** function i1_USER_USB_CALLBACK_EVENT_HANDLER *****************
 13700 ;; Defined at:
 13701 ;;		line 49 in file "mcc_generated_files/usb/usb_device_events.c"
 13702 ;; Parameters:    Size  Location     Type
 13703 ;;  event           2    0[BANK0h] enum E40
 13704 ;;  pdata           2    2[BANK0h] PTR void 
 13705 ;;		 -> RAM(4096), USTATcopy(1), USBActiveConfiguration(1), BDT(48), 
 13706 ;;		 -> NULL(0), 
 13707 ;;  size            2    4[BANK0h] unsigned int 
 13708 ;; Auto vars:     Size  Location     Type
 13709 ;;		None
 13710 ;; Return value:  Size  Location     Type
 13711 ;;                  1    wreg      unsigned char 
 13712 ;; Registers used:
 13713 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13714 ;; Tracked objects:
 13715 ;;		On entry : 0/0
 13716 ;;		On exit  : 0/0
 13717 ;;		Unchanged: 0/0
 13718 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13719 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13722 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13723 ;;Total ram usage:        6 bytes
 13724 ;; Hardware stack levels used:    1
 13725 ;; Hardware stack levels required when called:    3
 13726 ;; This function calls:
 13727 ;;		i1_CDCInitEP
 13728 ;;		i1_USBCheckCDCRequest
 13729 ;; This function is called by:
 13730 ;;		i1_USBDeviceTasks
 13731 ;;		i1_USBStdSetCfgHandler
 13732 ;;		i1_USBSuspend
 13733 ;;		i1_USBWakeFromSuspend
 13734 ;;		i1_USBCtrlTrfSetupHandler
 13735 ;;		i1_USBCheckStdRequest
 13736 ;;		i1_USBStdFeatureReqHandler
 13737 ;; This function uses a non-reentrant model
 13738 ;;
 13739                           
 13740                           
 13741                           ;psect for function i1_USER_USB_CALLBACK_EVENT_HANDLER
 13742  10D8                     i1_USER_USB_CALLBACK_EVENT_HANDLER:	
 13743                           
 13744                           ;usb_device_events.c: 51: switch( (int) event )
 13745                           
 13746                           ;incstack = 0
 13747                           ; Regs used in i1_USER_USB_CALLBACK_EVENT_HANDLER: [wreg-fsr1h+status,2+status,0+pclath+
      +                          cstack]
 13748  10D8  28DF               	goto	i1l4864
 13749  10D9                     i1l4858:	
 13750                           ;usb_device_events.c: 75: case EVENT_CONFIGURED:
 13751                           
 13752                           ;usb_device_events.c: 73: break;
 13753                           
 13754                           ;usb_device_events.c: 68: case EVENT_RESUME:
 13755                           
 13756                           ;usb_device_events.c: 66: break;
 13757                           
 13758                           ;usb_device_events.c: 59: case EVENT_SUSPEND:
 13759                           
 13760                           ;usb_device_events.c: 57: break;
 13761                           
 13762                           ;usb_device_events.c: 56: case EVENT_SOF:
 13763                           
 13764                           ;usb_device_events.c: 54: break;
 13765                           
 13766                           ;usb_device_events.c: 52: {
 13767                           ;usb_device_events.c: 53: case EVENT_TRANSFER:
 13768                           
 13769                           
 13770                           ;usb_device_events.c: 76: CDCInitEP();
 13771  10D9  3191  219E         	fcall	i1_CDCInitEP
 13772                           
 13773                           ;usb_device_events.c: 80: break;
 13774                           
 13775                           ;usb_device_events.c: 79: case EVENT_SET_DESCRIPTOR:
 13776                           
 13777                           ;usb_device_events.c: 77: break;
 13778  10DB  0008               	return
 13779  10DC                     i1l4860:	
 13780                           ;usb_device_events.c: 82: case EVENT_EP0_REQUEST:
 13781                           
 13782                           
 13783                           ;usb_device_events.c: 85: USBCheckCDCRequest();
 13784  10DC  3197  273F         	fcall	i1_USBCheckCDCRequest
 13785                           
 13786                           ;usb_device_events.c: 96: }
 13787                           
 13788                           ;usb_device_events.c: 95: break;
 13789                           
 13790                           ;usb_device_events.c: 94: default:
 13791                           
 13792                           ;usb_device_events.c: 92: break;
 13793                           
 13794                           ;usb_device_events.c: 91: case EVENT_TRANSFER_TERMINATED:
 13795                           
 13796                           ;usb_device_events.c: 89: break;
 13797                           
 13798                           ;usb_device_events.c: 88: case EVENT_BUS_ERROR:
 13799                           
 13800                           ;usb_device_events.c: 86: break;
 13801  10DE  0008               	return
 13802  10DF                     i1l4864:	
 13803                           
 13804                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 13805                           ; Switch size 1, requested type "space"
 13806                           ; Number of cases is 2, Range of values is 0 to 127
 13807                           ; switch strategies available:
 13808                           ; Name         Instructions Cycles
 13809                           ; simple_byte            7     4 (average)
 13810                           ; direct_byte          262     6 (fixed)
 13811                           ; jumptable            260     6 (fixed)
 13812                           ;	Chosen strategy is simple_byte
 13813  10DF  0020               	movlb	0	; select bank0
 13814  10E0  0861               	movf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1,w
 13815  10E1  3A00               	xorlw	0	; case 0
 13816  10E2  1903               	skipnz
 13817  10E3  28E8               	goto	i1l8582
 13818  10E4  3A7F               	xorlw	127	; case 127
 13819  10E5  1903               	skipnz
 13820  10E6  2902               	goto	i1l8584
 13821  10E7  2907               	goto	i1l244
 13822  10E8                     i1l8582:	
 13823                           
 13824                           ; Switch size 1, requested type "space"
 13825                           ; Number of cases is 8, Range of values is 1 to 117
 13826                           ; switch strategies available:
 13827                           ; Name         Instructions Cycles
 13828                           ; simple_byte           25    13 (average)
 13829                           ; direct_byte          243     9 (fixed)
 13830                           ; jumptable            263     9 (fixed)
 13831                           ;	Chosen strategy is simple_byte
 13832  10E8  0860               	movf	i1USER_USB_CALLBACK_EVENT_HANDLER@event,w
 13833  10E9  3A01               	xorlw	1	; case 1
 13834  10EA  1903               	skipnz
 13835  10EB  28D9               	goto	i1l4858
 13836  10EC  3A03               	xorlw	3	; case 2
 13837  10ED  1903               	skipnz
 13838  10EE  2907               	goto	i1l244
 13839  10EF  3A01               	xorlw	1	; case 3
 13840  10F0  1903               	skipnz
 13841  10F1  28DC               	goto	i1l4860
 13842  10F2  3A06               	xorlw	6	; case 5
 13843  10F3  1903               	skipnz
 13844  10F4  2907               	goto	i1l244
 13845  10F5  3A77               	xorlw	119	; case 114
 13846  10F6  1903               	skipnz
 13847  10F7  2907               	goto	i1l244
 13848  10F8  3A01               	xorlw	1	; case 115
 13849  10F9  1903               	skipnz
 13850  10FA  2907               	goto	i1l244
 13851  10FB  3A07               	xorlw	7	; case 116
 13852  10FC  1903               	skipnz
 13853  10FD  2907               	goto	i1l244
 13854  10FE  3A01               	xorlw	1	; case 117
 13855  10FF  1903               	skipnz
 13856  1100  2907               	goto	i1l244
 13857  1101  2907               	goto	i1l244
 13858  1102                     i1l8584:	
 13859                           
 13860                           ; Switch size 1, requested type "space"
 13861                           ; Number of cases is 1, Range of values is 255 to 255
 13862                           ; switch strategies available:
 13863                           ; Name         Instructions Cycles
 13864                           ; simple_byte            4     3 (average)
 13865                           ; direct_byte            7     5 (fixed)
 13866                           ; jumptable            263     9 (fixed)
 13867                           ;	Chosen strategy is simple_byte
 13868  1102  0860               	movf	i1USER_USB_CALLBACK_EVENT_HANDLER@event,w
 13869  1103  3AFF               	xorlw	255	; case 255
 13870  1104  1903               	skipnz
 13871  1105  2907               	goto	i1l244
 13872  1106  2907               	goto	i1l244
 13873  1107                     i1l244:	
 13874                           ;usb_device_events.c: 97: return 1;
 13875                           ;	Return value of i1_USER_USB_CALLBACK_EVENT_HANDLER is never used
 13876                           
 13877  1107  0008               	return
 13878  1108                     __end_ofi1_USER_USB_CALLBACK_EVENT_HANDLER:	
 13879                           
 13880                           	psect	text61
 13881  173F                     __ptext61:	
 13882 ;; *************** function i1_USBCheckCDCRequest *****************
 13883 ;; Defined at:
 13884 ;;		line 146 in file "mcc_generated_files/usb/usb_device_cdc.c"
 13885 ;; Parameters:    Size  Location     Type
 13886 ;;		None
 13887 ;; Auto vars:     Size  Location     Type
 13888 ;;		None
 13889 ;; Return value:  Size  Location     Type
 13890 ;;                  1    wreg      void 
 13891 ;; Registers used:
 13892 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 13893 ;; Tracked objects:
 13894 ;;		On entry : 0/0
 13895 ;;		On exit  : 0/0
 13896 ;;		Unchanged: 0/0
 13897 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13900 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13901 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13902 ;;Total ram usage:        1 bytes
 13903 ;; Hardware stack levels used:    1
 13904 ;; This function calls:
 13905 ;;		Nothing
 13906 ;; This function is called by:
 13907 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 13908 ;; This function uses a non-reentrant model
 13909 ;;
 13910                           
 13911                           
 13912                           ;psect for function i1_USBCheckCDCRequest
 13913  173F                     i1_USBCheckCDCRequest:	
 13914                           
 13915                           ;usb_device_cdc.c: 151: if(SetupPkt.Recipient != (0x01)) return;
 13916                           
 13917                           ;incstack = 0
 13918                           ; Regs used in i1_USBCheckCDCRequest: [wreg-fsr0h+status,2+status,0]
 13919  173F  0020               	movlb	0	; select bank0
 13920  1740  0850               	movf	80,w	;volatile
 13921  1741  391F               	andlw	31
 13922  1742  3A01               	xorlw	1
 13923  1743  1D03               	btfss	3,2
 13924  1744  0008               	return
 13925                           
 13926                           ;usb_device_cdc.c: 156: if(SetupPkt.RequestType != (0x20>>5)) return;
 13927  1745  0E50               	swapf	80,w	;volatile
 13928  1746  0C89               	rrf	9,f
 13929  1747  3903               	andlw	3
 13930  1748  3A01               	xorlw	1
 13931  1749  1D03               	btfss	3,2
 13932  174A  0008               	return
 13933                           
 13934                           ;usb_device_cdc.c: 162: if((SetupPkt.bIntfID != 0x0)&&
 13935                           ;usb_device_cdc.c: 163: (SetupPkt.bIntfID != 0x01)) return;
 13936  174B  0854               	movf	84,w	;volatile
 13937  174C  1903               	btfsc	3,2
 13938  174D  2F8C               	goto	i1l4770
 13939  174E  0354               	decf	84,w	;volatile
 13940  174F  1D03               	btfss	3,2
 13941  1750  0008               	return
 13942  1751  2F8C               	goto	i1l4770
 13943  1752                     i1l4740:	
 13944                           ;usb_device_cdc.c: 166: {
 13945                           ;usb_device_cdc.c: 168: case 0x00:
 13946                           
 13947                           ;usb_device_cdc.c: 165: switch(SetupPkt.bRequest)
 13948                           
 13949                           
 13950                           ;usb_device_cdc.c: 170: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 13951  1752  304F               	movlw	low _dummy_encapsulated_cmd_response
 13952  1753  0021               	movlb	1	; select bank1
 13953  1754  00C3               	movwf	_inPipes^(0+128)	;volatile
 13954  1755  3002               	movlw	high _dummy_encapsulated_cmd_response
 13955  1756  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
 13956                           
 13957                           ;usb_device_cdc.c: 171: inPipes[0].wCount.Val = 0x08;
 13958  1757  3000               	movlw	0
 13959  1758  00C7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
 13960  1759  3008               	movlw	8
 13961  175A  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
 13962                           
 13963                           ;usb_device_cdc.c: 172: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 13964  175B  1445               	bsf	(_inPipes^(0+128)+2),0	;volatile
 13965                           
 13966                           ;usb_device_cdc.c: 173: inPipes[0].info.bits.busy = 1;
 13967  175C  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 13968                           
 13969                           ;usb_device_cdc.c: 174: break;
 13970  175D  0008               	return
 13971  175E                     i1l4748:	
 13972                           ;usb_device_cdc.c: 175: case 0x01:
 13973                           
 13974                           
 13975                           ;usb_device_cdc.c: 177: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 13976  175E  304F               	movlw	low _dummy_encapsulated_cmd_response
 13977  175F  0021               	movlb	1	; select bank1
 13978  1760  00C3               	movwf	_inPipes^(0+128)	;volatile
 13979  1761  3002               	movlw	high _dummy_encapsulated_cmd_response
 13980  1762  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
 13981                           
 13982                           ;usb_device_cdc.c: 178: inPipes[0].info.bits.busy = 1;
 13983  1763  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 13984                           
 13985                           ;usb_device_cdc.c: 179: break;
 13986  1764  0008               	return
 13987  1765                     i1l4752:	
 13988                           ;usb_device_cdc.c: 183: case 0x20:
 13989                           
 13990                           
 13991                           ;usb_device_cdc.c: 184: outPipes[0].wCount.Val = SetupPkt.wLength;
 13992  1765  0020               	movlb	0	; select bank0
 13993  1766  0857               	movf	87,w	;volatile
 13994  1767  0023               	movlb	3	; select bank3
 13995  1768  00B4               	movwf	((_outPipes+1)^(0+384)+3)	;volatile
 13996  1769  0020               	movlb	0	; select bank0
 13997  176A  0856               	movf	86,w	;volatile
 13998  176B  0023               	movlb	3	; select bank3
 13999  176C  00B3               	movwf	(_outPipes^(0+384)+3)	;volatile
 14000                           
 14001                           ;usb_device_cdc.c: 185: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 14002  176D  3057               	movlw	(low (_line_coding| (0+512)))& (0+255)
 14003  176E  00F0               	movwf	??i1_USBCheckCDCRequest
 14004  176F  0870               	movf	??i1_USBCheckCDCRequest,w
 14005  1770  00B0               	movwf	_outPipes^(0+384)	;volatile
 14006                           
 14007                           ;usb_device_cdc.c: 186: outPipes[0].pFunc = (0);
 14008  1771  01B5               	clrf	(low ((_outPipes| (0+256)+5)))^(0+128)	;volatile
 14009  1772  01B6               	clrf	((low ((_outPipes| (0+256)+5))+1))^(0+128)	;volatile
 14010                           
 14011                           ;usb_device_cdc.c: 187: outPipes[0].info.bits.busy = 1;
 14012  1773  17B2               	bsf	(_outPipes^(0+384)+2),7	;volatile
 14013                           
 14014                           ;usb_device_cdc.c: 188: break;
 14015  1774  0008               	return
 14016  1775                     i1l4758:	
 14017                           ;usb_device_cdc.c: 190: case 0x21:
 14018                           
 14019                           
 14020                           ;usb_device_cdc.c: 191: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 14021  1775  3057               	movlw	low _line_coding
 14022  1776  0021               	movlb	1	; select bank1
 14023  1777  00C3               	movwf	_inPipes^(0+128)	;volatile
 14024  1778  3002               	movlw	high _line_coding
 14025  1779  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
 14026  177A  3000               	movlw	0
 14027  177B  00C7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
 14028  177C  3007               	movlw	7
 14029  177D  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
 14030  177E  30C1               	movlw	193
 14031  177F  00F0               	movwf	??i1_USBCheckCDCRequest
 14032  1780  0870               	movf	??i1_USBCheckCDCRequest,w
 14033  1781  00C5               	movwf	(_inPipes^(0+128)+2)	;volatile
 14034                           
 14035                           ;usb_device_cdc.c: 195: break;
 14036  1782  0008               	return
 14037  1783                     i1l4764:	
 14038                           ;usb_device_cdc.c: 197: case 0x22:
 14039                           
 14040                           
 14041                           ;usb_device_cdc.c: 198: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 14042  1783  0020               	movlb	0	; select bank0
 14043  1784  0852               	movf	82,w	;volatile
 14044  1785  00F0               	movwf	??i1_USBCheckCDCRequest
 14045  1786  0870               	movf	??i1_USBCheckCDCRequest,w
 14046  1787  0023               	movlb	3	; select bank3
 14047  1788  00E6               	movwf	_control_signal_bitmap^(0+384)
 14048                           
 14049                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.busy = 1;
 14050  1789  0021               	movlb	1	; select bank1
 14051  178A  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 14052                           
 14053                           ;usb_device_cdc.c: 257: }
 14054                           
 14055                           ;usb_device_cdc.c: 256: break;
 14056                           
 14057                           ;usb_device_cdc.c: 255: default:
 14058                           
 14059                           ;usb_device_cdc.c: 231: break;
 14060  178B  0008               	return
 14061  178C                     i1l4770:	
 14062  178C  0020               	movlb	0	; select bank0
 14063  178D  0851               	movf	81,w	;volatile
 14064                           
 14065                           ; Switch size 1, requested type "space"
 14066                           ; Number of cases is 5, Range of values is 0 to 34
 14067                           ; switch strategies available:
 14068                           ; Name         Instructions Cycles
 14069                           ; simple_byte           16     9 (average)
 14070                           ; direct_byte           76     6 (fixed)
 14071                           ; jumptable            260     6 (fixed)
 14072                           ;	Chosen strategy is simple_byte
 14073  178E  3A00               	xorlw	0	; case 0
 14074  178F  1903               	skipnz
 14075  1790  2F52               	goto	i1l4740
 14076  1791  3A01               	xorlw	1	; case 1
 14077  1792  1903               	skipnz
 14078  1793  2F5E               	goto	i1l4748
 14079  1794  3A21               	xorlw	33	; case 32
 14080  1795  1903               	skipnz
 14081  1796  2F65               	goto	i1l4752
 14082  1797  3A01               	xorlw	1	; case 33
 14083  1798  1903               	skipnz
 14084  1799  2F75               	goto	i1l4758
 14085  179A  3A03               	xorlw	3	; case 34
 14086  179B  1903               	skipnz
 14087  179C  2F83               	goto	i1l4764
 14088  179D  2F9E               	goto	i1l139
 14089  179E                     i1l139:	
 14090  179E  0008               	return
 14091  179F                     __end_ofi1_USBCheckCDCRequest:	
 14092                           
 14093                           	psect	text62
 14094  119E                     __ptext62:	
 14095 ;; *************** function i1_CDCInitEP *****************
 14096 ;; Defined at:
 14097 ;;		line 293 in file "mcc_generated_files/usb/usb_device_cdc.c"
 14098 ;; Parameters:    Size  Location     Type
 14099 ;;		None
 14100 ;; Auto vars:     Size  Location     Type
 14101 ;;		None
 14102 ;; Return value:  Size  Location     Type
 14103 ;;                  1    wreg      void 
 14104 ;; Registers used:
 14105 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14106 ;; Tracked objects:
 14107 ;;		On entry : 0/0
 14108 ;;		On exit  : 0/0
 14109 ;;		Unchanged: 0/0
 14110 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14113 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14114 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14115 ;;Total ram usage:        1 bytes
 14116 ;; Hardware stack levels used:    1
 14117 ;; Hardware stack levels required when called:    2
 14118 ;; This function calls:
 14119 ;;		i1_USBEnableEndpoint
 14120 ;;		i1_USBTransferOnePacket
 14121 ;; This function is called by:
 14122 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 14123 ;; This function uses a non-reentrant model
 14124 ;;
 14125                           
 14126                           
 14127                           ;psect for function i1_CDCInitEP
 14128  119E                     i1_CDCInitEP:	
 14129                           
 14130                           ;usb_device_cdc.c: 296: line_coding.dwDTERate = 19200;
 14131                           
 14132                           ;incstack = 0
 14133                           ; Regs used in i1_CDCInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14134  119E  3000               	movlw	0
 14135  119F  0024               	movlb	4	; select bank4
 14136  11A0  00DA               	movwf	(_line_coding+3)^(0+512)
 14137  11A1  3000               	movlw	0
 14138  11A2  00D9               	movwf	(_line_coding+2)^(0+512)
 14139  11A3  304B               	movlw	75
 14140  11A4  00D8               	movwf	(_line_coding+1)^(0+512)
 14141  11A5  3000               	movlw	0
 14142  11A6  00D7               	movwf	_line_coding^(0+512)
 14143                           
 14144                           ;usb_device_cdc.c: 297: line_coding.bCharFormat = 0x00;
 14145  11A7  01DB               	clrf	(_line_coding^(0+512)+4)
 14146                           
 14147                           ;usb_device_cdc.c: 298: line_coding.bParityType = 0x00;
 14148  11A8  01DC               	clrf	(_line_coding^(0+512)+5)
 14149                           
 14150                           ;usb_device_cdc.c: 299: line_coding.bDataBits = 0x08;
 14151  11A9  3008               	movlw	8
 14152  11AA  00FD               	movwf	??i1_CDCInitEP
 14153  11AB  087D               	movf	??i1_CDCInitEP,w
 14154  11AC  00DD               	movwf	(_line_coding^(0+512)+6)
 14155                           
 14156                           ;usb_device_cdc.c: 301: cdc_rx_len = 0;
 14157  11AD  0023               	movlb	3	; select bank3
 14158  11AE  01EA               	clrf	_cdc_rx_len^(0+384)
 14159                           
 14160                           ;usb_device_cdc.c: 314: USBEnableEndpoint(1,0x02|0x10|0x08);
 14161  11AF  301A               	movlw	26
 14162  11B0  00FD               	movwf	??i1_CDCInitEP
 14163  11B1  087D               	movf	??i1_CDCInitEP,w
 14164  11B2  00F7               	movwf	i1USBEnableEndpoint@options
 14165  11B3  3001               	movlw	1
 14166  11B4  319F  275D  3191   	fcall	i1_USBEnableEndpoint
 14167                           
 14168                           ;usb_device_cdc.c: 315: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 14169  11B7  301E               	movlw	30
 14170  11B8  00FD               	movwf	??i1_CDCInitEP
 14171  11B9  087D               	movf	??i1_CDCInitEP,w
 14172  11BA  00F7               	movwf	i1USBEnableEndpoint@options
 14173  11BB  3002               	movlw	2
 14174  11BC  319F  275D  3191   	fcall	i1_USBEnableEndpoint
 14175                           
 14176                           ;usb_device_cdc.c: 317: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 14177  11BF  01F0               	clrf	i1USBTransferOnePacket@dir
 14178  11C0  30C0               	movlw	192
 14179  11C1  00F1               	movwf	i1USBTransferOnePacket@data
 14180  11C2  3020               	movlw	32
 14181  11C3  00F2               	movwf	i1USBTransferOnePacket@data+1
 14182  11C4  3040               	movlw	64
 14183  11C5  00FD               	movwf	??i1_CDCInitEP
 14184  11C6  087D               	movf	??i1_CDCInitEP,w
 14185  11C7  00F3               	movwf	i1USBTransferOnePacket@len
 14186  11C8  3002               	movlw	2
 14187  11C9  318C  2412         	fcall	i1_USBTransferOnePacket
 14188  11CB  0871               	movf	?i1_USBTransferOnePacket+1,w
 14189  11CC  0023               	movlb	3	; select bank3
 14190  11CD  00D0               	movwf	(_CDCDataOutHandle+1)^(0+384)
 14191  11CE  0870               	movf	?i1_USBTransferOnePacket,w
 14192  11CF  00CF               	movwf	_CDCDataOutHandle^(0+384)
 14193                           
 14194                           ;usb_device_cdc.c: 318: CDCDataInHandle = (0);
 14195  11D0  01CD               	clrf	_CDCDataInHandle^(0+384)
 14196  11D1  01CE               	clrf	(_CDCDataInHandle+1)^(0+384)
 14197                           
 14198                           ;usb_device_cdc.c: 345: cdc_trf_state = 0;
 14199  11D2  01E9               	clrf	_cdc_trf_state^(0+384)
 14200  11D3  0008               	return
 14201  11D4                     __end_ofi1_CDCInitEP:	
 14202                           
 14203                           	psect	text63
 14204  0C12                     __ptext63:	
 14205 ;; *************** function i1_USBTransferOnePacket *****************
 14206 ;; Defined at:
 14207 ;;		line 995 in file "mcc_generated_files/usb/usb_device.c"
 14208 ;; Parameters:    Size  Location     Type
 14209 ;;  ep              1    wreg     unsigned char 
 14210 ;;  dir             1    0[COMMON] unsigned char 
 14211 ;;  data            2    1[COMMON] PTR unsigned char 
 14212 ;;		 -> cdc_data_tx(64), NULL(0), cdc_data_rx(64), 
 14213 ;;  len             1    3[COMMON] unsigned char 
 14214 ;; Auto vars:     Size  Location     Type
 14215 ;;  ep              1    8[COMMON] unsigned char 
 14216 ;;  USBTransferO    2    9[COMMON] PTR volatile struct __BD
 14217 ;;		 -> RAM(4096), BDT(48), NULL(0), 
 14218 ;; Return value:  Size  Location     Type
 14219 ;;                  2    0[COMMON] PTR void 
 14220 ;; Registers used:
 14221 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14222 ;; Tracked objects:
 14223 ;;		On entry : 0/0
 14224 ;;		On exit  : 0/0
 14225 ;;		Unchanged: 0/0
 14226 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14227 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14228 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14229 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14230 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14231 ;;Total ram usage:       11 bytes
 14232 ;; Hardware stack levels used:    1
 14233 ;; This function calls:
 14234 ;;		Nothing
 14235 ;; This function is called by:
 14236 ;;		i1_CDCInitEP
 14237 ;; This function uses a non-reentrant model
 14238 ;;
 14239                           
 14240                           
 14241                           ;psect for function i1_USBTransferOnePacket
 14242  0C12                     i1_USBTransferOnePacket:	
 14243                           
 14244                           ;incstack = 0
 14245                           ; Regs used in i1_USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
 14246                           ;i1USBTransferOnePacket@ep stored from wreg
 14247  0C12  00F8               	movwf	i1USBTransferOnePacket@ep
 14248                           
 14249                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 14250                           ;usb_device.c: 1000: if(dir != 0)
 14251  0C13  0870               	movf	i1USBTransferOnePacket@dir,w
 14252  0C14  1903               	btfsc	3,2
 14253  0C15  2C1F               	goto	i1l4638
 14254                           
 14255                           ;usb_device.c: 1001: {
 14256                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 14257  0C16  3578               	lslf	i1USBTransferOnePacket@ep,w
 14258  0C17  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 14259  0C18  0086               	movwf	6
 14260  0C19  3001               	movlw	1	; select bank3/4
 14261  0C1A  0087               	movwf	7
 14262  0C1B  3F40               	moviw [0]fsr1
 14263  0C1C  00F9               	movwf	i1USBTransferOnePacket@handle
 14264  0C1D  3F41               	moviw [1]fsr1
 14265  0C1E  2C27               	goto	L18
 14266  0C1F                     i1l4638:	
 14267                           ;usb_device.c: 1004: }
 14268                           
 14269                           
 14270                           ;usb_device.c: 1005: else
 14271                           ;usb_device.c: 1006: {
 14272                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 14273  0C1F  3578               	lslf	i1USBTransferOnePacket@ep,w
 14274  0C20  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 14275  0C21  0086               	movwf	6
 14276  0C22  3001               	movlw	1	; select bank3/4
 14277  0C23  0087               	movwf	7
 14278  0C24  3F40               	moviw [0]fsr1
 14279  0C25  00F9               	movwf	i1USBTransferOnePacket@handle
 14280  0C26  3F41               	moviw [1]fsr1
 14281  0C27                     L18:	
 14282  0C27  00FA               	movwf	i1USBTransferOnePacket@handle+1
 14283                           
 14284                           ;usb_device.c: 1009: }
 14285                           ;usb_device.c: 1013: if(handle == 0)
 14286  0C28  0879               	movf	i1USBTransferOnePacket@handle,w
 14287  0C29  047A               	iorwf	i1USBTransferOnePacket@handle+1,w
 14288  0C2A  1D03               	btfss	3,2
 14289  0C2B  2C2F               	goto	i1l4646
 14290                           
 14291                           ;usb_device.c: 1014: {
 14292                           ;usb_device.c: 1015: return 0;
 14293  0C2C  01F0               	clrf	?i1_USBTransferOnePacket
 14294  0C2D  01F1               	clrf	?i1_USBTransferOnePacket+1
 14295  0C2E  0008               	return
 14296  0C2F                     i1l4646:	
 14297                           
 14298                           ;usb_device.c: 1016: }
 14299                           ;usb_device.c: 1029: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
 14300  0C2F  30FF               	movlw	255
 14301  0C30  0571               	andwf	i1USBTransferOnePacket@data,w
 14302  0C31  00F4               	movwf	??i1_USBTransferOnePacket
 14303  0C32  307F               	movlw	127
 14304  0C33  0572               	andwf	i1USBTransferOnePacket@data+1,w
 14305  0C34  00F5               	movwf	??i1_USBTransferOnePacket+1
 14306  0C35  0879               	movf	i1USBTransferOnePacket@handle,w
 14307  0C36  0086               	movwf	6
 14308  0C37  087A               	movf	i1USBTransferOnePacket@handle+1,w
 14309  0C38  0087               	movwf	7
 14310  0C39  3142               	addfsr 1,2
 14311  0C3A  0874               	movf	??i1_USBTransferOnePacket,w
 14312  0C3B  3FC0               	movwi [0]fsr1
 14313  0C3C  0875               	movf	??i1_USBTransferOnePacket+1,w
 14314  0C3D  3FC1               	movwi [1]fsr1
 14315                           
 14316                           ;usb_device.c: 1030: handle->CNT = len;
 14317  0C3E  0879               	movf	i1USBTransferOnePacket@handle,w
 14318  0C3F  3E01               	addlw	1
 14319  0C40  00F4               	movwf	??i1_USBTransferOnePacket
 14320  0C41  3000               	movlw	0
 14321  0C42  3D7A               	addwfc	i1USBTransferOnePacket@handle+1,w
 14322  0C43  00F5               	movwf	??i1_USBTransferOnePacket+1
 14323  0C44  0874               	movf	??i1_USBTransferOnePacket,w
 14324  0C45  0086               	movwf	6
 14325  0C46  0875               	movf	??i1_USBTransferOnePacket+1,w
 14326  0C47  0087               	movwf	7
 14327  0C48  0873               	movf	i1USBTransferOnePacket@len,w
 14328  0C49  0081               	movwf	1
 14329                           
 14330                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 14331  0C4A  3040               	movlw	64
 14332  0C4B  00F4               	movwf	??i1_USBTransferOnePacket
 14333  0C4C  0879               	movf	i1USBTransferOnePacket@handle,w
 14334  0C4D  0086               	movwf	6
 14335  0C4E  087A               	movf	i1USBTransferOnePacket@handle+1,w
 14336  0C4F  0087               	movwf	7
 14337  0C50  0874               	movf	??i1_USBTransferOnePacket,w
 14338  0C51  0581               	andwf	1,f
 14339                           
 14340                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 14341  0C52  0879               	movf	i1USBTransferOnePacket@handle,w
 14342  0C53  0086               	movwf	6
 14343  0C54  087A               	movf	i1USBTransferOnePacket@handle+1,w
 14344  0C55  0087               	movwf	7
 14345  0C56  1581               	bsf	1,3
 14346                           
 14347                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 14348  0C57  0879               	movf	i1USBTransferOnePacket@handle,w
 14349  0C58  0086               	movwf	6
 14350  0C59  087A               	movf	i1USBTransferOnePacket@handle+1,w
 14351  0C5A  0087               	movwf	7
 14352  0C5B  1781               	bsf	1,7
 14353                           
 14354                           ;usb_device.c: 1036: if(dir != 0)
 14355  0C5C  0870               	movf	i1USBTransferOnePacket@dir,w
 14356  0C5D  1903               	btfsc	3,2
 14357  0C5E  2C78               	goto	i1l4656
 14358                           
 14359                           ;usb_device.c: 1037: {
 14360                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
 14361  0C5F  3578               	lslf	i1USBTransferOnePacket@ep,w
 14362  0C60  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 14363  0C61  0086               	movwf	6
 14364  0C62  3001               	movlw	1	; select bank3/4
 14365  0C63  0087               	movwf	7
 14366  0C64  3F40               	moviw [0]fsr1
 14367  0C65  00F4               	movwf	??i1_USBTransferOnePacket
 14368  0C66  3F41               	moviw [1]fsr1
 14369  0C67  00F5               	movwf	??i1_USBTransferOnePacket+1
 14370  0C68  3004               	movlw	4
 14371  0C69  0674               	xorwf	??i1_USBTransferOnePacket,w
 14372  0C6A  00F6               	movwf	??i1_USBTransferOnePacket+2
 14373  0C6B  3000               	movlw	0
 14374  0C6C  0675               	xorwf	??i1_USBTransferOnePacket+1,w
 14375  0C6D  00F7               	movwf	??i1_USBTransferOnePacket+3
 14376  0C6E  3578               	lslf	i1USBTransferOnePacket@ep,w
 14377  0C6F  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 14378  0C70  0086               	movwf	6
 14379  0C71  3001               	movlw	1	; select bank3/4
 14380  0C72  0087               	movwf	7
 14381  0C73  0876               	movf	??i1_USBTransferOnePacket+2,w
 14382  0C74  3FC0               	movwi [0]fsr1
 14383  0C75  0877               	movf	??i1_USBTransferOnePacket+3,w
 14384  0C76  3FC1               	movwi [1]fsr1
 14385                           
 14386                           ;usb_device.c: 1040: }
 14387  0C77  2C90               	goto	i1l4658
 14388  0C78                     i1l4656:	
 14389                           
 14390                           ;usb_device.c: 1041: else
 14391                           ;usb_device.c: 1042: {
 14392                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
 14393  0C78  3578               	lslf	i1USBTransferOnePacket@ep,w
 14394  0C79  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 14395  0C7A  0086               	movwf	6
 14396  0C7B  3001               	movlw	1	; select bank3/4
 14397  0C7C  0087               	movwf	7
 14398  0C7D  3F40               	moviw [0]fsr1
 14399  0C7E  00F4               	movwf	??i1_USBTransferOnePacket
 14400  0C7F  3F41               	moviw [1]fsr1
 14401  0C80  00F5               	movwf	??i1_USBTransferOnePacket+1
 14402  0C81  3004               	movlw	4
 14403  0C82  0674               	xorwf	??i1_USBTransferOnePacket,w
 14404  0C83  00F6               	movwf	??i1_USBTransferOnePacket+2
 14405  0C84  3000               	movlw	0
 14406  0C85  0675               	xorwf	??i1_USBTransferOnePacket+1,w
 14407  0C86  00F7               	movwf	??i1_USBTransferOnePacket+3
 14408  0C87  3578               	lslf	i1USBTransferOnePacket@ep,w
 14409  0C88  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 14410  0C89  0086               	movwf	6
 14411  0C8A  3001               	movlw	1	; select bank3/4
 14412  0C8B  0087               	movwf	7
 14413  0C8C  0876               	movf	??i1_USBTransferOnePacket+2,w
 14414  0C8D  3FC0               	movwi [0]fsr1
 14415  0C8E  0877               	movf	??i1_USBTransferOnePacket+3,w
 14416  0C8F  3FC1               	movwi [1]fsr1
 14417  0C90                     i1l4658:	
 14418                           
 14419                           ;usb_device.c: 1045: }
 14420                           ;usb_device.c: 1046: return (void*)handle;
 14421  0C90  087A               	movf	i1USBTransferOnePacket@handle+1,w
 14422  0C91  00F1               	movwf	?i1_USBTransferOnePacket+1
 14423  0C92  0879               	movf	i1USBTransferOnePacket@handle,w
 14424  0C93  00F0               	movwf	?i1_USBTransferOnePacket
 14425  0C94  0008               	return
 14426  0C95                     __end_ofi1_USBTransferOnePacket:	
 14427                           
 14428                           	psect	text64
 14429  1F5D                     __ptext64:	
 14430 ;; *************** function i1_USBEnableEndpoint *****************
 14431 ;; Defined at:
 14432 ;;		line 878 in file "mcc_generated_files/usb/usb_device.c"
 14433 ;; Parameters:    Size  Location     Type
 14434 ;;  ep              1    wreg     unsigned char 
 14435 ;;  options         1    7[COMMON] unsigned char 
 14436 ;; Auto vars:     Size  Location     Type
 14437 ;;  ep              1   12[COMMON] unsigned char 
 14438 ;;  USBEnableEnd    2   10[COMMON] PTR unsigned char 
 14439 ;;		 -> UEP0(1), 
 14440 ;; Return value:  Size  Location     Type
 14441 ;;                  1    wreg      void 
 14442 ;; Registers used:
 14443 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14444 ;; Tracked objects:
 14445 ;;		On entry : 0/0
 14446 ;;		On exit  : 0/0
 14447 ;;		Unchanged: 0/0
 14448 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14449 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14450 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14451 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14452 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14453 ;;Total ram usage:        6 bytes
 14454 ;; Hardware stack levels used:    1
 14455 ;; Hardware stack levels required when called:    1
 14456 ;; This function calls:
 14457 ;;		i1_USBConfigureEndpoint
 14458 ;; This function is called by:
 14459 ;;		i1_CDCInitEP
 14460 ;; This function uses a non-reentrant model
 14461 ;;
 14462                           
 14463                           
 14464                           ;psect for function i1_USBEnableEndpoint
 14465  1F5D                     i1_USBEnableEndpoint:	
 14466                           
 14467                           ;incstack = 0
 14468                           ; Regs used in i1_USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14469                           ;i1USBEnableEndpoint@ep stored from wreg
 14470  1F5D  00FC               	movwf	i1USBEnableEndpoint@ep
 14471                           
 14472                           ;usb_device.c: 880: unsigned char* p;
 14473                           ;usb_device.c: 884: if(options & 0x04)
 14474  1F5E  1D77               	btfss	i1USBEnableEndpoint@options,2
 14475  1F5F  2F65               	goto	i1l4626
 14476                           
 14477                           ;usb_device.c: 885: {
 14478                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 14479  1F60  01F0               	clrf	i1USBConfigureEndpoint@direction
 14480  1F61  087C               	movf	i1USBEnableEndpoint@ep,w
 14481  1F62  3192  22C5  319F   	fcall	i1_USBConfigureEndpoint
 14482  1F65                     i1l4626:	
 14483                           
 14484                           ;usb_device.c: 887: }
 14485                           ;usb_device.c: 888: if(options & 0x02)
 14486  1F65  1CF7               	btfss	i1USBEnableEndpoint@options,1
 14487  1F66  2F6C               	goto	i1l4630
 14488                           
 14489                           ;usb_device.c: 889: {
 14490                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 14491  1F67  01F0               	clrf	i1USBConfigureEndpoint@direction
 14492  1F68  0AF0               	incf	i1USBConfigureEndpoint@direction,f
 14493  1F69  087C               	movf	i1USBEnableEndpoint@ep,w
 14494  1F6A  3192  22C5         	fcall	i1_USBConfigureEndpoint
 14495  1F6C                     i1l4630:	
 14496                           
 14497                           ;usb_device.c: 891: }
 14498                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 14499  1F6C  087C               	movf	i1USBEnableEndpoint@ep,w
 14500  1F6D  3E98               	addlw	152
 14501  1F6E  00F8               	movwf	??i1_USBEnableEndpoint
 14502  1F6F  01F9               	clrf	??i1_USBEnableEndpoint+1
 14503  1F70  300E               	movlw	14
 14504  1F71  3DF9               	addwfc	??i1_USBEnableEndpoint+1,f
 14505  1F72  0878               	movf	??i1_USBEnableEndpoint,w
 14506  1F73  00FA               	movwf	i1USBEnableEndpoint@p
 14507  1F74  0879               	movf	??i1_USBEnableEndpoint+1,w
 14508  1F75  00FB               	movwf	i1USBEnableEndpoint@p+1
 14509                           
 14510                           ;usb_device.c: 901: *p = options;
 14511  1F76  087A               	movf	i1USBEnableEndpoint@p,w
 14512  1F77  0086               	movwf	6
 14513  1F78  087B               	movf	i1USBEnableEndpoint@p+1,w
 14514  1F79  0087               	movwf	7
 14515  1F7A  0877               	movf	i1USBEnableEndpoint@options,w
 14516  1F7B  0081               	movwf	1
 14517  1F7C  0008               	return
 14518  1F7D                     __end_ofi1_USBEnableEndpoint:	
 14519                           
 14520                           	psect	text65
 14521  12C5                     __ptext65:	
 14522 ;; *************** function i1_USBConfigureEndpoint *****************
 14523 ;; Defined at:
 14524 ;;		line 1543 in file "mcc_generated_files/usb/usb_device.c"
 14525 ;; Parameters:    Size  Location     Type
 14526 ;;  EPNum           1    wreg     unsigned char 
 14527 ;;  direction       1    0[COMMON] unsigned char 
 14528 ;; Auto vars:     Size  Location     Type
 14529 ;;  EPNum           1    5[COMMON] unsigned char 
 14530 ;;  USBConfigure    1    6[COMMON] PTR volatile struct __BD
 14531 ;;		 -> BDT(48), 
 14532 ;; Return value:  Size  Location     Type
 14533 ;;                  1    wreg      void 
 14534 ;; Registers used:
 14535 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14536 ;; Tracked objects:
 14537 ;;		On entry : 0/0
 14538 ;;		On exit  : 0/0
 14539 ;;		Unchanged: 0/0
 14540 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14541 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14542 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14543 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14544 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14545 ;;Total ram usage:        7 bytes
 14546 ;; Hardware stack levels used:    1
 14547 ;; This function calls:
 14548 ;;		Nothing
 14549 ;; This function is called by:
 14550 ;;		i1_USBEnableEndpoint
 14551 ;; This function uses a non-reentrant model
 14552 ;;
 14553                           
 14554                           
 14555                           ;psect for function i1_USBConfigureEndpoint
 14556  12C5                     i1_USBConfigureEndpoint:	
 14557                           
 14558                           ;incstack = 0
 14559                           ; Regs used in i1_USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
 14560                           ;i1USBConfigureEndpoint@EPNum stored from wreg
 14561  12C5  00F5               	movwf	i1USBConfigureEndpoint@EPNum
 14562                           
 14563                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 14564                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 14565  12C6  3020               	movlw	32
 14566  12C7  00F1               	movwf	??i1_USBConfigureEndpoint
 14567  12C8  0871               	movf	??i1_USBConfigureEndpoint,w
 14568  12C9  00F6               	movwf	i1USBConfigureEndpoint@handle
 14569                           
 14570                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 14571  12CA  0870               	movf	i1USBConfigureEndpoint@direction,w
 14572  12CB  00F1               	movwf	??i1_USBConfigureEndpoint
 14573  12CC  3001               	movlw	1
 14574  12CD                     u344_25:	
 14575  12CD  35F1               	lslf	??i1_USBConfigureEndpoint,f
 14576  12CE  0B89               	decfsz	9,f
 14577  12CF  2ACD               	goto	u344_25
 14578  12D0  0875               	movf	i1USBConfigureEndpoint@EPNum,w
 14579  12D1  00F2               	movwf	??i1_USBConfigureEndpoint+1
 14580  12D2  3001               	movlw	1
 14581  12D3                     u345_25:	
 14582  12D3  35F2               	lslf	??i1_USBConfigureEndpoint+1,f
 14583  12D4  3EFF               	addlw	-1
 14584  12D5  1D03               	skipz
 14585  12D6  2AD3               	goto	u345_25
 14586  12D7  3572               	lslf	??i1_USBConfigureEndpoint+1,w
 14587  12D8  0771               	addwf	??i1_USBConfigureEndpoint,w
 14588  12D9  00F3               	movwf	??i1_USBConfigureEndpoint+2
 14589  12DA  3001               	movlw	1
 14590  12DB                     u346_25:	
 14591  12DB  35F3               	lslf	??i1_USBConfigureEndpoint+2,f
 14592  12DC  3EFF               	addlw	-1
 14593  12DD  1D03               	skipz
 14594  12DE  2ADB               	goto	u346_25
 14595  12DF  3573               	lslf	??i1_USBConfigureEndpoint+2,w
 14596  12E0  00F4               	movwf	??i1_USBConfigureEndpoint+3
 14597  12E1  0874               	movf	??i1_USBConfigureEndpoint+3,w
 14598  12E2  07F6               	addwf	i1USBConfigureEndpoint@handle,f
 14599                           
 14600                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 14601  12E3  0876               	movf	i1USBConfigureEndpoint@handle,w
 14602  12E4  0086               	movwf	6
 14603  12E5  0187               	clrf	7
 14604  12E6  1381               	bcf	1,7
 14605                           
 14606                           ;usb_device.c: 1557: if(direction == 0)
 14607  12E7  0870               	movf	i1USBConfigureEndpoint@direction,w
 14608  12E8  1D03               	btfss	3,2
 14609  12E9  2AF4               	goto	i1l4576
 14610                           
 14611                           ;usb_device.c: 1558: {
 14612                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 14613  12EA  3575               	lslf	i1USBConfigureEndpoint@EPNum,w
 14614  12EB  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 14615  12EC  0086               	movwf	6
 14616  12ED  3001               	movlw	1	; select bank3/4
 14617  12EE  0087               	movwf	7
 14618  12EF  0876               	movf	i1USBConfigureEndpoint@handle,w
 14619  12F0  3FC0               	movwi [0]fsr1
 14620  12F1  3000               	movlw	0
 14621  12F2  3FC1               	movwi [1]fsr1
 14622                           
 14623                           ;usb_device.c: 1560: }
 14624  12F3  2AFD               	goto	i1l4578
 14625  12F4                     i1l4576:	
 14626                           
 14627                           ;usb_device.c: 1561: else
 14628                           ;usb_device.c: 1562: {
 14629                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 14630  12F4  3575               	lslf	i1USBConfigureEndpoint@EPNum,w
 14631  12F5  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 14632  12F6  0086               	movwf	6
 14633  12F7  3001               	movlw	1	; select bank3/4
 14634  12F8  0087               	movwf	7
 14635  12F9  0876               	movf	i1USBConfigureEndpoint@handle,w
 14636  12FA  3FC0               	movwi [0]fsr1
 14637  12FB  3000               	movlw	0
 14638  12FC  3FC1               	movwi [1]fsr1
 14639  12FD                     i1l4578:	
 14640                           
 14641                           ;usb_device.c: 1564: }
 14642                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 14643  12FD  0876               	movf	i1USBConfigureEndpoint@handle,w
 14644  12FE  0086               	movwf	6
 14645  12FF  0187               	clrf	7
 14646  1300  1301               	bcf	1,6
 14647                           
 14648                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 14649  1301  0876               	movf	i1USBConfigureEndpoint@handle,w
 14650  1302  3E04               	addlw	4
 14651  1303  0086               	movwf	6
 14652  1304  0187               	clrf	7
 14653  1305  1701               	bsf	1,6
 14654  1306  0008               	return
 14655  1307                     __end_ofi1_USBConfigureEndpoint:	
 14656                           
 14657                           	psect	text66
 14658  1168                     __ptext66:	
 14659 ;; *************** function i1_USBCtrlTrfOutHandler *****************
 14660 ;; Defined at:
 14661 ;;		line 2538 in file "mcc_generated_files/usb/usb_device.c"
 14662 ;; Parameters:    Size  Location     Type
 14663 ;;		None
 14664 ;; Auto vars:     Size  Location     Type
 14665 ;;		None
 14666 ;; Return value:  Size  Location     Type
 14667 ;;                  1    wreg      void 
 14668 ;; Registers used:
 14669 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14670 ;; Tracked objects:
 14671 ;;		On entry : 0/0
 14672 ;;		On exit  : 0/0
 14673 ;;		Unchanged: 0/0
 14674 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14677 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14678 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14679 ;;Total ram usage:        2 bytes
 14680 ;; Hardware stack levels used:    1
 14681 ;; Hardware stack levels required when called:    2
 14682 ;; This function calls:
 14683 ;;		i1_USBCtrlTrfRxService
 14684 ;; This function is called by:
 14685 ;;		i1_USBCtrlEPService
 14686 ;; This function uses a non-reentrant model
 14687 ;;
 14688                           
 14689                           
 14690                           ;psect for function i1_USBCtrlTrfOutHandler
 14691  1168                     i1_USBCtrlTrfOutHandler:	
 14692                           
 14693                           ;usb_device.c: 2540: if(controlTransferState == 2)
 14694                           
 14695                           ;incstack = 0
 14696                           ; Regs used in i1_USBCtrlTrfOutHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 14697  1168  3002               	movlw	2
 14698  1169  0023               	movlb	3	; select bank3
 14699  116A  0662               	xorwf	_controlTransferState^(0+384),w	;volatile
 14700  116B  1D03               	btfss	3,2
 14701  116C  2970               	goto	i1l6006
 14702                           
 14703                           ;usb_device.c: 2541: {
 14704                           ;usb_device.c: 2542: USBCtrlTrfRxService();
 14705  116D  318F  275D         	fcall	i1_USBCtrlTrfRxService
 14706                           
 14707                           ;usb_device.c: 2543: }
 14708  116F  0008               	return
 14709  1170                     i1l6006:	
 14710                           
 14711                           ;usb_device.c: 2544: else
 14712                           ;usb_device.c: 2545: {
 14713                           ;usb_device.c: 2548: controlTransferState = 0;
 14714  1170  0023               	movlb	3	; select bank3
 14715  1171  01E2               	clrf	_controlTransferState^(0+384)	;volatile
 14716                           
 14717                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
 14718  1172  085D               	movf	_BothEP0OutUOWNsSet^(0+384),w	;volatile
 14719  1173  1D03               	btfss	3,2
 14720  1174  299B               	goto	i1l6018
 14721                           
 14722                           ;usb_device.c: 2556: {
 14723                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 8;
 14724  1175  0021               	movlb	1	; select bank1
 14725  1176  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14726  1177  3E01               	addlw	1
 14727  1178  00F6               	movwf	??i1_USBCtrlTrfOutHandler
 14728  1179  3000               	movlw	0
 14729  117A  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14730  117B  00F7               	movwf	??i1_USBCtrlTrfOutHandler+1
 14731  117C  0876               	movf	??i1_USBCtrlTrfOutHandler,w
 14732  117D  0086               	movwf	6
 14733  117E  0877               	movf	??i1_USBCtrlTrfOutHandler+1,w
 14734  117F  0087               	movwf	7
 14735  1180  3008               	movlw	8
 14736  1181  0081               	movwf	1
 14737                           
 14738                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 14739  1182  3050               	movlw	80
 14740  1183  00F6               	movwf	??i1_USBCtrlTrfOutHandler
 14741  1184  3000               	movlw	0
 14742  1185  00F7               	movwf	??i1_USBCtrlTrfOutHandler+1
 14743  1186  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14744  1187  0086               	movwf	6
 14745  1188  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14746  1189  0087               	movwf	7
 14747  118A  3142               	addfsr 1,2
 14748  118B  0876               	movf	??i1_USBCtrlTrfOutHandler,w
 14749  118C  3FC0               	movwi [0]fsr1
 14750  118D  0877               	movf	??i1_USBCtrlTrfOutHandler+1,w
 14751  118E  3FC1               	movwi [1]fsr1
 14752                           
 14753                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 14754  118F  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14755  1190  0086               	movwf	6
 14756  1191  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14757  1192  0087               	movwf	7
 14758  1193  300C               	movlw	12
 14759  1194  0081               	movwf	1
 14760                           
 14761                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 14762  1195  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14763  1196  0086               	movwf	6
 14764  1197  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14765  1198  0087               	movwf	7
 14766  1199  1781               	bsf	1,7
 14767                           
 14768                           ;usb_device.c: 2561: }
 14769  119A  0008               	return
 14770  119B                     i1l6018:	
 14771                           
 14772                           ;usb_device.c: 2562: else
 14773                           ;usb_device.c: 2563: {
 14774                           ;usb_device.c: 2564: BothEP0OutUOWNsSet = 0;
 14775  119B  0023               	movlb	3	; select bank3
 14776  119C  01DD               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
 14777  119D  0008               	return
 14778  119E                     __end_ofi1_USBCtrlTrfOutHandler:	
 14779                           
 14780                           	psect	text67
 14781  0F5D                     __ptext67:	
 14782 ;; *************** function i1_USBCtrlTrfRxService *****************
 14783 ;; Defined at:
 14784 ;;		line 1852 in file "mcc_generated_files/usb/usb_device.c"
 14785 ;; Parameters:    Size  Location     Type
 14786 ;;		None
 14787 ;; Auto vars:     Size  Location     Type
 14788 ;;  USBCtrlTrfRx    1    5[COMMON] unsigned char 
 14789 ;;  USBCtrlTrfRx    1    4[COMMON] unsigned char 
 14790 ;; Return value:  Size  Location     Type
 14791 ;;                  1    wreg      void 
 14792 ;; Registers used:
 14793 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14794 ;; Tracked objects:
 14795 ;;		On entry : 0/0
 14796 ;;		On exit  : 0/0
 14797 ;;		Unchanged: 0/0
 14798 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14800 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14801 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14802 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14803 ;;Total ram usage:        4 bytes
 14804 ;; Hardware stack levels used:    1
 14805 ;; Hardware stack levels required when called:    1
 14806 ;; This function calls:
 14807 ;;		i1_USBCtrlEPAllowStatusStage
 14808 ;; This function is called by:
 14809 ;;		i1_USBCtrlTrfOutHandler
 14810 ;; This function uses a non-reentrant model
 14811 ;;
 14812                           
 14813                           
 14814                           ;psect for function i1_USBCtrlTrfRxService
 14815  0F5D                     i1_USBCtrlTrfRxService:	
 14816                           
 14817                           ;usb_device.c: 1854: uint8_t byteToRead;
 14818                           ;usb_device.c: 1855: uint8_t i;
 14819                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 14820                           
 14821                           ;incstack = 0
 14822                           ; Regs used in i1_USBCtrlTrfRxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 14823  0F5D  0023               	movlb	3	; select bank3
 14824  0F5E  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 14825  0F5F  0086               	movwf	6
 14826  0F60  0187               	clrf	7
 14827  0F61  3F41               	moviw [1]fsr1
 14828  0F62  00F5               	movwf	i1USBCtrlTrfRxService@byteToRead
 14829                           
 14830                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 14831  0F63  0875               	movf	i1USBCtrlTrfRxService@byteToRead,w
 14832  0F64  00F2               	movwf	??i1_USBCtrlTrfRxService
 14833  0F65  01F3               	clrf	??i1_USBCtrlTrfRxService+1
 14834  0F66  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 14835  0F67  0234               	subwf	((_outPipes+1)^(0+384)+3),w	;volatile
 14836  0F68  1D03               	skipz
 14837  0F69  2F6C               	goto	u478_25
 14838  0F6A  0872               	movf	??i1_USBCtrlTrfRxService,w
 14839  0F6B  0233               	subwf	(_outPipes^(0+384)+3),w	;volatile
 14840  0F6C                     u478_25:	
 14841  0F6C  1803               	skipnc
 14842  0F6D  2F72               	goto	i1l495
 14843                           
 14844                           ;usb_device.c: 1866: {
 14845                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 14846  0F6E  0833               	movf	(_outPipes^(0+384)+3),w	;volatile
 14847  0F6F  00F2               	movwf	??i1_USBCtrlTrfRxService
 14848  0F70  0872               	movf	??i1_USBCtrlTrfRxService,w
 14849  0F71  00F5               	movwf	i1USBCtrlTrfRxService@byteToRead
 14850  0F72                     i1l495:	
 14851                           
 14852                           ;usb_device.c: 1868: }
 14853                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 14854  0F72  0875               	movf	i1USBCtrlTrfRxService@byteToRead,w
 14855  0F73  00F2               	movwf	??i1_USBCtrlTrfRxService
 14856  0F74  01F3               	clrf	??i1_USBCtrlTrfRxService+1
 14857  0F75  0872               	movf	??i1_USBCtrlTrfRxService,w
 14858  0F76  02B3               	subwf	(_outPipes^(0+384)+3),f	;volatile
 14859  0F77  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 14860  0F78  3BB4               	subwfb	((_outPipes+1)^(0+384)+3),f	;volatile
 14861                           
 14862                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 14863  0F79  01F4               	clrf	i1USBCtrlTrfRxService@i
 14864  0F7A                     i1l5670:	
 14865  0F7A  0875               	movf	i1USBCtrlTrfRxService@byteToRead,w
 14866  0F7B  0274               	subwf	i1USBCtrlTrfRxService@i,w
 14867  0F7C  1803               	btfsc	3,0
 14868  0F7D  2F93               	goto	i1l5672
 14869                           
 14870                           ;usb_device.c: 1875: {
 14871                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 14872  0F7E  0874               	movf	i1USBCtrlTrfRxService@i,w
 14873  0F7F  3E58               	addlw	88
 14874  0F80  0086               	movwf	6
 14875  0F81  0187               	clrf	7
 14876  0F82  0801               	movf	1,w
 14877  0F83  00F2               	movwf	??i1_USBCtrlTrfRxService
 14878  0F84  0830               	movf	_outPipes^(0+384),w	;volatile
 14879  0F85  0086               	movwf	6
 14880  0F86  3002               	movlw	2	; select bank4/5
 14881  0F87  0087               	movwf	7
 14882  0F88  0872               	movf	??i1_USBCtrlTrfRxService,w
 14883  0F89  0081               	movwf	1
 14884  0F8A  3001               	movlw	1
 14885  0F8B  00F2               	movwf	??i1_USBCtrlTrfRxService
 14886  0F8C  0872               	movf	??i1_USBCtrlTrfRxService,w
 14887  0F8D  07B0               	addwf	_outPipes^(0+384),f	;volatile
 14888  0F8E  3001               	movlw	1
 14889  0F8F  00F2               	movwf	??i1_USBCtrlTrfRxService
 14890  0F90  0872               	movf	??i1_USBCtrlTrfRxService,w
 14891  0F91  07F4               	addwf	i1USBCtrlTrfRxService@i,f
 14892  0F92  2F7A               	goto	i1l5670
 14893  0F93                     i1l5672:	
 14894                           
 14895                           ;usb_device.c: 1877: }
 14896                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 14897  0F93  0833               	movf	(_outPipes^(0+384)+3),w	;volatile
 14898  0F94  0434               	iorwf	((_outPipes+1)^(0+384)+3),w	;volatile
 14899  0F95  1903               	btfsc	3,2
 14900  0F96  2FD1               	goto	i1l5684
 14901                           
 14902                           ;usb_device.c: 1882: {
 14903                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 14904  0F97  0021               	movlb	1	; select bank1
 14905  0F98  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14906  0F99  3E01               	addlw	1
 14907  0F9A  00F2               	movwf	??i1_USBCtrlTrfRxService
 14908  0F9B  3000               	movlw	0
 14909  0F9C  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14910  0F9D  00F3               	movwf	??i1_USBCtrlTrfRxService+1
 14911  0F9E  0872               	movf	??i1_USBCtrlTrfRxService,w
 14912  0F9F  0086               	movwf	6
 14913  0FA0  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 14914  0FA1  0087               	movwf	7
 14915  0FA2  3008               	movlw	8
 14916  0FA3  0081               	movwf	1
 14917                           
 14918                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
 14919  0FA4  3058               	movlw	88
 14920  0FA5  00F2               	movwf	??i1_USBCtrlTrfRxService
 14921  0FA6  3000               	movlw	0
 14922  0FA7  00F3               	movwf	??i1_USBCtrlTrfRxService+1
 14923  0FA8  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14924  0FA9  0086               	movwf	6
 14925  0FAA  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14926  0FAB  0087               	movwf	7
 14927  0FAC  3142               	addfsr 1,2
 14928  0FAD  0872               	movf	??i1_USBCtrlTrfRxService,w
 14929  0FAE  3FC0               	movwi [0]fsr1
 14930  0FAF  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 14931  0FB0  3FC1               	movwi [1]fsr1
 14932                           
 14933                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 14934  0FB1  0023               	movlb	3	; select bank3
 14935  0FB2  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 14936  0FB3  0086               	movwf	6
 14937  0FB4  0187               	clrf	7
 14938  0FB5  1B01               	btfsc	1,6
 14939  0FB6  2FC4               	goto	i1l5682
 14940                           
 14941                           ;usb_device.c: 1886: {
 14942                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 14943  0FB7  0021               	movlb	1	; select bank1
 14944  0FB8  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14945  0FB9  0086               	movwf	6
 14946  0FBA  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14947  0FBB  0087               	movwf	7
 14948  0FBC  3048               	movlw	72
 14949  0FBD  0081               	movwf	1
 14950                           
 14951                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 14952  0FBE  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14953  0FBF  0086               	movwf	6
 14954  0FC0  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14955  0FC1  0087               	movwf	7
 14956  0FC2  1781               	bsf	1,7
 14957                           
 14958                           ;usb_device.c: 1889: }
 14959  0FC3  0008               	return
 14960  0FC4                     i1l5682:	
 14961                           
 14962                           ;usb_device.c: 1890: else
 14963                           ;usb_device.c: 1891: {
 14964                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 14965  0FC4  0021               	movlb	1	; select bank1
 14966  0FC5  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14967  0FC6  0086               	movwf	6
 14968  0FC7  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14969  0FC8  0087               	movwf	7
 14970  0FC9  3008               	movlw	8
 14971  0FCA  0081               	movwf	1
 14972                           
 14973                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 14974  0FCB  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14975  0FCC  0086               	movwf	6
 14976  0FCD  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14977  0FCE  0087               	movwf	7
 14978  0FCF  1781               	bsf	1,7
 14979                           
 14980                           ;usb_device.c: 1894: }
 14981                           ;usb_device.c: 1895: }
 14982  0FD0  0008               	return
 14983  0FD1                     i1l5684:	
 14984                           
 14985                           ;usb_device.c: 1896: else
 14986                           ;usb_device.c: 1897: {
 14987                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 14988  0FD1  0021               	movlb	1	; select bank1
 14989  0FD2  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14990  0FD3  3E01               	addlw	1
 14991  0FD4  00F2               	movwf	??i1_USBCtrlTrfRxService
 14992  0FD5  3000               	movlw	0
 14993  0FD6  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14994  0FD7  00F3               	movwf	??i1_USBCtrlTrfRxService+1
 14995  0FD8  0872               	movf	??i1_USBCtrlTrfRxService,w
 14996  0FD9  0086               	movwf	6
 14997  0FDA  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 14998  0FDB  0087               	movwf	7
 14999  0FDC  3008               	movlw	8
 15000  0FDD  0081               	movwf	1
 15001                           
 15002                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 15003  0FDE  3050               	movlw	80
 15004  0FDF  00F2               	movwf	??i1_USBCtrlTrfRxService
 15005  0FE0  3000               	movlw	0
 15006  0FE1  00F3               	movwf	??i1_USBCtrlTrfRxService+1
 15007  0FE2  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 15008  0FE3  0086               	movwf	6
 15009  0FE4  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 15010  0FE5  0087               	movwf	7
 15011  0FE6  3142               	addfsr 1,2
 15012  0FE7  0872               	movf	??i1_USBCtrlTrfRxService,w
 15013  0FE8  3FC0               	movwi [0]fsr1
 15014  0FE9  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 15015  0FEA  3FC1               	movwi [1]fsr1
 15016                           
 15017                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 15018  0FEB  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 15019  0FEC  0086               	movwf	6
 15020  0FED  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 15021  0FEE  0087               	movwf	7
 15022  0FEF  3004               	movlw	4
 15023  0FF0  0081               	movwf	1
 15024                           
 15025                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 15026  0FF1  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 15027  0FF2  0086               	movwf	6
 15028  0FF3  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 15029  0FF4  0087               	movwf	7
 15030  0FF5  1781               	bsf	1,7
 15031                           
 15032                           ;usb_device.c: 1915: {
 15033                           ;usb_device.c: 1921: outPipes[0].pFunc();
 15034  0FF6  0023               	movlb	3	; select bank3
 15035  0FF7  0835               	movf	(low ((_outPipes| (0+256)+5)))^(0+128),w	;volatile
 15036  0FF8  0836               	movf	((low ((_outPipes| (0+256)+5))+1))^(0+128),w	;volatile
 15037                           
 15038                           ;usb_device.c: 1926: }
 15039                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 15040  0FF9  13B2               	bcf	(_outPipes^(0+384)+2),7	;volatile
 15041                           
 15042                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 15043  0FFA  085B               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
 15044  0FFB  1D03               	btfss	3,2
 15045  0FFC  0008               	return
 15046                           
 15047                           ;usb_device.c: 1942: {
 15048                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 15049  0FFD  3187  2794         	fcall	i1_USBCtrlEPAllowStatusStage
 15050  0FFF  0008               	return
 15051  1000                     __end_ofi1_USBCtrlTrfRxService:	
 15052                           
 15053                           	psect	text68
 15054  0794                     __ptext68:	
 15055 ;; *************** function i1_USBCtrlEPAllowStatusStage *****************
 15056 ;; Defined at:
 15057 ;;		line 1416 in file "mcc_generated_files/usb/usb_device.c"
 15058 ;; Parameters:    Size  Location     Type
 15059 ;;		None
 15060 ;; Auto vars:     Size  Location     Type
 15061 ;;		None
 15062 ;; Return value:  Size  Location     Type
 15063 ;;                  1    wreg      void 
 15064 ;; Registers used:
 15065 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15066 ;; Tracked objects:
 15067 ;;		On entry : 0/0
 15068 ;;		On exit  : 0/0
 15069 ;;		Unchanged: 0/0
 15070 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15073 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15074 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15075 ;;Total ram usage:        2 bytes
 15076 ;; Hardware stack levels used:    1
 15077 ;; This function calls:
 15078 ;;		Nothing
 15079 ;; This function is called by:
 15080 ;;		i1_USBDeviceTasks
 15081 ;;		i1_USBCtrlEPServiceComplete
 15082 ;;		i1_USBCtrlTrfRxService
 15083 ;; This function uses a non-reentrant model
 15084 ;;
 15085                           
 15086                           
 15087                           ;psect for function i1_USBCtrlEPAllowStatusStage
 15088  0794                     i1_USBCtrlEPAllowStatusStage:	
 15089                           
 15090                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 15091                           
 15092                           ;incstack = 0
 15093                           ; Regs used in i1_USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
 15094  0794  0023               	movlb	3	; select bank3
 15095  0795  085A               	movf	_USBStatusStageEnabledFlag1^(0+384),w	;volatile
 15096  0796  1D03               	btfss	3,2
 15097  0797  0008               	return
 15098                           
 15099                           ;usb_device.c: 1424: {
 15100                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 15101  0798  3001               	movlw	1
 15102  0799  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 15103  079A  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 15104  079B  00DA               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
 15105                           
 15106                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 15107  079C  0859               	movf	_USBStatusStageEnabledFlag2^(0+384),w	;volatile
 15108  079D  1D03               	btfss	3,2
 15109  079E  0008               	return
 15110                           
 15111                           ;usb_device.c: 1427: {
 15112                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 15113  079F  3001               	movlw	1
 15114  07A0  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 15115  07A1  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 15116  07A2  00D9               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
 15117                           
 15118                           ;usb_device.c: 1432: if(controlTransferState == 2)
 15119  07A3  3002               	movlw	2
 15120  07A4  0662               	xorwf	_controlTransferState^(0+384),w	;volatile
 15121  07A5  1D03               	btfss	3,2
 15122  07A6  2FB9               	goto	i1l5200
 15123                           
 15124                           ;usb_device.c: 1433: {
 15125                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 15126  07A7  0837               	movf	_pBDTEntryIn^(0+384),w
 15127  07A8  0086               	movwf	6
 15128  07A9  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 15129  07AA  0087               	movwf	7
 15130  07AB  3141               	addfsr 1,1
 15131  07AC  0181               	clrf	1
 15132                           
 15133                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 15134  07AD  0837               	movf	_pBDTEntryIn^(0+384),w
 15135  07AE  0086               	movwf	6
 15136  07AF  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 15137  07B0  0087               	movwf	7
 15138  07B1  3048               	movlw	72
 15139  07B2  0081               	movwf	1
 15140                           
 15141                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 15142  07B3  0837               	movf	_pBDTEntryIn^(0+384),w
 15143  07B4  0086               	movwf	6
 15144  07B5  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 15145  07B6  0087               	movwf	7
 15146  07B7  1781               	bsf	1,7
 15147                           
 15148                           ;usb_device.c: 1437: }
 15149  07B8  0008               	return
 15150  07B9                     i1l5200:	
 15151                           
 15152                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 15153  07B9  0362               	decf	_controlTransferState^(0+384),w	;volatile
 15154  07BA  1D03               	btfss	3,2
 15155  07BB  0008               	return
 15156                           
 15157                           ;usb_device.c: 1439: {
 15158                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 15159  07BC  01DD               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
 15160                           
 15161                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 15162  07BD  3008               	movlw	8
 15163  07BE  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 15164  07BF  0A64               	incf	_pBDTEntryEP0OutCurrent^(0+384),w
 15165  07C0  0086               	movwf	6
 15166  07C1  0187               	clrf	7
 15167  07C2  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 15168  07C3  0081               	movwf	1
 15169                           
 15170                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 15171  07C4  3050               	movlw	80
 15172  07C5  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 15173  07C6  3000               	movlw	0
 15174  07C7  00F1               	movwf	??i1_USBCtrlEPAllowStatusStage+1
 15175  07C8  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 15176  07C9  3E02               	addlw	2
 15177  07CA  0086               	movwf	6
 15178  07CB  0187               	clrf	7
 15179  07CC  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 15180  07CD  3FC0               	movwi [0]fsr1
 15181  07CE  0871               	movf	??i1_USBCtrlEPAllowStatusStage+1,w
 15182  07CF  3FC1               	movwi [1]fsr1
 15183                           
 15184                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 15185  07D0  3004               	movlw	4
 15186  07D1  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 15187  07D2  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 15188  07D3  0086               	movwf	6
 15189  07D4  0187               	clrf	7
 15190  07D5  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 15191  07D6  0081               	movwf	1
 15192                           
 15193                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 15194  07D7  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 15195  07D8  0086               	movwf	6
 15196  07D9  0187               	clrf	7
 15197  07DA  1781               	bsf	1,7
 15198                           
 15199                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 15200  07DB  3001               	movlw	1
 15201  07DC  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 15202  07DD  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 15203  07DE  00DD               	movwf	_BothEP0OutUOWNsSet^(0+384)	;volatile
 15204                           
 15205                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 15206  07DF  0021               	movlb	1	; select bank1
 15207  07E0  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 15208  07E1  3E01               	addlw	1
 15209  07E2  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 15210  07E3  3000               	movlw	0
 15211  07E4  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 15212  07E5  00F1               	movwf	??i1_USBCtrlEPAllowStatusStage+1
 15213  07E6  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 15214  07E7  0086               	movwf	6
 15215  07E8  0871               	movf	??i1_USBCtrlEPAllowStatusStage+1,w
 15216  07E9  0087               	movwf	7
 15217  07EA  3008               	movlw	8
 15218  07EB  0081               	movwf	1
 15219                           
 15220                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 15221  07EC  3050               	movlw	80
 15222  07ED  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 15223  07EE  3000               	movlw	0
 15224  07EF  00F1               	movwf	??i1_USBCtrlEPAllowStatusStage+1
 15225  07F0  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 15226  07F1  0086               	movwf	6
 15227  07F2  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 15228  07F3  0087               	movwf	7
 15229  07F4  3142               	addfsr 1,2
 15230  07F5  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 15231  07F6  3FC0               	movwi [0]fsr1
 15232  07F7  0871               	movf	??i1_USBCtrlEPAllowStatusStage+1,w
 15233  07F8  3FC1               	movwi [1]fsr1
 15234                           
 15235                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 15236  07F9  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 15237  07FA  0086               	movwf	6
 15238  07FB  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 15239  07FC  0087               	movwf	7
 15240  07FD  3080               	movlw	128
 15241  07FE  0081               	movwf	1
 15242  07FF  0008               	return
 15243  0800                     __end_ofi1_USBCtrlEPAllowStatusStage:	
 15244                           
 15245                           	psect	text69
 15246  08D3                     __ptext69:	
 15247 ;; *************** function i1_USBCtrlTrfInHandler *****************
 15248 ;; Defined at:
 15249 ;;		line 2592 in file "mcc_generated_files/usb/usb_device.c"
 15250 ;; Parameters:    Size  Location     Type
 15251 ;;		None
 15252 ;; Auto vars:     Size  Location     Type
 15253 ;;  USBCtrlTrfIn    1    5[COMMON] unsigned char 
 15254 ;; Return value:  Size  Location     Type
 15255 ;;                  1    wreg      void 
 15256 ;; Registers used:
 15257 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15258 ;; Tracked objects:
 15259 ;;		On entry : 0/0
 15260 ;;		On exit  : 0/0
 15261 ;;		Unchanged: 0/0
 15262 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15264 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15265 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15266 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15267 ;;Total ram usage:        3 bytes
 15268 ;; Hardware stack levels used:    1
 15269 ;; Hardware stack levels required when called:    1
 15270 ;; This function calls:
 15271 ;;		i1_USBCtrlTrfTxService
 15272 ;; This function is called by:
 15273 ;;		i1_USBCtrlEPService
 15274 ;; This function uses a non-reentrant model
 15275 ;;
 15276                           
 15277                           
 15278                           ;psect for function i1_USBCtrlTrfInHandler
 15279  08D3                     i1_USBCtrlTrfInHandler:	
 15280                           
 15281                           ;usb_device.c: 2594: uint8_t lastDTS;
 15282                           ;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 15283                           
 15284                           ;incstack = 0
 15285                           ; Regs used in i1_USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15286  08D3  0023               	movlb	3	; select bank3
 15287  08D4  0837               	movf	_pBDTEntryIn^(0+384),w
 15288  08D5  0086               	movwf	6
 15289  08D6  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 15290  08D7  0087               	movwf	7
 15291  08D8  3000               	movlw	0
 15292  08D9  1B01               	btfsc	1,6
 15293  08DA  3001               	movlw	1
 15294  08DB  00F5               	movwf	i1USBCtrlTrfInHandler@lastDTS
 15295                           
 15296                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 15297  08DC  3004               	movlw	4
 15298  08DD  0637               	xorwf	_pBDTEntryIn^(0+384),w
 15299  08DE  00B7               	movwf	_pBDTEntryIn^(0+384)
 15300  08DF  3000               	movlw	0
 15301  08E0  0638               	xorwf	(_pBDTEntryIn+1)^(0+384),w
 15302  08E1  00B8               	movwf	(_pBDTEntryIn+1)^(0+384)
 15303                           
 15304                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
 15305  08E2  3008               	movlw	8
 15306  08E3  0665               	xorwf	_USBDeviceState^(0+384),w	;volatile
 15307  08E4  1D03               	btfss	3,2
 15308  08E5  28F5               	goto	i1l6034
 15309                           
 15310                           ;usb_device.c: 2605: {
 15311                           ;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
 15312  08E6  0020               	movlb	0	; select bank0
 15313  08E7  0852               	movf	82,w	;volatile
 15314  08E8  397F               	andlw	127
 15315  08E9  003D               	movlb	29	; select bank29
 15316  08EA  0096               	movwf	22	;volatile
 15317                           
 15318                           ;usb_device.c: 2607: if(UADDR != 0u)
 15319  08EB  0816               	movf	22,w	;volatile
 15320  08EC  1903               	btfsc	3,2
 15321  08ED  28F0               	goto	i1l6032
 15322                           
 15323                           ;usb_device.c: 2608: {
 15324                           ;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
 15325  08EE  3010               	movlw	16
 15326  08EF  28F1               	goto	L19
 15327  08F0                     i1l6032:	
 15328                           ;usb_device.c: 2610: }
 15329                           
 15330                           
 15331                           ;usb_device.c: 2611: else
 15332                           ;usb_device.c: 2612: {
 15333                           ;usb_device.c: 2613: USBDeviceState=DEFAULT_STATE;
 15334  08F0  3004               	movlw	4
 15335  08F1                     L19:	
 15336  08F1  00F3               	movwf	??i1_USBCtrlTrfInHandler
 15337  08F2  0873               	movf	??i1_USBCtrlTrfInHandler,w
 15338  08F3  0023               	movlb	3	; select bank3
 15339  08F4  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
 15340  08F5                     i1l6034:	
 15341                           
 15342                           ;usb_device.c: 2614: }
 15343                           ;usb_device.c: 2615: }
 15344                           ;usb_device.c: 2618: if(controlTransferState == 1)
 15345  08F5  0362               	decf	_controlTransferState^(0+384),w	;volatile
 15346  08F6  1D03               	btfss	3,2
 15347  08F7  2934               	goto	i1l580
 15348                           
 15349                           ;usb_device.c: 2619: {
 15350                           ;usb_device.c: 2620: pBDTEntryIn[0]->ADR = (((uint16_t)(CtrlTrfData)) & 0x7FFF);
 15351  08F8  3058               	movlw	88
 15352  08F9  00F3               	movwf	??i1_USBCtrlTrfInHandler
 15353  08FA  3000               	movlw	0
 15354  08FB  00F4               	movwf	??i1_USBCtrlTrfInHandler+1
 15355  08FC  0837               	movf	_pBDTEntryIn^(0+384),w
 15356  08FD  0086               	movwf	6
 15357  08FE  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 15358  08FF  0087               	movwf	7
 15359  0900  3142               	addfsr 1,2
 15360  0901  0873               	movf	??i1_USBCtrlTrfInHandler,w
 15361  0902  3FC0               	movwi [0]fsr1
 15362  0903  0874               	movf	??i1_USBCtrlTrfInHandler+1,w
 15363  0904  3FC1               	movwi [1]fsr1
 15364                           
 15365                           ;usb_device.c: 2621: USBCtrlTrfTxService();
 15366  0905  3189  21AC  3188   	fcall	i1_USBCtrlTrfTxService
 15367                           
 15368                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
 15369  0908  3002               	movlw	2
 15370  0909  0023               	movlb	3	; select bank3
 15371  090A  0663               	xorwf	_shortPacketStatus^(0+384),w	;volatile
 15372  090B  1D03               	btfss	3,2
 15373  090C  2919               	goto	i1l6044
 15374                           
 15375                           ;usb_device.c: 2628: {
 15376                           ;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
 15377  090D  0837               	movf	_pBDTEntryIn^(0+384),w
 15378  090E  0086               	movwf	6
 15379  090F  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 15380  0910  0087               	movwf	7
 15381  0911  3004               	movlw	4
 15382  0912  0081               	movwf	1
 15383                           
 15384                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
 15385  0913  0837               	movf	_pBDTEntryIn^(0+384),w
 15386  0914  0086               	movwf	6
 15387  0915  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 15388  0916  0087               	movwf	7
 15389  0917  1781               	bsf	1,7
 15390                           
 15391                           ;usb_device.c: 2633: }
 15392  0918  0008               	return
 15393  0919                     i1l6044:	
 15394                           
 15395                           ;usb_device.c: 2634: else
 15396                           ;usb_device.c: 2635: {
 15397                           ;usb_device.c: 2636: if(lastDTS == 0)
 15398  0919  0875               	movf	i1USBCtrlTrfInHandler@lastDTS,w
 15399  091A  1D03               	btfss	3,2
 15400  091B  2928               	goto	i1l6048
 15401                           
 15402                           ;usb_device.c: 2637: {
 15403                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 15404  091C  0837               	movf	_pBDTEntryIn^(0+384),w
 15405  091D  0086               	movwf	6
 15406  091E  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 15407  091F  0087               	movwf	7
 15408  0920  3048               	movlw	72
 15409  0921  0081               	movwf	1
 15410                           
 15411                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
 15412  0922  0837               	movf	_pBDTEntryIn^(0+384),w
 15413  0923  0086               	movwf	6
 15414  0924  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 15415  0925  0087               	movwf	7
 15416  0926  1781               	bsf	1,7
 15417                           
 15418                           ;usb_device.c: 2640: }
 15419  0927  0008               	return
 15420  0928                     i1l6048:	
 15421                           
 15422                           ;usb_device.c: 2641: else
 15423                           ;usb_device.c: 2642: {
 15424                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 15425  0928  0837               	movf	_pBDTEntryIn^(0+384),w
 15426  0929  0086               	movwf	6
 15427  092A  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 15428  092B  0087               	movwf	7
 15429  092C  3008               	movlw	8
 15430  092D  0081               	movwf	1
 15431                           
 15432                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
 15433  092E  0837               	movf	_pBDTEntryIn^(0+384),w
 15434  092F  0086               	movwf	6
 15435  0930  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 15436  0931  0087               	movwf	7
 15437  0932  1781               	bsf	1,7
 15438                           
 15439                           ;usb_device.c: 2645: }
 15440                           ;usb_device.c: 2646: }
 15441                           ;usb_device.c: 2647: }
 15442  0933  0008               	return
 15443  0934                     i1l580:	
 15444                           
 15445                           ;usb_device.c: 2648: else
 15446                           ;usb_device.c: 2649: {
 15447                           ;usb_device.c: 2653: if(outPipes[0].info.bits.busy == 1)
 15448  0934  1FB2               	btfss	(_outPipes^(0+384)+2),7	;volatile
 15449  0935  2939               	goto	i1l6052
 15450                           
 15451                           ;usb_device.c: 2656: {
 15452                           ;usb_device.c: 2657: outPipes[0].pFunc();
 15453  0936  0835               	movf	(low ((_outPipes| (0+256)+5)))^(0+128),w	;volatile
 15454  0937  0836               	movf	((low ((_outPipes| (0+256)+5))+1))^(0+128),w	;volatile
 15455                           
 15456                           ;usb_device.c: 2658: }
 15457                           ;usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
 15458  0938  13B2               	bcf	(_outPipes^(0+384)+2),7	;volatile
 15459  0939                     i1l6052:	
 15460                           
 15461                           ;usb_device.c: 2660: }
 15462                           ;usb_device.c: 2662: controlTransferState = 0;
 15463  0939  01E2               	clrf	_controlTransferState^(0+384)	;volatile
 15464  093A  0008               	return
 15465  093B                     __end_ofi1_USBCtrlTrfInHandler:	
 15466                           
 15467                           	psect	text70
 15468  09AC                     __ptext70:	
 15469 ;; *************** function i1_USBCtrlTrfTxService *****************
 15470 ;; Defined at:
 15471 ;;		line 1771 in file "mcc_generated_files/usb/usb_device.c"
 15472 ;; Parameters:    Size  Location     Type
 15473 ;;		None
 15474 ;; Auto vars:     Size  Location     Type
 15475 ;;  USBCtrlTrfTx    1    2[COMMON] unsigned char 
 15476 ;; Return value:  Size  Location     Type
 15477 ;;                  1    wreg      void 
 15478 ;; Registers used:
 15479 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 15480 ;; Tracked objects:
 15481 ;;		On entry : 0/0
 15482 ;;		On exit  : 0/0
 15483 ;;		Unchanged: 0/0
 15484 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15486 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15487 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15488 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15489 ;;Total ram usage:        3 bytes
 15490 ;; Hardware stack levels used:    1
 15491 ;; This function calls:
 15492 ;;		Nothing
 15493 ;; This function is called by:
 15494 ;;		i1_USBCtrlEPAllowDataStage
 15495 ;;		i1_USBCtrlTrfInHandler
 15496 ;; This function uses a non-reentrant model
 15497 ;;
 15498                           
 15499                           
 15500                           ;psect for function i1_USBCtrlTrfTxService
 15501  09AC                     i1_USBCtrlTrfTxService:	
 15502                           
 15503                           ;usb_device.c: 1773: uint8_t byteToSend;
 15504                           ;usb_device.c: 1777: byteToSend = 8;
 15505                           
 15506                           ;incstack = 0
 15507                           ; Regs used in i1_USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
 15508  09AC  3008               	movlw	8
 15509  09AD  00F0               	movwf	??i1_USBCtrlTrfTxService
 15510  09AE  0870               	movf	??i1_USBCtrlTrfTxService,w
 15511  09AF  00F2               	movwf	i1USBCtrlTrfTxService@byteToSend
 15512                           
 15513                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 15514  09B0  3000               	movlw	0
 15515  09B1  0021               	movlb	1	; select bank1
 15516  09B2  0247               	subwf	((_inPipes+1)^(0+128)+3),w	;volatile
 15517  09B3  3008               	movlw	8
 15518  09B4  1903               	skipnz
 15519  09B5  0246               	subwf	(_inPipes^(0+128)+3),w	;volatile
 15520  09B6  1803               	skipnc
 15521  09B7  29C9               	goto	i1l480
 15522                           
 15523                           ;usb_device.c: 1779: {
 15524                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 15525  09B8  0846               	movf	(_inPipes^(0+128)+3),w	;volatile
 15526  09B9  00F0               	movwf	??i1_USBCtrlTrfTxService
 15527  09BA  0870               	movf	??i1_USBCtrlTrfTxService,w
 15528  09BB  00F2               	movwf	i1USBCtrlTrfTxService@byteToSend
 15529                           
 15530                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 15531  09BC  0023               	movlb	3	; select bank3
 15532  09BD  0863               	movf	_shortPacketStatus^(0+384),w	;volatile
 15533  09BE  1D03               	btfss	3,2
 15534  09BF  29C2               	goto	i1l4882
 15535                           
 15536                           ;usb_device.c: 1788: {
 15537                           ;usb_device.c: 1789: shortPacketStatus = 1;
 15538  09C0  3001               	movlw	1
 15539  09C1  29C6               	goto	L20
 15540  09C2                     i1l4882:	
 15541                           ;usb_device.c: 1790: }
 15542                           
 15543                           
 15544                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 15545  09C2  0363               	decf	_shortPacketStatus^(0+384),w	;volatile
 15546  09C3  1D03               	btfss	3,2
 15547  09C4  29C9               	goto	i1l480
 15548                           
 15549                           ;usb_device.c: 1792: {
 15550                           ;usb_device.c: 1793: shortPacketStatus = 2;
 15551  09C5  3002               	movlw	2
 15552  09C6                     L20:	
 15553  09C6  00F0               	movwf	??i1_USBCtrlTrfTxService
 15554  09C7  0870               	movf	??i1_USBCtrlTrfTxService,w
 15555  09C8  00E3               	movwf	_shortPacketStatus^(0+384)	;volatile
 15556  09C9                     i1l480:	
 15557                           
 15558                           ;usb_device.c: 1794: }
 15559                           ;usb_device.c: 1795: }
 15560                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 15561  09C9  0872               	movf	i1USBCtrlTrfTxService@byteToSend,w
 15562  09CA  00F0               	movwf	??i1_USBCtrlTrfTxService
 15563  09CB  01F1               	clrf	??i1_USBCtrlTrfTxService+1
 15564  09CC  0870               	movf	??i1_USBCtrlTrfTxService,w
 15565  09CD  0021               	movlb	1	; select bank1
 15566  09CE  02C6               	subwf	(_inPipes^(0+128)+3),f	;volatile
 15567  09CF  0871               	movf	??i1_USBCtrlTrfTxService+1,w
 15568  09D0  3BC7               	subwfb	((_inPipes+1)^(0+128)+3),f	;volatile
 15569                           
 15570                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 15571  09D1  0023               	movlb	3	; select bank3
 15572  09D2  0837               	movf	_pBDTEntryIn^(0+384),w
 15573  09D3  3E01               	addlw	1
 15574  09D4  00F0               	movwf	??i1_USBCtrlTrfTxService
 15575  09D5  3000               	movlw	0
 15576  09D6  3D38               	addwfc	(_pBDTEntryIn+1)^(0+384),w
 15577  09D7  00F1               	movwf	??i1_USBCtrlTrfTxService+1
 15578  09D8  0870               	movf	??i1_USBCtrlTrfTxService,w
 15579  09D9  0086               	movwf	6
 15580  09DA  0871               	movf	??i1_USBCtrlTrfTxService+1,w
 15581  09DB  0087               	movwf	7
 15582  09DC  0872               	movf	i1USBCtrlTrfTxService@byteToSend,w
 15583  09DD  0081               	movwf	1
 15584                           
 15585                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 15586  09DE  3058               	movlw	88
 15587  09DF  00F0               	movwf	??i1_USBCtrlTrfTxService
 15588  09E0  0870               	movf	??i1_USBCtrlTrfTxService,w
 15589  09E1  00E1               	movwf	_pDst^(0+384)
 15590                           
 15591                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 15592  09E2  0021               	movlb	1	; select bank1
 15593  09E3  1C45               	btfss	(_inPipes^(0+128)+2),0	;volatile
 15594  09E4  29FF               	goto	i1l4902
 15595  09E5  2A1C               	goto	i1l4912
 15596  09E6                     i1l4894:	
 15597                           ;usb_device.c: 1810: {
 15598                           ;usb_device.c: 1811: while(byteToSend)
 15599                           
 15600                           
 15601                           ;usb_device.c: 1812: {
 15602                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 15603  09E6  0021               	movlb	1	; select bank1
 15604  09E7  0843               	movf	_inPipes^(0+128),w	;volatile
 15605  09E8  0084               	movwf	4
 15606  09E9  0844               	movf	(_inPipes+1)^(0+128),w	;volatile
 15607  09EA  0085               	movwf	5
 15608  09EB  0800               	movf	0,w	;code access
 15609  09EC  00F0               	movwf	??i1_USBCtrlTrfTxService
 15610  09ED  0023               	movlb	3	; select bank3
 15611  09EE  0861               	movf	_pDst^(0+384),w
 15612  09EF  0086               	movwf	6
 15613  09F0  0187               	clrf	7
 15614  09F1  0870               	movf	??i1_USBCtrlTrfTxService,w
 15615  09F2  0081               	movwf	1
 15616  09F3  3001               	movlw	1
 15617  09F4  0021               	movlb	1	; select bank1
 15618  09F5  07C3               	addwf	_inPipes^(0+128),f	;volatile
 15619  09F6  3000               	movlw	0
 15620  09F7  3DC4               	addwfc	(_inPipes+1)^(0+128),f	;volatile
 15621  09F8  3001               	movlw	1
 15622  09F9  00F0               	movwf	??i1_USBCtrlTrfTxService
 15623  09FA  0870               	movf	??i1_USBCtrlTrfTxService,w
 15624  09FB  0023               	movlb	3	; select bank3
 15625  09FC  07E1               	addwf	_pDst^(0+384),f
 15626                           
 15627                           ;usb_device.c: 1814: byteToSend--;
 15628  09FD  3001               	movlw	1
 15629  09FE  02F2               	subwf	i1USBCtrlTrfTxService@byteToSend,f
 15630  09FF                     i1l4902:	
 15631  09FF  0872               	movf	i1USBCtrlTrfTxService@byteToSend,w
 15632  0A00  1903               	btfsc	3,2
 15633  0A01  0008               	return
 15634  0A02  29E6               	goto	i1l4894
 15635  0A03                     i1l4904:	
 15636                           ;usb_device.c: 1817: else
 15637                           ;usb_device.c: 1818: {
 15638                           ;usb_device.c: 1819: while(byteToSend)
 15639                           
 15640                           ;usb_device.c: 1815: }
 15641                           ;usb_device.c: 1816: }
 15642                           
 15643                           
 15644                           ;usb_device.c: 1820: {
 15645                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 15646  0A03  0021               	movlb	1	; select bank1
 15647  0A04  0843               	movf	_inPipes^(0+128),w	;volatile
 15648  0A05  0084               	movwf	4
 15649  0A06  0844               	movf	(_inPipes+1)^(0+128),w	;volatile
 15650  0A07  0085               	movwf	5
 15651  0A08  0800               	movf	0,w	;code access
 15652  0A09  00F0               	movwf	??i1_USBCtrlTrfTxService
 15653  0A0A  0023               	movlb	3	; select bank3
 15654  0A0B  0861               	movf	_pDst^(0+384),w
 15655  0A0C  0086               	movwf	6
 15656  0A0D  0187               	clrf	7
 15657  0A0E  0870               	movf	??i1_USBCtrlTrfTxService,w
 15658  0A0F  0081               	movwf	1
 15659  0A10  3001               	movlw	1
 15660  0A11  0021               	movlb	1	; select bank1
 15661  0A12  07C3               	addwf	_inPipes^(0+128),f	;volatile
 15662  0A13  3000               	movlw	0
 15663  0A14  3DC4               	addwfc	(_inPipes+1)^(0+128),f	;volatile
 15664  0A15  3001               	movlw	1
 15665  0A16  00F0               	movwf	??i1_USBCtrlTrfTxService
 15666  0A17  0870               	movf	??i1_USBCtrlTrfTxService,w
 15667  0A18  0023               	movlb	3	; select bank3
 15668  0A19  07E1               	addwf	_pDst^(0+384),f
 15669                           
 15670                           ;usb_device.c: 1822: byteToSend--;
 15671  0A1A  3001               	movlw	1
 15672  0A1B  02F2               	subwf	i1USBCtrlTrfTxService@byteToSend,f
 15673  0A1C                     i1l4912:	
 15674  0A1C  0872               	movf	i1USBCtrlTrfTxService@byteToSend,w
 15675  0A1D  1903               	btfsc	3,2
 15676  0A1E  0008               	return
 15677  0A1F  2A03               	goto	i1l4904
 15678  0A20                     __end_ofi1_USBCtrlTrfTxService:	
 15679                           
 15680                           	psect	text71
 15681  1D16                     __ptext71:	
 15682 ;; *************** function _i2c_busCollisionISR *****************
 15683 ;; Defined at:
 15684 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
 15685 ;; Parameters:    Size  Location     Type
 15686 ;;		None
 15687 ;; Auto vars:     Size  Location     Type
 15688 ;;		None
 15689 ;; Return value:  Size  Location     Type
 15690 ;;                  1    wreg      void 
 15691 ;; Registers used:
 15692 ;;		status,2, status,0, pclath, cstack
 15693 ;; Tracked objects:
 15694 ;;		On entry : 0/0
 15695 ;;		On exit  : 0/0
 15696 ;;		Unchanged: 0/0
 15697 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15702 ;;Total ram usage:        0 bytes
 15703 ;; Hardware stack levels used:    1
 15704 ;; Hardware stack levels required when called:    1
 15705 ;; This function calls:
 15706 ;;		_i2c_driver_clearBusCollision
 15707 ;; This function is called by:
 15708 ;;		_i2c_open
 15709 ;;		_INTERRUPT_InterruptManager
 15710 ;; This function uses a non-reentrant model
 15711 ;;
 15712                           
 15713                           
 15714                           ;psect for function _i2c_busCollisionISR
 15715  1D16                     _i2c_busCollisionISR:	
 15716                           
 15717                           ;i2c_master.c: 437: i2c_driver_clearBusCollision();
 15718                           
 15719                           ;incstack = 0
 15720                           ; Regs used in _i2c_busCollisionISR: [status,2+status,0+pclath+cstack]
 15721  1D16  319D  2513         	fcall	_i2c_driver_clearBusCollision
 15722  1D18  0008               	return
 15723  1D19                     __end_of_i2c_busCollisionISR:	
 15724                           
 15725                           	psect	text72
 15726  1D13                     __ptext72:	
 15727 ;; *************** function _i2c_driver_clearBusCollision *****************
 15728 ;; Defined at:
 15729 ;;		line 253 in file "mcc_generated_files/i2c_driver.c"
 15730 ;; Parameters:    Size  Location     Type
 15731 ;;		None
 15732 ;; Auto vars:     Size  Location     Type
 15733 ;;		None
 15734 ;; Return value:  Size  Location     Type
 15735 ;;                  1    wreg      void 
 15736 ;; Registers used:
 15737 ;;		None
 15738 ;; Tracked objects:
 15739 ;;		On entry : 0/0
 15740 ;;		On exit  : 0/0
 15741 ;;		Unchanged: 0/0
 15742 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15747 ;;Total ram usage:        0 bytes
 15748 ;; Hardware stack levels used:    1
 15749 ;; This function calls:
 15750 ;;		Nothing
 15751 ;; This function is called by:
 15752 ;;		_i2c_busCollisionISR
 15753 ;; This function uses a non-reentrant model
 15754 ;;
 15755                           
 15756                           
 15757                           ;psect for function _i2c_driver_clearBusCollision
 15758  1D13                     _i2c_driver_clearBusCollision:	
 15759                           
 15760                           ;i2c_driver.c: 255: PIR2bits.BCL1IF = 0;
 15761                           
 15762                           ;incstack = 0
 15763                           ; Regs used in _i2c_driver_clearBusCollision: []
 15764  1D13  0020               	movlb	0	; select bank0
 15765  1D14  1192               	bcf	18,3	;volatile
 15766  1D15  0008               	return
 15767  1D16                     __end_of_i2c_driver_clearBusCollision:	
 15768                           
 15769                           	psect	text73
 15770  1F3D                     __ptext73:	
 15771 ;; *************** function _i2c_ISR *****************
 15772 ;; Defined at:
 15773 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 15774 ;; Parameters:    Size  Location     Type
 15775 ;;		None
 15776 ;; Auto vars:     Size  Location     Type
 15777 ;;		None
 15778 ;; Return value:  Size  Location     Type
 15779 ;;                  1    wreg      void 
 15780 ;; Registers used:
 15781 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15782 ;; Tracked objects:
 15783 ;;		On entry : 0/0
 15784 ;;		On exit  : 0/0
 15785 ;;		Unchanged: 0/0
 15786 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15789 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15790 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15791 ;;Total ram usage:        1 bytes
 15792 ;; Hardware stack levels used:    1
 15793 ;; Hardware stack levels required when called:    4
 15794 ;; This function calls:
 15795 ;;		_do_I2C_DO_ACK
 15796 ;;		_do_I2C_DO_ADDRESS_NACK
 15797 ;;		_do_I2C_DO_NACK_RESTART
 15798 ;;		_do_I2C_DO_NACK_STOP
 15799 ;;		_do_I2C_IDLE
 15800 ;;		_do_I2C_RCEN
 15801 ;;		_do_I2C_RESET
 15802 ;;		_do_I2C_RX
 15803 ;;		_do_I2C_SEND_ADR_READ
 15804 ;;		_do_I2C_SEND_ADR_WRITE
 15805 ;;		_do_I2C_SEND_RESTART
 15806 ;;		_do_I2C_SEND_RESTART_READ
 15807 ;;		_do_I2C_SEND_RESTART_WRITE
 15808 ;;		_do_I2C_SEND_STOP
 15809 ;;		_do_I2C_TX
 15810 ;;		_do_I2C_TX_EMPTY
 15811 ;;		_i2c_driver_isNACK
 15812 ;;		_mssp_clearIRQ
 15813 ;; This function is called by:
 15814 ;;		_i2c_open
 15815 ;;		_i2c_poller
 15816 ;;		_INTERRUPT_InterruptManager
 15817 ;; This function uses a non-reentrant model
 15818 ;;
 15819                           
 15820                           
 15821                           ;psect for function _i2c_ISR
 15822  1F3D                     _i2c_ISR:	
 15823                           
 15824                           ;i2c_master.c: 421: mssp_clearIRQ();
 15825                           
 15826                           ;incstack = 0
 15827                           ; Regs used in _i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15828  1F3D  319D  2510  319F   	fcall	_mssp_clearIRQ
 15829                           
 15830                           ;i2c_master.c: 427: if(i2c_status.addressNACKCheck && i2c_driver_isNACK())
 15831  1F40  0024               	movlb	4	; select bank4
 15832  1F41  1DA0               	btfss	_i2c_status^(0+512),3
 15833  1F42  2F4D               	goto	i1l6906
 15834  1F43  319D  2573  319F   	fcall	_i2c_driver_isNACK
 15835  1F46  1C03               	btfss	3,0
 15836  1F47  2F4D               	goto	i1l6906
 15837                           
 15838                           ;i2c_master.c: 428: {
 15839                           ;i2c_master.c: 429: i2c_status.state = I2C_ADDRESS_NACK;
 15840  1F48  300F               	movlw	15
 15841  1F49  00F4               	movwf	??_i2c_ISR
 15842  1F4A  0874               	movf	??_i2c_ISR,w
 15843  1F4B  0024               	movlb	4	; select bank4
 15844  1F4C  00A9               	movwf	(_i2c_status^(0+512)+9)
 15845  1F4D                     i1l6906:	
 15846                           
 15847                           ;i2c_master.c: 430: }
 15848                           ;i2c_master.c: 432: i2c_status.state = fsmStateTable[i2c_status.state]();
 15849  1F4D  0024               	movlb	4	; select bank4
 15850  1F4E  3529               	lslf	(_i2c_status^(0+512)+9),w
 15851  1F4F  3EA0               	addlw	(low (_fsmStateTable| (0+512)))& (0+255)
 15852  1F50  0086               	movwf	6
 15853  1F51  3002               	movlw	2	; select bank5/6
 15854  1F52  0087               	movwf	7
 15855  1F53  3F41               	moviw [1]fsr1
 15856  1F54  008A               	movwf	10
 15857  1F55  3F40               	moviw [0]fsr1
 15858  1F56  000A               	callw
 15859  1F57  319F               	pagesel	$
 15860  1F58  00F4               	movwf	??_i2c_ISR
 15861  1F59  0874               	movf	??_i2c_ISR,w
 15862  1F5A  0024               	movlb	4	; select bank4
 15863  1F5B  00A9               	movwf	(_i2c_status^(0+512)+9)
 15864  1F5C  0008               	return
 15865  1F5D                     __end_of_i2c_ISR:	
 15866                           
 15867                           	psect	text74
 15868  1D10                     __ptext74:	
 15869 ;; *************** function _mssp_clearIRQ *****************
 15870 ;; Defined at:
 15871 ;;		line 53 in file "mcc_generated_files/i2c_driver.c"
 15872 ;; Parameters:    Size  Location     Type
 15873 ;;		None
 15874 ;; Auto vars:     Size  Location     Type
 15875 ;;		None
 15876 ;; Return value:  Size  Location     Type
 15877 ;;                  1    wreg      void 
 15878 ;; Registers used:
 15879 ;;		None
 15880 ;; Tracked objects:
 15881 ;;		On entry : 0/0
 15882 ;;		On exit  : 0/0
 15883 ;;		Unchanged: 0/0
 15884 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15889 ;;Total ram usage:        0 bytes
 15890 ;; Hardware stack levels used:    1
 15891 ;; This function calls:
 15892 ;;		Nothing
 15893 ;; This function is called by:
 15894 ;;		_i2c_ISR
 15895 ;;		_i2c_open
 15896 ;;		_i2c_close
 15897 ;; This function uses a non-reentrant model
 15898 ;;
 15899                           
 15900                           
 15901                           ;psect for function _mssp_clearIRQ
 15902  1D10                     _mssp_clearIRQ:	
 15903                           
 15904                           ;i2c_driver.c: 55: PIR1bits.SSP1IF = 0;
 15905                           
 15906                           ;incstack = 0
 15907                           ; Regs used in _mssp_clearIRQ: []
 15908  1D10  0020               	movlb	0	; select bank0
 15909  1D11  1191               	bcf	17,3	;volatile
 15910  1D12  0008               	return
 15911  1D13                     __end_of_mssp_clearIRQ:	
 15912                           
 15913                           	psect	text75
 15914  1286                     __ptext75:	
 15915 ;; *************** function _do_I2C_RX *****************
 15916 ;; Defined at:
 15917 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 15918 ;; Parameters:    Size  Location     Type
 15919 ;;		None
 15920 ;; Auto vars:     Size  Location     Type
 15921 ;;		None
 15922 ;; Return value:  Size  Location     Type
 15923 ;;                  1    wreg      enum E2347
 15924 ;; Registers used:
 15925 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15926 ;; Tracked objects:
 15927 ;;		On entry : 0/0
 15928 ;;		On exit  : 0/0
 15929 ;;		Unchanged: 0/0
 15930 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15933 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15934 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15935 ;;Total ram usage:        1 bytes
 15936 ;; Hardware stack levels used:    1
 15937 ;; Hardware stack levels required when called:    3
 15938 ;; This function calls:
 15939 ;;		Absolute function
 15940 ;;		_do_I2C_DO_NACK_RESTART
 15941 ;;		_do_I2C_DO_NACK_STOP
 15942 ;;		_i2c_driver_getRXData
 15943 ;;		_i2c_driver_sendACK
 15944 ;;		_i2c_restartWrite
 15945 ;;		_rd1RegCompleteHandler
 15946 ;;		_rd2RegCompleteHandler
 15947 ;;		_rdBlkRegCompleteHandler
 15948 ;;		_returnReset
 15949 ;;		_returnStop
 15950 ;;		_wr1RegCompleteHandler
 15951 ;;		_wr2RegCompleteHandler
 15952 ;; This function is called by:
 15953 ;;		_i2c_ISR
 15954 ;; This function uses a non-reentrant model
 15955 ;;
 15956                           
 15957                           
 15958                           ;psect for function _do_I2C_RX
 15959  1286                     _do_I2C_RX:	
 15960                           
 15961                           ;i2c_master.c: 359: *i2c_status.data_ptr++ = i2c_driver_getRXData();
 15962                           
 15963                           ;incstack = 0
 15964                           ; Regs used in _do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15965  1286  319D  250A  3192   	fcall	_i2c_driver_getRXData
 15966  1289  00F0               	movwf	??_do_I2C_RX
 15967  128A  0024               	movlb	4	; select bank4
 15968  128B  0822               	movf	(low ((_i2c_status| (0+512)+2)))^0,w
 15969  128C  0086               	movwf	6
 15970  128D  0187               	clrf	7
 15971  128E  0870               	movf	??_do_I2C_RX,w
 15972  128F  0081               	movwf	1
 15973  1290  3001               	movlw	1
 15974  1291  00F0               	movwf	??_do_I2C_RX
 15975  1292  0870               	movf	??_do_I2C_RX,w
 15976  1293  07A2               	addwf	(low ((_i2c_status| (0+512)+2)))^0,f
 15977                           
 15978                           ;i2c_master.c: 360: if(--i2c_status.data_length)
 15979  1294  3001               	movlw	1
 15980  1295  02A3               	subwf	(_i2c_status^(0+512)+3),f
 15981  1296  3000               	movlw	0
 15982  1297  3BA4               	subwfb	((_i2c_status+1)^(0+512)+3),f
 15983  1298  0823               	movf	(_i2c_status^(0+512)+3),w
 15984  1299  0424               	iorwf	((_i2c_status+1)^(0+512)+3),w
 15985  129A  1903               	btfsc	3,2
 15986  129B  2AA0               	goto	i1l815
 15987                           
 15988                           ;i2c_master.c: 361: {
 15989                           ;i2c_master.c: 362: i2c_driver_sendACK();
 15990  129C  319D  2519         	fcall	_i2c_driver_sendACK
 15991                           
 15992                           ;i2c_master.c: 363: return I2C_RCEN;
 15993  129E  3005               	movlw	5
 15994                           
 15995                           ;i2c_master.c: 364: }
 15996  129F  0008               	return
 15997  12A0                     i1l815:	
 15998                           
 15999                           ;i2c_master.c: 365: else
 16000                           ;i2c_master.c: 366: {
 16001                           ;i2c_master.c: 367: i2c_status.bufferFree = 1;
 16002  12A0  1520               	bsf	_i2c_status^(0+512),2
 16003                           
 16004                           ;i2c_master.c: 368: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 16005  12A1  2AA8               	goto	i1l6458
 16006  12A2                     i1l6448:	
 16007                           ;i2c_master.c: 369: {
 16008                           ;i2c_master.c: 370: case i2c_restart_write:
 16009                           
 16010                           
 16011                           ;i2c_master.c: 371: case i2c_restart_read:
 16012                           ;i2c_master.c: 372: return do_I2C_DO_NACK_RESTART();
 16013  12A2  319D  2539         	fcall	_do_I2C_DO_NACK_RESTART
 16014  12A4  0008               	return
 16015  12A5                     i1l6452:	
 16016                           ;i2c_master.c: 374: case i2c_continue:
 16017                           
 16018                           ;i2c_master.c: 373: default:
 16019                           
 16020                           
 16021                           ;i2c_master.c: 375: case i2c_stop:
 16022                           ;i2c_master.c: 376: return do_I2C_DO_NACK_STOP();
 16023  12A5  319D  2535         	fcall	_do_I2C_DO_NACK_STOP
 16024                           
 16025                           ;i2c_master.c: 377: }
 16026  12A7  0008               	return
 16027  12A8                     i1l6458:	
 16028  12A8  0024               	movlb	4	; select bank4
 16029  12A9  0837               	movf	(low ((_i2c_status| (0+512)+23)))^0,w
 16030  12AA  00F0               	movwf	??_do_I2C_RX
 16031  12AB  0870               	movf	??_do_I2C_RX,w
 16032  12AC  00F9               	movwf	rdBlkRegCompleteHandler@p
 16033  12AD  300B               	movlw	11
 16034  12AE  3E20               	addlw	(low (_i2c_status| (0+512)))& (0+255)
 16035  12AF  0086               	movwf	6
 16036  12B0  3002               	movlw	2	; select bank4/5
 16037  12B1  0087               	movwf	7
 16038  12B2  3F41               	moviw [1]fsr1
 16039  12B3  008A               	movwf	10
 16040  12B4  3F40               	moviw [0]fsr1
 16041  12B5  000A               	callw
 16042  12B6  3192               	pagesel	$
 16043                           
 16044                           ; Switch size 1, requested type "space"
 16045                           ; Number of cases is 4, Range of values is 1 to 4
 16046                           ; switch strategies available:
 16047                           ; Name         Instructions Cycles
 16048                           ; simple_byte           13     7 (average)
 16049                           ; direct_byte           17     9 (fixed)
 16050                           ; jumptable            263     9 (fixed)
 16051                           ;	Chosen strategy is simple_byte
 16052  12B7  3A01               	xorlw	1	; case 1
 16053  12B8  1903               	skipnz
 16054  12B9  2AA5               	goto	i1l6452
 16055  12BA  3A03               	xorlw	3	; case 2
 16056  12BB  1903               	skipnz
 16057  12BC  2AA2               	goto	i1l6448
 16058  12BD  3A01               	xorlw	1	; case 3
 16059  12BE  1903               	skipnz
 16060  12BF  2AA2               	goto	i1l6448
 16061  12C0  3A07               	xorlw	7	; case 4
 16062  12C1  1903               	skipnz
 16063  12C2  2AA5               	goto	i1l6452
 16064  12C3  2AA5               	goto	i1l6452
 16065  12C4  0008               	return
 16066  12C5                     __end_of_do_I2C_RX:	
 16067                           
 16068                           	psect	text76
 16069  13D3                     __ptext76:	
 16070 ;; *************** function _do_I2C_TX *****************
 16071 ;; Defined at:
 16072 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 16073 ;; Parameters:    Size  Location     Type
 16074 ;;		None
 16075 ;; Auto vars:     Size  Location     Type
 16076 ;;		None
 16077 ;; Return value:  Size  Location     Type
 16078 ;;                  1    wreg      enum E2347
 16079 ;; Registers used:
 16080 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16081 ;; Tracked objects:
 16082 ;;		On entry : 0/0
 16083 ;;		On exit  : 0/0
 16084 ;;		Unchanged: 0/0
 16085 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16087 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16088 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16089 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16090 ;;Total ram usage:        3 bytes
 16091 ;; Hardware stack levels used:    1
 16092 ;; Hardware stack levels required when called:    3
 16093 ;; This function calls:
 16094 ;;		Absolute function
 16095 ;;		_do_I2C_SEND_RESTART_READ
 16096 ;;		_do_I2C_SEND_RESTART_WRITE
 16097 ;;		_do_I2C_SEND_STOP
 16098 ;;		_i2c_driver_TXData
 16099 ;;		_i2c_driver_isNACK
 16100 ;;		_i2c_restartWrite
 16101 ;;		_rd1RegCompleteHandler
 16102 ;;		_rd2RegCompleteHandler
 16103 ;;		_rdBlkRegCompleteHandler
 16104 ;;		_returnReset
 16105 ;;		_returnStop
 16106 ;;		_wr1RegCompleteHandler
 16107 ;;		_wr2RegCompleteHandler
 16108 ;; This function is called by:
 16109 ;;		_i2c_ISR
 16110 ;; This function uses a non-reentrant model
 16111 ;;
 16112                           
 16113                           
 16114                           ;psect for function _do_I2C_TX
 16115  13D3                     _do_I2C_TX:	
 16116                           
 16117                           ;i2c_master.c: 335: if(i2c_driver_isNACK())
 16118                           
 16119                           ;incstack = 0
 16120                           ; Regs used in _do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16121  13D3  319D  2573  3193   	fcall	_i2c_driver_isNACK
 16122  13D6  1803               	btfsc	3,0
 16123  13D7  2BE2               	goto	i1l6422
 16124  13D8  2BFF               	goto	i1l799
 16125  13D9                     i1l6408:	
 16126                           ;i2c_master.c: 338: {
 16127                           ;i2c_master.c: 339: case i2c_restart_read:
 16128                           
 16129                           ;i2c_master.c: 336: {
 16130                           ;i2c_master.c: 337: switch(i2c_status.callbackTable[i2c_dataNACK](i2c_status.callbackPay
      +                          load[i2c_dataNACK]))
 16131                           
 16132                           
 16133                           ;i2c_master.c: 340: return do_I2C_SEND_RESTART_READ();
 16134  13D9  319D  2521         	fcall	_do_I2C_SEND_RESTART_READ
 16135  13DB  0008               	return
 16136  13DC                     i1l6412:	
 16137                           ;i2c_master.c: 341: case i2c_restart_write:
 16138                           
 16139                           
 16140                           ;i2c_master.c: 342: return do_I2C_SEND_RESTART_WRITE();
 16141  13DC  319D  2525         	fcall	_do_I2C_SEND_RESTART_WRITE
 16142  13DE  0008               	return
 16143  13DF                     i1l6416:	
 16144                           ;i2c_master.c: 344: case i2c_continue:
 16145                           
 16146                           ;i2c_master.c: 343: default:
 16147                           
 16148                           
 16149                           ;i2c_master.c: 345: case i2c_stop:
 16150                           ;i2c_master.c: 346: return do_I2C_SEND_STOP();
 16151  13DF  319D  252D         	fcall	_do_I2C_SEND_STOP
 16152                           
 16153                           ;i2c_master.c: 347: }
 16154  13E1  0008               	return
 16155  13E2                     i1l6422:	
 16156  13E2  0024               	movlb	4	; select bank4
 16157  13E3  083A               	movf	(low ((_i2c_status| (0+512)+26)))^0,w
 16158  13E4  00F1               	movwf	??_do_I2C_TX
 16159  13E5  0871               	movf	??_do_I2C_TX,w
 16160  13E6  00F9               	movwf	rdBlkRegCompleteHandler@p
 16161  13E7  3011               	movlw	17
 16162  13E8  3E20               	addlw	(low (_i2c_status| (0+512)))& (0+255)
 16163  13E9  0086               	movwf	6
 16164  13EA  3002               	movlw	2	; select bank4/5
 16165  13EB  0087               	movwf	7
 16166  13EC  3F41               	moviw [1]fsr1
 16167  13ED  008A               	movwf	10
 16168  13EE  3F40               	moviw [0]fsr1
 16169  13EF  000A               	callw
 16170  13F0  3193               	pagesel	$
 16171                           
 16172                           ; Switch size 1, requested type "space"
 16173                           ; Number of cases is 4, Range of values is 1 to 4
 16174                           ; switch strategies available:
 16175                           ; Name         Instructions Cycles
 16176                           ; simple_byte           13     7 (average)
 16177                           ; direct_byte           17     9 (fixed)
 16178                           ; jumptable            263     9 (fixed)
 16179                           ;	Chosen strategy is simple_byte
 16180  13F1  3A01               	xorlw	1	; case 1
 16181  13F2  1903               	skipnz
 16182  13F3  2BDF               	goto	i1l6416
 16183  13F4  3A03               	xorlw	3	; case 2
 16184  13F5  1903               	skipnz
 16185  13F6  2BD9               	goto	i1l6408
 16186  13F7  3A01               	xorlw	1	; case 3
 16187  13F8  1903               	skipnz
 16188  13F9  2BDC               	goto	i1l6412
 16189  13FA  3A07               	xorlw	7	; case 4
 16190  13FB  1903               	skipnz
 16191  13FC  2BDF               	goto	i1l6416
 16192  13FD  2BDF               	goto	i1l6416
 16193                           
 16194                           ;i2c_master.c: 348: }
 16195  13FE  0008               	return
 16196  13FF                     i1l799:	
 16197                           
 16198                           ;i2c_master.c: 349: else
 16199                           ;i2c_master.c: 350: {
 16200                           ;i2c_master.c: 351: i2c_status.addressNACKCheck = 0;
 16201  13FF  0024               	movlb	4	; select bank4
 16202  1400  11A0               	bcf	_i2c_status^(0+512),3
 16203                           
 16204                           ;i2c_master.c: 352: i2c_driver_TXData(*i2c_status.data_ptr++);
 16205  1401  3002               	movlw	2
 16206  1402  3E20               	addlw	(low (_i2c_status| (0+512)))& (0+255)
 16207  1403  0086               	movwf	6
 16208  1404  3002               	movlw	2	; select bank4/5
 16209  1405  0087               	movwf	7
 16210  1406  3F40               	moviw [0]fsr1
 16211  1407  0084               	movwf	4
 16212  1408  0185               	clrf	5
 16213  1409  0A81               	incf	1,f
 16214  140A  0800               	movf	0,w
 16215  140B  319D  2541  3193   	fcall	_i2c_driver_TXData
 16216                           
 16217                           ;i2c_master.c: 353: return (--i2c_status.data_length)?I2C_TX:I2C_TX_EMPTY;
 16218  140E  3001               	movlw	1
 16219  140F  0024               	movlb	4	; select bank4
 16220  1410  02A3               	subwf	(_i2c_status^(0+512)+3),f
 16221  1411  3000               	movlw	0
 16222  1412  3BA4               	subwfb	((_i2c_status+1)^(0+512)+3),f
 16223  1413  0823               	movf	(_i2c_status^(0+512)+3),w
 16224  1414  0424               	iorwf	((_i2c_status+1)^(0+512)+3),w
 16225  1415  1D03               	btfss	3,2
 16226  1416  2C19               	goto	i1l6430
 16227  1417  3006               	movlw	6
 16228  1418  2C1A               	goto	L21
 16229  1419                     i1l6430:	
 16230  1419  3003               	movlw	3
 16231  141A                     L21:	
 16232  141A  00F2               	movwf	_do_I2C_TX$2631
 16233  141B  3000               	movlw	0
 16234  141C  00F3               	movwf	_do_I2C_TX$2631+1
 16235  141D  0872               	movf	_do_I2C_TX$2631,w
 16236  141E  0008               	return
 16237  141F                     __end_of_do_I2C_TX:	
 16238                           
 16239                           	psect	text77
 16240  1012                     __ptext77:	
 16241 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
 16242 ;; Defined at:
 16243 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 16244 ;; Parameters:    Size  Location     Type
 16245 ;;		None
 16246 ;; Auto vars:     Size  Location     Type
 16247 ;;		None
 16248 ;; Return value:  Size  Location     Type
 16249 ;;                  1    wreg      enum E2347
 16250 ;; Registers used:
 16251 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16252 ;; Tracked objects:
 16253 ;;		On entry : 0/0
 16254 ;;		On exit  : 0/0
 16255 ;;		Unchanged: 0/0
 16256 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16259 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16260 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16261 ;;Total ram usage:        1 bytes
 16262 ;; Hardware stack levels used:    1
 16263 ;; Hardware stack levels required when called:    3
 16264 ;; This function calls:
 16265 ;;		Absolute function
 16266 ;;		_do_I2C_SEND_RESTART
 16267 ;;		_do_I2C_SEND_STOP
 16268 ;;		_i2c_restartWrite
 16269 ;;		_rd1RegCompleteHandler
 16270 ;;		_rd2RegCompleteHandler
 16271 ;;		_rdBlkRegCompleteHandler
 16272 ;;		_returnReset
 16273 ;;		_returnStop
 16274 ;;		_wr1RegCompleteHandler
 16275 ;;		_wr2RegCompleteHandler
 16276 ;; This function is called by:
 16277 ;;		_i2c_ISR
 16278 ;; This function uses a non-reentrant model
 16279 ;;
 16280                           
 16281                           
 16282                           ;psect for function _do_I2C_DO_ADDRESS_NACK
 16283  1012                     _do_I2C_DO_ADDRESS_NACK:	
 16284                           
 16285                           ;i2c_master.c: 321: i2c_status.addressNACKCheck = 0;
 16286                           
 16287                           ;incstack = 0
 16288                           ; Regs used in _do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16289  1012  0024               	movlb	4	; select bank4
 16290  1013  11A0               	bcf	_i2c_status^(0+512),3
 16291                           
 16292                           ;i2c_master.c: 322: i2c_status.error = I2C_FAIL;
 16293  1014  3002               	movlw	2
 16294  1015  00F0               	movwf	??_do_I2C_DO_ADDRESS_NACK
 16295  1016  0870               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 16296  1017  00AA               	movwf	(_i2c_status^(0+512)+10)
 16297                           
 16298                           ;i2c_master.c: 323: switch(i2c_status.callbackTable[i2c_addressNACK](i2c_status.callback
      +                          Payload[i2c_addressNACK]))
 16299  1018  281F               	goto	i1l6402
 16300  1019                     i1l6392:	
 16301                           ;i2c_master.c: 324: {
 16302                           ;i2c_master.c: 325: case i2c_restart_read:
 16303                           
 16304                           
 16305                           ;i2c_master.c: 326: case i2c_restart_write:
 16306                           ;i2c_master.c: 327: return do_I2C_SEND_RESTART();
 16307  1019  319D  2529         	fcall	_do_I2C_SEND_RESTART
 16308  101B  0008               	return
 16309  101C                     i1l6396:	
 16310                           ;i2c_master.c: 328: default:
 16311                           
 16312                           
 16313                           ;i2c_master.c: 329: return do_I2C_SEND_STOP();
 16314  101C  319D  252D         	fcall	_do_I2C_SEND_STOP
 16315                           
 16316                           ;i2c_master.c: 330: }
 16317  101E  0008               	return
 16318  101F                     i1l6402:	
 16319  101F  0024               	movlb	4	; select bank4
 16320  1020  0839               	movf	(low ((_i2c_status| (0+512)+25)))^0,w
 16321  1021  00F0               	movwf	??_do_I2C_DO_ADDRESS_NACK
 16322  1022  0870               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 16323  1023  00F9               	movwf	rdBlkRegCompleteHandler@p
 16324  1024  300F               	movlw	15
 16325  1025  3E20               	addlw	(low (_i2c_status| (0+512)))& (0+255)
 16326  1026  0086               	movwf	6
 16327  1027  3002               	movlw	2	; select bank4/5
 16328  1028  0087               	movwf	7
 16329  1029  3F41               	moviw [1]fsr1
 16330  102A  008A               	movwf	10
 16331  102B  3F40               	moviw [0]fsr1
 16332  102C  000A               	callw
 16333  102D  3190               	pagesel	$
 16334                           
 16335                           ; Switch size 1, requested type "space"
 16336                           ; Number of cases is 2, Range of values is 2 to 3
 16337                           ; switch strategies available:
 16338                           ; Name         Instructions Cycles
 16339                           ; simple_byte            7     4 (average)
 16340                           ; direct_byte           13     9 (fixed)
 16341                           ; jumptable            263     9 (fixed)
 16342                           ;	Chosen strategy is simple_byte
 16343  102E  3A02               	xorlw	2	; case 2
 16344  102F  1903               	skipnz
 16345  1030  2819               	goto	i1l6392
 16346  1031  3A01               	xorlw	1	; case 3
 16347  1032  1903               	skipnz
 16348  1033  2819               	goto	i1l6392
 16349  1034  281C               	goto	i1l6396
 16350  1035  0008               	return
 16351  1036                     __end_of_do_I2C_DO_ADDRESS_NACK:	
 16352                           
 16353                           	psect	text78
 16354  1D39                     __ptext78:	
 16355 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
 16356 ;; Defined at:
 16357 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 16358 ;; Parameters:    Size  Location     Type
 16359 ;;		None
 16360 ;; Auto vars:     Size  Location     Type
 16361 ;;		None
 16362 ;; Return value:  Size  Location     Type
 16363 ;;                  1    wreg      enum E2347
 16364 ;; Registers used:
 16365 ;;		wreg, status,2, status,0, pclath, cstack
 16366 ;; Tracked objects:
 16367 ;;		On entry : 0/0
 16368 ;;		On exit  : 0/0
 16369 ;;		Unchanged: 0/0
 16370 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16375 ;;Total ram usage:        0 bytes
 16376 ;; Hardware stack levels used:    1
 16377 ;; Hardware stack levels required when called:    1
 16378 ;; This function calls:
 16379 ;;		_i2c_driver_sendNACK
 16380 ;; This function is called by:
 16381 ;;		_do_I2C_RX
 16382 ;;		_i2c_ISR
 16383 ;; This function uses a non-reentrant model
 16384 ;;
 16385                           
 16386                           
 16387                           ;psect for function _do_I2C_DO_NACK_RESTART
 16388  1D39                     _do_I2C_DO_NACK_RESTART:	
 16389                           
 16390                           ;i2c_master.c: 313: i2c_driver_sendNACK();
 16391                           
 16392                           ;incstack = 0
 16393                           ; Regs used in _do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 16394  1D39  319D  251D         	fcall	_i2c_driver_sendNACK
 16395                           
 16396                           ;i2c_master.c: 314: return I2C_SEND_RESTART;
 16397  1D3B  3009               	movlw	9
 16398  1D3C  0008               	return
 16399  1D3D                     __end_of_do_I2C_DO_NACK_RESTART:	
 16400                           
 16401                           	psect	text79
 16402  1D35                     __ptext79:	
 16403 ;; *************** function _do_I2C_DO_NACK_STOP *****************
 16404 ;; Defined at:
 16405 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 16406 ;; Parameters:    Size  Location     Type
 16407 ;;		None
 16408 ;; Auto vars:     Size  Location     Type
 16409 ;;		None
 16410 ;; Return value:  Size  Location     Type
 16411 ;;                  1    wreg      enum E2347
 16412 ;; Registers used:
 16413 ;;		wreg, status,2, status,0, pclath, cstack
 16414 ;; Tracked objects:
 16415 ;;		On entry : 0/0
 16416 ;;		On exit  : 0/0
 16417 ;;		Unchanged: 0/0
 16418 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16423 ;;Total ram usage:        0 bytes
 16424 ;; Hardware stack levels used:    1
 16425 ;; Hardware stack levels required when called:    1
 16426 ;; This function calls:
 16427 ;;		_i2c_driver_sendNACK
 16428 ;; This function is called by:
 16429 ;;		_do_I2C_RX
 16430 ;;		_i2c_ISR
 16431 ;; This function uses a non-reentrant model
 16432 ;;
 16433                           
 16434                           
 16435                           ;psect for function _do_I2C_DO_NACK_STOP
 16436  1D35                     _do_I2C_DO_NACK_STOP:	
 16437                           
 16438                           ;i2c_master.c: 307: i2c_driver_sendNACK();
 16439                           
 16440                           ;incstack = 0
 16441                           ; Regs used in _do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 16442  1D35  319D  251D         	fcall	_i2c_driver_sendNACK
 16443                           
 16444                           ;i2c_master.c: 308: return I2C_SEND_STOP;
 16445  1D37  300A               	movlw	10
 16446  1D38  0008               	return
 16447  1D39                     __end_of_do_I2C_DO_NACK_STOP:	
 16448                           
 16449                           	psect	text80
 16450  1D31                     __ptext80:	
 16451 ;; *************** function _do_I2C_DO_ACK *****************
 16452 ;; Defined at:
 16453 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 16454 ;; Parameters:    Size  Location     Type
 16455 ;;		None
 16456 ;; Auto vars:     Size  Location     Type
 16457 ;;		None
 16458 ;; Return value:  Size  Location     Type
 16459 ;;                  1    wreg      enum E2347
 16460 ;; Registers used:
 16461 ;;		wreg, status,2, status,0, pclath, cstack
 16462 ;; Tracked objects:
 16463 ;;		On entry : 0/0
 16464 ;;		On exit  : 0/0
 16465 ;;		Unchanged: 0/0
 16466 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16471 ;;Total ram usage:        0 bytes
 16472 ;; Hardware stack levels used:    1
 16473 ;; Hardware stack levels required when called:    1
 16474 ;; This function calls:
 16475 ;;		_i2c_driver_sendACK
 16476 ;; This function is called by:
 16477 ;;		_i2c_ISR
 16478 ;; This function uses a non-reentrant model
 16479 ;;
 16480                           
 16481                           
 16482                           ;psect for function _do_I2C_DO_ACK
 16483  1D31                     _do_I2C_DO_ACK:	
 16484                           
 16485                           ;i2c_master.c: 301: i2c_driver_sendACK();
 16486                           
 16487                           ;incstack = 0
 16488                           ; Regs used in _do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 16489  1D31  319D  2519         	fcall	_i2c_driver_sendACK
 16490                           
 16491                           ;i2c_master.c: 302: return I2C_RCEN;
 16492  1D33  3005               	movlw	5
 16493  1D34  0008               	return
 16494  1D35                     __end_of_do_I2C_DO_ACK:	
 16495                           
 16496                           	psect	text81
 16497  1D4B                     __ptext81:	
 16498 ;; *************** function _do_I2C_RCEN *****************
 16499 ;; Defined at:
 16500 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 16501 ;; Parameters:    Size  Location     Type
 16502 ;;		None
 16503 ;; Auto vars:     Size  Location     Type
 16504 ;;		None
 16505 ;; Return value:  Size  Location     Type
 16506 ;;                  1    wreg      enum E2347
 16507 ;; Registers used:
 16508 ;;		wreg, status,2, status,0, pclath, cstack
 16509 ;; Tracked objects:
 16510 ;;		On entry : 0/0
 16511 ;;		On exit  : 0/0
 16512 ;;		Unchanged: 0/0
 16513 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16518 ;;Total ram usage:        0 bytes
 16519 ;; Hardware stack levels used:    1
 16520 ;; Hardware stack levels required when called:    1
 16521 ;; This function calls:
 16522 ;;		_i2c_driver_startRX
 16523 ;; This function is called by:
 16524 ;;		_i2c_ISR
 16525 ;; This function uses a non-reentrant model
 16526 ;;
 16527                           
 16528                           
 16529                           ;psect for function _do_I2C_RCEN
 16530  1D4B                     _do_I2C_RCEN:	
 16531                           
 16532                           ;i2c_master.c: 294: i2c_status.addressNACKCheck = 0;
 16533                           
 16534                           ;incstack = 0
 16535                           ; Regs used in _do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 16536  1D4B  0024               	movlb	4	; select bank4
 16537  1D4C  11A0               	bcf	_i2c_status^(0+512),3
 16538                           
 16539                           ;i2c_master.c: 295: i2c_driver_startRX();
 16540  1D4D  319D  2507         	fcall	_i2c_driver_startRX
 16541                           
 16542                           ;i2c_master.c: 296: return I2C_RX;
 16543  1D4F  3004               	movlw	4
 16544  1D50  0008               	return
 16545  1D51                     __end_of_do_I2C_RCEN:	
 16546                           
 16547                           	psect	text82
 16548  1D58                     __ptext82:	
 16549 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
 16550 ;; Defined at:
 16551 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 16552 ;; Parameters:    Size  Location     Type
 16553 ;;		None
 16554 ;; Auto vars:     Size  Location     Type
 16555 ;;		None
 16556 ;; Return value:  Size  Location     Type
 16557 ;;                  1    wreg      enum E2347
 16558 ;; Registers used:
 16559 ;;		wreg, status,2, status,0, pclath, cstack
 16560 ;; Tracked objects:
 16561 ;;		On entry : 0/0
 16562 ;;		On exit  : 0/0
 16563 ;;		Unchanged: 0/0
 16564 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16569 ;;Total ram usage:        0 bytes
 16570 ;; Hardware stack levels used:    1
 16571 ;; Hardware stack levels required when called:    1
 16572 ;; This function calls:
 16573 ;;		_i2c_driver_TXData
 16574 ;; This function is called by:
 16575 ;;		_i2c_ISR
 16576 ;; This function uses a non-reentrant model
 16577 ;;
 16578                           
 16579                           
 16580                           ;psect for function _do_I2C_SEND_ADR_WRITE
 16581  1D58                     _do_I2C_SEND_ADR_WRITE:	
 16582                           
 16583                           ;i2c_master.c: 287: i2c_status.addressNACKCheck = 1;
 16584                           
 16585                           ;incstack = 0
 16586                           ; Regs used in _do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 16587  1D58  0024               	movlb	4	; select bank4
 16588  1D59  15A0               	bsf	_i2c_status^(0+512),3
 16589                           
 16590                           ;i2c_master.c: 288: i2c_driver_TXData(i2c_status.address << 1);
 16591  1D5A  3521               	lslf	(_i2c_status^(0+512)+1),w
 16592  1D5B  319D  2541         	fcall	_i2c_driver_TXData
 16593                           
 16594                           ;i2c_master.c: 289: return I2C_TX;
 16595  1D5D  3003               	movlw	3
 16596  1D5E  0008               	return
 16597  1D5F                     __end_of_do_I2C_SEND_ADR_WRITE:	
 16598                           
 16599                           	psect	text83
 16600  1D5F                     __ptext83:	
 16601 ;; *************** function _do_I2C_SEND_ADR_READ *****************
 16602 ;; Defined at:
 16603 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 16604 ;; Parameters:    Size  Location     Type
 16605 ;;		None
 16606 ;; Auto vars:     Size  Location     Type
 16607 ;;		None
 16608 ;; Return value:  Size  Location     Type
 16609 ;;                  1    wreg      enum E2347
 16610 ;; Registers used:
 16611 ;;		wreg, status,2, status,0, pclath, cstack
 16612 ;; Tracked objects:
 16613 ;;		On entry : 0/0
 16614 ;;		On exit  : 0/0
 16615 ;;		Unchanged: 0/0
 16616 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16621 ;;Total ram usage:        0 bytes
 16622 ;; Hardware stack levels used:    1
 16623 ;; Hardware stack levels required when called:    1
 16624 ;; This function calls:
 16625 ;;		_i2c_driver_TXData
 16626 ;; This function is called by:
 16627 ;;		_i2c_ISR
 16628 ;; This function uses a non-reentrant model
 16629 ;;
 16630                           
 16631                           
 16632                           ;psect for function _do_I2C_SEND_ADR_READ
 16633  1D5F                     _do_I2C_SEND_ADR_READ:	
 16634                           
 16635                           ;i2c_master.c: 280: i2c_status.addressNACKCheck = 1;
 16636                           
 16637                           ;incstack = 0
 16638                           ; Regs used in _do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 16639  1D5F  0024               	movlb	4	; select bank4
 16640  1D60  15A0               	bsf	_i2c_status^(0+512),3
 16641                           
 16642                           ;i2c_master.c: 281: i2c_driver_TXData(i2c_status.address << 1 | 1);
 16643  1D61  1403               	setc
 16644  1D62  0D21               	rlf	(_i2c_status^(0+512)+1),w
 16645  1D63  319D  2541         	fcall	_i2c_driver_TXData
 16646                           
 16647                           ;i2c_master.c: 282: return I2C_RCEN;
 16648  1D65  3005               	movlw	5
 16649  1D66  0008               	return
 16650  1D67                     __end_of_do_I2C_SEND_ADR_READ:	
 16651                           
 16652                           	psect	text84
 16653  1D2D                     __ptext84:	
 16654 ;; *************** function _do_I2C_SEND_STOP *****************
 16655 ;; Defined at:
 16656 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 16657 ;; Parameters:    Size  Location     Type
 16658 ;;		None
 16659 ;; Auto vars:     Size  Location     Type
 16660 ;;		None
 16661 ;; Return value:  Size  Location     Type
 16662 ;;                  1    wreg      enum E2347
 16663 ;; Registers used:
 16664 ;;		wreg, status,2, status,0, pclath, cstack
 16665 ;; Tracked objects:
 16666 ;;		On entry : 0/0
 16667 ;;		On exit  : 0/0
 16668 ;;		Unchanged: 0/0
 16669 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16674 ;;Total ram usage:        0 bytes
 16675 ;; Hardware stack levels used:    1
 16676 ;; Hardware stack levels required when called:    1
 16677 ;; This function calls:
 16678 ;;		_i2c_driver_stop
 16679 ;; This function is called by:
 16680 ;;		_do_I2C_DO_ADDRESS_NACK
 16681 ;;		_do_I2C_TX
 16682 ;;		_do_I2C_TX_EMPTY
 16683 ;;		_i2c_ISR
 16684 ;; This function uses a non-reentrant model
 16685 ;;
 16686                           
 16687                           
 16688                           ;psect for function _do_I2C_SEND_STOP
 16689  1D2D                     _do_I2C_SEND_STOP:	
 16690                           
 16691                           ;i2c_master.c: 274: i2c_driver_stop();
 16692                           
 16693                           ;incstack = 0
 16694                           ; Regs used in _do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 16695  1D2D  319D  2504         	fcall	_i2c_driver_stop
 16696                           
 16697                           ;i2c_master.c: 275: return I2C_IDLE;
 16698  1D2F  3000               	movlw	0
 16699  1D30  0008               	return
 16700  1D31                     __end_of_do_I2C_SEND_STOP:	
 16701                           
 16702                           	psect	text85
 16703  1D29                     __ptext85:	
 16704 ;; *************** function _do_I2C_SEND_RESTART *****************
 16705 ;; Defined at:
 16706 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 16707 ;; Parameters:    Size  Location     Type
 16708 ;;		None
 16709 ;; Auto vars:     Size  Location     Type
 16710 ;;		None
 16711 ;; Return value:  Size  Location     Type
 16712 ;;                  1    wreg      enum E2347
 16713 ;; Registers used:
 16714 ;;		wreg, status,2, status,0, pclath, cstack
 16715 ;; Tracked objects:
 16716 ;;		On entry : 0/0
 16717 ;;		On exit  : 0/0
 16718 ;;		Unchanged: 0/0
 16719 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16724 ;;Total ram usage:        0 bytes
 16725 ;; Hardware stack levels used:    1
 16726 ;; Hardware stack levels required when called:    1
 16727 ;; This function calls:
 16728 ;;		_i2c_driver_restart
 16729 ;; This function is called by:
 16730 ;;		_do_I2C_DO_ADDRESS_NACK
 16731 ;;		_do_I2C_TX_EMPTY
 16732 ;;		_i2c_ISR
 16733 ;; This function uses a non-reentrant model
 16734 ;;
 16735                           
 16736                           
 16737                           ;psect for function _do_I2C_SEND_RESTART
 16738  1D29                     _do_I2C_SEND_RESTART:	
 16739                           
 16740                           ;i2c_master.c: 268: i2c_driver_restart();
 16741                           
 16742                           ;incstack = 0
 16743                           ; Regs used in _do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 16744  1D29  319D  2501         	fcall	_i2c_driver_restart
 16745                           
 16746                           ;i2c_master.c: 269: return I2C_SEND_ADR_READ;
 16747  1D2B  3001               	movlw	1
 16748  1D2C  0008               	return
 16749  1D2D                     __end_of_do_I2C_SEND_RESTART:	
 16750                           
 16751                           	psect	text86
 16752  1D25                     __ptext86:	
 16753 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
 16754 ;; Defined at:
 16755 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 16756 ;; Parameters:    Size  Location     Type
 16757 ;;		None
 16758 ;; Auto vars:     Size  Location     Type
 16759 ;;		None
 16760 ;; Return value:  Size  Location     Type
 16761 ;;                  1    wreg      enum E2347
 16762 ;; Registers used:
 16763 ;;		wreg, status,2, status,0, pclath, cstack
 16764 ;; Tracked objects:
 16765 ;;		On entry : 0/0
 16766 ;;		On exit  : 0/0
 16767 ;;		Unchanged: 0/0
 16768 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16773 ;;Total ram usage:        0 bytes
 16774 ;; Hardware stack levels used:    1
 16775 ;; Hardware stack levels required when called:    1
 16776 ;; This function calls:
 16777 ;;		_i2c_driver_restart
 16778 ;; This function is called by:
 16779 ;;		_do_I2C_TX
 16780 ;;		_i2c_ISR
 16781 ;; This function uses a non-reentrant model
 16782 ;;
 16783                           
 16784                           
 16785                           ;psect for function _do_I2C_SEND_RESTART_WRITE
 16786  1D25                     _do_I2C_SEND_RESTART_WRITE:	
 16787                           
 16788                           ;i2c_master.c: 262: i2c_driver_restart();
 16789                           
 16790                           ;incstack = 0
 16791                           ; Regs used in _do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 16792  1D25  319D  2501         	fcall	_i2c_driver_restart
 16793                           
 16794                           ;i2c_master.c: 263: return I2C_SEND_ADR_WRITE;
 16795  1D27  3002               	movlw	2
 16796  1D28  0008               	return
 16797  1D29                     __end_of_do_I2C_SEND_RESTART_WRITE:	
 16798                           
 16799                           	psect	text87
 16800  1D21                     __ptext87:	
 16801 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
 16802 ;; Defined at:
 16803 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 16804 ;; Parameters:    Size  Location     Type
 16805 ;;		None
 16806 ;; Auto vars:     Size  Location     Type
 16807 ;;		None
 16808 ;; Return value:  Size  Location     Type
 16809 ;;                  1    wreg      enum E2347
 16810 ;; Registers used:
 16811 ;;		wreg, status,2, status,0, pclath, cstack
 16812 ;; Tracked objects:
 16813 ;;		On entry : 0/0
 16814 ;;		On exit  : 0/0
 16815 ;;		Unchanged: 0/0
 16816 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16821 ;;Total ram usage:        0 bytes
 16822 ;; Hardware stack levels used:    1
 16823 ;; Hardware stack levels required when called:    1
 16824 ;; This function calls:
 16825 ;;		_i2c_driver_restart
 16826 ;; This function is called by:
 16827 ;;		_do_I2C_TX
 16828 ;;		_i2c_ISR
 16829 ;; This function uses a non-reentrant model
 16830 ;;
 16831                           
 16832                           
 16833                           ;psect for function _do_I2C_SEND_RESTART_READ
 16834  1D21                     _do_I2C_SEND_RESTART_READ:	
 16835                           
 16836                           ;i2c_master.c: 256: i2c_driver_restart();
 16837                           
 16838                           ;incstack = 0
 16839                           ; Regs used in _do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 16840  1D21  319D  2501         	fcall	_i2c_driver_restart
 16841                           
 16842                           ;i2c_master.c: 257: return I2C_SEND_ADR_READ;
 16843  1D23  3001               	movlw	1
 16844  1D24  0008               	return
 16845  1D25                     __end_of_do_I2C_SEND_RESTART_READ:	
 16846                           
 16847                           	psect	text88
 16848  1D46                     __ptext88:	
 16849 ;; *************** function _do_I2C_IDLE *****************
 16850 ;; Defined at:
 16851 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 16852 ;; Parameters:    Size  Location     Type
 16853 ;;		None
 16854 ;; Auto vars:     Size  Location     Type
 16855 ;;		None
 16856 ;; Return value:  Size  Location     Type
 16857 ;;                  1    wreg      enum E2347
 16858 ;; Registers used:
 16859 ;;		wreg, status,2
 16860 ;; Tracked objects:
 16861 ;;		On entry : 0/0
 16862 ;;		On exit  : 0/0
 16863 ;;		Unchanged: 0/0
 16864 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16869 ;;Total ram usage:        0 bytes
 16870 ;; Hardware stack levels used:    1
 16871 ;; This function calls:
 16872 ;;		Nothing
 16873 ;; This function is called by:
 16874 ;;		_i2c_ISR
 16875 ;; This function uses a non-reentrant model
 16876 ;;
 16877                           
 16878                           
 16879                           ;psect for function _do_I2C_IDLE
 16880  1D46                     _do_I2C_IDLE:	
 16881                           
 16882                           ;i2c_master.c: 249: i2c_status.busy = 0;
 16883                           
 16884                           ;incstack = 0
 16885                           ; Regs used in _do_I2C_IDLE: [wreg+status,2]
 16886  1D46  0024               	movlb	4	; select bank4
 16887  1D47  1020               	bcf	_i2c_status^(0+512),0
 16888                           
 16889                           ;i2c_master.c: 250: i2c_status.error = I2C_NOERR;
 16890  1D48  01AA               	clrf	(_i2c_status^(0+512)+10)
 16891                           
 16892                           ;i2c_master.c: 251: return I2C_RESET;
 16893  1D49  300E               	movlw	14
 16894  1D4A  0008               	return
 16895  1D4B                     __end_of_do_I2C_IDLE:	
 16896                           
 16897                           	psect	text89
 16898  1D51                     __ptext89:	
 16899 ;; *************** function _do_I2C_RESET *****************
 16900 ;; Defined at:
 16901 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 16902 ;; Parameters:    Size  Location     Type
 16903 ;;		None
 16904 ;; Auto vars:     Size  Location     Type
 16905 ;;		None
 16906 ;; Return value:  Size  Location     Type
 16907 ;;                  1    wreg      enum E2347
 16908 ;; Registers used:
 16909 ;;		wreg, status,2, status,0, pclath, cstack
 16910 ;; Tracked objects:
 16911 ;;		On entry : 0/0
 16912 ;;		On exit  : 0/0
 16913 ;;		Unchanged: 0/0
 16914 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16919 ;;Total ram usage:        0 bytes
 16920 ;; Hardware stack levels used:    1
 16921 ;; Hardware stack levels required when called:    1
 16922 ;; This function calls:
 16923 ;;		_i2c_driver_resetBus
 16924 ;; This function is called by:
 16925 ;;		_i2c_ISR
 16926 ;; This function uses a non-reentrant model
 16927 ;;
 16928                           
 16929                           
 16930                           ;psect for function _do_I2C_RESET
 16931  1D51                     _do_I2C_RESET:	
 16932                           
 16933                           ;i2c_master.c: 241: i2c_driver_resetBus();
 16934                           
 16935                           ;incstack = 0
 16936                           ; Regs used in _do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 16937  1D51  319C  24FC         	fcall	_i2c_driver_resetBus
 16938                           
 16939                           ;i2c_master.c: 242: i2c_status.busy = 0;
 16940  1D53  0024               	movlb	4	; select bank4
 16941  1D54  1020               	bcf	_i2c_status^(0+512),0
 16942                           
 16943                           ;i2c_master.c: 243: i2c_status.error = I2C_NOERR;
 16944  1D55  01AA               	clrf	(_i2c_status^(0+512)+10)
 16945                           
 16946                           ;i2c_master.c: 244: return I2C_RESET;
 16947  1D56  300E               	movlw	14
 16948  1D57  0008               	return
 16949  1D58                     __end_of_do_I2C_RESET:	
 16950                           
 16951                           	psect	text90
 16952  1083                     __ptext90:	
 16953 ;; *************** function _do_I2C_TX_EMPTY *****************
 16954 ;; Defined at:
 16955 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 16956 ;; Parameters:    Size  Location     Type
 16957 ;;		None
 16958 ;; Auto vars:     Size  Location     Type
 16959 ;;		None
 16960 ;; Return value:  Size  Location     Type
 16961 ;;                  1    wreg      enum E2347
 16962 ;; Registers used:
 16963 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16964 ;; Tracked objects:
 16965 ;;		On entry : 0/0
 16966 ;;		On exit  : 0/0
 16967 ;;		Unchanged: 0/0
 16968 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16971 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16972 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16973 ;;Total ram usage:        1 bytes
 16974 ;; Hardware stack levels used:    1
 16975 ;; Hardware stack levels required when called:    3
 16976 ;; This function calls:
 16977 ;;		Absolute function
 16978 ;;		_do_I2C_SEND_RESTART
 16979 ;;		_do_I2C_SEND_STOP
 16980 ;;		_i2c_restartWrite
 16981 ;;		_mssp_setIRQ
 16982 ;;		_rd1RegCompleteHandler
 16983 ;;		_rd2RegCompleteHandler
 16984 ;;		_rdBlkRegCompleteHandler
 16985 ;;		_returnReset
 16986 ;;		_returnStop
 16987 ;;		_wr1RegCompleteHandler
 16988 ;;		_wr2RegCompleteHandler
 16989 ;; This function is called by:
 16990 ;;		_i2c_ISR
 16991 ;; This function uses a non-reentrant model
 16992 ;;
 16993                           
 16994                           
 16995                           ;psect for function _do_I2C_TX_EMPTY
 16996  1083                     _do_I2C_TX_EMPTY:	
 16997                           
 16998                           ;i2c_master.c: 384: i2c_status.bufferFree = 1;
 16999                           
 17000                           ;incstack = 0
 17001                           ; Regs used in _do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17002  1083  0024               	movlb	4	; select bank4
 17003  1084  1520               	bsf	_i2c_status^(0+512),2
 17004                           
 17005                           ;i2c_master.c: 385: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 17006  1085  2890               	goto	i1l6478
 17007  1086                     i1l6462:	
 17008                           ;i2c_master.c: 386: {
 17009                           ;i2c_master.c: 387: case i2c_restart_read:
 17010                           
 17011                           
 17012                           ;i2c_master.c: 388: case i2c_restart_write:
 17013                           ;i2c_master.c: 389: return do_I2C_SEND_RESTART();
 17014  1086  319D  2529         	fcall	_do_I2C_SEND_RESTART
 17015  1088  0008               	return
 17016  1089                     i1l6466:	
 17017                           ;i2c_master.c: 390: case i2c_continue:
 17018                           
 17019                           
 17020                           ;i2c_master.c: 391: mssp_setIRQ();
 17021  1089  319D  250D         	fcall	_mssp_setIRQ
 17022                           
 17023                           ;i2c_master.c: 392: return I2C_TX;
 17024  108B  3003               	movlw	3
 17025  108C  0008               	return
 17026  108D                     i1l6472:	
 17027                           ;i2c_master.c: 394: case i2c_stop:
 17028                           
 17029                           ;i2c_master.c: 393: default:
 17030                           
 17031                           
 17032                           ;i2c_master.c: 395: return do_I2C_SEND_STOP();
 17033  108D  319D  252D         	fcall	_do_I2C_SEND_STOP
 17034                           
 17035                           ;i2c_master.c: 396: }
 17036  108F  0008               	return
 17037  1090                     i1l6478:	
 17038  1090  0024               	movlb	4	; select bank4
 17039  1091  0837               	movf	(low ((_i2c_status| (0+512)+23)))^0,w
 17040  1092  00F0               	movwf	??_do_I2C_TX_EMPTY
 17041  1093  0870               	movf	??_do_I2C_TX_EMPTY,w
 17042  1094  00F9               	movwf	rdBlkRegCompleteHandler@p
 17043  1095  300B               	movlw	11
 17044  1096  3E20               	addlw	(low (_i2c_status| (0+512)))& (0+255)
 17045  1097  0086               	movwf	6
 17046  1098  3002               	movlw	2	; select bank4/5
 17047  1099  0087               	movwf	7
 17048  109A  3F41               	moviw [1]fsr1
 17049  109B  008A               	movwf	10
 17050  109C  3F40               	moviw [0]fsr1
 17051  109D  000A               	callw
 17052  109E  3190               	pagesel	$
 17053                           
 17054                           ; Switch size 1, requested type "space"
 17055                           ; Number of cases is 4, Range of values is 1 to 4
 17056                           ; switch strategies available:
 17057                           ; Name         Instructions Cycles
 17058                           ; simple_byte           13     7 (average)
 17059                           ; direct_byte           17     9 (fixed)
 17060                           ; jumptable            263     9 (fixed)
 17061                           ;	Chosen strategy is simple_byte
 17062  109F  3A01               	xorlw	1	; case 1
 17063  10A0  1903               	skipnz
 17064  10A1  288D               	goto	i1l6472
 17065  10A2  3A03               	xorlw	3	; case 2
 17066  10A3  1903               	skipnz
 17067  10A4  2886               	goto	i1l6462
 17068  10A5  3A01               	xorlw	1	; case 3
 17069  10A6  1903               	skipnz
 17070  10A7  2886               	goto	i1l6462
 17071  10A8  3A07               	xorlw	7	; case 4
 17072  10A9  1903               	skipnz
 17073  10AA  2889               	goto	i1l6466
 17074  10AB  288D               	goto	i1l6472
 17075  10AC  0008               	return
 17076  10AD                     __end_of_do_I2C_TX_EMPTY:	
 17077                           
 17078                           	psect	text91
 17079  1D0D                     __ptext91:	
 17080 ;; *************** function _mssp_setIRQ *****************
 17081 ;; Defined at:
 17082 ;;		line 58 in file "mcc_generated_files/i2c_driver.c"
 17083 ;; Parameters:    Size  Location     Type
 17084 ;;		None
 17085 ;; Auto vars:     Size  Location     Type
 17086 ;;		None
 17087 ;; Return value:  Size  Location     Type
 17088 ;;                  1    wreg      void 
 17089 ;; Registers used:
 17090 ;;		None
 17091 ;; Tracked objects:
 17092 ;;		On entry : 0/0
 17093 ;;		On exit  : 0/0
 17094 ;;		Unchanged: 0/0
 17095 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17100 ;;Total ram usage:        0 bytes
 17101 ;; Hardware stack levels used:    1
 17102 ;; This function calls:
 17103 ;;		Nothing
 17104 ;; This function is called by:
 17105 ;;		_do_I2C_TX_EMPTY
 17106 ;; This function uses a non-reentrant model
 17107 ;;
 17108                           
 17109                           
 17110                           ;psect for function _mssp_setIRQ
 17111  1D0D                     _mssp_setIRQ:	
 17112                           
 17113                           ;i2c_driver.c: 60: PIR1bits.SSP1IF = 1;
 17114                           
 17115                           ;incstack = 0
 17116                           ; Regs used in _mssp_setIRQ: []
 17117  1D0D  0020               	movlb	0	; select bank0
 17118  1D0E  1591               	bsf	17,3	;volatile
 17119  1D0F  0008               	return
 17120  1D10                     __end_of_mssp_setIRQ:	
 17121                           
 17122                           	psect	text92
 17123  1D73                     __ptext92:	
 17124 ;; *************** function _i2c_driver_isNACK *****************
 17125 ;; Defined at:
 17126 ;;		line 161 in file "mcc_generated_files/i2c_driver.c"
 17127 ;; Parameters:    Size  Location     Type
 17128 ;;		None
 17129 ;; Auto vars:     Size  Location     Type
 17130 ;;		None
 17131 ;; Return value:  Size  Location     Type
 17132 ;;		None               void
 17133 ;; Registers used:
 17134 ;;		wreg, status,2, status,0
 17135 ;; Tracked objects:
 17136 ;;		On entry : 0/0
 17137 ;;		On exit  : 0/0
 17138 ;;		Unchanged: 0/0
 17139 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17142 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17143 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17144 ;;Total ram usage:        1 bytes
 17145 ;; Hardware stack levels used:    1
 17146 ;; This function calls:
 17147 ;;		Nothing
 17148 ;; This function is called by:
 17149 ;;		_do_I2C_TX
 17150 ;;		_i2c_ISR
 17151 ;; This function uses a non-reentrant model
 17152 ;;
 17153                           
 17154                           
 17155                           ;psect for function _i2c_driver_isNACK
 17156  1D73                     _i2c_driver_isNACK:	
 17157                           
 17158                           ;i2c_driver.c: 163: return SSP1CON2bits.ACKSTAT = 1;
 17159                           
 17160                           ;incstack = 0
 17161                           ; Regs used in _i2c_driver_isNACK: [wreg+status,2+status,0]
 17162  1D73  0024               	movlb	4	; select bank4
 17163  1D74  0816               	movf	22,w	;volatile
 17164  1D75  39BF               	andlw	-65
 17165  1D76  3840               	iorlw	64
 17166  1D77  0096               	movwf	22	;volatile
 17167  1D78  0E16               	swapf	22,w	;volatile
 17168  1D79  0C89               	rrf	9,f
 17169  1D7A  0C89               	rrf	9,f
 17170  1D7B  3901               	andlw	1
 17171  1D7C  00F0               	movwf	??_i2c_driver_isNACK
 17172  1D7D  0C70               	rrf	??_i2c_driver_isNACK,w
 17173  1D7E  0008               	return
 17174  1D7F                     __end_of_i2c_driver_isNACK:	
 17175                           
 17176                           	psect	text93
 17177  1D41                     __ptext93:	
 17178 ;; *************** function _i2c_driver_TXData *****************
 17179 ;; Defined at:
 17180 ;;		line 186 in file "mcc_generated_files/i2c_driver.c"
 17181 ;; Parameters:    Size  Location     Type
 17182 ;;  d               1    wreg     unsigned char 
 17183 ;; Auto vars:     Size  Location     Type
 17184 ;;  d               1    0[COMMON] unsigned char 
 17185 ;; Return value:  Size  Location     Type
 17186 ;;                  1    wreg      void 
 17187 ;; Registers used:
 17188 ;;		wreg
 17189 ;; Tracked objects:
 17190 ;;		On entry : 0/0
 17191 ;;		On exit  : 0/0
 17192 ;;		Unchanged: 0/0
 17193 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17195 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17197 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17198 ;;Total ram usage:        1 bytes
 17199 ;; Hardware stack levels used:    1
 17200 ;; This function calls:
 17201 ;;		Nothing
 17202 ;; This function is called by:
 17203 ;;		_do_I2C_SEND_ADR_READ
 17204 ;;		_do_I2C_SEND_ADR_WRITE
 17205 ;;		_do_I2C_TX
 17206 ;; This function uses a non-reentrant model
 17207 ;;
 17208                           
 17209                           
 17210                           ;psect for function _i2c_driver_TXData
 17211  1D41                     _i2c_driver_TXData:	
 17212                           
 17213                           ;incstack = 0
 17214                           ; Regs used in _i2c_driver_TXData: [wreg]
 17215                           ;i2c_driver_TXData@d stored from wreg
 17216  1D41  00F0               	movwf	i2c_driver_TXData@d
 17217                           
 17218                           ;i2c_driver.c: 188: SSP1BUF = d;
 17219  1D42  0870               	movf	i2c_driver_TXData@d,w
 17220  1D43  0024               	movlb	4	; select bank4
 17221  1D44  0091               	movwf	17	;volatile
 17222  1D45  0008               	return
 17223  1D46                     __end_of_i2c_driver_TXData:	
 17224                           
 17225                           	psect	text94
 17226  1D0A                     __ptext94:	
 17227 ;; *************** function _i2c_driver_getRXData *****************
 17228 ;; Defined at:
 17229 ;;		line 171 in file "mcc_generated_files/i2c_driver.c"
 17230 ;; Parameters:    Size  Location     Type
 17231 ;;		None
 17232 ;; Auto vars:     Size  Location     Type
 17233 ;;		None
 17234 ;; Return value:  Size  Location     Type
 17235 ;;                  1    wreg      unsigned char 
 17236 ;; Registers used:
 17237 ;;		wreg
 17238 ;; Tracked objects:
 17239 ;;		On entry : 0/0
 17240 ;;		On exit  : 0/0
 17241 ;;		Unchanged: 0/0
 17242 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17247 ;;Total ram usage:        0 bytes
 17248 ;; Hardware stack levels used:    1
 17249 ;; This function calls:
 17250 ;;		Nothing
 17251 ;; This function is called by:
 17252 ;;		_do_I2C_RX
 17253 ;; This function uses a non-reentrant model
 17254 ;;
 17255                           
 17256                           
 17257                           ;psect for function _i2c_driver_getRXData
 17258  1D0A                     _i2c_driver_getRXData:	
 17259                           
 17260                           ;i2c_driver.c: 173: return SSP1BUF;
 17261                           
 17262                           ;incstack = 0
 17263                           ; Regs used in _i2c_driver_getRXData: [wreg]
 17264  1D0A  0024               	movlb	4	; select bank4
 17265  1D0B  0811               	movf	17,w	;volatile
 17266  1D0C  0008               	return
 17267  1D0D                     __end_of_i2c_driver_getRXData:	
 17268                           
 17269                           	psect	text95
 17270  1D1D                     __ptext95:	
 17271 ;; *************** function _i2c_driver_sendNACK *****************
 17272 ;; Defined at:
 17273 ;;		line 202 in file "mcc_generated_files/i2c_driver.c"
 17274 ;; Parameters:    Size  Location     Type
 17275 ;;		None
 17276 ;; Auto vars:     Size  Location     Type
 17277 ;;		None
 17278 ;; Return value:  Size  Location     Type
 17279 ;;                  1    wreg      void 
 17280 ;; Registers used:
 17281 ;;		None
 17282 ;; Tracked objects:
 17283 ;;		On entry : 0/0
 17284 ;;		On exit  : 0/0
 17285 ;;		Unchanged: 0/0
 17286 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17291 ;;Total ram usage:        0 bytes
 17292 ;; Hardware stack levels used:    1
 17293 ;; This function calls:
 17294 ;;		Nothing
 17295 ;; This function is called by:
 17296 ;;		_do_I2C_DO_NACK_STOP
 17297 ;;		_do_I2C_DO_NACK_RESTART
 17298 ;; This function uses a non-reentrant model
 17299 ;;
 17300                           
 17301                           
 17302                           ;psect for function _i2c_driver_sendNACK
 17303  1D1D                     _i2c_driver_sendNACK:	
 17304                           
 17305                           ;i2c_driver.c: 204: SSP1CON2bits.ACKDT = 1;
 17306                           
 17307                           ;incstack = 0
 17308                           ; Regs used in _i2c_driver_sendNACK: []
 17309  1D1D  0024               	movlb	4	; select bank4
 17310  1D1E  1696               	bsf	22,5	;volatile
 17311                           
 17312                           ;i2c_driver.c: 205: SSP1CON2bits.ACKEN = 1;
 17313  1D1F  1616               	bsf	22,4	;volatile
 17314  1D20  0008               	return
 17315  1D21                     __end_of_i2c_driver_sendNACK:	
 17316                           
 17317                           	psect	text96
 17318  1CFC                     __ptext96:	
 17319 ;; *************** function _i2c_driver_resetBus *****************
 17320 ;; Defined at:
 17321 ;;		line 141 in file "mcc_generated_files/i2c_driver.c"
 17322 ;; Parameters:    Size  Location     Type
 17323 ;;		None
 17324 ;; Auto vars:     Size  Location     Type
 17325 ;;		None
 17326 ;; Return value:  Size  Location     Type
 17327 ;;                  1    wreg      void 
 17328 ;; Registers used:
 17329 ;;		None
 17330 ;; Tracked objects:
 17331 ;;		On entry : 0/0
 17332 ;;		On exit  : 0/0
 17333 ;;		Unchanged: 0/0
 17334 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17339 ;;Total ram usage:        0 bytes
 17340 ;; Hardware stack levels used:    1
 17341 ;; This function calls:
 17342 ;;		Nothing
 17343 ;; This function is called by:
 17344 ;;		_do_I2C_RESET
 17345 ;; This function uses a non-reentrant model
 17346 ;;
 17347                           
 17348                           
 17349                           ;psect for function _i2c_driver_resetBus
 17350  1CFC                     _i2c_driver_resetBus:	
 17351                           
 17352                           ;incstack = 0
 17353                           ; Regs used in _i2c_driver_resetBus: []
 17354  1CFC  0008               	return
 17355  1CFD                     __end_of_i2c_driver_resetBus:	
 17356                           
 17357                           	psect	text97
 17358  1D07                     __ptext97:	
 17359 ;; *************** function _i2c_driver_startRX *****************
 17360 ;; Defined at:
 17361 ;;		line 166 in file "mcc_generated_files/i2c_driver.c"
 17362 ;; Parameters:    Size  Location     Type
 17363 ;;		None
 17364 ;; Auto vars:     Size  Location     Type
 17365 ;;		None
 17366 ;; Return value:  Size  Location     Type
 17367 ;;                  1    wreg      void 
 17368 ;; Registers used:
 17369 ;;		None
 17370 ;; Tracked objects:
 17371 ;;		On entry : 0/0
 17372 ;;		On exit  : 0/0
 17373 ;;		Unchanged: 0/0
 17374 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17379 ;;Total ram usage:        0 bytes
 17380 ;; Hardware stack levels used:    1
 17381 ;; This function calls:
 17382 ;;		Nothing
 17383 ;; This function is called by:
 17384 ;;		_do_I2C_RCEN
 17385 ;; This function uses a non-reentrant model
 17386 ;;
 17387                           
 17388                           
 17389                           ;psect for function _i2c_driver_startRX
 17390  1D07                     _i2c_driver_startRX:	
 17391                           
 17392                           ;i2c_driver.c: 168: SSP1CON2bits.RCEN = 1;
 17393                           
 17394                           ;incstack = 0
 17395                           ; Regs used in _i2c_driver_startRX: []
 17396  1D07  0024               	movlb	4	; select bank4
 17397  1D08  1596               	bsf	22,3	;volatile
 17398  1D09  0008               	return
 17399  1D0A                     __end_of_i2c_driver_startRX:	
 17400                           
 17401                           	psect	text98
 17402  1E2B                     __ptext98:	
 17403 ;; *************** function _rdBlkRegCompleteHandler *****************
 17404 ;; Defined at:
 17405 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 17406 ;; Parameters:    Size  Location     Type
 17407 ;;  p               1    9[COMMON] PTR void 
 17408 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17409 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17410 ;; Auto vars:     Size  Location     Type
 17411 ;;		None
 17412 ;; Return value:  Size  Location     Type
 17413 ;;                  1    wreg      enum E97
 17414 ;; Registers used:
 17415 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17416 ;; Tracked objects:
 17417 ;;		On entry : 0/0
 17418 ;;		On exit  : 0/0
 17419 ;;		Unchanged: 0/0
 17420 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17421 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17424 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17425 ;;Total ram usage:        1 bytes
 17426 ;; Hardware stack levels used:    1
 17427 ;; Hardware stack levels required when called:    2
 17428 ;; This function calls:
 17429 ;;		_i2c_setBuffer
 17430 ;;		_i2c_setDataCompleteCallback
 17431 ;; This function is called by:
 17432 ;;		_i2c_readDataBlock
 17433 ;;		_do_I2C_DO_ADDRESS_NACK
 17434 ;;		_do_I2C_TX
 17435 ;;		_do_I2C_RX
 17436 ;;		_do_I2C_TX_EMPTY
 17437 ;; This function uses a non-reentrant model
 17438 ;;
 17439                           
 17440                           
 17441                           ;psect for function _rdBlkRegCompleteHandler
 17442  1E2B                     _rdBlkRegCompleteHandler:	
 17443                           
 17444                           ;i2c_simple_master.c: 136: i2c_setBuffer(((buf_t *)p)->data,((buf_t*)p)->len);
 17445                           
 17446                           ;incstack = 0
 17447                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 17448  1E2B  0879               	movf	rdBlkRegCompleteHandler@p,w
 17449  1E2C  0086               	movwf	6
 17450  1E2D  0187               	clrf	7
 17451  1E2E  3F40               	moviw [0]fsr1
 17452  1E2F  00F0               	movwf	i2c_setBuffer@bufferSize
 17453  1E30  3F41               	moviw [1]fsr1
 17454  1E31  00F1               	movwf	i2c_setBuffer@bufferSize+1
 17455  1E32  0879               	movf	rdBlkRegCompleteHandler@p,w
 17456  1E33  3E02               	addlw	2
 17457  1E34  0086               	movwf	6
 17458  1E35  0187               	clrf	7
 17459  1E36  0801               	movf	1,w
 17460  1E37  3188  2000  319E   	fcall	_i2c_setBuffer
 17461                           
 17462                           ;i2c_simple_master.c: 137: i2c_setDataCompleteCallback((0),(0));
 17463  1E3A  3000               	movlw	0
 17464  1E3B  00F5               	movwf	i2c_setDataCompleteCallback@cb
 17465  1E3C  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 17466  1E3D  01F7               	clrf	i2c_setDataCompleteCallback@p
 17467  1E3E  319D  2567         	fcall	_i2c_setDataCompleteCallback
 17468                           
 17469                           ;i2c_simple_master.c: 138: return i2c_restart_read;
 17470  1E40  3002               	movlw	2
 17471  1E41  0008               	return
 17472  1E42                     __end_of_rdBlkRegCompleteHandler:	
 17473                           
 17474                           	psect	text99
 17475  1DDF                     __ptext99:	
 17476 ;; *************** function _rd2RegCompleteHandler *****************
 17477 ;; Defined at:
 17478 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 17479 ;; Parameters:    Size  Location     Type
 17480 ;;  p               1    9[COMMON] PTR void 
 17481 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17482 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17483 ;; Auto vars:     Size  Location     Type
 17484 ;;		None
 17485 ;; Return value:  Size  Location     Type
 17486 ;;                  1    wreg      enum E97
 17487 ;; Registers used:
 17488 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17489 ;; Tracked objects:
 17490 ;;		On entry : 0/0
 17491 ;;		On exit  : 0/0
 17492 ;;		Unchanged: 0/0
 17493 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17494 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17497 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17498 ;;Total ram usage:        1 bytes
 17499 ;; Hardware stack levels used:    1
 17500 ;; Hardware stack levels required when called:    2
 17501 ;; This function calls:
 17502 ;;		_i2c_setBuffer
 17503 ;;		_i2c_setDataCompleteCallback
 17504 ;; This function is called by:
 17505 ;;		_i2c_read2ByteRegister
 17506 ;;		_do_I2C_DO_ADDRESS_NACK
 17507 ;;		_do_I2C_TX
 17508 ;;		_do_I2C_RX
 17509 ;;		_do_I2C_TX_EMPTY
 17510 ;; This function uses a non-reentrant model
 17511 ;;
 17512                           
 17513                           
 17514                           ;psect for function _rd2RegCompleteHandler
 17515  1DDF                     _rd2RegCompleteHandler:	
 17516                           
 17517                           ;i2c_simple_master.c: 89: i2c_setBuffer(p,2);
 17518                           
 17519                           ;incstack = 0
 17520                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 17521  1DDF  3002               	movlw	2
 17522  1DE0  00F0               	movwf	i2c_setBuffer@bufferSize
 17523  1DE1  3000               	movlw	0
 17524  1DE2  00F1               	movwf	i2c_setBuffer@bufferSize+1
 17525  1DE3  0879               	movf	rd2RegCompleteHandler@p,w
 17526  1DE4  3188  2000  319D   	fcall	_i2c_setBuffer
 17527                           
 17528                           ;i2c_simple_master.c: 90: i2c_setDataCompleteCallback((0),(0));
 17529  1DE7  3000               	movlw	0
 17530  1DE8  00F5               	movwf	i2c_setDataCompleteCallback@cb
 17531  1DE9  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 17532  1DEA  01F7               	clrf	i2c_setDataCompleteCallback@p
 17533  1DEB  319D  2567         	fcall	_i2c_setDataCompleteCallback
 17534                           
 17535                           ;i2c_simple_master.c: 91: return i2c_restart_read;
 17536  1DED  3002               	movlw	2
 17537  1DEE  0008               	return
 17538  1DEF                     __end_of_rd2RegCompleteHandler:	
 17539                           
 17540                           	psect	text100
 17541  1DCF                     __ptext100:	
 17542 ;; *************** function _rd1RegCompleteHandler *****************
 17543 ;; Defined at:
 17544 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 17545 ;; Parameters:    Size  Location     Type
 17546 ;;  p               1    9[COMMON] PTR void 
 17547 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17548 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17549 ;; Auto vars:     Size  Location     Type
 17550 ;;		None
 17551 ;; Return value:  Size  Location     Type
 17552 ;;                  1    wreg      enum E97
 17553 ;; Registers used:
 17554 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17555 ;; Tracked objects:
 17556 ;;		On entry : 0/0
 17557 ;;		On exit  : 0/0
 17558 ;;		Unchanged: 0/0
 17559 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17560 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17563 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17564 ;;Total ram usage:        1 bytes
 17565 ;; Hardware stack levels used:    1
 17566 ;; Hardware stack levels required when called:    2
 17567 ;; This function calls:
 17568 ;;		_i2c_setBuffer
 17569 ;;		_i2c_setDataCompleteCallback
 17570 ;; This function is called by:
 17571 ;;		_i2c_read1ByteRegister
 17572 ;;		_do_I2C_DO_ADDRESS_NACK
 17573 ;;		_do_I2C_TX
 17574 ;;		_do_I2C_RX
 17575 ;;		_do_I2C_TX_EMPTY
 17576 ;; This function uses a non-reentrant model
 17577 ;;
 17578                           
 17579                           
 17580                           ;psect for function _rd1RegCompleteHandler
 17581  1DCF                     _rd1RegCompleteHandler:	
 17582                           
 17583                           ;i2c_simple_master.c: 60: i2c_setBuffer(p,1);
 17584                           
 17585                           ;incstack = 0
 17586                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 17587  1DCF  3001               	movlw	1
 17588  1DD0  00F0               	movwf	i2c_setBuffer@bufferSize
 17589  1DD1  3000               	movlw	0
 17590  1DD2  00F1               	movwf	i2c_setBuffer@bufferSize+1
 17591  1DD3  0879               	movf	rd1RegCompleteHandler@p,w
 17592  1DD4  3188  2000  319D   	fcall	_i2c_setBuffer
 17593                           
 17594                           ;i2c_simple_master.c: 61: i2c_setDataCompleteCallback((0),(0));
 17595  1DD7  3000               	movlw	0
 17596  1DD8  00F5               	movwf	i2c_setDataCompleteCallback@cb
 17597  1DD9  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 17598  1DDA  01F7               	clrf	i2c_setDataCompleteCallback@p
 17599  1DDB  319D  2567         	fcall	_i2c_setDataCompleteCallback
 17600                           
 17601                           ;i2c_simple_master.c: 62: return i2c_restart_read;
 17602  1DDD  3002               	movlw	2
 17603  1DDE  0008               	return
 17604  1DDF                     __end_of_rd1RegCompleteHandler:	
 17605                           
 17606                           	psect	text101
 17607  1DBF                     __ptext101:	
 17608 ;; *************** function _wr1RegCompleteHandler *****************
 17609 ;; Defined at:
 17610 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 17611 ;; Parameters:    Size  Location     Type
 17612 ;;  p               1    9[COMMON] PTR void 
 17613 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17614 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17615 ;; Auto vars:     Size  Location     Type
 17616 ;;		None
 17617 ;; Return value:  Size  Location     Type
 17618 ;;                  1    wreg      enum E97
 17619 ;; Registers used:
 17620 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17621 ;; Tracked objects:
 17622 ;;		On entry : 0/0
 17623 ;;		On exit  : 0/0
 17624 ;;		Unchanged: 0/0
 17625 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17626 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17629 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17630 ;;Total ram usage:        1 bytes
 17631 ;; Hardware stack levels used:    1
 17632 ;; Hardware stack levels required when called:    2
 17633 ;; This function calls:
 17634 ;;		_i2c_setBuffer
 17635 ;;		_i2c_setDataCompleteCallback
 17636 ;; This function is called by:
 17637 ;;		_i2c_write1ByteRegister
 17638 ;;		_do_I2C_DO_ADDRESS_NACK
 17639 ;;		_do_I2C_TX
 17640 ;;		_do_I2C_RX
 17641 ;;		_do_I2C_TX_EMPTY
 17642 ;; This function uses a non-reentrant model
 17643 ;;
 17644                           
 17645                           
 17646                           ;psect for function _wr1RegCompleteHandler
 17647  1DBF                     _wr1RegCompleteHandler:	
 17648                           
 17649                           ;i2c_simple_master.c: 33: i2c_setBuffer(p,1);
 17650                           
 17651                           ;incstack = 0
 17652                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 17653  1DBF  3001               	movlw	1
 17654  1DC0  00F0               	movwf	i2c_setBuffer@bufferSize
 17655  1DC1  3000               	movlw	0
 17656  1DC2  00F1               	movwf	i2c_setBuffer@bufferSize+1
 17657  1DC3  0879               	movf	wr1RegCompleteHandler@p,w
 17658  1DC4  3188  2000  319D   	fcall	_i2c_setBuffer
 17659                           
 17660                           ;i2c_simple_master.c: 34: i2c_setDataCompleteCallback((0),(0));
 17661  1DC7  3000               	movlw	0
 17662  1DC8  00F5               	movwf	i2c_setDataCompleteCallback@cb
 17663  1DC9  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 17664  1DCA  01F7               	clrf	i2c_setDataCompleteCallback@p
 17665  1DCB  319D  2567         	fcall	_i2c_setDataCompleteCallback
 17666                           
 17667                           ;i2c_simple_master.c: 35: return i2c_continue;
 17668  1DCD  3004               	movlw	4
 17669  1DCE  0008               	return
 17670  1DCF                     __end_of_wr1RegCompleteHandler:	
 17671                           
 17672                           	psect	text102
 17673  0002                     __ptext102:	
 17674 ;; *************** function _i2c_restartWrite *****************
 17675 ;; Defined at:
 17676 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
 17677 ;; Parameters:    Size  Location     Type
 17678 ;;  p               1    9[COMMON] PTR void 
 17679 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17680 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17681 ;; Auto vars:     Size  Location     Type
 17682 ;;		None
 17683 ;; Return value:  Size  Location     Type
 17684 ;;                  1    wreg      enum E96
 17685 ;; Registers used:
 17686 ;;		wreg
 17687 ;; Tracked objects:
 17688 ;;		On entry : 0/0
 17689 ;;		On exit  : 0/0
 17690 ;;		Unchanged: 0/0
 17691 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17692 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17695 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17696 ;;Total ram usage:        1 bytes
 17697 ;; Hardware stack levels used:    1
 17698 ;; This function calls:
 17699 ;;		Nothing
 17700 ;; This function is called by:
 17701 ;;		_i2c_write1ByteRegister
 17702 ;;		_i2c_writeNBytes
 17703 ;;		_i2c_read1ByteRegister
 17704 ;;		_i2c_read2ByteRegister
 17705 ;;		_i2c_write2ByteRegister
 17706 ;;		_i2c_readDataBlock
 17707 ;;		_do_I2C_DO_ADDRESS_NACK
 17708 ;;		_do_I2C_TX
 17709 ;;		_do_I2C_RX
 17710 ;;		_do_I2C_TX_EMPTY
 17711 ;; This function uses a non-reentrant model
 17712 ;;
 17713                           
 17714                           
 17715                           ;psect for function _i2c_restartWrite
 17716  0002                     _i2c_restartWrite:	
 17717                           
 17718                           ;i2c_types.c: 37: return i2c_restart_write;
 17719                           
 17720                           ;incstack = 0
 17721                           ; Regs used in _i2c_restartWrite: [wreg]
 17722  0002  3003               	movlw	3
 17723  0003  0008               	return
 17724  0004                     __end_of_i2c_restartWrite:	
 17725                           
 17726                           	psect	text103
 17727  1CFF                     __ptext103:	
 17728 ;; *************** function _returnReset *****************
 17729 ;; Defined at:
 17730 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 17731 ;; Parameters:    Size  Location     Type
 17732 ;;  p               1    9[COMMON] PTR void 
 17733 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17734 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17735 ;; Auto vars:     Size  Location     Type
 17736 ;;		None
 17737 ;; Return value:  Size  Location     Type
 17738 ;;                  1    wreg      enum E2181
 17739 ;; Registers used:
 17740 ;;		wreg
 17741 ;; Tracked objects:
 17742 ;;		On entry : 0/0
 17743 ;;		On exit  : 0/0
 17744 ;;		Unchanged: 0/0
 17745 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17746 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17749 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17750 ;;Total ram usage:        1 bytes
 17751 ;; Hardware stack levels used:    1
 17752 ;; This function calls:
 17753 ;;		Nothing
 17754 ;; This function is called by:
 17755 ;;		_i2c_open
 17756 ;;		_do_I2C_DO_ADDRESS_NACK
 17757 ;;		_do_I2C_TX
 17758 ;;		_do_I2C_RX
 17759 ;;		_do_I2C_TX_EMPTY
 17760 ;; This function uses a non-reentrant model
 17761 ;;
 17762                           
 17763                           
 17764                           ;psect for function _returnReset
 17765  1CFF                     _returnReset:	
 17766                           
 17767                           ;i2c_master.c: 450: return i2c_reset_link;
 17768                           
 17769                           ;incstack = 0
 17770                           ; Regs used in _returnReset: [wreg]
 17771  1CFF  3005               	movlw	5
 17772  1D00  0008               	return
 17773  1D01                     __end_of_returnReset:	
 17774                           
 17775                           	psect	text104
 17776  1CFD                     __ptext104:	
 17777 ;; *************** function _returnStop *****************
 17778 ;; Defined at:
 17779 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 17780 ;; Parameters:    Size  Location     Type
 17781 ;;  p               1    9[COMMON] PTR void 
 17782 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17783 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17784 ;; Auto vars:     Size  Location     Type
 17785 ;;		None
 17786 ;; Return value:  Size  Location     Type
 17787 ;;                  1    wreg      enum E2181
 17788 ;; Registers used:
 17789 ;;		wreg
 17790 ;; Tracked objects:
 17791 ;;		On entry : 0/0
 17792 ;;		On exit  : 0/0
 17793 ;;		Unchanged: 0/0
 17794 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17795 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17798 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17799 ;;Total ram usage:        1 bytes
 17800 ;; Hardware stack levels used:    1
 17801 ;; This function calls:
 17802 ;;		Nothing
 17803 ;; This function is called by:
 17804 ;;		_setCallBack
 17805 ;;		_i2c_open
 17806 ;;		_do_I2C_DO_ADDRESS_NACK
 17807 ;;		_do_I2C_TX
 17808 ;;		_do_I2C_RX
 17809 ;;		_do_I2C_TX_EMPTY
 17810 ;; This function uses a non-reentrant model
 17811 ;;
 17812                           
 17813                           
 17814                           ;psect for function _returnStop
 17815  1CFD                     _returnStop:	
 17816                           
 17817                           ;i2c_master.c: 445: return i2c_stop;
 17818                           
 17819                           ;incstack = 0
 17820                           ; Regs used in _returnStop: [wreg]
 17821  1CFD  3001               	movlw	1
 17822  1CFE  0008               	return
 17823  1CFF                     __end_of_returnStop:	
 17824                           
 17825                           	psect	text105
 17826  1DAF                     __ptext105:	
 17827 ;; *************** function _wr2RegCompleteHandler *****************
 17828 ;; Defined at:
 17829 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 17830 ;; Parameters:    Size  Location     Type
 17831 ;;  p               1    9[COMMON] PTR void 
 17832 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17833 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17834 ;; Auto vars:     Size  Location     Type
 17835 ;;		None
 17836 ;; Return value:  Size  Location     Type
 17837 ;;                  1    wreg      enum E97
 17838 ;; Registers used:
 17839 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17840 ;; Tracked objects:
 17841 ;;		On entry : 0/0
 17842 ;;		On exit  : 0/0
 17843 ;;		Unchanged: 0/0
 17844 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17845 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17848 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17849 ;;Total ram usage:        1 bytes
 17850 ;; Hardware stack levels used:    1
 17851 ;; Hardware stack levels required when called:    2
 17852 ;; This function calls:
 17853 ;;		_i2c_setBuffer
 17854 ;;		_i2c_setDataCompleteCallback
 17855 ;; This function is called by:
 17856 ;;		_i2c_write2ByteRegister
 17857 ;;		_do_I2C_DO_ADDRESS_NACK
 17858 ;;		_do_I2C_TX
 17859 ;;		_do_I2C_RX
 17860 ;;		_do_I2C_TX_EMPTY
 17861 ;; This function uses a non-reentrant model
 17862 ;;
 17863                           
 17864                           
 17865                           ;psect for function _wr2RegCompleteHandler
 17866  1DAF                     _wr2RegCompleteHandler:	
 17867                           
 17868                           ;i2c_simple_master.c: 112: i2c_setBuffer(p,2);
 17869                           
 17870                           ;incstack = 0
 17871                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 17872  1DAF  3002               	movlw	2
 17873  1DB0  00F0               	movwf	i2c_setBuffer@bufferSize
 17874  1DB1  3000               	movlw	0
 17875  1DB2  00F1               	movwf	i2c_setBuffer@bufferSize+1
 17876  1DB3  0879               	movf	wr2RegCompleteHandler@p,w
 17877  1DB4  3188  2000  319D   	fcall	_i2c_setBuffer
 17878                           
 17879                           ;i2c_simple_master.c: 113: i2c_setDataCompleteCallback((0),(0));
 17880  1DB7  3000               	movlw	0
 17881  1DB8  00F5               	movwf	i2c_setDataCompleteCallback@cb
 17882  1DB9  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 17883  1DBA  01F7               	clrf	i2c_setDataCompleteCallback@p
 17884  1DBB  319D  2567         	fcall	_i2c_setDataCompleteCallback
 17885                           
 17886                           ;i2c_simple_master.c: 114: return i2c_continue;
 17887  1DBD  3004               	movlw	4
 17888  1DBE  0008               	return
 17889  1DBF                     __end_of_wr2RegCompleteHandler:	
 17890                           
 17891                           	psect	text106
 17892  1D67                     __ptext106:	
 17893 ;; *************** function _i2c_setDataCompleteCallback *****************
 17894 ;; Defined at:
 17895 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
 17896 ;; Parameters:    Size  Location     Type
 17897 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 17898 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 17899 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
 17900 ;;  p               1    7[COMMON] PTR void 
 17901 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17902 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17903 ;; Auto vars:     Size  Location     Type
 17904 ;;		None
 17905 ;; Return value:  Size  Location     Type
 17906 ;;                  1    wreg      void 
 17907 ;; Registers used:
 17908 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17909 ;; Tracked objects:
 17910 ;;		On entry : 0/0
 17911 ;;		On exit  : 0/0
 17912 ;;		Unchanged: 0/0
 17913 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17914 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17916 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17917 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17918 ;;Total ram usage:        4 bytes
 17919 ;; Hardware stack levels used:    1
 17920 ;; Hardware stack levels required when called:    1
 17921 ;; This function calls:
 17922 ;;		_setCallBack
 17923 ;; This function is called by:
 17924 ;;		_wr1RegCompleteHandler
 17925 ;;		_rd1RegCompleteHandler
 17926 ;;		_rd2RegCompleteHandler
 17927 ;;		_wr2RegCompleteHandler
 17928 ;;		_rdBlkRegCompleteHandler
 17929 ;;		_i2c_write1ByteRegister
 17930 ;;		_i2c_read1ByteRegister
 17931 ;;		_i2c_read2ByteRegister
 17932 ;;		_i2c_write2ByteRegister
 17933 ;;		_i2c_readDataBlock
 17934 ;; This function uses a non-reentrant model
 17935 ;;
 17936                           
 17937                           
 17938                           ;psect for function _i2c_setDataCompleteCallback
 17939  1D67                     _i2c_setDataCompleteCallback:	
 17940                           
 17941                           ;i2c_master.c: 91: setCallBack(i2c_dataComplete,cb,p);
 17942                           
 17943                           ;incstack = 0
 17944                           ; Regs used in _i2c_setDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 17945  1D67  0876               	movf	i2c_setDataCompleteCallback@cb+1,w
 17946  1D68  00F1               	movwf	setCallBack@cb+1
 17947  1D69  0875               	movf	i2c_setDataCompleteCallback@cb,w
 17948  1D6A  00F0               	movwf	setCallBack@cb
 17949  1D6B  0877               	movf	i2c_setDataCompleteCallback@p,w
 17950  1D6C  00F8               	movwf	??_i2c_setDataCompleteCallback
 17951  1D6D  0878               	movf	??_i2c_setDataCompleteCallback,w
 17952  1D6E  00F2               	movwf	setCallBack@p
 17953  1D6F  3000               	movlw	0
 17954  1D70  3190  205B         	fcall	_setCallBack
 17955  1D72  0008               	return
 17956  1D73                     __end_of_i2c_setDataCompleteCallback:	
 17957                           
 17958                           	psect	text107
 17959  105B                     __ptext107:	
 17960 ;; *************** function _setCallBack *****************
 17961 ;; Defined at:
 17962 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
 17963 ;; Parameters:    Size  Location     Type
 17964 ;;  idx             1    wreg     enum E2365
 17965 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
 17966 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 17967 ;;		 -> wr1RegCompleteHandler(1), i2c_restartWrite(1), Absolute function(1), 
 17968 ;;  p               1    2[COMMON] PTR void 
 17969 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17970 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17971 ;; Auto vars:     Size  Location     Type
 17972 ;;  idx             1    4[COMMON] enum E2365
 17973 ;; Return value:  Size  Location     Type
 17974 ;;                  1    wreg      void 
 17975 ;; Registers used:
 17976 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17977 ;; Tracked objects:
 17978 ;;		On entry : 0/0
 17979 ;;		On exit  : 0/0
 17980 ;;		Unchanged: 0/0
 17981 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17982 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17983 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17984 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17985 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17986 ;;Total ram usage:        5 bytes
 17987 ;; Hardware stack levels used:    1
 17988 ;; This function calls:
 17989 ;;		Nothing
 17990 ;; This function is called by:
 17991 ;;		_i2c_setDataCompleteCallback
 17992 ;;		_i2c_setWriteCollisionCallback
 17993 ;;		_i2c_setAddressNACKCallback
 17994 ;;		_i2c_setDataNACKCallback
 17995 ;;		_i2c_setTimeOutCallback
 17996 ;; This function uses a non-reentrant model
 17997 ;;
 17998                           
 17999                           
 18000                           ;psect for function _setCallBack
 18001  105B                     _setCallBack:	
 18002                           
 18003                           ;incstack = 0
 18004                           ; Regs used in _setCallBack: [wreg+fsr1l+fsr1h+status,2+status,0]
 18005                           ;setCallBack@idx stored from wreg
 18006  105B  00F4               	movwf	setCallBack@idx
 18007                           
 18008                           ;i2c_master.c: 455: if(cb)
 18009  105C  0870               	movf	setCallBack@cb,w
 18010  105D  0471               	iorwf	setCallBack@cb+1,w
 18011  105E  1903               	btfsc	3,2
 18012  105F  2873               	goto	i1l5182
 18013                           
 18014                           ;i2c_master.c: 456: {
 18015                           ;i2c_master.c: 457: i2c_status.callbackTable[idx] = cb;
 18016  1060  3574               	lslf	setCallBack@idx,w
 18017  1061  3E2B               	addlw	(low ((_i2c_status| (0+512)+11)))& (0+255)
 18018  1062  0086               	movwf	6
 18019  1063  3002               	movlw	2	; select bank4/5
 18020  1064  0087               	movwf	7
 18021  1065  0870               	movf	setCallBack@cb,w
 18022  1066  3FC0               	movwi [0]fsr1
 18023  1067  0871               	movf	setCallBack@cb+1,w
 18024  1068  3FC1               	movwi [1]fsr1
 18025                           
 18026                           ;i2c_master.c: 458: i2c_status.callbackPayload[idx] = p;
 18027  1069  0872               	movf	setCallBack@p,w
 18028  106A  00F3               	movwf	??_setCallBack
 18029  106B  0874               	movf	setCallBack@idx,w
 18030  106C  3E37               	addlw	(low ((_i2c_status| (0+512)+23)))& (0+255)
 18031  106D  0086               	movwf	6
 18032  106E  3002               	movlw	2	; select bank4/5
 18033  106F  0087               	movwf	7
 18034  1070  0873               	movf	??_setCallBack,w
 18035  1071  0081               	movwf	1
 18036                           
 18037                           ;i2c_master.c: 459: }
 18038  1072  0008               	return
 18039  1073                     i1l5182:	
 18040                           
 18041                           ;i2c_master.c: 460: else
 18042                           ;i2c_master.c: 461: {
 18043                           ;i2c_master.c: 462: i2c_status.callbackTable[idx] = returnStop;
 18044  1073  3574               	lslf	setCallBack@idx,w
 18045  1074  3E2B               	addlw	(low ((_i2c_status| (0+512)+11)))& (0+255)
 18046  1075  0086               	movwf	6
 18047  1076  3002               	movlw	2	; select bank4/5
 18048  1077  0087               	movwf	7
 18049  1078  30FD               	movlw	low _returnStop
 18050  1079  3FC0               	movwi [0]fsr1
 18051  107A  301C               	movlw	high _returnStop
 18052  107B  3FC1               	movwi [1]fsr1
 18053                           
 18054                           ;i2c_master.c: 463: i2c_status.callbackPayload[idx] = (0);
 18055  107C  0874               	movf	setCallBack@idx,w
 18056  107D  3E37               	addlw	(low ((_i2c_status| (0+512)+23)))& (0+255)
 18057  107E  0086               	movwf	6
 18058  107F  3002               	movlw	2	; select bank4/5
 18059  1080  0087               	movwf	7
 18060  1081  0181               	clrf	1
 18061  1082  0008               	return
 18062  1083                     __end_of_setCallBack:	
 18063                           
 18064                           	psect	text108
 18065  0800                     __ptext108:	
 18066 ;; *************** function _i2c_setBuffer *****************
 18067 ;; Defined at:
 18068 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 18069 ;; Parameters:    Size  Location     Type
 18070 ;;  buffer          1    wreg     PTR void 
 18071 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 18072 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 18073 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 18074 ;;  bufferSize      2    0[COMMON] unsigned int 
 18075 ;; Auto vars:     Size  Location     Type
 18076 ;;  buffer          1    3[COMMON] PTR void 
 18077 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 18078 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 18079 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 18080 ;; Return value:  Size  Location     Type
 18081 ;;                  1    wreg      void 
 18082 ;; Registers used:
 18083 ;;		wreg
 18084 ;; Tracked objects:
 18085 ;;		On entry : 0/0
 18086 ;;		On exit  : 0/0
 18087 ;;		Unchanged: 0/0
 18088 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18089 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18090 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18091 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18092 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18093 ;;Total ram usage:        4 bytes
 18094 ;; Hardware stack levels used:    1
 18095 ;; This function calls:
 18096 ;;		Nothing
 18097 ;; This function is called by:
 18098 ;;		_wr1RegCompleteHandler
 18099 ;;		_rd1RegCompleteHandler
 18100 ;;		_rd2RegCompleteHandler
 18101 ;;		_wr2RegCompleteHandler
 18102 ;;		_rdBlkRegCompleteHandler
 18103 ;;		_i2c_write1ByteRegister
 18104 ;;		_i2c_writeNBytes
 18105 ;;		_i2c_read1ByteRegister
 18106 ;;		_i2c_read2ByteRegister
 18107 ;;		_i2c_write2ByteRegister
 18108 ;;		_i2c_readDataBlock
 18109 ;;		_i2c_readNBytes
 18110 ;; This function uses a non-reentrant model
 18111 ;;
 18112                           
 18113                           
 18114                           ;psect for function _i2c_setBuffer
 18115  0800                     _i2c_setBuffer:	
 18116                           
 18117                           ;incstack = 0
 18118                           ; Regs used in _i2c_setBuffer: [wreg]
 18119                           ;i2c_setBuffer@buffer stored from wreg
 18120  0800  00F3               	movwf	i2c_setBuffer@buffer
 18121                           
 18122                           ;i2c_master.c: 186: if(i2c_status.bufferFree)
 18123  0801  0024               	movlb	4	; select bank4
 18124  0802  1D20               	btfss	_i2c_status^(0+512),2
 18125  0803  0008               	return
 18126                           
 18127                           ;i2c_master.c: 187: {
 18128                           ;i2c_master.c: 188: i2c_status.data_ptr = buffer;
 18129  0804  0873               	movf	i2c_setBuffer@buffer,w
 18130  0805  00F2               	movwf	??_i2c_setBuffer
 18131  0806  0872               	movf	??_i2c_setBuffer,w
 18132  0807  00A2               	movwf	(low ((_i2c_status| (0+512)+2)))^0
 18133                           
 18134                           ;i2c_master.c: 189: i2c_status.data_length = bufferSize;
 18135  0808  0871               	movf	i2c_setBuffer@bufferSize+1,w
 18136  0809  00A4               	movwf	((_i2c_status+1)^(0+512)+3)
 18137  080A  0870               	movf	i2c_setBuffer@bufferSize,w
 18138  080B  00A3               	movwf	(_i2c_status^(0+512)+3)
 18139                           
 18140                           ;i2c_master.c: 190: i2c_status.bufferFree = 0;
 18141  080C  1120               	bcf	_i2c_status^(0+512),2
 18142  080D  0008               	return
 18143  080E                     __end_of_i2c_setBuffer:	
 18144                           
 18145                           	psect	text109
 18146  1D04                     __ptext109:	
 18147 ;; *************** function _i2c_driver_stop *****************
 18148 ;; Defined at:
 18149 ;;		line 156 in file "mcc_generated_files/i2c_driver.c"
 18150 ;; Parameters:    Size  Location     Type
 18151 ;;		None
 18152 ;; Auto vars:     Size  Location     Type
 18153 ;;		None
 18154 ;; Return value:  Size  Location     Type
 18155 ;;                  1    wreg      void 
 18156 ;; Registers used:
 18157 ;;		None
 18158 ;; Tracked objects:
 18159 ;;		On entry : 0/0
 18160 ;;		On exit  : 0/0
 18161 ;;		Unchanged: 0/0
 18162 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18167 ;;Total ram usage:        0 bytes
 18168 ;; Hardware stack levels used:    1
 18169 ;; This function calls:
 18170 ;;		Nothing
 18171 ;; This function is called by:
 18172 ;;		_do_I2C_SEND_STOP
 18173 ;; This function uses a non-reentrant model
 18174 ;;
 18175                           
 18176                           
 18177                           ;psect for function _i2c_driver_stop
 18178  1D04                     _i2c_driver_stop:	
 18179                           
 18180                           ;i2c_driver.c: 158: SSP1CON2bits.PEN = 1;
 18181                           
 18182                           ;incstack = 0
 18183                           ; Regs used in _i2c_driver_stop: []
 18184  1D04  0024               	movlb	4	; select bank4
 18185  1D05  1516               	bsf	22,2	;volatile
 18186  1D06  0008               	return
 18187  1D07                     __end_of_i2c_driver_stop:	
 18188                           
 18189                           	psect	text110
 18190  1D01                     __ptext110:	
 18191 ;; *************** function _i2c_driver_restart *****************
 18192 ;; Defined at:
 18193 ;;		line 151 in file "mcc_generated_files/i2c_driver.c"
 18194 ;; Parameters:    Size  Location     Type
 18195 ;;		None
 18196 ;; Auto vars:     Size  Location     Type
 18197 ;;		None
 18198 ;; Return value:  Size  Location     Type
 18199 ;;                  1    wreg      void 
 18200 ;; Registers used:
 18201 ;;		None
 18202 ;; Tracked objects:
 18203 ;;		On entry : 0/0
 18204 ;;		On exit  : 0/0
 18205 ;;		Unchanged: 0/0
 18206 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18211 ;;Total ram usage:        0 bytes
 18212 ;; Hardware stack levels used:    1
 18213 ;; This function calls:
 18214 ;;		Nothing
 18215 ;; This function is called by:
 18216 ;;		_do_I2C_SEND_RESTART_READ
 18217 ;;		_do_I2C_SEND_RESTART_WRITE
 18218 ;;		_do_I2C_SEND_RESTART
 18219 ;; This function uses a non-reentrant model
 18220 ;;
 18221                           
 18222                           
 18223                           ;psect for function _i2c_driver_restart
 18224  1D01                     _i2c_driver_restart:	
 18225                           
 18226                           ;i2c_driver.c: 153: SSP1CON2bits.RSEN = 1;
 18227                           
 18228                           ;incstack = 0
 18229                           ; Regs used in _i2c_driver_restart: []
 18230  1D01  0024               	movlb	4	; select bank4
 18231  1D02  1496               	bsf	22,1	;volatile
 18232  1D03  0008               	return
 18233  1D04                     __end_of_i2c_driver_restart:	
 18234                           
 18235                           	psect	text111
 18236  1D19                     __ptext111:	
 18237 ;; *************** function _i2c_driver_sendACK *****************
 18238 ;; Defined at:
 18239 ;;		line 196 in file "mcc_generated_files/i2c_driver.c"
 18240 ;; Parameters:    Size  Location     Type
 18241 ;;		None
 18242 ;; Auto vars:     Size  Location     Type
 18243 ;;		None
 18244 ;; Return value:  Size  Location     Type
 18245 ;;                  1    wreg      void 
 18246 ;; Registers used:
 18247 ;;		None
 18248 ;; Tracked objects:
 18249 ;;		On entry : 0/0
 18250 ;;		On exit  : 0/0
 18251 ;;		Unchanged: 0/0
 18252 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18257 ;;Total ram usage:        0 bytes
 18258 ;; Hardware stack levels used:    1
 18259 ;; This function calls:
 18260 ;;		Nothing
 18261 ;; This function is called by:
 18262 ;;		_do_I2C_DO_ACK
 18263 ;;		_do_I2C_RX
 18264 ;; This function uses a non-reentrant model
 18265 ;;
 18266                           
 18267                           
 18268                           ;psect for function _i2c_driver_sendACK
 18269  1D19                     _i2c_driver_sendACK:	
 18270                           
 18271                           ;i2c_driver.c: 198: SSP1CON2bits.ACKDT = 0;
 18272                           
 18273                           ;incstack = 0
 18274                           ; Regs used in _i2c_driver_sendACK: []
 18275  1D19  0024               	movlb	4	; select bank4
 18276  1D1A  1296               	bcf	22,5	;volatile
 18277                           
 18278                           ;i2c_driver.c: 199: SSP1CON2bits.ACKEN = 1;
 18279  1D1B  1616               	bsf	22,4	;volatile
 18280  1D1C  0008               	return
 18281  1D1D                     __end_of_i2c_driver_sendACK:	
 18282  007E                     btemp	set	126	;btemp
 18283  007E                     int$flags	set	126
 18284  007E                     wtemp0	set	126


Data Sizes:
    Strings     7
    Constant    175
    Data        32
    BSS         260
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0h           16     16      16
    BANK1            48     35      42
    BANK2             0      0       0
    BANK3            64      1      64
    BANK4            80      5      67
    BANK5            80      0      32
    BANK6            80      0      64
    BANK7            80      0      64
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(1) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    do_I2C_TX$3677$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    do_I2C_RX$3683$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    do_I2C_TX_EMPTY$3689$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_ISR$3695	PTR const FTN()enum E2347 size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    do_I2C_TX_EMPTY$3694	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    do_I2C_TX_EMPTY$3689	PTR FTN(PTR void ,)enum E2181 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), returnReset(), returnStop(), 
		 -> Absolute function(), 

    do_I2C_RX$3688	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    do_I2C_RX$3683	PTR FTN(PTR void ,)enum E2181 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), returnReset(), returnStop(), 
		 -> Absolute function(), 

    do_I2C_TX$3682	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    do_I2C_TX$3677	PTR FTN(PTR void ,)enum E2181 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), returnReset(), returnStop(), 
		 -> Absolute function(), 

    returnStop@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    returnReset@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_restartWrite@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S2382$11$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    __builtin_memcpy$1	PTR const void  size(2) Largest target is 4096
		 -> CtrlTrfData(BANK0h[8]), RAM(DATA[4096]), SetupPkt(ABS[8]), 

    __builtin_memcpy$0	PTR void  size(1) Largest target is 8
		 -> SetupPkt(ABS[8]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), USTATcopy(BANK3[1]), USBActiveConfiguration(BANK3[1]), BDT(ABS[48]), 
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[4]), STR_1(CODE[3]), 

    strncmp@s1	PTR const unsigned char  size(1) Largest target is 64
		 -> readBuffer(BANK6[64]), NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[4]), STR_1(CODE[3]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[4]), STR_1(CODE[3]), 

    strchr@ptr	PTR const unsigned char  size(1) Largest target is 64
		 -> readBuffer(BANK6[64]), NULL(NULL[0]), 

    sp__strchr	PTR unsigned char  size(1) Largest target is 64
		 -> readBuffer(BANK6[64]), NULL(NULL[0]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[4]), STR_1(CODE[3]), 

    strstr@s1	PTR const unsigned char  size(1) Largest target is 64
		 -> readBuffer(BANK6[64]), NULL(NULL[0]), 

    strcpy@from	PTR const unsigned char  size(1) Largest target is 64
		 -> readBuffer(BANK6[64]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 64
		 -> writeBuffer(BANK7[64]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 64
		 -> writeBuffer(BANK7[64]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(ABS[48]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(ABS[48]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 64
		 -> writeBuffer(BANK7[64]), 

    sp__strstr	PTR unsigned char  size(1) Largest target is 64
		 -> readBuffer(BANK6[64]), NULL(NULL[0]), 

    d.data	PTR unsigned char  size(1) Largest target is 0

    S2907$data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@cb	PTR FTN(PTR void ,)enum E2181 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), 

    fsmStateTable	PTR const FTN()enum E2347[16] size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E2181 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), 

    S2382$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S2382$callbackTable	PTR FTN(PTR void ,)enum E2181[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), returnReset(), returnStop(), 
		 -> Absolute function(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E2181[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), returnReset(), returnStop(), 
		 -> Absolute function(), 

    S2382$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    sp____builtin_memcpy	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(ABS[48]), 

    USBStdSetCfgHandler@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    pDst	PTR volatile unsigned char  size(1) Largest target is 8
		 -> CtrlTrfData(BANK0h[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(1) Largest target is 48
		 -> BDT(ABS[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(1) Largest target is 48
		 -> BDT(ABS[48]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAM[64]), NULL(NULL[0]), cdc_data_rx(BIGRAM[64]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    USBDeviceInit@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[26]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    putrsUSBUSART@data	PTR const unsigned char  size(1) Largest target is 64
		 -> writeBuffer(BANK7[64]), 

    putrsUSBUSART@pData	PTR const unsigned char  size(1) Largest target is 64
		 -> writeBuffer(BANK7[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(1) Largest target is 64
		 -> readBuffer(BANK6[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    S547$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S537$wRam	PTR unsigned int  size(1) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(1) Largest target is 0

    S537$bRam	PTR unsigned char  size(1) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S512$wRom	PTR const unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S512$wRam	PTR unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S512$bRom	PTR const unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S512$bRam	PTR unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S279_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S279_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S279_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S279_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    i2c_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_ISR(), Absolute function(), 

    i2c_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_busCollisionISR(), Absolute function(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    i1_USBCtrlEPServiceComplete->i1_USBCtrlEPAllowDataStage
    i1_USBCtrlEPAllowDataStage->i1_USBCtrlTrfTxService
    i1_USER_USB_CALLBACK_EVENT_HANDLER->i1_CDCInitEP
    i1_CDCInitEP->i1_USBEnableEndpoint
    i1_USBEnableEndpoint->i1_USBConfigureEndpoint
    i1_USBCtrlTrfOutHandler->i1_USBCtrlTrfRxService
    i1_USBCtrlTrfRxService->i1_USBCtrlEPAllowStatusStage
    i1_USBCtrlTrfInHandler->i1_USBCtrlTrfTxService
    _i2c_ISR->_do_I2C_TX
    _do_I2C_TX->_i2c_driver_TXData
    _do_I2C_TX->_i2c_driver_isNACK
    _do_I2C_SEND_ADR_WRITE->_i2c_driver_TXData
    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback
    _i2c_setDataCompleteCallback->_setCallBack

Critical Paths under _main in BANK0h

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0h

    _INTERRUPT_InterruptManager->i1_USBDeviceTasks
    i1_USBWakeFromSuspend->i1_USER_USB_CALLBACK_EVENT_HANDLER
    i1_USBSuspend->i1_USER_USB_CALLBACK_EVENT_HANDLER
    i1_USBCtrlEPService->i1_USBCtrlTrfSetupHandler
    i1_USBCtrlTrfSetupHandler->i1_USBCheckStdRequest
    i1_USBCheckStdRequest->i1_USBStdFeatureReqHandler
    i1_USBStdSetCfgHandler->i1_USER_USB_CALLBACK_EVENT_HANDLER
    i1_USBStdFeatureReqHandler->i1_USER_USB_CALLBACK_EVENT_HANDLER

Critical Paths under _main in BANK1

    _UserApplication->_strstr
    _strstr->_strncmp
    _strncmp->_strlen
    _getsUSBUSART->_USBTransferOnePacket
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPService->_USBCtrlTrfSetupHandler
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCtrlEPServiceComplete->_USBCtrlEPAllowDataStage
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_CDCInitEP
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USBCtrlEPAllowStatusStage
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _SYSTEM_Initialize->_USBDeviceInit
    _CDCTxService->_USBTransferOnePacket

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    _INTERRUPT_InterruptManager->i1_USBDeviceTasks
    i1_USBDeviceTasks->i1_USBCtrlEPService

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_USBDeviceTasks

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    _main->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   55546
                          _CDCInitEP
                       _CDCTxService
                  _SYSTEM_Initialize
                     _USBDeviceTasks
                    _UserApplication
 ---------------------------------------------------------------------------------
 (1) _UserApplication                                      4     4      0    3882
                                             25 BANK1      3     3      0
                       _getsUSBUSART
                      _putrsUSBUSART
                             _strcpy
                             _strstr
 ---------------------------------------------------------------------------------
 (2) _strstr                                               6     4      2    1167
                                             19 BANK1      6     4      2
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              7     3      4     348
                                             12 BANK1      7     3      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) _strlen                                               6     4      2     179
                                              6 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (3) _strchr                                               3     1      2     213
                                              6 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               4     3      1     200
                                              6 BANK1      4     3      1
 ---------------------------------------------------------------------------------
 (2) _putrsUSBUSART                                        4     4      0     149
                                              6 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (2) _getsUSBUSART                                         4     3      1    2332
                                             17 BANK1      4     3      1
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       3     3      0   45929
                                              0 BANK3      1     1      0
                                              3 BANK4      2     2      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   1     1      0    6196
                                             26 BANK1      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           1     1      0    6196
                                             26 BANK1      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      1     1      0       0
                                              6 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBIncrement1msInternalTimers                        1     1      0       0
                                              6 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     3     3      0   26877
                                              0 BANK4      3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               1     1      0   26540
                                             34 BANK1      1     1      0
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             2     2      0     136
                                             11 BANK1      2     2      0
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              2     2      0     136
                                              9 BANK1      2     2      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   1     1      0   20208
                                             33 BANK1      1     1      0
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  5     5      0    7070
                                             26 BANK1      5     5      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6     639
                                              6 BANK1      8     2      6
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               3     3      0      68
                                              6 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  3     3      0       0
                                              6 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              7     7      0    6874
                                             26 BANK1      7     7      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USER_USB_CALLBACK_EVENT_HANDLER                      6     0      6    6196
                                             20 BANK1      6     0      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (3) _USBCheckCDCRequest                                   1     1      0       0
                                              6 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (3) _CDCInitEP                                            1     1      0    3045
                                             19 BANK1      1     1      0
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBEnableEndpoint                                    6     5      1     952
                                             13 BANK1      6     5      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (5) _USBConfigureEndpoint                                 7     6      1     524
                                              6 BANK1      7     6      1
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 2     2      0     167
                                             12 BANK1      2     2      0
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  4     4      0     167
                                              8 BANK1      4     4      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            2     2      0       0
                                              6 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  3     3      0     170
                                              9 BANK1      3     3      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfTxService                                  3     3      0     136
                                              6 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     396
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        5     5      0     396
                                              6 BANK1      5     5      0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceAttach                                      1     1      0       0
                                              6 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CDCTxService                                         3     3      0    2294
                                             17 BANK1      3     3      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                11     7      4    2093
                                              6 BANK1     11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          1     1      0  103559
                                              5 BANK1      1     1      0
                   Absolute function *
                            _i2c_ISR *
                _i2c_busCollisionISR *
                   i1_USBDeviceTasks
 ---------------------------------------------------------------------------------
 (11) i1_USBDeviceTasks                                    3     3      0   13677
                                             15 BANK0h     1     1      0
                                              3 BANK1      2     2      0
        i1_USBCtrlEPAllowStatusStage
                 i1_USBCtrlEPService
                    i1_USBDeviceInit
    i1_USBIncrement1msInternalTimers
                  i1_USBStallHandler
                       i1_USBSuspend
               i1_USBWakeFromSuspend
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) i1_USBWakeFromSuspend                                1     1      0    1737
                                              6 BANK0h     1     1      0
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) i1_USBSuspend                                        1     1      0    1737
                                              6 BANK0h     1     1      0
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) i1_USBStallHandler                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) i1_USBIncrement1msInternalTimers                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) i1_USBDeviceInit                                     5     5      0     272
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (12) i1_USBCtrlEPService                                  3     3      0    8148
                                              0 BANK1      3     3      0
              i1_USBCtrlTrfInHandler
             i1_USBCtrlTrfOutHandler
           i1_USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (13) i1_USBCtrlTrfSetupHandler                            1     1      0    7919
                                             14 BANK0h     1     1      0
               i1_USBCheckStdRequest
         i1_USBCtrlEPServiceComplete
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (14) i1_USBCtrlEPServiceComplete                          2     2      0      92
                                              5 COMMON     2     2      0
          i1_USBCtrlEPAllowDataStage
        i1_USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) i1_USBCtrlEPAllowDataStage                           2     2      0      92
                                              3 COMMON     2     2      0
              i1_USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (14) i1_USBCheckStdRequest                                1     1      0    6090
                                             13 BANK0h     1     1      0
          i1_USBStdFeatureReqHandler
              i1_USBStdGetDscHandler
           i1_USBStdGetStatusHandler
              i1_USBStdSetCfgHandler
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) i1_USBStdSetCfgHandler                               5     5      0    2099
                                              6 BANK0h     5     5      0
  i1_USER_USB_CALLBACK_EVENT_HANDLER
                           i1_memset
 ---------------------------------------------------------------------------------
 (16) i1_memset                                            8     2      6     202
                                              0 COMMON     8     2      6
 ---------------------------------------------------------------------------------
 (15) i1_USBStdGetStatusHandler                            3     3      0      46
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (15) i1_USBStdGetDscHandler                               3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (15) i1_USBStdFeatureReqHandler                           7     7      0    2208
                                              6 BANK0h     7     7      0
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) i1_USER_USB_CALLBACK_EVENT_HANDLER                   6     0      6    1737
                                              0 BANK0h     6     0      6
                        i1_CDCInitEP
               i1_USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (13) i1_USBCheckCDCRequest                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) i1_CDCInitEP                                         1     1      0     935
                                             13 COMMON     1     1      0
                i1_USBEnableEndpoint
             i1_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (14) i1_USBTransferOnePacket                             11     7      4     454
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (14) i1_USBEnableEndpoint                                 6     5      1     481
                                              7 COMMON     6     5      1
             i1_USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (15) i1_USBConfigureEndpoint                              7     6      1     274
                                              0 COMMON     7     6      1
 ---------------------------------------------------------------------------------
 (13) i1_USBCtrlTrfOutHandler                              2     2      0     114
                                              6 COMMON     2     2      0
              i1_USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (14) i1_USBCtrlTrfRxService                               4     4      0     114
                                              2 COMMON     4     4      0
        i1_USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) i1_USBCtrlEPAllowStatusStage                         2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (13) i1_USBCtrlTrfInHandler                               3     3      0     115
                                              3 COMMON     3     3      0
              i1_USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (16) i1_USBCtrlTrfTxService                               3     3      0      92
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (11) _i2c_busCollisionISR                                 0     0      0       0
       _i2c_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (12) _i2c_driver_clearBusCollision                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _i2c_ISR                                             1     1      0   89882
                                              4 COMMON     1     1      0
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                  _i2c_driver_isNACK
                      _mssp_clearIRQ
 ---------------------------------------------------------------------------------
 (12) _mssp_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _do_I2C_TX_EMPTY                                     1     1      0   22448
                                              0 COMMON     1     1      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
                        _mssp_setIRQ
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (13) _mssp_setIRQ                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _do_I2C_TX                                           3     3      0   22494
                                              1 COMMON     3     3      0
                   Absolute function *
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                  _i2c_driver_TXData
                  _i2c_driver_isNACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (12) _i2c_driver_isNACK                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _do_I2C_SEND_RESTART_WRITE                           0     0      0       0
                 _i2c_driver_restart
 ---------------------------------------------------------------------------------
 (13) _do_I2C_SEND_RESTART_READ                            0     0      0       0
                 _i2c_driver_restart
 ---------------------------------------------------------------------------------
 (12) _do_I2C_SEND_ADR_WRITE                               0     0      0      22
                  _i2c_driver_TXData
 ---------------------------------------------------------------------------------
 (12) _do_I2C_SEND_ADR_READ                                0     0      0      22
                  _i2c_driver_TXData
 ---------------------------------------------------------------------------------
 (13) _i2c_driver_TXData                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) _do_I2C_RX                                           1     1      0   22448
                                              0 COMMON     1     1      0
                   Absolute function *
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
               _i2c_driver_getRXData
                 _i2c_driver_sendACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (13) _i2c_driver_getRXData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _do_I2C_DO_NACK_STOP                                 0     0      0       0
                _i2c_driver_sendNACK
 ---------------------------------------------------------------------------------
 (13) _do_I2C_DO_NACK_RESTART                              0     0      0       0
                _i2c_driver_sendNACK
 ---------------------------------------------------------------------------------
 (14) _i2c_driver_sendNACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _do_I2C_RESET                                        0     0      0       0
                _i2c_driver_resetBus
 ---------------------------------------------------------------------------------
 (13) _i2c_driver_resetBus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _do_I2C_RCEN                                         0     0      0       0
                 _i2c_driver_startRX
 ---------------------------------------------------------------------------------
 (13) _i2c_driver_startRX                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _do_I2C_IDLE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _do_I2C_DO_ADDRESS_NACK                              1     1      0   22448
                                              0 COMMON     1     1      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (13) _wr2RegCompleteHandler                               1     0      1    4434
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (13) _wr1RegCompleteHandler                               1     0      1    4434
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (13) _returnStop                                          1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (13) _returnReset                                         1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (13) _rdBlkRegCompleteHandler                             1     0      1    4712
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (13) _rd2RegCompleteHandler                               1     0      1    4434
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (13) _rd1RegCompleteHandler                               1     0      1    4434
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) _i2c_setDataCompleteCallback                         4     1      3    2868
                                              5 COMMON     4     1      3
                        _setCallBack
 ---------------------------------------------------------------------------------
 (15) _setCallBack                                         5     2      3    1044
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (14) _i2c_setBuffer                                       4     2      2    1544
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (13) _i2c_restartWrite                                    1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (13) _do_I2C_SEND_STOP                                    0     0      0       0
                    _i2c_driver_stop
 ---------------------------------------------------------------------------------
 (14) _i2c_driver_stop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _do_I2C_SEND_RESTART                                 0     0      0       0
                 _i2c_driver_restart
 ---------------------------------------------------------------------------------
 (14) _i2c_driver_restart                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 (12) _do_I2C_DO_ACK                                       0     0      0       0
                 _i2c_driver_sendACK
 ---------------------------------------------------------------------------------
 (13) _i2c_driver_sendACK                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CDCInitEP
     _USBEnableEndpoint
       _USBConfigureEndpoint
     _USBTransferOnePacket
   _CDCTxService
     _USBTransferOnePacket
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _USBDeviceAttach
     _USBDeviceInit
     _WDT_Initialize
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _USBCheckCDCRequest
     _USBDeviceInit
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _USBCheckCDCRequest
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _USBCheckCDCRequest
     _USER_USB_CALLBACK_EVENT_HANDLER
       _CDCInitEP
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBTransferOnePacket
       _USBCheckCDCRequest
   _UserApplication
     _getsUSBUSART
       _USBTransferOnePacket
     _putrsUSBUSART
     _strcpy
     _strstr
       _strchr
       _strlen
       _strncmp
         _strlen (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _i2c_ISR *
     _do_I2C_DO_ACK *
       _i2c_driver_sendACK
     _do_I2C_DO_ADDRESS_NACK *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c_driver_restart
       _do_I2C_SEND_STOP *
         _i2c_driver_stop
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_DO_NACK_RESTART *
       _i2c_driver_sendNACK
     _do_I2C_DO_NACK_STOP *
       _i2c_driver_sendNACK
     _do_I2C_IDLE *
     _do_I2C_RCEN *
       _i2c_driver_startRX
     _do_I2C_RESET *
       _i2c_driver_resetBus
     _do_I2C_RX *
       Absolute function(Fake) *
       _do_I2C_DO_NACK_RESTART *
         _i2c_driver_sendNACK
       _do_I2C_DO_NACK_STOP *
         _i2c_driver_sendNACK
       _i2c_driver_getRXData *
       _i2c_driver_sendACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_SEND_ADR_READ *
       _i2c_driver_TXData
     _do_I2C_SEND_ADR_WRITE *
       _i2c_driver_TXData
     _do_I2C_SEND_RESTART *
       _i2c_driver_restart
     _do_I2C_SEND_RESTART_READ *
       _i2c_driver_restart
     _do_I2C_SEND_RESTART_WRITE *
       _i2c_driver_restart
     _do_I2C_SEND_STOP *
       _i2c_driver_stop
     _do_I2C_TX *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART_READ *
         _i2c_driver_restart
       _do_I2C_SEND_RESTART_WRITE *
         _i2c_driver_restart
       _do_I2C_SEND_STOP *
         _i2c_driver_stop
       _i2c_driver_TXData *
       _i2c_driver_isNACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_TX_EMPTY *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c_driver_restart
       _do_I2C_SEND_STOP *
         _i2c_driver_stop
       _i2c_restartWrite *
       _mssp_setIRQ *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _i2c_driver_isNACK *
     _mssp_clearIRQ *
   _i2c_busCollisionISR *
     _i2c_driver_clearBusCollision
   i1_USBDeviceTasks *
     i1_USBCtrlEPAllowStatusStage
     i1_USBCtrlEPService
       i1_USBCtrlTrfInHandler
         i1_USBCtrlTrfTxService
       i1_USBCtrlTrfOutHandler
         i1_USBCtrlTrfRxService
           i1_USBCtrlEPAllowStatusStage
       i1_USBCtrlTrfSetupHandler
         i1_USBCheckStdRequest
           i1_USBStdFeatureReqHandler
             i1_USER_USB_CALLBACK_EVENT_HANDLER
               i1_CDCInitEP
                 i1_USBEnableEndpoint
                   i1_USBConfigureEndpoint
                 i1_USBTransferOnePacket
               i1_USBCheckCDCRequest
           i1_USBStdGetDscHandler
           i1_USBStdGetStatusHandler
           i1_USBStdSetCfgHandler
             i1_USER_USB_CALLBACK_EVENT_HANDLER
               i1_CDCInitEP
                 i1_USBEnableEndpoint
                   i1_USBConfigureEndpoint
                 i1_USBTransferOnePacket
               i1_USBCheckCDCRequest
             i1_memset
           i1_USER_USB_CALLBACK_EVENT_HANDLER
             i1_CDCInitEP
               i1_USBEnableEndpoint
                 i1_USBConfigureEndpoint
               i1_USBTransferOnePacket
             i1_USBCheckCDCRequest
         i1_USBCtrlEPServiceComplete
           i1_USBCtrlEPAllowDataStage
             i1_USBCtrlTrfTxService
           i1_USBCtrlEPAllowStatusStage
         i1_USER_USB_CALLBACK_EVENT_HANDLER
           i1_CDCInitEP
             i1_USBEnableEndpoint
               i1_USBConfigureEndpoint
             i1_USBTransferOnePacket
           i1_USBCheckCDCRequest
     i1_USBDeviceInit
     i1_USBIncrement1msInternalTimers
     i1_USBStallHandler
     i1_USBSuspend
       i1_USER_USB_CALLBACK_EVENT_HANDLER
         i1_CDCInitEP
           i1_USBEnableEndpoint
             i1_USBConfigureEndpoint
           i1_USBTransferOnePacket
         i1_USBCheckCDCRequest
     i1_USBWakeFromSuspend
       i1_USER_USB_CALLBACK_EVENT_HANDLER
         i1_CDCInitEP
           i1_USBEnableEndpoint
             i1_USBConfigureEndpoint
           i1_USBTransferOnePacket
         i1_USBCheckCDCRequest
     i1_USER_USB_CALLBACK_EVENT_HANDLER
       i1_CDCInitEP
         i1_USBEnableEndpoint
           i1_USBConfigureEndpoint
         i1_USBTransferOnePacket
       i1_USBCheckCDCRequest

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0h           10      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0h              10     10      10       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               30     23      2A       7       87.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2                0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               40      1      40      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      5      43      13       83.8%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      20      15       40.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0      40      17       80.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0      40      19       80.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     16B      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     16B      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Mar 18 14:35:42 2018

                __end_of_i2c_driver_restart 1D04                                returnReset@p 0079  
                                _USB_SD_Ptr 18DF                  __end_of_i2c_driver_startRX 1D0A  
                                         pc 0002                                 __CFG_CP$OFF 0000  
                                        l58 1D93                        __size_of_do_I2C_IDLE 0005  
                       _do_I2C_SEND_RESTART 1D29                        __size_of_do_I2C_RCEN 0006  
                             _USBDeviceInit 057E                          __size_of_CDCInitEP 003E  
                               __CFG_LVP$ON 0000      i1USER_USB_CALLBACK_EVENT_HANDLER@event 0060  
      USER_USB_CALLBACK_EVENT_HANDLER@event 00B4      i1USER_USB_CALLBACK_EVENT_HANDLER@pdata 0062  
      USER_USB_CALLBACK_EVENT_HANDLER@pdata 00B6                                         l139 08D2  
                                       l403 036D                                         l244 1137  
                                       l404 03C7                                         l405 0376  
               __end_of_USBStdGetDscHandler 0C12                                         l442 1ED4  
                                       l603 17D5                                         l532 151B  
                                       l382 05C5                                         l535 1563  
                                       l480 0A3F                                         l536 1524  
                                       l537 1527                                         l393 0304  
                                       l467 0F11                                         l580 09A5  
                                       l628 0172                                         l495 064F  
                                       l399 0342                                         l592 17FF  
                                       l594 17A7                                         _BDT 0020  
                                       _RC3 0073                                         _UIE 0E92  
                                       _UIR 0E90                    i1_USBStdGetStatusHandler 14C2  
                                _USBSuspend 1EFF               i2c_setDataCompleteCallback@cb 0075  
                      USBStdSetCfgHandler@i 00BE                        USBStdSetCfgHandler@p 00BB  
                     __size_of_do_I2C_RESET 0007                                __CFG_BORV$LO 0000  
                                       wreg 0009                              _USBDeviceTasks 02E1  
                              __CFG_IESO$ON 0000                              _USBDeviceState 01E5  
                                      S8574 1891                       ??_USBCtrlTrfRxService 00A8  
                            ??_getsUSBUSART 00B2                    USBEnableEndpoint@options 00AD  
                   ??_rd2RegCompleteHandler 007A                  USBConfigureEndpoint@handle 00AC  
                                      l1582 1E17                                        l6212 1142  
                                      l8000 11DC                                        l6224 1157  
                                      l6216 1148                                        l8012 1207  
                                      l7400 1340                                        l8200 10CF  
                                      l6504 1EAD                                        l6178 1ED9  
                                      l8114 0612                                        l8042 0998  
                                      l8026 095A                                        l8202 10D1  
                                      l7420 0CA3                                        l8108 05EE  
                                      l8028 0960                                        l7412 1FEE  
                                      l8220 1675                                        l8140 1692  
                                      l8046 09AA                                        l8038 0987  
                                      l7510 1109                                        l8222 1678  
                                      l8150 16A9                                        l7440 0D14  
                                      l8400 055F                                        l7408 1FE6  
                                      l7512 110C                                        l8304 0365  
                                      l8152 16C9                                        l8144 16A7  
                                      l8402 0565                                        l8074 05AC  
                                      l8066 059F                                        l8058 058E  
                                      l8218 1672                                        l8170 1FBA  
                                      l8330 03AE                                        l8154 16DE  
                                      l6490 1266                                        l7428 0CB3  
                                      l8404 057B                                        l7516 110F  
                                      l8332 03BD                                        l8324 0395  
                                      l5940 1F2F                                        l6484 124B  
                                      l6492 127A                                        l7438 0CFC  
                                      l8086 05CA                                        l7534 0A36  
                                      l7470 0896                                        l7710 0BFF  
                                      l7702 0BDB                                        l7622 170D  
                                      l8254 02FE                                        l8246 02F1  
                                      l5950 136A                                        l8352 04CD  
                                      l8344 04C2                                        l7800 0133  
                                      l7712 0C02                                        l7704 0BDE  
                                      l8168 1FB1                                        l8280 0333  
                                      l5960 138B                                        l6496 1284  
                                      l8424 13C4                                        l7546 0A60  
                                      l7554 0A79                                        l7482 08B6  
                                      l7466 088F                                        l7458 0883  
                                      l7810 015D                                        l7650 0DC4  
                                      l7642 0DB3                                        l7626 1720  
                                      l8290 0348                                        l8274 031E  
                                      l5970 1E21                                        l5938 1F23  
                                      l5954 1382                                        l8450 1008  
                                      l8364 04F6                                        l7556 0A7D  
                                      l7564 0A96                                        l7900 065C  
                                      l7476 08A8                                        l7820 0179  
                                      l7812 0163                                        l7716 0C05  
                                      l7572 1E77                                        l7660 0DDA  
                                      l8268 0318                                        l8374 0513  
                                      l8382 052F                                        l8358 04ED  
                                      l7590 0AC3                                        l7902 0679  
                                      l7398 1337                                        l5958 134C  
                                      l8384 0534                                        l8392 0550  
                                      l7912 06AB                                        l7488 08C0  
                                      l7824 0199                                        l7728 1538  
                                      l7840 0EDB                                        l8296 034F  
                                      l8394 0554                                        l7914 06B8  
                                      l7826 01A2                                        l7690 0B9E  
                                      l7738 1557                                        l7682 0E21  
                                      l7666 0DEE                                        l7772 00C5  
                                      l7756 0092                                        l7844 0EDF  
                                      l7758 0094                                        l7694 0BA8  
                                      l7950 17C7                                        l7934 17AF  
                                      l7862 0F20                                        l7870 0F29  
                                      l8576 1118                                        l7784 0100  
                                      l7960 17E5                                        l7936 17B2  
                                      l8578 1132                                        l7794 0120  
                                      l7786 010D                                        l7778 00EA  
                                      l7946 17C1                                        l7938 17B5  
                                      l7796 0127                                        l7948 17C4  
                                      l7964 17F4                                        STR_1 18E5  
                                      STR_2 18DB                                        _LATA 010C  
                                      _LATC 010E                                        u7005 1717  
                                      i1l93 002E                                        i1l86 0015  
                     ??_USBCtrlTrfTxService 00A6                                        i1l88 0022  
                      ?_do_I2C_SEND_RESTART 0070                                        _UCFG 0E91  
                                      u7395 0648                                        u6755 1310  
                                      _UEP0 0E98                                        u7565 05AF  
                                      u6765 1316                                        u7725 1637  
                                      _UEP1 0E99                                        u6775 131E  
                                      _UEIE 0E97                                        _UEIR 0E93  
                                      _UCON 0E8E                                ?i1_CDCInitEP 0070  
                                      _WPUA 020C             i1USBCtrlTrfTxService@byteToSend 0072  
                   ??_wr2RegCompleteHandler 007A                                __CFG_WRT$OFF 0000  
                             __CFG_FCMEN$ON 0000                             _CDCDataInHandle 01CD  
         __size_of_do_I2C_SEND_RESTART_READ 0004    i1USBStdFeatureReqHandler@current_ep_data 006A  
    USBStdFeatureReqHandler@current_ep_data 00BE                                        _pDst 01E1  
                 ?_do_I2C_SEND_RESTART_READ 0070                             ??_mssp_clearIRQ 0070  
                                      _main 1000                   __size_of_do_I2C_SEND_STOP 0004  
                    __size_of_do_I2C_DO_ACK 0004                                        fsr0h 0005  
                                      fsr1h 0007                                        indf0 0000  
                                      fsr0l 0004                                        indf1 0001  
                               _BaudRateGen 0247                                        fsr1l 0006  
                           _USBDeviceAttach 1EC3                                        btemp 007E  
                             __CFG_BOREN$ON 0000                       ?_do_I2C_SEND_ADR_READ 0070  
                   ?i1_USBCtrlTrfOutHandler 0070                                        start 0034  
            __size_ofi1_USBCtrlTrfRxService 00A3                               _i2c_setBuffer 0800  
             __end_ofi1_USBCtrlTrfRxService 1000                  __end_of_USBCheckStdRequest 1800  
                    ??_USBCtrlTrfOutHandler 00AC                               __CFG_MCLRE$ON 0000  
                           __end_of_i2c_ISR 1F5D                         USBDeviceInit@i_1495 00A9  
                 ??_USBStdFeatureReqHandler 00BA              __size_ofi1_USBCtrlTrfTxService 0074  
          __size_of_rdBlkRegCompleteHandler 0017                       i1_USBStdGetDscHandler 0B14  
                    __size_of_putrsUSBUSART 0030               __end_ofi1_USBCtrlTrfTxService 0A20  
                  ??_do_I2C_DO_NACK_RESTART 0070                    ??_USBStdGetStatusHandler 00A6  
                            ?_USBDeviceInit 0070                                _do_I2C_RESET 1D51  
            __size_of_OSCILLATOR_Initialize 000C               __end_of_OSCILLATOR_Initialize 1D97  
                               _writeBuffer 03A0                                       ?_main 0070  
                i1USBEnableEndpoint@options 0077                               __CFG_WDTE$OFF 0000  
         __size_of_USBCtrlEPServiceComplete 0095                      __end_of_USBDeviceTasks 03CA  
                 ?_USBCtrlEPServiceComplete 0070                        i1_USBCheckStdRequest 080E  
                                     i1l139 179E                                       i1l403 0455  
                                     i1l244 1107                                       i1l404 04AF  
                                     i1l405 045E                                       i1l603 0849  
                                     i1l532 14C6                                       i1l382 072C  
                                     i1l535 150A                                       i1l480 09C9  
                                     i1l536 14CF                                       i1l537 14D2  
                                     i1l393 03ED                                       i1l467 0E7E  
                                     i1l580 0934                                       i1l628 029E  
                                     i1l815 12A0                                       i1l495 0F72  
                                     i1l399 042A                                       i1l592 086F  
                                     i1l594 0816                                       i1l799 13FF  
                                     _UADDR 0E96                                       _RCREG 0199  
                                     _RCSTA 019D                                       u774m0 166E  
                                     _TRISA 008C                                       _TRISC 008E  
                                     _USTAT 0E8F                                       _TXREG 019A  
                                     _TXSTA 019E                                  i1memset@p1 0070  
        __size_of_USBCtrlEPAllowStatusStage 007A             __end_of_USBCtrlEPAllowDataStage 173F  
                                     _sd000 18D7                                       _sd001 1843  
                                     _sd002 1877     __end_ofi1_USBIncrement1msInternalTimers 1E72  
  __size_ofi1_USBIncrement1msInternalTimers 0018           ??i1_USBIncrement1msInternalTimers 0070  
          ?i1_USBIncrement1msInternalTimers 0070              ?_USBIncrement1msInternalTimers 0070  
           i1_USBIncrement1msInternalTimers 1E5A                              _WDT_Initialize 1D3D  
          __end_ofi1_USBCtrlTrfSetupHandler 14C2                        _i2c_driver_getRXData 1D0A  
                ?_do_I2C_SEND_RESTART_WRITE 0070                       ??_do_I2C_SEND_RESTART 0070  
                                     pclath 000A                  _i2c_driver_busCollisionISR 024D  
                         __end_of_CDCInitEP 1248              __end_ofi1_USBCtrlTrfOutHandler 119E  
                    ?_do_I2C_SEND_ADR_WRITE 0070                                       status 0003  
                                     wtemp0 007E                 UserApplication@numBytesRead 00BB  
                          __end_ofi1_memset 1E5A                             __end_of_strncmp 138E  
        __size_ofi1_USBCtrlEPAllowDataStage 005C                          i2c_driver_TXData@d 0070  
                            ?_i2c_setBuffer 0070                                ?_setCallBack 0070  
                 __size_ofi1_USBDeviceTasks 00E8                  ?i1_USBCtrlEPAllowDataStage 0070  
              __size_of_USBStdSetCfgHandler 008F                               _fsmStateTable 02A0  
                           __initialization 0036                                  _i2c_status 0220  
                              __end_of_main 1012                       _control_signal_bitmap 01E6  
                            __CFG_LPBOR$OFF 0000                 ?_INTERRUPT_InterruptManager 0070  
                 __size_of_USBCtrlEPService 005C                               setCallBack@cb 0070  
                             _do_I2C_DO_ACK 1D31                                      ??_main 00C3  
                     ?i1_USBCheckStdRequest 0070                           ?_i2c_restartWrite 0079  
                           ?_USBDeviceTasks 0070                                 ?_USBSuspend 0070  
                       __CFG_USBLSCLK$48MHz 0000                             i1_USBDeviceInit 06E7  
                        ??_i2c_restartWrite 007A                             _i2c_driver_stop 1D04  
                    __end_of_WDT_Initialize 1D41                     ?_do_I2C_DO_ADDRESS_NACK 0070  
                              _cdc_mem_type 01E7                               _putrsUSBUSART 1138  
                   __end_of_USBDeviceAttach 1EE0                            _CDCDataOutHandle 01CF  
                     ?_i2c_driver_getRXData 0070                                      _ACTCON 039B  
                                    i1S8580 18AB                                      _APFCON 011D  
                                    _ANSELA 018C                                      _ANSELC 018E  
                           getsUSBUSART@len 00B1                                      _BORCON 0116  
                     __size_of_CDCTxService 00CC                                      i1l5200 07B9  
                                    i1l5300 0B1F                                      i1l6006 1170  
                                    i1l6032 08F0                                      i1l5320 0B80  
                                    i1l5312 0B5C                                      i1l5304 0B29  
                                    i1l5232 159D                                      i1l6034 08F5  
                                    i1l6018 119B                                      i1l5410 0260  
                                    i1l5322 0B83                                      i1l5314 0B5F  
                                    i1l7002 044D                                      i1l6052 0939  
                                    i1l6044 0919                                      i1l5420 0289  
                                    i1l5404 024E                                      i1l5260 0D36  
                                    i1l5252 0D25                                      i1l5236 15B0  
                                    i1l5182 1073                                      i1l4630 1F6C  
                                    i1l5430 02A4                                      i1l5422 028F  
                                    i1l5406 0255                                      i1l5326 0B86  
                                    i1l5270 0D4C                                      i1l7030 04A5  
                                    i1l7022 047D                                      i1l6048 0928  
                                    i1l6402 101F                                      i1l4626 1F65  
                                    i1l5434 02C3                                      i1l5338 14E2  
                                    i1l5610 0E48                                      i1l6412 13DC  
                                    i1l4740 1752                                      i1l5436 02CC  
                                    i1l5348 14FE                                      i1l5292 0D92  
                                    i1l5276 0D60                                      i1l7028 0496  
                                    i1l6430 1419                                      i1l6422 13E2  
                                    i1l4902 09FF                                      i1l4646 0C2F  
                                    i1l4638 0C1F                                      i1l5382 01FE  
                                    i1l5366 01CE                                      i1l5614 0E4C  
                                    i1l6416 13DF                                      i1l6408 13D9  
                                    i1l4904 0A03                                      i1l4912 0A1C  
                                    i1l4576 12F4                                      i1l4656 0C78  
                                    i1l4752 1765                                      i1l5368 01D0  
                                    i1l4920 1E46                                      i1l5720 0839  
                                    i1l5704 081F                                      i1l5632 0E8C  
                                    i1l5640 0E95                                      i1l6600 1054  
                                    i1l4578 12FD                                      i1l4658 0C90  
                                    i1l4770 178C                                      i1l5394 0233  
                                    i1l5730 0856                                      i1l5706 0822  
                                    i1l6602 1056                                      i1l6452 12A5  
                                    i1l4764 1783                                      i1l4748 175E  
                                    i1l4860 10DC                                      i1l5396 023E  
                                    i1l5388 021F                                      i1l5716 0833  
                                    i1l5708 0825                                      i1l6532 0713  
                                    i1l6524 0707                                      i1l6516 06F6  
                                    i1l6462 1086                                      i1l5670 0F7A  
                                    i1l4758 1775                                      i1l5718 0836  
                                    i1l5734 0864                                      i1l6472 108D  
                                    i1l6392 1019                                      i1l6448 12A2  
                                    i1l5672 0F93                                      i1l4864 10DF  
                                    i1l6544 0731                                      i1l6466 1089  
                                    i1l6458 12A8                                      i1l4882 09C2  
                                    i1l5682 0FC4                                      i1l4858 10D9  
                                    i1l6626 1F91                                      i1l6396 101C  
                                    i1l5684 0FD1                                      i1l6644 1616  
                                    i1l6572 0773                                      i1l6628 1F9A  
                                    i1l6478 1090                                      i1l4894 09E6  
                                    i1l6646 1619                                      i1l6566 074F  
                                    i1l6648 161C                                      i1l6906 1F4D  
                                    i1l6952 03E7                                      i1l6944 03DA  
                                    i1l6972 0406                                      i1l8582 10E8  
                                    i1l6966 0400                                      i1l8584 1102  
                                    i1l6994 0437                                      i1l6978 041B  
                                    i1l6988 0430                                      u423_25 15A7  
                                    u344_25 12CD                                      u345_25 12D3  
                                    u346_25 12DB                                      u550_25 0716  
                                    u560_25 15DB                                      _OSCCON 0099  
                                    u478_25 0F6C                                      _PLLRDY 04D6  
                             CDCTxService@i 00B2                                      _SPBRGH 019C  
                                    _SPBRGL 019B                      ??_do_I2C_SEND_ADR_READ 0070  
                                    _WDTCON 0097                    rdBlkRegCompleteHandler@p 0079  
              i1USBTransferOnePacket@handle 0079                                   ??_i2c_ISR 0074  
                            __CFG_PWRTE$OFF 0000                           _shortPacketStatus 01E3  
         __end_ofi1_USBCtrlEPAllowDataStage 15CC                      ?i1_USBStdGetDscHandler 0070  
                           USBDeviceTasks@i 01EF                 USBStdFeatureReqHandler@pUEP 00BC  
                  USBTransferOnePacket@data 00A7                  USBCtrlTrfInHandler@lastDTS 00AB  
                           ??_USBDeviceInit 00A6                 __end_of_do_I2C_DO_NACK_STOP 1D39  
       __end_of_i2c_setDataCompleteCallback 1D73                 _i2c_setDataCompleteCallback 1D67  
                            __CFG_STVREN$ON 0000                        __end_of_getsUSBUSART 16E0  
             __size_ofi1_USBWakeFromSuspend 0020             __size_of_do_I2C_DO_NACK_RESTART 0004  
                         _USBEnableEndpoint 1FDD             __size_of_USBStdGetStatusHandler 0059  
                   ??i1_USBStdSetCfgHandler 0066                                      _memset 1E72  
             __size_ofi1_USBCheckCDCRequest 0060                              ?_do_I2C_DO_ACK 0070  
                      i1USBEnableEndpoint@p 007A                          ?_USBEnableEndpoint 00AD  
                                    _strchr 1E15                                      _strcpy 1EA7  
                                    _strlen 1F1E                                      _strstr 1248  
             __size_of_USBTransferOnePacket 0084              __end_of_do_I2C_DO_ADDRESS_NACK 1036  
                              _CDCTxService 04B2                             ?_WDT_Initialize 0070  
                              ?_returnReset 0079                              ?_putrsUSBUSART 0070  
                       ??_USBEnableEndpoint 00AE                i1USBConfigureEndpoint@handle 0076  
                              ?_mssp_setIRQ 0070                  __end_ofi1_USBCtrlEPService 1628  
                               _CtrlTrfData 0058                                   ??_strncmp 00B0  
                         i1_USBStallHandler 1036                        _controlTransferState 01E2  
                         _SYSTEM_Initialize 1DEF                     __end_of__initialization 0077  
                i1USBTransferOnePacket@data 0071                             ??_i2c_setBuffer 0072  
                          _do_I2C_SEND_STOP 1D2D                          ?i1_USBStallHandler 0070  
                        __size_of_do_I2C_RX 003F                          __size_of_do_I2C_TX 004C  
                  i1_USBCtrlTrfSetupHandler 146F                        __size_ofi1_CDCInitEP 0036  
                        ?_SYSTEM_Initialize 0070                    __size_of_USBStallHandler 002B  
                  __size_of_do_I2C_TX_EMPTY 002A                              __pcstackBANK0h 0060  
                    i1USBCtrlTrfRxService@i 0074                         __size_of_USBSuspend 001F  
                   _rdBlkRegCompleteHandler 1E2B                              __pcstackCOMMON 0070  
                 __end_of_USBEnableEndpoint 2000                         ??i1_USBStallHandler 0070  
                             __end_of_sd000 18DB                               __end_of_sd001 1877  
                             __end_of_sd002 1891                  ??i1_USBStdGetStatusHandler 0070  
                              __pidataBANK5 1FBD                         ??_SYSTEM_Initialize 00AB  
          __size_of_USBCtrlEPAllowDataStage 005F               __size_of_USBConfigureEndpoint 0043  
                   __end_ofi1_USBDeviceInit 0794                     __end_of_i2c_driver_stop 1D07  
               __end_of_USBCtrlTrfInHandler 09AC                      ??i1_USBCheckStdRequest 006D  
                        _i2c_driver_sendACK 1D19                              _OPTION_REGbits 0095  
                                 ?i1_memset 0070                          _i2c_driver_restart 1D01  
                                _cdc_notice 023D                                  _cdc_rx_len 01EA  
                                _cdc_tx_len 01E8                          _i2c_driver_startRX 1D07  
                    ??_i2c_driver_getRXData 0070                   __end_ofi1_USBStallHandler 105B  
                  ??_USBCtrlTrfSetupHandler 00C2                         ?_i2c_driver_sendACK 0070  
                   _USBTicksSinceSuspendEnd 01D6                              setCallBack@idx 0074  
                    _do_I2C_DO_NACK_RESTART 1D39                              _do_I2C_TX$2631 0072  
                          ?_USBDeviceAttach 0070                   __end_of_SYSTEM_Initialize 1E01  
                    _USBStdGetStatusHandler 1517                               _buttonPressed 01D5  
                       ?_i2c_driver_restart 0070                                  __pbssBANK1 00C3  
                                __pbssBANK3 01B0                                  __pbssBANK4 0220  
                                __pbssBANK6 0320                                  __pbssBANK7 03A0  
                       ?_i2c_driver_startRX 0070              __size_of_rd2RegCompleteHandler 0010  
             __end_of_rd2RegCompleteHandler 1DEF              __size_of_wr2RegCompleteHandler 0010  
             __end_of_wr2RegCompleteHandler 1DBF                       _rd1RegCompleteHandler 1DCF  
                          i1_USBDeviceTasks 03CA                 __size_of_USBWakeFromSuspend 0020  
                             ?i1_USBSuspend 0070                                 _pBDTEntryIn 01B7  
                  __size_of_UserApplication 0045            __end_of_USBCtrlEPServiceComplete 0F5D  
                     i1_USBCtrlTrfInHandler 08D3                ??i1_USBCtrlEPServiceComplete 0075  
                     _wr1RegCompleteHandler 1DBF                __size_of_i2c_busCollisionISR 0003  
               __size_of_USBCheckCDCRequest 0063                                  __pmaintext 1000  
                             ??_do_I2C_IDLE 0070                        USBCtrlTrfRxService@i 00AA  
                      __size_of_setCallBack 0028                               ??_do_I2C_RCEN 0070  
                      ??_i2c_driver_sendACK 0070                             __CFG_PLLMULT$3x 0000  
                           ??_do_I2C_DO_ACK 0070                                  __pintentry 0004  
                      ??_i2c_driver_restart 0070                __size_ofi1_USBEnableEndpoint 0020  
              __size_of_i2c_driver_sendNACK 0004                                     _BAUDCON 019F  
                      ??_i2c_driver_startRX 0070                                     ?_memset 00A6  
                                _device_dsc 18C5                         i2c_setBuffer@buffer 0073  
                          _USBCtrlEPService 1628                                  _ep_data_in 01CA  
              __size_of_i2c_driver_resetBus 0001                                     ?_strchr 00A6  
                                   ?_strcpy 00A6                                     ?_strlen 00A6  
                                   ?_strstr 00B3                 __end_of_USBCtrlTrfRxService 06E7  
                         __end_of_do_I2C_RX 12C5                           __end_of_do_I2C_TX 141F  
                        _USBCheckStdRequest 179F                           _configDescriptor1 1800  
                           ??_putrsUSBUSART 00A6                                  ??i1_memset 0076  
               __end_of_USBCtrlTrfTxService 0A9A                         _USBStdSetCfgHandler 0DA8  
                                   u562_2m0 1612                                     _OSCTUNE 0098  
                                   _SSP1ADD 0212                                     _SSP1BUF 0211  
                                   _SSP1MSK 0213                         ?_USBCheckStdRequest 0070  
              __size_of_USBStdGetDscHandler 007F                     ??_do_I2C_SEND_ADR_WRITE 0071  
                                   _UIEbits 0E92                 ??_do_I2C_SEND_RESTART_WRITE 0070  
       __size_ofi1_USBCtrlEPServiceComplete 0091                                     _UIRbits 0E90  
                             _cdc_trf_state 01E9                    ??i1_USBTransferOnePacket 0074  
                                   _i2c_ISR 1F3D                   ??_rdBlkRegCompleteHandler 007A  
                            ??i1_USBSuspend 0066                       __end_of_mssp_clearIRQ 1D13  
                                   _pCDCDst 01D1                                     _pCDCSrc 01D3  
                     __size_of_getsUSBUSART 005C                 ??i1_USBCtrlEPAllowDataStage 0073  
           ??_USBIncrement1msInternalTimers 00A6                        ?_USBStdSetCfgHandler 0070  
                                 _CDCInitEP 120A                i1USBCtrlTrfInHandler@lastDTS 0075  
                __size_of_USBEnableEndpoint 0023                                  _readBuffer 0320  
                      ??_USBCheckStdRequest 00C1                       i1_USBCtrlTrfRxService 0F5D  
             __size_of_USBCtrlTrfOutHandler 0036                            ??_USBDeviceTasks 0261  
                         ??_USBStallHandler 00A6                           ??_do_I2C_TX_EMPTY 0070  
                          ?i1_USBDeviceInit 0070                       i1_USBCtrlTrfTxService 09AC  
                          ?_i2c_driver_stop 0070                          getsUSBUSART@buffer 00B4  
                           __size_of_memset 0019                   __end_of_configDescriptor1 1843  
                                   __ptext1 138E                                     __ptext2 1248  
                                   __ptext3 134A                                     __ptext4 1F1E  
                                   __ptext5 1E15                                     __ptext6 1EA7  
                                   __ptext7 1138                                     __ptext8 1684  
                                   __ptext9 02E1                                     _inPipes 00C3  
                       __end_of_do_I2C_IDLE 1D4B                 _USBDeferOUTDataStagePackets 01D7  
                       __end_of_do_I2C_RCEN 1D51                             __size_of_strchr 0016  
                           __size_of_strcpy 001C                             __size_of_strlen 001F  
                           __size_of_strstr 003E                       _OSCILLATOR_Initialize 1D8B  
                              ??_USBSuspend 00BA                 __end_of_do_I2C_SEND_RESTART 1D2D  
                  ??_PIN_MANAGER_Initialize 00A6                       i1USBEnableEndpoint@ep 007C  
                __size_ofi1_USBStallHandler 0025                          __end_of_USB_CD_Ptr 18EA  
                  _do_I2C_SEND_RESTART_READ 1D21                  __size_of_SYSTEM_Initialize 0012  
           __size_of_USBCtrlTrfSetupHandler 0050                                     clrloop0 1D98  
                  ??i1_USBConfigureEndpoint 0071                                     _strncmp 134A  
                      __size_of_returnReset 0002                        end_of_initialization 0077  
                              _getsUSBUSART 1684                          __end_of_USB_SD_Ptr 18E5  
                      __size_of_mssp_setIRQ 0003                         _pBDTEntryEP0OutNext 00C8  
                 __size_of_i2c_restartWrite 0002                                     init_ram 1DA3  
                                   memset@c 00A8                                     memset@n 00AA  
                                   memset@p 00AC                      ?_rd1RegCompleteHandler 0079  
                                   initloop 1DA4                             _USB1msTickCount 01C3  
           _dummy_encapsulated_cmd_response 024F                     ??i1_USBStdGetDscHandler 0070  
                  ?_USBStdFeatureReqHandler 0070                      ?i1_USBCtrlTrfInHandler 0070  
                         _EUSART_Initialize 1D7F                      ?_wr1RegCompleteHandler 0079  
                     ??_USBStdSetCfgHandler 00BA                                  ?_CDCInitEP 0070  
                        ?_EUSART_Initialize 0070                          __end_of_USBSuspend 1F1E  
                   _USBCtrlEPAllowDataStage 16E0                                   _RCSTAbits 019D  
                 _do_I2C_SEND_RESTART_WRITE 1D25                    _USBCtrlEPServiceComplete 0EC8  
                         ??_UserApplication 00B9                                     strlen@s 00A6  
                _USBStatusStageEnabledFlag1 01DA                  _USBStatusStageEnabledFlag2 01D9  
                       ??_EUSART_Initialize 00A6                            ??_WDT_Initialize 00A6  
                        USBEnableEndpoint@p 00B0                                  _returnStop 1CFD  
            __size_ofi1_USBStdSetCfgHandler 008F             __end_of_rdBlkRegCompleteHandler 1E42  
                  __end_of_do_I2C_SEND_STOP 1D31               __end_ofi1_USBStdSetCfgHandler 0DA8  
                 i1_USBCtrlEPAllowDataStage 1570                            __CFG_FOSC$INTOSC 0000  
      __size_of_i2c_setDataCompleteCallback 000C                          _BothEP0OutUOWNsSet 01DD  
                ??i1_USBCtrlTrfSetupHandler 006E                   USBStdSetCfgHandler@i_2167 00BD  
              __end_ofi1_USBWakeFromSuspend 1F9D                                 returnStop@p 0079  
                 USBConfigureEndpoint@EPNum 00AB                ?i1_USBCtrlEPAllowStatusStage 0070  
                ?_USBCtrlEPAllowStatusStage 0070                __end_ofi1_USBCheckCDCRequest 179F  
     i1USER_USB_CALLBACK_EVENT_HANDLER@size 0064         USER_USB_CALLBACK_EVENT_HANDLER@size 00B8  
                                 _USTATcopy 01ED                i2c_setDataCompleteCallback@p 0077  
                 __end_of_EUSART_Initialize 1D8B                    i1USBTransferOnePacket@ep 0078  
              __end_of_USBTransferOnePacket 0D19             __size_ofi1_USBTransferOnePacket 0083  
        __end_ofi1_USBCtrlEPServiceComplete 0EC8                  i1_USBCtrlEPServiceComplete 0E37  
             __size_of_do_I2C_SEND_ADR_READ 0008                          i1_USBCtrlEPService 15CC  
                        __CFG_PLLEN$ENABLED 0000                       i1USBDeviceInit@i_1495 0073  
                    ?i1_USBCtrlTrfRxService 0070                                 _do_I2C_IDLE 1D46  
                    _USBCtrlTrfSetupHandler 141F                                 _do_I2C_RCEN 1D4B  
                    ?i1_USBCtrlTrfTxService 0070                       __end_of_USBDeviceInit 0635  
     __end_of_USBIncrement1msInternalTimers 1EA7      __size_of_USBIncrement1msInternalTimers 001C  
             _USBIncrement1msInternalTimers 1E8B                                   i1memset@c 0072  
                                 i1memset@n 0074                                   i1memset@p 0076  
                       ?i1_USBCtrlEPService 0070        __end_of_i2c_driver_clearBusCollision 1D16  
     __size_of_i2c_driver_clearBusCollision 0003                _i2c_driver_clearBusCollision 1D13  
                    ?_OSCILLATOR_Initialize 0070                          putrsUSBUSART@pData 00A7  
                            __end_of_memset 1E8B                __size_of_do_I2C_DO_NACK_STOP 0004  
                         _USBBusIsSuspended 01DF                        __end_ofi1_USBSuspend 1EFF  
                  __end_ofi1_USBDeviceTasks 04B2                              __end_of_strchr 1E2B  
                            __end_of_strcpy 1EC3                              __end_of_strlen 1F3D  
                   ?_do_I2C_DO_NACK_RESTART 0070                              __end_of_strstr 1286  
                       start_initialization 0036                     ?_USBStdGetStatusHandler 0070  
             USBCtrlTrfRxService@byteToRead 00AB                         _i2c_busCollisionISR 1D16  
           __size_of_PIN_MANAGER_Initialize 0014                    ??i1_USBCtrlTrfOutHandler 0076  
                         __size_ofi1_memset 0018                                 _cdc_data_rx 20C0  
                               _cdc_data_tx 2080                __end_of_USBConfigureEndpoint 134A  
                              setCallBack@p 0072             __end_of_USBStdFeatureReqHandler 01B8  
                       i1_USBEnableEndpoint 1F5D             __size_ofi1_USBConfigureEndpoint 0042  
                       _i2c_driver_sendNACK 1D1D                               ??i1_CDCInitEP 007D  
         __end_of_USBCtrlEPAllowStatusStage 0B14                        ??i1_USBCtrlEPService 00A0  
                   i2c_setBuffer@bufferSize 0070                      rd1RegCompleteHandler@p 0079  
             ??i1_USBCtrlEPAllowStatusStage 0070                    __end_of_USBCtrlEPService 1684  
                       _i2c_driver_resetBus 1CFC               i1USBStdFeatureReqHandler@pUEP 0068  
                     __end_of_i2c_setBuffer 080E                   ??_USBCtrlEPAllowDataStage 00A9  
                               ??_CDCInitEP 00B3                              USBDeviceInit@i 00AA  
                            USBDeviceInit@p 00A7                        ?_i2c_busCollisionISR 0070  
               i1USBStdSetCfgHandler@i_2167 0069                      _pBDTEntryEP0OutCurrent 01E4  
        __size_ofi1_USBStdFeatureReqHandler 0129                     USBTransferOnePacket@dir 00A6  
                   USBTransferOnePacket@len 00A9                  ?i1_USBStdFeatureReqHandler 0070  
               i1USBConfigureEndpoint@EPNum 0075                         _USBStdGetDscHandler 0B93  
                    wr1RegCompleteHandler@p 0079                        ?i1_USBEnableEndpoint 0077  
                      ?_i2c_driver_sendNACK 0070                               ?_do_I2C_RESET 0070  
                               __pdataBANK5 02A0                                    ??_memset 00AC  
                               ?_returnStop 0079                        ?_i2c_driver_resetBus 0070  
                    i1_USBTransferOnePacket 0C12                                    ??_strchr 00A8  
                                  ??_strcpy 00A7                                    ??_strlen 00A8  
                         _i2c_driver_TXData 1D41              __end_of_do_I2C_DO_NACK_RESTART 1D3D  
                                  ??_strstr 00B5               ?_i2c_driver_clearBusCollision 0070  
             __size_ofi1_USBCheckStdRequest 0062                           _i2c_driver_i2cISR 024B  
                    _USBActiveConfiguration 01EE              __end_of_USBStdGetStatusHandler 1570  
                 i1USBTransferOnePacket@dir 0070                   i1USBTransferOnePacket@len 0073  
                        ?_i2c_driver_TXData 0070                                   ___latbits 0002  
                             __pcstackBANK1 00A0                               __pcstackBANK3 01EF  
              __size_of_USBCtrlTrfInHandler 0071                               __pcstackBANK4 025E  
                                 _do_I2C_RX 1286                                   _do_I2C_TX 13D3  
         __size_ofi1_USBStdGetStatusHandler 0055                           _i2c_driver_isNACK 1D73  
                 ?i1_USBStdGetStatusHandler 0070                        ?_USBStdGetDscHandler 0070  
             __size_of_i2c_driver_getRXData 0003                          ?_i2c_driver_isNACK 0070  
                       ??_i2c_driver_TXData 0070              __size_of_do_I2C_SEND_ADR_WRITE 0007  
             __end_of_do_I2C_SEND_ADR_WRITE 1D5F                            _i2c_restartWrite 0002  
                __end_of_USBWakeFromSuspend 1FBD                  __size_of_EUSART_Initialize 000C  
                           _USBStallHandler 10AD                                    ?_i2c_ISR 0070  
                              _pBDTEntryOut 01BD                             _do_I2C_TX_EMPTY 1083  
                __end_of_USBCheckCDCRequest 08D3                               ??_setCallBack 0073  
                     _rd2RegCompleteHandler 1DDF                    __size_of_USBDeviceAttach 001D  
                       ??_i2c_driver_isNACK 0070                       ??_i2c_busCollisionISR 0070  
                       __end_ofi1_CDCInitEP 11D4                      _PIN_MANAGER_Initialize 1E01  
                     _wr2RegCompleteHandler 1DAF                 __size_of_i2c_driver_sendACK 0004  
                     ??i1_USBEnableEndpoint 0078                              ??_do_I2C_RESET 0070  
                                 __ptext100 1DCF                                   __ptext101 1DBF  
                                 __ptext110 1D01                                   __ptext102 0002  
                                 __ptext111 1D19                                   __ptext103 1CFF  
                                 __ptext104 1CFD                                   __ptext105 1DAF  
                                 __ptext106 1D67                                   __ptext107 105B  
                                 __ptext108 0800                       ??_i2c_driver_sendNACK 0070  
                                 __ptext109 1D04                      i1_USBConfigureEndpoint 12C5  
         __end_ofi1_USBStdFeatureReqHandler 02E1                        i1_USBWakeFromSuspend 1F7D  
                  ??_do_I2C_DO_ADDRESS_NACK 0070        __size_ofi1_USBCtrlEPAllowStatusStage 006C  
               __size_of_i2c_driver_restart 0003                   __end_of_i2c_driver_TXData 1D46  
                      i1_USBCheckCDCRequest 173F                       __end_of_do_I2C_DO_ACK 1D35  
                     ??_i2c_driver_resetBus 0070                 __size_of_i2c_driver_startRX 0003  
              ??_INTERRUPT_InterruptManager 00A5                                   __pswtext1 1891  
                                 __pswtext2 18AB                  ??_do_I2C_SEND_RESTART_READ 0070  
                      _USBTransferOnePacket 0C95                   __end_of_i2c_driver_isNACK 1D7F  
        __size_of_do_I2C_SEND_RESTART_WRITE 0004                       __end_of_putrsUSBUSART 1168  
                                ?_do_I2C_RX 0070                                  ?_do_I2C_TX 0070  
              __end_of_USBCtrlTrfOutHandler 120A                       ??_USBStdGetDscHandler 00A6  
                               _ep_data_out 01C7             __size_ofi1_USBCtrlTrfOutHandler 0036  
              __size_of_USBCtrlTrfRxService 00B2               USBConfigureEndpoint@direction 00A6  
                   ??_rd1RegCompleteHandler 007A                                    ?_strncmp 00AC  
           i1USBCtrlTrfRxService@byteToRead 0075                     ??i1_USBCtrlTrfInHandler 0073  
                   ??_wr1RegCompleteHandler 007A                __size_of_USBCtrlTrfTxService 007A  
                           _UserApplication 138E                         __size_of_returnStop 0002  
                ??_USBCtrlEPServiceComplete 00AB                                   clear_ram0 1D97  
                                  _PIE1bits 0091                                    _PIE2bits 0092  
            __size_ofi1_USBStdGetDscHandler 007F               __end_ofi1_USBStdGetDscHandler 0B93  
       __size_of_INTERRUPT_InterruptManager 0030                                    _PIR1bits 0011  
                                  _PIR2bits 0012                                    _UEP0bits 0E98  
                _USBDeferINDataStagePackets 01D8                       ?i1_USBWakeFromSuspend 0070  
                                  _SSP1CON1 0215                                    _SSP1CON2 0216  
               __size_of_USBCheckStdRequest 0061                ?_i2c_setDataCompleteCallback 0075  
                                  _SSP1STAT 0214                                    _UCONbits 0E8E  
                       __end_of_setCallBack 1083                       ?i1_USBCheckCDCRequest 0070  
                      _USBConfigureEndpoint 1307                       __size_ofi1_USBSuspend 001F  
          __size_of_USBStdFeatureReqHandler 013D                       ?_USBTransferOnePacket 00A6  
                         ?_do_I2C_SEND_STOP 0070                               ?_CDCTxService 0070  
                                  i1_memset 1E42                                _RemoteWakeup 01E0  
                             ??_returnReset 007A                          ??_do_I2C_SEND_STOP 0070  
                    __size_of_mssp_clearIRQ 0003                    __size_ofi1_USBDeviceInit 00AD  
                  __size_of_i2c_driver_stop 0003           __end_of_do_I2C_SEND_RESTART_WRITE 1D29  
                             ??_mssp_setIRQ 0070              ??_i2c_driver_clearBusCollision 0070  
                   __end_of_USBStallHandler 10D8                     __end_of_do_I2C_TX_EMPTY 10AD  
                  ?_rdBlkRegCompleteHandler 0079                           putrsUSBUSART@data 00A8  
               ??_USBCtrlEPAllowStatusStage 00A6                 __end_of_USBStdSetCfgHandler 0E37  
              __size_of_do_I2C_SEND_RESTART 0004                                 i1_CDCInitEP 119E  
                    ?_rd2RegCompleteHandler 0079                          __end_of_device_dsc 18D7  
                   ??i1_USBCtrlTrfRxService 0072                         _do_I2C_DO_NACK_STOP 1D35  
                         i1USBDeviceTasks@i 006F                            __size_of_i2c_ISR 0020  
                    ?_wr2RegCompleteHandler 0079                     ?_USBCtrlTrfSetupHandler 0070  
               ?i1_USBCtrlEPServiceComplete 0070                                i1_USBSuspend 1EE0  
                   USBStdGetStatusHandler@p 00A7                     ??i1_USBCtrlTrfTxService 0070  
                    USBTransferOnePacket@ep 00AE                      i1_USBCtrlTrfOutHandler 1168  
                              ?_do_I2C_IDLE 0070                                    _SetupPkt 0050  
                              ?_do_I2C_RCEN 0070                     ??_OSCILLATOR_Initialize 00A6  
                     ?_USBConfigureEndpoint 00A6                           ??_USBDeviceAttach 00A6  
                __size_of_i2c_driver_TXData 0005             __size_of_do_I2C_DO_ADDRESS_NACK 0024  
             ??_i2c_setDataCompleteCallback 0078                   i1USBStdGetStatusHandler@p 0071  
                      ?_do_I2C_DO_NACK_STOP 0070                                 _line_coding 0257  
              __end_of_do_I2C_SEND_ADR_READ 1D67                              ??_CDCTxService 00B1  
                __size_of_i2c_driver_isNACK 000C                       i1_USBStdSetCfgHandler 0D19  
                         ?i1_USBDeviceTasks 0070                     __size_of_USBDeviceTasks 00E9  
                               ??_do_I2C_RX 0070                                 ??_do_I2C_TX 0071  
                                  __ptext10 1F9D                                    __ptext11 1EFF  
                                  __ptext20 1E72                                    __ptext12 10AD  
                                  __ptext21 1517                                    __ptext13 1E8B  
                                  __ptext30 0635                                    __ptext22 0B93  
                                  __ptext14 1628                                    __ptext31 0A9A  
                                  __ptext23 007B                                    __ptext15 141F  
                                  __ptext40 1D7F                                    __ptext32 093B  
                                  __ptext24 1108                                    __ptext16 0EC8  
                                  __ptext41 04B2                                    __ptext33 0A20  
                                  __ptext25 0870                                    __ptext17 16E0  
                                  __ptext50 15CC                                    __ptext42 0C95  
                                  __ptext34 1DEF                                    __ptext26 120A  
                                  __ptext18 179F                                    __ptext51 146F  
                                  __ptext35 1D3D                                    __ptext27 1FDD  
                                  __ptext19 0DA8                                    __ptext60 10D8  
                                  __ptext52 0E37                                    __ptext44 03CA  
                                  __ptext36 057E                                    __ptext28 1307  
                                  __ptext61 173F                                    __ptext53 1570  
                                  __ptext45 1F7D                                    __ptext37 1EC3  
                                  __ptext29 11D4                                    __ptext70 09AC  
                                  __ptext62 119E                                    __ptext54 080E  
                                  __ptext46 1EE0                                    __ptext38 1E01  
                                  __ptext71 1D16                                    __ptext63 0C12  
                                  __ptext55 0D19                                    __ptext47 1036  
                                  __ptext39 1D8B                                    __ptext80 1D31  
                                  __ptext72 1D13                                    __ptext64 1F5D  
                                  __ptext56 1E42                                    __ptext48 1E5A  
                                  __ptext81 1D4B                                    __ptext73 1F3D  
                                  __ptext65 12C5                                    __ptext57 14C2  
                                  __ptext49 06E7                                    __ptext90 1083  
                                  __ptext82 1D58                                    __ptext74 1D10  
                                  __ptext66 1168                                    __ptext58 0B14  
                                  __ptext91 1D0D                                    __ptext83 1D5F  
                                  __ptext75 1286                                    __ptext67 0F5D  
                                  __ptext59 01B8                                    __ptext92 1D73  
                                  __ptext84 1D2D                                    __ptext76 13D3  
                                  __ptext68 0794                                    __ptext93 1D41  
                                  __ptext85 1D29                                    __ptext77 1012  
                                  __ptext69 08D3                                    __ptext94 1D0A  
                                  __ptext86 1D25                                    __ptext78 1D39  
                                  __ptext95 1D1D                                    __ptext87 1D21  
                                  __ptext79 1D35                                    __ptext96 1CFC  
                                  __ptext88 1D46                                    __ptext97 1D07  
                                  __ptext89 1D51                                    __ptext98 1E2B  
                                  __ptext99 1DDF                          ??i1_USBDeviceTasks 00A3  
                              _SSP1CON1bits 0215                                _SSP1CON2bits 0216  
                   __end_of_UserApplication 13D3                        __end_of_do_I2C_RESET 1D58  
                          __size_of_strncmp 0044                                  strcpy@from 00A6  
                       __end_of_returnReset 1D01              __end_of_USBCtrlTrfSetupHandler 146F  
                             __size_of_main 0012                           ?_USBCtrlEPService 0070  
                       __end_of_mssp_setIRQ 1D10             i1USBConfigureEndpoint@direction 0070  
                                strncmp@len 00AE                                 _setCallBack 105B  
                        ??_USBCtrlEPService 025E                               _mssp_clearIRQ 1D10  
                       _USBCtrlTrfInHandler 093B           __size_ofi1_USBCtrlTrfSetupHandler 0053  
                    ??i1_USBWakeFromSuspend 0066                   ?i1_USBCtrlTrfSetupHandler 0070  
                                  _outPipes 01B0                 ??i1_USBStdFeatureReqHandler 0066  
                    ??i1_USBCheckCDCRequest 0070                        _USBCtrlTrfOutHandler 11D4  
                                  int$flags 007E                     ?i1_USBTransferOnePacket 0070  
                 _USBCtrlEPAllowStatusStage 0A9A            __end_ofi1_USBStdGetStatusHandler 1517  
        __end_of_INTERRUPT_InterruptManager 0034                  _INTERRUPT_InterruptManager 0004  
                              _SSP1STATbits 0214                      ??_USBTransferOnePacket 00AA  
          __end_of_do_I2C_SEND_RESTART_READ 1D25                                ??_returnStop 007A  
                  __end_of_i2c_restartWrite 0004                       ??_do_I2C_DO_NACK_STOP 0070  
                          putrsUSBUSART@len 00A9                   _USBDeferStatusStagePacket 01DB  
                  CDCTxService@byte_to_send 00B3                            i1USBDeviceInit@i 0074  
                          i1USBDeviceInit@p 0071                                  _INTCONbits 000B  
                      ?_USBCtrlTrfInHandler 0070               USBCtrlTrfTxService@byteToSend 00A8  
                                  memset@p1 00A6                            ?_USBStallHandler 0070  
                  USBStdFeatureReqHandler@p 00BF                            ?_do_I2C_TX_EMPTY 0070  
                   __size_of_WDT_Initialize 0004                      _do_I2C_DO_ADDRESS_NACK 1012  
                                  intlevel1 0000                      __size_of_USBDeviceInit 00B7  
               __size_ofi1_USBCtrlEPService 005C                      rd2RegCompleteHandler@p 0079  
 __end_ofi1_USER_USB_CALLBACK_EVENT_HANDLER 1108  __size_ofi1_USER_USB_CALLBACK_EVENT_HANDLER 0030  
   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 1138    __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0030  
        ?i1_USER_USB_CALLBACK_EVENT_HANDLER 0060         ??i1_USER_USB_CALLBACK_EVENT_HANDLER 007E  
         ??_USER_USB_CALLBACK_EVENT_HANDLER 00BA            ?_USER_USB_CALLBACK_EVENT_HANDLER 00B4  
         i1_USER_USB_CALLBACK_EVENT_HANDLER 10D8             _USER_USB_CALLBACK_EVENT_HANDLER 1108  
                                 strchr@chr 00A6                           ??i1_USBDeviceInit 0070  
                                 strchr@ptr 00A8                __end_ofi1_USBCheckStdRequest 0870  
                         ??_i2c_driver_stop 0070                     ?_PIN_MANAGER_Initialize 0070  
                         i2c_restartWrite@p 0079                           __CFG_CLKOUTEN$OFF 0000  
                        __end_of_returnStop 1CFF                              ?_mssp_clearIRQ 0070  
                                 strncmp@s1 00B2                                   strncmp@s2 00AC  
                   ?i1_USBConfigureEndpoint 0070              __end_ofi1_USBTransferOnePacket 0C95  
                    ??_USBConfigureEndpoint 00A7                       ?_USBCtrlTrfOutHandler 0070  
              __end_of_i2c_driver_getRXData 1D0D                        __CFG_CPUDIV$NOCLKDIV 0000  
                    wr2RegCompleteHandler@p 0079                         _USBCtrlTrfRxService 0635  
                        _USBWakeFromSuspend 1F9D                     _USBStdFeatureReqHandler 007B  
                        _USBCheckCDCRequest 0870                         _USBCtrlTrfTxService 0A20  
                             __pstringtext1 18DF                               __pstringtext2 18E8  
                             __pstringtext3 1800                               __pstringtext4 1843  
                             __pstringtext5 1877                               __pstringtext6 18C5  
                             __pstringtext7 18D7                               __pstringtext8 18E5  
                             __pstringtext9 0000                  i1USBStdFeatureReqHandler@p 006B  
                    ?i1_USBStdSetCfgHandler 0070                      i1USBStdSetCfgHandler@i 006A  
                    i1USBStdSetCfgHandler@p 0067                         ?_USBWakeFromSuspend 0070  
                     ??_USBCtrlTrfInHandler 00A9                                    strcpy@cp 00A9  
                                  strlen@cp 00AA                                    strcpy@to 00A8  
                     _USBAlternateInterface 01EB                      __size_of_i2c_setBuffer 000E  
                       ?_USBCheckCDCRequest 0070                                 _returnReset 1CFF  
                       USBEnableEndpoint@ep 00B2                                    strstr@s1 00B8  
                                  strstr@s2 00B3                   i1_USBStdFeatureReqHandler 01B8  
                           _endpoint_number 01DE                                 _mssp_setIRQ 1D0D  
       __end_ofi1_USBCtrlEPAllowStatusStage 0800                 i1_USBCtrlEPAllowStatusStage 0794  
                      ?_USBCtrlTrfRxService 0070                            ?_UserApplication 0070  
                             ?_getsUSBUSART 00B1              __end_of_PIN_MANAGER_Initialize 1E15  
               __end_of_i2c_busCollisionISR 1D19                    ?_USBCtrlEPAllowDataStage 0070  
                      ?_USBCtrlTrfTxService 0070              __size_of_rd1RegCompleteHandler 0010  
             __end_of_rd1RegCompleteHandler 1DDF              __size_ofi1_USBCtrlTrfInHandler 0068  
              _USBStatusStageTimeoutCounter 01DC               __end_ofi1_USBCtrlTrfInHandler 093B  
            __size_of_wr1RegCompleteHandler 0010               __end_of_wr1RegCompleteHandler 1DCF  
            __end_ofi1_USBConfigureEndpoint 1307                       _do_I2C_SEND_ADR_WRITE 1D58  
                      ??_USBWakeFromSuspend 00BA                 __end_ofi1_USBEnableEndpoint 1F7D  
               __end_of_i2c_driver_sendNACK 1D21                  USBTransferOnePacket@handle 00AF  
                      __end_of_CDCTxService 057E                        _do_I2C_SEND_ADR_READ 1D5F  
                __end_of_i2c_driver_sendACK 1D1D                        ??_USBCheckCDCRequest 00A6  
                                _USB_CD_Ptr 18E8                 __end_of_i2c_driver_resetBus 1CFD  
