

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Mar 17 16:48:31 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1454
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK5,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	cinit,global,class=CODE,merge=1,delta=2
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    18                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1
    19                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    20                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1
    21                           	psect	inittext,global,class=CODE,delta=2
    22                           	psect	clrtext,global,class=CODE,delta=2
    23                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    24                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    25                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    26                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    27                           	psect	cstackBANK0h,global,class=BANK0,space=1,delta=1
    28                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    29                           	psect	text1,local,class=CODE,merge=1,delta=2
    30                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text6,local,class=CODE,merge=1,delta=2
    35                           	psect	text7,local,class=CODE,merge=1,delta=2
    36                           	psect	text8,local,class=CODE,merge=1,delta=2
    37                           	psect	text9,local,class=CODE,merge=1,delta=2
    38                           	psect	text10,local,class=CODE,merge=1,delta=2
    39                           	psect	text11,local,class=CODE,merge=1,delta=2
    40                           	psect	text12,local,class=CODE,merge=1,delta=2
    41                           	psect	text13,local,class=CODE,merge=1,delta=2
    42                           	psect	text14,local,class=CODE,merge=1,delta=2
    43                           	psect	text15,local,class=CODE,merge=1,delta=2
    44                           	psect	text16,local,class=CODE,merge=1,delta=2
    45                           	psect	swtext1,local,class=CONST,delta=2
    46                           	psect	text17,local,class=CODE,merge=1,delta=2
    47                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text19,local,class=CODE,merge=1,delta=2
    49                           	psect	text20,local,class=CODE,merge=1,delta=2
    50                           	psect	text21,local,class=CODE,merge=1,delta=2
    51                           	psect	text22,local,class=CODE,merge=1,delta=2
    52                           	psect	text23,local,class=CODE,merge=1,delta=2
    53                           	psect	text24,local,class=CODE,merge=1,delta=2
    54                           	psect	text25,local,class=CODE,merge=1,delta=2
    55                           	psect	text26,local,class=CODE,merge=1,delta=2
    56                           	psect	text27,local,class=CODE,merge=1,delta=2
    57                           	psect	text28,local,class=CODE,merge=1,delta=2
    58                           	psect	text29,local,class=CODE,merge=1,delta=2
    59                           	psect	text30,local,class=CODE,merge=1,delta=2
    60                           	psect	text31,local,class=CODE,merge=1,delta=2
    61                           	psect	text32,local,class=CODE,merge=1,delta=2
    62                           	psect	text33,local,class=CODE,merge=1,delta=2
    63                           	psect	text34,local,class=CODE,merge=1,delta=2
    64                           	psect	text35,local,class=CODE,merge=1,delta=2
    65                           	psect	text36,local,class=CODE,merge=1,delta=2
    66                           	psect	text37,local,class=CODE,merge=1,delta=2
    67                           	psect	text38,local,class=CODE,merge=1,delta=2
    68                           	psect	text39,local,class=CODE,merge=1,delta=2
    69                           	psect	intentry,global,class=CODE,delta=2
    70                           	psect	text41,local,class=CODE,merge=1,delta=2
    71                           	psect	text42,local,class=CODE,merge=1,delta=2
    72                           	psect	text43,local,class=CODE,merge=1,delta=2
    73                           	psect	text44,local,class=CODE,merge=1,delta=2
    74                           	psect	text45,local,class=CODE,merge=1,delta=2
    75                           	psect	text46,local,class=CODE,merge=1,delta=2
    76                           	psect	text47,local,class=CODE,merge=1,delta=2
    77                           	psect	text48,local,class=CODE,merge=1,delta=2
    78                           	psect	text49,local,class=CODE,merge=1,delta=2
    79                           	psect	text50,local,class=CODE,merge=1,delta=2
    80                           	psect	text51,local,class=CODE,merge=1,delta=2
    81                           	psect	swtext2,local,class=CONST,delta=2
    82                           	psect	text52,local,class=CODE,merge=1,delta=2
    83                           	psect	text53,local,class=CODE,merge=1,delta=2
    84                           	psect	text54,local,class=CODE,merge=1,delta=2
    85                           	psect	text55,local,class=CODE,merge=1,delta=2
    86                           	psect	text56,local,class=CODE,merge=1,delta=2
    87                           	psect	text57,local,class=CODE,merge=1,delta=2
    88                           	psect	text58,local,class=CODE,merge=1,delta=2
    89                           	psect	text59,local,class=CODE,merge=1,delta=2
    90                           	psect	text60,local,class=CODE,merge=1,delta=2
    91                           	psect	text61,local,class=CODE,merge=1,delta=2
    92                           	psect	text62,local,class=CODE,merge=1,delta=2
    93                           	psect	text63,local,class=CODE,merge=1,delta=2
    94                           	psect	text64,local,class=CODE,merge=1,delta=2
    95                           	psect	text65,local,class=CODE,merge=1,delta=2
    96                           	psect	text66,local,class=CODE,merge=1,delta=2
    97                           	psect	text67,local,class=CODE,merge=1,delta=2
    98                           	psect	text68,local,class=CODE,merge=1,delta=2
    99                           	psect	text69,local,class=CODE,merge=1,inline,delta=2
   100                           	psect	text70,local,class=CODE,merge=1,delta=2
   101                           	psect	text71,local,class=CODE,merge=1,inline,delta=2
   102                           	psect	text72,local,class=CODE,merge=1,delta=2
   103                           	psect	text73,local,class=CODE,merge=1,delta=2
   104                           	psect	text74,local,class=CODE,merge=1,delta=2
   105                           	psect	text75,local,class=CODE,merge=1,delta=2
   106                           	psect	text76,local,class=CODE,merge=1,delta=2
   107                           	psect	text77,local,class=CODE,merge=1,delta=2
   108                           	psect	text78,local,class=CODE,merge=1,delta=2
   109                           	psect	text79,local,class=CODE,merge=1,delta=2
   110                           	psect	text80,local,class=CODE,merge=1,delta=2
   111                           	psect	text81,local,class=CODE,merge=1,delta=2
   112                           	psect	text82,local,class=CODE,merge=1,delta=2
   113                           	psect	text83,local,class=CODE,merge=1,delta=2
   114                           	psect	text84,local,class=CODE,merge=1,delta=2
   115                           	psect	text85,local,class=CODE,merge=1,delta=2
   116                           	psect	text86,local,class=CODE,merge=1,delta=2
   117                           	psect	text87,local,class=CODE,merge=1,delta=2
   118                           	psect	text88,local,class=CODE,merge=1,inline,delta=2
   119                           	psect	text89,local,class=CODE,merge=1,inline,delta=2
   120                           	psect	text90,local,class=CODE,merge=1,inline,delta=2
   121                           	psect	text91,local,class=CODE,merge=1,inline,delta=2
   122                           	psect	text92,local,class=CODE,merge=1,inline,delta=2
   123                           	psect	text93,local,class=CODE,merge=1,inline,delta=2
   124                           	psect	text94,local,class=CODE,merge=1,inline,delta=2
   125                           	psect	text95,local,class=CODE,merge=1,delta=2
   126                           	psect	text96,local,class=CODE,merge=1,delta=2
   127                           	psect	text97,local,class=CODE,merge=1,delta=2
   128                           	psect	text98,local,class=CODE,merge=1,delta=2
   129                           	psect	text99,local,class=CODE,merge=1,delta=2
   130                           	psect	text100,local,class=CODE,merge=1,delta=2
   131                           	psect	text101,local,class=CODE,merge=1,delta=2
   132                           	psect	text102,local,class=CODE,merge=1,delta=2
   133                           	psect	text103,local,class=CODE,merge=1,delta=2
   134                           	psect	text104,local,class=CODE,merge=1,delta=2
   135                           	psect	text105,local,class=CODE,merge=1,delta=2
   136                           	psect	text106,local,class=CODE,merge=1,inline,delta=2
   137                           	psect	text107,local,class=CODE,merge=1,inline,delta=2
   138                           	psect	text108,local,class=CODE,merge=1,inline,delta=2
   139                           	dabs	1,0x120,32
   140                           	dabs	1,0xD0,32
   141                           	dabs	1,0x1A0,16
   142                           	dabs	1,0x140,48
   143                           	dabs	1,0x20,48,_BDT
   144                           	dabs	1,0x50,8,_SetupPkt
   145                           	dabs	1,0x58,8,_CtrlTrfData
   146                           	dabs	1,0x7E,2
   147  0000                     
   148                           ; Version 1.45
   149                           ; Generated 16/11/2017 GMT
   150                           ; 
   151                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   152                           ; All rights reserved.
   153                           ; 
   154                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   155                           ; 
   156                           ; Redistribution and use in source and binary forms, with or without modification, are
   157                           ; permitted provided that the following conditions are met:
   158                           ; 
   159                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   160                           ;        conditions and the following disclaimer.
   161                           ; 
   162                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   163                           ;        of conditions and the following disclaimer in the documentation and/or other
   164                           ;        materials provided with the distribution.
   165                           ; 
   166                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   167                           ;        software without specific prior written permission.
   168                           ; 
   169                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   170                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   171                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   172                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   173                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   174                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   175                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   176                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   177                           ; 
   178                           ; 
   179                           ; Code-generator required, PIC16F1454 Definitions
   180                           ; 
   181                           ; SFR Addresses
   182  0000                     	;# 
   183  0001                     	;# 
   184  0002                     	;# 
   185  0003                     	;# 
   186  0004                     	;# 
   187  0005                     	;# 
   188  0006                     	;# 
   189  0007                     	;# 
   190  0008                     	;# 
   191  0009                     	;# 
   192  000A                     	;# 
   193  000B                     	;# 
   194  000C                     	;# 
   195  000E                     	;# 
   196  0011                     	;# 
   197  0012                     	;# 
   198  0015                     	;# 
   199  0016                     	;# 
   200  0016                     	;# 
   201  0017                     	;# 
   202  0018                     	;# 
   203  0019                     	;# 
   204  001A                     	;# 
   205  001B                     	;# 
   206  001C                     	;# 
   207  008C                     	;# 
   208  008E                     	;# 
   209  0091                     	;# 
   210  0092                     	;# 
   211  0095                     	;# 
   212  0096                     	;# 
   213  0097                     	;# 
   214  0098                     	;# 
   215  0099                     	;# 
   216  009A                     	;# 
   217  010C                     	;# 
   218  010E                     	;# 
   219  0116                     	;# 
   220  0117                     	;# 
   221  011D                     	;# 
   222  018C                     	;# 
   223  018E                     	;# 
   224  0191                     	;# 
   225  0191                     	;# 
   226  0192                     	;# 
   227  0193                     	;# 
   228  0193                     	;# 
   229  0194                     	;# 
   230  0195                     	;# 
   231  0196                     	;# 
   232  0197                     	;# 
   233  0199                     	;# 
   234  019A                     	;# 
   235  019B                     	;# 
   236  019B                     	;# 
   237  019C                     	;# 
   238  019D                     	;# 
   239  019E                     	;# 
   240  019F                     	;# 
   241  020C                     	;# 
   242  0211                     	;# 
   243  0211                     	;# 
   244  0212                     	;# 
   245  0212                     	;# 
   246  0213                     	;# 
   247  0213                     	;# 
   248  0214                     	;# 
   249  0214                     	;# 
   250  0215                     	;# 
   251  0215                     	;# 
   252  0215                     	;# 
   253  0216                     	;# 
   254  0216                     	;# 
   255  0217                     	;# 
   256  0217                     	;# 
   257  0391                     	;# 
   258  0392                     	;# 
   259  0393                     	;# 
   260  039A                     	;# 
   261  039B                     	;# 
   262  0611                     	;# 
   263  0612                     	;# 
   264  0613                     	;# 
   265  0613                     	;# 
   266  0614                     	;# 
   267  0615                     	;# 
   268  0616                     	;# 
   269  0616                     	;# 
   270  0E8E                     	;# 
   271  0E8F                     	;# 
   272  0E90                     	;# 
   273  0E91                     	;# 
   274  0E92                     	;# 
   275  0E93                     	;# 
   276  0E94                     	;# 
   277  0E94                     	;# 
   278  0E95                     	;# 
   279  0E96                     	;# 
   280  0E97                     	;# 
   281  0E98                     	;# 
   282  0E99                     	;# 
   283  0E9A                     	;# 
   284  0E9B                     	;# 
   285  0E9C                     	;# 
   286  0E9D                     	;# 
   287  0E9E                     	;# 
   288  0E9F                     	;# 
   289  0FE4                     	;# 
   290  0FE5                     	;# 
   291  0FE6                     	;# 
   292  0FE7                     	;# 
   293  0FE8                     	;# 
   294  0FE9                     	;# 
   295  0FEA                     	;# 
   296  0FEB                     	;# 
   297  0FED                     	;# 
   298  0FEE                     	;# 
   299  0FEF                     	;# 
   300  0000                     	;# 
   301  0001                     	;# 
   302  0002                     	;# 
   303  0003                     	;# 
   304  0004                     	;# 
   305  0005                     	;# 
   306  0006                     	;# 
   307  0007                     	;# 
   308  0008                     	;# 
   309  0009                     	;# 
   310  000A                     	;# 
   311  000B                     	;# 
   312  000C                     	;# 
   313  000E                     	;# 
   314  0011                     	;# 
   315  0012                     	;# 
   316  0015                     	;# 
   317  0016                     	;# 
   318  0016                     	;# 
   319  0017                     	;# 
   320  0018                     	;# 
   321  0019                     	;# 
   322  001A                     	;# 
   323  001B                     	;# 
   324  001C                     	;# 
   325  008C                     	;# 
   326  008E                     	;# 
   327  0091                     	;# 
   328  0092                     	;# 
   329  0095                     	;# 
   330  0096                     	;# 
   331  0097                     	;# 
   332  0098                     	;# 
   333  0099                     	;# 
   334  009A                     	;# 
   335  010C                     	;# 
   336  010E                     	;# 
   337  0116                     	;# 
   338  0117                     	;# 
   339  011D                     	;# 
   340  018C                     	;# 
   341  018E                     	;# 
   342  0191                     	;# 
   343  0191                     	;# 
   344  0192                     	;# 
   345  0193                     	;# 
   346  0193                     	;# 
   347  0194                     	;# 
   348  0195                     	;# 
   349  0196                     	;# 
   350  0197                     	;# 
   351  0199                     	;# 
   352  019A                     	;# 
   353  019B                     	;# 
   354  019B                     	;# 
   355  019C                     	;# 
   356  019D                     	;# 
   357  019E                     	;# 
   358  019F                     	;# 
   359  020C                     	;# 
   360  0211                     	;# 
   361  0211                     	;# 
   362  0212                     	;# 
   363  0212                     	;# 
   364  0213                     	;# 
   365  0213                     	;# 
   366  0214                     	;# 
   367  0214                     	;# 
   368  0215                     	;# 
   369  0215                     	;# 
   370  0215                     	;# 
   371  0216                     	;# 
   372  0216                     	;# 
   373  0217                     	;# 
   374  0217                     	;# 
   375  0391                     	;# 
   376  0392                     	;# 
   377  0393                     	;# 
   378  039A                     	;# 
   379  039B                     	;# 
   380  0611                     	;# 
   381  0612                     	;# 
   382  0613                     	;# 
   383  0613                     	;# 
   384  0614                     	;# 
   385  0615                     	;# 
   386  0616                     	;# 
   387  0616                     	;# 
   388  0E8E                     	;# 
   389  0E8F                     	;# 
   390  0E90                     	;# 
   391  0E91                     	;# 
   392  0E92                     	;# 
   393  0E93                     	;# 
   394  0E94                     	;# 
   395  0E94                     	;# 
   396  0E95                     	;# 
   397  0E96                     	;# 
   398  0E97                     	;# 
   399  0E98                     	;# 
   400  0E99                     	;# 
   401  0E9A                     	;# 
   402  0E9B                     	;# 
   403  0E9C                     	;# 
   404  0E9D                     	;# 
   405  0E9E                     	;# 
   406  0E9F                     	;# 
   407  0FE4                     	;# 
   408  0FE5                     	;# 
   409  0FE6                     	;# 
   410  0FE7                     	;# 
   411  0FE8                     	;# 
   412  0FE9                     	;# 
   413  0FEA                     	;# 
   414  0FEB                     	;# 
   415  0FED                     	;# 
   416  0FEE                     	;# 
   417  0FEF                     	;# 
   418  0000                     	;# 
   419  0001                     	;# 
   420  0002                     	;# 
   421  0003                     	;# 
   422  0004                     	;# 
   423  0005                     	;# 
   424  0006                     	;# 
   425  0007                     	;# 
   426  0008                     	;# 
   427  0009                     	;# 
   428  000A                     	;# 
   429  000B                     	;# 
   430  000C                     	;# 
   431  000E                     	;# 
   432  0011                     	;# 
   433  0012                     	;# 
   434  0015                     	;# 
   435  0016                     	;# 
   436  0016                     	;# 
   437  0017                     	;# 
   438  0018                     	;# 
   439  0019                     	;# 
   440  001A                     	;# 
   441  001B                     	;# 
   442  001C                     	;# 
   443  008C                     	;# 
   444  008E                     	;# 
   445  0091                     	;# 
   446  0092                     	;# 
   447  0095                     	;# 
   448  0096                     	;# 
   449  0097                     	;# 
   450  0098                     	;# 
   451  0099                     	;# 
   452  009A                     	;# 
   453  010C                     	;# 
   454  010E                     	;# 
   455  0116                     	;# 
   456  0117                     	;# 
   457  011D                     	;# 
   458  018C                     	;# 
   459  018E                     	;# 
   460  0191                     	;# 
   461  0191                     	;# 
   462  0192                     	;# 
   463  0193                     	;# 
   464  0193                     	;# 
   465  0194                     	;# 
   466  0195                     	;# 
   467  0196                     	;# 
   468  0197                     	;# 
   469  0199                     	;# 
   470  019A                     	;# 
   471  019B                     	;# 
   472  019B                     	;# 
   473  019C                     	;# 
   474  019D                     	;# 
   475  019E                     	;# 
   476  019F                     	;# 
   477  020C                     	;# 
   478  0211                     	;# 
   479  0211                     	;# 
   480  0212                     	;# 
   481  0212                     	;# 
   482  0213                     	;# 
   483  0213                     	;# 
   484  0214                     	;# 
   485  0214                     	;# 
   486  0215                     	;# 
   487  0215                     	;# 
   488  0215                     	;# 
   489  0216                     	;# 
   490  0216                     	;# 
   491  0217                     	;# 
   492  0217                     	;# 
   493  0391                     	;# 
   494  0392                     	;# 
   495  0393                     	;# 
   496  039A                     	;# 
   497  039B                     	;# 
   498  0611                     	;# 
   499  0612                     	;# 
   500  0613                     	;# 
   501  0613                     	;# 
   502  0614                     	;# 
   503  0615                     	;# 
   504  0616                     	;# 
   505  0616                     	;# 
   506  0E8E                     	;# 
   507  0E8F                     	;# 
   508  0E90                     	;# 
   509  0E91                     	;# 
   510  0E92                     	;# 
   511  0E93                     	;# 
   512  0E94                     	;# 
   513  0E94                     	;# 
   514  0E95                     	;# 
   515  0E96                     	;# 
   516  0E97                     	;# 
   517  0E98                     	;# 
   518  0E99                     	;# 
   519  0E9A                     	;# 
   520  0E9B                     	;# 
   521  0E9C                     	;# 
   522  0E9D                     	;# 
   523  0E9E                     	;# 
   524  0E9F                     	;# 
   525  0FE4                     	;# 
   526  0FE5                     	;# 
   527  0FE6                     	;# 
   528  0FE7                     	;# 
   529  0FE8                     	;# 
   530  0FE9                     	;# 
   531  0FEA                     	;# 
   532  0FEB                     	;# 
   533  0FED                     	;# 
   534  0FEE                     	;# 
   535  0FEF                     	;# 
   536  0000                     	;# 
   537  0001                     	;# 
   538  0002                     	;# 
   539  0003                     	;# 
   540  0004                     	;# 
   541  0005                     	;# 
   542  0006                     	;# 
   543  0007                     	;# 
   544  0008                     	;# 
   545  0009                     	;# 
   546  000A                     	;# 
   547  000B                     	;# 
   548  000C                     	;# 
   549  000E                     	;# 
   550  0011                     	;# 
   551  0012                     	;# 
   552  0015                     	;# 
   553  0016                     	;# 
   554  0016                     	;# 
   555  0017                     	;# 
   556  0018                     	;# 
   557  0019                     	;# 
   558  001A                     	;# 
   559  001B                     	;# 
   560  001C                     	;# 
   561  008C                     	;# 
   562  008E                     	;# 
   563  0091                     	;# 
   564  0092                     	;# 
   565  0095                     	;# 
   566  0096                     	;# 
   567  0097                     	;# 
   568  0098                     	;# 
   569  0099                     	;# 
   570  009A                     	;# 
   571  010C                     	;# 
   572  010E                     	;# 
   573  0116                     	;# 
   574  0117                     	;# 
   575  011D                     	;# 
   576  018C                     	;# 
   577  018E                     	;# 
   578  0191                     	;# 
   579  0191                     	;# 
   580  0192                     	;# 
   581  0193                     	;# 
   582  0193                     	;# 
   583  0194                     	;# 
   584  0195                     	;# 
   585  0196                     	;# 
   586  0197                     	;# 
   587  0199                     	;# 
   588  019A                     	;# 
   589  019B                     	;# 
   590  019B                     	;# 
   591  019C                     	;# 
   592  019D                     	;# 
   593  019E                     	;# 
   594  019F                     	;# 
   595  020C                     	;# 
   596  0211                     	;# 
   597  0211                     	;# 
   598  0212                     	;# 
   599  0212                     	;# 
   600  0213                     	;# 
   601  0213                     	;# 
   602  0214                     	;# 
   603  0214                     	;# 
   604  0215                     	;# 
   605  0215                     	;# 
   606  0215                     	;# 
   607  0216                     	;# 
   608  0216                     	;# 
   609  0217                     	;# 
   610  0217                     	;# 
   611  0391                     	;# 
   612  0392                     	;# 
   613  0393                     	;# 
   614  039A                     	;# 
   615  039B                     	;# 
   616  0611                     	;# 
   617  0612                     	;# 
   618  0613                     	;# 
   619  0613                     	;# 
   620  0614                     	;# 
   621  0615                     	;# 
   622  0616                     	;# 
   623  0616                     	;# 
   624  0E8E                     	;# 
   625  0E8F                     	;# 
   626  0E90                     	;# 
   627  0E91                     	;# 
   628  0E92                     	;# 
   629  0E93                     	;# 
   630  0E94                     	;# 
   631  0E94                     	;# 
   632  0E95                     	;# 
   633  0E96                     	;# 
   634  0E97                     	;# 
   635  0E98                     	;# 
   636  0E99                     	;# 
   637  0E9A                     	;# 
   638  0E9B                     	;# 
   639  0E9C                     	;# 
   640  0E9D                     	;# 
   641  0E9E                     	;# 
   642  0E9F                     	;# 
   643  0FE4                     	;# 
   644  0FE5                     	;# 
   645  0FE6                     	;# 
   646  0FE7                     	;# 
   647  0FE8                     	;# 
   648  0FE9                     	;# 
   649  0FEA                     	;# 
   650  0FEB                     	;# 
   651  0FED                     	;# 
   652  0FEE                     	;# 
   653  0FEF                     	;# 
   654  0000                     	;# 
   655  0001                     	;# 
   656  0002                     	;# 
   657  0003                     	;# 
   658  0004                     	;# 
   659  0005                     	;# 
   660  0006                     	;# 
   661  0007                     	;# 
   662  0008                     	;# 
   663  0009                     	;# 
   664  000A                     	;# 
   665  000B                     	;# 
   666  000C                     	;# 
   667  000E                     	;# 
   668  0011                     	;# 
   669  0012                     	;# 
   670  0015                     	;# 
   671  0016                     	;# 
   672  0016                     	;# 
   673  0017                     	;# 
   674  0018                     	;# 
   675  0019                     	;# 
   676  001A                     	;# 
   677  001B                     	;# 
   678  001C                     	;# 
   679  008C                     	;# 
   680  008E                     	;# 
   681  0091                     	;# 
   682  0092                     	;# 
   683  0095                     	;# 
   684  0096                     	;# 
   685  0097                     	;# 
   686  0098                     	;# 
   687  0099                     	;# 
   688  009A                     	;# 
   689  010C                     	;# 
   690  010E                     	;# 
   691  0116                     	;# 
   692  0117                     	;# 
   693  011D                     	;# 
   694  018C                     	;# 
   695  018E                     	;# 
   696  0191                     	;# 
   697  0191                     	;# 
   698  0192                     	;# 
   699  0193                     	;# 
   700  0193                     	;# 
   701  0194                     	;# 
   702  0195                     	;# 
   703  0196                     	;# 
   704  0197                     	;# 
   705  0199                     	;# 
   706  019A                     	;# 
   707  019B                     	;# 
   708  019B                     	;# 
   709  019C                     	;# 
   710  019D                     	;# 
   711  019E                     	;# 
   712  019F                     	;# 
   713  020C                     	;# 
   714  0211                     	;# 
   715  0211                     	;# 
   716  0212                     	;# 
   717  0212                     	;# 
   718  0213                     	;# 
   719  0213                     	;# 
   720  0214                     	;# 
   721  0214                     	;# 
   722  0215                     	;# 
   723  0215                     	;# 
   724  0215                     	;# 
   725  0216                     	;# 
   726  0216                     	;# 
   727  0217                     	;# 
   728  0217                     	;# 
   729  0391                     	;# 
   730  0392                     	;# 
   731  0393                     	;# 
   732  039A                     	;# 
   733  039B                     	;# 
   734  0611                     	;# 
   735  0612                     	;# 
   736  0613                     	;# 
   737  0613                     	;# 
   738  0614                     	;# 
   739  0615                     	;# 
   740  0616                     	;# 
   741  0616                     	;# 
   742  0E8E                     	;# 
   743  0E8F                     	;# 
   744  0E90                     	;# 
   745  0E91                     	;# 
   746  0E92                     	;# 
   747  0E93                     	;# 
   748  0E94                     	;# 
   749  0E94                     	;# 
   750  0E95                     	;# 
   751  0E96                     	;# 
   752  0E97                     	;# 
   753  0E98                     	;# 
   754  0E99                     	;# 
   755  0E9A                     	;# 
   756  0E9B                     	;# 
   757  0E9C                     	;# 
   758  0E9D                     	;# 
   759  0E9E                     	;# 
   760  0E9F                     	;# 
   761  0FE4                     	;# 
   762  0FE5                     	;# 
   763  0FE6                     	;# 
   764  0FE7                     	;# 
   765  0FE8                     	;# 
   766  0FE9                     	;# 
   767  0FEA                     	;# 
   768  0FEB                     	;# 
   769  0FED                     	;# 
   770  0FEE                     	;# 
   771  0FEF                     	;# 
   772  0000                     	;# 
   773  0001                     	;# 
   774  0002                     	;# 
   775  0003                     	;# 
   776  0004                     	;# 
   777  0005                     	;# 
   778  0006                     	;# 
   779  0007                     	;# 
   780  0008                     	;# 
   781  0009                     	;# 
   782  000A                     	;# 
   783  000B                     	;# 
   784  000C                     	;# 
   785  000E                     	;# 
   786  0011                     	;# 
   787  0012                     	;# 
   788  0015                     	;# 
   789  0016                     	;# 
   790  0016                     	;# 
   791  0017                     	;# 
   792  0018                     	;# 
   793  0019                     	;# 
   794  001A                     	;# 
   795  001B                     	;# 
   796  001C                     	;# 
   797  008C                     	;# 
   798  008E                     	;# 
   799  0091                     	;# 
   800  0092                     	;# 
   801  0095                     	;# 
   802  0096                     	;# 
   803  0097                     	;# 
   804  0098                     	;# 
   805  0099                     	;# 
   806  009A                     	;# 
   807  010C                     	;# 
   808  010E                     	;# 
   809  0116                     	;# 
   810  0117                     	;# 
   811  011D                     	;# 
   812  018C                     	;# 
   813  018E                     	;# 
   814  0191                     	;# 
   815  0191                     	;# 
   816  0192                     	;# 
   817  0193                     	;# 
   818  0193                     	;# 
   819  0194                     	;# 
   820  0195                     	;# 
   821  0196                     	;# 
   822  0197                     	;# 
   823  0199                     	;# 
   824  019A                     	;# 
   825  019B                     	;# 
   826  019B                     	;# 
   827  019C                     	;# 
   828  019D                     	;# 
   829  019E                     	;# 
   830  019F                     	;# 
   831  020C                     	;# 
   832  0211                     	;# 
   833  0211                     	;# 
   834  0212                     	;# 
   835  0212                     	;# 
   836  0213                     	;# 
   837  0213                     	;# 
   838  0214                     	;# 
   839  0214                     	;# 
   840  0215                     	;# 
   841  0215                     	;# 
   842  0215                     	;# 
   843  0216                     	;# 
   844  0216                     	;# 
   845  0217                     	;# 
   846  0217                     	;# 
   847  0391                     	;# 
   848  0392                     	;# 
   849  0393                     	;# 
   850  039A                     	;# 
   851  039B                     	;# 
   852  0611                     	;# 
   853  0612                     	;# 
   854  0613                     	;# 
   855  0613                     	;# 
   856  0614                     	;# 
   857  0615                     	;# 
   858  0616                     	;# 
   859  0616                     	;# 
   860  0E8E                     	;# 
   861  0E8F                     	;# 
   862  0E90                     	;# 
   863  0E91                     	;# 
   864  0E92                     	;# 
   865  0E93                     	;# 
   866  0E94                     	;# 
   867  0E94                     	;# 
   868  0E95                     	;# 
   869  0E96                     	;# 
   870  0E97                     	;# 
   871  0E98                     	;# 
   872  0E99                     	;# 
   873  0E9A                     	;# 
   874  0E9B                     	;# 
   875  0E9C                     	;# 
   876  0E9D                     	;# 
   877  0E9E                     	;# 
   878  0E9F                     	;# 
   879  0FE4                     	;# 
   880  0FE5                     	;# 
   881  0FE6                     	;# 
   882  0FE7                     	;# 
   883  0FE8                     	;# 
   884  0FE9                     	;# 
   885  0FEA                     	;# 
   886  0FEB                     	;# 
   887  0FED                     	;# 
   888  0FEE                     	;# 
   889  0FEF                     	;# 
   890  0000                     	;# 
   891  0001                     	;# 
   892  0002                     	;# 
   893  0003                     	;# 
   894  0004                     	;# 
   895  0005                     	;# 
   896  0006                     	;# 
   897  0007                     	;# 
   898  0008                     	;# 
   899  0009                     	;# 
   900  000A                     	;# 
   901  000B                     	;# 
   902  000C                     	;# 
   903  000E                     	;# 
   904  0011                     	;# 
   905  0012                     	;# 
   906  0015                     	;# 
   907  0016                     	;# 
   908  0016                     	;# 
   909  0017                     	;# 
   910  0018                     	;# 
   911  0019                     	;# 
   912  001A                     	;# 
   913  001B                     	;# 
   914  001C                     	;# 
   915  008C                     	;# 
   916  008E                     	;# 
   917  0091                     	;# 
   918  0092                     	;# 
   919  0095                     	;# 
   920  0096                     	;# 
   921  0097                     	;# 
   922  0098                     	;# 
   923  0099                     	;# 
   924  009A                     	;# 
   925  010C                     	;# 
   926  010E                     	;# 
   927  0116                     	;# 
   928  0117                     	;# 
   929  011D                     	;# 
   930  018C                     	;# 
   931  018E                     	;# 
   932  0191                     	;# 
   933  0191                     	;# 
   934  0192                     	;# 
   935  0193                     	;# 
   936  0193                     	;# 
   937  0194                     	;# 
   938  0195                     	;# 
   939  0196                     	;# 
   940  0197                     	;# 
   941  0199                     	;# 
   942  019A                     	;# 
   943  019B                     	;# 
   944  019B                     	;# 
   945  019C                     	;# 
   946  019D                     	;# 
   947  019E                     	;# 
   948  019F                     	;# 
   949  020C                     	;# 
   950  0211                     	;# 
   951  0211                     	;# 
   952  0212                     	;# 
   953  0212                     	;# 
   954  0213                     	;# 
   955  0213                     	;# 
   956  0214                     	;# 
   957  0214                     	;# 
   958  0215                     	;# 
   959  0215                     	;# 
   960  0215                     	;# 
   961  0216                     	;# 
   962  0216                     	;# 
   963  0217                     	;# 
   964  0217                     	;# 
   965  0391                     	;# 
   966  0392                     	;# 
   967  0393                     	;# 
   968  039A                     	;# 
   969  039B                     	;# 
   970  0611                     	;# 
   971  0612                     	;# 
   972  0613                     	;# 
   973  0613                     	;# 
   974  0614                     	;# 
   975  0615                     	;# 
   976  0616                     	;# 
   977  0616                     	;# 
   978  0E8E                     	;# 
   979  0E8F                     	;# 
   980  0E90                     	;# 
   981  0E91                     	;# 
   982  0E92                     	;# 
   983  0E93                     	;# 
   984  0E94                     	;# 
   985  0E94                     	;# 
   986  0E95                     	;# 
   987  0E96                     	;# 
   988  0E97                     	;# 
   989  0E98                     	;# 
   990  0E99                     	;# 
   991  0E9A                     	;# 
   992  0E9B                     	;# 
   993  0E9C                     	;# 
   994  0E9D                     	;# 
   995  0E9E                     	;# 
   996  0E9F                     	;# 
   997  0FE4                     	;# 
   998  0FE5                     	;# 
   999  0FE6                     	;# 
  1000  0FE7                     	;# 
  1001  0FE8                     	;# 
  1002  0FE9                     	;# 
  1003  0FEA                     	;# 
  1004  0FEB                     	;# 
  1005  0FED                     	;# 
  1006  0FEE                     	;# 
  1007  0FEF                     	;# 
  1008  0000                     	;# 
  1009  0001                     	;# 
  1010  0002                     	;# 
  1011  0003                     	;# 
  1012  0004                     	;# 
  1013  0005                     	;# 
  1014  0006                     	;# 
  1015  0007                     	;# 
  1016  0008                     	;# 
  1017  0009                     	;# 
  1018  000A                     	;# 
  1019  000B                     	;# 
  1020  000C                     	;# 
  1021  000E                     	;# 
  1022  0011                     	;# 
  1023  0012                     	;# 
  1024  0015                     	;# 
  1025  0016                     	;# 
  1026  0016                     	;# 
  1027  0017                     	;# 
  1028  0018                     	;# 
  1029  0019                     	;# 
  1030  001A                     	;# 
  1031  001B                     	;# 
  1032  001C                     	;# 
  1033  008C                     	;# 
  1034  008E                     	;# 
  1035  0091                     	;# 
  1036  0092                     	;# 
  1037  0095                     	;# 
  1038  0096                     	;# 
  1039  0097                     	;# 
  1040  0098                     	;# 
  1041  0099                     	;# 
  1042  009A                     	;# 
  1043  010C                     	;# 
  1044  010E                     	;# 
  1045  0116                     	;# 
  1046  0117                     	;# 
  1047  011D                     	;# 
  1048  018C                     	;# 
  1049  018E                     	;# 
  1050  0191                     	;# 
  1051  0191                     	;# 
  1052  0192                     	;# 
  1053  0193                     	;# 
  1054  0193                     	;# 
  1055  0194                     	;# 
  1056  0195                     	;# 
  1057  0196                     	;# 
  1058  0197                     	;# 
  1059  0199                     	;# 
  1060  019A                     	;# 
  1061  019B                     	;# 
  1062  019B                     	;# 
  1063  019C                     	;# 
  1064  019D                     	;# 
  1065  019E                     	;# 
  1066  019F                     	;# 
  1067  020C                     	;# 
  1068  0211                     	;# 
  1069  0211                     	;# 
  1070  0212                     	;# 
  1071  0212                     	;# 
  1072  0213                     	;# 
  1073  0213                     	;# 
  1074  0214                     	;# 
  1075  0214                     	;# 
  1076  0215                     	;# 
  1077  0215                     	;# 
  1078  0215                     	;# 
  1079  0216                     	;# 
  1080  0216                     	;# 
  1081  0217                     	;# 
  1082  0217                     	;# 
  1083  0391                     	;# 
  1084  0392                     	;# 
  1085  0393                     	;# 
  1086  039A                     	;# 
  1087  039B                     	;# 
  1088  0611                     	;# 
  1089  0612                     	;# 
  1090  0613                     	;# 
  1091  0613                     	;# 
  1092  0614                     	;# 
  1093  0615                     	;# 
  1094  0616                     	;# 
  1095  0616                     	;# 
  1096  0E8E                     	;# 
  1097  0E8F                     	;# 
  1098  0E90                     	;# 
  1099  0E91                     	;# 
  1100  0E92                     	;# 
  1101  0E93                     	;# 
  1102  0E94                     	;# 
  1103  0E94                     	;# 
  1104  0E95                     	;# 
  1105  0E96                     	;# 
  1106  0E97                     	;# 
  1107  0E98                     	;# 
  1108  0E99                     	;# 
  1109  0E9A                     	;# 
  1110  0E9B                     	;# 
  1111  0E9C                     	;# 
  1112  0E9D                     	;# 
  1113  0E9E                     	;# 
  1114  0E9F                     	;# 
  1115  0FE4                     	;# 
  1116  0FE5                     	;# 
  1117  0FE6                     	;# 
  1118  0FE7                     	;# 
  1119  0FE8                     	;# 
  1120  0FE9                     	;# 
  1121  0FEA                     	;# 
  1122  0FEB                     	;# 
  1123  0FED                     	;# 
  1124  0FEE                     	;# 
  1125  0FEF                     	;# 
  1126  0000                     	;# 
  1127  0001                     	;# 
  1128  0002                     	;# 
  1129  0003                     	;# 
  1130  0004                     	;# 
  1131  0005                     	;# 
  1132  0006                     	;# 
  1133  0007                     	;# 
  1134  0008                     	;# 
  1135  0009                     	;# 
  1136  000A                     	;# 
  1137  000B                     	;# 
  1138  000C                     	;# 
  1139  000E                     	;# 
  1140  0011                     	;# 
  1141  0012                     	;# 
  1142  0015                     	;# 
  1143  0016                     	;# 
  1144  0016                     	;# 
  1145  0017                     	;# 
  1146  0018                     	;# 
  1147  0019                     	;# 
  1148  001A                     	;# 
  1149  001B                     	;# 
  1150  001C                     	;# 
  1151  008C                     	;# 
  1152  008E                     	;# 
  1153  0091                     	;# 
  1154  0092                     	;# 
  1155  0095                     	;# 
  1156  0096                     	;# 
  1157  0097                     	;# 
  1158  0098                     	;# 
  1159  0099                     	;# 
  1160  009A                     	;# 
  1161  010C                     	;# 
  1162  010E                     	;# 
  1163  0116                     	;# 
  1164  0117                     	;# 
  1165  011D                     	;# 
  1166  018C                     	;# 
  1167  018E                     	;# 
  1168  0191                     	;# 
  1169  0191                     	;# 
  1170  0192                     	;# 
  1171  0193                     	;# 
  1172  0193                     	;# 
  1173  0194                     	;# 
  1174  0195                     	;# 
  1175  0196                     	;# 
  1176  0197                     	;# 
  1177  0199                     	;# 
  1178  019A                     	;# 
  1179  019B                     	;# 
  1180  019B                     	;# 
  1181  019C                     	;# 
  1182  019D                     	;# 
  1183  019E                     	;# 
  1184  019F                     	;# 
  1185  020C                     	;# 
  1186  0211                     	;# 
  1187  0211                     	;# 
  1188  0212                     	;# 
  1189  0212                     	;# 
  1190  0213                     	;# 
  1191  0213                     	;# 
  1192  0214                     	;# 
  1193  0214                     	;# 
  1194  0215                     	;# 
  1195  0215                     	;# 
  1196  0215                     	;# 
  1197  0216                     	;# 
  1198  0216                     	;# 
  1199  0217                     	;# 
  1200  0217                     	;# 
  1201  0391                     	;# 
  1202  0392                     	;# 
  1203  0393                     	;# 
  1204  039A                     	;# 
  1205  039B                     	;# 
  1206  0611                     	;# 
  1207  0612                     	;# 
  1208  0613                     	;# 
  1209  0613                     	;# 
  1210  0614                     	;# 
  1211  0615                     	;# 
  1212  0616                     	;# 
  1213  0616                     	;# 
  1214  0E8E                     	;# 
  1215  0E8F                     	;# 
  1216  0E90                     	;# 
  1217  0E91                     	;# 
  1218  0E92                     	;# 
  1219  0E93                     	;# 
  1220  0E94                     	;# 
  1221  0E94                     	;# 
  1222  0E95                     	;# 
  1223  0E96                     	;# 
  1224  0E97                     	;# 
  1225  0E98                     	;# 
  1226  0E99                     	;# 
  1227  0E9A                     	;# 
  1228  0E9B                     	;# 
  1229  0E9C                     	;# 
  1230  0E9D                     	;# 
  1231  0E9E                     	;# 
  1232  0E9F                     	;# 
  1233  0FE4                     	;# 
  1234  0FE5                     	;# 
  1235  0FE6                     	;# 
  1236  0FE7                     	;# 
  1237  0FE8                     	;# 
  1238  0FE9                     	;# 
  1239  0FEA                     	;# 
  1240  0FEB                     	;# 
  1241  0FED                     	;# 
  1242  0FEE                     	;# 
  1243  0FEF                     	;# 
  1244  0000                     	;# 
  1245  0001                     	;# 
  1246  0002                     	;# 
  1247  0003                     	;# 
  1248  0004                     	;# 
  1249  0005                     	;# 
  1250  0006                     	;# 
  1251  0007                     	;# 
  1252  0008                     	;# 
  1253  0009                     	;# 
  1254  000A                     	;# 
  1255  000B                     	;# 
  1256  000C                     	;# 
  1257  000E                     	;# 
  1258  0011                     	;# 
  1259  0012                     	;# 
  1260  0015                     	;# 
  1261  0016                     	;# 
  1262  0016                     	;# 
  1263  0017                     	;# 
  1264  0018                     	;# 
  1265  0019                     	;# 
  1266  001A                     	;# 
  1267  001B                     	;# 
  1268  001C                     	;# 
  1269  008C                     	;# 
  1270  008E                     	;# 
  1271  0091                     	;# 
  1272  0092                     	;# 
  1273  0095                     	;# 
  1274  0096                     	;# 
  1275  0097                     	;# 
  1276  0098                     	;# 
  1277  0099                     	;# 
  1278  009A                     	;# 
  1279  010C                     	;# 
  1280  010E                     	;# 
  1281  0116                     	;# 
  1282  0117                     	;# 
  1283  011D                     	;# 
  1284  018C                     	;# 
  1285  018E                     	;# 
  1286  0191                     	;# 
  1287  0191                     	;# 
  1288  0192                     	;# 
  1289  0193                     	;# 
  1290  0193                     	;# 
  1291  0194                     	;# 
  1292  0195                     	;# 
  1293  0196                     	;# 
  1294  0197                     	;# 
  1295  0199                     	;# 
  1296  019A                     	;# 
  1297  019B                     	;# 
  1298  019B                     	;# 
  1299  019C                     	;# 
  1300  019D                     	;# 
  1301  019E                     	;# 
  1302  019F                     	;# 
  1303  020C                     	;# 
  1304  0211                     	;# 
  1305  0211                     	;# 
  1306  0212                     	;# 
  1307  0212                     	;# 
  1308  0213                     	;# 
  1309  0213                     	;# 
  1310  0214                     	;# 
  1311  0214                     	;# 
  1312  0215                     	;# 
  1313  0215                     	;# 
  1314  0215                     	;# 
  1315  0216                     	;# 
  1316  0216                     	;# 
  1317  0217                     	;# 
  1318  0217                     	;# 
  1319  0391                     	;# 
  1320  0392                     	;# 
  1321  0393                     	;# 
  1322  039A                     	;# 
  1323  039B                     	;# 
  1324  0611                     	;# 
  1325  0612                     	;# 
  1326  0613                     	;# 
  1327  0613                     	;# 
  1328  0614                     	;# 
  1329  0615                     	;# 
  1330  0616                     	;# 
  1331  0616                     	;# 
  1332  0E8E                     	;# 
  1333  0E8F                     	;# 
  1334  0E90                     	;# 
  1335  0E91                     	;# 
  1336  0E92                     	;# 
  1337  0E93                     	;# 
  1338  0E94                     	;# 
  1339  0E94                     	;# 
  1340  0E95                     	;# 
  1341  0E96                     	;# 
  1342  0E97                     	;# 
  1343  0E98                     	;# 
  1344  0E99                     	;# 
  1345  0E9A                     	;# 
  1346  0E9B                     	;# 
  1347  0E9C                     	;# 
  1348  0E9D                     	;# 
  1349  0E9E                     	;# 
  1350  0E9F                     	;# 
  1351  0FE4                     	;# 
  1352  0FE5                     	;# 
  1353  0FE6                     	;# 
  1354  0FE7                     	;# 
  1355  0FE8                     	;# 
  1356  0FE9                     	;# 
  1357  0FEA                     	;# 
  1358  0FEB                     	;# 
  1359  0FED                     	;# 
  1360  0FEE                     	;# 
  1361  0FEF                     	;_cdc_data_rx
  1362                           
  1363                           	psect	idataBANK5
  1364  100C                     __pidataBANK5:	
  1365                           
  1366                           ;initializer for _fsmStateTable
  1367  100C  34AE               	retlw	low _do_I2C_IDLE
  1368  100D  341D               	retlw	high _do_I2C_IDLE
  1369  100E  34C7               	retlw	low _do_I2C_SEND_ADR_READ
  1370  100F  341D               	retlw	high _do_I2C_SEND_ADR_READ
  1371  1010  34C0               	retlw	low _do_I2C_SEND_ADR_WRITE
  1372  1011  341D               	retlw	high _do_I2C_SEND_ADR_WRITE
  1373  1012  34D3               	retlw	low _do_I2C_TX
  1374  1013  3413               	retlw	high _do_I2C_TX
  1375  1014  34CB               	retlw	low _do_I2C_RX
  1376  1015  3412               	retlw	high _do_I2C_RX
  1377  1016  34B3               	retlw	low _do_I2C_RCEN
  1378  1017  341D               	retlw	high _do_I2C_RCEN
  1379  1018  34C0               	retlw	low _do_I2C_TX_EMPTY
  1380  1019  3410               	retlw	high _do_I2C_TX_EMPTY
  1381  101A  3489               	retlw	low _do_I2C_SEND_RESTART_READ
  1382  101B  341D               	retlw	high _do_I2C_SEND_RESTART_READ
  1383  101C  348D               	retlw	low _do_I2C_SEND_RESTART_WRITE
  1384  101D  341D               	retlw	high _do_I2C_SEND_RESTART_WRITE
  1385  101E  3491               	retlw	low _do_I2C_SEND_RESTART
  1386  101F  341D               	retlw	high _do_I2C_SEND_RESTART
  1387  1020  3495               	retlw	low _do_I2C_SEND_STOP
  1388  1021  341D               	retlw	high _do_I2C_SEND_STOP
  1389  1022  3499               	retlw	low _do_I2C_DO_ACK
  1390  1023  341D               	retlw	high _do_I2C_DO_ACK
  1391  1024  349D               	retlw	low _do_I2C_DO_NACK_STOP
  1392  1025  341D               	retlw	high _do_I2C_DO_NACK_STOP
  1393  1026  34A1               	retlw	low _do_I2C_DO_NACK_RESTART
  1394  1027  341D               	retlw	high _do_I2C_DO_NACK_RESTART
  1395  1028  34B9               	retlw	low _do_I2C_RESET
  1396  1029  341D               	retlw	high _do_I2C_RESET
  1397  102A  344F               	retlw	low _do_I2C_DO_ADDRESS_NACK
  1398  102B  3410               	retlw	high _do_I2C_DO_ADDRESS_NACK
  1399                           
  1400                           	psect	stringtext1
  1401  18DF                     __pstringtext1:	
  1402  18DF                     _USB_SD_Ptr:	
  1403  18DF  34D7               	retlw	low (_sd000| (0+32768))
  1404  18E0  3498               	retlw	high (_sd000| (0+32768))
  1405  18E1  3443               	retlw	low (_sd001| (0+32768))
  1406  18E2  3498               	retlw	high (_sd001| (0+32768))
  1407  18E3  3477               	retlw	low (_sd002| (0+32768))
  1408  18E4  3498               	retlw	high (_sd002| (0+32768))
  1409  18E5                     __end_of_USB_SD_Ptr:	
  1410                           
  1411                           	psect	stringtext2
  1412  18E8                     __pstringtext2:	
  1413  18E8                     _USB_CD_Ptr:	
  1414  18E8  3400               	retlw	low (_configDescriptor1| (0+32768))
  1415  18E9  3498               	retlw	high (_configDescriptor1| (0+32768))
  1416  18EA                     __end_of_USB_CD_Ptr:	
  1417                           
  1418                           	psect	stringtext3
  1419  1800                     __pstringtext3:	
  1420  1800                     _configDescriptor1:	
  1421  1800  3409               	retlw	9
  1422  1801  3402               	retlw	2
  1423  1802  3443               	retlw	67
  1424  1803  3400               	retlw	0
  1425  1804  3402               	retlw	2
  1426  1805  3401               	retlw	1
  1427  1806  3400               	retlw	0
  1428  1807  34C0               	retlw	192
  1429  1808  3432               	retlw	50
  1430  1809  3409               	retlw	9
  1431  180A  3404               	retlw	4
  1432  180B  3400               	retlw	0
  1433  180C  3400               	retlw	0
  1434  180D  3401               	retlw	1
  1435  180E  3402               	retlw	2
  1436  180F  3402               	retlw	2
  1437  1810  3401               	retlw	1
  1438  1811  3400               	retlw	0
  1439  1812  3405               	retlw	5
  1440  1813  3424               	retlw	36
  1441  1814  3400               	retlw	0
  1442  1815  3410               	retlw	16
  1443  1816  3401               	retlw	1
  1444  1817  3404               	retlw	4
  1445  1818  3424               	retlw	36
  1446  1819  3402               	retlw	2
  1447  181A  3402               	retlw	2
  1448  181B  3405               	retlw	5
  1449  181C  3424               	retlw	36
  1450  181D  3406               	retlw	6
  1451  181E  3400               	retlw	0
  1452  181F  3401               	retlw	1
  1453  1820  3405               	retlw	5
  1454  1821  3424               	retlw	36
  1455  1822  3401               	retlw	1
  1456  1823  3400               	retlw	0
  1457  1824  3401               	retlw	1
  1458  1825  3407               	retlw	7
  1459  1826  3405               	retlw	5
  1460  1827  3481               	retlw	129
  1461  1828  3403               	retlw	3
  1462  1829  340A               	retlw	10
  1463  182A  3400               	retlw	0
  1464  182B  3402               	retlw	2
  1465  182C  3409               	retlw	9
  1466  182D  3404               	retlw	4
  1467  182E  3401               	retlw	1
  1468  182F  3400               	retlw	0
  1469  1830  3402               	retlw	2
  1470  1831  340A               	retlw	10
  1471  1832  3400               	retlw	0
  1472  1833  3400               	retlw	0
  1473  1834  3400               	retlw	0
  1474  1835  3407               	retlw	7
  1475  1836  3405               	retlw	5
  1476  1837  3402               	retlw	2
  1477  1838  3402               	retlw	2
  1478  1839  3440               	retlw	64
  1479  183A  3400               	retlw	0
  1480  183B  3400               	retlw	0
  1481  183C  3407               	retlw	7
  1482  183D  3405               	retlw	5
  1483  183E  3482               	retlw	130
  1484  183F  3402               	retlw	2
  1485  1840  3440               	retlw	64
  1486  1841  3400               	retlw	0
  1487  1842  3400               	retlw	0
  1488  1843                     __end_of_configDescriptor1:	
  1489                           
  1490                           	psect	stringtext4
  1491  1843                     __pstringtext4:	
  1492  1843                     _sd001:	
  1493  1843  3434               	retlw	52
  1494  1844  3403               	retlw	3
  1495  1845  344D               	retlw	77
  1496  1846  3400               	retlw	0
  1497  1847  3469               	retlw	105
  1498  1848  3400               	retlw	0
  1499  1849  3463               	retlw	99
  1500  184A  3400               	retlw	0
  1501  184B  3472               	retlw	114
  1502  184C  3400               	retlw	0
  1503  184D  346F               	retlw	111
  1504  184E  3400               	retlw	0
  1505  184F  3463               	retlw	99
  1506  1850  3400               	retlw	0
  1507  1851  3468               	retlw	104
  1508  1852  3400               	retlw	0
  1509  1853  3469               	retlw	105
  1510  1854  3400               	retlw	0
  1511  1855  3470               	retlw	112
  1512  1856  3400               	retlw	0
  1513  1857  3420               	retlw	32
  1514  1858  3400               	retlw	0
  1515  1859  3454               	retlw	84
  1516  185A  3400               	retlw	0
  1517  185B  3465               	retlw	101
  1518  185C  3400               	retlw	0
  1519  185D  3463               	retlw	99
  1520  185E  3400               	retlw	0
  1521  185F  3468               	retlw	104
  1522  1860  3400               	retlw	0
  1523  1861  346E               	retlw	110
  1524  1862  3400               	retlw	0
  1525  1863  346F               	retlw	111
  1526  1864  3400               	retlw	0
  1527  1865  346C               	retlw	108
  1528  1866  3400               	retlw	0
  1529  1867  346F               	retlw	111
  1530  1868  3400               	retlw	0
  1531  1869  3467               	retlw	103
  1532  186A  3400               	retlw	0
  1533  186B  3479               	retlw	121
  1534  186C  3400               	retlw	0
  1535  186D  3420               	retlw	32
  1536  186E  3400               	retlw	0
  1537  186F  3449               	retlw	73
  1538  1870  3400               	retlw	0
  1539  1871  346E               	retlw	110
  1540  1872  3400               	retlw	0
  1541  1873  3463               	retlw	99
  1542  1874  3400               	retlw	0
  1543  1875  342E               	retlw	46
  1544  1876  3400               	retlw	0
  1545  1877                     __end_of_sd001:	
  1546                           
  1547                           	psect	stringtext5
  1548  1877                     __pstringtext5:	
  1549  1877                     _sd002:	
  1550  1877  341A               	retlw	26
  1551  1878  3403               	retlw	3
  1552  1879  3450               	retlw	80
  1553  187A  3400               	retlw	0
  1554  187B  3472               	retlw	114
  1555  187C  3400               	retlw	0
  1556  187D  346F               	retlw	111
  1557  187E  3400               	retlw	0
  1558  187F  3464               	retlw	100
  1559  1880  3400               	retlw	0
  1560  1881  3475               	retlw	117
  1561  1882  3400               	retlw	0
  1562  1883  3463               	retlw	99
  1563  1884  3400               	retlw	0
  1564  1885  3474               	retlw	116
  1565  1886  3400               	retlw	0
  1566  1887  3420               	retlw	32
  1567  1888  3400               	retlw	0
  1568  1889  344E               	retlw	78
  1569  188A  3400               	retlw	0
  1570  188B  3461               	retlw	97
  1571  188C  3400               	retlw	0
  1572  188D  346D               	retlw	109
  1573  188E  3400               	retlw	0
  1574  188F  3465               	retlw	101
  1575  1890  3400               	retlw	0
  1576  1891                     __end_of_sd002:	
  1577                           
  1578                           	psect	stringtext6
  1579  18C5                     __pstringtext6:	
  1580  18C5                     _device_dsc:	
  1581  18C5  3412               	retlw	18
  1582  18C6  3401               	retlw	1
  1583  18C7  3400               	retlw	0
  1584  18C8  3402               	retlw	2
  1585  18C9  3402               	retlw	2
  1586  18CA  3400               	retlw	0
  1587  18CB  3400               	retlw	0
  1588  18CC  3408               	retlw	8
  1589  18CD  34D8               	retlw	216
  1590  18CE  3404               	retlw	4
  1591  18CF  340A               	retlw	10
  1592  18D0  3400               	retlw	0
  1593  18D1  3400               	retlw	0
  1594  18D2  3401               	retlw	1
  1595  18D3  3401               	retlw	1
  1596  18D4  3402               	retlw	2
  1597  18D5  3400               	retlw	0
  1598  18D6  3401               	retlw	1
  1599  18D7                     __end_of_device_dsc:	
  1600                           
  1601                           	psect	stringtext7
  1602  18D7                     __pstringtext7:	
  1603  18D7                     _sd000:	
  1604  18D7  3404               	retlw	4
  1605  18D8  3403               	retlw	3
  1606  18D9  3409               	retlw	9
  1607  18DA  3404               	retlw	4
  1608  18DB                     __end_of_sd000:	
  1609  20C0                     _cdc_data_rx	set	8384
  1610  2080                     _cdc_data_tx	set	8320
  1611  0011                     _PIR1bits	set	17
  1612  0012                     _PIR2bits	set	18
  1613  000B                     _INTCONbits	set	11
  1614  0073                     _RC3	set	115
  1615  0091                     _PIE1bits	set	145
  1616  0092                     _PIE2bits	set	146
  1617  0097                     _WDTCON	set	151
  1618  0098                     _OSCTUNE	set	152
  1619  0099                     _OSCCON	set	153
  1620  0095                     _OPTION_REGbits	set	149
  1621  008E                     _TRISC	set	142
  1622  008C                     _TRISA	set	140
  1623  04D6                     _PLLRDY	set	1238
  1624  0116                     _BORCON	set	278
  1625  011D                     _APFCON	set	285
  1626  010E                     _LATC	set	270
  1627  010C                     _LATA	set	268
  1628  018C                     _ANSELA	set	396
  1629  018E                     _ANSELC	set	398
  1630  0214                     _SSP1STATbits	set	532
  1631  0213                     _SSP1MSK	set	531
  1632  0211                     _SSP1BUF	set	529
  1633  0216                     _SSP1CON2bits	set	534
  1634  0212                     _SSP1ADD	set	530
  1635  0216                     _SSP1CON2	set	534
  1636  0215                     _SSP1CON1	set	533
  1637  0214                     _SSP1STAT	set	532
  1638  0215                     _SSP1CON1bits	set	533
  1639  020C                     _WPUA	set	524
  1640  039B                     _ACTCON	set	923
  1641  0E98                     _UEP0bits	set	3736
  1642  0E8E                     _UCON	set	3726
  1643  0E8F                     _USTAT	set	3727
  1644  0E92                     _UIEbits	set	3730
  1645  0E90                     _UIRbits	set	3728
  1646  0E96                     _UADDR	set	3734
  1647  0E8E                     _UCONbits	set	3726
  1648  0E92                     _UIE	set	3730
  1649  0E97                     _UEIE	set	3735
  1650  0E91                     _UCFG	set	3729
  1651  0E90                     _UIR	set	3728
  1652  0E93                     _UEIR	set	3731
  1653  0E99                     _UEP1	set	3737
  1654  0E98                     _UEP0	set	3736
  1655  18DB                     STR_2:	
  1656  18DB  344F               	retlw	79	;'O'
  1657  18DC  3446               	retlw	70	;'F'
  1658  18DD  3446               	retlw	70	;'F'
  1659  18DE  3400               	retlw	0
  1660                           
  1661                           	psect	stringtext8
  1662  18E5                     __pstringtext8:	
  1663  18E5                     STR_1:	
  1664  18E5  344F               	retlw	79	;'O'
  1665  18E6  344E               	retlw	78	;'N'
  1666  18E7  3400               	retlw	0
  1667                           
  1668                           	psect	stringtext9
  1669  0000                     __pstringtext9:	
  1670                           
  1671                           ; #config settings
  1672  0000                     
  1673                           	psect	cinit
  1674  0036                     start_initialization:	
  1675  0036                     __initialization:	
  1676                           
  1677                           ; Initialize objects allocated to BANK5
  1678  0036  300C               	movlw	low __pidataBANK5
  1679  0037  0084               	movwf	4
  1680  0038  3090               	movlw	(high __pidataBANK5)| (0+128)
  1681  0039  0085               	movwf	5
  1682  003A  30A0               	movlw	low __pdataBANK5
  1683  003B  0086               	movwf	6
  1684  003C  3002               	movlw	high __pdataBANK5
  1685  003D  0087               	movwf	7
  1686  003E  3000               	movlw	0
  1687  003F  00FF               	movwf	btemp+1
  1688  0040  3020               	movlw	32
  1689  0041  3190  2000  3180   	fcall	init_ram
  1690                           
  1691                           ; Clear objects allocated to BANK1
  1692  0044  0021               	movlb	1	; select bank1
  1693  0045  01C3               	clrf	__pbssBANK1& (0+127)
  1694  0046  01C4               	clrf	(__pbssBANK1+1)& (0+127)
  1695  0047  01C5               	clrf	(__pbssBANK1+2)& (0+127)
  1696  0048  01C6               	clrf	(__pbssBANK1+3)& (0+127)
  1697  0049  01C7               	clrf	(__pbssBANK1+4)& (0+127)
  1698  004A  01C8               	clrf	(__pbssBANK1+5)& (0+127)
  1699  004B  01C9               	clrf	(__pbssBANK1+6)& (0+127)
  1700                           
  1701                           ; Clear objects allocated to BANK3
  1702  004C  30B0               	movlw	low __pbssBANK3
  1703  004D  0084               	movwf	4
  1704  004E  3001               	movlw	high __pbssBANK3
  1705  004F  0085               	movwf	5
  1706  0050  303F               	movlw	63
  1707  0051  00FE               	movwf	btemp
  1708  0052  3000               	movlw	0
  1709  0053  00FF               	movwf	btemp+1
  1710  0054  319D  25F3  3180   	fcall	clear_ram0
  1711                           
  1712                           ; Clear objects allocated to BANK4
  1713  0057  3020               	movlw	low __pbssBANK4
  1714  0058  0084               	movwf	4
  1715  0059  3002               	movlw	high __pbssBANK4
  1716  005A  0085               	movwf	5
  1717  005B  303E               	movlw	62
  1718  005C  00FE               	movwf	btemp
  1719  005D  3000               	movlw	0
  1720  005E  00FF               	movwf	btemp+1
  1721  005F  319D  25F3  3180   	fcall	clear_ram0
  1722                           
  1723                           ; Clear objects allocated to BANK6
  1724  0062  3020               	movlw	low __pbssBANK6
  1725  0063  0084               	movwf	4
  1726  0064  3003               	movlw	high __pbssBANK6
  1727  0065  0085               	movwf	5
  1728  0066  3040               	movlw	64
  1729  0067  00FE               	movwf	btemp
  1730  0068  3000               	movlw	0
  1731  0069  00FF               	movwf	btemp+1
  1732  006A  319D  25F3  3180   	fcall	clear_ram0
  1733                           
  1734                           ; Clear objects allocated to BANK7
  1735  006D  30A0               	movlw	low __pbssBANK7
  1736  006E  0084               	movwf	4
  1737  006F  3003               	movlw	high __pbssBANK7
  1738  0070  0085               	movwf	5
  1739  0071  3040               	movlw	64
  1740  0072  00FE               	movwf	btemp
  1741  0073  3000               	movlw	0
  1742  0074  00FF               	movwf	btemp+1
  1743  0075  319D  25F3         	fcall	clear_ram0
  1744  0077                     end_of_initialization:	
  1745                           ;End of C runtime variable initialization code
  1746                           
  1747  0077                     __end_of__initialization:	
  1748  0077  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1749  0078  0020               	movlb	0
  1750  0079  319E  2E4E         	ljmp	_main	;jump to C main() function
  1751                           
  1752                           	psect	bssBANK1
  1753  00C3                     __pbssBANK1:	
  1754  00C3                     _inPipes:	
  1755  00C3                     	ds	5
  1756  00C8                     _pBDTEntryEP0OutNext:	
  1757  00C8                     	ds	2
  1758                           
  1759                           	psect	bssBANK3
  1760  01B0                     __pbssBANK3:	
  1761  01B0                     _outPipes:	
  1762  01B0                     	ds	7
  1763  01B7                     _pBDTEntryIn:	
  1764  01B7                     	ds	6
  1765  01BD                     _pBDTEntryOut:	
  1766  01BD                     	ds	6
  1767  01C3                     _USB1msTickCount:	
  1768  01C3                     	ds	4
  1769  01C7                     _ep_data_out:	
  1770  01C7                     	ds	3
  1771  01CA                     _ep_data_in:	
  1772  01CA                     	ds	3
  1773  01CD                     _CDCDataInHandle:	
  1774  01CD                     	ds	2
  1775  01CF                     _CDCDataOutHandle:	
  1776  01CF                     	ds	2
  1777  01D1                     _pCDCDst:	
  1778  01D1                     	ds	2
  1779  01D3                     _pCDCSrc:	
  1780  01D3                     	ds	2
  1781  01D5                     _buttonPressed:	
  1782  01D5                     	ds	1
  1783  01D6                     _USBTicksSinceSuspendEnd:	
  1784  01D6                     	ds	1
  1785  01D7                     _USBDeferOUTDataStagePackets:	
  1786  01D7                     	ds	1
  1787  01D8                     _USBDeferINDataStagePackets:	
  1788  01D8                     	ds	1
  1789  01D9                     _USBStatusStageEnabledFlag2:	
  1790  01D9                     	ds	1
  1791  01DA                     _USBStatusStageEnabledFlag1:	
  1792  01DA                     	ds	1
  1793  01DB                     _USBDeferStatusStagePacket:	
  1794  01DB                     	ds	1
  1795  01DC                     _USBStatusStageTimeoutCounter:	
  1796  01DC                     	ds	1
  1797  01DD                     _BothEP0OutUOWNsSet:	
  1798  01DD                     	ds	1
  1799  01DE                     _endpoint_number:	
  1800  01DE                     	ds	1
  1801  01DF                     _USBBusIsSuspended:	
  1802  01DF                     	ds	1
  1803  01E0                     _RemoteWakeup:	
  1804  01E0                     	ds	1
  1805  01E1                     _pDst:	
  1806  01E1                     	ds	1
  1807  01E2                     _controlTransferState:	
  1808  01E2                     	ds	1
  1809  01E3                     _shortPacketStatus:	
  1810  01E3                     	ds	1
  1811  01E4                     _pBDTEntryEP0OutCurrent:	
  1812  01E4                     	ds	1
  1813  01E5                     _USBDeviceState:	
  1814  01E5                     	ds	1
  1815  01E6                     _control_signal_bitmap:	
  1816  01E6                     	ds	1
  1817  01E7                     _cdc_mem_type:	
  1818  01E7                     	ds	1
  1819  01E8                     _cdc_tx_len:	
  1820  01E8                     	ds	1
  1821  01E9                     _cdc_trf_state:	
  1822  01E9                     	ds	1
  1823  01EA                     _cdc_rx_len:	
  1824  01EA                     	ds	1
  1825  01EB                     _USBAlternateInterface:	
  1826  01EB                     	ds	2
  1827  01ED                     _USTATcopy:	
  1828  01ED                     	ds	1
  1829  01EE                     _USBActiveConfiguration:	
  1830  01EE                     	ds	1
  1831                           
  1832                           	psect	bssBANK4
  1833  0220                     __pbssBANK4:	
  1834  0220                     _i2c_status:	
  1835  0220                     	ds	29
  1836  023D                     _cdc_notice:	
  1837  023D                     	ds	10
  1838  0247                     _BaudRateGen:	
  1839  0247                     	ds	4
  1840  024B                     _i2c_driver_i2cISR:	
  1841  024B                     	ds	2
  1842  024D                     _i2c_driver_busCollisionISR:	
  1843  024D                     	ds	2
  1844  024F                     _dummy_encapsulated_cmd_response:	
  1845  024F                     	ds	8
  1846  0257                     _line_coding:	
  1847  0257                     	ds	7
  1848                           
  1849                           	psect	dataBANK5
  1850  02A0                     __pdataBANK5:	
  1851  02A0                     _fsmStateTable:	
  1852  02A0                     	ds	32
  1853                           
  1854                           	psect	bssBANK6
  1855  0320                     __pbssBANK6:	
  1856  0320                     _readBuffer:	
  1857  0320                     	ds	64
  1858                           
  1859                           	psect	bssBANK7
  1860  03A0                     __pbssBANK7:	
  1861  03A0                     _writeBuffer:	
  1862  03A0                     	ds	64
  1863                           
  1864                           	psect	inittext
  1865  1000                     init_ram:	
  1866  1000  00FE               	movwf	126
  1867  1001                     initloop:	
  1868  1001  0012               	moviw fsr0++
  1869  1002  001E               	movwi fsr1++
  1870  1003  3001               	movlw	1
  1871  1004  02FE               	subwf	126,f
  1872  1005  3000               	movlw	0
  1873  1006  3BFF               	subwfb	127,f
  1874  1007  087F               	movf	127,w
  1875  1008  047E               	iorwf	126,w
  1876  1009  1903               	btfsc	3,2
  1877  100A  3400               	retlw	0
  1878  100B  2801               	goto	initloop
  1879                           
  1880                           	psect	clrtext
  1881  1DF3                     clear_ram0:	
  1882                           ;	Called with FSR0 containing the base address, and
  1883                           ;	btemp/btemp+1 has the size to clear
  1884                           
  1885  1DF3  0064               	clrwdt	;clear the watchdog before getting into this loop
  1886  1DF4                     clrloop0:	
  1887  1DF4  0180               	clrf	0	;clear RAM location pointed to by FSR
  1888  1DF5  3101               	addfsr 0,1
  1889  1DF6  3001               	movlw	1
  1890  1DF7  02FE               	subwf	126,f
  1891  1DF8  3000               	movlw	0
  1892  1DF9  3BFF               	subwfb	127,f
  1893  1DFA  087F               	movf	127,w
  1894  1DFB  047E               	iorwf	126,w
  1895  1DFC  1903               	btfsc	3,2
  1896  1DFD  3400               	retlw	0	;all done for this memory range, return
  1897  1DFE  2DF4               	goto	clrloop0	;have we reached the end yet?
  1898                           
  1899                           	psect	cstackBANK4
  1900  025E                     __pcstackBANK4:	
  1901  025E                     ??_USBCtrlEPService:	
  1902                           
  1903                           ; 1 bytes @ 0x0
  1904  025E                     	ds	3
  1905  0261                     ??_USBDeviceTasks:	
  1906                           
  1907                           ; 1 bytes @ 0x3
  1908  0261                     	ds	2
  1909                           
  1910                           	psect	cstackBANK3
  1911  01EF                     __pcstackBANK3:	
  1912  01EF                     USBDeviceTasks@i:	
  1913                           
  1914                           ; 1 bytes @ 0x0
  1915  01EF                     	ds	1
  1916                           
  1917                           	psect	cstackBANK1
  1918  00A0                     __pcstackBANK1:	
  1919  00A0                     ??i1_USBCtrlEPService:	
  1920                           
  1921                           ; 1 bytes @ 0x0
  1922  00A0                     	ds	3
  1923  00A3                     ??i1_USBDeviceTasks:	
  1924                           
  1925                           ; 1 bytes @ 0x3
  1926  00A3                     	ds	2
  1927  00A5                     ??_INTERRUPT_InterruptManager:	
  1928                           
  1929                           ; 1 bytes @ 0x5
  1930  00A5                     	ds	1
  1931  00A6                     ??_OSCILLATOR_Initialize:	
  1932  00A6                     ??_WDT_Initialize:	
  1933                           ; 1 bytes @ 0x6
  1934                           
  1935  00A6                     ??_USBDeviceInit:	
  1936                           ; 1 bytes @ 0x6
  1937                           
  1938  00A6                     ??_USBDeviceAttach:	
  1939                           ; 1 bytes @ 0x6
  1940                           
  1941  00A6                     ??_USBIncrement1msInternalTimers:	
  1942                           ; 1 bytes @ 0x6
  1943                           
  1944  00A6                     ??_USBCtrlEPAllowStatusStage:	
  1945                           ; 1 bytes @ 0x6
  1946                           
  1947  00A6                     ??_USBStallHandler:	
  1948                           ; 1 bytes @ 0x6
  1949                           
  1950  00A6                     ?_USBConfigureEndpoint:	
  1951                           ; 1 bytes @ 0x6
  1952                           
  1953  00A6                     ??_USBCtrlTrfTxService:	
  1954                           ; 1 bytes @ 0x6
  1955                           
  1956  00A6                     ?_strchr:	
  1957                           ; 1 bytes @ 0x6
  1958                           
  1959  00A6                     ??_PIN_MANAGER_Initialize:	
  1960                           ; 1 bytes @ 0x6
  1961                           
  1962  00A6                     ??_USBCheckCDCRequest:	
  1963                           ; 1 bytes @ 0x6
  1964                           
  1965  00A6                     ??_USBStdGetDscHandler:	
  1966                           ; 1 bytes @ 0x6
  1967                           
  1968  00A6                     ??_USBStdGetStatusHandler:	
  1969                           ; 1 bytes @ 0x6
  1970                           
  1971  00A6                     ?_USBTransferOnePacket:	
  1972                           ; 1 bytes @ 0x6
  1973                           
  1974  00A6                     ?_memset:	
  1975                           ; 2 bytes @ 0x6
  1976                           
  1977  00A6                     ?_strlen:	
  1978                           ; 2 bytes @ 0x6
  1979                           
  1980  00A6                     USBTransferOnePacket@dir:	
  1981                           ; 2 bytes @ 0x6
  1982                           
  1983  00A6                     USBConfigureEndpoint@direction:	
  1984                           ; 1 bytes @ 0x6
  1985                           
  1986  00A6                     memset@p1:	
  1987                           ; 1 bytes @ 0x6
  1988                           
  1989  00A6                     strchr@chr:	
  1990                           ; 2 bytes @ 0x6
  1991                           
  1992  00A6                     strlen@s:	
  1993                           ; 2 bytes @ 0x6
  1994                           
  1995                           
  1996                           ; 2 bytes @ 0x6
  1997  00A6                     	ds	1
  1998  00A7                     ??_USBConfigureEndpoint:	
  1999  00A7                     USBDeviceInit@p:	
  2000                           ; 1 bytes @ 0x7
  2001                           
  2002  00A7                     USBTransferOnePacket@data:	
  2003                           ; 2 bytes @ 0x7
  2004                           
  2005  00A7                     USBStdGetStatusHandler@p:	
  2006                           ; 2 bytes @ 0x7
  2007                           
  2008                           
  2009                           ; 2 bytes @ 0x7
  2010  00A7                     	ds	1
  2011  00A8                     ??_strlen:	
  2012  00A8                     ??_strchr:	
  2013                           ; 1 bytes @ 0x8
  2014                           
  2015  00A8                     ??_USBCtrlTrfRxService:	
  2016                           ; 1 bytes @ 0x8
  2017                           
  2018  00A8                     USBCtrlTrfTxService@byteToSend:	
  2019                           ; 1 bytes @ 0x8
  2020                           
  2021  00A8                     strchr@ptr:	
  2022                           ; 1 bytes @ 0x8
  2023                           
  2024  00A8                     memset@c:	
  2025                           ; 1 bytes @ 0x8
  2026                           
  2027                           
  2028                           ; 2 bytes @ 0x8
  2029  00A8                     	ds	1
  2030  00A9                     ??_USBCtrlTrfInHandler:	
  2031  00A9                     ??_USBCtrlEPAllowDataStage:	
  2032                           ; 1 bytes @ 0x9
  2033                           
  2034  00A9                     USBDeviceInit@i_1491:	
  2035                           ; 1 bytes @ 0x9
  2036                           
  2037  00A9                     USBTransferOnePacket@len:	
  2038                           ; 1 bytes @ 0x9
  2039                           
  2040                           
  2041                           ; 1 bytes @ 0x9
  2042  00A9                     	ds	1
  2043  00AA                     ??_USBTransferOnePacket:	
  2044  00AA                     USBDeviceInit@i:	
  2045                           ; 1 bytes @ 0xA
  2046                           
  2047  00AA                     USBCtrlTrfRxService@i:	
  2048                           ; 1 bytes @ 0xA
  2049                           
  2050  00AA                     memset@n:	
  2051                           ; 1 bytes @ 0xA
  2052                           
  2053  00AA                     strlen@cp:	
  2054                           ; 2 bytes @ 0xA
  2055                           
  2056                           
  2057                           ; 2 bytes @ 0xA
  2058  00AA                     	ds	1
  2059  00AB                     ??_SYSTEM_Initialize:	
  2060  00AB                     ??_USBCtrlEPServiceComplete:	
  2061                           ; 1 bytes @ 0xB
  2062                           
  2063  00AB                     USBConfigureEndpoint@EPNum:	
  2064                           ; 1 bytes @ 0xB
  2065                           
  2066  00AB                     USBCtrlTrfRxService@byteToRead:	
  2067                           ; 1 bytes @ 0xB
  2068                           
  2069  00AB                     USBCtrlTrfInHandler@lastDTS:	
  2070                           ; 1 bytes @ 0xB
  2071                           
  2072                           
  2073                           ; 1 bytes @ 0xB
  2074  00AB                     	ds	1
  2075  00AC                     ??_memset:	
  2076  00AC                     ??_USBCtrlTrfOutHandler:	
  2077                           ; 1 bytes @ 0xC
  2078                           
  2079  00AC                     ?_strncmp:	
  2080                           ; 1 bytes @ 0xC
  2081                           
  2082  00AC                     USBConfigureEndpoint@handle:	
  2083                           ; 2 bytes @ 0xC
  2084                           
  2085  00AC                     memset@p:	
  2086                           ; 1 bytes @ 0xC
  2087                           
  2088  00AC                     strncmp@s2:	
  2089                           ; 2 bytes @ 0xC
  2090                           
  2091                           
  2092                           ; 2 bytes @ 0xC
  2093  00AC                     	ds	1
  2094  00AD                     ?_USBEnableEndpoint:	
  2095  00AD                     USBEnableEndpoint@options:	
  2096                           ; 1 bytes @ 0xD
  2097                           
  2098                           
  2099                           ; 1 bytes @ 0xD
  2100  00AD                     	ds	1
  2101  00AE                     ??_USBEnableEndpoint:	
  2102  00AE                     USBTransferOnePacket@ep:	
  2103                           ; 1 bytes @ 0xE
  2104                           
  2105  00AE                     strncmp@len:	
  2106                           ; 1 bytes @ 0xE
  2107                           
  2108                           
  2109                           ; 2 bytes @ 0xE
  2110  00AE                     	ds	1
  2111  00AF                     USBTransferOnePacket@handle:	
  2112                           
  2113                           ; 2 bytes @ 0xF
  2114  00AF                     	ds	1
  2115  00B0                     ??_strncmp:	
  2116  00B0                     USBEnableEndpoint@p:	
  2117                           ; 1 bytes @ 0x10
  2118                           
  2119                           
  2120                           ; 2 bytes @ 0x10
  2121  00B0                     	ds	1
  2122  00B1                     ?_getsUSBUSART:	
  2123  00B1                     ??_CDCTxService:	
  2124                           ; 1 bytes @ 0x11
  2125                           
  2126  00B1                     getsUSBUSART@len:	
  2127                           ; 1 bytes @ 0x11
  2128                           
  2129                           
  2130                           ; 1 bytes @ 0x11
  2131  00B1                     	ds	1
  2132  00B2                     ??_getsUSBUSART:	
  2133  00B2                     CDCTxService@i:	
  2134                           ; 1 bytes @ 0x12
  2135                           
  2136  00B2                     USBEnableEndpoint@ep:	
  2137                           ; 1 bytes @ 0x12
  2138                           
  2139  00B2                     strncmp@s1:	
  2140                           ; 1 bytes @ 0x12
  2141                           
  2142                           
  2143                           ; 1 bytes @ 0x12
  2144  00B2                     	ds	1
  2145  00B3                     ?_strstr:	
  2146  00B3                     ??_CDCInitEP:	
  2147                           ; 1 bytes @ 0x13
  2148                           
  2149  00B3                     CDCTxService@byte_to_send:	
  2150                           ; 1 bytes @ 0x13
  2151                           
  2152  00B3                     strstr@s2:	
  2153                           ; 1 bytes @ 0x13
  2154                           
  2155                           
  2156                           ; 2 bytes @ 0x13
  2157  00B3                     	ds	1
  2158  00B4                     ?_USER_USB_CALLBACK_EVENT_HANDLER:	
  2159  00B4                     getsUSBUSART@buffer:	
  2160                           ; 1 bytes @ 0x14
  2161                           
  2162  00B4                     USER_USB_CALLBACK_EVENT_HANDLER@event:	
  2163                           ; 1 bytes @ 0x14
  2164                           
  2165                           
  2166                           ; 2 bytes @ 0x14
  2167  00B4                     	ds	1
  2168  00B5                     ??_strstr:	
  2169                           
  2170                           ; 1 bytes @ 0x15
  2171  00B5                     	ds	1
  2172  00B6                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  2173                           
  2174                           ; 2 bytes @ 0x16
  2175  00B6                     	ds	2
  2176  00B8                     strstr@s1:	
  2177  00B8                     USER_USB_CALLBACK_EVENT_HANDLER@size:	
  2178                           ; 1 bytes @ 0x18
  2179                           
  2180                           
  2181                           ; 2 bytes @ 0x18
  2182  00B8                     	ds	1
  2183  00B9                     ??_UserApplication:	
  2184                           
  2185                           ; 1 bytes @ 0x19
  2186  00B9                     	ds	1
  2187  00BA                     ??_USBWakeFromSuspend:	
  2188  00BA                     ??_USBSuspend:	
  2189                           ; 1 bytes @ 0x1A
  2190                           
  2191  00BA                     ??_USBStdFeatureReqHandler:	
  2192                           ; 1 bytes @ 0x1A
  2193                           
  2194  00BA                     ??_USER_USB_CALLBACK_EVENT_HANDLER:	
  2195                           ; 1 bytes @ 0x1A
  2196                           
  2197  00BA                     ??_USBStdSetCfgHandler:	
  2198                           ; 1 bytes @ 0x1A
  2199                           
  2200                           
  2201                           ; 1 bytes @ 0x1A
  2202  00BA                     	ds	1
  2203  00BB                     UserApplication@numBytesRead:	
  2204  00BB                     USBStdSetCfgHandler@p:	
  2205                           ; 1 bytes @ 0x1B
  2206                           
  2207                           
  2208                           ; 2 bytes @ 0x1B
  2209  00BB                     	ds	1
  2210  00BC                     USBStdFeatureReqHandler@pUEP:	
  2211                           
  2212                           ; 2 bytes @ 0x1C
  2213  00BC                     	ds	1
  2214  00BD                     USBStdSetCfgHandler@i_2163:	
  2215                           
  2216                           ; 1 bytes @ 0x1D
  2217  00BD                     	ds	1
  2218  00BE                     USBStdSetCfgHandler@i:	
  2219  00BE                     USBStdFeatureReqHandler@current_ep_data:	
  2220                           ; 1 bytes @ 0x1E
  2221                           
  2222                           
  2223                           ; 1 bytes @ 0x1E
  2224  00BE                     	ds	1
  2225  00BF                     USBStdFeatureReqHandler@p:	
  2226                           
  2227                           ; 2 bytes @ 0x1F
  2228  00BF                     	ds	2
  2229  00C1                     ??_USBCheckStdRequest:	
  2230                           
  2231                           ; 1 bytes @ 0x21
  2232  00C1                     	ds	1
  2233  00C2                     ??_USBCtrlTrfSetupHandler:	
  2234                           
  2235                           ; 1 bytes @ 0x22
  2236  00C2                     	ds	1
  2237  00C3                     ??_main:	
  2238                           
  2239                           	psect	cstackCOMMON
  2240  0070                     __pcstackCOMMON:	
  2241                           ; 1 bytes @ 0x23
  2242                           
  2243  0070                     ?_i2c_driver_isNACK:	
  2244  0070                     ?_OSCILLATOR_Initialize:	
  2245                           ; 1 bit 
  2246                           
  2247  0070                     ?_WDT_Initialize:	
  2248                           ; 1 bytes @ 0x0
  2249                           
  2250  0070                     ?_USBDeviceInit:	
  2251                           ; 1 bytes @ 0x0
  2252                           
  2253  0070                     ?_USBDeviceAttach:	
  2254                           ; 1 bytes @ 0x0
  2255                           
  2256  0070                     ?_USBDeviceTasks:	
  2257                           ; 1 bytes @ 0x0
  2258                           
  2259  0070                     ?_USBWakeFromSuspend:	
  2260                           ; 1 bytes @ 0x0
  2261                           
  2262  0070                     ?_USBSuspend:	
  2263                           ; 1 bytes @ 0x0
  2264                           
  2265  0070                     ?_USBIncrement1msInternalTimers:	
  2266                           ; 1 bytes @ 0x0
  2267                           
  2268  0070                     ?_USBCtrlEPAllowStatusStage:	
  2269                           ; 1 bytes @ 0x0
  2270                           
  2271  0070                     ?_USBStallHandler:	
  2272                           ; 1 bytes @ 0x0
  2273                           
  2274  0070                     ?_USBCtrlEPService:	
  2275                           ; 1 bytes @ 0x0
  2276                           
  2277  0070                     ?_USBCtrlTrfTxService:	
  2278                           ; 1 bytes @ 0x0
  2279                           
  2280  0070                     ?_USBCtrlTrfSetupHandler:	
  2281                           ; 1 bytes @ 0x0
  2282                           
  2283  0070                     ?_USBCtrlTrfOutHandler:	
  2284                           ; 1 bytes @ 0x0
  2285                           
  2286  0070                     ?_USBCtrlTrfInHandler:	
  2287                           ; 1 bytes @ 0x0
  2288                           
  2289  0070                     ?_USBCheckStdRequest:	
  2290                           ; 1 bytes @ 0x0
  2291                           
  2292  0070                     ?_USBStdFeatureReqHandler:	
  2293                           ; 1 bytes @ 0x0
  2294                           
  2295  0070                     ?_UserApplication:	
  2296                           ; 1 bytes @ 0x0
  2297                           
  2298  0070                     ?_setCallBack:	
  2299                           ; 1 bytes @ 0x0
  2300                           
  2301  0070                     ?_mssp_clearIRQ:	
  2302                           ; 1 bytes @ 0x0
  2303                           
  2304  0070                     ??_mssp_clearIRQ:	
  2305                           ; 1 bytes @ 0x0
  2306                           
  2307  0070                     ?_i2c_busCollisionISR:	
  2308                           ; 1 bytes @ 0x0
  2309                           
  2310  0070                     ??_i2c_busCollisionISR:	
  2311                           ; 1 bytes @ 0x0
  2312                           
  2313  0070                     ?_i2c_ISR:	
  2314                           ; 1 bytes @ 0x0
  2315                           
  2316  0070                     ?_i2c_driver_resetBus:	
  2317                           ; 1 bytes @ 0x0
  2318                           
  2319  0070                     ??_i2c_driver_resetBus:	
  2320                           ; 1 bytes @ 0x0
  2321                           
  2322  0070                     ?_i2c_driver_restart:	
  2323                           ; 1 bytes @ 0x0
  2324                           
  2325  0070                     ??_i2c_driver_restart:	
  2326                           ; 1 bytes @ 0x0
  2327                           
  2328  0070                     ?_i2c_driver_stop:	
  2329                           ; 1 bytes @ 0x0
  2330                           
  2331  0070                     ??_i2c_driver_stop:	
  2332                           ; 1 bytes @ 0x0
  2333                           
  2334  0070                     ?_i2c_driver_TXData:	
  2335                           ; 1 bytes @ 0x0
  2336                           
  2337  0070                     ??_i2c_driver_TXData:	
  2338                           ; 1 bytes @ 0x0
  2339                           
  2340  0070                     ?_i2c_driver_startRX:	
  2341                           ; 1 bytes @ 0x0
  2342                           
  2343  0070                     ??_i2c_driver_startRX:	
  2344                           ; 1 bytes @ 0x0
  2345                           
  2346  0070                     ?_i2c_driver_sendACK:	
  2347                           ; 1 bytes @ 0x0
  2348                           
  2349  0070                     ??_i2c_driver_sendACK:	
  2350                           ; 1 bytes @ 0x0
  2351                           
  2352  0070                     ?_i2c_driver_sendNACK:	
  2353                           ; 1 bytes @ 0x0
  2354                           
  2355  0070                     ??_i2c_driver_sendNACK:	
  2356                           ; 1 bytes @ 0x0
  2357                           
  2358  0070                     ??_i2c_driver_isNACK:	
  2359                           ; 1 bytes @ 0x0
  2360                           
  2361  0070                     ?_i2c_driver_getRXData:	
  2362                           ; 1 bytes @ 0x0
  2363                           
  2364  0070                     ??_i2c_driver_getRXData:	
  2365                           ; 1 bytes @ 0x0
  2366                           
  2367  0070                     ?_mssp_setIRQ:	
  2368                           ; 1 bytes @ 0x0
  2369                           
  2370  0070                     ??_mssp_setIRQ:	
  2371                           ; 1 bytes @ 0x0
  2372                           
  2373  0070                     ?_i2c_driver_clearBusCollision:	
  2374                           ; 1 bytes @ 0x0
  2375                           
  2376  0070                     ??_i2c_driver_clearBusCollision:	
  2377                           ; 1 bytes @ 0x0
  2378                           
  2379  0070                     ?_PIN_MANAGER_Initialize:	
  2380                           ; 1 bytes @ 0x0
  2381                           
  2382  0070                     ?_SYSTEM_Initialize:	
  2383                           ; 1 bytes @ 0x0
  2384                           
  2385  0070                     ?_INTERRUPT_InterruptManager:	
  2386                           ; 1 bytes @ 0x0
  2387                           
  2388  0070                     ?_USBCheckCDCRequest:	
  2389                           ; 1 bytes @ 0x0
  2390                           
  2391  0070                     ?_CDCInitEP:	
  2392                           ; 1 bytes @ 0x0
  2393                           
  2394  0070                     ?_CDCTxService:	
  2395                           ; 1 bytes @ 0x0
  2396                           
  2397  0070                     ?_USBCtrlEPAllowDataStage:	
  2398                           ; 1 bytes @ 0x0
  2399                           
  2400  0070                     ?_USBCtrlEPServiceComplete:	
  2401                           ; 1 bytes @ 0x0
  2402                           
  2403  0070                     ?_USBCtrlTrfRxService:	
  2404                           ; 1 bytes @ 0x0
  2405                           
  2406  0070                     ?_USBStdSetCfgHandler:	
  2407                           ; 1 bytes @ 0x0
  2408                           
  2409  0070                     ?_USBStdGetDscHandler:	
  2410                           ; 1 bytes @ 0x0
  2411                           
  2412  0070                     ?_USBStdGetStatusHandler:	
  2413                           ; 1 bytes @ 0x0
  2414                           
  2415  0070                     ?_main:	
  2416                           ; 1 bytes @ 0x0
  2417                           
  2418  0070                     ?_i2c_setBuffer:	
  2419                           ; 1 bytes @ 0x0
  2420                           
  2421  0070                     ?_do_I2C_RESET:	
  2422                           ; 1 bytes @ 0x0
  2423                           
  2424  0070                     ??_do_I2C_RESET:	
  2425                           ; 1 bytes @ 0x0
  2426                           
  2427  0070                     ?_do_I2C_IDLE:	
  2428                           ; 1 bytes @ 0x0
  2429                           
  2430  0070                     ??_do_I2C_IDLE:	
  2431                           ; 1 bytes @ 0x0
  2432                           
  2433  0070                     ?_do_I2C_SEND_RESTART_READ:	
  2434                           ; 1 bytes @ 0x0
  2435                           
  2436  0070                     ??_do_I2C_SEND_RESTART_READ:	
  2437                           ; 1 bytes @ 0x0
  2438                           
  2439  0070                     ?_do_I2C_SEND_RESTART_WRITE:	
  2440                           ; 1 bytes @ 0x0
  2441                           
  2442  0070                     ??_do_I2C_SEND_RESTART_WRITE:	
  2443                           ; 1 bytes @ 0x0
  2444                           
  2445  0070                     ?_do_I2C_SEND_RESTART:	
  2446                           ; 1 bytes @ 0x0
  2447                           
  2448  0070                     ??_do_I2C_SEND_RESTART:	
  2449                           ; 1 bytes @ 0x0
  2450                           
  2451  0070                     ?_do_I2C_SEND_STOP:	
  2452                           ; 1 bytes @ 0x0
  2453                           
  2454  0070                     ??_do_I2C_SEND_STOP:	
  2455                           ; 1 bytes @ 0x0
  2456                           
  2457  0070                     ?_do_I2C_SEND_ADR_READ:	
  2458                           ; 1 bytes @ 0x0
  2459                           
  2460  0070                     ??_do_I2C_SEND_ADR_READ:	
  2461                           ; 1 bytes @ 0x0
  2462                           
  2463  0070                     ?_do_I2C_SEND_ADR_WRITE:	
  2464                           ; 1 bytes @ 0x0
  2465                           
  2466  0070                     ?_do_I2C_RCEN:	
  2467                           ; 1 bytes @ 0x0
  2468                           
  2469  0070                     ??_do_I2C_RCEN:	
  2470                           ; 1 bytes @ 0x0
  2471                           
  2472  0070                     ?_do_I2C_DO_ACK:	
  2473                           ; 1 bytes @ 0x0
  2474                           
  2475  0070                     ??_do_I2C_DO_ACK:	
  2476                           ; 1 bytes @ 0x0
  2477                           
  2478  0070                     ?_do_I2C_DO_NACK_STOP:	
  2479                           ; 1 bytes @ 0x0
  2480                           
  2481  0070                     ??_do_I2C_DO_NACK_STOP:	
  2482                           ; 1 bytes @ 0x0
  2483                           
  2484  0070                     ?_do_I2C_DO_NACK_RESTART:	
  2485                           ; 1 bytes @ 0x0
  2486                           
  2487  0070                     ??_do_I2C_DO_NACK_RESTART:	
  2488                           ; 1 bytes @ 0x0
  2489                           
  2490  0070                     ?_do_I2C_DO_ADDRESS_NACK:	
  2491                           ; 1 bytes @ 0x0
  2492                           
  2493  0070                     ??_do_I2C_DO_ADDRESS_NACK:	
  2494                           ; 1 bytes @ 0x0
  2495                           
  2496  0070                     ?_do_I2C_TX:	
  2497                           ; 1 bytes @ 0x0
  2498                           
  2499  0070                     ?_do_I2C_RX:	
  2500                           ; 1 bytes @ 0x0
  2501                           
  2502  0070                     ??_do_I2C_RX:	
  2503                           ; 1 bytes @ 0x0
  2504                           
  2505  0070                     ?_do_I2C_TX_EMPTY:	
  2506                           ; 1 bytes @ 0x0
  2507                           
  2508  0070                     ??_do_I2C_TX_EMPTY:	
  2509                           ; 1 bytes @ 0x0
  2510                           
  2511  0070                     ?i1_USBCheckCDCRequest:	
  2512                           ; 1 bytes @ 0x0
  2513                           
  2514  0070                     ??i1_USBCheckCDCRequest:	
  2515                           ; 1 bytes @ 0x0
  2516                           
  2517  0070                     ?i1_CDCInitEP:	
  2518                           ; 1 bytes @ 0x0
  2519                           
  2520  0070                     ?i1_USBDeviceInit:	
  2521                           ; 1 bytes @ 0x0
  2522                           
  2523  0070                     ??i1_USBDeviceInit:	
  2524                           ; 1 bytes @ 0x0
  2525                           
  2526  0070                     ?i1_USBDeviceTasks:	
  2527                           ; 1 bytes @ 0x0
  2528                           
  2529  0070                     ?i1_USBCtrlEPAllowStatusStage:	
  2530                           ; 1 bytes @ 0x0
  2531                           
  2532  0070                     ??i1_USBCtrlEPAllowStatusStage:	
  2533                           ; 1 bytes @ 0x0
  2534                           
  2535  0070                     ?i1_USBCtrlEPAllowDataStage:	
  2536                           ; 1 bytes @ 0x0
  2537                           
  2538  0070                     ?i1_USBConfigureEndpoint:	
  2539                           ; 1 bytes @ 0x0
  2540                           
  2541  0070                     ?i1_USBCtrlEPServiceComplete:	
  2542                           ; 1 bytes @ 0x0
  2543                           
  2544  0070                     ?i1_USBCtrlTrfTxService:	
  2545                           ; 1 bytes @ 0x0
  2546                           
  2547  0070                     ??i1_USBCtrlTrfTxService:	
  2548                           ; 1 bytes @ 0x0
  2549                           
  2550  0070                     ?i1_USBCtrlTrfRxService:	
  2551                           ; 1 bytes @ 0x0
  2552                           
  2553  0070                     ?i1_USBStdSetCfgHandler:	
  2554                           ; 1 bytes @ 0x0
  2555                           
  2556  0070                     ?i1_USBStdGetDscHandler:	
  2557                           ; 1 bytes @ 0x0
  2558                           
  2559  0070                     ??i1_USBStdGetDscHandler:	
  2560                           ; 1 bytes @ 0x0
  2561                           
  2562  0070                     ?i1_USBStdGetStatusHandler:	
  2563                           ; 1 bytes @ 0x0
  2564                           
  2565  0070                     ??i1_USBStdGetStatusHandler:	
  2566                           ; 1 bytes @ 0x0
  2567                           
  2568  0070                     ?i1_USBStallHandler:	
  2569                           ; 1 bytes @ 0x0
  2570                           
  2571  0070                     ??i1_USBStallHandler:	
  2572                           ; 1 bytes @ 0x0
  2573                           
  2574  0070                     ?i1_USBSuspend:	
  2575                           ; 1 bytes @ 0x0
  2576                           
  2577  0070                     ?i1_USBWakeFromSuspend:	
  2578                           ; 1 bytes @ 0x0
  2579                           
  2580  0070                     ?i1_USBCtrlEPService:	
  2581                           ; 1 bytes @ 0x0
  2582                           
  2583  0070                     ?i1_USBCtrlTrfSetupHandler:	
  2584                           ; 1 bytes @ 0x0
  2585                           
  2586  0070                     ?i1_USBCtrlTrfOutHandler:	
  2587                           ; 1 bytes @ 0x0
  2588                           
  2589  0070                     ?i1_USBCtrlTrfInHandler:	
  2590                           ; 1 bytes @ 0x0
  2591                           
  2592  0070                     ?i1_USBCheckStdRequest:	
  2593                           ; 1 bytes @ 0x0
  2594                           
  2595  0070                     ?i1_USBStdFeatureReqHandler:	
  2596                           ; 1 bytes @ 0x0
  2597                           
  2598  0070                     ?i1_USBIncrement1msInternalTimers:	
  2599                           ; 1 bytes @ 0x0
  2600                           
  2601  0070                     ??i1_USBIncrement1msInternalTimers:	
  2602                           ; 1 bytes @ 0x0
  2603                           
  2604  0070                     ?i1_memset:	
  2605                           ; 1 bytes @ 0x0
  2606                           
  2607  0070                     ?i1_USBTransferOnePacket:	
  2608                           ; 1 bytes @ 0x0
  2609                           
  2610  0070                     i2c_driver_TXData@d:	
  2611                           ; 2 bytes @ 0x0
  2612                           
  2613  0070                     i1USBTransferOnePacket@dir:	
  2614                           ; 1 bytes @ 0x0
  2615                           
  2616  0070                     i1USBConfigureEndpoint@direction:	
  2617                           ; 1 bytes @ 0x0
  2618                           
  2619  0070                     i2c_setBuffer@bufferSize:	
  2620                           ; 1 bytes @ 0x0
  2621                           
  2622  0070                     setCallBack@cb:	
  2623                           ; 2 bytes @ 0x0
  2624                           
  2625  0070                     i1memset@p1:	
  2626                           ; 2 bytes @ 0x0
  2627                           
  2628                           
  2629                           ; 2 bytes @ 0x0
  2630  0070                     	ds	1
  2631  0071                     ??_do_I2C_SEND_ADR_WRITE:	
  2632  0071                     ??_do_I2C_TX:	
  2633                           ; 1 bytes @ 0x1
  2634                           
  2635  0071                     ??i1_USBConfigureEndpoint:	
  2636                           ; 1 bytes @ 0x1
  2637                           
  2638  0071                     i1USBDeviceInit@p:	
  2639                           ; 1 bytes @ 0x1
  2640                           
  2641  0071                     i1USBTransferOnePacket@data:	
  2642                           ; 2 bytes @ 0x1
  2643                           
  2644  0071                     i1USBStdGetStatusHandler@p:	
  2645                           ; 2 bytes @ 0x1
  2646                           
  2647                           
  2648                           ; 2 bytes @ 0x1
  2649  0071                     	ds	1
  2650  0072                     ??_i2c_setBuffer:	
  2651  0072                     ??i1_USBCtrlTrfRxService:	
  2652                           ; 1 bytes @ 0x2
  2653                           
  2654  0072                     setCallBack@p:	
  2655                           ; 1 bytes @ 0x2
  2656                           
  2657  0072                     i1USBCtrlTrfTxService@byteToSend:	
  2658                           ; 1 bytes @ 0x2
  2659                           
  2660  0072                     _do_I2C_TX$2684:	
  2661                           ; 1 bytes @ 0x2
  2662                           
  2663  0072                     i1memset@c:	
  2664                           ; 2 bytes @ 0x2
  2665                           
  2666                           
  2667                           ; 2 bytes @ 0x2
  2668  0072                     	ds	1
  2669  0073                     ??_setCallBack:	
  2670  0073                     ??i1_USBCtrlEPAllowDataStage:	
  2671                           ; 1 bytes @ 0x3
  2672                           
  2673  0073                     ??i1_USBCtrlTrfInHandler:	
  2674                           ; 1 bytes @ 0x3
  2675                           
  2676  0073                     i2c_setBuffer@buffer:	
  2677                           ; 1 bytes @ 0x3
  2678                           
  2679  0073                     i1USBDeviceInit@i_1491:	
  2680                           ; 1 bytes @ 0x3
  2681                           
  2682  0073                     i1USBTransferOnePacket@len:	
  2683                           ; 1 bytes @ 0x3
  2684                           
  2685                           
  2686                           ; 1 bytes @ 0x3
  2687  0073                     	ds	1
  2688  0074                     ??_i2c_ISR:	
  2689  0074                     ??i1_USBTransferOnePacket:	
  2690                           ; 1 bytes @ 0x4
  2691                           
  2692  0074                     setCallBack@idx:	
  2693                           ; 1 bytes @ 0x4
  2694                           
  2695  0074                     i1USBDeviceInit@i:	
  2696                           ; 1 bytes @ 0x4
  2697                           
  2698  0074                     i1USBCtrlTrfRxService@i:	
  2699                           ; 1 bytes @ 0x4
  2700                           
  2701  0074                     i1memset@n:	
  2702                           ; 1 bytes @ 0x4
  2703                           
  2704                           
  2705                           ; 2 bytes @ 0x4
  2706  0074                     	ds	1
  2707  0075                     ?_i2c_setDataCompleteCallback:	
  2708  0075                     ??i1_USBCtrlEPServiceComplete:	
  2709                           ; 1 bytes @ 0x5
  2710                           
  2711  0075                     i1USBConfigureEndpoint@EPNum:	
  2712                           ; 1 bytes @ 0x5
  2713                           
  2714  0075                     i1USBCtrlTrfRxService@byteToRead:	
  2715                           ; 1 bytes @ 0x5
  2716                           
  2717  0075                     i1USBCtrlTrfInHandler@lastDTS:	
  2718                           ; 1 bytes @ 0x5
  2719                           
  2720  0075                     i2c_setDataCompleteCallback@cb:	
  2721                           ; 1 bytes @ 0x5
  2722                           
  2723                           
  2724                           ; 2 bytes @ 0x5
  2725  0075                     	ds	1
  2726  0076                     ??i1_USBCtrlTrfOutHandler:	
  2727  0076                     ??i1_memset:	
  2728                           ; 1 bytes @ 0x6
  2729                           
  2730  0076                     i1USBConfigureEndpoint@handle:	
  2731                           ; 1 bytes @ 0x6
  2732                           
  2733  0076                     i1memset@p:	
  2734                           ; 1 bytes @ 0x6
  2735                           
  2736                           
  2737                           ; 2 bytes @ 0x6
  2738  0076                     	ds	1
  2739  0077                     ?i1_USBEnableEndpoint:	
  2740  0077                     i2c_setDataCompleteCallback@p:	
  2741                           ; 1 bytes @ 0x7
  2742                           
  2743  0077                     i1USBEnableEndpoint@options:	
  2744                           ; 1 bytes @ 0x7
  2745                           
  2746                           
  2747                           ; 1 bytes @ 0x7
  2748  0077                     	ds	1
  2749  0078                     ??_i2c_setDataCompleteCallback:	
  2750  0078                     ??i1_USBEnableEndpoint:	
  2751                           ; 1 bytes @ 0x8
  2752                           
  2753  0078                     i1USBTransferOnePacket@ep:	
  2754                           ; 1 bytes @ 0x8
  2755                           
  2756                           
  2757                           ; 1 bytes @ 0x8
  2758  0078                     	ds	1
  2759  0079                     ?_returnStop:	
  2760  0079                     ?_returnReset:	
  2761                           ; 1 bytes @ 0x9
  2762                           
  2763  0079                     ?_i2c_restartWrite:	
  2764                           ; 1 bytes @ 0x9
  2765                           
  2766  0079                     ?_wr1RegCompleteHandler:	
  2767                           ; 1 bytes @ 0x9
  2768                           
  2769  0079                     ?_rd1RegCompleteHandler:	
  2770                           ; 1 bytes @ 0x9
  2771                           
  2772  0079                     ?_rd2RegCompleteHandler:	
  2773                           ; 1 bytes @ 0x9
  2774                           
  2775  0079                     ?_wr2RegCompleteHandler:	
  2776                           ; 1 bytes @ 0x9
  2777                           
  2778  0079                     ?_rdBlkRegCompleteHandler:	
  2779                           ; 1 bytes @ 0x9
  2780                           
  2781  0079                     returnStop@p:	
  2782                           ; 1 bytes @ 0x9
  2783                           
  2784  0079                     returnReset@p:	
  2785                           ; 1 bytes @ 0x9
  2786                           
  2787  0079                     i2c_restartWrite@p:	
  2788                           ; 1 bytes @ 0x9
  2789                           
  2790  0079                     wr1RegCompleteHandler@p:	
  2791                           ; 1 bytes @ 0x9
  2792                           
  2793  0079                     rd1RegCompleteHandler@p:	
  2794                           ; 1 bytes @ 0x9
  2795                           
  2796  0079                     rd2RegCompleteHandler@p:	
  2797                           ; 1 bytes @ 0x9
  2798                           
  2799  0079                     wr2RegCompleteHandler@p:	
  2800                           ; 1 bytes @ 0x9
  2801                           
  2802  0079                     rdBlkRegCompleteHandler@p:	
  2803                           ; 1 bytes @ 0x9
  2804                           
  2805  0079                     i1USBTransferOnePacket@handle:	
  2806                           ; 1 bytes @ 0x9
  2807                           
  2808                           
  2809                           ; 2 bytes @ 0x9
  2810  0079                     	ds	1
  2811  007A                     ??_returnStop:	
  2812  007A                     ??_returnReset:	
  2813                           ; 1 bytes @ 0xA
  2814                           
  2815  007A                     ??_i2c_restartWrite:	
  2816                           ; 1 bytes @ 0xA
  2817                           
  2818  007A                     ??_wr1RegCompleteHandler:	
  2819                           ; 1 bytes @ 0xA
  2820                           
  2821  007A                     ??_rd1RegCompleteHandler:	
  2822                           ; 1 bytes @ 0xA
  2823                           
  2824  007A                     ??_rd2RegCompleteHandler:	
  2825                           ; 1 bytes @ 0xA
  2826                           
  2827  007A                     ??_wr2RegCompleteHandler:	
  2828                           ; 1 bytes @ 0xA
  2829                           
  2830  007A                     ??_rdBlkRegCompleteHandler:	
  2831                           ; 1 bytes @ 0xA
  2832                           
  2833  007A                     i1USBEnableEndpoint@p:	
  2834                           ; 1 bytes @ 0xA
  2835                           
  2836                           
  2837                           ; 2 bytes @ 0xA
  2838  007A                     	ds	2
  2839  007C                     i1USBEnableEndpoint@ep:	
  2840                           
  2841                           ; 1 bytes @ 0xC
  2842  007C                     	ds	1
  2843  007D                     ??i1_CDCInitEP:	
  2844                           
  2845                           ; 1 bytes @ 0xD
  2846  007D                     	ds	1
  2847  007E                     ??i1_USER_USB_CALLBACK_EVENT_HANDLER:	
  2848                           
  2849                           	psect	cstackBANK0h
  2850  0060                     __pcstackBANK0h:	
  2851                           ; 1 bytes @ 0xE
  2852                           
  2853  0060                     ?i1_USER_USB_CALLBACK_EVENT_HANDLER:	
  2854  0060                     i1USER_USB_CALLBACK_EVENT_HANDLER@event:	
  2855                           ; 1 bytes @ 0x0
  2856                           
  2857                           
  2858                           ; 2 bytes @ 0x0
  2859  0060                     	ds	2
  2860  0062                     i1USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  2861                           
  2862                           ; 2 bytes @ 0x2
  2863  0062                     	ds	2
  2864  0064                     i1USER_USB_CALLBACK_EVENT_HANDLER@size:	
  2865                           
  2866                           ; 2 bytes @ 0x4
  2867  0064                     	ds	2
  2868  0066                     ??i1_USBStdSetCfgHandler:	
  2869  0066                     ??i1_USBSuspend:	
  2870                           ; 1 bytes @ 0x6
  2871                           
  2872  0066                     ??i1_USBWakeFromSuspend:	
  2873                           ; 1 bytes @ 0x6
  2874                           
  2875  0066                     ??i1_USBStdFeatureReqHandler:	
  2876                           ; 1 bytes @ 0x6
  2877                           
  2878                           
  2879                           ; 1 bytes @ 0x6
  2880  0066                     	ds	1
  2881  0067                     i1USBStdSetCfgHandler@p:	
  2882                           
  2883                           ; 2 bytes @ 0x7
  2884  0067                     	ds	1
  2885  0068                     i1USBStdFeatureReqHandler@pUEP:	
  2886                           
  2887                           ; 2 bytes @ 0x8
  2888  0068                     	ds	1
  2889  0069                     i1USBStdSetCfgHandler@i_2163:	
  2890                           
  2891                           ; 1 bytes @ 0x9
  2892  0069                     	ds	1
  2893  006A                     i1USBStdSetCfgHandler@i:	
  2894  006A                     i1USBStdFeatureReqHandler@current_ep_data:	
  2895                           ; 1 bytes @ 0xA
  2896                           
  2897                           
  2898                           ; 1 bytes @ 0xA
  2899  006A                     	ds	1
  2900  006B                     i1USBStdFeatureReqHandler@p:	
  2901                           
  2902                           ; 2 bytes @ 0xB
  2903  006B                     	ds	2
  2904  006D                     ??i1_USBCheckStdRequest:	
  2905                           
  2906                           ; 1 bytes @ 0xD
  2907  006D                     	ds	1
  2908  006E                     ??i1_USBCtrlTrfSetupHandler:	
  2909                           
  2910                           ; 1 bytes @ 0xE
  2911  006E                     	ds	1
  2912  006F                     i1USBDeviceTasks@i:	
  2913                           
  2914                           ; 1 bytes @ 0xF
  2915  006F                     	ds	1
  2916                           
  2917                           	psect	maintext
  2918  1E4E                     __pmaintext:	
  2919 ;;
  2920 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2921 ;;
  2922 ;; *************** function _main *****************
  2923 ;; Defined at:
  2924 ;;		line 57 in file "main.c"
  2925 ;; Parameters:    Size  Location     Type
  2926 ;;		None
  2927 ;; Auto vars:     Size  Location     Type
  2928 ;;		None
  2929 ;; Return value:  Size  Location     Type
  2930 ;;                  1    wreg      void 
  2931 ;; Registers used:
  2932 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2933 ;; Tracked objects:
  2934 ;;		On entry : B1F/0
  2935 ;;		On exit  : 0/0
  2936 ;;		Unchanged: 0/0
  2937 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2942 ;;Total ram usage:        0 bytes
  2943 ;; Hardware stack levels required when called:   19
  2944 ;; This function calls:
  2945 ;;		_CDCInitEP
  2946 ;;		_CDCTxService
  2947 ;;		_SYSTEM_Initialize
  2948 ;;		_USBDeviceTasks
  2949 ;;		_UserApplication
  2950 ;; This function is called by:
  2951 ;;		Startup code after reset
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           
  2956                           ;psect for function _main
  2957  1E4E                     _main:	
  2958                           
  2959                           ;main.c: 61: SYSTEM_Initialize();
  2960                           
  2961                           ;incstack = 0
  2962 ;; hardware stack exceeded
  2963                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2964  1E4E  319D  25FF  319E   	fcall	_SYSTEM_Initialize
  2965                           
  2966                           ;main.c: 62: CDCInitEP();
  2967  1E51  3192  224F  319E   	fcall	_CDCInitEP
  2968                           
  2969                           ;main.c: 63: RC3 = 0;
  2970  1E54  0020               	movlb	0	; select bank0
  2971  1E55  118E               	bcf	14,3	;volatile
  2972  1E56                     l8358:	
  2973                           ;main.c: 80: while(1)
  2974                           
  2975                           
  2976                           ;main.c: 81: {
  2977                           ;main.c: 82: USBDeviceTasks();
  2978  1E56  3182  22E1  319E   	fcall	_USBDeviceTasks
  2979                           
  2980                           ;main.c: 88: UserApplication();
  2981  1E59  3192  2217  319E   	fcall	_UserApplication
  2982                           
  2983                           ;main.c: 90: CDCTxService();
  2984  1E5C  3184  24B2  319E   	fcall	_CDCTxService
  2985  1E5F  2E56               	goto	l8358
  2986  1E60                     __end_of_main:	
  2987                           
  2988                           	psect	text1
  2989  1217                     __ptext1:	
  2990 ;; *************** function _UserApplication *****************
  2991 ;; Defined at:
  2992 ;;		line 94 in file "main.c"
  2993 ;; Parameters:    Size  Location     Type
  2994 ;;		None
  2995 ;; Auto vars:     Size  Location     Type
  2996 ;;  numBytesRead    1   27[BANK1 ] unsigned char 
  2997 ;;  i               1    0        unsigned char 
  2998 ;; Return value:  Size  Location     Type
  2999 ;;                  1    wreg      void 
  3000 ;; Registers used:
  3001 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3002 ;; Tracked objects:
  3003 ;;		On entry : 0/0
  3004 ;;		On exit  : 0/0
  3005 ;;		Unchanged: 0/0
  3006 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3008 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3009 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3010 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3011 ;;Total ram usage:        3 bytes
  3012 ;; Hardware stack levels used:    1
  3013 ;; Hardware stack levels required when called:   12
  3014 ;; This function calls:
  3015 ;;		_getsUSBUSART
  3016 ;;		_strstr
  3017 ;; This function is called by:
  3018 ;;		_main
  3019 ;; This function uses a non-reentrant model
  3020 ;;
  3021                           
  3022                           
  3023                           ;psect for function _UserApplication
  3024  1217                     _UserApplication:	
  3025                           
  3026                           ;main.c: 103: if( USBDeviceState < CONFIGURED_STATE || UCONbits.SUSPND== 1 )
  3027                           
  3028                           ;incstack = 0
  3029                           ; Regs used in _UserApplication: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3030  1217  3020               	movlw	32
  3031  1218  0023               	movlb	3	; select bank3
  3032  1219  0265               	subwf	_USBDeviceState^(0+384),w	;volatile
  3033  121A  1C03               	skipc
  3034  121B  0008               	return
  3035  121C  003D               	movlb	29	; select bank29
  3036  121D  188E               	btfsc	14,1	;volatile
  3037  121E  0008               	return
  3038                           
  3039                           ;main.c: 106: }
  3040                           ;main.c: 108: if( (cdc_trf_state == 0) == 1)
  3041                           
  3042                           ;main.c: 104: {
  3043                           ;main.c: 105: return;
  3044  121F  0023               	movlb	3	; select bank3
  3045  1220  0869               	movf	_cdc_trf_state^(0+384),w
  3046  1221  1D03               	btfss	3,2
  3047  1222  0008               	return
  3048                           
  3049                           ;main.c: 109: {
  3050                           ;main.c: 110: uint8_t i;
  3051                           ;main.c: 111: uint8_t numBytesRead;
  3052                           ;main.c: 113: numBytesRead = getsUSBUSART(readBuffer, sizeof(readBuffer));
  3053  1223  3040               	movlw	64
  3054  1224  0021               	movlb	1	; select bank1
  3055  1225  00B9               	movwf	??_UserApplication^(0+128)
  3056  1226  0839               	movf	??_UserApplication^(0+128),w
  3057  1227  00B1               	movwf	getsUSBUSART@len^(0+128)
  3058  1228  3020               	movlw	(low (_readBuffer| (0+768)))& (0+255)
  3059  1229  3196  2684  3192   	fcall	_getsUSBUSART
  3060  122C  0021               	movlb	1	; select bank1
  3061  122D  00BA               	movwf	(??_UserApplication+1)^(0+128)
  3062  122E  083A               	movf	(??_UserApplication+1)^(0+128),w
  3063  122F  00BB               	movwf	UserApplication@numBytesRead^(0+128)
  3064                           
  3065                           ;main.c: 114: if(numBytesRead > 0)
  3066  1230  083B               	movf	UserApplication@numBytesRead^(0+128),w
  3067  1231  1903               	btfsc	3,2
  3068  1232  0008               	return
  3069                           
  3070                           ;main.c: 115: {
  3071                           ;main.c: 117: if(strstr(readBuffer, "ON")) RC3 = 1;
  3072  1233  30E5               	movlw	low (STR_1| (0+32768))
  3073  1234  00B3               	movwf	strstr@s2^(0+128)
  3074  1235  3098               	movlw	high (STR_1| (0+32768))
  3075  1236  00B4               	movwf	(strstr@s2^(0+128)+1)
  3076  1237  3020               	movlw	(low (_readBuffer| (0+768)))& (0+255)
  3077  1238  3192  228D  3192   	fcall	_strstr
  3078  123B  3A00               	xorlw	0
  3079  123C  1903               	skipnz
  3080  123D  2A40               	goto	l8332
  3081  123E  0020               	movlb	0	; select bank0
  3082  123F  158E               	bsf	14,3	;volatile
  3083  1240                     l8332:	
  3084                           
  3085                           ;main.c: 118: if(strstr(readBuffer, "OFF")) RC3 = 0;
  3086  1240  30DB               	movlw	low (STR_2| (0+32768))
  3087  1241  0021               	movlb	1	; select bank1
  3088  1242  00B3               	movwf	strstr@s2^(0+128)
  3089  1243  3098               	movlw	high (STR_2| (0+32768))
  3090  1244  00B4               	movwf	(strstr@s2^(0+128)+1)
  3091  1245  3020               	movlw	(low (_readBuffer| (0+768)))& (0+255)
  3092  1246  3192  228D  3192   	fcall	_strstr
  3093  1249  3A00               	xorlw	0
  3094  124A  1903               	skipnz
  3095  124B  0008               	return
  3096  124C  0020               	movlb	0	; select bank0
  3097  124D  118E               	bcf	14,3	;volatile
  3098  124E  0008               	return
  3099  124F                     __end_of_UserApplication:	
  3100                           
  3101                           	psect	text2
  3102  128D                     __ptext2:	
  3103 ;; *************** function _strstr *****************
  3104 ;; Defined at:
  3105 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strstr.c"
  3106 ;; Parameters:    Size  Location     Type
  3107 ;;  s1              1    wreg     PTR const unsigned char 
  3108 ;;		 -> readBuffer(64), NULL(0), 
  3109 ;;  s2              2   19[BANK1 ] PTR const unsigned char 
  3110 ;;		 -> STR_2(4), STR_1(3), 
  3111 ;; Auto vars:     Size  Location     Type
  3112 ;;  s1              1   24[BANK1 ] PTR const unsigned char 
  3113 ;;		 -> readBuffer(64), NULL(0), 
  3114 ;; Return value:  Size  Location     Type
  3115 ;;                  1    wreg      PTR unsigned char 
  3116 ;; Registers used:
  3117 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3118 ;; Tracked objects:
  3119 ;;		On entry : 0/0
  3120 ;;		On exit  : 0/0
  3121 ;;		Unchanged: 0/0
  3122 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3123 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3124 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3125 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3126 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3127 ;;Total ram usage:        6 bytes
  3128 ;; Hardware stack levels used:    1
  3129 ;; Hardware stack levels required when called:   11
  3130 ;; This function calls:
  3131 ;;		_strchr
  3132 ;;		_strlen
  3133 ;;		_strncmp
  3134 ;; This function is called by:
  3135 ;;		_UserApplication
  3136 ;; This function uses a non-reentrant model
  3137 ;;
  3138                           
  3139                           
  3140                           ;psect for function _strstr
  3141  128D                     _strstr:	
  3142                           
  3143                           ;incstack = 0
  3144                           ; Regs used in _strstr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3145                           ;strstr@s1 stored from wreg
  3146  128D  0021               	movlb	1	; select bank1
  3147  128E  00B8               	movwf	strstr@s1^(0+128)
  3148  128F  2ABF               	goto	l6210
  3149  1290                     l6202:	
  3150  1290  0834               	movf	(strstr@s2+1)^(0+128),w
  3151  1291  00AD               	movwf	(strncmp@s2+1)^(0+128)
  3152  1292  0833               	movf	strstr@s2^(0+128),w
  3153  1293  00AC               	movwf	strncmp@s2^(0+128)
  3154  1294  0834               	movf	(strstr@s2+1)^(0+128),w
  3155  1295  00A7               	movwf	(strlen@s+1)^(0+128)
  3156  1296  0833               	movf	strstr@s2^(0+128),w
  3157  1297  00A6               	movwf	strlen@s^(0+128)
  3158  1298  319F  2761  3192   	fcall	_strlen
  3159  129B  0021               	movlb	1	; select bank1
  3160  129C  0827               	movf	(?_strlen+1)^(0+128),w
  3161  129D  00AF               	movwf	(strncmp@len+1)^(0+128)
  3162  129E  0826               	movf	?_strlen^(0+128),w
  3163  129F  00AE               	movwf	strncmp@len^(0+128)
  3164  12A0  0838               	movf	strstr@s1^(0+128),w
  3165  12A1  3193  238F  3192   	fcall	_strncmp
  3166  12A4  0021               	movlb	1	; select bank1
  3167  12A5  082C               	movf	?_strncmp^(0+128),w
  3168  12A6  042D               	iorwf	(?_strncmp+1)^(0+128),w
  3169  12A7  1D03               	btfss	3,2
  3170  12A8  2AAB               	goto	l6208
  3171  12A9  0838               	movf	strstr@s1^(0+128),w
  3172  12AA  0008               	return
  3173  12AB                     l6208:	
  3174  12AB  0833               	movf	strstr@s2^(0+128),w
  3175  12AC  0084               	movwf	4
  3176  12AD  0834               	movf	(strstr@s2+1)^(0+128),w
  3177  12AE  0085               	movwf	5
  3178  12AF  0800               	movf	0,w	;code access
  3179  12B0  00B5               	movwf	??_strstr^(0+128)
  3180  12B1  01B6               	clrf	(??_strstr^(0+128)+1)
  3181  12B2  0835               	movf	??_strstr^(0+128),w
  3182  12B3  00A6               	movwf	strchr@chr^(0+128)
  3183  12B4  0836               	movf	(??_strstr+1)^(0+128),w
  3184  12B5  00A7               	movwf	(strchr@chr+1)^(0+128)
  3185  12B6  0838               	movf	strstr@s1^(0+128),w
  3186  12B7  3E01               	addlw	1
  3187  12B8  319E  2674  3192   	fcall	_strchr
  3188  12BB  0021               	movlb	1	; select bank1
  3189  12BC  00B7               	movwf	(??_strstr+2)^(0+128)
  3190  12BD  0837               	movf	(??_strstr+2)^(0+128),w
  3191  12BE  00B8               	movwf	strstr@s1^(0+128)
  3192  12BF                     l6210:	
  3193  12BF  0838               	movf	strstr@s1^(0+128),w
  3194  12C0  1903               	btfsc	3,2
  3195  12C1  2AC9               	goto	l6214
  3196  12C2  0838               	movf	strstr@s1^(0+128),w
  3197  12C3  0086               	movwf	6
  3198  12C4  3003               	movlw	3	; select bank6/7
  3199  12C5  0087               	movwf	7
  3200  12C6  0801               	movf	1,w
  3201  12C7  1D03               	btfss	3,2
  3202  12C8  2A90               	goto	l6202
  3203  12C9                     l6214:	
  3204  12C9  3000               	movlw	0
  3205  12CA  0008               	return
  3206  12CB                     __end_of_strstr:	
  3207                           
  3208                           	psect	text3
  3209  138F                     __ptext3:	
  3210 ;; *************** function _strncmp *****************
  3211 ;; Defined at:
  3212 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
  3213 ;; Parameters:    Size  Location     Type
  3214 ;;  s1              1    wreg     PTR const unsigned char 
  3215 ;;		 -> readBuffer(64), NULL(0), 
  3216 ;;  s2              2   12[BANK1 ] PTR const unsigned char 
  3217 ;;		 -> STR_2(4), STR_1(3), 
  3218 ;;  len             2   14[BANK1 ] unsigned int 
  3219 ;; Auto vars:     Size  Location     Type
  3220 ;;  s1              1   18[BANK1 ] PTR const unsigned char 
  3221 ;;		 -> readBuffer(64), NULL(0), 
  3222 ;; Return value:  Size  Location     Type
  3223 ;;                  2   12[BANK1 ] int 
  3224 ;; Registers used:
  3225 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  3226 ;; Tracked objects:
  3227 ;;		On entry : 0/0
  3228 ;;		On exit  : 0/0
  3229 ;;		Unchanged: 0/0
  3230 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3231 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3232 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3233 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3234 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  3235 ;;Total ram usage:        7 bytes
  3236 ;; Hardware stack levels used:    1
  3237 ;; Hardware stack levels required when called:   10
  3238 ;; This function calls:
  3239 ;;		Nothing
  3240 ;; This function is called by:
  3241 ;;		_strstr
  3242 ;; This function uses a non-reentrant model
  3243 ;;
  3244                           
  3245                           
  3246                           ;psect for function _strncmp
  3247  138F                     _strncmp:	
  3248                           
  3249                           ;incstack = 0
  3250                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
  3251                           ;strncmp@s1 stored from wreg
  3252  138F  0021               	movlb	1	; select bank1
  3253  1390  00B2               	movwf	strncmp@s1^(0+128)
  3254  1391                     l5886:	
  3255  1391  3001               	movlw	1
  3256  1392  02AE               	subwf	strncmp@len^(0+128),f
  3257  1393  3000               	movlw	0
  3258  1394  3BAF               	subwfb	(strncmp@len+1)^(0+128),f
  3259  1395  0A2E               	incf	strncmp@len^(0+128),w
  3260  1396  1903               	btfsc	3,2
  3261  1397  0A2F               	incf	(strncmp@len+1)^(0+128),w
  3262  1398  1903               	btfsc	3,2
  3263  1399  2BD0               	goto	l5888
  3264  139A  0832               	movf	strncmp@s1^(0+128),w
  3265  139B  0086               	movwf	6
  3266  139C  3003               	movlw	3	; select bank6/7
  3267  139D  0087               	movwf	7
  3268  139E  0801               	movf	1,w
  3269  139F  1903               	btfsc	3,2
  3270  13A0  2BAF               	goto	l5878
  3271  13A1  082C               	movf	strncmp@s2^(0+128),w
  3272  13A2  0084               	movwf	4
  3273  13A3  082D               	movf	(strncmp@s2+1)^(0+128),w
  3274  13A4  0085               	movwf	5
  3275  13A5  0800               	movf	0,w	;code access
  3276  13A6  00B0               	movwf	??_strncmp^(0+128)
  3277  13A7  0832               	movf	strncmp@s1^(0+128),w
  3278  13A8  0086               	movwf	6
  3279  13A9  3003               	movlw	3	; select bank6/7
  3280  13AA  0087               	movwf	7
  3281  13AB  0801               	movf	1,w
  3282  13AC  0630               	xorwf	??_strncmp^(0+128),w
  3283  13AD  1903               	skipnz
  3284  13AE  2BC7               	goto	l5882
  3285  13AF                     l5878:	
  3286  13AF  082C               	movf	strncmp@s2^(0+128),w
  3287  13B0  0084               	movwf	4
  3288  13B1  082D               	movf	(strncmp@s2+1)^(0+128),w
  3289  13B2  0085               	movwf	5
  3290  13B3  0800               	movf	0,w	;code access
  3291  13B4  00B0               	movwf	??_strncmp^(0+128)
  3292  13B5  01B1               	clrf	(??_strncmp^(0+128)+1)
  3293  13B6  09B0               	comf	??_strncmp^(0+128),f
  3294  13B7  09B1               	comf	(??_strncmp^(0+128)+1),f
  3295  13B8  0AB0               	incf	??_strncmp^(0+128),f
  3296  13B9  1903               	skipnz
  3297  13BA  0AB1               	incf	(??_strncmp^(0+128)+1),f
  3298  13BB  0832               	movf	strncmp@s1^(0+128),w
  3299  13BC  0086               	movwf	6
  3300  13BD  3003               	movlw	3	; select bank6/7
  3301  13BE  0087               	movwf	7
  3302  13BF  0801               	movf	1,w
  3303  13C0  0730               	addwf	??_strncmp^(0+128),w
  3304  13C1  00AC               	movwf	?_strncmp^(0+128)
  3305  13C2  0831               	movf	(??_strncmp+1)^(0+128),w
  3306  13C3  1803               	skipnc
  3307  13C4  0A31               	incf	(??_strncmp+1)^(0+128),w
  3308  13C5  00AD               	movwf	(?_strncmp^(0+128)+1)
  3309  13C6  0008               	return
  3310  13C7                     l5882:	
  3311  13C7  3001               	movlw	1
  3312  13C8  00B0               	movwf	??_strncmp^(0+128)
  3313  13C9  0830               	movf	??_strncmp^(0+128),w
  3314  13CA  07B2               	addwf	strncmp@s1^(0+128),f
  3315  13CB  3001               	movlw	1
  3316  13CC  07AC               	addwf	strncmp@s2^(0+128),f
  3317  13CD  3000               	movlw	0
  3318  13CE  3DAD               	addwfc	(strncmp@s2+1)^(0+128),f
  3319  13CF  2B91               	goto	l5886
  3320  13D0                     l5888:	
  3321  13D0  01AC               	clrf	?_strncmp^(0+128)
  3322  13D1  01AD               	clrf	(?_strncmp+1)^(0+128)
  3323  13D2  0008               	return
  3324  13D3                     __end_of_strncmp:	
  3325                           
  3326                           	psect	text4
  3327  1F61                     __ptext4:	
  3328 ;; *************** function _strlen *****************
  3329 ;; Defined at:
  3330 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
  3331 ;; Parameters:    Size  Location     Type
  3332 ;;  s               2    6[BANK1 ] PTR const unsigned char 
  3333 ;;		 -> STR_2(4), STR_1(3), 
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;  cp              2   10[BANK1 ] PTR const unsigned char 
  3336 ;;		 -> STR_2(4), STR_1(3), 
  3337 ;; Return value:  Size  Location     Type
  3338 ;;                  2    6[BANK1 ] unsigned int 
  3339 ;; Registers used:
  3340 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3341 ;; Tracked objects:
  3342 ;;		On entry : 0/0
  3343 ;;		On exit  : 0/0
  3344 ;;		Unchanged: 0/0
  3345 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3346 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3347 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3348 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3349 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3350 ;;Total ram usage:        6 bytes
  3351 ;; Hardware stack levels used:    1
  3352 ;; Hardware stack levels required when called:   10
  3353 ;; This function calls:
  3354 ;;		Nothing
  3355 ;; This function is called by:
  3356 ;;		_strstr
  3357 ;; This function uses a non-reentrant model
  3358 ;;
  3359                           
  3360                           
  3361                           ;psect for function _strlen
  3362  1F61                     _strlen:	
  3363                           
  3364                           ;incstack = 0
  3365                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  3366  1F61  0021               	movlb	1	; select bank1
  3367  1F62  0827               	movf	(strlen@s+1)^(0+128),w
  3368  1F63  00AB               	movwf	(strlen@cp+1)^(0+128)
  3369  1F64  0826               	movf	strlen@s^(0+128),w
  3370  1F65  00AA               	movwf	strlen@cp^(0+128)
  3371  1F66                     l5866:	
  3372  1F66  082A               	movf	strlen@cp^(0+128),w
  3373  1F67  0084               	movwf	4
  3374  1F68  082B               	movf	(strlen@cp+1)^(0+128),w
  3375  1F69  0085               	movwf	5
  3376  1F6A  0012               	moviw fsr0++
  3377  1F6B  1903               	btfsc	3,2
  3378  1F6C  2F72               	goto	l5868
  3379  1F6D  3001               	movlw	1
  3380  1F6E  07AA               	addwf	strlen@cp^(0+128),f
  3381  1F6F  3000               	movlw	0
  3382  1F70  3DAB               	addwfc	(strlen@cp+1)^(0+128),f
  3383  1F71  2F66               	goto	l5866
  3384  1F72                     l5868:	
  3385  1F72  0926               	comf	strlen@s^(0+128),w
  3386  1F73  00A8               	movwf	??_strlen^(0+128)
  3387  1F74  0927               	comf	(strlen@s+1)^(0+128),w
  3388  1F75  00A9               	movwf	(??_strlen^(0+128)+1)
  3389  1F76  0AA8               	incf	??_strlen^(0+128),f
  3390  1F77  1903               	skipnz
  3391  1F78  0AA9               	incf	(??_strlen^(0+128)+1),f
  3392  1F79  082A               	movf	strlen@cp^(0+128),w
  3393  1F7A  0728               	addwf	??_strlen^(0+128),w
  3394  1F7B  00A6               	movwf	?_strlen^(0+128)
  3395  1F7C  082B               	movf	(strlen@cp+1)^(0+128),w
  3396  1F7D  3D29               	addwfc	(??_strlen+1)^(0+128),w
  3397  1F7E  00A7               	movwf	(?_strlen+1)^(0+128)
  3398  1F7F  0008               	return
  3399  1F80                     __end_of_strlen:	
  3400                           
  3401                           	psect	text5
  3402  1E74                     __ptext5:	
  3403 ;; *************** function _strchr *****************
  3404 ;; Defined at:
  3405 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strchr.c"
  3406 ;; Parameters:    Size  Location     Type
  3407 ;;  ptr             1    wreg     PTR const unsigned char 
  3408 ;;		 -> readBuffer(64), NULL(0), 
  3409 ;;  chr             2    6[BANK1 ] int 
  3410 ;; Auto vars:     Size  Location     Type
  3411 ;;  ptr             1    8[BANK1 ] PTR const unsigned char 
  3412 ;;		 -> readBuffer(64), NULL(0), 
  3413 ;; Return value:  Size  Location     Type
  3414 ;;                  1    wreg      PTR unsigned char 
  3415 ;; Registers used:
  3416 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3417 ;; Tracked objects:
  3418 ;;		On entry : 0/0
  3419 ;;		On exit  : 0/0
  3420 ;;		Unchanged: 0/0
  3421 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3422 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3423 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3425 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3426 ;;Total ram usage:        3 bytes
  3427 ;; Hardware stack levels used:    1
  3428 ;; Hardware stack levels required when called:   10
  3429 ;; This function calls:
  3430 ;;		Nothing
  3431 ;; This function is called by:
  3432 ;;		_strstr
  3433 ;; This function uses a non-reentrant model
  3434 ;;
  3435                           
  3436                           
  3437                           ;psect for function _strchr
  3438  1E74                     _strchr:	
  3439                           
  3440                           ;incstack = 0
  3441                           ; Regs used in _strchr: [wreg+fsr1l+fsr1h+status,2+status,0]
  3442                           ;strchr@ptr stored from wreg
  3443  1E74  0021               	movlb	1	; select bank1
  3444  1E75  00A8               	movwf	strchr@ptr^(0+128)
  3445  1E76                     l1536:	
  3446  1E76  0828               	movf	strchr@ptr^(0+128),w
  3447  1E77  0086               	movwf	6
  3448  1E78  3003               	movlw	3	; select bank6/7
  3449  1E79  0087               	movwf	7
  3450  1E7A  0801               	movf	1,w
  3451  1E7B  0626               	xorwf	strchr@chr^(0+128),w
  3452  1E7C  1D03               	skipz
  3453  1E7D  2E80               	goto	l5898
  3454  1E7E  0828               	movf	strchr@ptr^(0+128),w
  3455  1E7F  0008               	return
  3456  1E80                     l5898:	
  3457  1E80  0828               	movf	strchr@ptr^(0+128),w
  3458  1E81  0086               	movwf	6
  3459  1E82  3003               	movlw	3	; select bank6/7
  3460  1E83  0087               	movwf	7
  3461  1E84  0AA8               	incf	strchr@ptr^(0+128),f
  3462  1E85  0801               	movf	1,w
  3463  1E86  1D03               	btfss	3,2
  3464  1E87  2E76               	goto	l1536
  3465  1E88  3000               	movlw	0
  3466  1E89  0008               	return
  3467  1E8A                     __end_of_strchr:	
  3468                           
  3469                           	psect	text6
  3470  1684                     __ptext6:	
  3471 ;; *************** function _getsUSBUSART *****************
  3472 ;; Defined at:
  3473 ;;		line 484 in file "mcc_generated_files/usb/usb_device_cdc.c"
  3474 ;; Parameters:    Size  Location     Type
  3475 ;;  buffer          1    wreg     PTR unsigned char 
  3476 ;;		 -> readBuffer(64), 
  3477 ;;  len             1   17[BANK1 ] unsigned char 
  3478 ;; Auto vars:     Size  Location     Type
  3479 ;;  buffer          1   20[BANK1 ] PTR unsigned char 
  3480 ;;		 -> readBuffer(64), 
  3481 ;; Return value:  Size  Location     Type
  3482 ;;                  1    wreg      unsigned char 
  3483 ;; Registers used:
  3484 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3485 ;; Tracked objects:
  3486 ;;		On entry : 0/0
  3487 ;;		On exit  : 0/0
  3488 ;;		Unchanged: 0/0
  3489 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3490 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3491 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3492 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3493 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3494 ;;Total ram usage:        4 bytes
  3495 ;; Hardware stack levels used:    1
  3496 ;; Hardware stack levels required when called:   11
  3497 ;; This function calls:
  3498 ;;		_USBTransferOnePacket
  3499 ;; This function is called by:
  3500 ;;		_UserApplication
  3501 ;; This function uses a non-reentrant model
  3502 ;;
  3503                           
  3504                           
  3505                           ;psect for function _getsUSBUSART
  3506  1684                     _getsUSBUSART:	
  3507                           
  3508                           ;incstack = 0
  3509                           ; Regs used in _getsUSBUSART: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3510                           ;getsUSBUSART@buffer stored from wreg
  3511  1684  0021               	movlb	1	; select bank1
  3512  1685  00B4               	movwf	getsUSBUSART@buffer^(0+128)
  3513                           
  3514                           ;usb_device_cdc.c: 486: cdc_rx_len = 0;
  3515  1686  0023               	movlb	3	; select bank3
  3516  1687  01EA               	clrf	_cdc_rx_len^(0+384)
  3517                           
  3518                           ;usb_device_cdc.c: 488: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
  3519  1688  084F               	movf	_CDCDataOutHandle^(0+384),w
  3520  1689  0450               	iorwf	(_CDCDataOutHandle+1)^(0+384),w
  3521  168A  1903               	btfsc	3,2
  3522  168B  2E92               	goto	l8054
  3523  168C  084F               	movf	_CDCDataOutHandle^(0+384),w
  3524  168D  0086               	movwf	6
  3525  168E  0850               	movf	(_CDCDataOutHandle+1)^(0+384),w
  3526  168F  0087               	movwf	7
  3527  1690  1B81               	btfsc	1,7
  3528  1691  2EDE               	goto	l8068
  3529  1692                     l8054:	
  3530                           
  3531                           ;usb_device_cdc.c: 489: {
  3532                           ;usb_device_cdc.c: 494: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
  3533  1692  084F               	movf	_CDCDataOutHandle^(0+384),w
  3534  1693  0086               	movwf	6
  3535  1694  0850               	movf	(_CDCDataOutHandle+1)^(0+384),w
  3536  1695  0087               	movwf	7
  3537  1696  3141               	addfsr 1,1
  3538  1697  0021               	movlb	1	; select bank1
  3539  1698  0831               	movf	getsUSBUSART@len^(0+128),w
  3540  1699  0201               	subwf	1,w
  3541  169A  1803               	skipnc
  3542  169B  2EA7               	goto	l8058
  3543                           
  3544                           ;usb_device_cdc.c: 495: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
  3545  169C  0023               	movlb	3	; select bank3
  3546  169D  084F               	movf	_CDCDataOutHandle^(0+384),w
  3547  169E  0086               	movwf	6
  3548  169F  0850               	movf	(_CDCDataOutHandle+1)^(0+384),w
  3549  16A0  0087               	movwf	7
  3550  16A1  3141               	addfsr 1,1
  3551  16A2  0801               	movf	1,w
  3552  16A3  0021               	movlb	1	; select bank1
  3553  16A4  00B2               	movwf	??_getsUSBUSART^(0+128)
  3554  16A5  0832               	movf	??_getsUSBUSART^(0+128),w
  3555  16A6  00B1               	movwf	getsUSBUSART@len^(0+128)
  3556  16A7                     l8058:	
  3557                           
  3558                           ;usb_device_cdc.c: 500: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
  3559  16A7  0023               	movlb	3	; select bank3
  3560  16A8  01EA               	clrf	_cdc_rx_len^(0+384)
  3561  16A9                     l8064:	
  3562  16A9  0021               	movlb	1	; select bank1
  3563  16AA  0831               	movf	getsUSBUSART@len^(0+128),w
  3564  16AB  0023               	movlb	3	; select bank3
  3565  16AC  026A               	subwf	_cdc_rx_len^(0+384),w
  3566  16AD  1803               	btfsc	3,0
  3567  16AE  2EC9               	goto	l8066
  3568                           
  3569                           ;usb_device_cdc.c: 501: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
  3570  16AF  086A               	movf	_cdc_rx_len^(0+384),w
  3571  16B0  3EC0               	addlw	192
  3572  16B1  0086               	movwf	6
  3573  16B2  0187               	clrf	7
  3574  16B3  3020               	movlw	32
  3575  16B4  3D87               	addwfc	7,f
  3576  16B5  0801               	movf	1,w
  3577  16B6  0021               	movlb	1	; select bank1
  3578  16B7  00B2               	movwf	??_getsUSBUSART^(0+128)
  3579  16B8  0023               	movlb	3	; select bank3
  3580  16B9  086A               	movf	_cdc_rx_len^(0+384),w
  3581  16BA  0021               	movlb	1	; select bank1
  3582  16BB  0734               	addwf	getsUSBUSART@buffer^(0+128),w
  3583  16BC  00B3               	movwf	(??_getsUSBUSART+1)^(0+128)
  3584  16BD  0833               	movf	(??_getsUSBUSART+1)^(0+128),w
  3585  16BE  0086               	movwf	6
  3586  16BF  3003               	movlw	3	; select bank6/7
  3587  16C0  0087               	movwf	7
  3588  16C1  0832               	movf	??_getsUSBUSART^(0+128),w
  3589  16C2  0081               	movwf	1
  3590  16C3  3001               	movlw	1
  3591  16C4  00B2               	movwf	??_getsUSBUSART^(0+128)
  3592  16C5  0832               	movf	??_getsUSBUSART^(0+128),w
  3593  16C6  0023               	movlb	3	; select bank3
  3594  16C7  07EA               	addwf	_cdc_rx_len^(0+384),f
  3595  16C8  2EA9               	goto	l8064
  3596  16C9                     l8066:	
  3597                           
  3598                           ;usb_device_cdc.c: 507: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  3599  16C9  0021               	movlb	1	; select bank1
  3600  16CA  01A6               	clrf	USBTransferOnePacket@dir^(0+128)
  3601  16CB  30C0               	movlw	192
  3602  16CC  00A7               	movwf	USBTransferOnePacket@data^(0+128)
  3603  16CD  3020               	movlw	32
  3604  16CE  00A8               	movwf	(USBTransferOnePacket@data^(0+128)+1)
  3605  16CF  3040               	movlw	64
  3606  16D0  00B2               	movwf	??_getsUSBUSART^(0+128)
  3607  16D1  0832               	movf	??_getsUSBUSART^(0+128),w
  3608  16D2  00A9               	movwf	USBTransferOnePacket@len^(0+128)
  3609  16D3  3002               	movlw	2
  3610  16D4  318C  2495         	fcall	_USBTransferOnePacket
  3611  16D6  0021               	movlb	1	; select bank1
  3612  16D7  0827               	movf	(?_USBTransferOnePacket+1)^(0+128),w
  3613  16D8  0023               	movlb	3	; select bank3
  3614  16D9  00D0               	movwf	(_CDCDataOutHandle+1)^(0+384)
  3615  16DA  0021               	movlb	1	; select bank1
  3616  16DB  0826               	movf	?_USBTransferOnePacket^(0+128),w
  3617  16DC  0023               	movlb	3	; select bank3
  3618  16DD  00CF               	movwf	_CDCDataOutHandle^(0+384)
  3619  16DE                     l8068:	
  3620                           
  3621                           ;usb_device_cdc.c: 509: }
  3622                           ;usb_device_cdc.c: 511: return cdc_rx_len;
  3623  16DE  086A               	movf	_cdc_rx_len^(0+384),w
  3624  16DF  0008               	return
  3625  16E0                     __end_of_getsUSBUSART:	
  3626                           
  3627                           	psect	text7
  3628  02E1                     __ptext7:	
  3629 ;; *************** function _USBDeviceTasks *****************
  3630 ;; Defined at:
  3631 ;;		line 477 in file "mcc_generated_files/usb/usb_device.c"
  3632 ;; Parameters:    Size  Location     Type
  3633 ;;		None
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;  i               1    0[BANK3 ] unsigned char 
  3636 ;; Return value:  Size  Location     Type
  3637 ;;                  1    wreg      void 
  3638 ;; Registers used:
  3639 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3640 ;; Tracked objects:
  3641 ;;		On entry : 0/0
  3642 ;;		On exit  : 0/0
  3643 ;;		Unchanged: 0/0
  3644 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3646 ;;      Locals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  3647 ;;      Temps:          0       0       0       0       0       2       0       0       0       0       0       0       
      +0       0
  3648 ;;      Totals:         0       0       0       0       1       2       0       0       0       0       0       0       
      +0       0
  3649 ;;Total ram usage:        3 bytes
  3650 ;; Hardware stack levels used:    1
  3651 ;; Hardware stack levels required when called:   18
  3652 ;; This function calls:
  3653 ;;		_USBCtrlEPAllowStatusStage
  3654 ;;		_USBCtrlEPService
  3655 ;;		_USBDeviceInit
  3656 ;;		_USBIncrement1msInternalTimers
  3657 ;;		_USBStallHandler
  3658 ;;		_USBSuspend
  3659 ;;		_USBWakeFromSuspend
  3660 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  3661 ;; This function is called by:
  3662 ;;		_main
  3663 ;; This function uses a non-reentrant model
  3664 ;;
  3665                           
  3666                           
  3667                           ;psect for function _USBDeviceTasks
  3668  02E1                     _USBDeviceTasks:	
  3669                           
  3670                           ;usb_device.c: 479: uint8_t i;
  3671                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
  3672                           
  3673                           ;incstack = 0
  3674 ;; hardware stack exceeded
  3675                           ; Regs used in _USBDeviceTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3676  02E1  0023               	movlb	3	; select bank3
  3677  02E2  0365               	decf	_USBDeviceState^(0+384),w	;volatile
  3678  02E3  1D03               	btfss	3,2
  3679  02E4  2AF1               	goto	l8158
  3680                           
  3681                           ;usb_device.c: 591: {
  3682                           ;usb_device.c: 601: if(!UCONbits.SE0)
  3683  02E5  003D               	movlb	29	; select bank29
  3684  02E6  1A8E               	btfsc	14,5	;volatile
  3685  02E7  2AF1               	goto	l8158
  3686                           
  3687                           ;usb_device.c: 602: {
  3688                           ;usb_device.c: 608: {UIR = 0;};
  3689  02E8  0190               	clrf	16	;volatile
  3690                           
  3691                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
  3692  02E9  1412               	bsf	18,0	;volatile
  3693                           
  3694                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
  3695  02EA  1612               	bsf	18,4	;volatile
  3696                           
  3697                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
  3698  02EB  3002               	movlw	2
  3699  02EC  0024               	movlb	4	; select bank4
  3700  02ED  00E1               	movwf	??_USBDeviceTasks^(0+512)
  3701  02EE  0861               	movf	??_USBDeviceTasks^(0+512),w
  3702  02EF  0023               	movlb	3	; select bank3
  3703  02F0  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
  3704  02F1                     l8158:	
  3705                           
  3706                           ;usb_device.c: 617: }
  3707                           ;usb_device.c: 618: }
  3708                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  3709  02F1  003D               	movlb	29	; select bank29
  3710  02F2  1910               	btfsc	16,2	;volatile
  3711  02F3  1D12               	btfss	18,2	;volatile
  3712  02F4  2AFE               	goto	l8166
  3713                           
  3714                           ;usb_device.c: 635: {
  3715                           ;usb_device.c: 636: (UIR &= 0xFB);
  3716  02F5  30FB               	movlw	251
  3717  02F6  0024               	movlb	4	; select bank4
  3718  02F7  00E1               	movwf	??_USBDeviceTasks^(0+512)
  3719  02F8  0861               	movf	??_USBDeviceTasks^(0+512),w
  3720  02F9  003D               	movlb	29	; select bank29
  3721  02FA  0590               	andwf	16,f	;volatile
  3722                           
  3723                           ;usb_device.c: 640: USBWakeFromSuspend();
  3724  02FB  319F  27E0  3182   	fcall	_USBWakeFromSuspend
  3725  02FE                     l8166:	
  3726                           
  3727                           ;usb_device.c: 642: }
  3728                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
  3729  02FE  003D               	movlb	29	; select bank29
  3730  02FF  1C8E               	btfss	14,1	;volatile
  3731  0300  2B04               	goto	l391
  3732                           
  3733                           ;usb_device.c: 648: {
  3734                           ;usb_device.c: 649: PIR2bits.USBIF = 0;;
  3735  0301  0020               	movlb	0	; select bank0
  3736  0302  1112               	bcf	18,2	;volatile
  3737                           
  3738                           ;usb_device.c: 650: return;
  3739  0303  0008               	return
  3740  0304                     l391:	
  3741                           
  3742                           ;usb_device.c: 651: }
  3743                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
  3744  0304  1810               	btfsc	16,0	;volatile
  3745  0305  1C12               	btfss	18,0	;volatile
  3746  0306  2B18               	goto	l8180
  3747                           
  3748                           ;usb_device.c: 664: {
  3749                           ;usb_device.c: 665: USBDeviceInit();
  3750  0307  3185  257E  3182   	fcall	_USBDeviceInit
  3751                           
  3752                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
  3753  030A  0021               	movlb	1	; select bank1
  3754  030B  1512               	bsf	18,2	;volatile
  3755                           
  3756                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
  3757  030C  3004               	movlw	4
  3758  030D  0024               	movlb	4	; select bank4
  3759  030E  00E1               	movwf	??_USBDeviceTasks^(0+512)
  3760  030F  0861               	movf	??_USBDeviceTasks^(0+512),w
  3761  0310  0023               	movlb	3	; select bank3
  3762  0311  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
  3763                           
  3764                           ;usb_device.c: 681: (UIR &= 0xFE);
  3765  0312  30FE               	movlw	254
  3766  0313  0024               	movlb	4	; select bank4
  3767  0314  00E1               	movwf	??_USBDeviceTasks^(0+512)
  3768  0315  0861               	movf	??_USBDeviceTasks^(0+512),w
  3769  0316  003D               	movlb	29	; select bank29
  3770  0317  0590               	andwf	16,f	;volatile
  3771  0318                     l8180:	
  3772                           
  3773                           ;usb_device.c: 682: }
  3774                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  3775  0318  1A10               	btfsc	16,4	;volatile
  3776  0319  1E12               	btfss	18,4	;volatile
  3777  031A  2B1E               	goto	l8186
  3778                           
  3779                           ;usb_device.c: 688: {
  3780                           ;usb_device.c: 694: USBSuspend();
  3781  031B  319F  2742  3182   	fcall	_USBSuspend
  3782  031E                     l8186:	
  3783                           
  3784                           ;usb_device.c: 696: }
  3785                           ;usb_device.c: 708: if(UIRbits.SOFIF)
  3786  031E  003D               	movlb	29	; select bank29
  3787  031F  1F10               	btfss	16,6	;volatile
  3788  0320  2B48               	goto	l8202
  3789                           
  3790                           ;usb_device.c: 709: {
  3791                           ;usb_device.c: 711: if(UIEbits.SOFIE)
  3792  0321  1F12               	btfss	18,6	;volatile
  3793  0322  2B33               	goto	l8192
  3794                           
  3795                           ;usb_device.c: 712: {
  3796                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  3797  0323  3073               	movlw	115
  3798  0324  0021               	movlb	1	; select bank1
  3799  0325  00B4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  3800  0326  3000               	movlw	0
  3801  0327  00B5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)+1)
  3802  0328  3000               	movlw	0
  3803  0329  00B6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  3804  032A  3000               	movlw	0
  3805  032B  00B7               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  3806  032C  3001               	movlw	1
  3807  032D  00B8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  3808  032E  3000               	movlw	0
  3809  032F  00B9               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)+1)
  3810  0330  3191  2145  3182   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  3811  0333                     l8192:	
  3812                           
  3813                           ;usb_device.c: 714: }
  3814                           ;usb_device.c: 715: (UIR &= 0xBF);
  3815  0333  30BF               	movlw	191
  3816  0334  0024               	movlb	4	; select bank4
  3817  0335  00E1               	movwf	??_USBDeviceTasks^(0+512)
  3818  0336  0861               	movf	??_USBDeviceTasks^(0+512),w
  3819  0337  003D               	movlb	29	; select bank29
  3820  0338  0590               	andwf	16,f	;volatile
  3821                           
  3822                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
  3823  0339  319E  26EA  3182   	fcall	_USBIncrement1msInternalTimers
  3824                           
  3825                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
  3826  033C  0023               	movlb	3	; select bank3
  3827  033D  085C               	movf	_USBStatusStageTimeoutCounter^(0+384),w	;volatile
  3828  033E  1903               	btfsc	3,2
  3829  033F  2B42               	goto	l397
  3830                           
  3831                           ;usb_device.c: 736: {
  3832                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
  3833  0340  3001               	movlw	1
  3834  0341  02DC               	subwf	_USBStatusStageTimeoutCounter^(0+384),f	;volatile
  3835  0342                     l397:	
  3836                           
  3837                           ;usb_device.c: 738: }
  3838                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
  3839  0342  085C               	movf	_USBStatusStageTimeoutCounter^(0+384),w	;volatile
  3840  0343  1D03               	btfss	3,2
  3841  0344  2B48               	goto	l8202
  3842                           
  3843                           ;usb_device.c: 745: {
  3844                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
  3845  0345  318A  229A  3182   	fcall	_USBCtrlEPAllowStatusStage
  3846  0348                     l8202:	
  3847                           
  3848                           ;usb_device.c: 747: }
  3849                           ;usb_device.c: 749: }
  3850                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
  3851  0348  003D               	movlb	29	; select bank29
  3852  0349  1A90               	btfsc	16,5	;volatile
  3853  034A  1E92               	btfss	18,5	;volatile
  3854  034B  2B4F               	goto	l8208
  3855                           
  3856                           ;usb_device.c: 752: {
  3857                           ;usb_device.c: 753: USBStallHandler();
  3858  034C  3190  20EA  3182   	fcall	_USBStallHandler
  3859  034F                     l8208:	
  3860                           
  3861                           ;usb_device.c: 754: }
  3862                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
  3863  034F  003D               	movlb	29	; select bank29
  3864  0350  1890               	btfsc	16,1	;volatile
  3865  0351  1C92               	btfss	18,1	;volatile
  3866  0352  2B65               	goto	l8216
  3867                           
  3868                           ;usb_device.c: 757: {
  3869                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  3870  0353  30FF               	movlw	255
  3871  0354  0021               	movlb	1	; select bank1
  3872  0355  00B4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  3873  0356  307F               	movlw	127
  3874  0357  00B5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)+1)
  3875  0358  3000               	movlw	0
  3876  0359  00B6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  3877  035A  3000               	movlw	0
  3878  035B  00B7               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  3879  035C  3001               	movlw	1
  3880  035D  00B8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  3881  035E  3000               	movlw	0
  3882  035F  00B9               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)+1)
  3883  0360  3191  2145  3182   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  3884                           
  3885                           ;usb_device.c: 759: {UEIR = 0;};
  3886  0363  003D               	movlb	29	; select bank29
  3887  0364  0193               	clrf	19	;volatile
  3888  0365                     l8216:	
  3889                           
  3890                           ;usb_device.c: 767: }
  3891                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
  3892  0365  3004               	movlw	4
  3893  0366  0023               	movlb	3	; select bank3
  3894  0367  0265               	subwf	_USBDeviceState^(0+384),w	;volatile
  3895  0368  1803               	skipnc
  3896  0369  2B6D               	goto	l401
  3897                           
  3898                           ;usb_device.c: 775: {
  3899                           ;usb_device.c: 776: PIR2bits.USBIF = 0;;
  3900  036A  0020               	movlb	0	; select bank0
  3901  036B  1112               	bcf	18,2	;volatile
  3902                           
  3903                           ;usb_device.c: 777: return;
  3904  036C  0008               	return
  3905  036D                     l401:	
  3906                           
  3907                           ;usb_device.c: 778: }
  3908                           ;usb_device.c: 783: if(UIEbits.TRNIE)
  3909  036D  003D               	movlb	29	; select bank29
  3910  036E  1D92               	btfss	18,3	;volatile
  3911  036F  2BC7               	goto	l402
  3912                           
  3913                           ;usb_device.c: 784: {
  3914                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
  3915  0370  0023               	movlb	3	; select bank3
  3916  0371  01EF               	clrf	USBDeviceTasks@i^(0+384)
  3917  0372  3004               	movlw	4
  3918  0373  026F               	subwf	USBDeviceTasks@i^(0+384),w
  3919  0374  1803               	btfsc	3,0
  3920  0375  2BC7               	goto	l402
  3921  0376                     l403:	
  3922                           
  3923                           ;usb_device.c: 786: {
  3924                           ;usb_device.c: 787: if(UIRbits.TRNIF)
  3925  0376  003D               	movlb	29	; select bank29
  3926  0377  1D90               	btfss	16,3	;volatile
  3927  0378  2BC7               	goto	l402
  3928                           
  3929                           ;usb_device.c: 788: {
  3930                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
  3931  0379  080F               	movf	15,w	;volatile
  3932  037A  0024               	movlb	4	; select bank4
  3933  037B  00E1               	movwf	??_USBDeviceTasks^(0+512)
  3934  037C  0861               	movf	??_USBDeviceTasks^(0+512),w
  3935  037D  0023               	movlb	3	; select bank3
  3936  037E  00ED               	movwf	_USTATcopy^(0+384)	;volatile
  3937                           
  3938                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
  3939  037F  0C6D               	rrf	_USTATcopy^(0+384),w	;volatile
  3940  0380  0024               	movlb	4	; select bank4
  3941  0381  00E1               	movwf	??_USBDeviceTasks^(0+512)
  3942  0382  0CE1               	rrf	??_USBDeviceTasks^(0+512),f
  3943  0383  0C61               	rrf	??_USBDeviceTasks^(0+512),w
  3944  0384  390F               	andlw	15
  3945  0385  00E2               	movwf	(??_USBDeviceTasks+1)^(0+512)
  3946  0386  0862               	movf	(??_USBDeviceTasks+1)^(0+512),w
  3947  0387  0023               	movlb	3	; select bank3
  3948  0388  00DE               	movwf	_endpoint_number^(0+384)	;volatile
  3949                           
  3950                           ;usb_device.c: 793: (UIR &= 0xF7);
  3951  0389  30F7               	movlw	247
  3952  038A  0024               	movlb	4	; select bank4
  3953  038B  00E1               	movwf	??_USBDeviceTasks^(0+512)
  3954  038C  0861               	movf	??_USBDeviceTasks^(0+512),w
  3955  038D  003D               	movlb	29	; select bank29
  3956  038E  0590               	andwf	16,f	;volatile
  3957                           
  3958                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
  3959  038F  0023               	movlb	3	; select bank3
  3960  0390  196D               	btfsc	_USTATcopy^(0+384),2	;volatile
  3961  0391  2B95               	goto	l8236
  3962                           
  3963                           ;usb_device.c: 799: {
  3964                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  3965  0392  085E               	movf	_endpoint_number^(0+384),w	;volatile
  3966  0393  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  3967  0394  2B98               	goto	L1
  3968  0395                     l8236:	
  3969                           ;usb_device.c: 801: }
  3970                           
  3971                           
  3972                           ;usb_device.c: 802: else
  3973                           ;usb_device.c: 803: {
  3974                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  3975  0395  0023               	movlb	3	; select bank3
  3976  0396  085E               	movf	_endpoint_number^(0+384),w	;volatile
  3977  0397  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  3978  0398                     L1:	
  3979  0398  0086               	movwf	6
  3980  0399  3001               	movlw	1	; select bank3/4
  3981  039A  0087               	movwf	7
  3982  039B  0801               	movf	1,w
  3983  039C  3901               	andlw	1
  3984  039D  0024               	movlb	4	; select bank4
  3985  039E  00E1               	movwf	??_USBDeviceTasks^(0+512)
  3986  039F  3001               	movlw	1
  3987  03A0  06E1               	xorwf	??_USBDeviceTasks^(0+512),f
  3988  03A1  0801               	movf	1,w
  3989  03A2  0661               	xorwf	??_USBDeviceTasks^(0+512),w
  3990  03A3  39FE               	andlw	-2
  3991  03A4  0661               	xorwf	??_USBDeviceTasks^(0+512),w
  3992  03A5  0081               	movwf	1
  3993                           
  3994                           ;usb_device.c: 805: }
  3995                           ;usb_device.c: 810: if(endpoint_number == 0)
  3996  03A6  0023               	movlb	3	; select bank3
  3997  03A7  085E               	movf	_endpoint_number^(0+384),w	;volatile
  3998  03A8  1D03               	btfss	3,2
  3999  03A9  2BAE               	goto	l8242
  4000                           
  4001                           ;usb_device.c: 811: {
  4002                           ;usb_device.c: 812: USBCtrlEPService();
  4003  03AA  3196  2628  3182   	fcall	_USBCtrlEPService
  4004                           
  4005                           ;usb_device.c: 813: }
  4006  03AD  2BBD               	goto	l8244
  4007  03AE                     l8242:	
  4008                           
  4009                           ;usb_device.c: 814: else
  4010                           ;usb_device.c: 815: {
  4011                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  4012  03AE  3072               	movlw	114
  4013  03AF  0021               	movlb	1	; select bank1
  4014  03B0  00B4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  4015  03B1  3000               	movlw	0
  4016  03B2  00B5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)+1)
  4017  03B3  30ED               	movlw	low _USTATcopy
  4018  03B4  00B6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  4019  03B5  3001               	movlw	high _USTATcopy
  4020  03B6  00B7               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  4021  03B7  3000               	movlw	0
  4022  03B8  00B8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  4023  03B9  00B9               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
  4024  03BA  3191  2145  3182   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4025  03BD                     l8244:	
  4026                           ;usb_device.c: 819: else
  4027                           ;usb_device.c: 820: {
  4028                           ;usb_device.c: 821: break;
  4029                           
  4030                           ;usb_device.c: 817: }
  4031                           ;usb_device.c: 818: }
  4032                           
  4033  03BD  3001               	movlw	1
  4034  03BE  0024               	movlb	4	; select bank4
  4035  03BF  00E1               	movwf	??_USBDeviceTasks^(0+512)
  4036  03C0  0861               	movf	??_USBDeviceTasks^(0+512),w
  4037  03C1  0023               	movlb	3	; select bank3
  4038  03C2  07EF               	addwf	USBDeviceTasks@i^(0+384),f
  4039  03C3  3004               	movlw	4
  4040  03C4  026F               	subwf	USBDeviceTasks@i^(0+384),w
  4041  03C5  1C03               	skipc
  4042  03C6  2B76               	goto	l403
  4043  03C7                     l402:	
  4044                           
  4045                           ;usb_device.c: 822: }
  4046                           ;usb_device.c: 823: }
  4047                           ;usb_device.c: 824: }
  4048                           ;usb_device.c: 826: PIR2bits.USBIF = 0;;
  4049  03C7  0020               	movlb	0	; select bank0
  4050  03C8  1112               	bcf	18,2	;volatile
  4051  03C9  0008               	return
  4052  03CA                     __end_of_USBDeviceTasks:	
  4053                           
  4054                           	psect	text8
  4055  1FE0                     __ptext8:	
  4056 ;; *************** function _USBWakeFromSuspend *****************
  4057 ;; Defined at:
  4058 ;;		line 2303 in file "mcc_generated_files/usb/usb_device.c"
  4059 ;; Parameters:    Size  Location     Type
  4060 ;;		None
  4061 ;; Auto vars:     Size  Location     Type
  4062 ;;		None
  4063 ;; Return value:  Size  Location     Type
  4064 ;;                  1    wreg      void 
  4065 ;; Registers used:
  4066 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4067 ;; Tracked objects:
  4068 ;;		On entry : 0/0
  4069 ;;		On exit  : 0/0
  4070 ;;		Unchanged: 0/0
  4071 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4074 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4075 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4076 ;;Total ram usage:        1 bytes
  4077 ;; Hardware stack levels used:    1
  4078 ;; Hardware stack levels required when called:   14
  4079 ;; This function calls:
  4080 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4081 ;; This function is called by:
  4082 ;;		_USBDeviceTasks
  4083 ;; This function uses a non-reentrant model
  4084 ;;
  4085                           
  4086                           
  4087                           ;psect for function _USBWakeFromSuspend
  4088  1FE0                     _USBWakeFromSuspend:	
  4089                           
  4090                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
  4091                           
  4092                           ;incstack = 0
  4093                           ; Regs used in _USBWakeFromSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4094  1FE0  0023               	movlb	3	; select bank3
  4095  1FE1  01DF               	clrf	_USBBusIsSuspended^(0+384)	;volatile
  4096                           
  4097                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  4098  1FE2  3074               	movlw	116
  4099  1FE3  0021               	movlb	1	; select bank1
  4100  1FE4  00B4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  4101  1FE5  3000               	movlw	0
  4102  1FE6  00B5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)+1)
  4103  1FE7  3000               	movlw	0
  4104  1FE8  00B6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  4105  1FE9  3000               	movlw	0
  4106  1FEA  00B7               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  4107  1FEB  3000               	movlw	0
  4108  1FEC  00B8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  4109  1FED  00B9               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
  4110  1FEE  3191  2145  319F   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4111                           
  4112                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
  4113  1FF1  003D               	movlb	29	; select bank29
  4114  1FF2  108E               	bcf	14,1	;volatile
  4115                           
  4116                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
  4117  1FF3  1112               	bcf	18,2	;volatile
  4118  1FF4                     l8082:	
  4119                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
  4120                           
  4121  1FF4  1D10               	btfss	16,2	;volatile
  4122  1FF5  2FFD               	goto	l8084
  4123                           
  4124                           ;usb_device.c: 2343: {
  4125                           ;usb_device.c: 2344: (UIR &= 0xFB);
  4126  1FF6  30FB               	movlw	251
  4127  1FF7  0021               	movlb	1	; select bank1
  4128  1FF8  00BA               	movwf	??_USBWakeFromSuspend^(0+128)
  4129  1FF9  083A               	movf	??_USBWakeFromSuspend^(0+128),w
  4130  1FFA  003D               	movlb	29	; select bank29
  4131  1FFB  0590               	andwf	16,f	;volatile
  4132  1FFC  2FF4               	goto	l8082
  4133  1FFD                     l8084:	
  4134                           
  4135                           ;usb_device.c: 2345: }
  4136                           ;usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
  4137  1FFD  0023               	movlb	3	; select bank3
  4138  1FFE  01D6               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  4139  1FFF  0008               	return
  4140  2000                     __end_of_USBWakeFromSuspend:	
  4141                           
  4142                           	psect	text9
  4143  1F42                     __ptext9:	
  4144 ;; *************** function _USBSuspend *****************
  4145 ;; Defined at:
  4146 ;;		line 2245 in file "mcc_generated_files/usb/usb_device.c"
  4147 ;; Parameters:    Size  Location     Type
  4148 ;;		None
  4149 ;; Auto vars:     Size  Location     Type
  4150 ;;		None
  4151 ;; Return value:  Size  Location     Type
  4152 ;;                  1    wreg      void 
  4153 ;; Registers used:
  4154 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4155 ;; Tracked objects:
  4156 ;;		On entry : 0/0
  4157 ;;		On exit  : 0/0
  4158 ;;		Unchanged: 0/0
  4159 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4162 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4163 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4164 ;;Total ram usage:        1 bytes
  4165 ;; Hardware stack levels used:    1
  4166 ;; Hardware stack levels required when called:   14
  4167 ;; This function calls:
  4168 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4169 ;; This function is called by:
  4170 ;;		_USBDeviceTasks
  4171 ;; This function uses a non-reentrant model
  4172 ;;
  4173                           
  4174                           
  4175                           ;psect for function _USBSuspend
  4176  1F42                     _USBSuspend:	
  4177                           
  4178                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
  4179                           
  4180                           ;incstack = 0
  4181                           ; Regs used in _USBSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4182  1F42  003D               	movlb	29	; select bank29
  4183  1F43  1512               	bsf	18,2	;volatile
  4184                           
  4185                           ;usb_device.c: 2271: (UIR &= 0xEF);
  4186  1F44  30EF               	movlw	239
  4187  1F45  0021               	movlb	1	; select bank1
  4188  1F46  00BA               	movwf	??_USBSuspend^(0+128)
  4189  1F47  083A               	movf	??_USBSuspend^(0+128),w
  4190  1F48  003D               	movlb	29	; select bank29
  4191  1F49  0590               	andwf	16,f	;volatile
  4192                           
  4193                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
  4194  1F4A  148E               	bsf	14,1	;volatile
  4195                           
  4196                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
  4197  1F4B  3001               	movlw	1
  4198  1F4C  0021               	movlb	1	; select bank1
  4199  1F4D  00BA               	movwf	??_USBSuspend^(0+128)
  4200  1F4E  083A               	movf	??_USBSuspend^(0+128),w
  4201  1F4F  0023               	movlb	3	; select bank3
  4202  1F50  00DF               	movwf	_USBBusIsSuspended^(0+384)	;volatile
  4203                           
  4204                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
  4205  1F51  01D6               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  4206                           
  4207                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  4208  1F52  3075               	movlw	117
  4209  1F53  0021               	movlb	1	; select bank1
  4210  1F54  00B4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  4211  1F55  3000               	movlw	0
  4212  1F56  00B5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)+1)
  4213  1F57  3000               	movlw	0
  4214  1F58  00B6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  4215  1F59  3000               	movlw	0
  4216  1F5A  00B7               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  4217  1F5B  3000               	movlw	0
  4218  1F5C  00B8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  4219  1F5D  00B9               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
  4220  1F5E  3191  2145         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4221  1F60  0008               	return
  4222  1F61                     __end_of_USBSuspend:	
  4223                           
  4224                           	psect	text10
  4225  10EA                     __ptext10:	
  4226 ;; *************** function _USBStallHandler *****************
  4227 ;; Defined at:
  4228 ;;		line 2202 in file "mcc_generated_files/usb/usb_device.c"
  4229 ;; Parameters:    Size  Location     Type
  4230 ;;		None
  4231 ;; Auto vars:     Size  Location     Type
  4232 ;;		None
  4233 ;; Return value:  Size  Location     Type
  4234 ;;                  1    wreg      void 
  4235 ;; Registers used:
  4236 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4237 ;; Tracked objects:
  4238 ;;		On entry : 0/0
  4239 ;;		On exit  : 0/0
  4240 ;;		Unchanged: 0/0
  4241 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4244 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4245 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4246 ;;Total ram usage:        1 bytes
  4247 ;; Hardware stack levels used:    1
  4248 ;; Hardware stack levels required when called:   10
  4249 ;; This function calls:
  4250 ;;		Nothing
  4251 ;; This function is called by:
  4252 ;;		_USBDeviceTasks
  4253 ;; This function uses a non-reentrant model
  4254 ;;
  4255                           
  4256                           
  4257                           ;psect for function _USBStallHandler
  4258  10EA                     _USBStallHandler:	
  4259                           
  4260                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
  4261                           
  4262                           ;incstack = 0
  4263                           ; Regs used in _USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  4264  10EA  003D               	movlb	29	; select bank29
  4265  10EB  1C18               	btfss	24,0	;volatile
  4266  10EC  290E               	goto	l8116
  4267                           
  4268                           ;usb_device.c: 2215: {
  4269                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  4270  10ED  0023               	movlb	3	; select bank3
  4271  10EE  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  4272  10EF  0086               	movwf	6
  4273  10F0  0187               	clrf	7
  4274  10F1  3080               	movlw	128
  4275  10F2  0601               	xorwf	1,w
  4276  10F3  1D03               	btfss	3,2
  4277  10F4  290C               	goto	l8114
  4278  10F5  0837               	movf	_pBDTEntryIn^(0+384),w
  4279  10F6  0086               	movwf	6
  4280  10F7  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  4281  10F8  0087               	movwf	7
  4282  10F9  3084               	movlw	132
  4283  10FA  0601               	xorwf	1,w
  4284  10FB  1D03               	btfss	3,2
  4285  10FC  290C               	goto	l8114
  4286                           
  4287                           ;usb_device.c: 2218: {
  4288                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  4289  10FD  300C               	movlw	12
  4290  10FE  0021               	movlb	1	; select bank1
  4291  10FF  00A6               	movwf	??_USBStallHandler^(0+128)
  4292  1100  0023               	movlb	3	; select bank3
  4293  1101  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  4294  1102  0086               	movwf	6
  4295  1103  0187               	clrf	7
  4296  1104  0021               	movlb	1	; select bank1
  4297  1105  0826               	movf	??_USBStallHandler^(0+128),w
  4298  1106  0081               	movwf	1
  4299                           
  4300                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  4301  1107  0023               	movlb	3	; select bank3
  4302  1108  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  4303  1109  0086               	movwf	6
  4304  110A  0187               	clrf	7
  4305  110B  1781               	bsf	1,7
  4306  110C                     l8114:	
  4307                           
  4308                           ;usb_device.c: 2222: }
  4309                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
  4310  110C  003D               	movlb	29	; select bank29
  4311  110D  1018               	bcf	24,0	;volatile
  4312  110E                     l8116:	
  4313                           
  4314                           ;usb_device.c: 2224: }
  4315                           ;usb_device.c: 2226: (UIR &= 0xDF);
  4316  110E  30DF               	movlw	223
  4317  110F  0021               	movlb	1	; select bank1
  4318  1110  00A6               	movwf	??_USBStallHandler^(0+128)
  4319  1111  0826               	movf	??_USBStallHandler^(0+128),w
  4320  1112  003D               	movlb	29	; select bank29
  4321  1113  0590               	andwf	16,f	;volatile
  4322  1114  0008               	return
  4323  1115                     __end_of_USBStallHandler:	
  4324                           
  4325                           	psect	text11
  4326  1EEA                     __ptext11:	
  4327 ;; *************** function _USBIncrement1msInternalTimers *****************
  4328 ;; Defined at:
  4329 ;;		line 3025 in file "mcc_generated_files/usb/usb_device.c"
  4330 ;; Parameters:    Size  Location     Type
  4331 ;;		None
  4332 ;; Auto vars:     Size  Location     Type
  4333 ;;		None
  4334 ;; Return value:  Size  Location     Type
  4335 ;;                  1    wreg      void 
  4336 ;; Registers used:
  4337 ;;		wreg, status,2, status,0
  4338 ;; Tracked objects:
  4339 ;;		On entry : 0/0
  4340 ;;		On exit  : 0/0
  4341 ;;		Unchanged: 0/0
  4342 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4345 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4346 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4347 ;;Total ram usage:        1 bytes
  4348 ;; Hardware stack levels used:    1
  4349 ;; Hardware stack levels required when called:   10
  4350 ;; This function calls:
  4351 ;;		Nothing
  4352 ;; This function is called by:
  4353 ;;		_USBDeviceTasks
  4354 ;; This function uses a non-reentrant model
  4355 ;;
  4356                           
  4357                           
  4358                           ;psect for function _USBIncrement1msInternalTimers
  4359  1EEA                     _USBIncrement1msInternalTimers:	
  4360                           
  4361                           ;usb_device.c: 3033: USB1msTickCount++;
  4362                           
  4363                           ;incstack = 0
  4364                           ; Regs used in _USBIncrement1msInternalTimers: [wreg+status,2+status,0]
  4365  1EEA  3001               	movlw	1
  4366  1EEB  0023               	movlb	3	; select bank3
  4367  1EEC  07C3               	addwf	_USB1msTickCount^(0+384),f	;volatile
  4368  1EED  3000               	movlw	0
  4369  1EEE  3DC4               	addwfc	(_USB1msTickCount+1)^(0+384),f	;volatile
  4370  1EEF  3000               	movlw	0
  4371  1EF0  3DC5               	addwfc	(_USB1msTickCount+2)^(0+384),f	;volatile
  4372  1EF1  3000               	movlw	0
  4373  1EF2  3DC6               	addwfc	(_USB1msTickCount+3)^(0+384),f	;volatile
  4374                           
  4375                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
  4376  1EF3  085F               	movf	_USBBusIsSuspended^(0+384),w	;volatile
  4377  1EF4  1D03               	btfss	3,2
  4378  1EF5  0008               	return
  4379                           
  4380                           ;usb_device.c: 3035: {
  4381                           ;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
  4382  1EF6  3001               	movlw	1
  4383  1EF7  0021               	movlb	1	; select bank1
  4384  1EF8  00A6               	movwf	??_USBIncrement1msInternalTimers^(0+128)
  4385  1EF9  0826               	movf	??_USBIncrement1msInternalTimers^(0+128),w
  4386  1EFA  0023               	movlb	3	; select bank3
  4387  1EFB  07D6               	addwf	_USBTicksSinceSuspendEnd^(0+384),f	;volatile
  4388                           
  4389                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
  4390  1EFC  0856               	movf	_USBTicksSinceSuspendEnd^(0+384),w	;volatile
  4391  1EFD  1D03               	btfss	3,2
  4392  1EFE  0008               	return
  4393                           
  4394                           ;usb_device.c: 3039: {
  4395                           ;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
  4396  1EFF  30FF               	movlw	255
  4397  1F00  0021               	movlb	1	; select bank1
  4398  1F01  00A6               	movwf	??_USBIncrement1msInternalTimers^(0+128)
  4399  1F02  0826               	movf	??_USBIncrement1msInternalTimers^(0+128),w
  4400  1F03  0023               	movlb	3	; select bank3
  4401  1F04  00D6               	movwf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  4402  1F05  0008               	return
  4403  1F06                     __end_of_USBIncrement1msInternalTimers:	
  4404                           
  4405                           	psect	text12
  4406  1628                     __ptext12:	
  4407 ;; *************** function _USBCtrlEPService *****************
  4408 ;; Defined at:
  4409 ;;		line 2372 in file "mcc_generated_files/usb/usb_device.c"
  4410 ;; Parameters:    Size  Location     Type
  4411 ;;		None
  4412 ;; Auto vars:     Size  Location     Type
  4413 ;;		None
  4414 ;; Return value:  Size  Location     Type
  4415 ;;                  1    wreg      void 
  4416 ;; Registers used:
  4417 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4418 ;; Tracked objects:
  4419 ;;		On entry : 0/0
  4420 ;;		On exit  : 0/0
  4421 ;;		Unchanged: 0/0
  4422 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4425 ;;      Temps:          0       0       0       0       0       3       0       0       0       0       0       0       
      +0       0
  4426 ;;      Totals:         0       0       0       0       0       3       0       0       0       0       0       0       
      +0       0
  4427 ;;Total ram usage:        3 bytes
  4428 ;; Hardware stack levels used:    1
  4429 ;; Hardware stack levels required when called:   17
  4430 ;; This function calls:
  4431 ;;		_USBCtrlTrfInHandler
  4432 ;;		_USBCtrlTrfOutHandler
  4433 ;;		_USBCtrlTrfSetupHandler
  4434 ;; This function is called by:
  4435 ;;		_USBDeviceTasks
  4436 ;; This function uses a non-reentrant model
  4437 ;;
  4438                           
  4439                           
  4440                           ;psect for function _USBCtrlEPService
  4441  1628                     _USBCtrlEPService:	
  4442                           
  4443                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
  4444                           
  4445                           ;incstack = 0
  4446 ;; hardware stack exceeded
  4447                           ; Regs used in _USBCtrlEPService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4448  1628  302D               	movlw	45
  4449  1629  0024               	movlb	4	; select bank4
  4450  162A  00DE               	movwf	??_USBCtrlEPService^(0+512)
  4451  162B  085E               	movf	??_USBCtrlEPService^(0+512),w
  4452  162C  0023               	movlb	3	; select bank3
  4453  162D  00DC               	movwf	_USBStatusStageTimeoutCounter^(0+384)	;volatile
  4454                           
  4455                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
  4456  162E  086D               	movf	_USTATcopy^(0+384),w	;volatile
  4457  162F  39FD               	andlw	253
  4458  1630  1D03               	btfss	3,2
  4459  1631  2E78               	goto	l8136
  4460                           
  4461                           ;usb_device.c: 2383: {
  4462                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  4463  1632  366D               	lsrf	_USTATcopy^(0+384),w	;volatile
  4464  1633  393F               	andlw	63
  4465  1634  0024               	movlb	4	; select bank4
  4466  1635  00DE               	movwf	??_USBCtrlEPService^(0+512)
  4467  1636  3001               	movlw	1
  4468  1637                     u7675:	
  4469  1637  35DE               	lslf	??_USBCtrlEPService^(0+512),f
  4470  1638  3EFF               	addlw	-1
  4471  1639  1D03               	skipz
  4472  163A  2E37               	goto	u7675
  4473  163B  355E               	lslf	??_USBCtrlEPService^(0+512),w
  4474  163C  3E20               	addlw	32
  4475  163D  00DF               	movwf	(??_USBCtrlEPService+1)^(0+512)
  4476  163E  085F               	movf	(??_USBCtrlEPService+1)^(0+512),w
  4477  163F  0023               	movlb	3	; select bank3
  4478  1640  00E4               	movwf	_pBDTEntryEP0OutCurrent^(0+384)
  4479                           
  4480                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  4481  1641  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  4482  1642  0021               	movlb	1	; select bank1
  4483  1643  00C8               	movwf	_pBDTEntryEP0OutNext^(0+128)
  4484  1644  39FF               	andlw	255
  4485  1645  1D03               	skipz
  4486  1646  3000               	movlw	0
  4487  1647  00C9               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
  4488                           
  4489                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
  4490  1648  3004               	movlw	4
  4491  1649  0648               	xorwf	_pBDTEntryEP0OutNext^(0+128),w
  4492  164A  00C8               	movwf	_pBDTEntryEP0OutNext^(0+128)
  4493  164B  3000               	movlw	0
  4494  164C  0649               	xorwf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  4495  164D  00C9               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
  4496                           
  4497                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  4498  164E  0023               	movlb	3	; select bank3
  4499  164F  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  4500  1650  0086               	movwf	6
  4501  1651  0187               	clrf	7
  4502  1652  0C01               	rrf	1,w
  4503  1653  0C89               	rrf	9,f
  4504  1654  390F               	andlw	15
  4505  1655  3A0D               	xorlw	13
  4506  1656  1D03               	skipz
  4507  1657  2E75               	goto	l8134
  4508                           
  4509                           ;usb_device.c: 2400: {
  4510                           ;usb_device.c: 2405: __builtin_memcpy((uint8_t*)&SetupPkt,(uint8_t*)((void *)(pBDTEntryE
      +                          P0OutCurrent->ADR)),8);
  4511  1658  3050               	movlw	80
  4512  1659  0086               	movwf	6
  4513  165A  0187               	clrf	7
  4514  165B  0023               	movlb	3	; select bank3
  4515  165C  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  4516  165D  3E02               	addlw	2
  4517  165E  0084               	movwf	4
  4518  165F  0185               	clrf	5
  4519  1660  3F00               	moviw [0]fsr0
  4520  1661  0024               	movlb	4	; select bank4
  4521  1662  00DE               	movwf	??_USBCtrlEPService^(0+512)
  4522  1663  3F01               	moviw [1]fsr0
  4523  1664  00DF               	movwf	(??_USBCtrlEPService^(0+512)+1)
  4524  1665  085E               	movf	??_USBCtrlEPService^(0+512),w
  4525  1666  0084               	movwf	4
  4526  1667  085F               	movf	(??_USBCtrlEPService+1)^(0+512),w
  4527  1668  0085               	movwf	5
  4528  1669  3008               	movlw	8
  4529  166A  00E0               	movwf	(??_USBCtrlEPService+2)^(0+512)
  4530  166B  0860               	movf	(??_USBCtrlEPService+2)^(0+512),w
  4531  166C  1903               	skipnz
  4532  166D  2E72               	goto	l8132
  4533  166E                     u769m0:	
  4534  166E  0012               	moviw fsr0++
  4535  166F  001E               	movwi fsr1++
  4536  1670  0BE0               	decfsz	(??_USBCtrlEPService+2)^(0+512),f
  4537  1671  2E6E               	goto	u769m0
  4538  1672                     l8132:	
  4539                           
  4540                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
  4541  1672  3194  241F         	fcall	_USBCtrlTrfSetupHandler
  4542                           
  4543                           ;usb_device.c: 2409: }
  4544  1674  0008               	return
  4545  1675                     l8134:	
  4546                           
  4547                           ;usb_device.c: 2410: else
  4548                           ;usb_device.c: 2411: {
  4549                           ;usb_device.c: 2413: USBCtrlTrfOutHandler();
  4550  1675  3191  21E1         	fcall	_USBCtrlTrfOutHandler
  4551                           
  4552                           ;usb_device.c: 2414: }
  4553                           ;usb_device.c: 2415: }
  4554  1677  0008               	return
  4555  1678                     l8136:	
  4556                           
  4557                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
  4558  1678  30FD               	movlw	253
  4559  1679  0023               	movlb	3	; select bank3
  4560  167A  056D               	andwf	_USTATcopy^(0+384),w	;volatile
  4561  167B  0024               	movlb	4	; select bank4
  4562  167C  00DE               	movwf	??_USBCtrlEPService^(0+512)
  4563  167D  3004               	movlw	4
  4564  167E  065E               	xorwf	??_USBCtrlEPService^(0+512),w
  4565  167F  1D03               	btfss	3,2
  4566  1680  0008               	return
  4567                           
  4568                           ;usb_device.c: 2417: {
  4569                           ;usb_device.c: 2420: USBCtrlTrfInHandler();
  4570  1681  3189  213B         	fcall	_USBCtrlTrfInHandler
  4571  1683  0008               	return
  4572  1684                     __end_of_USBCtrlEPService:	
  4573                           
  4574                           	psect	text13
  4575  141F                     __ptext13:	
  4576 ;; *************** function _USBCtrlTrfSetupHandler *****************
  4577 ;; Defined at:
  4578 ;;		line 2465 in file "mcc_generated_files/usb/usb_device.c"
  4579 ;; Parameters:    Size  Location     Type
  4580 ;;		None
  4581 ;; Auto vars:     Size  Location     Type
  4582 ;;		None
  4583 ;; Return value:  Size  Location     Type
  4584 ;;                  1    wreg      void 
  4585 ;; Registers used:
  4586 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4587 ;; Tracked objects:
  4588 ;;		On entry : 0/0
  4589 ;;		On exit  : 0/0
  4590 ;;		Unchanged: 0/0
  4591 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4594 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4595 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4596 ;;Total ram usage:        1 bytes
  4597 ;; Hardware stack levels used:    1
  4598 ;; Hardware stack levels required when called:   16
  4599 ;; This function calls:
  4600 ;;		_USBCheckStdRequest
  4601 ;;		_USBCtrlEPServiceComplete
  4602 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4603 ;; This function is called by:
  4604 ;;		_USBCtrlEPService
  4605 ;; This function uses a non-reentrant model
  4606 ;;
  4607                           
  4608                           
  4609                           ;psect for function _USBCtrlTrfSetupHandler
  4610  141F                     _USBCtrlTrfSetupHandler:	
  4611                           
  4612                           ;usb_device.c: 2470: shortPacketStatus = 0;
  4613                           
  4614                           ;incstack = 0
  4615 ;; hardware stack exceeded
  4616                           ; Regs used in _USBCtrlTrfSetupHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4617  141F  0023               	movlb	3	; select bank3
  4618  1420  01E3               	clrf	_shortPacketStatus^(0+384)	;volatile
  4619                           
  4620                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
  4621  1421  01DB               	clrf	_USBDeferStatusStagePacket^(0+384)	;volatile
  4622                           
  4623                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
  4624  1422  01D8               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  4625                           
  4626                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
  4627  1423  01D7               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  4628                           
  4629                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
  4630  1424  01DD               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  4631                           
  4632                           ;usb_device.c: 2475: controlTransferState = 0;
  4633  1425  01E2               	clrf	_controlTransferState^(0+384)	;volatile
  4634                           
  4635                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  4636  1426  307F               	movlw	127
  4637  1427  0021               	movlb	1	; select bank1
  4638  1428  00C2               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
  4639  1429  0023               	movlb	3	; select bank3
  4640  142A  0837               	movf	_pBDTEntryIn^(0+384),w
  4641  142B  0086               	movwf	6
  4642  142C  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  4643  142D  0087               	movwf	7
  4644  142E  0021               	movlb	1	; select bank1
  4645  142F  0842               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
  4646  1430  0581               	andwf	1,f
  4647                           
  4648                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  4649  1431  3004               	movlw	4
  4650  1432  0023               	movlb	3	; select bank3
  4651  1433  0637               	xorwf	_pBDTEntryIn^(0+384),w
  4652  1434  00B7               	movwf	_pBDTEntryIn^(0+384)
  4653  1435  3000               	movlw	0
  4654  1436  0638               	xorwf	(_pBDTEntryIn+1)^(0+384),w
  4655  1437  00B8               	movwf	(_pBDTEntryIn+1)^(0+384)
  4656                           
  4657                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  4658  1438  307F               	movlw	127
  4659  1439  0021               	movlb	1	; select bank1
  4660  143A  00C2               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
  4661  143B  0023               	movlb	3	; select bank3
  4662  143C  0837               	movf	_pBDTEntryIn^(0+384),w
  4663  143D  0086               	movwf	6
  4664  143E  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  4665  143F  0087               	movwf	7
  4666  1440  0021               	movlb	1	; select bank1
  4667  1441  0842               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
  4668  1442  0581               	andwf	1,f
  4669                           
  4670                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  4671  1443  3004               	movlw	4
  4672  1444  0023               	movlb	3	; select bank3
  4673  1445  0637               	xorwf	_pBDTEntryIn^(0+384),w
  4674  1446  00B7               	movwf	_pBDTEntryIn^(0+384)
  4675  1447  3000               	movlw	0
  4676  1448  0638               	xorwf	(_pBDTEntryIn+1)^(0+384),w
  4677  1449  00B8               	movwf	(_pBDTEntryIn+1)^(0+384)
  4678                           
  4679                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  4680  144A  307F               	movlw	127
  4681  144B  0021               	movlb	1	; select bank1
  4682  144C  00C2               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
  4683  144D  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  4684  144E  0086               	movwf	6
  4685  144F  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  4686  1450  0087               	movwf	7
  4687  1451  0842               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
  4688  1452  0581               	andwf	1,f
  4689                           
  4690                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
  4691  1453  01C5               	clrf	(_inPipes^(0+128)+2)	;volatile
  4692                           
  4693                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
  4694  1454  01C6               	clrf	(_inPipes^(0+128)+3)	;volatile
  4695  1455  01C7               	clrf	((_inPipes+1)^(0+128)+3)	;volatile
  4696                           
  4697                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
  4698  1456  0023               	movlb	3	; select bank3
  4699  1457  01B2               	clrf	(_outPipes^(0+384)+2)	;volatile
  4700                           
  4701                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
  4702  1458  01B3               	clrf	(_outPipes^(0+384)+3)	;volatile
  4703  1459  01B4               	clrf	((_outPipes+1)^(0+384)+3)	;volatile
  4704                           
  4705                           ;usb_device.c: 2500: USBCheckStdRequest();
  4706  145A  3197  279F  3194   	fcall	_USBCheckStdRequest
  4707                           
  4708                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  4709  145D  3000               	movlw	0
  4710  145E  0021               	movlb	1	; select bank1
  4711  145F  00B5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
  4712  1460  3003               	movlw	3
  4713  1461  00B4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  4714  1462  3000               	movlw	0
  4715  1463  00B6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  4716  1464  3000               	movlw	0
  4717  1465  00B7               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  4718  1466  3000               	movlw	0
  4719  1467  00B8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  4720  1468  00B9               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
  4721  1469  3191  2145  3194   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4722                           
  4723                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
  4724  146C  318E  26C8         	fcall	_USBCtrlEPServiceComplete
  4725  146E  0008               	return
  4726  146F                     __end_of_USBCtrlTrfSetupHandler:	
  4727                           
  4728                           	psect	text14
  4729  0EC8                     __ptext14:	
  4730 ;; *************** function _USBCtrlEPServiceComplete *****************
  4731 ;; Defined at:
  4732 ;;		line 1616 in file "mcc_generated_files/usb/usb_device.c"
  4733 ;; Parameters:    Size  Location     Type
  4734 ;;		None
  4735 ;; Auto vars:     Size  Location     Type
  4736 ;;		None
  4737 ;; Return value:  Size  Location     Type
  4738 ;;                  1    wreg      void 
  4739 ;; Registers used:
  4740 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4741 ;; Tracked objects:
  4742 ;;		On entry : 0/0
  4743 ;;		On exit  : 0/0
  4744 ;;		Unchanged: 0/0
  4745 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4748 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4749 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4750 ;;Total ram usage:        2 bytes
  4751 ;; Hardware stack levels used:    1
  4752 ;; Hardware stack levels required when called:   12
  4753 ;; This function calls:
  4754 ;;		_USBCtrlEPAllowDataStage
  4755 ;;		_USBCtrlEPAllowStatusStage
  4756 ;; This function is called by:
  4757 ;;		_USBCtrlTrfSetupHandler
  4758 ;; This function uses a non-reentrant model
  4759 ;;
  4760                           
  4761                           
  4762                           ;psect for function _USBCtrlEPServiceComplete
  4763  0EC8                     _USBCtrlEPServiceComplete:	
  4764                           
  4765                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
  4766                           
  4767                           ;incstack = 0
  4768                           ; Regs used in _USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4769  0EC8  003D               	movlb	29	; select bank29
  4770  0EC9  120E               	bcf	14,4	;volatile
  4771                           
  4772                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
  4773  0ECA  0021               	movlb	1	; select bank1
  4774  0ECB  1BC5               	btfsc	(_inPipes^(0+128)+2),7	;volatile
  4775  0ECC  2F11               	goto	l465
  4776                           
  4777                           ;usb_device.c: 1629: {
  4778                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
  4779  0ECD  0023               	movlb	3	; select bank3
  4780  0ECE  1FB2               	btfss	(_outPipes^(0+384)+2),7	;volatile
  4781  0ECF  2EDF               	goto	l7758
  4782                           
  4783                           ;usb_device.c: 1631: {
  4784                           ;usb_device.c: 1632: controlTransferState = 2;
  4785  0ED0  3002               	movlw	2
  4786  0ED1  0021               	movlb	1	; select bank1
  4787  0ED2  00AB               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  4788  0ED3  082B               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  4789  0ED4  0023               	movlb	3	; select bank3
  4790  0ED5  00E2               	movwf	_controlTransferState^(0+384)	;volatile
  4791                           
  4792                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
  4793  0ED6  0857               	movf	_USBDeferOUTDataStagePackets^(0+384),w	;volatile
  4794  0ED7  1D03               	btfss	3,2
  4795  0ED8  2EDB               	goto	l7754
  4796                           
  4797                           ;usb_device.c: 1644: {
  4798                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
  4799  0ED9  3196  26E0         	fcall	_USBCtrlEPAllowDataStage
  4800  0EDB                     l7754:	
  4801                           
  4802                           ;usb_device.c: 1646: }
  4803                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
  4804  0EDB  0023               	movlb	3	; select bank3
  4805  0EDC  01D9               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  4806                           
  4807                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
  4808  0EDD  01DA               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  4809                           
  4810                           ;usb_device.c: 1652: }
  4811  0EDE  0008               	return
  4812  0EDF                     l7758:	
  4813                           
  4814                           ;usb_device.c: 1653: else
  4815                           ;usb_device.c: 1654: {
  4816                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
  4817  0EDF  0021               	movlb	1	; select bank1
  4818  0EE0  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  4819  0EE1  3E01               	addlw	1
  4820  0EE2  00AB               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  4821  0EE3  3000               	movlw	0
  4822  0EE4  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  4823  0EE5  00AC               	movwf	(??_USBCtrlEPServiceComplete+1)^(0+128)
  4824  0EE6  082B               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  4825  0EE7  0086               	movwf	6
  4826  0EE8  082C               	movf	(??_USBCtrlEPServiceComplete+1)^(0+128),w
  4827  0EE9  0087               	movwf	7
  4828  0EEA  3008               	movlw	8
  4829  0EEB  0081               	movwf	1
  4830                           
  4831                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  4832  0EEC  3050               	movlw	80
  4833  0EED  00AB               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  4834  0EEE  3000               	movlw	0
  4835  0EEF  00AC               	movwf	(??_USBCtrlEPServiceComplete^(0+128)+1)
  4836  0EF0  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  4837  0EF1  0086               	movwf	6
  4838  0EF2  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  4839  0EF3  0087               	movwf	7
  4840  0EF4  3142               	addfsr 1,2
  4841  0EF5  082B               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  4842  0EF6  3FC0               	movwi [0]fsr1
  4843  0EF7  082C               	movf	(??_USBCtrlEPServiceComplete^(0+128)+1),w
  4844  0EF8  3FC1               	movwi [1]fsr1
  4845                           
  4846                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  4847  0EF9  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  4848  0EFA  0086               	movwf	6
  4849  0EFB  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  4850  0EFC  0087               	movwf	7
  4851  0EFD  300C               	movlw	12
  4852  0EFE  0081               	movwf	1
  4853                           
  4854                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  4855  0EFF  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  4856  0F00  0086               	movwf	6
  4857  0F01  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  4858  0F02  0087               	movwf	7
  4859  0F03  1781               	bsf	1,7
  4860                           
  4861                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
  4862  0F04  0023               	movlb	3	; select bank3
  4863  0F05  0837               	movf	_pBDTEntryIn^(0+384),w
  4864  0F06  0086               	movwf	6
  4865  0F07  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  4866  0F08  0087               	movwf	7
  4867  0F09  3004               	movlw	4
  4868  0F0A  0081               	movwf	1
  4869                           
  4870                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
  4871  0F0B  0837               	movf	_pBDTEntryIn^(0+384),w
  4872  0F0C  0086               	movwf	6
  4873  0F0D  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  4874  0F0E  0087               	movwf	7
  4875  0F0F  1781               	bsf	1,7
  4876                           
  4877                           ;usb_device.c: 1665: }
  4878                           ;usb_device.c: 1666: }
  4879  0F10  0008               	return
  4880  0F11                     l465:	
  4881                           
  4882                           ;usb_device.c: 1667: else
  4883                           ;usb_device.c: 1668: {
  4884                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
  4885  0F11  0020               	movlb	0	; select bank0
  4886  0F12  1FD0               	btfss	80,7	;volatile
  4887  0F13  2F29               	goto	l7784
  4888                           
  4889                           ;usb_device.c: 1670: {
  4890                           ;usb_device.c: 1671: controlTransferState = 1;
  4891  0F14  3001               	movlw	1
  4892  0F15  0021               	movlb	1	; select bank1
  4893  0F16  00AB               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  4894  0F17  082B               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  4895  0F18  0023               	movlb	3	; select bank3
  4896  0F19  00E2               	movwf	_controlTransferState^(0+384)	;volatile
  4897                           
  4898                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
  4899  0F1A  0858               	movf	_USBDeferINDataStagePackets^(0+384),w	;volatile
  4900  0F1B  1D03               	btfss	3,2
  4901  0F1C  2F20               	goto	l7776
  4902                           
  4903                           ;usb_device.c: 1686: {
  4904                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
  4905  0F1D  3196  26E0  318E   	fcall	_USBCtrlEPAllowDataStage
  4906  0F20                     l7776:	
  4907                           
  4908                           ;usb_device.c: 1688: }
  4909                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
  4910  0F20  0023               	movlb	3	; select bank3
  4911  0F21  01D9               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  4912                           
  4913                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
  4914  0F22  01DA               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  4915                           
  4916                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
  4917  0F23  085B               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
  4918  0F24  1D03               	btfss	3,2
  4919  0F25  0008               	return
  4920                           
  4921                           ;usb_device.c: 1713: {
  4922                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
  4923  0F26  318A  229A         	fcall	_USBCtrlEPAllowStatusStage
  4924                           
  4925                           ;usb_device.c: 1715: }
  4926                           ;usb_device.c: 1716: }
  4927  0F28  0008               	return
  4928  0F29                     l7784:	
  4929                           
  4930                           ;usb_device.c: 1717: else
  4931                           ;usb_device.c: 1718: {
  4932                           ;usb_device.c: 1729: controlTransferState = 2;
  4933  0F29  3002               	movlw	2
  4934  0F2A  0021               	movlb	1	; select bank1
  4935  0F2B  00AB               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  4936  0F2C  082B               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  4937  0F2D  0023               	movlb	3	; select bank3
  4938  0F2E  00E2               	movwf	_controlTransferState^(0+384)	;volatile
  4939                           
  4940                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
  4941  0F2F  0021               	movlb	1	; select bank1
  4942  0F30  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  4943  0F31  3E01               	addlw	1
  4944  0F32  00AB               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  4945  0F33  3000               	movlw	0
  4946  0F34  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  4947  0F35  00AC               	movwf	(??_USBCtrlEPServiceComplete+1)^(0+128)
  4948  0F36  082B               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  4949  0F37  0086               	movwf	6
  4950  0F38  082C               	movf	(??_USBCtrlEPServiceComplete+1)^(0+128),w
  4951  0F39  0087               	movwf	7
  4952  0F3A  3008               	movlw	8
  4953  0F3B  0081               	movwf	1
  4954                           
  4955                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  4956  0F3C  3050               	movlw	80
  4957  0F3D  00AB               	movwf	??_USBCtrlEPServiceComplete^(0+128)
  4958  0F3E  3000               	movlw	0
  4959  0F3F  00AC               	movwf	(??_USBCtrlEPServiceComplete^(0+128)+1)
  4960  0F40  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  4961  0F41  0086               	movwf	6
  4962  0F42  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  4963  0F43  0087               	movwf	7
  4964  0F44  3142               	addfsr 1,2
  4965  0F45  082B               	movf	??_USBCtrlEPServiceComplete^(0+128),w
  4966  0F46  3FC0               	movwi [0]fsr1
  4967  0F47  082C               	movf	(??_USBCtrlEPServiceComplete^(0+128)+1),w
  4968  0F48  3FC1               	movwi [1]fsr1
  4969                           
  4970                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  4971  0F49  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  4972  0F4A  0086               	movwf	6
  4973  0F4B  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  4974  0F4C  0087               	movwf	7
  4975  0F4D  3004               	movlw	4
  4976  0F4E  0081               	movwf	1
  4977                           
  4978                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  4979  0F4F  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  4980  0F50  0086               	movwf	6
  4981  0F51  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  4982  0F52  0087               	movwf	7
  4983  0F53  1781               	bsf	1,7
  4984                           
  4985                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
  4986  0F54  0023               	movlb	3	; select bank3
  4987  0F55  01D9               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  4988                           
  4989                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
  4990  0F56  01DA               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  4991                           
  4992                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
  4993  0F57  085B               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
  4994  0F58  1D03               	btfss	3,2
  4995  0F59  0008               	return
  4996                           
  4997                           ;usb_device.c: 1741: {
  4998                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
  4999  0F5A  318A  229A         	fcall	_USBCtrlEPAllowStatusStage
  5000  0F5C  0008               	return
  5001  0F5D                     __end_of_USBCtrlEPServiceComplete:	
  5002                           
  5003                           	psect	text15
  5004  16E0                     __ptext15:	
  5005 ;; *************** function _USBCtrlEPAllowDataStage *****************
  5006 ;; Defined at:
  5007 ;;		line 1488 in file "mcc_generated_files/usb/usb_device.c"
  5008 ;; Parameters:    Size  Location     Type
  5009 ;;		None
  5010 ;; Auto vars:     Size  Location     Type
  5011 ;;		None
  5012 ;; Return value:  Size  Location     Type
  5013 ;;                  1    wreg      void 
  5014 ;; Registers used:
  5015 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5016 ;; Tracked objects:
  5017 ;;		On entry : 0/0
  5018 ;;		On exit  : 0/0
  5019 ;;		Unchanged: 0/0
  5020 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5023 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5024 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5025 ;;Total ram usage:        2 bytes
  5026 ;; Hardware stack levels used:    1
  5027 ;; Hardware stack levels required when called:   11
  5028 ;; This function calls:
  5029 ;;		_USBCtrlTrfTxService
  5030 ;; This function is called by:
  5031 ;;		_USBCtrlEPServiceComplete
  5032 ;; This function uses a non-reentrant model
  5033 ;;
  5034                           
  5035                           
  5036                           ;psect for function _USBCtrlEPAllowDataStage
  5037  16E0                     _USBCtrlEPAllowDataStage:	
  5038                           
  5039                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
  5040                           
  5041                           ;incstack = 0
  5042                           ; Regs used in _USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5043  16E0  0023               	movlb	3	; select bank3
  5044  16E1  01D8               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  5045                           
  5046                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
  5047  16E2  01D7               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  5048                           
  5049                           ;usb_device.c: 1493: if(controlTransferState == 2)
  5050  16E3  3002               	movlw	2
  5051  16E4  0662               	xorwf	_controlTransferState^(0+384),w	;volatile
  5052  16E5  1D03               	btfss	3,2
  5053  16E6  2F0D               	goto	l7536
  5054                           
  5055                           ;usb_device.c: 1494: {
  5056                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
  5057  16E7  0021               	movlb	1	; select bank1
  5058  16E8  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5059  16E9  3E01               	addlw	1
  5060  16EA  00A9               	movwf	??_USBCtrlEPAllowDataStage^(0+128)
  5061  16EB  3000               	movlw	0
  5062  16EC  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5063  16ED  00AA               	movwf	(??_USBCtrlEPAllowDataStage+1)^(0+128)
  5064  16EE  0829               	movf	??_USBCtrlEPAllowDataStage^(0+128),w
  5065  16EF  0086               	movwf	6
  5066  16F0  082A               	movf	(??_USBCtrlEPAllowDataStage+1)^(0+128),w
  5067  16F1  0087               	movwf	7
  5068  16F2  3008               	movlw	8
  5069  16F3  0081               	movwf	1
  5070                           
  5071                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  5072  16F4  3058               	movlw	88
  5073  16F5  00A9               	movwf	??_USBCtrlEPAllowDataStage^(0+128)
  5074  16F6  3000               	movlw	0
  5075  16F7  00AA               	movwf	(??_USBCtrlEPAllowDataStage^(0+128)+1)
  5076  16F8  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5077  16F9  0086               	movwf	6
  5078  16FA  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5079  16FB  0087               	movwf	7
  5080  16FC  3142               	addfsr 1,2
  5081  16FD  0829               	movf	??_USBCtrlEPAllowDataStage^(0+128),w
  5082  16FE  3FC0               	movwi [0]fsr1
  5083  16FF  082A               	movf	(??_USBCtrlEPAllowDataStage^(0+128)+1),w
  5084  1700  3FC1               	movwi [1]fsr1
  5085                           
  5086                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  5087  1701  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5088  1702  0086               	movwf	6
  5089  1703  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5090  1704  0087               	movwf	7
  5091  1705  3048               	movlw	72
  5092  1706  0081               	movwf	1
  5093                           
  5094                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5095  1707  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  5096  1708  0086               	movwf	6
  5097  1709  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5098  170A  0087               	movwf	7
  5099  170B  1781               	bsf	1,7
  5100                           
  5101                           ;usb_device.c: 1500: }
  5102  170C  0008               	return
  5103  170D                     l7536:	
  5104                           
  5105                           ;usb_device.c: 1501: else
  5106                           ;usb_device.c: 1502: {
  5107                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  5108  170D  0021               	movlb	1	; select bank1
  5109  170E  0847               	movf	((_inPipes+1)^(0+128)+3),w	;volatile
  5110  170F  0020               	movlb	0	; select bank0
  5111  1710  0257               	subwf	87,w	;volatile
  5112  1711  1D03               	skipz
  5113  1712  2F17               	goto	u6955
  5114  1713  0021               	movlb	1	; select bank1
  5115  1714  0846               	movf	(_inPipes^(0+128)+3),w	;volatile
  5116  1715  0020               	movlb	0	; select bank0
  5117  1716  0256               	subwf	86,w	;volatile
  5118  1717                     u6955:	
  5119  1717  1803               	skipnc
  5120  1718  2F20               	goto	l7540
  5121                           
  5122                           ;usb_device.c: 1506: {
  5123                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
  5124  1719  0857               	movf	87,w	;volatile
  5125  171A  0021               	movlb	1	; select bank1
  5126  171B  00C7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  5127  171C  0020               	movlb	0	; select bank0
  5128  171D  0856               	movf	86,w	;volatile
  5129  171E  0021               	movlb	1	; select bank1
  5130  171F  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
  5131  1720                     l7540:	
  5132                           
  5133                           ;usb_device.c: 1508: }
  5134                           ;usb_device.c: 1509: USBCtrlTrfTxService();
  5135  1720  318A  2220         	fcall	_USBCtrlTrfTxService
  5136                           
  5137                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  5138  1722  3058               	movlw	88
  5139  1723  0021               	movlb	1	; select bank1
  5140  1724  00A9               	movwf	??_USBCtrlEPAllowDataStage^(0+128)
  5141  1725  3000               	movlw	0
  5142  1726  00AA               	movwf	(??_USBCtrlEPAllowDataStage^(0+128)+1)
  5143  1727  0023               	movlb	3	; select bank3
  5144  1728  0837               	movf	_pBDTEntryIn^(0+384),w
  5145  1729  0086               	movwf	6
  5146  172A  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  5147  172B  0087               	movwf	7
  5148  172C  3142               	addfsr 1,2
  5149  172D  0021               	movlb	1	; select bank1
  5150  172E  0829               	movf	??_USBCtrlEPAllowDataStage^(0+128),w
  5151  172F  3FC0               	movwi [0]fsr1
  5152  1730  082A               	movf	(??_USBCtrlEPAllowDataStage^(0+128)+1),w
  5153  1731  3FC1               	movwi [1]fsr1
  5154                           
  5155                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  5156  1732  0023               	movlb	3	; select bank3
  5157  1733  0837               	movf	_pBDTEntryIn^(0+384),w
  5158  1734  0086               	movwf	6
  5159  1735  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  5160  1736  0087               	movwf	7
  5161  1737  3048               	movlw	72
  5162  1738  0081               	movwf	1
  5163                           
  5164                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
  5165  1739  0837               	movf	_pBDTEntryIn^(0+384),w
  5166  173A  0086               	movwf	6
  5167  173B  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  5168  173C  0087               	movwf	7
  5169  173D  1781               	bsf	1,7
  5170  173E  0008               	return
  5171  173F                     __end_of_USBCtrlEPAllowDataStage:	
  5172                           
  5173                           	psect	text16
  5174  179F                     __ptext16:	
  5175 ;; *************** function _USBCheckStdRequest *****************
  5176 ;; Defined at:
  5177 ;;		line 2686 in file "mcc_generated_files/usb/usb_device.c"
  5178 ;; Parameters:    Size  Location     Type
  5179 ;;		None
  5180 ;; Auto vars:     Size  Location     Type
  5181 ;;		None
  5182 ;; Return value:  Size  Location     Type
  5183 ;;                  1    wreg      void 
  5184 ;; Registers used:
  5185 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5186 ;; Tracked objects:
  5187 ;;		On entry : 0/0
  5188 ;;		On exit  : 0/0
  5189 ;;		Unchanged: 0/0
  5190 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5193 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5194 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5195 ;;Total ram usage:        1 bytes
  5196 ;; Hardware stack levels used:    1
  5197 ;; Hardware stack levels required when called:   15
  5198 ;; This function calls:
  5199 ;;		_USBStdFeatureReqHandler
  5200 ;;		_USBStdGetDscHandler
  5201 ;;		_USBStdGetStatusHandler
  5202 ;;		_USBStdSetCfgHandler
  5203 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5204 ;; This function is called by:
  5205 ;;		_USBCtrlTrfSetupHandler
  5206 ;; This function uses a non-reentrant model
  5207 ;;
  5208                           
  5209                           
  5210                           ;psect for function _USBCheckStdRequest
  5211  179F                     _USBCheckStdRequest:	
  5212                           
  5213                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
  5214                           
  5215                           ;incstack = 0
  5216 ;; hardware stack exceeded
  5217                           ; Regs used in _USBCheckStdRequest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5218  179F  0020               	movlb	0	; select bank0
  5219  17A0  0E50               	swapf	80,w	;volatile
  5220  17A1  0C89               	rrf	9,f
  5221  17A2  3903               	andlw	3
  5222  17A3  3A00               	xorlw	0
  5223  17A4  1D03               	btfss	3,2
  5224  17A5  0008               	return
  5225  17A6  2FF4               	goto	l7878
  5226  17A7                     l592:	
  5227                           ;usb_device.c: 2691: {
  5228                           ;usb_device.c: 2692: case 5:
  5229                           
  5230                           ;usb_device.c: 2690: switch(SetupPkt.bRequest)
  5231                           
  5232                           
  5233                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
  5234  17A7  0021               	movlb	1	; select bank1
  5235  17A8  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5236                           
  5237                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
  5238  17A9  3008               	movlw	8
  5239  17AA  00C1               	movwf	??_USBCheckStdRequest^(0+128)
  5240  17AB  0841               	movf	??_USBCheckStdRequest^(0+128),w
  5241  17AC  0023               	movlb	3	; select bank3
  5242  17AD  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
  5243                           
  5244                           ;usb_device.c: 2696: break;
  5245  17AE  0008               	return
  5246  17AF                     l7848:	
  5247                           ;usb_device.c: 2697: case 6:
  5248                           
  5249                           
  5250                           ;usb_device.c: 2698: USBStdGetDscHandler();
  5251  17AF  318B  2393         	fcall	_USBStdGetDscHandler
  5252                           
  5253                           ;usb_device.c: 2699: break;
  5254  17B1  0008               	return
  5255  17B2                     l7850:	
  5256                           ;usb_device.c: 2700: case 9:
  5257                           
  5258                           
  5259                           ;usb_device.c: 2701: USBStdSetCfgHandler();
  5260  17B2  318D  25A8         	fcall	_USBStdSetCfgHandler
  5261                           
  5262                           ;usb_device.c: 2702: break;
  5263  17B4  0008               	return
  5264  17B5                     l7852:	
  5265                           ;usb_device.c: 2703: case 8:
  5266                           
  5267                           
  5268                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  5269  17B5  30EE               	movlw	low _USBActiveConfiguration
  5270  17B6  0021               	movlb	1	; select bank1
  5271  17B7  00C3               	movwf	_inPipes^(0+128)	;volatile
  5272  17B8  3001               	movlw	high _USBActiveConfiguration
  5273  17B9  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
  5274                           
  5275                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  5276  17BA  1445               	bsf	(_inPipes^(0+128)+2),0	;volatile
  5277                           
  5278                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
  5279  17BB  3001               	movlw	1
  5280  17BC  00C1               	movwf	??_USBCheckStdRequest^(0+128)
  5281  17BD  0841               	movf	??_USBCheckStdRequest^(0+128),w
  5282  17BE  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
  5283                           
  5284                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
  5285  17BF  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5286                           
  5287                           ;usb_device.c: 2708: break;
  5288  17C0  0008               	return
  5289  17C1                     l7860:	
  5290                           ;usb_device.c: 2709: case 0:
  5291                           
  5292                           
  5293                           ;usb_device.c: 2710: USBStdGetStatusHandler();
  5294  17C1  3195  2517         	fcall	_USBStdGetStatusHandler
  5295                           
  5296                           ;usb_device.c: 2711: break;
  5297  17C3  0008               	return
  5298  17C4                     l7862:	
  5299                           ;usb_device.c: 2712: case 1:
  5300                           
  5301                           
  5302                           ;usb_device.c: 2713: case 3:
  5303                           ;usb_device.c: 2714: USBStdFeatureReqHandler();
  5304  17C4  3180  207B         	fcall	_USBStdFeatureReqHandler
  5305                           
  5306                           ;usb_device.c: 2715: break;
  5307  17C6  0008               	return
  5308  17C7                     l7864:	
  5309                           ;usb_device.c: 2716: case 10:
  5310                           
  5311                           
  5312                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  5313  17C7  0020               	movlb	0	; select bank0
  5314  17C8  0854               	movf	84,w	;volatile
  5315  17C9  3EEB               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
  5316  17CA  0021               	movlb	1	; select bank1
  5317  17CB  00C3               	movwf	_inPipes^(0+128)	;volatile
  5318  17CC  3001               	movlw	1
  5319  17CD  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
  5320                           
  5321                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  5322  17CE  1445               	bsf	(_inPipes^(0+128)+2),0	;volatile
  5323                           
  5324                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
  5325  17CF  3001               	movlw	1
  5326  17D0  00C1               	movwf	??_USBCheckStdRequest^(0+128)
  5327  17D1  0841               	movf	??_USBCheckStdRequest^(0+128),w
  5328  17D2  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
  5329                           
  5330                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
  5331  17D3  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5332                           
  5333                           ;usb_device.c: 2721: break;
  5334  17D4  0008               	return
  5335  17D5                     l601:	
  5336                           ;usb_device.c: 2722: case 11:
  5337                           
  5338                           
  5339                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
  5340  17D5  0021               	movlb	1	; select bank1
  5341  17D6  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5342                           
  5343                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  5344  17D7  0020               	movlb	0	; select bank0
  5345  17D8  0852               	movf	82,w	;volatile
  5346  17D9  0021               	movlb	1	; select bank1
  5347  17DA  00C1               	movwf	??_USBCheckStdRequest^(0+128)
  5348  17DB  0020               	movlb	0	; select bank0
  5349  17DC  0854               	movf	84,w	;volatile
  5350  17DD  3EEB               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
  5351  17DE  0086               	movwf	6
  5352  17DF  3001               	movlw	1	; select bank3/4
  5353  17E0  0087               	movwf	7
  5354  17E1  0021               	movlb	1	; select bank1
  5355  17E2  0841               	movf	??_USBCheckStdRequest^(0+128),w
  5356  17E3  0081               	movwf	1
  5357                           
  5358                           ;usb_device.c: 2725: break;
  5359  17E4  0008               	return
  5360  17E5                     l7874:	
  5361                           ;usb_device.c: 2726: case 7:
  5362                           
  5363                           
  5364                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  5365  17E5  3000               	movlw	0
  5366  17E6  0021               	movlb	1	; select bank1
  5367  17E7  00B5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
  5368  17E8  3002               	movlw	2
  5369  17E9  00B4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  5370  17EA  3000               	movlw	0
  5371  17EB  00B6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  5372  17EC  3000               	movlw	0
  5373  17ED  00B7               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  5374  17EE  3000               	movlw	0
  5375  17EF  00B8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  5376  17F0  00B9               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^(0+128)
  5377  17F1  3191  2145         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5378                           
  5379                           ;usb_device.c: 2732: }
  5380                           
  5381                           ;usb_device.c: 2731: break;
  5382                           
  5383                           ;usb_device.c: 2730: default:
  5384                           
  5385                           ;usb_device.c: 2729: case 12:
  5386                           
  5387                           ;usb_device.c: 2728: break;
  5388  17F3  0008               	return
  5389  17F4                     l7878:	
  5390  17F4  0020               	movlb	0	; select bank0
  5391  17F5  0851               	movf	81,w	;volatile
  5392                           
  5393                           ; Switch size 1, requested type "space"
  5394                           ; Number of cases is 11, Range of values is 0 to 12
  5395                           ; switch strategies available:
  5396                           ; Name         Instructions Cycles
  5397                           ; direct_byte           32     6 (fixed)
  5398                           ; simple_byte           34    18 (average)
  5399                           ; jumptable            260     6 (fixed)
  5400                           ;	Chosen strategy is direct_byte
  5401  17F6  0084               	movwf	4
  5402  17F7  300D               	movlw	13
  5403  17F8  0204               	subwf	4,w
  5404  17F9  1803               	skipnc
  5405  17FA  0008               	return
  5406  17FB  3198               	movlp	high S8482
  5407  17FC  3504               	lslf	4,w
  5408  17FD  3E91               	addlw	low S8482
  5409  17FE  0082               	movwf	2
  5410  17FF                     l590:	
  5411  17FF  0008               	return
  5412  1800                     __end_of_USBCheckStdRequest:	
  5413                           
  5414                           	psect	swtext1
  5415  1891                     __pswtext1:	
  5416  1891                     S8482:	
  5417  1891  3197  2FC1         	ljmp	l7860
  5418  1893  3197  2FC4         	ljmp	l7862
  5419  1895  3197  2FFF         	ljmp	l590
  5420  1897  3197  2FC4         	ljmp	l7862
  5421  1899  3197  2FFF         	ljmp	l590
  5422  189B  3197  2FA7         	ljmp	l592
  5423  189D  3197  2FAF         	ljmp	l7848
  5424  189F  3197  2FE5         	ljmp	l7874
  5425  18A1  3197  2FB5         	ljmp	l7852
  5426  18A3  3197  2FB2         	ljmp	l7850
  5427  18A5  3197  2FC7         	ljmp	l7864
  5428  18A7  3197  2FD5         	ljmp	l601
  5429  18A9  3197  2FFF         	ljmp	l590
  5430                           
  5431                           	psect	text17
  5432  0DA8                     __ptext17:	
  5433 ;; *************** function _USBStdSetCfgHandler *****************
  5434 ;; Defined at:
  5435 ;;		line 1968 in file "mcc_generated_files/usb/usb_device.c"
  5436 ;; Parameters:    Size  Location     Type
  5437 ;;		None
  5438 ;; Auto vars:     Size  Location     Type
  5439 ;;  p               2   27[BANK1 ] PTR unsigned char 
  5440 ;;		 -> UEP1(1), 
  5441 ;;  i               1   29[BANK1 ] unsigned char 
  5442 ;;  i               1   30[BANK1 ] unsigned char 
  5443 ;; Return value:  Size  Location     Type
  5444 ;;                  1    wreg      void 
  5445 ;; Registers used:
  5446 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5447 ;; Tracked objects:
  5448 ;;		On entry : 0/0
  5449 ;;		On exit  : 0/0
  5450 ;;		Unchanged: 0/0
  5451 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5453 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5454 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5455 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5456 ;;Total ram usage:        5 bytes
  5457 ;; Hardware stack levels used:    1
  5458 ;; Hardware stack levels required when called:   14
  5459 ;; This function calls:
  5460 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5461 ;;		_memset
  5462 ;; This function is called by:
  5463 ;;		_USBCheckStdRequest
  5464 ;; This function uses a non-reentrant model
  5465 ;;
  5466                           
  5467                           
  5468                           ;psect for function _USBStdSetCfgHandler
  5469  0DA8                     _USBStdSetCfgHandler:	
  5470                           
  5471                           ;usb_device.c: 1970: uint8_t i;
  5472                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
  5473                           
  5474                           ;incstack = 0
  5475 ;; hardware stack exceeded
  5476                           ; Regs used in _USBStdSetCfgHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5477  0DA8  0021               	movlb	1	; select bank1
  5478  0DA9  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5479                           
  5480                           ;usb_device.c: 1976: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 
      +                          0; };
  5481  0DAA  300E               	movlw	14
  5482  0DAB  00BC               	movwf	(USBStdSetCfgHandler@p+1)^(0+128)
  5483  0DAC  3099               	movlw	153
  5484  0DAD  00BB               	movwf	USBStdSetCfgHandler@p^(0+128)
  5485  0DAE  01BD               	clrf	USBStdSetCfgHandler@i_2163^(0+128)
  5486  0DAF  3002               	movlw	2
  5487  0DB0  023D               	subwf	USBStdSetCfgHandler@i_2163^(0+128),w
  5488  0DB1  1803               	btfsc	3,0
  5489  0DB2  2DC4               	goto	l7564
  5490  0DB3                     l7556:	
  5491  0DB3  083B               	movf	USBStdSetCfgHandler@p^(0+128),w
  5492  0DB4  0086               	movwf	6
  5493  0DB5  083C               	movf	(USBStdSetCfgHandler@p+1)^(0+128),w
  5494  0DB6  0087               	movwf	7
  5495  0DB7  0181               	clrf	1
  5496  0DB8  3001               	movlw	1
  5497  0DB9  07BB               	addwf	USBStdSetCfgHandler@p^(0+128),f
  5498  0DBA  3000               	movlw	0
  5499  0DBB  3DBC               	addwfc	(USBStdSetCfgHandler@p+1)^(0+128),f
  5500  0DBC  3001               	movlw	1
  5501  0DBD  00BA               	movwf	??_USBStdSetCfgHandler^(0+128)
  5502  0DBE  083A               	movf	??_USBStdSetCfgHandler^(0+128),w
  5503  0DBF  07BD               	addwf	USBStdSetCfgHandler@i_2163^(0+128),f
  5504  0DC0  3002               	movlw	2
  5505  0DC1  023D               	subwf	USBStdSetCfgHandler@i_2163^(0+128),w
  5506  0DC2  1C03               	skipc
  5507  0DC3  2DB3               	goto	l7556
  5508  0DC4                     l7564:	
  5509                           
  5510                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  5511  0DC4  3020               	movlw	32
  5512  0DC5  00A6               	movwf	memset@p1^(0+128)
  5513  0DC6  3000               	movlw	0
  5514  0DC7  00A7               	movwf	(memset@p1+1)^(0+128)
  5515  0DC8  3000               	movlw	0
  5516  0DC9  00A8               	movwf	memset@c^(0+128)
  5517  0DCA  00A9               	movwf	(memset@c+1)^(0+128)
  5518  0DCB  3030               	movlw	48
  5519  0DCC  00AA               	movwf	memset@n^(0+128)
  5520  0DCD  3000               	movlw	0
  5521  0DCE  00AB               	movwf	(memset@n^(0+128)+1)
  5522  0DCF  319E  26D1  318D   	fcall	_memset
  5523                           
  5524                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
  5525  0DD2  003D               	movlb	29	; select bank29
  5526  0DD3  170E               	bsf	14,6	;volatile
  5527                           
  5528                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
  5529  0DD4  0021               	movlb	1	; select bank1
  5530  0DD5  01BE               	clrf	USBStdSetCfgHandler@i^(0+128)
  5531  0DD6  3003               	movlw	3
  5532  0DD7  023E               	subwf	USBStdSetCfgHandler@i^(0+128),w
  5533  0DD8  1803               	btfsc	3,0
  5534  0DD9  2DEE               	goto	l7580
  5535  0DDA                     l7574:	
  5536                           
  5537                           ;usb_device.c: 1988: {
  5538                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
  5539  0DDA  083E               	movf	USBStdSetCfgHandler@i^(0+128),w
  5540  0DDB  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  5541  0DDC  0086               	movwf	6
  5542  0DDD  3001               	movlw	1	; select bank3/4
  5543  0DDE  0087               	movwf	7
  5544  0DDF  0181               	clrf	1
  5545                           
  5546                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
  5547  0DE0  083E               	movf	USBStdSetCfgHandler@i^(0+128),w
  5548  0DE1  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  5549  0DE2  0086               	movwf	6
  5550  0DE3  3001               	movlw	1	; select bank3/4
  5551  0DE4  0087               	movwf	7
  5552  0DE5  0181               	clrf	1
  5553  0DE6  3001               	movlw	1
  5554  0DE7  00BA               	movwf	??_USBStdSetCfgHandler^(0+128)
  5555  0DE8  083A               	movf	??_USBStdSetCfgHandler^(0+128),w
  5556  0DE9  07BE               	addwf	USBStdSetCfgHandler@i^(0+128),f
  5557  0DEA  3003               	movlw	3
  5558  0DEB  023E               	subwf	USBStdSetCfgHandler@i^(0+128),w
  5559  0DEC  1C03               	skipc
  5560  0DED  2DDA               	goto	l7574
  5561  0DEE                     l7580:	
  5562                           
  5563                           ;usb_device.c: 1991: }
  5564                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
  5565  0DEE  30EB               	movlw	low _USBAlternateInterface
  5566  0DEF  00A6               	movwf	memset@p1^(0+128)
  5567  0DF0  3001               	movlw	high _USBAlternateInterface
  5568  0DF1  00A7               	movwf	(memset@p1+1)^(0+128)
  5569  0DF2  3000               	movlw	0
  5570  0DF3  00A8               	movwf	memset@c^(0+128)
  5571  0DF4  00A9               	movwf	(memset@c+1)^(0+128)
  5572  0DF5  3002               	movlw	2
  5573  0DF6  00AA               	movwf	memset@n^(0+128)
  5574  0DF7  3000               	movlw	0
  5575  0DF8  00AB               	movwf	(memset@n^(0+128)+1)
  5576  0DF9  319E  26D1  318D   	fcall	_memset
  5577                           
  5578                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
  5579  0DFC  003D               	movlb	29	; select bank29
  5580  0DFD  130E               	bcf	14,6	;volatile
  5581                           
  5582                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  5583  0DFE  3028               	movlw	40
  5584  0DFF  0023               	movlb	3	; select bank3
  5585  0E00  00B7               	movwf	_pBDTEntryIn^(0+384)
  5586  0E01  3000               	movlw	0
  5587  0E02  00B8               	movwf	(_pBDTEntryIn+1)^(0+384)
  5588                           
  5589                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  5590  0E03  3020               	movlw	32
  5591  0E04  0021               	movlb	1	; select bank1
  5592  0E05  00BA               	movwf	??_USBStdSetCfgHandler^(0+128)
  5593  0E06  083A               	movf	??_USBStdSetCfgHandler^(0+128),w
  5594  0E07  0023               	movlb	3	; select bank3
  5595  0E08  00E4               	movwf	_pBDTEntryEP0OutCurrent^(0+384)
  5596                           
  5597                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  5598  0E09  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  5599  0E0A  0021               	movlb	1	; select bank1
  5600  0E0B  00C8               	movwf	_pBDTEntryEP0OutNext^(0+128)
  5601  0E0C  39FF               	andlw	255
  5602  0E0D  1D03               	skipz
  5603  0E0E  3000               	movlw	0
  5604  0E0F  00C9               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
  5605                           
  5606                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  5607  0E10  0020               	movlb	0	; select bank0
  5608  0E11  0852               	movf	82,w	;volatile
  5609  0E12  0021               	movlb	1	; select bank1
  5610  0E13  00BA               	movwf	??_USBStdSetCfgHandler^(0+128)
  5611  0E14  083A               	movf	??_USBStdSetCfgHandler^(0+128),w
  5612  0E15  0023               	movlb	3	; select bank3
  5613  0E16  00EE               	movwf	_USBActiveConfiguration^(0+384)	;volatile
  5614                           
  5615                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
  5616  0E17  086E               	movf	_USBActiveConfiguration^(0+384),w	;volatile
  5617  0E18  1D03               	btfss	3,2
  5618  0E19  2E21               	goto	l7596
  5619                           
  5620                           ;usb_device.c: 2010: {
  5621                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
  5622  0E1A  3010               	movlw	16
  5623  0E1B  0021               	movlb	1	; select bank1
  5624  0E1C  00BA               	movwf	??_USBStdSetCfgHandler^(0+128)
  5625  0E1D  083A               	movf	??_USBStdSetCfgHandler^(0+128),w
  5626  0E1E  0023               	movlb	3	; select bank3
  5627  0E1F  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
  5628                           
  5629                           ;usb_device.c: 2013: }
  5630  0E20  0008               	return
  5631  0E21                     l7596:	
  5632                           
  5633                           ;usb_device.c: 2014: else
  5634                           ;usb_device.c: 2015: {
  5635                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  5636  0E21  3000               	movlw	0
  5637  0E22  0021               	movlb	1	; select bank1
  5638  0E23  00B5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
  5639  0E24  3001               	movlw	1
  5640  0E25  00B4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  5641  0E26  30EE               	movlw	low _USBActiveConfiguration
  5642  0E27  00B6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  5643  0E28  3001               	movlw	high _USBActiveConfiguration
  5644  0E29  00B7               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  5645  0E2A  3001               	movlw	1
  5646  0E2B  00B8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  5647  0E2C  3000               	movlw	0
  5648  0E2D  00B9               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)+1)
  5649  0E2E  3191  2145         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5650                           
  5651                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
  5652  0E30  3020               	movlw	32
  5653  0E31  0021               	movlb	1	; select bank1
  5654  0E32  00BA               	movwf	??_USBStdSetCfgHandler^(0+128)
  5655  0E33  083A               	movf	??_USBStdSetCfgHandler^(0+128),w
  5656  0E34  0023               	movlb	3	; select bank3
  5657  0E35  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
  5658  0E36  0008               	return
  5659  0E37                     __end_of_USBStdSetCfgHandler:	
  5660                           
  5661                           	psect	text18
  5662  1ED1                     __ptext18:	
  5663 ;; *************** function _memset *****************
  5664 ;; Defined at:
  5665 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
  5666 ;; Parameters:    Size  Location     Type
  5667 ;;  p1              2    6[BANK1 ] PTR void 
  5668 ;;		 -> USBAlternateInterface(2), BDT(48), 
  5669 ;;  c               2    8[BANK1 ] int 
  5670 ;;  n               2   10[BANK1 ] unsigned int 
  5671 ;; Auto vars:     Size  Location     Type
  5672 ;;  p               2   12[BANK1 ] PTR unsigned char 
  5673 ;;		 -> USBAlternateInterface(2), BDT(48), 
  5674 ;; Return value:  Size  Location     Type
  5675 ;;                  2    6[BANK1 ] PTR void 
  5676 ;; Registers used:
  5677 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5678 ;; Tracked objects:
  5679 ;;		On entry : 0/0
  5680 ;;		On exit  : 0/0
  5681 ;;		Unchanged: 0/0
  5682 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5683 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  5684 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5686 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5687 ;;Total ram usage:        8 bytes
  5688 ;; Hardware stack levels used:    1
  5689 ;; Hardware stack levels required when called:   10
  5690 ;; This function calls:
  5691 ;;		Nothing
  5692 ;; This function is called by:
  5693 ;;		_USBStdSetCfgHandler
  5694 ;; This function uses a non-reentrant model
  5695 ;;
  5696                           
  5697                           
  5698                           ;psect for function _memset
  5699  1ED1                     _memset:	
  5700                           
  5701                           ;incstack = 0
  5702                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  5703  1ED1  0021               	movlb	1	; select bank1
  5704  1ED2  0827               	movf	(memset@p1+1)^(0+128),w
  5705  1ED3  00AD               	movwf	(memset@p+1)^(0+128)
  5706  1ED4  0826               	movf	memset@p1^(0+128),w
  5707  1ED5  00AC               	movwf	memset@p^(0+128)
  5708  1ED6                     l7486:	
  5709  1ED6  3001               	movlw	1
  5710  1ED7  02AA               	subwf	memset@n^(0+128),f
  5711  1ED8  3000               	movlw	0
  5712  1ED9  3BAB               	subwfb	(memset@n+1)^(0+128),f
  5713  1EDA  0A2A               	incf	memset@n^(0+128),w
  5714  1EDB  1903               	btfsc	3,2
  5715  1EDC  0A2B               	incf	(memset@n+1)^(0+128),w
  5716  1EDD  1903               	btfsc	3,2
  5717  1EDE  0008               	return
  5718  1EDF  082C               	movf	memset@p^(0+128),w
  5719  1EE0  0086               	movwf	6
  5720  1EE1  082D               	movf	(memset@p+1)^(0+128),w
  5721  1EE2  0087               	movwf	7
  5722  1EE3  0828               	movf	memset@c^(0+128),w
  5723  1EE4  0081               	movwf	1
  5724  1EE5  3001               	movlw	1
  5725  1EE6  07AC               	addwf	memset@p^(0+128),f
  5726  1EE7  3000               	movlw	0
  5727  1EE8  3DAD               	addwfc	(memset@p+1)^(0+128),f
  5728  1EE9  2ED6               	goto	l7486
  5729  1EEA                     __end_of_memset:	
  5730                           ;	Return value of _memset is never used
  5731                           
  5732                           
  5733                           	psect	text19
  5734  1517                     __ptext19:	
  5735 ;; *************** function _USBStdGetStatusHandler *****************
  5736 ;; Defined at:
  5737 ;;		line 2129 in file "mcc_generated_files/usb/usb_device.c"
  5738 ;; Parameters:    Size  Location     Type
  5739 ;;		None
  5740 ;; Auto vars:     Size  Location     Type
  5741 ;;  p               2    7[BANK1 ] PTR struct __BDT
  5742 ;;		 -> RAM(4096), BDT(48), NULL(0), 
  5743 ;; Return value:  Size  Location     Type
  5744 ;;                  1    wreg      void 
  5745 ;; Registers used:
  5746 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5747 ;; Tracked objects:
  5748 ;;		On entry : 0/0
  5749 ;;		On exit  : 0/0
  5750 ;;		Unchanged: 0/0
  5751 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5753 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5754 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5755 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5756 ;;Total ram usage:        3 bytes
  5757 ;; Hardware stack levels used:    1
  5758 ;; Hardware stack levels required when called:   10
  5759 ;; This function calls:
  5760 ;;		Nothing
  5761 ;; This function is called by:
  5762 ;;		_USBCheckStdRequest
  5763 ;; This function uses a non-reentrant model
  5764 ;;
  5765                           
  5766                           
  5767                           ;psect for function _USBStdGetStatusHandler
  5768  1517                     _USBStdGetStatusHandler:	
  5769                           
  5770                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
  5771                           
  5772                           ;incstack = 0
  5773                           ; Regs used in _USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
  5774  1517  0020               	movlb	0	; select bank0
  5775  1518  01D8               	clrf	88	;volatile
  5776                           
  5777                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
  5778  1519  01D9               	clrf	89	;volatile
  5779                           
  5780                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
  5781  151A  2D57               	goto	l7652
  5782  151B                     l530:	
  5783                           ;usb_device.c: 2135: {
  5784                           ;usb_device.c: 2136: case (0x00):
  5785                           
  5786                           
  5787                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
  5788  151B  0021               	movlb	1	; select bank1
  5789  151C  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5790                           
  5791                           ;usb_device.c: 2145: }
  5792                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
  5793                           
  5794                           ;usb_device.c: 2143: {
  5795                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
  5796                           
  5797                           ;usb_device.c: 2142: if(0 == 1)
  5798  151D  0023               	movlb	3	; select bank3
  5799  151E  0360               	decf	_RemoteWakeup^(0+384),w	;volatile
  5800  151F  1D03               	btfss	3,2
  5801  1520  2D63               	goto	l533
  5802                           
  5803                           ;usb_device.c: 2148: {
  5804                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
  5805  1521  0020               	movlb	0	; select bank0
  5806  1522  14D8               	bsf	88,1	;volatile
  5807                           
  5808                           ;usb_device.c: 2150: }
  5809                           ;usb_device.c: 2151: break;
  5810  1523  2D63               	goto	l533
  5811  1524                     l534:	
  5812                           ;usb_device.c: 2152: case (0x01):
  5813                           
  5814                           
  5815                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
  5816  1524  0021               	movlb	1	; select bank1
  5817  1525  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5818                           
  5819                           ;usb_device.c: 2154: break;
  5820  1526  2D63               	goto	l533
  5821  1527                     l535:	
  5822                           ;usb_device.c: 2155: case (0x02):
  5823                           
  5824                           
  5825                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
  5826  1527  0021               	movlb	1	; select bank1
  5827  1528  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5828                           
  5829                           ;usb_device.c: 2160: {
  5830                           ;usb_device.c: 2161: BDT_ENTRY *p;
  5831                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
  5832  1529  0020               	movlb	0	; select bank0
  5833  152A  1BD4               	btfsc	84,7	;volatile
  5834  152B  2D38               	goto	l7642
  5835                           
  5836                           ;usb_device.c: 2164: {
  5837                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  5838  152C  0854               	movf	84,w	;volatile
  5839  152D  390F               	andlw	15
  5840  152E  0709               	addwf	9,w
  5841  152F  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  5842  1530  0086               	movwf	6
  5843  1531  3001               	movlw	1	; select bank3/4
  5844  1532  0087               	movwf	7
  5845  1533  3F40               	moviw [0]fsr1
  5846  1534  0021               	movlb	1	; select bank1
  5847  1535  00A7               	movwf	USBStdGetStatusHandler@p^(0+128)
  5848  1536  3F41               	moviw [1]fsr1
  5849  1537  2D44               	goto	L2
  5850  1538                     l7642:	
  5851                           ;usb_device.c: 2166: }
  5852                           
  5853                           
  5854                           ;usb_device.c: 2167: else
  5855                           ;usb_device.c: 2168: {
  5856                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  5857  1538  0020               	movlb	0	; select bank0
  5858  1539  0854               	movf	84,w	;volatile
  5859  153A  390F               	andlw	15
  5860  153B  0709               	addwf	9,w
  5861  153C  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  5862  153D  0086               	movwf	6
  5863  153E  3001               	movlw	1	; select bank3/4
  5864  153F  0087               	movwf	7
  5865  1540  3F40               	moviw [0]fsr1
  5866  1541  0021               	movlb	1	; select bank1
  5867  1542  00A7               	movwf	USBStdGetStatusHandler@p^(0+128)
  5868  1543  3F41               	moviw [1]fsr1
  5869  1544                     L2:	
  5870  1544  00A8               	movwf	(USBStdGetStatusHandler@p+1)^(0+128)
  5871                           
  5872                           ;usb_device.c: 2170: }
  5873                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  5874  1545  0827               	movf	USBStdGetStatusHandler@p^(0+128),w
  5875  1546  0086               	movwf	6
  5876  1547  0828               	movf	(USBStdGetStatusHandler@p+1)^(0+128),w
  5877  1548  0087               	movwf	7
  5878  1549  1F81               	btfss	1,7
  5879  154A  2D63               	goto	l533
  5880  154B  0827               	movf	USBStdGetStatusHandler@p^(0+128),w
  5881  154C  0086               	movwf	6
  5882  154D  0828               	movf	(USBStdGetStatusHandler@p+1)^(0+128),w
  5883  154E  0087               	movwf	7
  5884  154F  1D01               	btfss	1,2
  5885  1550  2D63               	goto	l533
  5886                           
  5887                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
  5888  1551  3001               	movlw	1
  5889  1552  00A6               	movwf	??_USBStdGetStatusHandler^(0+128)
  5890  1553  0826               	movf	??_USBStdGetStatusHandler^(0+128),w
  5891  1554  0020               	movlb	0	; select bank0
  5892  1555  00D8               	movwf	88	;volatile
  5893                           
  5894                           ;usb_device.c: 2175: }
  5895                           ;usb_device.c: 2176: }
  5896                           
  5897                           ;usb_device.c: 2174: break;
  5898  1556  2D63               	goto	l533
  5899  1557                     l7652:	
  5900  1557  0850               	movf	80,w	;volatile
  5901  1558  391F               	andlw	31
  5902                           
  5903                           ; Switch size 1, requested type "space"
  5904                           ; Number of cases is 3, Range of values is 0 to 2
  5905                           ; switch strategies available:
  5906                           ; Name         Instructions Cycles
  5907                           ; simple_byte           10     6 (average)
  5908                           ; direct_byte           12     6 (fixed)
  5909                           ; jumptable            260     6 (fixed)
  5910                           ;	Chosen strategy is simple_byte
  5911  1559  3A00               	xorlw	0	; case 0
  5912  155A  1903               	skipnz
  5913  155B  2D1B               	goto	l530
  5914  155C  3A01               	xorlw	1	; case 1
  5915  155D  1903               	skipnz
  5916  155E  2D24               	goto	l534
  5917  155F  3A03               	xorlw	3	; case 2
  5918  1560  1903               	skipnz
  5919  1561  2D27               	goto	l535
  5920  1562  2D63               	goto	l533
  5921  1563                     l533:	
  5922                           
  5923                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
  5924  1563  0021               	movlb	1	; select bank1
  5925  1564  1FC5               	btfss	(_inPipes^(0+128)+2),7	;volatile
  5926  1565  0008               	return
  5927                           
  5928                           ;usb_device.c: 2179: {
  5929                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  5930  1566  3058               	movlw	88
  5931  1567  00C3               	movwf	_inPipes^(0+128)	;volatile
  5932  1568  3000               	movlw	0
  5933  1569  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
  5934                           
  5935                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  5936  156A  1445               	bsf	(_inPipes^(0+128)+2),0	;volatile
  5937                           
  5938                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
  5939  156B  3002               	movlw	2
  5940  156C  00A6               	movwf	??_USBStdGetStatusHandler^(0+128)
  5941  156D  0826               	movf	??_USBStdGetStatusHandler^(0+128),w
  5942  156E  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
  5943  156F  0008               	return
  5944  1570                     __end_of_USBStdGetStatusHandler:	
  5945                           
  5946                           	psect	text20
  5947  0B93                     __ptext20:	
  5948 ;; *************** function _USBStdGetDscHandler *****************
  5949 ;; Defined at:
  5950 ;;		line 2043 in file "mcc_generated_files/usb/usb_device.c"
  5951 ;; Parameters:    Size  Location     Type
  5952 ;;		None
  5953 ;; Auto vars:     Size  Location     Type
  5954 ;;		None
  5955 ;; Return value:  Size  Location     Type
  5956 ;;                  1    wreg      void 
  5957 ;; Registers used:
  5958 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  5959 ;; Tracked objects:
  5960 ;;		On entry : 0/0
  5961 ;;		On exit  : 0/0
  5962 ;;		Unchanged: 0/0
  5963 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5966 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5967 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5968 ;;Total ram usage:        3 bytes
  5969 ;; Hardware stack levels used:    1
  5970 ;; Hardware stack levels required when called:   10
  5971 ;; This function calls:
  5972 ;;		Nothing
  5973 ;; This function is called by:
  5974 ;;		_USBCheckStdRequest
  5975 ;; This function uses a non-reentrant model
  5976 ;;
  5977                           
  5978                           
  5979                           ;psect for function _USBStdGetDscHandler
  5980  0B93                     _USBStdGetDscHandler:	
  5981                           
  5982                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
  5983                           
  5984                           ;incstack = 0
  5985                           ; Regs used in _USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
  5986  0B93  3080               	movlw	128
  5987  0B94  0020               	movlb	0	; select bank0
  5988  0B95  0650               	xorwf	80,w	;volatile
  5989  0B96  1D03               	btfss	3,2
  5990  0B97  0008               	return
  5991                           
  5992                           ;usb_device.c: 2046: {
  5993                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  5994  0B98  30C0               	movlw	192
  5995  0B99  0021               	movlb	1	; select bank1
  5996  0B9A  00A6               	movwf	??_USBStdGetDscHandler^(0+128)
  5997  0B9B  0826               	movf	??_USBStdGetDscHandler^(0+128),w
  5998  0B9C  00C5               	movwf	(_inPipes^(0+128)+2)	;volatile
  5999                           
  6000                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
  6001  0B9D  2C05               	goto	l7630
  6002  0B9E                     l7604:	
  6003                           ;usb_device.c: 2050: {
  6004                           ;usb_device.c: 2051: case 0x01:
  6005                           
  6006                           
  6007                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  6008  0B9E  30C5               	movlw	low (_device_dsc| (0+32768))
  6009  0B9F  0021               	movlb	1	; select bank1
  6010  0BA0  00C3               	movwf	_inPipes^(0+128)	;volatile
  6011  0BA1  3098               	movlw	high (_device_dsc| (0+32768))
  6012  0BA2  00C4               	movwf	(_inPipes^(0+128)+1)	;volatile
  6013                           
  6014                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
  6015  0BA3  3000               	movlw	0
  6016  0BA4  00C7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  6017  0BA5  3012               	movlw	18
  6018  0BA6  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
  6019                           
  6020                           ;usb_device.c: 2058: break;
  6021  0BA7  0008               	return
  6022  0BA8                     l7608:	
  6023                           ;usb_device.c: 2059: case 0x02:
  6024                           
  6025                           
  6026                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
  6027  0BA8  0020               	movlb	0	; select bank0
  6028  0BA9  0852               	movf	82,w	;volatile
  6029  0BAA  1D03               	btfss	3,2
  6030  0BAB  2BDB               	goto	l7616
  6031                           
  6032                           ;usb_device.c: 2064: {
  6033                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  6034  0BAC  0852               	movf	82,w	;volatile
  6035  0BAD  0021               	movlb	1	; select bank1
  6036  0BAE  00A6               	movwf	??_USBStdGetDscHandler^(0+128)
  6037  0BAF  01A7               	clrf	(??_USBStdGetDscHandler^(0+128)+1)
  6038  0BB0  35A6               	lslf	??_USBStdGetDscHandler^(0+128),f
  6039  0BB1  0DA7               	rlf	(??_USBStdGetDscHandler^(0+128)+1),f
  6040  0BB2  30E8               	movlw	low (_USB_CD_Ptr| (0+32768))
  6041  0BB3  0726               	addwf	??_USBStdGetDscHandler^(0+128),w
  6042  0BB4  0084               	movwf	4
  6043  0BB5  3098               	movlw	high (_USB_CD_Ptr| (0+32768))
  6044  0BB6  3D27               	addwfc	(??_USBStdGetDscHandler+1)^(0+128),w
  6045  0BB7  0085               	movwf	5
  6046  0BB8  3F00               	moviw [0]fsr0
  6047  0BB9  00C3               	movwf	_inPipes^(0+128)	;volatile
  6048  0BBA  3F01               	moviw [1]fsr0
  6049  0BBB  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
  6050                           
  6051                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  6052  0BBC  0844               	movf	(_inPipes+1)^(0+128),w	;volatile
  6053  0BBD  00A7               	movwf	(??_USBStdGetDscHandler^(0+128)+1)
  6054  0BBE  0843               	movf	_inPipes^(0+128),w	;volatile
  6055  0BBF  00A6               	movwf	??_USBStdGetDscHandler^(0+128)
  6056  0BC0  3002               	movlw	2
  6057  0BC1  0726               	addwf	??_USBStdGetDscHandler^(0+128),w
  6058  0BC2  0084               	movwf	4
  6059  0BC3  0827               	movf	(??_USBStdGetDscHandler^(0+128)+1),w
  6060  0BC4  1803               	skipnc
  6061  0BC5  0A27               	incf	(??_USBStdGetDscHandler^(0+128)+1),w
  6062  0BC6  0085               	movwf	5
  6063  0BC7  0800               	movf	0,w	;code access
  6064  0BC8  00A8               	movwf	(??_USBStdGetDscHandler+2)^(0+128)
  6065  0BC9  0828               	movf	(??_USBStdGetDscHandler+2)^(0+128),w
  6066  0BCA  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
  6067                           
  6068                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  6069  0BCB  0844               	movf	(_inPipes+1)^(0+128),w	;volatile
  6070  0BCC  00A7               	movwf	(??_USBStdGetDscHandler^(0+128)+1)
  6071  0BCD  0843               	movf	_inPipes^(0+128),w	;volatile
  6072  0BCE  00A6               	movwf	??_USBStdGetDscHandler^(0+128)
  6073  0BCF  3003               	movlw	3
  6074  0BD0  0726               	addwf	??_USBStdGetDscHandler^(0+128),w
  6075  0BD1  0084               	movwf	4
  6076  0BD2  0827               	movf	(??_USBStdGetDscHandler^(0+128)+1),w
  6077  0BD3  1803               	skipnc
  6078  0BD4  0A27               	incf	(??_USBStdGetDscHandler^(0+128)+1),w
  6079  0BD5  0085               	movwf	5
  6080  0BD6  0800               	movf	0,w	;code access
  6081  0BD7  00A8               	movwf	(??_USBStdGetDscHandler+2)^(0+128)
  6082  0BD8  0828               	movf	(??_USBStdGetDscHandler+2)^(0+128),w
  6083  0BD9  00C7               	movwf	(_inPipes^(0+128)+4)	;volatile
  6084                           
  6085                           ;usb_device.c: 2076: }
  6086  0BDA  0008               	return
  6087  0BDB                     l7616:	
  6088                           
  6089                           ;usb_device.c: 2077: else
  6090                           ;usb_device.c: 2078: {
  6091                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
  6092  0BDB  0021               	movlb	1	; select bank1
  6093  0BDC  01C5               	clrf	(_inPipes^(0+128)+2)	;volatile
  6094                           
  6095                           ;usb_device.c: 2080: }
  6096                           ;usb_device.c: 2081: break;
  6097  0BDD  0008               	return
  6098  0BDE                     l7618:	
  6099                           ;usb_device.c: 2082: case 0x03:
  6100                           
  6101                           
  6102                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
  6103  0BDE  3003               	movlw	3
  6104  0BDF  0020               	movlb	0	; select bank0
  6105  0BE0  0252               	subwf	82,w	;volatile
  6106  0BE1  1803               	skipnc
  6107  0BE2  2BFF               	goto	l7624
  6108                           
  6109                           ;usb_device.c: 2087: {
  6110                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  6111  0BE3  0852               	movf	82,w	;volatile
  6112  0BE4  0021               	movlb	1	; select bank1
  6113  0BE5  00A6               	movwf	??_USBStdGetDscHandler^(0+128)
  6114  0BE6  01A7               	clrf	(??_USBStdGetDscHandler^(0+128)+1)
  6115  0BE7  35A6               	lslf	??_USBStdGetDscHandler^(0+128),f
  6116  0BE8  0DA7               	rlf	(??_USBStdGetDscHandler^(0+128)+1),f
  6117  0BE9  30DF               	movlw	low (_USB_SD_Ptr| (0+32768))
  6118  0BEA  0726               	addwf	??_USBStdGetDscHandler^(0+128),w
  6119  0BEB  0084               	movwf	4
  6120  0BEC  3098               	movlw	high (_USB_SD_Ptr| (0+32768))
  6121  0BED  3D27               	addwfc	(??_USBStdGetDscHandler+1)^(0+128),w
  6122  0BEE  0085               	movwf	5
  6123  0BEF  3F00               	moviw [0]fsr0
  6124  0BF0  00C3               	movwf	_inPipes^(0+128)	;volatile
  6125  0BF1  3F01               	moviw [1]fsr0
  6126  0BF2  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
  6127                           
  6128                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  6129  0BF3  0843               	movf	_inPipes^(0+128),w	;volatile
  6130  0BF4  0084               	movwf	4
  6131  0BF5  0844               	movf	(_inPipes+1)^(0+128),w	;volatile
  6132  0BF6  0085               	movwf	5
  6133  0BF7  0800               	movf	0,w	;code access
  6134  0BF8  00A6               	movwf	??_USBStdGetDscHandler^(0+128)
  6135  0BF9  01A7               	clrf	(??_USBStdGetDscHandler^(0+128)+1)
  6136  0BFA  0826               	movf	??_USBStdGetDscHandler^(0+128),w
  6137  0BFB  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
  6138  0BFC  0827               	movf	(??_USBStdGetDscHandler+1)^(0+128),w
  6139  0BFD  00C7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  6140                           
  6141                           ;usb_device.c: 2092: }
  6142  0BFE  0008               	return
  6143  0BFF                     l7624:	
  6144                           
  6145                           ;usb_device.c: 2102: else
  6146                           ;usb_device.c: 2103: {
  6147                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
  6148  0BFF  0021               	movlb	1	; select bank1
  6149  0C00  01C5               	clrf	(_inPipes^(0+128)+2)	;volatile
  6150                           
  6151                           ;usb_device.c: 2105: }
  6152                           ;usb_device.c: 2106: break;
  6153  0C01  0008               	return
  6154  0C02                     l7626:	
  6155                           ;usb_device.c: 2107: default:
  6156                           
  6157                           
  6158                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
  6159  0C02  0021               	movlb	1	; select bank1
  6160  0C03  01C5               	clrf	(_inPipes^(0+128)+2)	;volatile
  6161                           
  6162                           ;usb_device.c: 2110: }
  6163                           
  6164                           ;usb_device.c: 2109: break;
  6165  0C04  0008               	return
  6166  0C05                     l7630:	
  6167  0C05  0020               	movlb	0	; select bank0
  6168  0C06  0853               	movf	83,w	;volatile
  6169                           
  6170                           ; Switch size 1, requested type "space"
  6171                           ; Number of cases is 3, Range of values is 1 to 3
  6172                           ; switch strategies available:
  6173                           ; Name         Instructions Cycles
  6174                           ; simple_byte           10     6 (average)
  6175                           ; direct_byte           15     9 (fixed)
  6176                           ; jumptable            263     9 (fixed)
  6177                           ;	Chosen strategy is simple_byte
  6178  0C07  3A01               	xorlw	1	; case 1
  6179  0C08  1903               	skipnz
  6180  0C09  2B9E               	goto	l7604
  6181  0C0A  3A03               	xorlw	3	; case 2
  6182  0C0B  1903               	skipnz
  6183  0C0C  2BA8               	goto	l7608
  6184  0C0D  3A01               	xorlw	1	; case 3
  6185  0C0E  1903               	skipnz
  6186  0C0F  2BDE               	goto	l7618
  6187  0C10  2C02               	goto	l7626
  6188  0C11  0008               	return
  6189  0C12                     __end_of_USBStdGetDscHandler:	
  6190                           
  6191                           	psect	text21
  6192  007B                     __ptext21:	
  6193 ;; *************** function _USBStdFeatureReqHandler *****************
  6194 ;; Defined at:
  6195 ;;		line 2754 in file "mcc_generated_files/usb/usb_device.c"
  6196 ;; Parameters:    Size  Location     Type
  6197 ;;		None
  6198 ;; Auto vars:     Size  Location     Type
  6199 ;;  p               2   31[BANK1 ] PTR struct __BDT
  6200 ;;		 -> RAM(4096), BDT(48), NULL(0), 
  6201 ;;  pUEP            2   28[BANK1 ] PTR unsigned char 
  6202 ;;		 -> UEP0(1), 
  6203 ;;  current_ep_d    1   30[BANK1 ] struct .
  6204 ;; Return value:  Size  Location     Type
  6205 ;;                  1    wreg      void 
  6206 ;; Registers used:
  6207 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6208 ;; Tracked objects:
  6209 ;;		On entry : 0/0
  6210 ;;		On exit  : 0/0
  6211 ;;		Unchanged: 0/0
  6212 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6214 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  6215 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6216 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  6217 ;;Total ram usage:        7 bytes
  6218 ;; Hardware stack levels used:    1
  6219 ;; Hardware stack levels required when called:   14
  6220 ;; This function calls:
  6221 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6222 ;; This function is called by:
  6223 ;;		_USBCheckStdRequest
  6224 ;; This function uses a non-reentrant model
  6225 ;;
  6226                           
  6227                           
  6228                           ;psect for function _USBStdFeatureReqHandler
  6229  007B                     _USBStdFeatureReqHandler:	
  6230                           
  6231                           ;usb_device.c: 2756: BDT_ENTRY *p;
  6232                           ;usb_device.c: 2757: EP_STATUS current_ep_data;
  6233                           ;usb_device.c: 2761: unsigned char* pUEP;
  6234                           ;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&
  6235                           ;usb_device.c: 2800: (SetupPkt.Recipient == (0x00)))
  6236                           
  6237                           ;incstack = 0
  6238 ;; hardware stack exceeded
  6239                           ; Regs used in _USBStdFeatureReqHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6240  007B  0020               	movlb	0	; select bank0
  6241  007C  0352               	decf	82,w	;volatile
  6242  007D  1D03               	btfss	3,2
  6243  007E  2894               	goto	l7672
  6244  007F  0850               	movf	80,w	;volatile
  6245  0080  391F               	andlw	31
  6246  0081  3A00               	xorlw	0
  6247  0082  1D03               	skipz
  6248  0083  2894               	goto	l7672
  6249                           
  6250                           ;usb_device.c: 2801: {
  6251                           ;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
  6252  0084  0021               	movlb	1	; select bank1
  6253  0085  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  6254                           
  6255                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
  6256  0086  3003               	movlw	3
  6257  0087  0020               	movlb	0	; select bank0
  6258  0088  0651               	xorwf	81,w	;volatile
  6259  0089  1D03               	btfss	3,2
  6260  008A  2892               	goto	l7670
  6261                           
  6262                           ;usb_device.c: 2804: RemoteWakeup = 1;
  6263  008B  3001               	movlw	1
  6264  008C  0021               	movlb	1	; select bank1
  6265  008D  00BA               	movwf	??_USBStdFeatureReqHandler^(0+128)
  6266  008E  083A               	movf	??_USBStdFeatureReqHandler^(0+128),w
  6267  008F  0023               	movlb	3	; select bank3
  6268  0090  00E0               	movwf	_RemoteWakeup^(0+384)	;volatile
  6269  0091  2894               	goto	l7672
  6270  0092                     l7670:	
  6271                           
  6272                           ;usb_device.c: 2805: else
  6273                           ;usb_device.c: 2806: RemoteWakeup = 0;
  6274  0092  0023               	movlb	3	; select bank3
  6275  0093  01E0               	clrf	_RemoteWakeup^(0+384)	;volatile
  6276  0094                     l7672:	
  6277                           
  6278                           ;usb_device.c: 2807: }
  6279                           ;usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&
  6280                           ;usb_device.c: 2811: (SetupPkt.Recipient == (0x02))&&
  6281                           ;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
  6282                           ;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
  6283  0094  0020               	movlb	0	; select bank0
  6284  0095  0852               	movf	82,w	;volatile
  6285  0096  1D03               	btfss	3,2
  6286  0097  0008               	return
  6287  0098  0850               	movf	80,w	;volatile
  6288  0099  391F               	andlw	31
  6289  009A  3A02               	xorlw	2
  6290  009B  1D03               	skipz
  6291  009C  0008               	return
  6292  009D  0854               	movf	84,w	;volatile
  6293  009E  390F               	andlw	15
  6294  009F  3A00               	xorlw	0
  6295  00A0  1903               	skipnz
  6296  00A1  0008               	return
  6297  00A2  0854               	movf	84,w	;volatile
  6298  00A3  390F               	andlw	15
  6299  00A4  0021               	movlb	1	; select bank1
  6300  00A5  00BA               	movwf	??_USBStdFeatureReqHandler^(0+128)
  6301  00A6  3003               	movlw	3
  6302  00A7  023A               	subwf	??_USBStdFeatureReqHandler^(0+128),w
  6303  00A8  1803               	skipnc
  6304  00A9  0008               	return
  6305  00AA  3020               	movlw	32
  6306  00AB  0023               	movlb	3	; select bank3
  6307  00AC  0665               	xorwf	_USBDeviceState^(0+384),w	;volatile
  6308  00AD  1D03               	btfss	3,2
  6309  00AE  0008               	return
  6310                           
  6311                           ;usb_device.c: 2814: {
  6312                           ;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
  6313  00AF  0021               	movlb	1	; select bank1
  6314  00B0  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  6315                           
  6316                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
  6317  00B1  0020               	movlb	0	; select bank0
  6318  00B2  1BD4               	btfsc	84,7	;volatile
  6319  00B3  28C5               	goto	l7686
  6320                           
  6321                           ;usb_device.c: 2821: {
  6322                           ;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  6323  00B4  0854               	movf	84,w	;volatile
  6324  00B5  390F               	andlw	15
  6325  00B6  0709               	addwf	9,w
  6326  00B7  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  6327  00B8  0086               	movwf	6
  6328  00B9  3001               	movlw	1	; select bank3/4
  6329  00BA  0087               	movwf	7
  6330  00BB  3F40               	moviw [0]fsr1
  6331  00BC  0021               	movlb	1	; select bank1
  6332  00BD  00BF               	movwf	USBStdFeatureReqHandler@p^(0+128)
  6333  00BE  3F41               	moviw [1]fsr1
  6334  00BF  00C0               	movwf	(USBStdFeatureReqHandler@p+1)^(0+128)
  6335                           
  6336                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  6337  00C0  0020               	movlb	0	; select bank0
  6338  00C1  0854               	movf	84,w	;volatile
  6339  00C2  390F               	andlw	15
  6340  00C3  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  6341  00C4  28D6               	goto	L3
  6342  00C5                     l7686:	
  6343                           ;usb_device.c: 2824: }
  6344                           
  6345                           
  6346                           ;usb_device.c: 2825: else
  6347                           ;usb_device.c: 2826: {
  6348                           ;usb_device.c: 2827: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  6349  00C5  0020               	movlb	0	; select bank0
  6350  00C6  0854               	movf	84,w	;volatile
  6351  00C7  390F               	andlw	15
  6352  00C8  0709               	addwf	9,w
  6353  00C9  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  6354  00CA  0086               	movwf	6
  6355  00CB  3001               	movlw	1	; select bank3/4
  6356  00CC  0087               	movwf	7
  6357  00CD  3F40               	moviw [0]fsr1
  6358  00CE  0021               	movlb	1	; select bank1
  6359  00CF  00BF               	movwf	USBStdFeatureReqHandler@p^(0+128)
  6360  00D0  3F41               	moviw [1]fsr1
  6361  00D1  00C0               	movwf	(USBStdFeatureReqHandler@p+1)^(0+128)
  6362                           
  6363                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  6364  00D2  0020               	movlb	0	; select bank0
  6365  00D3  0854               	movf	84,w	;volatile
  6366  00D4  390F               	andlw	15
  6367  00D5  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  6368  00D6                     L3:	
  6369  00D6  0086               	movwf	6
  6370  00D7  3001               	movlw	1	; select bank3/4
  6371  00D8  0087               	movwf	7
  6372  00D9  0801               	movf	1,w
  6373  00DA  0021               	movlb	1	; select bank1
  6374  00DB  00BA               	movwf	??_USBStdFeatureReqHandler^(0+128)
  6375  00DC  083A               	movf	??_USBStdFeatureReqHandler^(0+128),w
  6376  00DD  00BE               	movwf	USBStdFeatureReqHandler@current_ep_data^(0+128)
  6377                           
  6378                           ;usb_device.c: 2829: }
  6379                           ;usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
  6380  00DE  183E               	btfsc	USBStdFeatureReqHandler@current_ep_data^(0+128),0
  6381  00DF  28EA               	goto	l7692
  6382                           
  6383                           ;usb_device.c: 2836: {
  6384                           ;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
  6385  00E0  30FB               	movlw	251
  6386  00E1  00BA               	movwf	??_USBStdFeatureReqHandler^(0+128)
  6387  00E2  30FF               	movlw	255
  6388  00E3  00BB               	movwf	(??_USBStdFeatureReqHandler^(0+128)+1)
  6389  00E4  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6390  00E5  053A               	andwf	??_USBStdFeatureReqHandler^(0+128),w
  6391  00E6  00BF               	movwf	USBStdFeatureReqHandler@p^(0+128)
  6392  00E7  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6393  00E8  053B               	andwf	(??_USBStdFeatureReqHandler+1)^(0+128),w
  6394  00E9  28EF               	goto	L4
  6395  00EA                     l7692:	
  6396                           ;usb_device.c: 2838: }
  6397                           
  6398                           
  6399                           ;usb_device.c: 2839: else
  6400                           ;usb_device.c: 2840: {
  6401                           ;usb_device.c: 2841: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
  6402  00EA  3004               	movlw	4
  6403  00EB  043F               	iorwf	USBStdFeatureReqHandler@p^(0+128),w
  6404  00EC  00BF               	movwf	USBStdFeatureReqHandler@p^(0+128)
  6405  00ED  3000               	movlw	0
  6406  00EE  0440               	iorwf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6407  00EF                     L4:	
  6408  00EF  00C0               	movwf	(USBStdFeatureReqHandler@p+1)^(0+128)
  6409                           
  6410                           ;usb_device.c: 2842: }
  6411                           ;usb_device.c: 2847: if(SetupPkt.EPDir == 0)
  6412  00F0  0020               	movlb	0	; select bank0
  6413  00F1  1BD4               	btfsc	84,7	;volatile
  6414  00F2  2900               	goto	l7698
  6415                           
  6416                           ;usb_device.c: 2848: {
  6417                           ;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  6418  00F3  0854               	movf	84,w	;volatile
  6419  00F4  390F               	andlw	15
  6420  00F5  0709               	addwf	9,w
  6421  00F6  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  6422  00F7  0086               	movwf	6
  6423  00F8  3001               	movlw	1	; select bank3/4
  6424  00F9  0087               	movwf	7
  6425  00FA  0021               	movlb	1	; select bank1
  6426  00FB  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6427  00FC  3FC0               	movwi [0]fsr1
  6428  00FD  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6429  00FE  3FC1               	movwi [1]fsr1
  6430                           
  6431                           ;usb_device.c: 2850: }
  6432  00FF  290D               	goto	l7700
  6433  0100                     l7698:	
  6434                           
  6435                           ;usb_device.c: 2851: else
  6436                           ;usb_device.c: 2852: {
  6437                           ;usb_device.c: 2853: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  6438  0100  0020               	movlb	0	; select bank0
  6439  0101  0854               	movf	84,w	;volatile
  6440  0102  390F               	andlw	15
  6441  0103  0709               	addwf	9,w
  6442  0104  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  6443  0105  0086               	movwf	6
  6444  0106  3001               	movlw	1	; select bank3/4
  6445  0107  0087               	movwf	7
  6446  0108  0021               	movlb	1	; select bank1
  6447  0109  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6448  010A  3FC0               	movwi [0]fsr1
  6449  010B  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6450  010C  3FC1               	movwi [1]fsr1
  6451  010D                     l7700:	
  6452                           
  6453                           ;usb_device.c: 2854: }
  6454                           ;usb_device.c: 2857: if(SetupPkt.bRequest == 3)
  6455  010D  3003               	movlw	3
  6456  010E  0020               	movlb	0	; select bank0
  6457  010F  0651               	xorwf	81,w	;volatile
  6458  0110  1D03               	btfss	3,2
  6459  0111  2933               	goto	l7714
  6460                           
  6461                           ;usb_device.c: 2858: {
  6462                           ;usb_device.c: 2859: if(p->STAT.UOWN == 1)
  6463  0112  0021               	movlb	1	; select bank1
  6464  0113  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6465  0114  0086               	movwf	6
  6466  0115  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6467  0116  0087               	movwf	7
  6468  0117  1F81               	btfss	1,7
  6469  0118  2927               	goto	l7710
  6470                           
  6471                           ;usb_device.c: 2860: {
  6472                           ;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
  6473  0119  0020               	movlb	0	; select bank0
  6474  011A  1BD4               	btfsc	84,7	;volatile
  6475  011B  2920               	goto	l7708
  6476                           
  6477                           ;usb_device.c: 2864: {
  6478                           ;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  6479  011C  0854               	movf	84,w	;volatile
  6480  011D  390F               	andlw	15
  6481  011E  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  6482  011F  2923               	goto	L5
  6483  0120                     l7708:	
  6484                           ;usb_device.c: 2866: }
  6485                           
  6486                           
  6487                           ;usb_device.c: 2867: else
  6488                           ;usb_device.c: 2868: {
  6489                           ;usb_device.c: 2869: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  6490  0120  0854               	movf	84,w	;volatile
  6491  0121  390F               	andlw	15
  6492  0122  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  6493  0123                     L5:	
  6494  0123  0086               	movwf	6
  6495  0124  3001               	movlw	1	; select bank3/4
  6496  0125  0087               	movwf	7
  6497  0126  1481               	bsf	1,1
  6498  0127                     l7710:	
  6499                           
  6500                           ;usb_device.c: 2870: }
  6501                           ;usb_device.c: 2871: }
  6502                           ;usb_device.c: 2874: p->STAT.Val |= 0x04;
  6503  0127  0021               	movlb	1	; select bank1
  6504  0128  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6505  0129  0086               	movwf	6
  6506  012A  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6507  012B  0087               	movwf	7
  6508  012C  1501               	bsf	1,2
  6509                           
  6510                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
  6511  012D  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6512  012E  0086               	movwf	6
  6513  012F  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6514  0130  0087               	movwf	7
  6515  0131  1781               	bsf	1,7
  6516                           
  6517                           ;usb_device.c: 2876: }
  6518  0132  0008               	return
  6519  0133                     l7714:	
  6520                           
  6521                           ;usb_device.c: 2877: else
  6522                           ;usb_device.c: 2878: {
  6523                           ;usb_device.c: 2882: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  6524  0133  3004               	movlw	4
  6525  0134  0021               	movlb	1	; select bank1
  6526  0135  063F               	xorwf	USBStdFeatureReqHandler@p^(0+128),w
  6527  0136  00BF               	movwf	USBStdFeatureReqHandler@p^(0+128)
  6528  0137  3000               	movlw	0
  6529  0138  0640               	xorwf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6530  0139  00C0               	movwf	(USBStdFeatureReqHandler@p+1)^(0+128)
  6531                           
  6532                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
  6533  013A  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6534  013B  0086               	movwf	6
  6535  013C  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6536  013D  0087               	movwf	7
  6537  013E  1F81               	btfss	1,7
  6538  013F  295D               	goto	l7724
  6539                           
  6540                           ;usb_device.c: 2885: {
  6541                           ;usb_device.c: 2888: p->STAT.Val &= (~0x80);
  6542  0140  307F               	movlw	127
  6543  0141  00BA               	movwf	??_USBStdFeatureReqHandler^(0+128)
  6544  0142  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6545  0143  0086               	movwf	6
  6546  0144  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6547  0145  0087               	movwf	7
  6548  0146  083A               	movf	??_USBStdFeatureReqHandler^(0+128),w
  6549  0147  0581               	andwf	1,f
  6550                           
  6551                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
  6552  0148  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6553  0149  0086               	movwf	6
  6554  014A  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6555  014B  0087               	movwf	7
  6556  014C  1701               	bsf	1,6
  6557                           
  6558                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  6559  014D  3000               	movlw	0
  6560  014E  00B5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
  6561  014F  3005               	movlw	5
  6562  0150  00B4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  6563  0151  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6564  0152  00B7               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  6565  0153  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6566  0154  00B6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  6567  0155  3002               	movlw	2
  6568  0156  00B8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  6569  0157  3000               	movlw	0
  6570  0158  00B9               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)+1)
  6571  0159  3191  2145  3180   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6572                           
  6573                           ;usb_device.c: 2891: }
  6574  015C  2963               	goto	l7726
  6575  015D                     l7724:	
  6576                           
  6577                           ;usb_device.c: 2892: else
  6578                           ;usb_device.c: 2893: {
  6579                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
  6580  015D  0021               	movlb	1	; select bank1
  6581  015E  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6582  015F  0086               	movwf	6
  6583  0160  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6584  0161  0087               	movwf	7
  6585  0162  1701               	bsf	1,6
  6586  0163                     l7726:	
  6587                           
  6588                           ;usb_device.c: 2896: }
  6589                           ;usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  6590  0163  3004               	movlw	4
  6591  0164  0021               	movlb	1	; select bank1
  6592  0165  063F               	xorwf	USBStdFeatureReqHandler@p^(0+128),w
  6593  0166  00BF               	movwf	USBStdFeatureReqHandler@p^(0+128)
  6594  0167  3000               	movlw	0
  6595  0168  0640               	xorwf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6596  0169  00C0               	movwf	(USBStdFeatureReqHandler@p+1)^(0+128)
  6597                           
  6598                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  6599  016A  18BE               	btfsc	USBStdFeatureReqHandler@current_ep_data^(0+128),1
  6600  016B  2972               	goto	l626
  6601  016C  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6602  016D  0086               	movwf	6
  6603  016E  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6604  016F  0087               	movwf	7
  6605  0170  1F81               	btfss	1,7
  6606  0171  2999               	goto	l7738
  6607  0172                     l626:	
  6608                           
  6609                           ;usb_device.c: 2907: {
  6610                           ;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
  6611  0172  0020               	movlb	0	; select bank0
  6612  0173  1BD4               	btfsc	84,7	;volatile
  6613  0174  2979               	goto	l7734
  6614                           
  6615                           ;usb_device.c: 2909: {
  6616                           ;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  6617  0175  0854               	movf	84,w	;volatile
  6618  0176  390F               	andlw	15
  6619  0177  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  6620  0178  297C               	goto	L6
  6621  0179                     l7734:	
  6622                           ;usb_device.c: 2911: }
  6623                           
  6624                           
  6625                           ;usb_device.c: 2912: else
  6626                           ;usb_device.c: 2913: {
  6627                           ;usb_device.c: 2914: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  6628  0179  0854               	movf	84,w	;volatile
  6629  017A  390F               	andlw	15
  6630  017B  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  6631  017C                     L6:	
  6632  017C  0086               	movwf	6
  6633  017D  3001               	movlw	1	; select bank3/4
  6634  017E  0087               	movwf	7
  6635  017F  1081               	bcf	1,1
  6636                           
  6637                           ;usb_device.c: 2915: }
  6638                           ;usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  6639  0180  303B               	movlw	59
  6640  0181  0021               	movlb	1	; select bank1
  6641  0182  00BA               	movwf	??_USBStdFeatureReqHandler^(0+128)
  6642  0183  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6643  0184  0086               	movwf	6
  6644  0185  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6645  0186  0087               	movwf	7
  6646  0187  083A               	movf	??_USBStdFeatureReqHandler^(0+128),w
  6647  0188  0581               	andwf	1,f
  6648                           
  6649                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  6650  0189  3000               	movlw	0
  6651  018A  00B5               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128)
  6652  018B  3005               	movlw	5
  6653  018C  00B4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128)
  6654  018D  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6655  018E  00B7               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^(0+128)
  6656  018F  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6657  0190  00B6               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^(0+128)
  6658  0191  3002               	movlw	2
  6659  0192  00B8               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)
  6660  0193  3000               	movlw	0
  6661  0194  00B9               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size^(0+128)+1)
  6662  0195  3191  2145  3180   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6663                           
  6664                           ;usb_device.c: 2921: }
  6665  0198  29A2               	goto	l7740
  6666  0199                     l7738:	
  6667                           
  6668                           ;usb_device.c: 2922: else
  6669                           ;usb_device.c: 2923: {
  6670                           ;usb_device.c: 2925: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  6671  0199  303B               	movlw	59
  6672  019A  0021               	movlb	1	; select bank1
  6673  019B  00BA               	movwf	??_USBStdFeatureReqHandler^(0+128)
  6674  019C  083F               	movf	USBStdFeatureReqHandler@p^(0+128),w
  6675  019D  0086               	movwf	6
  6676  019E  0840               	movf	(USBStdFeatureReqHandler@p+1)^(0+128),w
  6677  019F  0087               	movwf	7
  6678  01A0  083A               	movf	??_USBStdFeatureReqHandler^(0+128),w
  6679  01A1  0581               	andwf	1,f
  6680  01A2                     l7740:	
  6681                           
  6682                           ;usb_device.c: 2926: }
  6683                           ;usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  6684  01A2  0020               	movlb	0	; select bank0
  6685  01A3  0854               	movf	84,w	;volatile
  6686  01A4  390F               	andlw	15
  6687  01A5  3E98               	addlw	152
  6688  01A6  0021               	movlb	1	; select bank1
  6689  01A7  00BA               	movwf	??_USBStdFeatureReqHandler^(0+128)
  6690  01A8  01BB               	clrf	(??_USBStdFeatureReqHandler^(0+128)+1)
  6691  01A9  300E               	movlw	14
  6692  01AA  3DBB               	addwfc	(??_USBStdFeatureReqHandler^(0+128)+1),f
  6693  01AB  083A               	movf	??_USBStdFeatureReqHandler^(0+128),w
  6694  01AC  00BC               	movwf	USBStdFeatureReqHandler@pUEP^(0+128)
  6695  01AD  083B               	movf	(??_USBStdFeatureReqHandler+1)^(0+128),w
  6696  01AE  00BD               	movwf	(USBStdFeatureReqHandler@pUEP+1)^(0+128)
  6697                           
  6698                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
  6699  01AF  30FE               	movlw	254
  6700  01B0  00BA               	movwf	??_USBStdFeatureReqHandler^(0+128)
  6701  01B1  083C               	movf	USBStdFeatureReqHandler@pUEP^(0+128),w
  6702  01B2  0086               	movwf	6
  6703  01B3  083D               	movf	(USBStdFeatureReqHandler@pUEP+1)^(0+128),w
  6704  01B4  0087               	movwf	7
  6705  01B5  083A               	movf	??_USBStdFeatureReqHandler^(0+128),w
  6706  01B6  0581               	andwf	1,f
  6707  01B7  0008               	return
  6708  01B8                     __end_of_USBStdFeatureReqHandler:	
  6709                           
  6710                           	psect	text22
  6711  1145                     __ptext22:	
  6712 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  6713 ;; Defined at:
  6714 ;;		line 49 in file "mcc_generated_files/usb/usb_device_events.c"
  6715 ;; Parameters:    Size  Location     Type
  6716 ;;  event           2   20[BANK1 ] enum E40
  6717 ;;  pdata           2   22[BANK1 ] PTR void 
  6718 ;;		 -> RAM(4096), USTATcopy(1), USBActiveConfiguration(1), BDT(48), 
  6719 ;;		 -> NULL(0), 
  6720 ;;  size            2   24[BANK1 ] unsigned int 
  6721 ;; Auto vars:     Size  Location     Type
  6722 ;;		None
  6723 ;; Return value:  Size  Location     Type
  6724 ;;                  1    wreg      unsigned char 
  6725 ;; Registers used:
  6726 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6727 ;; Tracked objects:
  6728 ;;		On entry : 0/0
  6729 ;;		On exit  : 0/0
  6730 ;;		Unchanged: 0/0
  6731 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6732 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  6733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6735 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  6736 ;;Total ram usage:        6 bytes
  6737 ;; Hardware stack levels used:    1
  6738 ;; Hardware stack levels required when called:   13
  6739 ;; This function calls:
  6740 ;;		_CDCInitEP
  6741 ;;		_USBCheckCDCRequest
  6742 ;; This function is called by:
  6743 ;;		_USBDeviceTasks
  6744 ;;		_USBStdSetCfgHandler
  6745 ;;		_USBSuspend
  6746 ;;		_USBWakeFromSuspend
  6747 ;;		_USBCtrlTrfSetupHandler
  6748 ;;		_USBCheckStdRequest
  6749 ;;		_USBStdFeatureReqHandler
  6750 ;; This function uses a non-reentrant model
  6751 ;;
  6752                           
  6753                           
  6754                           ;psect for function _USER_USB_CALLBACK_EVENT_HANDLER
  6755  1145                     _USER_USB_CALLBACK_EVENT_HANDLER:	
  6756                           
  6757                           ;usb_device_events.c: 51: switch( (int) event )
  6758                           
  6759                           ;incstack = 0
  6760                           ; Regs used in _USER_USB_CALLBACK_EVENT_HANDLER: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  6761  1145  294C               	goto	l7430
  6762  1146                     l7424:	
  6763                           ;usb_device_events.c: 75: case EVENT_CONFIGURED:
  6764                           
  6765                           ;usb_device_events.c: 73: break;
  6766                           
  6767                           ;usb_device_events.c: 68: case EVENT_RESUME:
  6768                           
  6769                           ;usb_device_events.c: 66: break;
  6770                           
  6771                           ;usb_device_events.c: 59: case EVENT_SUSPEND:
  6772                           
  6773                           ;usb_device_events.c: 57: break;
  6774                           
  6775                           ;usb_device_events.c: 56: case EVENT_SOF:
  6776                           
  6777                           ;usb_device_events.c: 54: break;
  6778                           
  6779                           ;usb_device_events.c: 52: {
  6780                           ;usb_device_events.c: 53: case EVENT_TRANSFER:
  6781                           
  6782                           
  6783                           ;usb_device_events.c: 76: CDCInitEP();
  6784  1146  3192  224F         	fcall	_CDCInitEP
  6785                           
  6786                           ;usb_device_events.c: 80: break;
  6787                           
  6788                           ;usb_device_events.c: 79: case EVENT_SET_DESCRIPTOR:
  6789                           
  6790                           ;usb_device_events.c: 77: break;
  6791  1148  0008               	return
  6792  1149                     l7426:	
  6793                           ;usb_device_events.c: 82: case EVENT_EP0_REQUEST:
  6794                           
  6795                           
  6796                           ;usb_device_events.c: 85: USBCheckCDCRequest();
  6797  1149  3188  2070         	fcall	_USBCheckCDCRequest
  6798                           
  6799                           ;usb_device_events.c: 96: }
  6800                           
  6801                           ;usb_device_events.c: 95: break;
  6802                           
  6803                           ;usb_device_events.c: 94: default:
  6804                           
  6805                           ;usb_device_events.c: 92: break;
  6806                           
  6807                           ;usb_device_events.c: 91: case EVENT_TRANSFER_TERMINATED:
  6808                           
  6809                           ;usb_device_events.c: 89: break;
  6810                           
  6811                           ;usb_device_events.c: 88: case EVENT_BUS_ERROR:
  6812                           
  6813                           ;usb_device_events.c: 86: break;
  6814  114B  0008               	return
  6815  114C                     l7430:	
  6816                           
  6817                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  6818                           ; Switch size 1, requested type "space"
  6819                           ; Number of cases is 2, Range of values is 0 to 127
  6820                           ; switch strategies available:
  6821                           ; Name         Instructions Cycles
  6822                           ; simple_byte            7     4 (average)
  6823                           ; direct_byte          262     6 (fixed)
  6824                           ; jumptable            260     6 (fixed)
  6825                           ;	Chosen strategy is simple_byte
  6826  114C  0021               	movlb	1	; select bank1
  6827  114D  0835               	movf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128),w
  6828  114E  3A00               	xorlw	0	; case 0
  6829  114F  1903               	skipnz
  6830  1150  2955               	goto	l8484
  6831  1151  3A7F               	xorlw	127	; case 127
  6832  1152  1903               	skipnz
  6833  1153  296F               	goto	l8486
  6834  1154  2974               	goto	l242
  6835  1155                     l8484:	
  6836                           
  6837                           ; Switch size 1, requested type "space"
  6838                           ; Number of cases is 8, Range of values is 1 to 117
  6839                           ; switch strategies available:
  6840                           ; Name         Instructions Cycles
  6841                           ; simple_byte           25    13 (average)
  6842                           ; direct_byte          243     9 (fixed)
  6843                           ; jumptable            263     9 (fixed)
  6844                           ;	Chosen strategy is simple_byte
  6845  1155  0834               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128),w
  6846  1156  3A01               	xorlw	1	; case 1
  6847  1157  1903               	skipnz
  6848  1158  2946               	goto	l7424
  6849  1159  3A03               	xorlw	3	; case 2
  6850  115A  1903               	skipnz
  6851  115B  2974               	goto	l242
  6852  115C  3A01               	xorlw	1	; case 3
  6853  115D  1903               	skipnz
  6854  115E  2949               	goto	l7426
  6855  115F  3A06               	xorlw	6	; case 5
  6856  1160  1903               	skipnz
  6857  1161  2974               	goto	l242
  6858  1162  3A77               	xorlw	119	; case 114
  6859  1163  1903               	skipnz
  6860  1164  2974               	goto	l242
  6861  1165  3A01               	xorlw	1	; case 115
  6862  1166  1903               	skipnz
  6863  1167  2974               	goto	l242
  6864  1168  3A07               	xorlw	7	; case 116
  6865  1169  1903               	skipnz
  6866  116A  2974               	goto	l242
  6867  116B  3A01               	xorlw	1	; case 117
  6868  116C  1903               	skipnz
  6869  116D  2974               	goto	l242
  6870  116E  2974               	goto	l242
  6871  116F                     l8486:	
  6872                           
  6873                           ; Switch size 1, requested type "space"
  6874                           ; Number of cases is 1, Range of values is 255 to 255
  6875                           ; switch strategies available:
  6876                           ; Name         Instructions Cycles
  6877                           ; simple_byte            4     3 (average)
  6878                           ; direct_byte            7     5 (fixed)
  6879                           ; jumptable            263     9 (fixed)
  6880                           ;	Chosen strategy is simple_byte
  6881  116F  0834               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128),w
  6882  1170  3AFF               	xorlw	255	; case 255
  6883  1171  1903               	skipnz
  6884  1172  2974               	goto	l242
  6885  1173  2974               	goto	l242
  6886  1174                     l242:	
  6887                           ;usb_device_events.c: 97: return 1;
  6888                           ;	Return value of _USER_USB_CALLBACK_EVENT_HANDLER is never used
  6889                           
  6890  1174  0008               	return
  6891  1175                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:	
  6892                           
  6893                           	psect	text23
  6894  0870                     __ptext23:	
  6895 ;; *************** function _USBCheckCDCRequest *****************
  6896 ;; Defined at:
  6897 ;;		line 146 in file "mcc_generated_files/usb/usb_device_cdc.c"
  6898 ;; Parameters:    Size  Location     Type
  6899 ;;		None
  6900 ;; Auto vars:     Size  Location     Type
  6901 ;;		None
  6902 ;; Return value:  Size  Location     Type
  6903 ;;                  1    wreg      void 
  6904 ;; Registers used:
  6905 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6906 ;; Tracked objects:
  6907 ;;		On entry : 0/0
  6908 ;;		On exit  : 0/0
  6909 ;;		Unchanged: 0/0
  6910 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6913 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6914 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6915 ;;Total ram usage:        1 bytes
  6916 ;; Hardware stack levels used:    1
  6917 ;; Hardware stack levels required when called:   10
  6918 ;; This function calls:
  6919 ;;		Nothing
  6920 ;; This function is called by:
  6921 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6922 ;; This function uses a non-reentrant model
  6923 ;;
  6924                           
  6925                           
  6926                           ;psect for function _USBCheckCDCRequest
  6927  0870                     _USBCheckCDCRequest:	
  6928                           
  6929                           ;usb_device_cdc.c: 151: if(SetupPkt.Recipient != (0x01)) return;
  6930                           
  6931                           ;incstack = 0
  6932                           ; Regs used in _USBCheckCDCRequest: [wreg-fsr0h+status,2+status,0]
  6933  0870  0020               	movlb	0	; select bank0
  6934  0871  0850               	movf	80,w	;volatile
  6935  0872  391F               	andlw	31
  6936  0873  3A01               	xorlw	1
  6937  0874  1D03               	btfss	3,2
  6938  0875  0008               	return
  6939                           
  6940                           ;usb_device_cdc.c: 156: if(SetupPkt.RequestType != (0x20>>5)) return;
  6941  0876  0E50               	swapf	80,w	;volatile
  6942  0877  0C89               	rrf	9,f
  6943  0878  3903               	andlw	3
  6944  0879  3A01               	xorlw	1
  6945  087A  1D03               	btfss	3,2
  6946  087B  0008               	return
  6947                           
  6948                           ;usb_device_cdc.c: 162: if((SetupPkt.bIntfID != 0x0)&&
  6949                           ;usb_device_cdc.c: 163: (SetupPkt.bIntfID != 0x01)) return;
  6950  087C  0854               	movf	84,w	;volatile
  6951  087D  1903               	btfsc	3,2
  6952  087E  28C0               	goto	l7402
  6953  087F  0354               	decf	84,w	;volatile
  6954  0880  1D03               	btfss	3,2
  6955  0881  0008               	return
  6956  0882  28C0               	goto	l7402
  6957  0883                     l7372:	
  6958                           ;usb_device_cdc.c: 166: {
  6959                           ;usb_device_cdc.c: 168: case 0x00:
  6960                           
  6961                           ;usb_device_cdc.c: 165: switch(SetupPkt.bRequest)
  6962                           
  6963                           
  6964                           ;usb_device_cdc.c: 170: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  6965  0883  304F               	movlw	low _dummy_encapsulated_cmd_response
  6966  0884  0021               	movlb	1	; select bank1
  6967  0885  00C3               	movwf	_inPipes^(0+128)	;volatile
  6968  0886  3002               	movlw	high _dummy_encapsulated_cmd_response
  6969  0887  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
  6970                           
  6971                           ;usb_device_cdc.c: 171: inPipes[0].wCount.Val = 0x08;
  6972  0888  3000               	movlw	0
  6973  0889  00C7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  6974  088A  3008               	movlw	8
  6975  088B  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
  6976                           
  6977                           ;usb_device_cdc.c: 172: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6978  088C  1445               	bsf	(_inPipes^(0+128)+2),0	;volatile
  6979                           
  6980                           ;usb_device_cdc.c: 173: inPipes[0].info.bits.busy = 1;
  6981  088D  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  6982                           
  6983                           ;usb_device_cdc.c: 174: break;
  6984  088E  0008               	return
  6985  088F                     l7380:	
  6986                           ;usb_device_cdc.c: 175: case 0x01:
  6987                           
  6988                           
  6989                           ;usb_device_cdc.c: 177: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  6990  088F  304F               	movlw	low _dummy_encapsulated_cmd_response
  6991  0890  0021               	movlb	1	; select bank1
  6992  0891  00C3               	movwf	_inPipes^(0+128)	;volatile
  6993  0892  3002               	movlw	high _dummy_encapsulated_cmd_response
  6994  0893  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
  6995                           
  6996                           ;usb_device_cdc.c: 178: inPipes[0].info.bits.busy = 1;
  6997  0894  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  6998                           
  6999                           ;usb_device_cdc.c: 179: break;
  7000  0895  0008               	return
  7001  0896                     l7384:	
  7002                           ;usb_device_cdc.c: 183: case 0x20:
  7003                           
  7004                           
  7005                           ;usb_device_cdc.c: 184: outPipes[0].wCount.Val = SetupPkt.wLength;
  7006  0896  0020               	movlb	0	; select bank0
  7007  0897  0857               	movf	87,w	;volatile
  7008  0898  0023               	movlb	3	; select bank3
  7009  0899  00B4               	movwf	((_outPipes+1)^(0+384)+3)	;volatile
  7010  089A  0020               	movlb	0	; select bank0
  7011  089B  0856               	movf	86,w	;volatile
  7012  089C  0023               	movlb	3	; select bank3
  7013  089D  00B3               	movwf	(_outPipes^(0+384)+3)	;volatile
  7014                           
  7015                           ;usb_device_cdc.c: 185: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
  7016  089E  3057               	movlw	(low (_line_coding| (0+512)))& (0+255)
  7017  089F  0021               	movlb	1	; select bank1
  7018  08A0  00A6               	movwf	??_USBCheckCDCRequest^(0+128)
  7019  08A1  0826               	movf	??_USBCheckCDCRequest^(0+128),w
  7020  08A2  0023               	movlb	3	; select bank3
  7021  08A3  00B0               	movwf	_outPipes^(0+384)	;volatile
  7022                           
  7023                           ;usb_device_cdc.c: 186: outPipes[0].pFunc = (0);
  7024  08A4  01B5               	clrf	(low ((_outPipes| (0+256)+5)))^(0+128)	;volatile
  7025  08A5  01B6               	clrf	((low ((_outPipes| (0+256)+5))+1))^(0+128)	;volatile
  7026                           
  7027                           ;usb_device_cdc.c: 187: outPipes[0].info.bits.busy = 1;
  7028  08A6  17B2               	bsf	(_outPipes^(0+384)+2),7	;volatile
  7029                           
  7030                           ;usb_device_cdc.c: 188: break;
  7031  08A7  0008               	return
  7032  08A8                     l7390:	
  7033                           ;usb_device_cdc.c: 190: case 0x21:
  7034                           
  7035                           
  7036                           ;usb_device_cdc.c: 191: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  7037  08A8  3057               	movlw	low _line_coding
  7038  08A9  0021               	movlb	1	; select bank1
  7039  08AA  00C3               	movwf	_inPipes^(0+128)	;volatile
  7040  08AB  3002               	movlw	high _line_coding
  7041  08AC  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
  7042  08AD  3000               	movlw	0
  7043  08AE  00C7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  7044  08AF  3007               	movlw	7
  7045  08B0  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
  7046  08B1  30C1               	movlw	193
  7047  08B2  00A6               	movwf	??_USBCheckCDCRequest^(0+128)
  7048  08B3  0826               	movf	??_USBCheckCDCRequest^(0+128),w
  7049  08B4  00C5               	movwf	(_inPipes^(0+128)+2)	;volatile
  7050                           
  7051                           ;usb_device_cdc.c: 195: break;
  7052  08B5  0008               	return
  7053  08B6                     l7396:	
  7054                           ;usb_device_cdc.c: 197: case 0x22:
  7055                           
  7056                           
  7057                           ;usb_device_cdc.c: 198: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
  7058  08B6  0020               	movlb	0	; select bank0
  7059  08B7  0852               	movf	82,w	;volatile
  7060  08B8  0021               	movlb	1	; select bank1
  7061  08B9  00A6               	movwf	??_USBCheckCDCRequest^(0+128)
  7062  08BA  0826               	movf	??_USBCheckCDCRequest^(0+128),w
  7063  08BB  0023               	movlb	3	; select bank3
  7064  08BC  00E6               	movwf	_control_signal_bitmap^(0+384)
  7065                           
  7066                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.busy = 1;
  7067  08BD  0021               	movlb	1	; select bank1
  7068  08BE  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
  7069                           
  7070                           ;usb_device_cdc.c: 257: }
  7071                           
  7072                           ;usb_device_cdc.c: 256: break;
  7073                           
  7074                           ;usb_device_cdc.c: 255: default:
  7075                           
  7076                           ;usb_device_cdc.c: 231: break;
  7077  08BF  0008               	return
  7078  08C0                     l7402:	
  7079  08C0  0020               	movlb	0	; select bank0
  7080  08C1  0851               	movf	81,w	;volatile
  7081                           
  7082                           ; Switch size 1, requested type "space"
  7083                           ; Number of cases is 5, Range of values is 0 to 34
  7084                           ; switch strategies available:
  7085                           ; Name         Instructions Cycles
  7086                           ; simple_byte           16     9 (average)
  7087                           ; direct_byte           76     6 (fixed)
  7088                           ; jumptable            260     6 (fixed)
  7089                           ;	Chosen strategy is simple_byte
  7090  08C2  3A00               	xorlw	0	; case 0
  7091  08C3  1903               	skipnz
  7092  08C4  2883               	goto	l7372
  7093  08C5  3A01               	xorlw	1	; case 1
  7094  08C6  1903               	skipnz
  7095  08C7  288F               	goto	l7380
  7096  08C8  3A21               	xorlw	33	; case 32
  7097  08C9  1903               	skipnz
  7098  08CA  2896               	goto	l7384
  7099  08CB  3A01               	xorlw	1	; case 33
  7100  08CC  1903               	skipnz
  7101  08CD  28A8               	goto	l7390
  7102  08CE  3A03               	xorlw	3	; case 34
  7103  08CF  1903               	skipnz
  7104  08D0  28B6               	goto	l7396
  7105  08D1  28D2               	goto	l137
  7106  08D2                     l137:	
  7107  08D2  0008               	return
  7108  08D3                     __end_of_USBCheckCDCRequest:	
  7109                           
  7110                           	psect	text24
  7111  124F                     __ptext24:	
  7112 ;; *************** function _CDCInitEP *****************
  7113 ;; Defined at:
  7114 ;;		line 293 in file "mcc_generated_files/usb/usb_device_cdc.c"
  7115 ;; Parameters:    Size  Location     Type
  7116 ;;		None
  7117 ;; Auto vars:     Size  Location     Type
  7118 ;;		None
  7119 ;; Return value:  Size  Location     Type
  7120 ;;                  1    wreg      void 
  7121 ;; Registers used:
  7122 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7123 ;; Tracked objects:
  7124 ;;		On entry : 0/0
  7125 ;;		On exit  : 0/0
  7126 ;;		Unchanged: 0/0
  7127 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7130 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7131 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7132 ;;Total ram usage:        1 bytes
  7133 ;; Hardware stack levels used:    1
  7134 ;; Hardware stack levels required when called:   12
  7135 ;; This function calls:
  7136 ;;		_USBEnableEndpoint
  7137 ;;		_USBTransferOnePacket
  7138 ;; This function is called by:
  7139 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7140 ;;		_main
  7141 ;; This function uses a non-reentrant model
  7142 ;;
  7143                           
  7144                           
  7145                           ;psect for function _CDCInitEP
  7146  124F                     _CDCInitEP:	
  7147                           
  7148                           ;usb_device_cdc.c: 296: line_coding.dwDTERate = 19200;
  7149                           
  7150                           ;incstack = 0
  7151                           ; Regs used in _CDCInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7152  124F  3000               	movlw	0
  7153  1250  0024               	movlb	4	; select bank4
  7154  1251  00DA               	movwf	(_line_coding+3)^(0+512)
  7155  1252  3000               	movlw	0
  7156  1253  00D9               	movwf	(_line_coding+2)^(0+512)
  7157  1254  304B               	movlw	75
  7158  1255  00D8               	movwf	(_line_coding+1)^(0+512)
  7159  1256  3000               	movlw	0
  7160  1257  00D7               	movwf	_line_coding^(0+512)
  7161                           
  7162                           ;usb_device_cdc.c: 297: line_coding.bCharFormat = 0x00;
  7163  1258  01DB               	clrf	(_line_coding^(0+512)+4)
  7164                           
  7165                           ;usb_device_cdc.c: 298: line_coding.bParityType = 0x00;
  7166  1259  01DC               	clrf	(_line_coding^(0+512)+5)
  7167                           
  7168                           ;usb_device_cdc.c: 299: line_coding.bDataBits = 0x08;
  7169  125A  3008               	movlw	8
  7170  125B  0021               	movlb	1	; select bank1
  7171  125C  00B3               	movwf	??_CDCInitEP^(0+128)
  7172  125D  0833               	movf	??_CDCInitEP^(0+128),w
  7173  125E  0024               	movlb	4	; select bank4
  7174  125F  00DD               	movwf	(_line_coding^(0+512)+6)
  7175                           
  7176                           ;usb_device_cdc.c: 301: cdc_rx_len = 0;
  7177  1260  0023               	movlb	3	; select bank3
  7178  1261  01EA               	clrf	_cdc_rx_len^(0+384)
  7179                           
  7180                           ;usb_device_cdc.c: 314: USBEnableEndpoint(1,0x02|0x10|0x08);
  7181  1262  301A               	movlw	26
  7182  1263  0021               	movlb	1	; select bank1
  7183  1264  00B3               	movwf	??_CDCInitEP^(0+128)
  7184  1265  0833               	movf	??_CDCInitEP^(0+128),w
  7185  1266  00AD               	movwf	USBEnableEndpoint@options^(0+128)
  7186  1267  3001               	movlw	1
  7187  1268  3190  202C  3192   	fcall	_USBEnableEndpoint
  7188                           
  7189                           ;usb_device_cdc.c: 315: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
  7190  126B  301E               	movlw	30
  7191  126C  0021               	movlb	1	; select bank1
  7192  126D  00B3               	movwf	??_CDCInitEP^(0+128)
  7193  126E  0833               	movf	??_CDCInitEP^(0+128),w
  7194  126F  00AD               	movwf	USBEnableEndpoint@options^(0+128)
  7195  1270  3002               	movlw	2
  7196  1271  3190  202C  3192   	fcall	_USBEnableEndpoint
  7197                           
  7198                           ;usb_device_cdc.c: 317: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  7199  1274  0021               	movlb	1	; select bank1
  7200  1275  01A6               	clrf	USBTransferOnePacket@dir^(0+128)
  7201  1276  30C0               	movlw	192
  7202  1277  00A7               	movwf	USBTransferOnePacket@data^(0+128)
  7203  1278  3020               	movlw	32
  7204  1279  00A8               	movwf	(USBTransferOnePacket@data^(0+128)+1)
  7205  127A  3040               	movlw	64
  7206  127B  00B3               	movwf	??_CDCInitEP^(0+128)
  7207  127C  0833               	movf	??_CDCInitEP^(0+128),w
  7208  127D  00A9               	movwf	USBTransferOnePacket@len^(0+128)
  7209  127E  3002               	movlw	2
  7210  127F  318C  2495         	fcall	_USBTransferOnePacket
  7211  1281  0021               	movlb	1	; select bank1
  7212  1282  0827               	movf	(?_USBTransferOnePacket+1)^(0+128),w
  7213  1283  0023               	movlb	3	; select bank3
  7214  1284  00D0               	movwf	(_CDCDataOutHandle+1)^(0+384)
  7215  1285  0021               	movlb	1	; select bank1
  7216  1286  0826               	movf	?_USBTransferOnePacket^(0+128),w
  7217  1287  0023               	movlb	3	; select bank3
  7218  1288  00CF               	movwf	_CDCDataOutHandle^(0+384)
  7219                           
  7220                           ;usb_device_cdc.c: 318: CDCDataInHandle = (0);
  7221  1289  01CD               	clrf	_CDCDataInHandle^(0+384)
  7222  128A  01CE               	clrf	(_CDCDataInHandle+1)^(0+384)
  7223                           
  7224                           ;usb_device_cdc.c: 345: cdc_trf_state = 0;
  7225  128B  01E9               	clrf	_cdc_trf_state^(0+384)
  7226  128C  0008               	return
  7227  128D                     __end_of_CDCInitEP:	
  7228                           
  7229                           	psect	text25
  7230  102C                     __ptext25:	
  7231 ;; *************** function _USBEnableEndpoint *****************
  7232 ;; Defined at:
  7233 ;;		line 878 in file "mcc_generated_files/usb/usb_device.c"
  7234 ;; Parameters:    Size  Location     Type
  7235 ;;  ep              1    wreg     unsigned char 
  7236 ;;  options         1   13[BANK1 ] unsigned char 
  7237 ;; Auto vars:     Size  Location     Type
  7238 ;;  ep              1   18[BANK1 ] unsigned char 
  7239 ;;  p               2   16[BANK1 ] PTR unsigned char 
  7240 ;;		 -> UEP0(1), 
  7241 ;; Return value:  Size  Location     Type
  7242 ;;                  1    wreg      void 
  7243 ;; Registers used:
  7244 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7245 ;; Tracked objects:
  7246 ;;		On entry : 0/0
  7247 ;;		On exit  : 0/0
  7248 ;;		Unchanged: 0/0
  7249 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7250 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7251 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7252 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7253 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  7254 ;;Total ram usage:        6 bytes
  7255 ;; Hardware stack levels used:    1
  7256 ;; Hardware stack levels required when called:   11
  7257 ;; This function calls:
  7258 ;;		_USBConfigureEndpoint
  7259 ;; This function is called by:
  7260 ;;		_CDCInitEP
  7261 ;; This function uses a non-reentrant model
  7262 ;;
  7263                           
  7264                           
  7265                           ;psect for function _USBEnableEndpoint
  7266  102C                     _USBEnableEndpoint:	
  7267                           
  7268                           ;incstack = 0
  7269                           ; Regs used in _USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7270                           ;USBEnableEndpoint@ep stored from wreg
  7271  102C  0021               	movlb	1	; select bank1
  7272  102D  00B2               	movwf	USBEnableEndpoint@ep^(0+128)
  7273                           
  7274                           ;usb_device.c: 880: unsigned char* p;
  7275                           ;usb_device.c: 884: if(options & 0x04)
  7276  102E  1D2D               	btfss	USBEnableEndpoint@options^(0+128),2
  7277  102F  2835               	goto	l7322
  7278                           
  7279                           ;usb_device.c: 885: {
  7280                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
  7281  1030  01A6               	clrf	USBConfigureEndpoint@direction^(0+128)
  7282  1031  0832               	movf	USBEnableEndpoint@ep^(0+128),w
  7283  1032  3193  234C  3190   	fcall	_USBConfigureEndpoint
  7284  1035                     l7322:	
  7285                           
  7286                           ;usb_device.c: 887: }
  7287                           ;usb_device.c: 888: if(options & 0x02)
  7288  1035  0021               	movlb	1	; select bank1
  7289  1036  1CAD               	btfss	USBEnableEndpoint@options^(0+128),1
  7290  1037  283D               	goto	l7326
  7291                           
  7292                           ;usb_device.c: 889: {
  7293                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
  7294  1038  01A6               	clrf	USBConfigureEndpoint@direction^(0+128)
  7295  1039  0AA6               	incf	USBConfigureEndpoint@direction^(0+128),f
  7296  103A  0832               	movf	USBEnableEndpoint@ep^(0+128),w
  7297  103B  3193  234C         	fcall	_USBConfigureEndpoint
  7298  103D                     l7326:	
  7299                           
  7300                           ;usb_device.c: 891: }
  7301                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
  7302  103D  0021               	movlb	1	; select bank1
  7303  103E  0832               	movf	USBEnableEndpoint@ep^(0+128),w
  7304  103F  3E98               	addlw	152
  7305  1040  00AE               	movwf	??_USBEnableEndpoint^(0+128)
  7306  1041  01AF               	clrf	(??_USBEnableEndpoint^(0+128)+1)
  7307  1042  300E               	movlw	14
  7308  1043  3DAF               	addwfc	(??_USBEnableEndpoint^(0+128)+1),f
  7309  1044  082E               	movf	??_USBEnableEndpoint^(0+128),w
  7310  1045  00B0               	movwf	USBEnableEndpoint@p^(0+128)
  7311  1046  082F               	movf	(??_USBEnableEndpoint+1)^(0+128),w
  7312  1047  00B1               	movwf	(USBEnableEndpoint@p+1)^(0+128)
  7313                           
  7314                           ;usb_device.c: 901: *p = options;
  7315  1048  0830               	movf	USBEnableEndpoint@p^(0+128),w
  7316  1049  0086               	movwf	6
  7317  104A  0831               	movf	(USBEnableEndpoint@p+1)^(0+128),w
  7318  104B  0087               	movwf	7
  7319  104C  082D               	movf	USBEnableEndpoint@options^(0+128),w
  7320  104D  0081               	movwf	1
  7321  104E  0008               	return
  7322  104F                     __end_of_USBEnableEndpoint:	
  7323                           
  7324                           	psect	text26
  7325  134C                     __ptext26:	
  7326 ;; *************** function _USBConfigureEndpoint *****************
  7327 ;; Defined at:
  7328 ;;		line 1543 in file "mcc_generated_files/usb/usb_device.c"
  7329 ;; Parameters:    Size  Location     Type
  7330 ;;  EPNum           1    wreg     unsigned char 
  7331 ;;  direction       1    6[BANK1 ] unsigned char 
  7332 ;; Auto vars:     Size  Location     Type
  7333 ;;  EPNum           1   11[BANK1 ] unsigned char 
  7334 ;;  handle          1   12[BANK1 ] PTR volatile struct __BD
  7335 ;;		 -> BDT(48), 
  7336 ;; Return value:  Size  Location     Type
  7337 ;;                  1    wreg      void 
  7338 ;; Registers used:
  7339 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7340 ;; Tracked objects:
  7341 ;;		On entry : 0/0
  7342 ;;		On exit  : 0/0
  7343 ;;		Unchanged: 0/0
  7344 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7345 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7346 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7347 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7348 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  7349 ;;Total ram usage:        7 bytes
  7350 ;; Hardware stack levels used:    1
  7351 ;; Hardware stack levels required when called:   10
  7352 ;; This function calls:
  7353 ;;		Nothing
  7354 ;; This function is called by:
  7355 ;;		_USBEnableEndpoint
  7356 ;; This function uses a non-reentrant model
  7357 ;;
  7358                           
  7359                           
  7360                           ;psect for function _USBConfigureEndpoint
  7361  134C                     _USBConfigureEndpoint:	
  7362                           
  7363                           ;incstack = 0
  7364                           ; Regs used in _USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
  7365                           ;USBConfigureEndpoint@EPNum stored from wreg
  7366  134C  0021               	movlb	1	; select bank1
  7367  134D  00AB               	movwf	USBConfigureEndpoint@EPNum^(0+128)
  7368                           
  7369                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
  7370                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
  7371  134E  3020               	movlw	32
  7372  134F  00A7               	movwf	??_USBConfigureEndpoint^(0+128)
  7373  1350  0827               	movf	??_USBConfigureEndpoint^(0+128),w
  7374  1351  00AC               	movwf	USBConfigureEndpoint@handle^(0+128)
  7375                           
  7376                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
  7377  1352  0826               	movf	USBConfigureEndpoint@direction^(0+128),w
  7378  1353  00A7               	movwf	??_USBConfigureEndpoint^(0+128)
  7379  1354  3001               	movlw	1
  7380  1355                     u6705:	
  7381  1355  35A7               	lslf	??_USBConfigureEndpoint^(0+128),f
  7382  1356  0B89               	decfsz	9,f
  7383  1357  2B55               	goto	u6705
  7384  1358  082B               	movf	USBConfigureEndpoint@EPNum^(0+128),w
  7385  1359  00A8               	movwf	(??_USBConfigureEndpoint+1)^(0+128)
  7386  135A  3001               	movlw	1
  7387  135B                     u6715:	
  7388  135B  35A8               	lslf	(??_USBConfigureEndpoint+1)^(0+128),f
  7389  135C  3EFF               	addlw	-1
  7390  135D  1D03               	skipz
  7391  135E  2B5B               	goto	u6715
  7392  135F  3528               	lslf	(??_USBConfigureEndpoint+1)^(0+128),w
  7393  1360  0727               	addwf	??_USBConfigureEndpoint^(0+128),w
  7394  1361  00A9               	movwf	(??_USBConfigureEndpoint+2)^(0+128)
  7395  1362  3001               	movlw	1
  7396  1363                     u6725:	
  7397  1363  35A9               	lslf	(??_USBConfigureEndpoint+2)^(0+128),f
  7398  1364  3EFF               	addlw	-1
  7399  1365  1D03               	skipz
  7400  1366  2B63               	goto	u6725
  7401  1367  3529               	lslf	(??_USBConfigureEndpoint+2)^(0+128),w
  7402  1368  00AA               	movwf	(??_USBConfigureEndpoint+3)^(0+128)
  7403  1369  082A               	movf	(??_USBConfigureEndpoint+3)^(0+128),w
  7404  136A  07AC               	addwf	USBConfigureEndpoint@handle^(0+128),f
  7405                           
  7406                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
  7407  136B  082C               	movf	USBConfigureEndpoint@handle^(0+128),w
  7408  136C  0086               	movwf	6
  7409  136D  0187               	clrf	7
  7410  136E  1381               	bcf	1,7
  7411                           
  7412                           ;usb_device.c: 1557: if(direction == 0)
  7413  136F  0826               	movf	USBConfigureEndpoint@direction^(0+128),w
  7414  1370  1D03               	btfss	3,2
  7415  1371  2B7C               	goto	l7312
  7416                           
  7417                           ;usb_device.c: 1558: {
  7418                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
  7419  1372  352B               	lslf	USBConfigureEndpoint@EPNum^(0+128),w
  7420  1373  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  7421  1374  0086               	movwf	6
  7422  1375  3001               	movlw	1	; select bank3/4
  7423  1376  0087               	movwf	7
  7424  1377  082C               	movf	USBConfigureEndpoint@handle^(0+128),w
  7425  1378  3FC0               	movwi [0]fsr1
  7426  1379  3000               	movlw	0
  7427  137A  3FC1               	movwi [1]fsr1
  7428                           
  7429                           ;usb_device.c: 1560: }
  7430  137B  2B85               	goto	l7314
  7431  137C                     l7312:	
  7432                           
  7433                           ;usb_device.c: 1561: else
  7434                           ;usb_device.c: 1562: {
  7435                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
  7436  137C  352B               	lslf	USBConfigureEndpoint@EPNum^(0+128),w
  7437  137D  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  7438  137E  0086               	movwf	6
  7439  137F  3001               	movlw	1	; select bank3/4
  7440  1380  0087               	movwf	7
  7441  1381  082C               	movf	USBConfigureEndpoint@handle^(0+128),w
  7442  1382  3FC0               	movwi [0]fsr1
  7443  1383  3000               	movlw	0
  7444  1384  3FC1               	movwi [1]fsr1
  7445  1385                     l7314:	
  7446                           
  7447                           ;usb_device.c: 1564: }
  7448                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
  7449  1385  082C               	movf	USBConfigureEndpoint@handle^(0+128),w
  7450  1386  0086               	movwf	6
  7451  1387  0187               	clrf	7
  7452  1388  1301               	bcf	1,6
  7453                           
  7454                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
  7455  1389  082C               	movf	USBConfigureEndpoint@handle^(0+128),w
  7456  138A  3E04               	addlw	4
  7457  138B  0086               	movwf	6
  7458  138C  0187               	clrf	7
  7459  138D  1701               	bsf	1,6
  7460  138E  0008               	return
  7461  138F                     __end_of_USBConfigureEndpoint:	
  7462                           
  7463                           	psect	text27
  7464  11E1                     __ptext27:	
  7465 ;; *************** function _USBCtrlTrfOutHandler *****************
  7466 ;; Defined at:
  7467 ;;		line 2538 in file "mcc_generated_files/usb/usb_device.c"
  7468 ;; Parameters:    Size  Location     Type
  7469 ;;		None
  7470 ;; Auto vars:     Size  Location     Type
  7471 ;;		None
  7472 ;; Return value:  Size  Location     Type
  7473 ;;                  1    wreg      void 
  7474 ;; Registers used:
  7475 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7476 ;; Tracked objects:
  7477 ;;		On entry : 0/0
  7478 ;;		On exit  : 0/0
  7479 ;;		Unchanged: 0/0
  7480 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7483 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7484 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7485 ;;Total ram usage:        2 bytes
  7486 ;; Hardware stack levels used:    1
  7487 ;; Hardware stack levels required when called:   12
  7488 ;; This function calls:
  7489 ;;		_USBCtrlTrfRxService
  7490 ;; This function is called by:
  7491 ;;		_USBCtrlEPService
  7492 ;; This function uses a non-reentrant model
  7493 ;;
  7494                           
  7495                           
  7496                           ;psect for function _USBCtrlTrfOutHandler
  7497  11E1                     _USBCtrlTrfOutHandler:	
  7498                           
  7499                           ;usb_device.c: 2540: if(controlTransferState == 2)
  7500                           
  7501                           ;incstack = 0
  7502                           ; Regs used in _USBCtrlTrfOutHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7503  11E1  3002               	movlw	2
  7504  11E2  0023               	movlb	3	; select bank3
  7505  11E3  0662               	xorwf	_controlTransferState^(0+384),w	;volatile
  7506  11E4  1D03               	btfss	3,2
  7507  11E5  29E9               	goto	l7914
  7508                           
  7509                           ;usb_device.c: 2541: {
  7510                           ;usb_device.c: 2542: USBCtrlTrfRxService();
  7511  11E6  3186  2635         	fcall	_USBCtrlTrfRxService
  7512                           
  7513                           ;usb_device.c: 2543: }
  7514  11E8  0008               	return
  7515  11E9                     l7914:	
  7516                           
  7517                           ;usb_device.c: 2544: else
  7518                           ;usb_device.c: 2545: {
  7519                           ;usb_device.c: 2548: controlTransferState = 0;
  7520  11E9  0023               	movlb	3	; select bank3
  7521  11EA  01E2               	clrf	_controlTransferState^(0+384)	;volatile
  7522                           
  7523                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
  7524  11EB  085D               	movf	_BothEP0OutUOWNsSet^(0+384),w	;volatile
  7525  11EC  1D03               	btfss	3,2
  7526  11ED  2A14               	goto	l7926
  7527                           
  7528                           ;usb_device.c: 2556: {
  7529                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 8;
  7530  11EE  0021               	movlb	1	; select bank1
  7531  11EF  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7532  11F0  3E01               	addlw	1
  7533  11F1  00AC               	movwf	??_USBCtrlTrfOutHandler^(0+128)
  7534  11F2  3000               	movlw	0
  7535  11F3  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7536  11F4  00AD               	movwf	(??_USBCtrlTrfOutHandler+1)^(0+128)
  7537  11F5  082C               	movf	??_USBCtrlTrfOutHandler^(0+128),w
  7538  11F6  0086               	movwf	6
  7539  11F7  082D               	movf	(??_USBCtrlTrfOutHandler+1)^(0+128),w
  7540  11F8  0087               	movwf	7
  7541  11F9  3008               	movlw	8
  7542  11FA  0081               	movwf	1
  7543                           
  7544                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  7545  11FB  3050               	movlw	80
  7546  11FC  00AC               	movwf	??_USBCtrlTrfOutHandler^(0+128)
  7547  11FD  3000               	movlw	0
  7548  11FE  00AD               	movwf	(??_USBCtrlTrfOutHandler^(0+128)+1)
  7549  11FF  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7550  1200  0086               	movwf	6
  7551  1201  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7552  1202  0087               	movwf	7
  7553  1203  3142               	addfsr 1,2
  7554  1204  082C               	movf	??_USBCtrlTrfOutHandler^(0+128),w
  7555  1205  3FC0               	movwi [0]fsr1
  7556  1206  082D               	movf	(??_USBCtrlTrfOutHandler^(0+128)+1),w
  7557  1207  3FC1               	movwi [1]fsr1
  7558                           
  7559                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  7560  1208  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7561  1209  0086               	movwf	6
  7562  120A  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7563  120B  0087               	movwf	7
  7564  120C  300C               	movlw	12
  7565  120D  0081               	movwf	1
  7566                           
  7567                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7568  120E  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7569  120F  0086               	movwf	6
  7570  1210  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7571  1211  0087               	movwf	7
  7572  1212  1781               	bsf	1,7
  7573                           
  7574                           ;usb_device.c: 2561: }
  7575  1213  0008               	return
  7576  1214                     l7926:	
  7577                           
  7578                           ;usb_device.c: 2562: else
  7579                           ;usb_device.c: 2563: {
  7580                           ;usb_device.c: 2564: BothEP0OutUOWNsSet = 0;
  7581  1214  0023               	movlb	3	; select bank3
  7582  1215  01DD               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  7583  1216  0008               	return
  7584  1217                     __end_of_USBCtrlTrfOutHandler:	
  7585                           
  7586                           	psect	text28
  7587  0635                     __ptext28:	
  7588 ;; *************** function _USBCtrlTrfRxService *****************
  7589 ;; Defined at:
  7590 ;;		line 1852 in file "mcc_generated_files/usb/usb_device.c"
  7591 ;; Parameters:    Size  Location     Type
  7592 ;;		None
  7593 ;; Auto vars:     Size  Location     Type
  7594 ;;  byteToRead      1   11[BANK1 ] unsigned char 
  7595 ;;  i               1   10[BANK1 ] unsigned char 
  7596 ;; Return value:  Size  Location     Type
  7597 ;;                  1    wreg      void 
  7598 ;; Registers used:
  7599 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7600 ;; Tracked objects:
  7601 ;;		On entry : 0/0
  7602 ;;		On exit  : 0/0
  7603 ;;		Unchanged: 0/0
  7604 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7606 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7607 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7608 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7609 ;;Total ram usage:        4 bytes
  7610 ;; Hardware stack levels used:    1
  7611 ;; Hardware stack levels required when called:   11
  7612 ;; This function calls:
  7613 ;;		_USBCtrlEPAllowStatusStage
  7614 ;; This function is called by:
  7615 ;;		_USBCtrlTrfOutHandler
  7616 ;; This function uses a non-reentrant model
  7617 ;;
  7618                           
  7619                           
  7620                           ;psect for function _USBCtrlTrfRxService
  7621  0635                     _USBCtrlTrfRxService:	
  7622                           
  7623                           ;usb_device.c: 1854: uint8_t byteToRead;
  7624                           ;usb_device.c: 1855: uint8_t i;
  7625                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  7626                           
  7627                           ;incstack = 0
  7628                           ; Regs used in _USBCtrlTrfRxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7629  0635  0023               	movlb	3	; select bank3
  7630  0636  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  7631  0637  0086               	movwf	6
  7632  0638  0187               	clrf	7
  7633  0639  3F41               	moviw [1]fsr1
  7634  063A  0021               	movlb	1	; select bank1
  7635  063B  00AB               	movwf	USBCtrlTrfRxService@byteToRead^(0+128)
  7636                           
  7637                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
  7638  063C  082B               	movf	USBCtrlTrfRxService@byteToRead^(0+128),w
  7639  063D  00A8               	movwf	??_USBCtrlTrfRxService^(0+128)
  7640  063E  01A9               	clrf	(??_USBCtrlTrfRxService^(0+128)+1)
  7641  063F  0829               	movf	(??_USBCtrlTrfRxService+1)^(0+128),w
  7642  0640  0023               	movlb	3	; select bank3
  7643  0641  0234               	subwf	((_outPipes+1)^(0+384)+3),w	;volatile
  7644  0642  1D03               	skipz
  7645  0643  2E48               	goto	u7345
  7646  0644  0021               	movlb	1	; select bank1
  7647  0645  0828               	movf	??_USBCtrlTrfRxService^(0+128),w
  7648  0646  0023               	movlb	3	; select bank3
  7649  0647  0233               	subwf	(_outPipes^(0+384)+3),w	;volatile
  7650  0648                     u7345:	
  7651  0648  1803               	skipnc
  7652  0649  2E4F               	goto	l493
  7653                           
  7654                           ;usb_device.c: 1866: {
  7655                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
  7656  064A  0833               	movf	(_outPipes^(0+384)+3),w	;volatile
  7657  064B  0021               	movlb	1	; select bank1
  7658  064C  00A8               	movwf	??_USBCtrlTrfRxService^(0+128)
  7659  064D  0828               	movf	??_USBCtrlTrfRxService^(0+128),w
  7660  064E  00AB               	movwf	USBCtrlTrfRxService@byteToRead^(0+128)
  7661  064F                     l493:	
  7662                           
  7663                           ;usb_device.c: 1868: }
  7664                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
  7665  064F  0021               	movlb	1	; select bank1
  7666  0650  082B               	movf	USBCtrlTrfRxService@byteToRead^(0+128),w
  7667  0651  00A8               	movwf	??_USBCtrlTrfRxService^(0+128)
  7668  0652  01A9               	clrf	(??_USBCtrlTrfRxService^(0+128)+1)
  7669  0653  0828               	movf	??_USBCtrlTrfRxService^(0+128),w
  7670  0654  0023               	movlb	3	; select bank3
  7671  0655  02B3               	subwf	(_outPipes^(0+384)+3),f	;volatile
  7672  0656  0021               	movlb	1	; select bank1
  7673  0657  0829               	movf	(??_USBCtrlTrfRxService+1)^(0+128),w
  7674  0658  0023               	movlb	3	; select bank3
  7675  0659  3BB4               	subwfb	((_outPipes+1)^(0+384)+3),f	;volatile
  7676                           
  7677                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
  7678  065A  0021               	movlb	1	; select bank1
  7679  065B  01AA               	clrf	USBCtrlTrfRxService@i^(0+128)
  7680  065C                     l7814:	
  7681  065C  082B               	movf	USBCtrlTrfRxService@byteToRead^(0+128),w
  7682  065D  022A               	subwf	USBCtrlTrfRxService@i^(0+128),w
  7683  065E  1803               	btfsc	3,0
  7684  065F  2E79               	goto	l7816
  7685                           
  7686                           ;usb_device.c: 1875: {
  7687                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  7688  0660  082A               	movf	USBCtrlTrfRxService@i^(0+128),w
  7689  0661  3E58               	addlw	88
  7690  0662  0086               	movwf	6
  7691  0663  0187               	clrf	7
  7692  0664  0801               	movf	1,w
  7693  0665  00A8               	movwf	??_USBCtrlTrfRxService^(0+128)
  7694  0666  0023               	movlb	3	; select bank3
  7695  0667  0830               	movf	_outPipes^(0+384),w	;volatile
  7696  0668  0086               	movwf	6
  7697  0669  3002               	movlw	2	; select bank4/5
  7698  066A  0087               	movwf	7
  7699  066B  0021               	movlb	1	; select bank1
  7700  066C  0828               	movf	??_USBCtrlTrfRxService^(0+128),w
  7701  066D  0081               	movwf	1
  7702  066E  3001               	movlw	1
  7703  066F  00A8               	movwf	??_USBCtrlTrfRxService^(0+128)
  7704  0670  0828               	movf	??_USBCtrlTrfRxService^(0+128),w
  7705  0671  0023               	movlb	3	; select bank3
  7706  0672  07B0               	addwf	_outPipes^(0+384),f	;volatile
  7707  0673  3001               	movlw	1
  7708  0674  0021               	movlb	1	; select bank1
  7709  0675  00A8               	movwf	??_USBCtrlTrfRxService^(0+128)
  7710  0676  0828               	movf	??_USBCtrlTrfRxService^(0+128),w
  7711  0677  07AA               	addwf	USBCtrlTrfRxService@i^(0+128),f
  7712  0678  2E5C               	goto	l7814
  7713  0679                     l7816:	
  7714                           
  7715                           ;usb_device.c: 1877: }
  7716                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
  7717  0679  0023               	movlb	3	; select bank3
  7718  067A  0833               	movf	(_outPipes^(0+384)+3),w	;volatile
  7719  067B  0434               	iorwf	((_outPipes+1)^(0+384)+3),w	;volatile
  7720  067C  1903               	btfsc	3,2
  7721  067D  2EB8               	goto	l7828
  7722                           
  7723                           ;usb_device.c: 1882: {
  7724                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
  7725  067E  0021               	movlb	1	; select bank1
  7726  067F  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7727  0680  3E01               	addlw	1
  7728  0681  00A8               	movwf	??_USBCtrlTrfRxService^(0+128)
  7729  0682  3000               	movlw	0
  7730  0683  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7731  0684  00A9               	movwf	(??_USBCtrlTrfRxService+1)^(0+128)
  7732  0685  0828               	movf	??_USBCtrlTrfRxService^(0+128),w
  7733  0686  0086               	movwf	6
  7734  0687  0829               	movf	(??_USBCtrlTrfRxService+1)^(0+128),w
  7735  0688  0087               	movwf	7
  7736  0689  3008               	movlw	8
  7737  068A  0081               	movwf	1
  7738                           
  7739                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  7740  068B  3058               	movlw	88
  7741  068C  00A8               	movwf	??_USBCtrlTrfRxService^(0+128)
  7742  068D  3000               	movlw	0
  7743  068E  00A9               	movwf	(??_USBCtrlTrfRxService^(0+128)+1)
  7744  068F  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7745  0690  0086               	movwf	6
  7746  0691  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7747  0692  0087               	movwf	7
  7748  0693  3142               	addfsr 1,2
  7749  0694  0828               	movf	??_USBCtrlTrfRxService^(0+128),w
  7750  0695  3FC0               	movwi [0]fsr1
  7751  0696  0829               	movf	(??_USBCtrlTrfRxService^(0+128)+1),w
  7752  0697  3FC1               	movwi [1]fsr1
  7753                           
  7754                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  7755  0698  0023               	movlb	3	; select bank3
  7756  0699  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  7757  069A  0086               	movwf	6
  7758  069B  0187               	clrf	7
  7759  069C  1B01               	btfsc	1,6
  7760  069D  2EAB               	goto	l7826
  7761                           
  7762                           ;usb_device.c: 1886: {
  7763                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  7764  069E  0021               	movlb	1	; select bank1
  7765  069F  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7766  06A0  0086               	movwf	6
  7767  06A1  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7768  06A2  0087               	movwf	7
  7769  06A3  3048               	movlw	72
  7770  06A4  0081               	movwf	1
  7771                           
  7772                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7773  06A5  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7774  06A6  0086               	movwf	6
  7775  06A7  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7776  06A8  0087               	movwf	7
  7777  06A9  1781               	bsf	1,7
  7778                           
  7779                           ;usb_device.c: 1889: }
  7780  06AA  0008               	return
  7781  06AB                     l7826:	
  7782                           
  7783                           ;usb_device.c: 1890: else
  7784                           ;usb_device.c: 1891: {
  7785                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
  7786  06AB  0021               	movlb	1	; select bank1
  7787  06AC  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7788  06AD  0086               	movwf	6
  7789  06AE  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7790  06AF  0087               	movwf	7
  7791  06B0  3008               	movlw	8
  7792  06B1  0081               	movwf	1
  7793                           
  7794                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7795  06B2  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7796  06B3  0086               	movwf	6
  7797  06B4  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7798  06B5  0087               	movwf	7
  7799  06B6  1781               	bsf	1,7
  7800                           
  7801                           ;usb_device.c: 1894: }
  7802                           ;usb_device.c: 1895: }
  7803  06B7  0008               	return
  7804  06B8                     l7828:	
  7805                           
  7806                           ;usb_device.c: 1896: else
  7807                           ;usb_device.c: 1897: {
  7808                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
  7809  06B8  0021               	movlb	1	; select bank1
  7810  06B9  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7811  06BA  3E01               	addlw	1
  7812  06BB  00A8               	movwf	??_USBCtrlTrfRxService^(0+128)
  7813  06BC  3000               	movlw	0
  7814  06BD  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7815  06BE  00A9               	movwf	(??_USBCtrlTrfRxService+1)^(0+128)
  7816  06BF  0828               	movf	??_USBCtrlTrfRxService^(0+128),w
  7817  06C0  0086               	movwf	6
  7818  06C1  0829               	movf	(??_USBCtrlTrfRxService+1)^(0+128),w
  7819  06C2  0087               	movwf	7
  7820  06C3  3008               	movlw	8
  7821  06C4  0081               	movwf	1
  7822                           
  7823                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  7824  06C5  3050               	movlw	80
  7825  06C6  00A8               	movwf	??_USBCtrlTrfRxService^(0+128)
  7826  06C7  3000               	movlw	0
  7827  06C8  00A9               	movwf	(??_USBCtrlTrfRxService^(0+128)+1)
  7828  06C9  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7829  06CA  0086               	movwf	6
  7830  06CB  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7831  06CC  0087               	movwf	7
  7832  06CD  3142               	addfsr 1,2
  7833  06CE  0828               	movf	??_USBCtrlTrfRxService^(0+128),w
  7834  06CF  3FC0               	movwi [0]fsr1
  7835  06D0  0829               	movf	(??_USBCtrlTrfRxService^(0+128)+1),w
  7836  06D1  3FC1               	movwi [1]fsr1
  7837                           
  7838                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  7839  06D2  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7840  06D3  0086               	movwf	6
  7841  06D4  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7842  06D5  0087               	movwf	7
  7843  06D6  3004               	movlw	4
  7844  06D7  0081               	movwf	1
  7845                           
  7846                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7847  06D8  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  7848  06D9  0086               	movwf	6
  7849  06DA  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  7850  06DB  0087               	movwf	7
  7851  06DC  1781               	bsf	1,7
  7852                           
  7853                           ;usb_device.c: 1915: {
  7854                           ;usb_device.c: 1921: outPipes[0].pFunc();
  7855  06DD  0023               	movlb	3	; select bank3
  7856  06DE  0835               	movf	(low ((_outPipes| (0+256)+5)))^(0+128),w	;volatile
  7857  06DF  0836               	movf	((low ((_outPipes| (0+256)+5))+1))^(0+128),w	;volatile
  7858                           
  7859                           ;usb_device.c: 1926: }
  7860                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
  7861  06E0  13B2               	bcf	(_outPipes^(0+384)+2),7	;volatile
  7862                           
  7863                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
  7864  06E1  085B               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
  7865  06E2  1D03               	btfss	3,2
  7866  06E3  0008               	return
  7867                           
  7868                           ;usb_device.c: 1942: {
  7869                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
  7870  06E4  318A  229A         	fcall	_USBCtrlEPAllowStatusStage
  7871  06E6  0008               	return
  7872  06E7                     __end_of_USBCtrlTrfRxService:	
  7873                           
  7874                           	psect	text29
  7875  0A9A                     __ptext29:	
  7876 ;; *************** function _USBCtrlEPAllowStatusStage *****************
  7877 ;; Defined at:
  7878 ;;		line 1416 in file "mcc_generated_files/usb/usb_device.c"
  7879 ;; Parameters:    Size  Location     Type
  7880 ;;		None
  7881 ;; Auto vars:     Size  Location     Type
  7882 ;;		None
  7883 ;; Return value:  Size  Location     Type
  7884 ;;                  1    wreg      void 
  7885 ;; Registers used:
  7886 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7887 ;; Tracked objects:
  7888 ;;		On entry : 0/0
  7889 ;;		On exit  : 0/0
  7890 ;;		Unchanged: 0/0
  7891 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7894 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7895 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7896 ;;Total ram usage:        2 bytes
  7897 ;; Hardware stack levels used:    1
  7898 ;; Hardware stack levels required when called:   10
  7899 ;; This function calls:
  7900 ;;		Nothing
  7901 ;; This function is called by:
  7902 ;;		_USBDeviceTasks
  7903 ;;		_USBCtrlEPServiceComplete
  7904 ;;		_USBCtrlTrfRxService
  7905 ;; This function uses a non-reentrant model
  7906 ;;
  7907                           
  7908                           
  7909                           ;psect for function _USBCtrlEPAllowStatusStage
  7910  0A9A                     _USBCtrlEPAllowStatusStage:	
  7911                           
  7912                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
  7913                           
  7914                           ;incstack = 0
  7915                           ; Regs used in _USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
  7916  0A9A  0023               	movlb	3	; select bank3
  7917  0A9B  085A               	movf	_USBStatusStageEnabledFlag1^(0+384),w	;volatile
  7918  0A9C  1D03               	btfss	3,2
  7919  0A9D  0008               	return
  7920                           
  7921                           ;usb_device.c: 1424: {
  7922                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
  7923  0A9E  3001               	movlw	1
  7924  0A9F  0021               	movlb	1	; select bank1
  7925  0AA0  00A6               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  7926  0AA1  0826               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  7927  0AA2  0023               	movlb	3	; select bank3
  7928  0AA3  00DA               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  7929                           
  7930                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
  7931  0AA4  0859               	movf	_USBStatusStageEnabledFlag2^(0+384),w	;volatile
  7932  0AA5  1D03               	btfss	3,2
  7933  0AA6  0008               	return
  7934                           
  7935                           ;usb_device.c: 1427: {
  7936                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
  7937  0AA7  3001               	movlw	1
  7938  0AA8  0021               	movlb	1	; select bank1
  7939  0AA9  00A6               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  7940  0AAA  0826               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  7941  0AAB  0023               	movlb	3	; select bank3
  7942  0AAC  00D9               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  7943                           
  7944                           ;usb_device.c: 1432: if(controlTransferState == 2)
  7945  0AAD  3002               	movlw	2
  7946  0AAE  0662               	xorwf	_controlTransferState^(0+384),w	;volatile
  7947  0AAF  1D03               	btfss	3,2
  7948  0AB0  2AC3               	goto	l7504
  7949                           
  7950                           ;usb_device.c: 1433: {
  7951                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
  7952  0AB1  0837               	movf	_pBDTEntryIn^(0+384),w
  7953  0AB2  0086               	movwf	6
  7954  0AB3  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  7955  0AB4  0087               	movwf	7
  7956  0AB5  3141               	addfsr 1,1
  7957  0AB6  0181               	clrf	1
  7958                           
  7959                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  7960  0AB7  0837               	movf	_pBDTEntryIn^(0+384),w
  7961  0AB8  0086               	movwf	6
  7962  0AB9  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  7963  0ABA  0087               	movwf	7
  7964  0ABB  3048               	movlw	72
  7965  0ABC  0081               	movwf	1
  7966                           
  7967                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
  7968  0ABD  0837               	movf	_pBDTEntryIn^(0+384),w
  7969  0ABE  0086               	movwf	6
  7970  0ABF  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  7971  0AC0  0087               	movwf	7
  7972  0AC1  1781               	bsf	1,7
  7973                           
  7974                           ;usb_device.c: 1437: }
  7975  0AC2  0008               	return
  7976  0AC3                     l7504:	
  7977                           
  7978                           ;usb_device.c: 1438: else if(controlTransferState == 1)
  7979  0AC3  0362               	decf	_controlTransferState^(0+384),w	;volatile
  7980  0AC4  1D03               	btfss	3,2
  7981  0AC5  0008               	return
  7982                           
  7983                           ;usb_device.c: 1439: {
  7984                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
  7985  0AC6  01DD               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  7986                           
  7987                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
  7988  0AC7  3008               	movlw	8
  7989  0AC8  0021               	movlb	1	; select bank1
  7990  0AC9  00A6               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  7991  0ACA  0023               	movlb	3	; select bank3
  7992  0ACB  0A64               	incf	_pBDTEntryEP0OutCurrent^(0+384),w
  7993  0ACC  0086               	movwf	6
  7994  0ACD  0187               	clrf	7
  7995  0ACE  0021               	movlb	1	; select bank1
  7996  0ACF  0826               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  7997  0AD0  0081               	movwf	1
  7998                           
  7999                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  8000  0AD1  3050               	movlw	80
  8001  0AD2  00A6               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  8002  0AD3  3000               	movlw	0
  8003  0AD4  00A7               	movwf	(??_USBCtrlEPAllowStatusStage^(0+128)+1)
  8004  0AD5  0023               	movlb	3	; select bank3
  8005  0AD6  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  8006  0AD7  3E02               	addlw	2
  8007  0AD8  0086               	movwf	6
  8008  0AD9  0187               	clrf	7
  8009  0ADA  0021               	movlb	1	; select bank1
  8010  0ADB  0826               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  8011  0ADC  3FC0               	movwi [0]fsr1
  8012  0ADD  0827               	movf	(??_USBCtrlEPAllowStatusStage^(0+128)+1),w
  8013  0ADE  3FC1               	movwi [1]fsr1
  8014                           
  8015                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
  8016  0ADF  3004               	movlw	4
  8017  0AE0  00A6               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  8018  0AE1  0023               	movlb	3	; select bank3
  8019  0AE2  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  8020  0AE3  0086               	movwf	6
  8021  0AE4  0187               	clrf	7
  8022  0AE5  0021               	movlb	1	; select bank1
  8023  0AE6  0826               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  8024  0AE7  0081               	movwf	1
  8025                           
  8026                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  8027  0AE8  0023               	movlb	3	; select bank3
  8028  0AE9  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  8029  0AEA  0086               	movwf	6
  8030  0AEB  0187               	clrf	7
  8031  0AEC  1781               	bsf	1,7
  8032                           
  8033                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
  8034  0AED  3001               	movlw	1
  8035  0AEE  0021               	movlb	1	; select bank1
  8036  0AEF  00A6               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  8037  0AF0  0826               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  8038  0AF1  0023               	movlb	3	; select bank3
  8039  0AF2  00DD               	movwf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  8040                           
  8041                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
  8042  0AF3  0021               	movlb	1	; select bank1
  8043  0AF4  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8044  0AF5  3E01               	addlw	1
  8045  0AF6  00A6               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  8046  0AF7  3000               	movlw	0
  8047  0AF8  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8048  0AF9  00A7               	movwf	(??_USBCtrlEPAllowStatusStage+1)^(0+128)
  8049  0AFA  0826               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  8050  0AFB  0086               	movwf	6
  8051  0AFC  0827               	movf	(??_USBCtrlEPAllowStatusStage+1)^(0+128),w
  8052  0AFD  0087               	movwf	7
  8053  0AFE  3008               	movlw	8
  8054  0AFF  0081               	movwf	1
  8055                           
  8056                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  8057  0B00  3050               	movlw	80
  8058  0B01  00A6               	movwf	??_USBCtrlEPAllowStatusStage^(0+128)
  8059  0B02  3000               	movlw	0
  8060  0B03  00A7               	movwf	(??_USBCtrlEPAllowStatusStage^(0+128)+1)
  8061  0B04  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8062  0B05  0086               	movwf	6
  8063  0B06  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8064  0B07  0087               	movwf	7
  8065  0B08  3142               	addfsr 1,2
  8066  0B09  0826               	movf	??_USBCtrlEPAllowStatusStage^(0+128),w
  8067  0B0A  3FC0               	movwi [0]fsr1
  8068  0B0B  0827               	movf	(??_USBCtrlEPAllowStatusStage^(0+128)+1),w
  8069  0B0C  3FC1               	movwi [1]fsr1
  8070                           
  8071                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
  8072  0B0D  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
  8073  0B0E  0086               	movwf	6
  8074  0B0F  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  8075  0B10  0087               	movwf	7
  8076  0B11  3080               	movlw	128
  8077  0B12  0081               	movwf	1
  8078  0B13  0008               	return
  8079  0B14                     __end_of_USBCtrlEPAllowStatusStage:	
  8080                           
  8081                           	psect	text30
  8082  093B                     __ptext30:	
  8083 ;; *************** function _USBCtrlTrfInHandler *****************
  8084 ;; Defined at:
  8085 ;;		line 2592 in file "mcc_generated_files/usb/usb_device.c"
  8086 ;; Parameters:    Size  Location     Type
  8087 ;;		None
  8088 ;; Auto vars:     Size  Location     Type
  8089 ;;  lastDTS         1   11[BANK1 ] unsigned char 
  8090 ;; Return value:  Size  Location     Type
  8091 ;;                  1    wreg      void 
  8092 ;; Registers used:
  8093 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8094 ;; Tracked objects:
  8095 ;;		On entry : 0/0
  8096 ;;		On exit  : 0/0
  8097 ;;		Unchanged: 0/0
  8098 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8100 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8101 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8102 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8103 ;;Total ram usage:        3 bytes
  8104 ;; Hardware stack levels used:    1
  8105 ;; Hardware stack levels required when called:   11
  8106 ;; This function calls:
  8107 ;;		_USBCtrlTrfTxService
  8108 ;; This function is called by:
  8109 ;;		_USBCtrlEPService
  8110 ;; This function uses a non-reentrant model
  8111 ;;
  8112                           
  8113                           
  8114                           ;psect for function _USBCtrlTrfInHandler
  8115  093B                     _USBCtrlTrfInHandler:	
  8116                           
  8117                           ;usb_device.c: 2594: uint8_t lastDTS;
  8118                           ;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  8119                           
  8120                           ;incstack = 0
  8121                           ; Regs used in _USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8122  093B  0023               	movlb	3	; select bank3
  8123  093C  0837               	movf	_pBDTEntryIn^(0+384),w
  8124  093D  0086               	movwf	6
  8125  093E  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  8126  093F  0087               	movwf	7
  8127  0940  3000               	movlw	0
  8128  0941  1B01               	btfsc	1,6
  8129  0942  3001               	movlw	1
  8130  0943  0021               	movlb	1	; select bank1
  8131  0944  00AB               	movwf	USBCtrlTrfInHandler@lastDTS^(0+128)
  8132                           
  8133                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  8134  0945  3004               	movlw	4
  8135  0946  0023               	movlb	3	; select bank3
  8136  0947  0637               	xorwf	_pBDTEntryIn^(0+384),w
  8137  0948  00B7               	movwf	_pBDTEntryIn^(0+384)
  8138  0949  3000               	movlw	0
  8139  094A  0638               	xorwf	(_pBDTEntryIn+1)^(0+384),w
  8140  094B  00B8               	movwf	(_pBDTEntryIn+1)^(0+384)
  8141                           
  8142                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
  8143  094C  3008               	movlw	8
  8144  094D  0665               	xorwf	_USBDeviceState^(0+384),w	;volatile
  8145  094E  1D03               	btfss	3,2
  8146  094F  2960               	goto	l7942
  8147                           
  8148                           ;usb_device.c: 2605: {
  8149                           ;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
  8150  0950  0020               	movlb	0	; select bank0
  8151  0951  0852               	movf	82,w	;volatile
  8152  0952  397F               	andlw	127
  8153  0953  003D               	movlb	29	; select bank29
  8154  0954  0096               	movwf	22	;volatile
  8155                           
  8156                           ;usb_device.c: 2607: if(UADDR != 0u)
  8157  0955  0816               	movf	22,w	;volatile
  8158  0956  1903               	btfsc	3,2
  8159  0957  295A               	goto	l7940
  8160                           
  8161                           ;usb_device.c: 2608: {
  8162                           ;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
  8163  0958  3010               	movlw	16
  8164  0959  295B               	goto	L7
  8165  095A                     l7940:	
  8166                           ;usb_device.c: 2610: }
  8167                           
  8168                           
  8169                           ;usb_device.c: 2611: else
  8170                           ;usb_device.c: 2612: {
  8171                           ;usb_device.c: 2613: USBDeviceState=DEFAULT_STATE;
  8172  095A  3004               	movlw	4
  8173  095B                     L7:	
  8174  095B  0021               	movlb	1	; select bank1
  8175  095C  00A9               	movwf	??_USBCtrlTrfInHandler^(0+128)
  8176  095D  0829               	movf	??_USBCtrlTrfInHandler^(0+128),w
  8177  095E  0023               	movlb	3	; select bank3
  8178  095F  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
  8179  0960                     l7942:	
  8180                           
  8181                           ;usb_device.c: 2614: }
  8182                           ;usb_device.c: 2615: }
  8183                           ;usb_device.c: 2618: if(controlTransferState == 1)
  8184  0960  0362               	decf	_controlTransferState^(0+384),w	;volatile
  8185  0961  1D03               	btfss	3,2
  8186  0962  29A5               	goto	l578
  8187                           
  8188                           ;usb_device.c: 2619: {
  8189                           ;usb_device.c: 2620: pBDTEntryIn[0]->ADR = (((uint16_t)(CtrlTrfData)) & 0x7FFF);
  8190  0963  3058               	movlw	88
  8191  0964  0021               	movlb	1	; select bank1
  8192  0965  00A9               	movwf	??_USBCtrlTrfInHandler^(0+128)
  8193  0966  3000               	movlw	0
  8194  0967  00AA               	movwf	(??_USBCtrlTrfInHandler^(0+128)+1)
  8195  0968  0023               	movlb	3	; select bank3
  8196  0969  0837               	movf	_pBDTEntryIn^(0+384),w
  8197  096A  0086               	movwf	6
  8198  096B  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  8199  096C  0087               	movwf	7
  8200  096D  3142               	addfsr 1,2
  8201  096E  0021               	movlb	1	; select bank1
  8202  096F  0829               	movf	??_USBCtrlTrfInHandler^(0+128),w
  8203  0970  3FC0               	movwi [0]fsr1
  8204  0971  082A               	movf	(??_USBCtrlTrfInHandler^(0+128)+1),w
  8205  0972  3FC1               	movwi [1]fsr1
  8206                           
  8207                           ;usb_device.c: 2621: USBCtrlTrfTxService();
  8208  0973  318A  2220  3189   	fcall	_USBCtrlTrfTxService
  8209                           
  8210                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
  8211  0976  3002               	movlw	2
  8212  0977  0023               	movlb	3	; select bank3
  8213  0978  0663               	xorwf	_shortPacketStatus^(0+384),w	;volatile
  8214  0979  1D03               	btfss	3,2
  8215  097A  2987               	goto	l7952
  8216                           
  8217                           ;usb_device.c: 2628: {
  8218                           ;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
  8219  097B  0837               	movf	_pBDTEntryIn^(0+384),w
  8220  097C  0086               	movwf	6
  8221  097D  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  8222  097E  0087               	movwf	7
  8223  097F  3004               	movlw	4
  8224  0980  0081               	movwf	1
  8225                           
  8226                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
  8227  0981  0837               	movf	_pBDTEntryIn^(0+384),w
  8228  0982  0086               	movwf	6
  8229  0983  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  8230  0984  0087               	movwf	7
  8231  0985  1781               	bsf	1,7
  8232                           
  8233                           ;usb_device.c: 2633: }
  8234  0986  0008               	return
  8235  0987                     l7952:	
  8236                           
  8237                           ;usb_device.c: 2634: else
  8238                           ;usb_device.c: 2635: {
  8239                           ;usb_device.c: 2636: if(lastDTS == 0)
  8240  0987  0021               	movlb	1	; select bank1
  8241  0988  082B               	movf	USBCtrlTrfInHandler@lastDTS^(0+128),w
  8242  0989  1D03               	btfss	3,2
  8243  098A  2998               	goto	l7956
  8244                           
  8245                           ;usb_device.c: 2637: {
  8246                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  8247  098B  0023               	movlb	3	; select bank3
  8248  098C  0837               	movf	_pBDTEntryIn^(0+384),w
  8249  098D  0086               	movwf	6
  8250  098E  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  8251  098F  0087               	movwf	7
  8252  0990  3048               	movlw	72
  8253  0991  0081               	movwf	1
  8254                           
  8255                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
  8256  0992  0837               	movf	_pBDTEntryIn^(0+384),w
  8257  0993  0086               	movwf	6
  8258  0994  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  8259  0995  0087               	movwf	7
  8260  0996  1781               	bsf	1,7
  8261                           
  8262                           ;usb_device.c: 2640: }
  8263  0997  0008               	return
  8264  0998                     l7956:	
  8265                           
  8266                           ;usb_device.c: 2641: else
  8267                           ;usb_device.c: 2642: {
  8268                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
  8269  0998  0023               	movlb	3	; select bank3
  8270  0999  0837               	movf	_pBDTEntryIn^(0+384),w
  8271  099A  0086               	movwf	6
  8272  099B  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  8273  099C  0087               	movwf	7
  8274  099D  3008               	movlw	8
  8275  099E  0081               	movwf	1
  8276                           
  8277                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
  8278  099F  0837               	movf	_pBDTEntryIn^(0+384),w
  8279  09A0  0086               	movwf	6
  8280  09A1  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
  8281  09A2  0087               	movwf	7
  8282  09A3  1781               	bsf	1,7
  8283                           
  8284                           ;usb_device.c: 2645: }
  8285                           ;usb_device.c: 2646: }
  8286                           ;usb_device.c: 2647: }
  8287  09A4  0008               	return
  8288  09A5                     l578:	
  8289                           
  8290                           ;usb_device.c: 2648: else
  8291                           ;usb_device.c: 2649: {
  8292                           ;usb_device.c: 2653: if(outPipes[0].info.bits.busy == 1)
  8293  09A5  1FB2               	btfss	(_outPipes^(0+384)+2),7	;volatile
  8294  09A6  29AA               	goto	l7960
  8295                           
  8296                           ;usb_device.c: 2656: {
  8297                           ;usb_device.c: 2657: outPipes[0].pFunc();
  8298  09A7  0835               	movf	(low ((_outPipes| (0+256)+5)))^(0+128),w	;volatile
  8299  09A8  0836               	movf	((low ((_outPipes| (0+256)+5))+1))^(0+128),w	;volatile
  8300                           
  8301                           ;usb_device.c: 2658: }
  8302                           ;usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
  8303  09A9  13B2               	bcf	(_outPipes^(0+384)+2),7	;volatile
  8304  09AA                     l7960:	
  8305                           
  8306                           ;usb_device.c: 2660: }
  8307                           ;usb_device.c: 2662: controlTransferState = 0;
  8308  09AA  01E2               	clrf	_controlTransferState^(0+384)	;volatile
  8309  09AB  0008               	return
  8310  09AC                     __end_of_USBCtrlTrfInHandler:	
  8311                           
  8312                           	psect	text31
  8313  0A20                     __ptext31:	
  8314 ;; *************** function _USBCtrlTrfTxService *****************
  8315 ;; Defined at:
  8316 ;;		line 1771 in file "mcc_generated_files/usb/usb_device.c"
  8317 ;; Parameters:    Size  Location     Type
  8318 ;;		None
  8319 ;; Auto vars:     Size  Location     Type
  8320 ;;  byteToSend      1    8[BANK1 ] unsigned char 
  8321 ;; Return value:  Size  Location     Type
  8322 ;;                  1    wreg      void 
  8323 ;; Registers used:
  8324 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  8325 ;; Tracked objects:
  8326 ;;		On entry : 0/0
  8327 ;;		On exit  : 0/0
  8328 ;;		Unchanged: 0/0
  8329 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8331 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8332 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8333 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8334 ;;Total ram usage:        3 bytes
  8335 ;; Hardware stack levels used:    1
  8336 ;; Hardware stack levels required when called:   10
  8337 ;; This function calls:
  8338 ;;		Nothing
  8339 ;; This function is called by:
  8340 ;;		_USBCtrlEPAllowDataStage
  8341 ;;		_USBCtrlTrfInHandler
  8342 ;; This function uses a non-reentrant model
  8343 ;;
  8344                           
  8345                           
  8346                           ;psect for function _USBCtrlTrfTxService
  8347  0A20                     _USBCtrlTrfTxService:	
  8348                           
  8349                           ;usb_device.c: 1773: uint8_t byteToSend;
  8350                           ;usb_device.c: 1777: byteToSend = 8;
  8351                           
  8352                           ;incstack = 0
  8353                           ; Regs used in _USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
  8354  0A20  3008               	movlw	8
  8355  0A21  0021               	movlb	1	; select bank1
  8356  0A22  00A6               	movwf	??_USBCtrlTrfTxService^(0+128)
  8357  0A23  0826               	movf	??_USBCtrlTrfTxService^(0+128),w
  8358  0A24  00A8               	movwf	USBCtrlTrfTxService@byteToSend^(0+128)
  8359                           
  8360                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
  8361  0A25  3000               	movlw	0
  8362  0A26  0247               	subwf	((_inPipes+1)^(0+128)+3),w	;volatile
  8363  0A27  3008               	movlw	8
  8364  0A28  1903               	skipnz
  8365  0A29  0246               	subwf	(_inPipes^(0+128)+3),w	;volatile
  8366  0A2A  1803               	skipnc
  8367  0A2B  2A3F               	goto	l478
  8368                           
  8369                           ;usb_device.c: 1779: {
  8370                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
  8371  0A2C  0846               	movf	(_inPipes^(0+128)+3),w	;volatile
  8372  0A2D  00A6               	movwf	??_USBCtrlTrfTxService^(0+128)
  8373  0A2E  0826               	movf	??_USBCtrlTrfTxService^(0+128),w
  8374  0A2F  00A8               	movwf	USBCtrlTrfTxService@byteToSend^(0+128)
  8375                           
  8376                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
  8377  0A30  0023               	movlb	3	; select bank3
  8378  0A31  0863               	movf	_shortPacketStatus^(0+384),w	;volatile
  8379  0A32  1D03               	btfss	3,2
  8380  0A33  2A36               	goto	l7448
  8381                           
  8382                           ;usb_device.c: 1788: {
  8383                           ;usb_device.c: 1789: shortPacketStatus = 1;
  8384  0A34  3001               	movlw	1
  8385  0A35  2A3A               	goto	L8
  8386  0A36                     l7448:	
  8387                           ;usb_device.c: 1790: }
  8388                           
  8389                           
  8390                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
  8391  0A36  0363               	decf	_shortPacketStatus^(0+384),w	;volatile
  8392  0A37  1D03               	btfss	3,2
  8393  0A38  2A3F               	goto	l478
  8394                           
  8395                           ;usb_device.c: 1792: {
  8396                           ;usb_device.c: 1793: shortPacketStatus = 2;
  8397  0A39  3002               	movlw	2
  8398  0A3A                     L8:	
  8399  0A3A  0021               	movlb	1	; select bank1
  8400  0A3B  00A6               	movwf	??_USBCtrlTrfTxService^(0+128)
  8401  0A3C  0826               	movf	??_USBCtrlTrfTxService^(0+128),w
  8402  0A3D  0023               	movlb	3	; select bank3
  8403  0A3E  00E3               	movwf	_shortPacketStatus^(0+384)	;volatile
  8404  0A3F                     l478:	
  8405                           
  8406                           ;usb_device.c: 1794: }
  8407                           ;usb_device.c: 1795: }
  8408                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
  8409  0A3F  0021               	movlb	1	; select bank1
  8410  0A40  0828               	movf	USBCtrlTrfTxService@byteToSend^(0+128),w
  8411  0A41  00A6               	movwf	??_USBCtrlTrfTxService^(0+128)
  8412  0A42  01A7               	clrf	(??_USBCtrlTrfTxService^(0+128)+1)
  8413  0A43  0826               	movf	??_USBCtrlTrfTxService^(0+128),w
  8414  0A44  02C6               	subwf	(_inPipes^(0+128)+3),f	;volatile
  8415  0A45  0827               	movf	(??_USBCtrlTrfTxService+1)^(0+128),w
  8416  0A46  3BC7               	subwfb	((_inPipes+1)^(0+128)+3),f	;volatile
  8417                           
  8418                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
  8419  0A47  0023               	movlb	3	; select bank3
  8420  0A48  0837               	movf	_pBDTEntryIn^(0+384),w
  8421  0A49  3E01               	addlw	1
  8422  0A4A  0021               	movlb	1	; select bank1
  8423  0A4B  00A6               	movwf	??_USBCtrlTrfTxService^(0+128)
  8424  0A4C  3000               	movlw	0
  8425  0A4D  0023               	movlb	3	; select bank3
  8426  0A4E  3D38               	addwfc	(_pBDTEntryIn+1)^(0+384),w
  8427  0A4F  0021               	movlb	1	; select bank1
  8428  0A50  00A7               	movwf	(??_USBCtrlTrfTxService+1)^(0+128)
  8429  0A51  0826               	movf	??_USBCtrlTrfTxService^(0+128),w
  8430  0A52  0086               	movwf	6
  8431  0A53  0827               	movf	(??_USBCtrlTrfTxService+1)^(0+128),w
  8432  0A54  0087               	movwf	7
  8433  0A55  0828               	movf	USBCtrlTrfTxService@byteToSend^(0+128),w
  8434  0A56  0081               	movwf	1
  8435                           
  8436                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
  8437  0A57  3058               	movlw	88
  8438  0A58  00A6               	movwf	??_USBCtrlTrfTxService^(0+128)
  8439  0A59  0826               	movf	??_USBCtrlTrfTxService^(0+128),w
  8440  0A5A  0023               	movlb	3	; select bank3
  8441  0A5B  00E1               	movwf	_pDst^(0+384)
  8442                           
  8443                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
  8444  0A5C  0021               	movlb	1	; select bank1
  8445  0A5D  1C45               	btfss	(_inPipes^(0+128)+2),0	;volatile
  8446  0A5E  2A79               	goto	l7468
  8447  0A5F  2A96               	goto	l7478
  8448  0A60                     l7460:	
  8449                           ;usb_device.c: 1810: {
  8450                           ;usb_device.c: 1811: while(byteToSend)
  8451                           
  8452                           
  8453                           ;usb_device.c: 1812: {
  8454                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
  8455  0A60  0843               	movf	_inPipes^(0+128),w	;volatile
  8456  0A61  0084               	movwf	4
  8457  0A62  0844               	movf	(_inPipes+1)^(0+128),w	;volatile
  8458  0A63  0085               	movwf	5
  8459  0A64  0800               	movf	0,w	;code access
  8460  0A65  00A6               	movwf	??_USBCtrlTrfTxService^(0+128)
  8461  0A66  0023               	movlb	3	; select bank3
  8462  0A67  0861               	movf	_pDst^(0+384),w
  8463  0A68  0086               	movwf	6
  8464  0A69  0187               	clrf	7
  8465  0A6A  0021               	movlb	1	; select bank1
  8466  0A6B  0826               	movf	??_USBCtrlTrfTxService^(0+128),w
  8467  0A6C  0081               	movwf	1
  8468  0A6D  3001               	movlw	1
  8469  0A6E  07C3               	addwf	_inPipes^(0+128),f	;volatile
  8470  0A6F  3000               	movlw	0
  8471  0A70  3DC4               	addwfc	(_inPipes+1)^(0+128),f	;volatile
  8472  0A71  3001               	movlw	1
  8473  0A72  00A6               	movwf	??_USBCtrlTrfTxService^(0+128)
  8474  0A73  0826               	movf	??_USBCtrlTrfTxService^(0+128),w
  8475  0A74  0023               	movlb	3	; select bank3
  8476  0A75  07E1               	addwf	_pDst^(0+384),f
  8477                           
  8478                           ;usb_device.c: 1814: byteToSend--;
  8479  0A76  3001               	movlw	1
  8480  0A77  0021               	movlb	1	; select bank1
  8481  0A78  02A8               	subwf	USBCtrlTrfTxService@byteToSend^(0+128),f
  8482  0A79                     l7468:	
  8483  0A79  0828               	movf	USBCtrlTrfTxService@byteToSend^(0+128),w
  8484  0A7A  1903               	btfsc	3,2
  8485  0A7B  0008               	return
  8486  0A7C  2A60               	goto	l7460
  8487  0A7D                     l7470:	
  8488                           ;usb_device.c: 1817: else
  8489                           ;usb_device.c: 1818: {
  8490                           ;usb_device.c: 1819: while(byteToSend)
  8491                           
  8492                           ;usb_device.c: 1815: }
  8493                           ;usb_device.c: 1816: }
  8494                           
  8495                           
  8496                           ;usb_device.c: 1820: {
  8497                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
  8498  0A7D  0843               	movf	_inPipes^(0+128),w	;volatile
  8499  0A7E  0084               	movwf	4
  8500  0A7F  0844               	movf	(_inPipes+1)^(0+128),w	;volatile
  8501  0A80  0085               	movwf	5
  8502  0A81  0800               	movf	0,w	;code access
  8503  0A82  00A6               	movwf	??_USBCtrlTrfTxService^(0+128)
  8504  0A83  0023               	movlb	3	; select bank3
  8505  0A84  0861               	movf	_pDst^(0+384),w
  8506  0A85  0086               	movwf	6
  8507  0A86  0187               	clrf	7
  8508  0A87  0021               	movlb	1	; select bank1
  8509  0A88  0826               	movf	??_USBCtrlTrfTxService^(0+128),w
  8510  0A89  0081               	movwf	1
  8511  0A8A  3001               	movlw	1
  8512  0A8B  07C3               	addwf	_inPipes^(0+128),f	;volatile
  8513  0A8C  3000               	movlw	0
  8514  0A8D  3DC4               	addwfc	(_inPipes+1)^(0+128),f	;volatile
  8515  0A8E  3001               	movlw	1
  8516  0A8F  00A6               	movwf	??_USBCtrlTrfTxService^(0+128)
  8517  0A90  0826               	movf	??_USBCtrlTrfTxService^(0+128),w
  8518  0A91  0023               	movlb	3	; select bank3
  8519  0A92  07E1               	addwf	_pDst^(0+384),f
  8520                           
  8521                           ;usb_device.c: 1822: byteToSend--;
  8522  0A93  3001               	movlw	1
  8523  0A94  0021               	movlb	1	; select bank1
  8524  0A95  02A8               	subwf	USBCtrlTrfTxService@byteToSend^(0+128),f
  8525  0A96                     l7478:	
  8526  0A96  0828               	movf	USBCtrlTrfTxService@byteToSend^(0+128),w
  8527  0A97  1903               	btfsc	3,2
  8528  0A98  0008               	return
  8529  0A99  2A7D               	goto	l7470
  8530  0A9A                     __end_of_USBCtrlTrfTxService:	
  8531                           
  8532                           	psect	text32
  8533  1DFF                     __ptext32:	
  8534 ;; *************** function _SYSTEM_Initialize *****************
  8535 ;; Defined at:
  8536 ;;		line 73 in file "mcc_generated_files/mcc.c"
  8537 ;; Parameters:    Size  Location     Type
  8538 ;;		None
  8539 ;; Auto vars:     Size  Location     Type
  8540 ;;		None
  8541 ;; Return value:  Size  Location     Type
  8542 ;;                  1    wreg      void 
  8543 ;; Registers used:
  8544 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8545 ;; Tracked objects:
  8546 ;;		On entry : 0/0
  8547 ;;		On exit  : 0/0
  8548 ;;		Unchanged: 0/0
  8549 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8554 ;;Total ram usage:        0 bytes
  8555 ;; Hardware stack levels used:    1
  8556 ;; Hardware stack levels required when called:   11
  8557 ;; This function calls:
  8558 ;;		_OSCILLATOR_Initialize
  8559 ;;		_PIN_MANAGER_Initialize
  8560 ;;		_USBDeviceAttach
  8561 ;;		_USBDeviceInit
  8562 ;;		_WDT_Initialize
  8563 ;; This function is called by:
  8564 ;;		_main
  8565 ;; This function uses a non-reentrant model
  8566 ;;
  8567                           
  8568                           
  8569                           ;psect for function _SYSTEM_Initialize
  8570  1DFF                     _SYSTEM_Initialize:	
  8571                           
  8572                           ;mcc.c: 76: PIN_MANAGER_Initialize();
  8573                           
  8574                           ;incstack = 0
  8575                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8576  1DFF  319E  2660  319D   	fcall	_PIN_MANAGER_Initialize
  8577                           
  8578                           ;mcc.c: 77: OSCILLATOR_Initialize();
  8579  1E02  319D  25E7  319D   	fcall	_OSCILLATOR_Initialize
  8580                           
  8581                           ;mcc.c: 78: WDT_Initialize();
  8582  1E05  319D  25A5  319D   	fcall	_WDT_Initialize
  8583                           
  8584                           ;mcc.c: 79: USBDeviceInit();
  8585  1E08  3185  257E  319D   	fcall	_USBDeviceInit
  8586                           
  8587                           ;mcc.c: 80: USBDeviceAttach();
  8588  1E0B  319F  2706         	fcall	_USBDeviceAttach
  8589  1E0D  0008               	return
  8590  1E0E                     __end_of_SYSTEM_Initialize:	
  8591                           
  8592                           	psect	text33
  8593  1DA5                     __ptext33:	
  8594 ;; *************** function _WDT_Initialize *****************
  8595 ;; Defined at:
  8596 ;;		line 99 in file "mcc_generated_files/mcc.c"
  8597 ;; Parameters:    Size  Location     Type
  8598 ;;		None
  8599 ;; Auto vars:     Size  Location     Type
  8600 ;;		None
  8601 ;; Return value:  Size  Location     Type
  8602 ;;                  1    wreg      void 
  8603 ;; Registers used:
  8604 ;;		wreg
  8605 ;; Tracked objects:
  8606 ;;		On entry : 0/0
  8607 ;;		On exit  : 0/0
  8608 ;;		Unchanged: 0/0
  8609 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8614 ;;Total ram usage:        0 bytes
  8615 ;; Hardware stack levels used:    1
  8616 ;; Hardware stack levels required when called:   10
  8617 ;; This function calls:
  8618 ;;		Nothing
  8619 ;; This function is called by:
  8620 ;;		_SYSTEM_Initialize
  8621 ;; This function uses a non-reentrant model
  8622 ;;
  8623                           
  8624                           
  8625                           ;psect for function _WDT_Initialize
  8626  1DA5                     _WDT_Initialize:	
  8627                           
  8628                           ;mcc.c: 102: WDTCON = 0x16;
  8629                           
  8630                           ;incstack = 0
  8631                           ; Regs used in _WDT_Initialize: [wreg]
  8632  1DA5  3016               	movlw	22
  8633  1DA6  0021               	movlb	1	; select bank1
  8634  1DA7  0097               	movwf	23	;volatile
  8635  1DA8  0008               	return
  8636  1DA9                     __end_of_WDT_Initialize:	
  8637                           
  8638                           	psect	text34
  8639  057E                     __ptext34:	
  8640 ;; *************** function _USBDeviceInit *****************
  8641 ;; Defined at:
  8642 ;;		line 277 in file "mcc_generated_files/usb/usb_device.c"
  8643 ;; Parameters:    Size  Location     Type
  8644 ;;		None
  8645 ;; Auto vars:     Size  Location     Type
  8646 ;;  p               2    7[BANK1 ] PTR unsigned char 
  8647 ;;		 -> UEP1(1), 
  8648 ;;  i               1    9[BANK1 ] unsigned char 
  8649 ;;  i               1   10[BANK1 ] unsigned char 
  8650 ;; Return value:  Size  Location     Type
  8651 ;;                  1    wreg      void 
  8652 ;; Registers used:
  8653 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8654 ;; Tracked objects:
  8655 ;;		On entry : 0/0
  8656 ;;		On exit  : 0/0
  8657 ;;		Unchanged: 0/0
  8658 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8660 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8661 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8662 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  8663 ;;Total ram usage:        5 bytes
  8664 ;; Hardware stack levels used:    1
  8665 ;; Hardware stack levels required when called:   10
  8666 ;; This function calls:
  8667 ;;		Nothing
  8668 ;; This function is called by:
  8669 ;;		_SYSTEM_Initialize
  8670 ;;		_USBDeviceTasks
  8671 ;; This function uses a non-reentrant model
  8672 ;;
  8673                           
  8674                           
  8675                           ;psect for function _USBDeviceInit
  8676  057E                     _USBDeviceInit:	
  8677                           
  8678                           ;usb_device.c: 279: uint8_t i;
  8679                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  8680                           
  8681                           ;incstack = 0
  8682                           ; Regs used in _USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  8683  057E  0021               	movlb	1	; select bank1
  8684  057F  1112               	bcf	18,2	;volatile
  8685                           
  8686                           ;usb_device.c: 285: ;
  8687                           ;usb_device.c: 288: {UEIR = 0;};
  8688  0580  003D               	movlb	29	; select bank29
  8689  0581  0193               	clrf	19	;volatile
  8690                           
  8691                           ;usb_device.c: 291: {UIR = 0;};
  8692  0582  0190               	clrf	16	;volatile
  8693                           
  8694                           ;usb_device.c: 294: UEP0 = 0;
  8695  0583  0198               	clrf	24	;volatile
  8696                           
  8697                           ;usb_device.c: 296: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 0
      +                          ; };
  8698  0584  300E               	movlw	14
  8699  0585  0021               	movlb	1	; select bank1
  8700  0586  00A8               	movwf	(USBDeviceInit@p+1)^(0+128)
  8701  0587  3099               	movlw	153
  8702  0588  00A7               	movwf	USBDeviceInit@p^(0+128)
  8703  0589  01A9               	clrf	USBDeviceInit@i_1491^(0+128)
  8704  058A  3002               	movlw	2
  8705  058B  0229               	subwf	USBDeviceInit@i_1491^(0+128),w
  8706  058C  1803               	btfsc	3,0
  8707  058D  2D9F               	goto	l7980
  8708  058E                     l7972:	
  8709  058E  0827               	movf	USBDeviceInit@p^(0+128),w
  8710  058F  0086               	movwf	6
  8711  0590  0828               	movf	(USBDeviceInit@p+1)^(0+128),w
  8712  0591  0087               	movwf	7
  8713  0592  0181               	clrf	1
  8714  0593  3001               	movlw	1
  8715  0594  07A7               	addwf	USBDeviceInit@p^(0+128),f
  8716  0595  3000               	movlw	0
  8717  0596  3DA8               	addwfc	(USBDeviceInit@p+1)^(0+128),f
  8718  0597  3001               	movlw	1
  8719  0598  00A6               	movwf	??_USBDeviceInit^(0+128)
  8720  0599  0826               	movf	??_USBDeviceInit^(0+128),w
  8721  059A  07A9               	addwf	USBDeviceInit@i_1491^(0+128),f
  8722  059B  3002               	movlw	2
  8723  059C  0229               	subwf	USBDeviceInit@i_1491^(0+128),w
  8724  059D  1C03               	skipc
  8725  059E  2D8E               	goto	l7972
  8726  059F                     l7980:	
  8727                           
  8728                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  8729  059F  3016               	movlw	22
  8730  05A0  003D               	movlb	29	; select bank29
  8731  05A1  0091               	movwf	17	;volatile
  8732  05A2  309F               	movlw	159
  8733  05A3  0097               	movwf	23	;volatile
  8734  05A4  307B               	movlw	123
  8735  05A5  0092               	movwf	18	;volatile
  8736                           
  8737                           ;usb_device.c: 301: ;
  8738                           ;usb_device.c: 304: ;
  8739                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  8740  05A6  0021               	movlb	1	; select bank1
  8741  05A7  01AA               	clrf	USBDeviceInit@i^(0+128)
  8742  05A8  300C               	movlw	12
  8743  05A9  022A               	subwf	USBDeviceInit@i^(0+128),w
  8744  05AA  1803               	btfsc	3,0
  8745  05AB  2DC5               	goto	l380
  8746  05AC                     l7988:	
  8747                           
  8748                           ;usb_device.c: 308: {
  8749                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  8750  05AC  082A               	movf	USBDeviceInit@i^(0+128),w
  8751  05AD  00A6               	movwf	??_USBDeviceInit^(0+128)
  8752  05AE  3001               	movlw	1
  8753  05AF                     u7515:	
  8754  05AF  35A6               	lslf	??_USBDeviceInit^(0+128),f
  8755  05B0  3EFF               	addlw	-1
  8756  05B1  1D03               	skipz
  8757  05B2  2DAF               	goto	u7515
  8758  05B3  3526               	lslf	??_USBDeviceInit^(0+128),w
  8759  05B4  3E20               	addlw	32
  8760  05B5  0086               	movwf	6
  8761  05B6  0187               	clrf	7
  8762  05B7  3000               	movlw	0
  8763  05B8  3FC0               	movwi [0]fsr1
  8764  05B9  3000               	movlw	0
  8765  05BA  3FC1               	movwi [1]fsr1
  8766  05BB  3FC2               	movwi [2]fsr1
  8767  05BC  3FC3               	movwi [3]fsr1
  8768  05BD  3001               	movlw	1
  8769  05BE  00A6               	movwf	??_USBDeviceInit^(0+128)
  8770  05BF  0826               	movf	??_USBDeviceInit^(0+128),w
  8771  05C0  07AA               	addwf	USBDeviceInit@i^(0+128),f
  8772  05C1  300C               	movlw	12
  8773  05C2  022A               	subwf	USBDeviceInit@i^(0+128),w
  8774  05C3  1C03               	skipc
  8775  05C4  2DAC               	goto	l7988
  8776  05C5                     l380:	
  8777                           
  8778                           ;usb_device.c: 310: }
  8779                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  8780  05C5  003D               	movlb	29	; select bank29
  8781  05C6  170E               	bsf	14,6	;volatile
  8782                           
  8783                           ;usb_device.c: 316: UADDR = 0x00;
  8784  05C7  0196               	clrf	22	;volatile
  8785                           
  8786                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  8787  05C8  120E               	bcf	14,4	;volatile
  8788                           
  8789                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  8790  05C9  130E               	bcf	14,6	;volatile
  8791  05CA                     l8000:	
  8792                           ;usb_device.c: 325: do
  8793                           
  8794                           
  8795                           ;usb_device.c: 326: {
  8796                           ;usb_device.c: 327: (UIR &= 0xF7);
  8797  05CA  30F7               	movlw	247
  8798  05CB  0021               	movlb	1	; select bank1
  8799  05CC  00A6               	movwf	??_USBDeviceInit^(0+128)
  8800  05CD  0826               	movf	??_USBDeviceInit^(0+128),w
  8801  05CE  003D               	movlb	29	; select bank29
  8802  05CF  0590               	andwf	16,f	;volatile
  8803                           
  8804                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  8805  05D0  0021               	movlb	1	; select bank1
  8806  05D1  01C5               	clrf	(_inPipes^(0+128)+2)	;volatile
  8807                           
  8808                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  8809  05D2  0023               	movlb	3	; select bank3
  8810  05D3  01B2               	clrf	(_outPipes^(0+384)+2)	;volatile
  8811                           
  8812                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  8813  05D4  01B3               	clrf	(_outPipes^(0+384)+3)	;volatile
  8814  05D5  01B4               	clrf	((_outPipes+1)^(0+384)+3)	;volatile
  8815                           
  8816                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  8817  05D6  003D               	movlb	29	; select bank29
  8818  05D7  1990               	btfsc	16,3	;volatile
  8819  05D8  2DCA               	goto	l8000
  8820                           
  8821                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  8822  05D9  3001               	movlw	1
  8823  05DA  0021               	movlb	1	; select bank1
  8824  05DB  00A6               	movwf	??_USBDeviceInit^(0+128)
  8825  05DC  0826               	movf	??_USBDeviceInit^(0+128),w
  8826  05DD  0023               	movlb	3	; select bank3
  8827  05DE  00DA               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  8828                           
  8829                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  8830  05DF  3001               	movlw	1
  8831  05E0  0021               	movlb	1	; select bank1
  8832  05E1  00A6               	movwf	??_USBDeviceInit^(0+128)
  8833  05E2  0826               	movf	??_USBDeviceInit^(0+128),w
  8834  05E3  0023               	movlb	3	; select bank3
  8835  05E4  00D9               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  8836                           
  8837                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  8838  05E5  01D8               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  8839                           
  8840                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  8841  05E6  01D7               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  8842                           
  8843                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  8844  05E7  01DF               	clrf	_USBBusIsSuspended^(0+384)	;volatile
  8845                           
  8846                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  8847  05E8  0021               	movlb	1	; select bank1
  8848  05E9  01AA               	clrf	USBDeviceInit@i^(0+128)
  8849  05EA  3003               	movlw	3
  8850  05EB  022A               	subwf	USBDeviceInit@i^(0+128),w
  8851  05EC  1803               	btfsc	3,0
  8852  05ED  2E12               	goto	l8028
  8853  05EE                     l8022:	
  8854                           
  8855                           ;usb_device.c: 346: {
  8856                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  8857  05EE  352A               	lslf	USBDeviceInit@i^(0+128),w
  8858  05EF  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  8859  05F0  0086               	movwf	6
  8860  05F1  3001               	movlw	1	; select bank3/4
  8861  05F2  0087               	movwf	7
  8862  05F3  3000               	movlw	0
  8863  05F4  3FC0               	movwi [0]fsr1
  8864  05F5  3FC1               	movwi [1]fsr1
  8865                           
  8866                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  8867  05F6  352A               	lslf	USBDeviceInit@i^(0+128),w
  8868  05F7  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  8869  05F8  0086               	movwf	6
  8870  05F9  3001               	movlw	1	; select bank3/4
  8871  05FA  0087               	movwf	7
  8872  05FB  3000               	movlw	0
  8873  05FC  3FC0               	movwi [0]fsr1
  8874  05FD  3FC1               	movwi [1]fsr1
  8875                           
  8876                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  8877  05FE  082A               	movf	USBDeviceInit@i^(0+128),w
  8878  05FF  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  8879  0600  0086               	movwf	6
  8880  0601  3001               	movlw	1	; select bank3/4
  8881  0602  0087               	movwf	7
  8882  0603  0181               	clrf	1
  8883                           
  8884                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  8885  0604  082A               	movf	USBDeviceInit@i^(0+128),w
  8886  0605  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  8887  0606  0086               	movwf	6
  8888  0607  3001               	movlw	1	; select bank3/4
  8889  0608  0087               	movwf	7
  8890  0609  0181               	clrf	1
  8891  060A  3001               	movlw	1
  8892  060B  00A6               	movwf	??_USBDeviceInit^(0+128)
  8893  060C  0826               	movf	??_USBDeviceInit^(0+128),w
  8894  060D  07AA               	addwf	USBDeviceInit@i^(0+128),f
  8895  060E  3003               	movlw	3
  8896  060F  022A               	subwf	USBDeviceInit@i^(0+128),w
  8897  0610  1C03               	skipc
  8898  0611  2DEE               	goto	l8022
  8899  0612                     l8028:	
  8900                           
  8901                           ;usb_device.c: 351: }
  8902                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  8903  0612  3028               	movlw	40
  8904  0613  0023               	movlb	3	; select bank3
  8905  0614  00B7               	movwf	_pBDTEntryIn^(0+384)
  8906  0615  3000               	movlw	0
  8907  0616  00B8               	movwf	(_pBDTEntryIn+1)^(0+384)
  8908                           
  8909                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  8910  0617  3016               	movlw	22
  8911  0618  003D               	movlb	29	; select bank29
  8912  0619  0098               	movwf	24	;volatile
  8913                           
  8914                           ;usb_device.c: 358: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  8915  061A  3000               	movlw	0
  8916  061B  0020               	movlb	0	; select bank0
  8917  061C  00A3               	movwf	35	;volatile
  8918  061D  3050               	movlw	80
  8919  061E  00A2               	movwf	34	;volatile
  8920                           
  8921                           ;usb_device.c: 359: BDT[0].CNT = 8;
  8922  061F  3008               	movlw	8
  8923  0620  00A1               	movwf	33	;volatile
  8924                           
  8925                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  8926  0621  3004               	movlw	4
  8927  0622  0021               	movlb	1	; select bank1
  8928  0623  00A6               	movwf	??_USBDeviceInit^(0+128)
  8929  0624  0826               	movf	??_USBDeviceInit^(0+128),w
  8930  0625  0020               	movlb	0	; select bank0
  8931  0626  00A0               	movwf	32	;volatile
  8932                           
  8933                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  8934  0627  17A0               	bsf	32,7	;volatile
  8935                           
  8936                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  8937  0628  0023               	movlb	3	; select bank3
  8938  0629  01EE               	clrf	_USBActiveConfiguration^(0+384)	;volatile
  8939                           
  8940                           ;usb_device.c: 366: USB1msTickCount = 0;
  8941  062A  3000               	movlw	0
  8942  062B  00C6               	movwf	(_USB1msTickCount+3)^(0+384)	;volatile
  8943  062C  3000               	movlw	0
  8944  062D  00C5               	movwf	(_USB1msTickCount+2)^(0+384)	;volatile
  8945  062E  3000               	movlw	0
  8946  062F  00C4               	movwf	(_USB1msTickCount+1)^(0+384)	;volatile
  8947  0630  3000               	movlw	0
  8948  0631  00C3               	movwf	_USB1msTickCount^(0+384)	;volatile
  8949                           
  8950                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  8951  0632  01D6               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  8952                           
  8953                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  8954  0633  01E5               	clrf	_USBDeviceState^(0+384)	;volatile
  8955  0634  0008               	return
  8956  0635                     __end_of_USBDeviceInit:	
  8957                           
  8958                           	psect	text35
  8959  1F06                     __ptext35:	
  8960 ;; *************** function _USBDeviceAttach *****************
  8961 ;; Defined at:
  8962 ;;		line 1352 in file "mcc_generated_files/usb/usb_device.c"
  8963 ;; Parameters:    Size  Location     Type
  8964 ;;		None
  8965 ;; Auto vars:     Size  Location     Type
  8966 ;;		None
  8967 ;; Return value:  Size  Location     Type
  8968 ;;                  1    wreg      void 
  8969 ;; Registers used:
  8970 ;;		wreg, status,2, status,0
  8971 ;; Tracked objects:
  8972 ;;		On entry : 0/0
  8973 ;;		On exit  : 0/0
  8974 ;;		Unchanged: 0/0
  8975 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8978 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8979 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8980 ;;Total ram usage:        1 bytes
  8981 ;; Hardware stack levels used:    1
  8982 ;; Hardware stack levels required when called:   10
  8983 ;; This function calls:
  8984 ;;		Nothing
  8985 ;; This function is called by:
  8986 ;;		_SYSTEM_Initialize
  8987 ;; This function uses a non-reentrant model
  8988 ;;
  8989                           
  8990                           
  8991                           ;psect for function _USBDeviceAttach
  8992  1F06                     _USBDeviceAttach:	
  8993                           
  8994                           ;usb_device.c: 1356: {
  8995                           ;usb_device.c: 1357: if(1 == 1)
  8996                           
  8997                           ;incstack = 0
  8998                           ; Regs used in _USBDeviceAttach: [wreg+status,2+status,0]
  8999  1F06  0023               	movlb	3	; select bank3
  9000  1F07  0865               	movf	_USBDeviceState^(0+384),w	;volatile
  9001  1F08  1D03               	btfss	3,2
  9002  1F09  0008               	return
  9003                           
  9004                           ;usb_device.c: 1358: {
  9005                           ;usb_device.c: 1360: UCON = 0;
  9006  1F0A  003D               	movlb	29	; select bank29
  9007  1F0B  018E               	clrf	14	;volatile
  9008                           
  9009                           ;usb_device.c: 1363: UIE = 0;
  9010  1F0C  0192               	clrf	18	;volatile
  9011                           
  9012                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  9013  1F0D  3016               	movlw	22
  9014  1F0E  0091               	movwf	17	;volatile
  9015  1F0F  309F               	movlw	159
  9016  1F10  0097               	movwf	23	;volatile
  9017  1F11  307B               	movlw	123
  9018  1F12  0092               	movwf	18	;volatile
  9019                           
  9020                           ;usb_device.c: 1369: {PIE2bits.USBIE = 1;INTCONbits.PEIE = 1; INTCONbits.GIE = 1;};
  9021  1F13  0021               	movlb	1	; select bank1
  9022  1F14  1512               	bsf	18,2	;volatile
  9023  1F15  170B               	bsf	11,6	;volatile
  9024  1F16  178B               	bsf	11,7	;volatile
  9025  1F17                     l440:	
  9026                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  9027                           
  9028  1F17  003D               	movlb	29	; select bank29
  9029  1F18  198E               	btfsc	14,3	;volatile
  9030  1F19  2F1C               	goto	l6106
  9031  1F1A  158E               	bsf	14,3	;volatile
  9032  1F1B  2F17               	goto	l440
  9033  1F1C                     l6106:	
  9034                           
  9035                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  9036  1F1C  3001               	movlw	1
  9037  1F1D  0021               	movlb	1	; select bank1
  9038  1F1E  00A6               	movwf	??_USBDeviceAttach^(0+128)
  9039  1F1F  0826               	movf	??_USBDeviceAttach^(0+128),w
  9040  1F20  0023               	movlb	3	; select bank3
  9041  1F21  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
  9042  1F22  0008               	return
  9043  1F23                     __end_of_USBDeviceAttach:	
  9044                           
  9045                           	psect	text36
  9046  1E60                     __ptext36:	
  9047 ;; *************** function _PIN_MANAGER_Initialize *****************
  9048 ;; Defined at:
  9049 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  9050 ;; Parameters:    Size  Location     Type
  9051 ;;		None
  9052 ;; Auto vars:     Size  Location     Type
  9053 ;;		None
  9054 ;; Return value:  Size  Location     Type
  9055 ;;                  1    wreg      void 
  9056 ;; Registers used:
  9057 ;;		wreg, status,2
  9058 ;; Tracked objects:
  9059 ;;		On entry : 0/0
  9060 ;;		On exit  : 0/0
  9061 ;;		Unchanged: 0/0
  9062 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9067 ;;Total ram usage:        0 bytes
  9068 ;; Hardware stack levels used:    1
  9069 ;; Hardware stack levels required when called:   10
  9070 ;; This function calls:
  9071 ;;		Nothing
  9072 ;; This function is called by:
  9073 ;;		_SYSTEM_Initialize
  9074 ;; This function uses a non-reentrant model
  9075 ;;
  9076                           
  9077                           
  9078                           ;psect for function _PIN_MANAGER_Initialize
  9079  1E60                     _PIN_MANAGER_Initialize:	
  9080                           
  9081                           ;pin_manager.c: 57: LATA = 0x00;
  9082                           
  9083                           ;incstack = 0
  9084                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9085  1E60  0022               	movlb	2	; select bank2
  9086  1E61  018C               	clrf	12	;volatile
  9087                           
  9088                           ;pin_manager.c: 58: LATC = 0x00;
  9089  1E62  018E               	clrf	14	;volatile
  9090                           
  9091                           ;pin_manager.c: 63: TRISA = 0x30;
  9092  1E63  3030               	movlw	48
  9093  1E64  0021               	movlb	1	; select bank1
  9094  1E65  008C               	movwf	12	;volatile
  9095                           
  9096                           ;pin_manager.c: 64: TRISC = 0x37;
  9097  1E66  3037               	movlw	55
  9098  1E67  008E               	movwf	14	;volatile
  9099                           
  9100                           ;pin_manager.c: 69: ANSELC = 0x0C;
  9101  1E68  300C               	movlw	12
  9102  1E69  0023               	movlb	3	; select bank3
  9103  1E6A  008E               	movwf	14	;volatile
  9104                           
  9105                           ;pin_manager.c: 70: ANSELA = 0x10;
  9106  1E6B  3010               	movlw	16
  9107  1E6C  008C               	movwf	12	;volatile
  9108                           
  9109                           ;pin_manager.c: 75: WPUA = 0x00;
  9110  1E6D  0024               	movlb	4	; select bank4
  9111  1E6E  018C               	clrf	12	;volatile
  9112                           
  9113                           ;pin_manager.c: 76: OPTION_REGbits.nWPUEN = 1;
  9114  1E6F  0021               	movlb	1	; select bank1
  9115  1E70  1795               	bsf	21,7	;volatile
  9116                           
  9117                           ;pin_manager.c: 82: APFCON = 0x00;
  9118  1E71  0022               	movlb	2	; select bank2
  9119  1E72  019D               	clrf	29	;volatile
  9120  1E73  0008               	return
  9121  1E74                     __end_of_PIN_MANAGER_Initialize:	
  9122                           
  9123                           	psect	text37
  9124  1DE7                     __ptext37:	
  9125 ;; *************** function _OSCILLATOR_Initialize *****************
  9126 ;; Defined at:
  9127 ;;		line 83 in file "mcc_generated_files/mcc.c"
  9128 ;; Parameters:    Size  Location     Type
  9129 ;;		None
  9130 ;; Auto vars:     Size  Location     Type
  9131 ;;		None
  9132 ;; Return value:  Size  Location     Type
  9133 ;;                  1    wreg      void 
  9134 ;; Registers used:
  9135 ;;		wreg, status,2
  9136 ;; Tracked objects:
  9137 ;;		On entry : 0/0
  9138 ;;		On exit  : 0/0
  9139 ;;		Unchanged: 0/0
  9140 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9145 ;;Total ram usage:        0 bytes
  9146 ;; Hardware stack levels used:    1
  9147 ;; Hardware stack levels required when called:   10
  9148 ;; This function calls:
  9149 ;;		Nothing
  9150 ;; This function is called by:
  9151 ;;		_SYSTEM_Initialize
  9152 ;; This function uses a non-reentrant model
  9153 ;;
  9154                           
  9155                           
  9156                           ;psect for function _OSCILLATOR_Initialize
  9157  1DE7                     _OSCILLATOR_Initialize:	
  9158                           
  9159                           ;mcc.c: 86: OSCCON = 0x7C;
  9160                           
  9161                           ;incstack = 0
  9162                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9163  1DE7  307C               	movlw	124
  9164  1DE8  0021               	movlb	1	; select bank1
  9165  1DE9  0099               	movwf	25	;volatile
  9166                           
  9167                           ;mcc.c: 88: OSCTUNE = 0x00;
  9168  1DEA  0198               	clrf	24	;volatile
  9169                           
  9170                           ;mcc.c: 90: ACTCON = 0x00;
  9171  1DEB  0027               	movlb	7	; select bank7
  9172  1DEC  019B               	clrf	27	;volatile
  9173                           
  9174                           ;mcc.c: 92: BORCON = 0x00;
  9175  1DED  0022               	movlb	2	; select bank2
  9176  1DEE  0196               	clrf	22	;volatile
  9177  1DEF                     l56:	
  9178                           ;mcc.c: 95: {
  9179                           
  9180                           ;mcc.c: 94: while(PLLRDY == 0)
  9181                           
  9182  1DEF  0021               	movlb	1	; select bank1
  9183  1DF0  1B1A               	btfsc	26,6	;volatile
  9184  1DF1  0008               	return
  9185  1DF2  2DEF               	goto	l56
  9186  1DF3                     __end_of_OSCILLATOR_Initialize:	
  9187                           
  9188                           	psect	text38
  9189  04B2                     __ptext38:	
  9190 ;; *************** function _CDCTxService *****************
  9191 ;; Defined at:
  9192 ;;		line 835 in file "mcc_generated_files/usb/usb_device_cdc.c"
  9193 ;; Parameters:    Size  Location     Type
  9194 ;;		None
  9195 ;; Auto vars:     Size  Location     Type
  9196 ;;  byte_to_send    1   19[BANK1 ] unsigned char 
  9197 ;;  i               1   18[BANK1 ] unsigned char 
  9198 ;; Return value:  Size  Location     Type
  9199 ;;                  1    wreg      void 
  9200 ;; Registers used:
  9201 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9202 ;; Tracked objects:
  9203 ;;		On entry : 0/0
  9204 ;;		On exit  : 0/0
  9205 ;;		Unchanged: 0/0
  9206 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9208 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9209 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9210 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9211 ;;Total ram usage:        3 bytes
  9212 ;; Hardware stack levels used:    1
  9213 ;; Hardware stack levels required when called:   11
  9214 ;; This function calls:
  9215 ;;		_USBTransferOnePacket
  9216 ;; This function is called by:
  9217 ;;		_main
  9218 ;; This function uses a non-reentrant model
  9219 ;;
  9220                           
  9221                           
  9222                           ;psect for function _CDCTxService
  9223  04B2                     _CDCTxService:	
  9224                           
  9225                           ;usb_device_cdc.c: 837: uint8_t byte_to_send;
  9226                           ;usb_device_cdc.c: 838: uint8_t i;
  9227                           ;usb_device_cdc.c: 840: {PIE2bits.USBIE = 0;};
  9228                           
  9229                           ;incstack = 0
  9230                           ; Regs used in _CDCTxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9231  04B2  0021               	movlb	1	; select bank1
  9232  04B3  1112               	bcf	18,2	;volatile
  9233                           
  9234                           ;usb_device_cdc.c: 842: {};
  9235                           ;usb_device_cdc.c: 844: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
  9236  04B4  0023               	movlb	3	; select bank3
  9237  04B5  084D               	movf	_CDCDataInHandle^(0+384),w
  9238  04B6  044E               	iorwf	(_CDCDataInHandle+1)^(0+384),w
  9239  04B7  1903               	btfsc	3,2
  9240  04B8  2CC2               	goto	l8256
  9241  04B9  084D               	movf	_CDCDataInHandle^(0+384),w
  9242  04BA  0086               	movwf	6
  9243  04BB  084E               	movf	(_CDCDataInHandle+1)^(0+384),w
  9244  04BC  0087               	movwf	7
  9245  04BD  1F81               	btfss	1,7
  9246  04BE  2CC2               	goto	l8256
  9247                           
  9248                           ;usb_device_cdc.c: 845: {
  9249                           ;usb_device_cdc.c: 846: {PIE2bits.USBIE = 1;};
  9250  04BF  0021               	movlb	1	; select bank1
  9251  04C0  1512               	bsf	18,2	;volatile
  9252                           
  9253                           ;usb_device_cdc.c: 847: return;
  9254  04C1  0008               	return
  9255  04C2                     l8256:	
  9256                           
  9257                           ;usb_device_cdc.c: 848: }
  9258                           ;usb_device_cdc.c: 855: if(cdc_trf_state == 3)
  9259  04C2  3003               	movlw	3
  9260  04C3  0023               	movlb	3	; select bank3
  9261  04C4  0669               	xorwf	_cdc_trf_state^(0+384),w
  9262  04C5  1903               	btfsc	3,2
  9263                           
  9264                           ;usb_device_cdc.c: 856: cdc_trf_state = 0;
  9265  04C6  01E9               	clrf	_cdc_trf_state^(0+384)
  9266                           
  9267                           ;usb_device_cdc.c: 861: if(cdc_trf_state == 0)
  9268  04C7  0869               	movf	_cdc_trf_state^(0+384),w
  9269  04C8  1D03               	btfss	3,2
  9270  04C9  2CCD               	goto	l8264
  9271                           
  9272                           ;usb_device_cdc.c: 862: {
  9273                           ;usb_device_cdc.c: 863: {PIE2bits.USBIE = 1;};
  9274  04CA  0021               	movlb	1	; select bank1
  9275  04CB  1512               	bsf	18,2	;volatile
  9276                           
  9277                           ;usb_device_cdc.c: 864: return;
  9278  04CC  0008               	return
  9279  04CD                     l8264:	
  9280                           
  9281                           ;usb_device_cdc.c: 865: }
  9282                           ;usb_device_cdc.c: 870: if(cdc_trf_state == 2)
  9283  04CD  3002               	movlw	2
  9284  04CE  0023               	movlb	3	; select bank3
  9285  04CF  0669               	xorwf	_cdc_trf_state^(0+384),w
  9286  04D0  1D03               	btfss	3,2
  9287  04D1  2CED               	goto	l8270
  9288                           
  9289                           ;usb_device_cdc.c: 871: {
  9290                           ;usb_device_cdc.c: 872: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  9291  04D2  0021               	movlb	1	; select bank1
  9292  04D3  01A6               	clrf	USBTransferOnePacket@dir^(0+128)
  9293  04D4  0AA6               	incf	USBTransferOnePacket@dir^(0+128),f
  9294  04D5  3000               	movlw	0
  9295  04D6  00A7               	movwf	USBTransferOnePacket@data^(0+128)
  9296  04D7  3000               	movlw	0
  9297  04D8  00A8               	movwf	(USBTransferOnePacket@data+1)^(0+128)
  9298  04D9  01A9               	clrf	USBTransferOnePacket@len^(0+128)
  9299  04DA  3002               	movlw	2
  9300  04DB  318C  2495  3184   	fcall	_USBTransferOnePacket
  9301  04DE  0021               	movlb	1	; select bank1
  9302  04DF  0827               	movf	(?_USBTransferOnePacket+1)^(0+128),w
  9303  04E0  0023               	movlb	3	; select bank3
  9304  04E1  00CE               	movwf	(_CDCDataInHandle+1)^(0+384)
  9305  04E2  0021               	movlb	1	; select bank1
  9306  04E3  0826               	movf	?_USBTransferOnePacket^(0+128),w
  9307  04E4  0023               	movlb	3	; select bank3
  9308  04E5  00CD               	movwf	_CDCDataInHandle^(0+384)
  9309                           
  9310                           ;usb_device_cdc.c: 874: cdc_trf_state = 3;
  9311  04E6  3003               	movlw	3
  9312  04E7  0021               	movlb	1	; select bank1
  9313  04E8  00B1               	movwf	??_CDCTxService^(0+128)
  9314  04E9  0831               	movf	??_CDCTxService^(0+128),w
  9315  04EA  0023               	movlb	3	; select bank3
  9316  04EB  00E9               	movwf	_cdc_trf_state^(0+384)
  9317                           
  9318                           ;usb_device_cdc.c: 875: }
  9319  04EC  2D7B               	goto	l8316
  9320  04ED                     l8270:	
  9321                           
  9322                           ;usb_device_cdc.c: 876: else if(cdc_trf_state == 1)
  9323  04ED  0369               	decf	_cdc_trf_state^(0+384),w
  9324  04EE  1D03               	btfss	3,2
  9325  04EF  2D7B               	goto	l8316
  9326                           
  9327                           ;usb_device_cdc.c: 877: {
  9328                           ;usb_device_cdc.c: 881: if(cdc_tx_len > sizeof(cdc_data_tx))
  9329  04F0  3041               	movlw	65
  9330  04F1  0268               	subwf	_cdc_tx_len^(0+384),w
  9331  04F2  1C03               	skipc
  9332  04F3  2CF6               	goto	l8276
  9333                           
  9334                           ;usb_device_cdc.c: 882: byte_to_send = sizeof(cdc_data_tx);
  9335  04F4  3040               	movlw	64
  9336  04F5  2CF8               	goto	L9
  9337  04F6                     l8276:	
  9338                           
  9339                           ;usb_device_cdc.c: 883: else
  9340                           ;usb_device_cdc.c: 884: byte_to_send = cdc_tx_len;
  9341  04F6  0023               	movlb	3	; select bank3
  9342  04F7  0868               	movf	_cdc_tx_len^(0+384),w
  9343  04F8                     L9:	
  9344  04F8  0021               	movlb	1	; select bank1
  9345  04F9  00B1               	movwf	??_CDCTxService^(0+128)
  9346  04FA  0831               	movf	??_CDCTxService^(0+128),w
  9347  04FB  00B3               	movwf	CDCTxService@byte_to_send^(0+128)
  9348                           
  9349                           ;usb_device_cdc.c: 889: cdc_tx_len = cdc_tx_len - byte_to_send;
  9350  04FC  0333               	decf	CDCTxService@byte_to_send^(0+128),w
  9351  04FD  3AFF               	xorlw	255
  9352  04FE  0023               	movlb	3	; select bank3
  9353  04FF  0768               	addwf	_cdc_tx_len^(0+384),w
  9354  0500  0021               	movlb	1	; select bank1
  9355  0501  00B1               	movwf	??_CDCTxService^(0+128)
  9356  0502  0831               	movf	??_CDCTxService^(0+128),w
  9357  0503  0023               	movlb	3	; select bank3
  9358  0504  00E8               	movwf	_cdc_tx_len^(0+384)
  9359                           
  9360                           ;usb_device_cdc.c: 891: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  9361  0505  3020               	movlw	32
  9362  0506  00D2               	movwf	(_pCDCDst+1)^(0+384)
  9363  0507  3080               	movlw	128
  9364  0508  00D1               	movwf	_pCDCDst^(0+384)
  9365                           
  9366                           ;usb_device_cdc.c: 893: i = byte_to_send;
  9367  0509  0021               	movlb	1	; select bank1
  9368  050A  0833               	movf	CDCTxService@byte_to_send^(0+128),w
  9369  050B  00B1               	movwf	??_CDCTxService^(0+128)
  9370  050C  0831               	movf	??_CDCTxService^(0+128),w
  9371  050D  00B2               	movwf	CDCTxService@i^(0+128)
  9372                           
  9373                           ;usb_device_cdc.c: 894: if(cdc_mem_type == 0x00)
  9374  050E  0023               	movlb	3	; select bank3
  9375  050F  0867               	movf	_cdc_mem_type^(0+384),w
  9376  0510  1903               	btfsc	3,2
  9377  0511  2D2F               	goto	l8294
  9378  0512  2D50               	goto	l8304
  9379  0513                     l8286:	
  9380                           ;usb_device_cdc.c: 895: {
  9381                           ;usb_device_cdc.c: 896: while(i)
  9382                           
  9383                           
  9384                           ;usb_device_cdc.c: 897: {
  9385                           ;usb_device_cdc.c: 898: *pCDCDst.bRam = *pCDCSrc.bRom;
  9386  0513  0023               	movlb	3	; select bank3
  9387  0514  0853               	movf	_pCDCSrc^(0+384),w
  9388  0515  0086               	movwf	6
  9389  0516  0854               	movf	(_pCDCSrc+1)^(0+384),w
  9390  0517  0087               	movwf	7
  9391  0518  0801               	movf	1,w
  9392  0519  0021               	movlb	1	; select bank1
  9393  051A  00B1               	movwf	??_CDCTxService^(0+128)
  9394  051B  0023               	movlb	3	; select bank3
  9395  051C  0851               	movf	_pCDCDst^(0+384),w
  9396  051D  0086               	movwf	6
  9397  051E  0852               	movf	(_pCDCDst+1)^(0+384),w
  9398  051F  0087               	movwf	7
  9399  0520  0021               	movlb	1	; select bank1
  9400  0521  0831               	movf	??_CDCTxService^(0+128),w
  9401  0522  0081               	movwf	1
  9402                           
  9403                           ;usb_device_cdc.c: 899: pCDCDst.bRam++;
  9404  0523  3001               	movlw	1
  9405  0524  0023               	movlb	3	; select bank3
  9406  0525  07D1               	addwf	_pCDCDst^(0+384),f
  9407  0526  3000               	movlw	0
  9408  0527  3DD2               	addwfc	(_pCDCDst+1)^(0+384),f
  9409                           
  9410                           ;usb_device_cdc.c: 900: pCDCSrc.bRom++;
  9411  0528  3001               	movlw	1
  9412  0529  07D3               	addwf	_pCDCSrc^(0+384),f
  9413  052A  3000               	movlw	0
  9414  052B  3DD4               	addwfc	(_pCDCSrc+1)^(0+384),f
  9415                           
  9416                           ;usb_device_cdc.c: 901: i--;
  9417  052C  3001               	movlw	1
  9418  052D  0021               	movlb	1	; select bank1
  9419  052E  02B2               	subwf	CDCTxService@i^(0+128),f
  9420  052F                     l8294:	
  9421  052F  0021               	movlb	1	; select bank1
  9422  0530  0832               	movf	CDCTxService@i^(0+128),w
  9423  0531  1903               	btfsc	3,2
  9424  0532  2D54               	goto	l8306
  9425  0533  2D13               	goto	l8286
  9426  0534                     l8296:	
  9427                           ;usb_device_cdc.c: 904: else
  9428                           ;usb_device_cdc.c: 905: {
  9429                           ;usb_device_cdc.c: 906: while(i)
  9430                           
  9431                           ;usb_device_cdc.c: 902: }
  9432                           ;usb_device_cdc.c: 903: }
  9433                           
  9434                           
  9435                           ;usb_device_cdc.c: 907: {
  9436                           ;usb_device_cdc.c: 908: *pCDCDst.bRam = *pCDCSrc.bRam;
  9437  0534  0023               	movlb	3	; select bank3
  9438  0535  0853               	movf	_pCDCSrc^(0+384),w
  9439  0536  0086               	movwf	6
  9440  0537  0854               	movf	(_pCDCSrc+1)^(0+384),w
  9441  0538  0087               	movwf	7
  9442  0539  0801               	movf	1,w
  9443  053A  0021               	movlb	1	; select bank1
  9444  053B  00B1               	movwf	??_CDCTxService^(0+128)
  9445  053C  0023               	movlb	3	; select bank3
  9446  053D  0851               	movf	_pCDCDst^(0+384),w
  9447  053E  0086               	movwf	6
  9448  053F  0852               	movf	(_pCDCDst+1)^(0+384),w
  9449  0540  0087               	movwf	7
  9450  0541  0021               	movlb	1	; select bank1
  9451  0542  0831               	movf	??_CDCTxService^(0+128),w
  9452  0543  0081               	movwf	1
  9453                           
  9454                           ;usb_device_cdc.c: 909: pCDCDst.bRam++;
  9455  0544  3001               	movlw	1
  9456  0545  0023               	movlb	3	; select bank3
  9457  0546  07D1               	addwf	_pCDCDst^(0+384),f
  9458  0547  3000               	movlw	0
  9459  0548  3DD2               	addwfc	(_pCDCDst+1)^(0+384),f
  9460                           
  9461                           ;usb_device_cdc.c: 910: pCDCSrc.bRam++;
  9462  0549  3001               	movlw	1
  9463  054A  07D3               	addwf	_pCDCSrc^(0+384),f
  9464  054B  3000               	movlw	0
  9465  054C  3DD4               	addwfc	(_pCDCSrc+1)^(0+384),f
  9466                           
  9467                           ;usb_device_cdc.c: 911: i--;
  9468  054D  3001               	movlw	1
  9469  054E  0021               	movlb	1	; select bank1
  9470  054F  02B2               	subwf	CDCTxService@i^(0+128),f
  9471  0550                     l8304:	
  9472  0550  0021               	movlb	1	; select bank1
  9473  0551  0832               	movf	CDCTxService@i^(0+128),w
  9474  0552  1D03               	btfss	3,2
  9475  0553  2D34               	goto	l8296
  9476  0554                     l8306:	
  9477                           
  9478                           ;usb_device_cdc.c: 912: }
  9479                           ;usb_device_cdc.c: 913: }
  9480                           ;usb_device_cdc.c: 919: if(cdc_tx_len == 0)
  9481  0554  0023               	movlb	3	; select bank3
  9482  0555  0868               	movf	_cdc_tx_len^(0+384),w
  9483  0556  1D03               	btfss	3,2
  9484  0557  2D65               	goto	l8314
  9485                           
  9486                           ;usb_device_cdc.c: 920: {
  9487                           ;usb_device_cdc.c: 921: if(byte_to_send == 64)
  9488  0558  3040               	movlw	64
  9489  0559  0021               	movlb	1	; select bank1
  9490  055A  0633               	xorwf	CDCTxService@byte_to_send^(0+128),w
  9491  055B  1D03               	btfss	3,2
  9492  055C  2D5F               	goto	l8312
  9493                           
  9494                           ;usb_device_cdc.c: 922: cdc_trf_state = 2;
  9495  055D  3002               	movlw	2
  9496  055E  2D61               	goto	L10
  9497  055F                     l8312:	
  9498                           
  9499                           ;usb_device_cdc.c: 923: else
  9500                           ;usb_device_cdc.c: 924: cdc_trf_state = 3;
  9501  055F  3003               	movlw	3
  9502  0560  0021               	movlb	1	; select bank1
  9503  0561                     L10:	
  9504  0561  00B1               	movwf	??_CDCTxService^(0+128)
  9505  0562  0831               	movf	??_CDCTxService^(0+128),w
  9506  0563  0023               	movlb	3	; select bank3
  9507  0564  00E9               	movwf	_cdc_trf_state^(0+384)
  9508  0565                     l8314:	
  9509                           
  9510                           ;usb_device_cdc.c: 925: }
  9511                           ;usb_device_cdc.c: 926: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  9512  0565  0021               	movlb	1	; select bank1
  9513  0566  01A6               	clrf	USBTransferOnePacket@dir^(0+128)
  9514  0567  0AA6               	incf	USBTransferOnePacket@dir^(0+128),f
  9515  0568  3080               	movlw	128
  9516  0569  00A7               	movwf	USBTransferOnePacket@data^(0+128)
  9517  056A  3020               	movlw	32
  9518  056B  00A8               	movwf	(USBTransferOnePacket@data^(0+128)+1)
  9519  056C  0833               	movf	CDCTxService@byte_to_send^(0+128),w
  9520  056D  00B1               	movwf	??_CDCTxService^(0+128)
  9521  056E  0831               	movf	??_CDCTxService^(0+128),w
  9522  056F  00A9               	movwf	USBTransferOnePacket@len^(0+128)
  9523  0570  3002               	movlw	2
  9524  0571  318C  2495         	fcall	_USBTransferOnePacket
  9525  0573  0021               	movlb	1	; select bank1
  9526  0574  0827               	movf	(?_USBTransferOnePacket+1)^(0+128),w
  9527  0575  0023               	movlb	3	; select bank3
  9528  0576  00CE               	movwf	(_CDCDataInHandle+1)^(0+384)
  9529  0577  0021               	movlb	1	; select bank1
  9530  0578  0826               	movf	?_USBTransferOnePacket^(0+128),w
  9531  0579  0023               	movlb	3	; select bank3
  9532  057A  00CD               	movwf	_CDCDataInHandle^(0+384)
  9533  057B                     l8316:	
  9534                           
  9535                           ;usb_device_cdc.c: 928: }
  9536                           ;usb_device_cdc.c: 930: {PIE2bits.USBIE = 1;};
  9537  057B  0021               	movlb	1	; select bank1
  9538  057C  1512               	bsf	18,2	;volatile
  9539  057D  0008               	return
  9540  057E                     __end_of_CDCTxService:	
  9541                           
  9542                           	psect	text39
  9543  0C95                     __ptext39:	
  9544 ;; *************** function _USBTransferOnePacket *****************
  9545 ;; Defined at:
  9546 ;;		line 995 in file "mcc_generated_files/usb/usb_device.c"
  9547 ;; Parameters:    Size  Location     Type
  9548 ;;  ep              1    wreg     unsigned char 
  9549 ;;  dir             1    6[BANK1 ] unsigned char 
  9550 ;;  data            2    7[BANK1 ] PTR unsigned char 
  9551 ;;		 -> cdc_data_tx(64), NULL(0), cdc_data_rx(64), 
  9552 ;;  len             1    9[BANK1 ] unsigned char 
  9553 ;; Auto vars:     Size  Location     Type
  9554 ;;  ep              1   14[BANK1 ] unsigned char 
  9555 ;;  handle          2   15[BANK1 ] PTR volatile struct __BD
  9556 ;;		 -> RAM(4096), BDT(48), NULL(0), 
  9557 ;; Return value:  Size  Location     Type
  9558 ;;                  2    6[BANK1 ] PTR void 
  9559 ;; Registers used:
  9560 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9561 ;; Tracked objects:
  9562 ;;		On entry : 0/0
  9563 ;;		On exit  : 0/0
  9564 ;;		Unchanged: 0/0
  9565 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9566 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9567 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9568 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9569 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0
  9570 ;;Total ram usage:       11 bytes
  9571 ;; Hardware stack levels used:    1
  9572 ;; Hardware stack levels required when called:   10
  9573 ;; This function calls:
  9574 ;;		Nothing
  9575 ;; This function is called by:
  9576 ;;		_CDCInitEP
  9577 ;;		_getsUSBUSART
  9578 ;;		_CDCTxService
  9579 ;;		_USBCDCEventHandler
  9580 ;; This function uses a non-reentrant model
  9581 ;;
  9582                           
  9583                           
  9584                           ;psect for function _USBTransferOnePacket
  9585  0C95                     _USBTransferOnePacket:	
  9586                           
  9587                           ;incstack = 0
  9588                           ; Regs used in _USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
  9589                           ;USBTransferOnePacket@ep stored from wreg
  9590  0C95  0021               	movlb	1	; select bank1
  9591  0C96  00AE               	movwf	USBTransferOnePacket@ep^(0+128)
  9592                           
  9593                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  9594                           ;usb_device.c: 1000: if(dir != 0)
  9595  0C97  0826               	movf	USBTransferOnePacket@dir^(0+128),w
  9596  0C98  1903               	btfsc	3,2
  9597  0C99  2CA3               	goto	l7334
  9598                           
  9599                           ;usb_device.c: 1001: {
  9600                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  9601  0C9A  352E               	lslf	USBTransferOnePacket@ep^(0+128),w
  9602  0C9B  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  9603  0C9C  0086               	movwf	6
  9604  0C9D  3001               	movlw	1	; select bank3/4
  9605  0C9E  0087               	movwf	7
  9606  0C9F  3F40               	moviw [0]fsr1
  9607  0CA0  00AF               	movwf	USBTransferOnePacket@handle^(0+128)
  9608  0CA1  3F41               	moviw [1]fsr1
  9609  0CA2  2CAB               	goto	L11
  9610  0CA3                     l7334:	
  9611                           ;usb_device.c: 1004: }
  9612                           
  9613                           
  9614                           ;usb_device.c: 1005: else
  9615                           ;usb_device.c: 1006: {
  9616                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  9617  0CA3  352E               	lslf	USBTransferOnePacket@ep^(0+128),w
  9618  0CA4  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  9619  0CA5  0086               	movwf	6
  9620  0CA6  3001               	movlw	1	; select bank3/4
  9621  0CA7  0087               	movwf	7
  9622  0CA8  3F40               	moviw [0]fsr1
  9623  0CA9  00AF               	movwf	USBTransferOnePacket@handle^(0+128)
  9624  0CAA  3F41               	moviw [1]fsr1
  9625  0CAB                     L11:	
  9626  0CAB  00B0               	movwf	(USBTransferOnePacket@handle+1)^(0+128)
  9627                           
  9628                           ;usb_device.c: 1009: }
  9629                           ;usb_device.c: 1013: if(handle == 0)
  9630  0CAC  082F               	movf	USBTransferOnePacket@handle^(0+128),w
  9631  0CAD  0430               	iorwf	(USBTransferOnePacket@handle+1)^(0+128),w
  9632  0CAE  1D03               	btfss	3,2
  9633  0CAF  2CB3               	goto	l7342
  9634                           
  9635                           ;usb_device.c: 1014: {
  9636                           ;usb_device.c: 1015: return 0;
  9637  0CB0  01A6               	clrf	?_USBTransferOnePacket^(0+128)
  9638  0CB1  01A7               	clrf	(?_USBTransferOnePacket+1)^(0+128)
  9639  0CB2  0008               	return
  9640  0CB3                     l7342:	
  9641                           
  9642                           ;usb_device.c: 1016: }
  9643                           ;usb_device.c: 1029: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
  9644  0CB3  30FF               	movlw	255
  9645  0CB4  0527               	andwf	USBTransferOnePacket@data^(0+128),w
  9646  0CB5  00AA               	movwf	??_USBTransferOnePacket^(0+128)
  9647  0CB6  307F               	movlw	127
  9648  0CB7  0528               	andwf	(USBTransferOnePacket@data+1)^(0+128),w
  9649  0CB8  00AB               	movwf	(??_USBTransferOnePacket+1)^(0+128)
  9650  0CB9  082F               	movf	USBTransferOnePacket@handle^(0+128),w
  9651  0CBA  0086               	movwf	6
  9652  0CBB  0830               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  9653  0CBC  0087               	movwf	7
  9654  0CBD  3142               	addfsr 1,2
  9655  0CBE  082A               	movf	??_USBTransferOnePacket^(0+128),w
  9656  0CBF  3FC0               	movwi [0]fsr1
  9657  0CC0  082B               	movf	(??_USBTransferOnePacket^(0+128)+1),w
  9658  0CC1  3FC1               	movwi [1]fsr1
  9659                           
  9660                           ;usb_device.c: 1030: handle->CNT = len;
  9661  0CC2  082F               	movf	USBTransferOnePacket@handle^(0+128),w
  9662  0CC3  3E01               	addlw	1
  9663  0CC4  00AA               	movwf	??_USBTransferOnePacket^(0+128)
  9664  0CC5  3000               	movlw	0
  9665  0CC6  3D30               	addwfc	(USBTransferOnePacket@handle+1)^(0+128),w
  9666  0CC7  00AB               	movwf	(??_USBTransferOnePacket+1)^(0+128)
  9667  0CC8  082A               	movf	??_USBTransferOnePacket^(0+128),w
  9668  0CC9  0086               	movwf	6
  9669  0CCA  082B               	movf	(??_USBTransferOnePacket+1)^(0+128),w
  9670  0CCB  0087               	movwf	7
  9671  0CCC  0829               	movf	USBTransferOnePacket@len^(0+128),w
  9672  0CCD  0081               	movwf	1
  9673                           
  9674                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  9675  0CCE  3040               	movlw	64
  9676  0CCF  00AA               	movwf	??_USBTransferOnePacket^(0+128)
  9677  0CD0  082F               	movf	USBTransferOnePacket@handle^(0+128),w
  9678  0CD1  0086               	movwf	6
  9679  0CD2  0830               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  9680  0CD3  0087               	movwf	7
  9681  0CD4  082A               	movf	??_USBTransferOnePacket^(0+128),w
  9682  0CD5  0581               	andwf	1,f
  9683                           
  9684                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  9685  0CD6  082F               	movf	USBTransferOnePacket@handle^(0+128),w
  9686  0CD7  0086               	movwf	6
  9687  0CD8  0830               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  9688  0CD9  0087               	movwf	7
  9689  0CDA  1581               	bsf	1,3
  9690                           
  9691                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  9692  0CDB  082F               	movf	USBTransferOnePacket@handle^(0+128),w
  9693  0CDC  0086               	movwf	6
  9694  0CDD  0830               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  9695  0CDE  0087               	movwf	7
  9696  0CDF  1781               	bsf	1,7
  9697                           
  9698                           ;usb_device.c: 1036: if(dir != 0)
  9699  0CE0  0826               	movf	USBTransferOnePacket@dir^(0+128),w
  9700  0CE1  1903               	btfsc	3,2
  9701  0CE2  2CFC               	goto	l7352
  9702                           
  9703                           ;usb_device.c: 1037: {
  9704                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  9705  0CE3  352E               	lslf	USBTransferOnePacket@ep^(0+128),w
  9706  0CE4  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  9707  0CE5  0086               	movwf	6
  9708  0CE6  3001               	movlw	1	; select bank3/4
  9709  0CE7  0087               	movwf	7
  9710  0CE8  3F40               	moviw [0]fsr1
  9711  0CE9  00AA               	movwf	??_USBTransferOnePacket^(0+128)
  9712  0CEA  3F41               	moviw [1]fsr1
  9713  0CEB  00AB               	movwf	(??_USBTransferOnePacket^(0+128)+1)
  9714  0CEC  3004               	movlw	4
  9715  0CED  062A               	xorwf	??_USBTransferOnePacket^(0+128),w
  9716  0CEE  00AC               	movwf	(??_USBTransferOnePacket+2)^(0+128)
  9717  0CEF  3000               	movlw	0
  9718  0CF0  062B               	xorwf	(??_USBTransferOnePacket+1)^(0+128),w
  9719  0CF1  00AD               	movwf	(??_USBTransferOnePacket+3)^(0+128)
  9720  0CF2  352E               	lslf	USBTransferOnePacket@ep^(0+128),w
  9721  0CF3  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  9722  0CF4  0086               	movwf	6
  9723  0CF5  3001               	movlw	1	; select bank3/4
  9724  0CF6  0087               	movwf	7
  9725  0CF7  082C               	movf	(??_USBTransferOnePacket+2)^(0+128),w
  9726  0CF8  3FC0               	movwi [0]fsr1
  9727  0CF9  082D               	movf	(??_USBTransferOnePacket+3)^(0+128),w
  9728  0CFA  3FC1               	movwi [1]fsr1
  9729                           
  9730                           ;usb_device.c: 1040: }
  9731  0CFB  2D14               	goto	l7354
  9732  0CFC                     l7352:	
  9733                           
  9734                           ;usb_device.c: 1041: else
  9735                           ;usb_device.c: 1042: {
  9736                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  9737  0CFC  352E               	lslf	USBTransferOnePacket@ep^(0+128),w
  9738  0CFD  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  9739  0CFE  0086               	movwf	6
  9740  0CFF  3001               	movlw	1	; select bank3/4
  9741  0D00  0087               	movwf	7
  9742  0D01  3F40               	moviw [0]fsr1
  9743  0D02  00AA               	movwf	??_USBTransferOnePacket^(0+128)
  9744  0D03  3F41               	moviw [1]fsr1
  9745  0D04  00AB               	movwf	(??_USBTransferOnePacket^(0+128)+1)
  9746  0D05  3004               	movlw	4
  9747  0D06  062A               	xorwf	??_USBTransferOnePacket^(0+128),w
  9748  0D07  00AC               	movwf	(??_USBTransferOnePacket+2)^(0+128)
  9749  0D08  3000               	movlw	0
  9750  0D09  062B               	xorwf	(??_USBTransferOnePacket+1)^(0+128),w
  9751  0D0A  00AD               	movwf	(??_USBTransferOnePacket+3)^(0+128)
  9752  0D0B  352E               	lslf	USBTransferOnePacket@ep^(0+128),w
  9753  0D0C  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  9754  0D0D  0086               	movwf	6
  9755  0D0E  3001               	movlw	1	; select bank3/4
  9756  0D0F  0087               	movwf	7
  9757  0D10  082C               	movf	(??_USBTransferOnePacket+2)^(0+128),w
  9758  0D11  3FC0               	movwi [0]fsr1
  9759  0D12  082D               	movf	(??_USBTransferOnePacket+3)^(0+128),w
  9760  0D13  3FC1               	movwi [1]fsr1
  9761  0D14                     l7354:	
  9762                           
  9763                           ;usb_device.c: 1045: }
  9764                           ;usb_device.c: 1046: return (void*)handle;
  9765  0D14  0830               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  9766  0D15  00A7               	movwf	(?_USBTransferOnePacket+1)^(0+128)
  9767  0D16  082F               	movf	USBTransferOnePacket@handle^(0+128),w
  9768  0D17  00A6               	movwf	?_USBTransferOnePacket^(0+128)
  9769  0D18  0008               	return
  9770  0D19                     __end_of_USBTransferOnePacket:	
  9771                           
  9772                           	psect	intentry
  9773  0004                     __pintentry:	
  9774 ;; *************** function _INTERRUPT_InterruptManager *****************
  9775 ;; Defined at:
  9776 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  9777 ;; Parameters:    Size  Location     Type
  9778 ;;		None
  9779 ;; Auto vars:     Size  Location     Type
  9780 ;;		None
  9781 ;; Return value:  Size  Location     Type
  9782 ;;                  1    wreg      void 
  9783 ;; Registers used:
  9784 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9785 ;; Tracked objects:
  9786 ;;		On entry : 0/0
  9787 ;;		On exit  : 0/0
  9788 ;;		Unchanged: 0/0
  9789 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9792 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9793 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9794 ;;Total ram usage:        1 bytes
  9795 ;; Hardware stack levels used:    1
  9796 ;; Hardware stack levels required when called:    9
  9797 ;; This function calls:
  9798 ;;		Absolute function
  9799 ;;		_i2c_ISR
  9800 ;;		_i2c_busCollisionISR
  9801 ;;		i1_USBDeviceTasks
  9802 ;; This function is called by:
  9803 ;;		Interrupt level 1
  9804 ;; This function uses a non-reentrant model
  9805 ;;
  9806                           
  9807  0004                     _INTERRUPT_InterruptManager:	
  9808                           
  9809                           ;incstack = 0
  9810 ;; hardware stack exceeded
  9811  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  9812                           
  9813                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9814  0005  3180               	pagesel	$
  9815  0006  0020               	movlb	0	; select bank0
  9816  0007  087F               	movf	127,w
  9817  0008  0021               	movlb	1	; select bank1
  9818  0009  00A5               	movwf	??_INTERRUPT_InterruptManager^(0+128)
  9819                           
  9820                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1)
  9821  000A  1F0B               	btfss	11,6	;volatile
  9822  000B  282E               	goto	i1l91
  9823                           
  9824                           ;interrupt_manager.c: 55: {
  9825                           ;interrupt_manager.c: 56: if(PIE2bits.USBIE == 1 && PIR2bits.USBIF == 1)
  9826  000C  1D12               	btfss	18,2	;volatile
  9827  000D  2815               	goto	i1l84
  9828  000E  0020               	movlb	0	; select bank0
  9829  000F  1D12               	btfss	18,2	;volatile
  9830  0010  2815               	goto	i1l84
  9831                           
  9832                           ;interrupt_manager.c: 57: {
  9833                           ;interrupt_manager.c: 58: USBDeviceTasks();
  9834  0011  3183  23CA  3180   	fcall	i1_USBDeviceTasks
  9835                           
  9836                           ;interrupt_manager.c: 59: }
  9837  0014  282E               	goto	i1l91
  9838  0015                     i1l84:	
  9839                           
  9840                           ;interrupt_manager.c: 60: else if(PIE2bits.BCL1IE == 1 && PIR2bits.BCL1IF == 1)
  9841  0015  0021               	movlb	1	; select bank1
  9842  0016  1D92               	btfss	18,3	;volatile
  9843  0017  2822               	goto	i1l86
  9844  0018  0020               	movlb	0	; select bank0
  9845  0019  1D92               	btfss	18,3	;volatile
  9846  001A  2822               	goto	i1l86
  9847                           
  9848                           ;interrupt_manager.c: 61: {
  9849                           ;interrupt_manager.c: 62: i2c_driver_busCollisionISR();
  9850  001B  0024               	movlb	4	; select bank4
  9851  001C  084E               	movf	(_i2c_driver_busCollisionISR+1)^(0+512),w
  9852  001D  008A               	movwf	10
  9853  001E  084D               	movf	_i2c_driver_busCollisionISR^(0+512),w
  9854  001F  000A               	callw
  9855  0020  3180               	pagesel	$
  9856                           
  9857                           ;interrupt_manager.c: 63: }
  9858  0021  282E               	goto	i1l91
  9859  0022                     i1l86:	
  9860                           
  9861                           ;interrupt_manager.c: 64: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
  9862  0022  0021               	movlb	1	; select bank1
  9863  0023  1D91               	btfss	17,3	;volatile
  9864  0024  282E               	goto	i1l91
  9865  0025  0020               	movlb	0	; select bank0
  9866  0026  1D91               	btfss	17,3	;volatile
  9867  0027  282E               	goto	i1l91
  9868                           
  9869                           ;interrupt_manager.c: 65: {
  9870                           ;interrupt_manager.c: 66: i2c_driver_i2cISR();
  9871  0028  0024               	movlb	4	; select bank4
  9872  0029  084C               	movf	(_i2c_driver_i2cISR+1)^(0+512),w
  9873  002A  008A               	movwf	10
  9874  002B  084B               	movf	_i2c_driver_i2cISR^(0+512),w
  9875  002C  000A               	callw
  9876  002D  3180               	pagesel	$
  9877  002E                     i1l91:	
  9878                           ;interrupt_manager.c: 73: else
  9879                           ;interrupt_manager.c: 74: {
  9880                           
  9881                           ;interrupt_manager.c: 71: }
  9882                           ;interrupt_manager.c: 72: }
  9883                           
  9884                           ;interrupt_manager.c: 68: else
  9885                           ;interrupt_manager.c: 69: {
  9886                           
  9887                           ;interrupt_manager.c: 67: }
  9888                           
  9889  002E  0021               	movlb	1	; select bank1
  9890  002F  0825               	movf	??_INTERRUPT_InterruptManager^(0+128),w
  9891  0030  0020               	movlb	0	; select bank0
  9892  0031  00FF               	movwf	127
  9893  0032  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  9894  0033  0009               	retfie
  9895  0034                     __end_of_INTERRUPT_InterruptManager:	
  9896                           
  9897                           	psect	text41
  9898  03CA                     __ptext41:	
  9899 ;; *************** function i1_USBDeviceTasks *****************
  9900 ;; Defined at:
  9901 ;;		line 477 in file "mcc_generated_files/usb/usb_device.c"
  9902 ;; Parameters:    Size  Location     Type
  9903 ;;		None
  9904 ;; Auto vars:     Size  Location     Type
  9905 ;;  USBDeviceTas    1   15[BANK0h] unsigned char 
  9906 ;; Return value:  Size  Location     Type
  9907 ;;                  1    wreg      void 
  9908 ;; Registers used:
  9909 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9910 ;; Tracked objects:
  9911 ;;		On entry : 0/0
  9912 ;;		On exit  : 0/0
  9913 ;;		Unchanged: 0/0
  9914 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9916 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9917 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9918 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9919 ;;Total ram usage:        3 bytes
  9920 ;; Hardware stack levels used:    1
  9921 ;; Hardware stack levels required when called:    8
  9922 ;; This function calls:
  9923 ;;		i1_USBCtrlEPAllowStatusStage
  9924 ;;		i1_USBCtrlEPService
  9925 ;;		i1_USBDeviceInit
  9926 ;;		i1_USBIncrement1msInternalTimers
  9927 ;;		i1_USBStallHandler
  9928 ;;		i1_USBSuspend
  9929 ;;		i1_USBWakeFromSuspend
  9930 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
  9931 ;; This function is called by:
  9932 ;;		_INTERRUPT_InterruptManager
  9933 ;; This function uses a non-reentrant model
  9934 ;;
  9935                           
  9936                           
  9937                           ;psect for function i1_USBDeviceTasks
  9938  03CA                     i1_USBDeviceTasks:	
  9939                           
  9940                           ;usb_device.c: 479: uint8_t i;
  9941                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
  9942                           
  9943                           ;incstack = 0
  9944 ;; hardware stack exceeded
  9945                           ; Regs used in i1_USBDeviceTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9946  03CA  0023               	movlb	3	; select bank3
  9947  03CB  0365               	decf	_USBDeviceState^(0+384),w	;volatile
  9948  03CC  1D03               	btfss	3,2
  9949  03CD  2BDA               	goto	i1l6832
  9950                           
  9951                           ;usb_device.c: 591: {
  9952                           ;usb_device.c: 601: if(!UCONbits.SE0)
  9953  03CE  003D               	movlb	29	; select bank29
  9954  03CF  1A8E               	btfsc	14,5	;volatile
  9955  03D0  2BDA               	goto	i1l6832
  9956                           
  9957                           ;usb_device.c: 602: {
  9958                           ;usb_device.c: 608: {UIR = 0;};
  9959  03D1  0190               	clrf	16	;volatile
  9960                           
  9961                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
  9962  03D2  1412               	bsf	18,0	;volatile
  9963                           
  9964                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
  9965  03D3  1612               	bsf	18,4	;volatile
  9966                           
  9967                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
  9968  03D4  3002               	movlw	2
  9969  03D5  0021               	movlb	1	; select bank1
  9970  03D6  00A3               	movwf	??i1_USBDeviceTasks^(0+128)
  9971  03D7  0823               	movf	??i1_USBDeviceTasks^(0+128),w
  9972  03D8  0023               	movlb	3	; select bank3
  9973  03D9  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
  9974  03DA                     i1l6832:	
  9975                           
  9976                           ;usb_device.c: 617: }
  9977                           ;usb_device.c: 618: }
  9978                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  9979  03DA  003D               	movlb	29	; select bank29
  9980  03DB  1910               	btfsc	16,2	;volatile
  9981  03DC  1D12               	btfss	18,2	;volatile
  9982  03DD  2BE7               	goto	i1l6840
  9983                           
  9984                           ;usb_device.c: 635: {
  9985                           ;usb_device.c: 636: (UIR &= 0xFB);
  9986  03DE  30FB               	movlw	251
  9987  03DF  0021               	movlb	1	; select bank1
  9988  03E0  00A3               	movwf	??i1_USBDeviceTasks^(0+128)
  9989  03E1  0823               	movf	??i1_USBDeviceTasks^(0+128),w
  9990  03E2  003D               	movlb	29	; select bank29
  9991  03E3  0590               	andwf	16,f	;volatile
  9992                           
  9993                           ;usb_device.c: 640: USBWakeFromSuspend();
  9994  03E4  319F  27C0  3183   	fcall	i1_USBWakeFromSuspend
  9995  03E7                     i1l6840:	
  9996                           
  9997                           ;usb_device.c: 642: }
  9998                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
  9999  03E7  003D               	movlb	29	; select bank29
 10000  03E8  1C8E               	btfss	14,1	;volatile
 10001  03E9  2BED               	goto	i1l391
 10002                           
 10003                           ;usb_device.c: 648: {
 10004                           ;usb_device.c: 649: PIR2bits.USBIF = 0;;
 10005  03EA  0020               	movlb	0	; select bank0
 10006  03EB  1112               	bcf	18,2	;volatile
 10007                           
 10008                           ;usb_device.c: 650: return;
 10009  03EC  0008               	return
 10010  03ED                     i1l391:	
 10011                           
 10012                           ;usb_device.c: 651: }
 10013                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 10014  03ED  1810               	btfsc	16,0	;volatile
 10015  03EE  1C12               	btfss	18,0	;volatile
 10016  03EF  2C00               	goto	i1l6854
 10017                           
 10018                           ;usb_device.c: 664: {
 10019                           ;usb_device.c: 665: USBDeviceInit();
 10020  03F0  3186  26E7  3183   	fcall	i1_USBDeviceInit
 10021                           
 10022                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
 10023  03F3  0021               	movlb	1	; select bank1
 10024  03F4  1512               	bsf	18,2	;volatile
 10025                           
 10026                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 10027  03F5  3004               	movlw	4
 10028  03F6  00A3               	movwf	??i1_USBDeviceTasks^(0+128)
 10029  03F7  0823               	movf	??i1_USBDeviceTasks^(0+128),w
 10030  03F8  0023               	movlb	3	; select bank3
 10031  03F9  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
 10032                           
 10033                           ;usb_device.c: 681: (UIR &= 0xFE);
 10034  03FA  30FE               	movlw	254
 10035  03FB  0021               	movlb	1	; select bank1
 10036  03FC  00A3               	movwf	??i1_USBDeviceTasks^(0+128)
 10037  03FD  0823               	movf	??i1_USBDeviceTasks^(0+128),w
 10038  03FE  003D               	movlb	29	; select bank29
 10039  03FF  0590               	andwf	16,f	;volatile
 10040  0400                     i1l6854:	
 10041                           
 10042                           ;usb_device.c: 682: }
 10043                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 10044  0400  1A10               	btfsc	16,4	;volatile
 10045  0401  1E12               	btfss	18,4	;volatile
 10046  0402  2C06               	goto	i1l6860
 10047                           
 10048                           ;usb_device.c: 688: {
 10049                           ;usb_device.c: 694: USBSuspend();
 10050  0403  319F  2723  3183   	fcall	i1_USBSuspend
 10051  0406                     i1l6860:	
 10052                           
 10053                           ;usb_device.c: 696: }
 10054                           ;usb_device.c: 708: if(UIRbits.SOFIF)
 10055  0406  003D               	movlb	29	; select bank29
 10056  0407  1F10               	btfss	16,6	;volatile
 10057  0408  2C30               	goto	i1l6876
 10058                           
 10059                           ;usb_device.c: 709: {
 10060                           ;usb_device.c: 711: if(UIEbits.SOFIE)
 10061  0409  1F12               	btfss	18,6	;volatile
 10062  040A  2C1B               	goto	i1l6866
 10063                           
 10064                           ;usb_device.c: 712: {
 10065                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 10066  040B  3073               	movlw	115
 10067  040C  0020               	movlb	0	; select bank0
 10068  040D  00E0               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 10069  040E  3000               	movlw	0
 10070  040F  00E1               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 10071  0410  3000               	movlw	0
 10072  0411  00E2               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 10073  0412  3000               	movlw	0
 10074  0413  00E3               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 10075  0414  3001               	movlw	1
 10076  0415  00E4               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 10077  0416  3000               	movlw	0
 10078  0417  00E5               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 10079  0418  3191  2115  3183   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 10080  041B                     i1l6866:	
 10081                           
 10082                           ;usb_device.c: 714: }
 10083                           ;usb_device.c: 715: (UIR &= 0xBF);
 10084  041B  30BF               	movlw	191
 10085  041C  0021               	movlb	1	; select bank1
 10086  041D  00A3               	movwf	??i1_USBDeviceTasks^(0+128)
 10087  041E  0823               	movf	??i1_USBDeviceTasks^(0+128),w
 10088  041F  003D               	movlb	29	; select bank29
 10089  0420  0590               	andwf	16,f	;volatile
 10090                           
 10091                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 10092  0421  319E  26B9  3183   	fcall	i1_USBIncrement1msInternalTimers
 10093                           
 10094                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 10095  0424  0023               	movlb	3	; select bank3
 10096  0425  085C               	movf	_USBStatusStageTimeoutCounter^(0+384),w	;volatile
 10097  0426  1903               	btfsc	3,2
 10098  0427  2C2A               	goto	i1l397
 10099                           
 10100                           ;usb_device.c: 736: {
 10101                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 10102  0428  3001               	movlw	1
 10103  0429  02DC               	subwf	_USBStatusStageTimeoutCounter^(0+384),f	;volatile
 10104  042A                     i1l397:	
 10105                           
 10106                           ;usb_device.c: 738: }
 10107                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 10108  042A  085C               	movf	_USBStatusStageTimeoutCounter^(0+384),w	;volatile
 10109  042B  1D03               	btfss	3,2
 10110  042C  2C30               	goto	i1l6876
 10111                           
 10112                           ;usb_device.c: 745: {
 10113                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 10114  042D  3187  2794  3183   	fcall	i1_USBCtrlEPAllowStatusStage
 10115  0430                     i1l6876:	
 10116                           
 10117                           ;usb_device.c: 747: }
 10118                           ;usb_device.c: 749: }
 10119                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 10120  0430  003D               	movlb	29	; select bank29
 10121  0431  1A90               	btfsc	16,5	;volatile
 10122  0432  1E92               	btfss	18,5	;volatile
 10123  0433  2C37               	goto	i1l6882
 10124                           
 10125                           ;usb_device.c: 752: {
 10126                           ;usb_device.c: 753: USBStallHandler();
 10127  0434  3190  2073  3183   	fcall	i1_USBStallHandler
 10128  0437                     i1l6882:	
 10129                           
 10130                           ;usb_device.c: 754: }
 10131                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 10132  0437  003D               	movlb	29	; select bank29
 10133  0438  1890               	btfsc	16,1	;volatile
 10134  0439  1C92               	btfss	18,1	;volatile
 10135  043A  2C4D               	goto	i1l6890
 10136                           
 10137                           ;usb_device.c: 757: {
 10138                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 10139  043B  30FF               	movlw	255
 10140  043C  0020               	movlb	0	; select bank0
 10141  043D  00E0               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 10142  043E  307F               	movlw	127
 10143  043F  00E1               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 10144  0440  3000               	movlw	0
 10145  0441  00E2               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 10146  0442  3000               	movlw	0
 10147  0443  00E3               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 10148  0444  3001               	movlw	1
 10149  0445  00E4               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 10150  0446  3000               	movlw	0
 10151  0447  00E5               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 10152  0448  3191  2115  3183   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 10153                           
 10154                           ;usb_device.c: 759: {UEIR = 0;};
 10155  044B  003D               	movlb	29	; select bank29
 10156  044C  0193               	clrf	19	;volatile
 10157  044D                     i1l6890:	
 10158                           
 10159                           ;usb_device.c: 767: }
 10160                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 10161  044D  3004               	movlw	4
 10162  044E  0023               	movlb	3	; select bank3
 10163  044F  0265               	subwf	_USBDeviceState^(0+384),w	;volatile
 10164  0450  1803               	skipnc
 10165  0451  2C55               	goto	i1l401
 10166                           
 10167                           ;usb_device.c: 775: {
 10168                           ;usb_device.c: 776: PIR2bits.USBIF = 0;;
 10169  0452  0020               	movlb	0	; select bank0
 10170  0453  1112               	bcf	18,2	;volatile
 10171                           
 10172                           ;usb_device.c: 777: return;
 10173  0454  0008               	return
 10174  0455                     i1l401:	
 10175                           
 10176                           ;usb_device.c: 778: }
 10177                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 10178  0455  003D               	movlb	29	; select bank29
 10179  0456  1D92               	btfss	18,3	;volatile
 10180  0457  2CAF               	goto	i1l402
 10181                           
 10182                           ;usb_device.c: 784: {
 10183                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 10184  0458  0020               	movlb	0	; select bank0
 10185  0459  01EF               	clrf	i1USBDeviceTasks@i
 10186  045A  3004               	movlw	4
 10187  045B  026F               	subwf	i1USBDeviceTasks@i,w
 10188  045C  1803               	btfsc	3,0
 10189  045D  2CAF               	goto	i1l402
 10190  045E                     i1l403:	
 10191                           
 10192                           ;usb_device.c: 786: {
 10193                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 10194  045E  003D               	movlb	29	; select bank29
 10195  045F  1D90               	btfss	16,3	;volatile
 10196  0460  2CAF               	goto	i1l402
 10197                           
 10198                           ;usb_device.c: 788: {
 10199                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 10200  0461  080F               	movf	15,w	;volatile
 10201  0462  0021               	movlb	1	; select bank1
 10202  0463  00A3               	movwf	??i1_USBDeviceTasks^(0+128)
 10203  0464  0823               	movf	??i1_USBDeviceTasks^(0+128),w
 10204  0465  0023               	movlb	3	; select bank3
 10205  0466  00ED               	movwf	_USTATcopy^(0+384)	;volatile
 10206                           
 10207                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 10208  0467  0C6D               	rrf	_USTATcopy^(0+384),w	;volatile
 10209  0468  0021               	movlb	1	; select bank1
 10210  0469  00A3               	movwf	??i1_USBDeviceTasks^(0+128)
 10211  046A  0CA3               	rrf	??i1_USBDeviceTasks^(0+128),f
 10212  046B  0C23               	rrf	??i1_USBDeviceTasks^(0+128),w
 10213  046C  390F               	andlw	15
 10214  046D  00A4               	movwf	(??i1_USBDeviceTasks+1)^(0+128)
 10215  046E  0824               	movf	(??i1_USBDeviceTasks+1)^(0+128),w
 10216  046F  0023               	movlb	3	; select bank3
 10217  0470  00DE               	movwf	_endpoint_number^(0+384)	;volatile
 10218                           
 10219                           ;usb_device.c: 793: (UIR &= 0xF7);
 10220  0471  30F7               	movlw	247
 10221  0472  0021               	movlb	1	; select bank1
 10222  0473  00A3               	movwf	??i1_USBDeviceTasks^(0+128)
 10223  0474  0823               	movf	??i1_USBDeviceTasks^(0+128),w
 10224  0475  003D               	movlb	29	; select bank29
 10225  0476  0590               	andwf	16,f	;volatile
 10226                           
 10227                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 10228  0477  0023               	movlb	3	; select bank3
 10229  0478  196D               	btfsc	_USTATcopy^(0+384),2	;volatile
 10230  0479  2C7D               	goto	i1l6910
 10231                           
 10232                           ;usb_device.c: 799: {
 10233                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 10234  047A  085E               	movf	_endpoint_number^(0+384),w	;volatile
 10235  047B  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
 10236  047C  2C80               	goto	L12
 10237  047D                     i1l6910:	
 10238                           ;usb_device.c: 801: }
 10239                           
 10240                           
 10241                           ;usb_device.c: 802: else
 10242                           ;usb_device.c: 803: {
 10243                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 10244  047D  0023               	movlb	3	; select bank3
 10245  047E  085E               	movf	_endpoint_number^(0+384),w	;volatile
 10246  047F  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
 10247  0480                     L12:	
 10248  0480  0086               	movwf	6
 10249  0481  3001               	movlw	1	; select bank3/4
 10250  0482  0087               	movwf	7
 10251  0483  0801               	movf	1,w
 10252  0484  3901               	andlw	1
 10253  0485  0021               	movlb	1	; select bank1
 10254  0486  00A3               	movwf	??i1_USBDeviceTasks^(0+128)
 10255  0487  3001               	movlw	1
 10256  0488  06A3               	xorwf	??i1_USBDeviceTasks^(0+128),f
 10257  0489  0801               	movf	1,w
 10258  048A  0623               	xorwf	??i1_USBDeviceTasks^(0+128),w
 10259  048B  39FE               	andlw	-2
 10260  048C  0623               	xorwf	??i1_USBDeviceTasks^(0+128),w
 10261  048D  0081               	movwf	1
 10262                           
 10263                           ;usb_device.c: 805: }
 10264                           ;usb_device.c: 810: if(endpoint_number == 0)
 10265  048E  0023               	movlb	3	; select bank3
 10266  048F  085E               	movf	_endpoint_number^(0+384),w	;volatile
 10267  0490  1D03               	btfss	3,2
 10268  0491  2C96               	goto	i1l6916
 10269                           
 10270                           ;usb_device.c: 811: {
 10271                           ;usb_device.c: 812: USBCtrlEPService();
 10272  0492  3195  25CC  3183   	fcall	i1_USBCtrlEPService
 10273                           
 10274                           ;usb_device.c: 813: }
 10275  0495  2CA5               	goto	i1l6918
 10276  0496                     i1l6916:	
 10277                           
 10278                           ;usb_device.c: 814: else
 10279                           ;usb_device.c: 815: {
 10280                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 10281  0496  3072               	movlw	114
 10282  0497  0020               	movlb	0	; select bank0
 10283  0498  00E0               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 10284  0499  3000               	movlw	0
 10285  049A  00E1               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 10286  049B  30ED               	movlw	low _USTATcopy
 10287  049C  00E2               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 10288  049D  3001               	movlw	high _USTATcopy
 10289  049E  00E3               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 10290  049F  3000               	movlw	0
 10291  04A0  00E4               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 10292  04A1  00E5               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 10293  04A2  3191  2115  3183   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 10294  04A5                     i1l6918:	
 10295                           ;usb_device.c: 819: else
 10296                           ;usb_device.c: 820: {
 10297                           ;usb_device.c: 821: break;
 10298                           
 10299                           ;usb_device.c: 817: }
 10300                           ;usb_device.c: 818: }
 10301                           
 10302  04A5  3001               	movlw	1
 10303  04A6  0021               	movlb	1	; select bank1
 10304  04A7  00A3               	movwf	??i1_USBDeviceTasks^(0+128)
 10305  04A8  0823               	movf	??i1_USBDeviceTasks^(0+128),w
 10306  04A9  0020               	movlb	0	; select bank0
 10307  04AA  07EF               	addwf	i1USBDeviceTasks@i,f
 10308  04AB  3004               	movlw	4
 10309  04AC  026F               	subwf	i1USBDeviceTasks@i,w
 10310  04AD  1C03               	skipc
 10311  04AE  2C5E               	goto	i1l403
 10312  04AF                     i1l402:	
 10313                           
 10314                           ;usb_device.c: 822: }
 10315                           ;usb_device.c: 823: }
 10316                           ;usb_device.c: 824: }
 10317                           ;usb_device.c: 826: PIR2bits.USBIF = 0;;
 10318  04AF  0020               	movlb	0	; select bank0
 10319  04B0  1112               	bcf	18,2	;volatile
 10320  04B1  0008               	return
 10321  04B2                     __end_ofi1_USBDeviceTasks:	
 10322                           
 10323                           	psect	text42
 10324  1FC0                     __ptext42:	
 10325 ;; *************** function i1_USBWakeFromSuspend *****************
 10326 ;; Defined at:
 10327 ;;		line 2303 in file "mcc_generated_files/usb/usb_device.c"
 10328 ;; Parameters:    Size  Location     Type
 10329 ;;		None
 10330 ;; Auto vars:     Size  Location     Type
 10331 ;;		None
 10332 ;; Return value:  Size  Location     Type
 10333 ;;                  1    wreg      void 
 10334 ;; Registers used:
 10335 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10336 ;; Tracked objects:
 10337 ;;		On entry : 0/0
 10338 ;;		On exit  : 0/0
 10339 ;;		Unchanged: 0/0
 10340 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10343 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10344 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10345 ;;Total ram usage:        1 bytes
 10346 ;; Hardware stack levels used:    1
 10347 ;; Hardware stack levels required when called:    4
 10348 ;; This function calls:
 10349 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 10350 ;; This function is called by:
 10351 ;;		i1_USBDeviceTasks
 10352 ;; This function uses a non-reentrant model
 10353 ;;
 10354                           
 10355                           
 10356                           ;psect for function i1_USBWakeFromSuspend
 10357  1FC0                     i1_USBWakeFromSuspend:	
 10358                           
 10359                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
 10360                           
 10361                           ;incstack = 0
 10362                           ; Regs used in i1_USBWakeFromSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10363  1FC0  0023               	movlb	3	; select bank3
 10364  1FC1  01DF               	clrf	_USBBusIsSuspended^(0+384)	;volatile
 10365                           
 10366                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 10367  1FC2  3074               	movlw	116
 10368  1FC3  0020               	movlb	0	; select bank0
 10369  1FC4  00E0               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 10370  1FC5  3000               	movlw	0
 10371  1FC6  00E1               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 10372  1FC7  3000               	movlw	0
 10373  1FC8  00E2               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 10374  1FC9  3000               	movlw	0
 10375  1FCA  00E3               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 10376  1FCB  3000               	movlw	0
 10377  1FCC  00E4               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 10378  1FCD  00E5               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 10379  1FCE  3191  2115  319F   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 10380                           
 10381                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
 10382  1FD1  003D               	movlb	29	; select bank29
 10383  1FD2  108E               	bcf	14,1	;volatile
 10384                           
 10385                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
 10386  1FD3  1112               	bcf	18,2	;volatile
 10387  1FD4                     i1l6520:	
 10388                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
 10389                           
 10390  1FD4  1D10               	btfss	16,2	;volatile
 10391  1FD5  2FDD               	goto	i1l6522
 10392                           
 10393                           ;usb_device.c: 2343: {
 10394                           ;usb_device.c: 2344: (UIR &= 0xFB);
 10395  1FD6  30FB               	movlw	251
 10396  1FD7  0020               	movlb	0	; select bank0
 10397  1FD8  00E6               	movwf	??i1_USBWakeFromSuspend
 10398  1FD9  0866               	movf	??i1_USBWakeFromSuspend,w
 10399  1FDA  003D               	movlb	29	; select bank29
 10400  1FDB  0590               	andwf	16,f	;volatile
 10401  1FDC  2FD4               	goto	i1l6520
 10402  1FDD                     i1l6522:	
 10403                           
 10404                           ;usb_device.c: 2345: }
 10405                           ;usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
 10406  1FDD  0023               	movlb	3	; select bank3
 10407  1FDE  01D6               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
 10408  1FDF  0008               	return
 10409  1FE0                     __end_ofi1_USBWakeFromSuspend:	
 10410                           
 10411                           	psect	text43
 10412  1F23                     __ptext43:	
 10413 ;; *************** function i1_USBSuspend *****************
 10414 ;; Defined at:
 10415 ;;		line 2245 in file "mcc_generated_files/usb/usb_device.c"
 10416 ;; Parameters:    Size  Location     Type
 10417 ;;		None
 10418 ;; Auto vars:     Size  Location     Type
 10419 ;;		None
 10420 ;; Return value:  Size  Location     Type
 10421 ;;                  1    wreg      void 
 10422 ;; Registers used:
 10423 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10424 ;; Tracked objects:
 10425 ;;		On entry : 0/0
 10426 ;;		On exit  : 0/0
 10427 ;;		Unchanged: 0/0
 10428 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10431 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10432 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10433 ;;Total ram usage:        1 bytes
 10434 ;; Hardware stack levels used:    1
 10435 ;; Hardware stack levels required when called:    4
 10436 ;; This function calls:
 10437 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 10438 ;; This function is called by:
 10439 ;;		i1_USBDeviceTasks
 10440 ;; This function uses a non-reentrant model
 10441 ;;
 10442                           
 10443                           
 10444                           ;psect for function i1_USBSuspend
 10445  1F23                     i1_USBSuspend:	
 10446                           
 10447                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 10448                           
 10449                           ;incstack = 0
 10450                           ; Regs used in i1_USBSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10451  1F23  003D               	movlb	29	; select bank29
 10452  1F24  1512               	bsf	18,2	;volatile
 10453                           
 10454                           ;usb_device.c: 2271: (UIR &= 0xEF);
 10455  1F25  30EF               	movlw	239
 10456  1F26  0020               	movlb	0	; select bank0
 10457  1F27  00E6               	movwf	??i1_USBSuspend
 10458  1F28  0866               	movf	??i1_USBSuspend,w
 10459  1F29  003D               	movlb	29	; select bank29
 10460  1F2A  0590               	andwf	16,f	;volatile
 10461                           
 10462                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 10463  1F2B  148E               	bsf	14,1	;volatile
 10464                           
 10465                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 10466  1F2C  3001               	movlw	1
 10467  1F2D  0020               	movlb	0	; select bank0
 10468  1F2E  00E6               	movwf	??i1_USBSuspend
 10469  1F2F  0866               	movf	??i1_USBSuspend,w
 10470  1F30  0023               	movlb	3	; select bank3
 10471  1F31  00DF               	movwf	_USBBusIsSuspended^(0+384)	;volatile
 10472                           
 10473                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
 10474  1F32  01D6               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
 10475                           
 10476                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 10477  1F33  3075               	movlw	117
 10478  1F34  0020               	movlb	0	; select bank0
 10479  1F35  00E0               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 10480  1F36  3000               	movlw	0
 10481  1F37  00E1               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 10482  1F38  3000               	movlw	0
 10483  1F39  00E2               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 10484  1F3A  3000               	movlw	0
 10485  1F3B  00E3               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 10486  1F3C  3000               	movlw	0
 10487  1F3D  00E4               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 10488  1F3E  00E5               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 10489  1F3F  3191  2115         	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 10490  1F41  0008               	return
 10491  1F42                     __end_ofi1_USBSuspend:	
 10492                           
 10493                           	psect	text44
 10494  1073                     __ptext44:	
 10495 ;; *************** function i1_USBStallHandler *****************
 10496 ;; Defined at:
 10497 ;;		line 2202 in file "mcc_generated_files/usb/usb_device.c"
 10498 ;; Parameters:    Size  Location     Type
 10499 ;;		None
 10500 ;; Auto vars:     Size  Location     Type
 10501 ;;		None
 10502 ;; Return value:  Size  Location     Type
 10503 ;;                  1    wreg      void 
 10504 ;; Registers used:
 10505 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10506 ;; Tracked objects:
 10507 ;;		On entry : 0/0
 10508 ;;		On exit  : 0/0
 10509 ;;		Unchanged: 0/0
 10510 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10513 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10514 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10515 ;;Total ram usage:        1 bytes
 10516 ;; Hardware stack levels used:    1
 10517 ;; This function calls:
 10518 ;;		Nothing
 10519 ;; This function is called by:
 10520 ;;		i1_USBDeviceTasks
 10521 ;; This function uses a non-reentrant model
 10522 ;;
 10523                           
 10524                           
 10525                           ;psect for function i1_USBStallHandler
 10526  1073                     i1_USBStallHandler:	
 10527                           
 10528                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 10529                           
 10530                           ;incstack = 0
 10531                           ; Regs used in i1_USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 10532  1073  003D               	movlb	29	; select bank29
 10533  1074  1C18               	btfss	24,0	;volatile
 10534  1075  2893               	goto	i1l6496
 10535                           
 10536                           ;usb_device.c: 2215: {
 10537                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 10538  1076  0023               	movlb	3	; select bank3
 10539  1077  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 10540  1078  0086               	movwf	6
 10541  1079  0187               	clrf	7
 10542  107A  3080               	movlw	128
 10543  107B  0601               	xorwf	1,w
 10544  107C  1D03               	btfss	3,2
 10545  107D  2891               	goto	i1l6494
 10546  107E  0837               	movf	_pBDTEntryIn^(0+384),w
 10547  107F  0086               	movwf	6
 10548  1080  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 10549  1081  0087               	movwf	7
 10550  1082  3084               	movlw	132
 10551  1083  0601               	xorwf	1,w
 10552  1084  1D03               	btfss	3,2
 10553  1085  2891               	goto	i1l6494
 10554                           
 10555                           ;usb_device.c: 2218: {
 10556                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 10557  1086  300C               	movlw	12
 10558  1087  00F0               	movwf	??i1_USBStallHandler
 10559  1088  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 10560  1089  0086               	movwf	6
 10561  108A  0187               	clrf	7
 10562  108B  0870               	movf	??i1_USBStallHandler,w
 10563  108C  0081               	movwf	1
 10564                           
 10565                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 10566  108D  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 10567  108E  0086               	movwf	6
 10568  108F  0187               	clrf	7
 10569  1090  1781               	bsf	1,7
 10570  1091                     i1l6494:	
 10571                           
 10572                           ;usb_device.c: 2222: }
 10573                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 10574  1091  003D               	movlb	29	; select bank29
 10575  1092  1018               	bcf	24,0	;volatile
 10576  1093                     i1l6496:	
 10577                           
 10578                           ;usb_device.c: 2224: }
 10579                           ;usb_device.c: 2226: (UIR &= 0xDF);
 10580  1093  30DF               	movlw	223
 10581  1094  00F0               	movwf	??i1_USBStallHandler
 10582  1095  0870               	movf	??i1_USBStallHandler,w
 10583  1096  0590               	andwf	16,f	;volatile
 10584  1097  0008               	return
 10585  1098                     __end_ofi1_USBStallHandler:	
 10586                           
 10587                           	psect	text45
 10588  1EB9                     __ptext45:	
 10589 ;; *************** function i1_USBIncrement1msInternalTimers *****************
 10590 ;; Defined at:
 10591 ;;		line 3025 in file "mcc_generated_files/usb/usb_device.c"
 10592 ;; Parameters:    Size  Location     Type
 10593 ;;		None
 10594 ;; Auto vars:     Size  Location     Type
 10595 ;;		None
 10596 ;; Return value:  Size  Location     Type
 10597 ;;                  1    wreg      void 
 10598 ;; Registers used:
 10599 ;;		wreg, status,2, status,0
 10600 ;; Tracked objects:
 10601 ;;		On entry : 0/0
 10602 ;;		On exit  : 0/0
 10603 ;;		Unchanged: 0/0
 10604 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10607 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10608 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10609 ;;Total ram usage:        1 bytes
 10610 ;; Hardware stack levels used:    1
 10611 ;; This function calls:
 10612 ;;		Nothing
 10613 ;; This function is called by:
 10614 ;;		i1_USBDeviceTasks
 10615 ;; This function uses a non-reentrant model
 10616 ;;
 10617                           
 10618                           
 10619                           ;psect for function i1_USBIncrement1msInternalTimers
 10620  1EB9                     i1_USBIncrement1msInternalTimers:	
 10621                           
 10622                           ;usb_device.c: 3033: USB1msTickCount++;
 10623                           
 10624                           ;incstack = 0
 10625                           ; Regs used in i1_USBIncrement1msInternalTimers: [wreg+status,2+status,0]
 10626  1EB9  3001               	movlw	1
 10627  1EBA  0023               	movlb	3	; select bank3
 10628  1EBB  07C3               	addwf	_USB1msTickCount^(0+384),f	;volatile
 10629  1EBC  3000               	movlw	0
 10630  1EBD  3DC4               	addwfc	(_USB1msTickCount+1)^(0+384),f	;volatile
 10631  1EBE  3000               	movlw	0
 10632  1EBF  3DC5               	addwfc	(_USB1msTickCount+2)^(0+384),f	;volatile
 10633  1EC0  3000               	movlw	0
 10634  1EC1  3DC6               	addwfc	(_USB1msTickCount+3)^(0+384),f	;volatile
 10635                           
 10636                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
 10637  1EC2  085F               	movf	_USBBusIsSuspended^(0+384),w	;volatile
 10638  1EC3  1D03               	btfss	3,2
 10639  1EC4  0008               	return
 10640                           
 10641                           ;usb_device.c: 3035: {
 10642                           ;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
 10643  1EC5  3001               	movlw	1
 10644  1EC6  00F0               	movwf	??i1_USBIncrement1msInternalTimers
 10645  1EC7  0870               	movf	??i1_USBIncrement1msInternalTimers,w
 10646  1EC8  07D6               	addwf	_USBTicksSinceSuspendEnd^(0+384),f	;volatile
 10647                           
 10648                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
 10649  1EC9  0856               	movf	_USBTicksSinceSuspendEnd^(0+384),w	;volatile
 10650  1ECA  1D03               	btfss	3,2
 10651  1ECB  0008               	return
 10652                           
 10653                           ;usb_device.c: 3039: {
 10654                           ;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
 10655  1ECC  30FF               	movlw	255
 10656  1ECD  00F0               	movwf	??i1_USBIncrement1msInternalTimers
 10657  1ECE  0870               	movf	??i1_USBIncrement1msInternalTimers,w
 10658  1ECF  00D6               	movwf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
 10659  1ED0  0008               	return
 10660  1ED1                     __end_ofi1_USBIncrement1msInternalTimers:	
 10661                           
 10662                           	psect	text46
 10663  06E7                     __ptext46:	
 10664 ;; *************** function i1_USBDeviceInit *****************
 10665 ;; Defined at:
 10666 ;;		line 277 in file "mcc_generated_files/usb/usb_device.c"
 10667 ;; Parameters:    Size  Location     Type
 10668 ;;		None
 10669 ;; Auto vars:     Size  Location     Type
 10670 ;;  USBDeviceIni    2    1[COMMON] PTR unsigned char 
 10671 ;;		 -> UEP1(1), 
 10672 ;;  USBDeviceIni    1    4[COMMON] unsigned char 
 10673 ;;  USBDeviceIni    1    3[COMMON] unsigned char 
 10674 ;; Return value:  Size  Location     Type
 10675 ;;                  1    wreg      void 
 10676 ;; Registers used:
 10677 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10678 ;; Tracked objects:
 10679 ;;		On entry : 0/0
 10680 ;;		On exit  : 0/0
 10681 ;;		Unchanged: 0/0
 10682 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10684 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10685 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10686 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10687 ;;Total ram usage:        5 bytes
 10688 ;; Hardware stack levels used:    1
 10689 ;; This function calls:
 10690 ;;		Nothing
 10691 ;; This function is called by:
 10692 ;;		i1_USBDeviceTasks
 10693 ;; This function uses a non-reentrant model
 10694 ;;
 10695                           
 10696                           
 10697                           ;psect for function i1_USBDeviceInit
 10698  06E7                     i1_USBDeviceInit:	
 10699                           
 10700                           ;usb_device.c: 279: uint8_t i;
 10701                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 10702                           
 10703                           ;incstack = 0
 10704                           ; Regs used in i1_USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
 10705  06E7  0021               	movlb	1	; select bank1
 10706  06E8  1112               	bcf	18,2	;volatile
 10707                           
 10708                           ;usb_device.c: 285: ;
 10709                           ;usb_device.c: 288: {UEIR = 0;};
 10710  06E9  003D               	movlb	29	; select bank29
 10711  06EA  0193               	clrf	19	;volatile
 10712                           
 10713                           ;usb_device.c: 291: {UIR = 0;};
 10714  06EB  0190               	clrf	16	;volatile
 10715                           
 10716                           ;usb_device.c: 294: UEP0 = 0;
 10717  06EC  0198               	clrf	24	;volatile
 10718                           
 10719                           ;usb_device.c: 296: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 0
      +                          ; };
 10720  06ED  300E               	movlw	14
 10721  06EE  00F2               	movwf	i1USBDeviceInit@p+1
 10722  06EF  3099               	movlw	153
 10723  06F0  00F1               	movwf	i1USBDeviceInit@p
 10724  06F1  01F3               	clrf	i1USBDeviceInit@i_1491
 10725  06F2  3002               	movlw	2
 10726  06F3  0273               	subwf	i1USBDeviceInit@i_1491,w
 10727  06F4  1803               	btfsc	3,0
 10728  06F5  2F07               	goto	i1l6418
 10729  06F6                     i1l6410:	
 10730  06F6  0871               	movf	i1USBDeviceInit@p,w
 10731  06F7  0086               	movwf	6
 10732  06F8  0872               	movf	i1USBDeviceInit@p+1,w
 10733  06F9  0087               	movwf	7
 10734  06FA  0181               	clrf	1
 10735  06FB  3001               	movlw	1
 10736  06FC  07F1               	addwf	i1USBDeviceInit@p,f
 10737  06FD  3000               	movlw	0
 10738  06FE  3DF2               	addwfc	i1USBDeviceInit@p+1,f
 10739  06FF  3001               	movlw	1
 10740  0700  00F0               	movwf	??i1_USBDeviceInit
 10741  0701  0870               	movf	??i1_USBDeviceInit,w
 10742  0702  07F3               	addwf	i1USBDeviceInit@i_1491,f
 10743  0703  3002               	movlw	2
 10744  0704  0273               	subwf	i1USBDeviceInit@i_1491,w
 10745  0705  1C03               	skipc
 10746  0706  2EF6               	goto	i1l6410
 10747  0707                     i1l6418:	
 10748                           
 10749                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 10750  0707  3016               	movlw	22
 10751  0708  003D               	movlb	29	; select bank29
 10752  0709  0091               	movwf	17	;volatile
 10753  070A  309F               	movlw	159
 10754  070B  0097               	movwf	23	;volatile
 10755  070C  307B               	movlw	123
 10756  070D  0092               	movwf	18	;volatile
 10757                           
 10758                           ;usb_device.c: 301: ;
 10759                           ;usb_device.c: 304: ;
 10760                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
 10761  070E  01F4               	clrf	i1USBDeviceInit@i
 10762  070F  300C               	movlw	12
 10763  0710  0274               	subwf	i1USBDeviceInit@i,w
 10764  0711  1803               	btfsc	3,0
 10765  0712  2F2C               	goto	i1l380
 10766  0713                     i1l6426:	
 10767                           
 10768                           ;usb_device.c: 308: {
 10769                           ;usb_device.c: 309: BDT[i].Val = 0x00;
 10770  0713  0874               	movf	i1USBDeviceInit@i,w
 10771  0714  00F0               	movwf	??i1_USBDeviceInit
 10772  0715  3001               	movlw	1
 10773  0716                     u542_25:	
 10774  0716  35F0               	lslf	??i1_USBDeviceInit,f
 10775  0717  3EFF               	addlw	-1
 10776  0718  1D03               	skipz
 10777  0719  2F16               	goto	u542_25
 10778  071A  3570               	lslf	??i1_USBDeviceInit,w
 10779  071B  3E20               	addlw	32
 10780  071C  0086               	movwf	6
 10781  071D  0187               	clrf	7
 10782  071E  3000               	movlw	0
 10783  071F  3FC0               	movwi [0]fsr1
 10784  0720  3000               	movlw	0
 10785  0721  3FC1               	movwi [1]fsr1
 10786  0722  3FC2               	movwi [2]fsr1
 10787  0723  3FC3               	movwi [3]fsr1
 10788  0724  3001               	movlw	1
 10789  0725  00F0               	movwf	??i1_USBDeviceInit
 10790  0726  0870               	movf	??i1_USBDeviceInit,w
 10791  0727  07F4               	addwf	i1USBDeviceInit@i,f
 10792  0728  300C               	movlw	12
 10793  0729  0274               	subwf	i1USBDeviceInit@i,w
 10794  072A  1C03               	skipc
 10795  072B  2F13               	goto	i1l6426
 10796  072C                     i1l380:	
 10797                           
 10798                           ;usb_device.c: 310: }
 10799                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
 10800  072C  003D               	movlb	29	; select bank29
 10801  072D  170E               	bsf	14,6	;volatile
 10802                           
 10803                           ;usb_device.c: 316: UADDR = 0x00;
 10804  072E  0196               	clrf	22	;volatile
 10805                           
 10806                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 10807  072F  120E               	bcf	14,4	;volatile
 10808                           
 10809                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 10810  0730  130E               	bcf	14,6	;volatile
 10811  0731                     i1l6438:	
 10812                           ;usb_device.c: 325: do
 10813                           
 10814                           
 10815                           ;usb_device.c: 326: {
 10816                           ;usb_device.c: 327: (UIR &= 0xF7);
 10817  0731  30F7               	movlw	247
 10818  0732  00F0               	movwf	??i1_USBDeviceInit
 10819  0733  0870               	movf	??i1_USBDeviceInit,w
 10820  0734  0590               	andwf	16,f	;volatile
 10821                           
 10822                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 10823  0735  0021               	movlb	1	; select bank1
 10824  0736  01C5               	clrf	(_inPipes^(0+128)+2)	;volatile
 10825                           
 10826                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 10827  0737  0023               	movlb	3	; select bank3
 10828  0738  01B2               	clrf	(_outPipes^(0+384)+2)	;volatile
 10829                           
 10830                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 10831  0739  01B3               	clrf	(_outPipes^(0+384)+3)	;volatile
 10832  073A  01B4               	clrf	((_outPipes+1)^(0+384)+3)	;volatile
 10833                           
 10834                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 10835  073B  003D               	movlb	29	; select bank29
 10836  073C  1990               	btfsc	16,3	;volatile
 10837  073D  2F31               	goto	i1l6438
 10838                           
 10839                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 10840  073E  3001               	movlw	1
 10841  073F  00F0               	movwf	??i1_USBDeviceInit
 10842  0740  0870               	movf	??i1_USBDeviceInit,w
 10843  0741  0023               	movlb	3	; select bank3
 10844  0742  00DA               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
 10845                           
 10846                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 10847  0743  3001               	movlw	1
 10848  0744  00F0               	movwf	??i1_USBDeviceInit
 10849  0745  0870               	movf	??i1_USBDeviceInit,w
 10850  0746  00D9               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
 10851                           
 10852                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 10853  0747  01D8               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
 10854                           
 10855                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 10856  0748  01D7               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
 10857                           
 10858                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 10859  0749  01DF               	clrf	_USBBusIsSuspended^(0+384)	;volatile
 10860                           
 10861                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 10862  074A  01F4               	clrf	i1USBDeviceInit@i
 10863  074B  3003               	movlw	3
 10864  074C  0274               	subwf	i1USBDeviceInit@i,w
 10865  074D  1803               	btfsc	3,0
 10866  074E  2F73               	goto	i1l6466
 10867  074F                     i1l6460:	
 10868                           
 10869                           ;usb_device.c: 346: {
 10870                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 10871  074F  3574               	lslf	i1USBDeviceInit@i,w
 10872  0750  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 10873  0751  0086               	movwf	6
 10874  0752  3001               	movlw	1	; select bank3/4
 10875  0753  0087               	movwf	7
 10876  0754  3000               	movlw	0
 10877  0755  3FC0               	movwi [0]fsr1
 10878  0756  3FC1               	movwi [1]fsr1
 10879                           
 10880                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 10881  0757  3574               	lslf	i1USBDeviceInit@i,w
 10882  0758  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 10883  0759  0086               	movwf	6
 10884  075A  3001               	movlw	1	; select bank3/4
 10885  075B  0087               	movwf	7
 10886  075C  3000               	movlw	0
 10887  075D  3FC0               	movwi [0]fsr1
 10888  075E  3FC1               	movwi [1]fsr1
 10889                           
 10890                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 10891  075F  0874               	movf	i1USBDeviceInit@i,w
 10892  0760  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
 10893  0761  0086               	movwf	6
 10894  0762  3001               	movlw	1	; select bank3/4
 10895  0763  0087               	movwf	7
 10896  0764  0181               	clrf	1
 10897                           
 10898                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 10899  0765  0874               	movf	i1USBDeviceInit@i,w
 10900  0766  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
 10901  0767  0086               	movwf	6
 10902  0768  3001               	movlw	1	; select bank3/4
 10903  0769  0087               	movwf	7
 10904  076A  0181               	clrf	1
 10905  076B  3001               	movlw	1
 10906  076C  00F0               	movwf	??i1_USBDeviceInit
 10907  076D  0870               	movf	??i1_USBDeviceInit,w
 10908  076E  07F4               	addwf	i1USBDeviceInit@i,f
 10909  076F  3003               	movlw	3
 10910  0770  0274               	subwf	i1USBDeviceInit@i,w
 10911  0771  1C03               	skipc
 10912  0772  2F4F               	goto	i1l6460
 10913  0773                     i1l6466:	
 10914                           
 10915                           ;usb_device.c: 351: }
 10916                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 10917  0773  3028               	movlw	40
 10918  0774  0023               	movlb	3	; select bank3
 10919  0775  00B7               	movwf	_pBDTEntryIn^(0+384)
 10920  0776  3000               	movlw	0
 10921  0777  00B8               	movwf	(_pBDTEntryIn+1)^(0+384)
 10922                           
 10923                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 10924  0778  3016               	movlw	22
 10925  0779  003D               	movlb	29	; select bank29
 10926  077A  0098               	movwf	24	;volatile
 10927                           
 10928                           ;usb_device.c: 358: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 10929  077B  3000               	movlw	0
 10930  077C  0020               	movlb	0	; select bank0
 10931  077D  00A3               	movwf	35	;volatile
 10932  077E  3050               	movlw	80
 10933  077F  00A2               	movwf	34	;volatile
 10934                           
 10935                           ;usb_device.c: 359: BDT[0].CNT = 8;
 10936  0780  3008               	movlw	8
 10937  0781  00A1               	movwf	33	;volatile
 10938                           
 10939                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 10940  0782  3004               	movlw	4
 10941  0783  00F0               	movwf	??i1_USBDeviceInit
 10942  0784  0870               	movf	??i1_USBDeviceInit,w
 10943  0785  00A0               	movwf	32	;volatile
 10944                           
 10945                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 10946  0786  17A0               	bsf	32,7	;volatile
 10947                           
 10948                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 10949  0787  0023               	movlb	3	; select bank3
 10950  0788  01EE               	clrf	_USBActiveConfiguration^(0+384)	;volatile
 10951                           
 10952                           ;usb_device.c: 366: USB1msTickCount = 0;
 10953  0789  3000               	movlw	0
 10954  078A  00C6               	movwf	(_USB1msTickCount+3)^(0+384)	;volatile
 10955  078B  3000               	movlw	0
 10956  078C  00C5               	movwf	(_USB1msTickCount+2)^(0+384)	;volatile
 10957  078D  3000               	movlw	0
 10958  078E  00C4               	movwf	(_USB1msTickCount+1)^(0+384)	;volatile
 10959  078F  3000               	movlw	0
 10960  0790  00C3               	movwf	_USB1msTickCount^(0+384)	;volatile
 10961                           
 10962                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 10963  0791  01D6               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
 10964                           
 10965                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 10966  0792  01E5               	clrf	_USBDeviceState^(0+384)	;volatile
 10967  0793  0008               	return
 10968  0794                     __end_ofi1_USBDeviceInit:	
 10969                           
 10970                           	psect	text47
 10971  15CC                     __ptext47:	
 10972 ;; *************** function i1_USBCtrlEPService *****************
 10973 ;; Defined at:
 10974 ;;		line 2372 in file "mcc_generated_files/usb/usb_device.c"
 10975 ;; Parameters:    Size  Location     Type
 10976 ;;		None
 10977 ;; Auto vars:     Size  Location     Type
 10978 ;;		None
 10979 ;; Return value:  Size  Location     Type
 10980 ;;                  1    wreg      void 
 10981 ;; Registers used:
 10982 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10983 ;; Tracked objects:
 10984 ;;		On entry : 0/0
 10985 ;;		On exit  : 0/0
 10986 ;;		Unchanged: 0/0
 10987 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10990 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10991 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10992 ;;Total ram usage:        3 bytes
 10993 ;; Hardware stack levels used:    1
 10994 ;; Hardware stack levels required when called:    7
 10995 ;; This function calls:
 10996 ;;		i1_USBCtrlTrfInHandler
 10997 ;;		i1_USBCtrlTrfOutHandler
 10998 ;;		i1_USBCtrlTrfSetupHandler
 10999 ;; This function is called by:
 11000 ;;		i1_USBDeviceTasks
 11001 ;; This function uses a non-reentrant model
 11002 ;;
 11003                           
 11004                           
 11005                           ;psect for function i1_USBCtrlEPService
 11006  15CC                     i1_USBCtrlEPService:	
 11007                           
 11008                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
 11009                           
 11010                           ;incstack = 0
 11011 ;; hardware stack exceeded
 11012                           ; Regs used in i1_USBCtrlEPService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11013  15CC  302D               	movlw	45
 11014  15CD  0021               	movlb	1	; select bank1
 11015  15CE  00A0               	movwf	??i1_USBCtrlEPService^(0+128)
 11016  15CF  0820               	movf	??i1_USBCtrlEPService^(0+128),w
 11017  15D0  0023               	movlb	3	; select bank3
 11018  15D1  00DC               	movwf	_USBStatusStageTimeoutCounter^(0+384)	;volatile
 11019                           
 11020                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
 11021  15D2  086D               	movf	_USTATcopy^(0+384),w	;volatile
 11022  15D3  39FD               	andlw	253
 11023  15D4  1D03               	btfss	3,2
 11024  15D5  2E1C               	goto	i1l6542
 11025                           
 11026                           ;usb_device.c: 2383: {
 11027                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 11028  15D6  366D               	lsrf	_USTATcopy^(0+384),w	;volatile
 11029  15D7  393F               	andlw	63
 11030  15D8  0021               	movlb	1	; select bank1
 11031  15D9  00A0               	movwf	??i1_USBCtrlEPService^(0+128)
 11032  15DA  3001               	movlw	1
 11033  15DB                     u552_25:	
 11034  15DB  35A0               	lslf	??i1_USBCtrlEPService^(0+128),f
 11035  15DC  3EFF               	addlw	-1
 11036  15DD  1D03               	skipz
 11037  15DE  2DDB               	goto	u552_25
 11038  15DF  3520               	lslf	??i1_USBCtrlEPService^(0+128),w
 11039  15E0  3E20               	addlw	32
 11040  15E1  00A1               	movwf	(??i1_USBCtrlEPService+1)^(0+128)
 11041  15E2  0821               	movf	(??i1_USBCtrlEPService+1)^(0+128),w
 11042  15E3  0023               	movlb	3	; select bank3
 11043  15E4  00E4               	movwf	_pBDTEntryEP0OutCurrent^(0+384)
 11044                           
 11045                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 11046  15E5  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 11047  15E6  0021               	movlb	1	; select bank1
 11048  15E7  00C8               	movwf	_pBDTEntryEP0OutNext^(0+128)
 11049  15E8  39FF               	andlw	255
 11050  15E9  1D03               	skipz
 11051  15EA  3000               	movlw	0
 11052  15EB  00C9               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
 11053                           
 11054                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 11055  15EC  3004               	movlw	4
 11056  15ED  0648               	xorwf	_pBDTEntryEP0OutNext^(0+128),w
 11057  15EE  00C8               	movwf	_pBDTEntryEP0OutNext^(0+128)
 11058  15EF  3000               	movlw	0
 11059  15F0  0649               	xorwf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 11060  15F1  00C9               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
 11061                           
 11062                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 11063  15F2  0023               	movlb	3	; select bank3
 11064  15F3  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 11065  15F4  0086               	movwf	6
 11066  15F5  0187               	clrf	7
 11067  15F6  0C01               	rrf	1,w
 11068  15F7  0C89               	rrf	9,f
 11069  15F8  390F               	andlw	15
 11070  15F9  3A0D               	xorlw	13
 11071  15FA  1D03               	skipz
 11072  15FB  2E19               	goto	i1l6540
 11073                           
 11074                           ;usb_device.c: 2400: {
 11075                           ;usb_device.c: 2405: __builtin_memcpy((uint8_t*)&SetupPkt,(uint8_t*)((void *)(pBDTEntryE
      +                          P0OutCurrent->ADR)),8);
 11076  15FC  3050               	movlw	80
 11077  15FD  0086               	movwf	6
 11078  15FE  0187               	clrf	7
 11079  15FF  0023               	movlb	3	; select bank3
 11080  1600  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 11081  1601  3E02               	addlw	2
 11082  1602  0084               	movwf	4
 11083  1603  0185               	clrf	5
 11084  1604  3F00               	moviw [0]fsr0
 11085  1605  0021               	movlb	1	; select bank1
 11086  1606  00A0               	movwf	??i1_USBCtrlEPService^(0+128)
 11087  1607  3F01               	moviw [1]fsr0
 11088  1608  00A1               	movwf	(??i1_USBCtrlEPService^(0+128)+1)
 11089  1609  0820               	movf	??i1_USBCtrlEPService^(0+128),w
 11090  160A  0084               	movwf	4
 11091  160B  0821               	movf	(??i1_USBCtrlEPService+1)^(0+128),w
 11092  160C  0085               	movwf	5
 11093  160D  3008               	movlw	8
 11094  160E  00A2               	movwf	(??i1_USBCtrlEPService+2)^(0+128)
 11095  160F  0822               	movf	(??i1_USBCtrlEPService+2)^(0+128),w
 11096  1610  1903               	skipnz
 11097  1611  2E16               	goto	i1l6538
 11098  1612                     u554_2m0:	
 11099  1612  0012               	moviw fsr0++
 11100  1613  001E               	movwi fsr1++
 11101  1614  0BA2               	decfsz	(??i1_USBCtrlEPService+2)^(0+128),f
 11102  1615  2E12               	goto	u554_2m0
 11103  1616                     i1l6538:	
 11104                           
 11105                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
 11106  1616  3194  246F         	fcall	i1_USBCtrlTrfSetupHandler
 11107                           
 11108                           ;usb_device.c: 2409: }
 11109  1618  0008               	return
 11110  1619                     i1l6540:	
 11111                           
 11112                           ;usb_device.c: 2410: else
 11113                           ;usb_device.c: 2411: {
 11114                           ;usb_device.c: 2413: USBCtrlTrfOutHandler();
 11115  1619  3191  2175         	fcall	i1_USBCtrlTrfOutHandler
 11116                           
 11117                           ;usb_device.c: 2414: }
 11118                           ;usb_device.c: 2415: }
 11119  161B  0008               	return
 11120  161C                     i1l6542:	
 11121                           
 11122                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
 11123  161C  30FD               	movlw	253
 11124  161D  0023               	movlb	3	; select bank3
 11125  161E  056D               	andwf	_USTATcopy^(0+384),w	;volatile
 11126  161F  0021               	movlb	1	; select bank1
 11127  1620  00A0               	movwf	??i1_USBCtrlEPService^(0+128)
 11128  1621  3004               	movlw	4
 11129  1622  0620               	xorwf	??i1_USBCtrlEPService^(0+128),w
 11130  1623  1D03               	btfss	3,2
 11131  1624  0008               	return
 11132                           
 11133                           ;usb_device.c: 2417: {
 11134                           ;usb_device.c: 2420: USBCtrlTrfInHandler();
 11135  1625  3188  20D3         	fcall	i1_USBCtrlTrfInHandler
 11136  1627  0008               	return
 11137  1628                     __end_ofi1_USBCtrlEPService:	
 11138                           
 11139                           	psect	text48
 11140  146F                     __ptext48:	
 11141 ;; *************** function i1_USBCtrlTrfSetupHandler *****************
 11142 ;; Defined at:
 11143 ;;		line 2465 in file "mcc_generated_files/usb/usb_device.c"
 11144 ;; Parameters:    Size  Location     Type
 11145 ;;		None
 11146 ;; Auto vars:     Size  Location     Type
 11147 ;;		None
 11148 ;; Return value:  Size  Location     Type
 11149 ;;                  1    wreg      void 
 11150 ;; Registers used:
 11151 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11152 ;; Tracked objects:
 11153 ;;		On entry : 0/0
 11154 ;;		On exit  : 0/0
 11155 ;;		Unchanged: 0/0
 11156 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11159 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11160 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11161 ;;Total ram usage:        1 bytes
 11162 ;; Hardware stack levels used:    1
 11163 ;; Hardware stack levels required when called:    6
 11164 ;; This function calls:
 11165 ;;		i1_USBCheckStdRequest
 11166 ;;		i1_USBCtrlEPServiceComplete
 11167 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 11168 ;; This function is called by:
 11169 ;;		i1_USBCtrlEPService
 11170 ;; This function uses a non-reentrant model
 11171 ;;
 11172                           
 11173                           
 11174                           ;psect for function i1_USBCtrlTrfSetupHandler
 11175  146F                     i1_USBCtrlTrfSetupHandler:	
 11176                           
 11177                           ;usb_device.c: 2470: shortPacketStatus = 0;
 11178                           
 11179                           ;incstack = 0
 11180 ;; hardware stack exceeded
 11181                           ; Regs used in i1_USBCtrlTrfSetupHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11182  146F  0023               	movlb	3	; select bank3
 11183  1470  01E3               	clrf	_shortPacketStatus^(0+384)	;volatile
 11184                           
 11185                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
 11186  1471  01DB               	clrf	_USBDeferStatusStagePacket^(0+384)	;volatile
 11187                           
 11188                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
 11189  1472  01D8               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
 11190                           
 11191                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
 11192  1473  01D7               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
 11193                           
 11194                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
 11195  1474  01DD               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
 11196                           
 11197                           ;usb_device.c: 2475: controlTransferState = 0;
 11198  1475  01E2               	clrf	_controlTransferState^(0+384)	;volatile
 11199                           
 11200                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 11201  1476  307F               	movlw	127
 11202  1477  0020               	movlb	0	; select bank0
 11203  1478  00EE               	movwf	??i1_USBCtrlTrfSetupHandler
 11204  1479  0023               	movlb	3	; select bank3
 11205  147A  0837               	movf	_pBDTEntryIn^(0+384),w
 11206  147B  0086               	movwf	6
 11207  147C  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 11208  147D  0087               	movwf	7
 11209  147E  0020               	movlb	0	; select bank0
 11210  147F  086E               	movf	??i1_USBCtrlTrfSetupHandler,w
 11211  1480  0581               	andwf	1,f
 11212                           
 11213                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 11214  1481  3004               	movlw	4
 11215  1482  0023               	movlb	3	; select bank3
 11216  1483  0637               	xorwf	_pBDTEntryIn^(0+384),w
 11217  1484  00B7               	movwf	_pBDTEntryIn^(0+384)
 11218  1485  3000               	movlw	0
 11219  1486  0638               	xorwf	(_pBDTEntryIn+1)^(0+384),w
 11220  1487  00B8               	movwf	(_pBDTEntryIn+1)^(0+384)
 11221                           
 11222                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 11223  1488  307F               	movlw	127
 11224  1489  0020               	movlb	0	; select bank0
 11225  148A  00EE               	movwf	??i1_USBCtrlTrfSetupHandler
 11226  148B  0023               	movlb	3	; select bank3
 11227  148C  0837               	movf	_pBDTEntryIn^(0+384),w
 11228  148D  0086               	movwf	6
 11229  148E  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 11230  148F  0087               	movwf	7
 11231  1490  0020               	movlb	0	; select bank0
 11232  1491  086E               	movf	??i1_USBCtrlTrfSetupHandler,w
 11233  1492  0581               	andwf	1,f
 11234                           
 11235                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 11236  1493  3004               	movlw	4
 11237  1494  0023               	movlb	3	; select bank3
 11238  1495  0637               	xorwf	_pBDTEntryIn^(0+384),w
 11239  1496  00B7               	movwf	_pBDTEntryIn^(0+384)
 11240  1497  3000               	movlw	0
 11241  1498  0638               	xorwf	(_pBDTEntryIn+1)^(0+384),w
 11242  1499  00B8               	movwf	(_pBDTEntryIn+1)^(0+384)
 11243                           
 11244                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 11245  149A  307F               	movlw	127
 11246  149B  0020               	movlb	0	; select bank0
 11247  149C  00EE               	movwf	??i1_USBCtrlTrfSetupHandler
 11248  149D  0021               	movlb	1	; select bank1
 11249  149E  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 11250  149F  0086               	movwf	6
 11251  14A0  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 11252  14A1  0087               	movwf	7
 11253  14A2  0020               	movlb	0	; select bank0
 11254  14A3  086E               	movf	??i1_USBCtrlTrfSetupHandler,w
 11255  14A4  0581               	andwf	1,f
 11256                           
 11257                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
 11258  14A5  0021               	movlb	1	; select bank1
 11259  14A6  01C5               	clrf	(_inPipes^(0+128)+2)	;volatile
 11260                           
 11261                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
 11262  14A7  01C6               	clrf	(_inPipes^(0+128)+3)	;volatile
 11263  14A8  01C7               	clrf	((_inPipes+1)^(0+128)+3)	;volatile
 11264                           
 11265                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
 11266  14A9  0023               	movlb	3	; select bank3
 11267  14AA  01B2               	clrf	(_outPipes^(0+384)+2)	;volatile
 11268                           
 11269                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
 11270  14AB  01B3               	clrf	(_outPipes^(0+384)+3)	;volatile
 11271  14AC  01B4               	clrf	((_outPipes+1)^(0+384)+3)	;volatile
 11272                           
 11273                           ;usb_device.c: 2500: USBCheckStdRequest();
 11274  14AD  3188  200E  3194   	fcall	i1_USBCheckStdRequest
 11275                           
 11276                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 11277  14B0  3000               	movlw	0
 11278  14B1  0020               	movlb	0	; select bank0
 11279  14B2  00E1               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 11280  14B3  3003               	movlw	3
 11281  14B4  00E0               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 11282  14B5  3000               	movlw	0
 11283  14B6  00E2               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11284  14B7  3000               	movlw	0
 11285  14B8  00E3               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11286  14B9  3000               	movlw	0
 11287  14BA  00E4               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 11288  14BB  00E5               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 11289  14BC  3191  2115  3194   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 11290                           
 11291                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
 11292  14BF  318E  2637         	fcall	i1_USBCtrlEPServiceComplete
 11293  14C1  0008               	return
 11294  14C2                     __end_ofi1_USBCtrlTrfSetupHandler:	
 11295                           
 11296                           	psect	text49
 11297  0E37                     __ptext49:	
 11298 ;; *************** function i1_USBCtrlEPServiceComplete *****************
 11299 ;; Defined at:
 11300 ;;		line 1616 in file "mcc_generated_files/usb/usb_device.c"
 11301 ;; Parameters:    Size  Location     Type
 11302 ;;		None
 11303 ;; Auto vars:     Size  Location     Type
 11304 ;;		None
 11305 ;; Return value:  Size  Location     Type
 11306 ;;                  1    wreg      void 
 11307 ;; Registers used:
 11308 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11309 ;; Tracked objects:
 11310 ;;		On entry : 0/0
 11311 ;;		On exit  : 0/0
 11312 ;;		Unchanged: 0/0
 11313 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11316 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11317 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11318 ;;Total ram usage:        2 bytes
 11319 ;; Hardware stack levels used:    1
 11320 ;; Hardware stack levels required when called:    2
 11321 ;; This function calls:
 11322 ;;		i1_USBCtrlEPAllowDataStage
 11323 ;;		i1_USBCtrlEPAllowStatusStage
 11324 ;; This function is called by:
 11325 ;;		i1_USBCtrlTrfSetupHandler
 11326 ;; This function uses a non-reentrant model
 11327 ;;
 11328                           
 11329                           
 11330                           ;psect for function i1_USBCtrlEPServiceComplete
 11331  0E37                     i1_USBCtrlEPServiceComplete:	
 11332                           
 11333                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 11334                           
 11335                           ;incstack = 0
 11336                           ; Regs used in i1_USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11337  0E37  003D               	movlb	29	; select bank29
 11338  0E38  120E               	bcf	14,4	;volatile
 11339                           
 11340                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 11341  0E39  0021               	movlb	1	; select bank1
 11342  0E3A  1BC5               	btfsc	(_inPipes^(0+128)+2),7	;volatile
 11343  0E3B  2E7E               	goto	i1l465
 11344                           
 11345                           ;usb_device.c: 1629: {
 11346                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 11347  0E3C  0023               	movlb	3	; select bank3
 11348  0E3D  1FB2               	btfss	(_outPipes^(0+384)+2),7	;volatile
 11349  0E3E  2E4C               	goto	i1l5542
 11350                           
 11351                           ;usb_device.c: 1631: {
 11352                           ;usb_device.c: 1632: controlTransferState = 2;
 11353  0E3F  3002               	movlw	2
 11354  0E40  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 11355  0E41  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 11356  0E42  00E2               	movwf	_controlTransferState^(0+384)	;volatile
 11357                           
 11358                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 11359  0E43  0857               	movf	_USBDeferOUTDataStagePackets^(0+384),w	;volatile
 11360  0E44  1D03               	btfss	3,2
 11361  0E45  2E48               	goto	i1l5538
 11362                           
 11363                           ;usb_device.c: 1644: {
 11364                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 11365  0E46  3195  2570         	fcall	i1_USBCtrlEPAllowDataStage
 11366  0E48                     i1l5538:	
 11367                           
 11368                           ;usb_device.c: 1646: }
 11369                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 11370  0E48  0023               	movlb	3	; select bank3
 11371  0E49  01D9               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
 11372                           
 11373                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 11374  0E4A  01DA               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
 11375                           
 11376                           ;usb_device.c: 1652: }
 11377  0E4B  0008               	return
 11378  0E4C                     i1l5542:	
 11379                           
 11380                           ;usb_device.c: 1653: else
 11381                           ;usb_device.c: 1654: {
 11382                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
 11383  0E4C  0021               	movlb	1	; select bank1
 11384  0E4D  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 11385  0E4E  3E01               	addlw	1
 11386  0E4F  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 11387  0E50  3000               	movlw	0
 11388  0E51  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 11389  0E52  00F6               	movwf	??i1_USBCtrlEPServiceComplete+1
 11390  0E53  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 11391  0E54  0086               	movwf	6
 11392  0E55  0876               	movf	??i1_USBCtrlEPServiceComplete+1,w
 11393  0E56  0087               	movwf	7
 11394  0E57  3008               	movlw	8
 11395  0E58  0081               	movwf	1
 11396                           
 11397                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 11398  0E59  3050               	movlw	80
 11399  0E5A  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 11400  0E5B  3000               	movlw	0
 11401  0E5C  00F6               	movwf	??i1_USBCtrlEPServiceComplete+1
 11402  0E5D  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 11403  0E5E  0086               	movwf	6
 11404  0E5F  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 11405  0E60  0087               	movwf	7
 11406  0E61  3142               	addfsr 1,2
 11407  0E62  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 11408  0E63  3FC0               	movwi [0]fsr1
 11409  0E64  0876               	movf	??i1_USBCtrlEPServiceComplete+1,w
 11410  0E65  3FC1               	movwi [1]fsr1
 11411                           
 11412                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 11413  0E66  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 11414  0E67  0086               	movwf	6
 11415  0E68  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 11416  0E69  0087               	movwf	7
 11417  0E6A  300C               	movlw	12
 11418  0E6B  0081               	movwf	1
 11419                           
 11420                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 11421  0E6C  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 11422  0E6D  0086               	movwf	6
 11423  0E6E  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 11424  0E6F  0087               	movwf	7
 11425  0E70  1781               	bsf	1,7
 11426                           
 11427                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 11428  0E71  0023               	movlb	3	; select bank3
 11429  0E72  0837               	movf	_pBDTEntryIn^(0+384),w
 11430  0E73  0086               	movwf	6
 11431  0E74  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 11432  0E75  0087               	movwf	7
 11433  0E76  3004               	movlw	4
 11434  0E77  0081               	movwf	1
 11435                           
 11436                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 11437  0E78  0837               	movf	_pBDTEntryIn^(0+384),w
 11438  0E79  0086               	movwf	6
 11439  0E7A  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 11440  0E7B  0087               	movwf	7
 11441  0E7C  1781               	bsf	1,7
 11442                           
 11443                           ;usb_device.c: 1665: }
 11444                           ;usb_device.c: 1666: }
 11445  0E7D  0008               	return
 11446  0E7E                     i1l465:	
 11447                           
 11448                           ;usb_device.c: 1667: else
 11449                           ;usb_device.c: 1668: {
 11450                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 11451  0E7E  0020               	movlb	0	; select bank0
 11452  0E7F  1FD0               	btfss	80,7	;volatile
 11453  0E80  2E95               	goto	i1l5568
 11454                           
 11455                           ;usb_device.c: 1670: {
 11456                           ;usb_device.c: 1671: controlTransferState = 1;
 11457  0E81  3001               	movlw	1
 11458  0E82  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 11459  0E83  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 11460  0E84  0023               	movlb	3	; select bank3
 11461  0E85  00E2               	movwf	_controlTransferState^(0+384)	;volatile
 11462                           
 11463                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 11464  0E86  0858               	movf	_USBDeferINDataStagePackets^(0+384),w	;volatile
 11465  0E87  1D03               	btfss	3,2
 11466  0E88  2E8C               	goto	i1l5560
 11467                           
 11468                           ;usb_device.c: 1686: {
 11469                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 11470  0E89  3195  2570  318E   	fcall	i1_USBCtrlEPAllowDataStage
 11471  0E8C                     i1l5560:	
 11472                           
 11473                           ;usb_device.c: 1688: }
 11474                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 11475  0E8C  0023               	movlb	3	; select bank3
 11476  0E8D  01D9               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
 11477                           
 11478                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 11479  0E8E  01DA               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
 11480                           
 11481                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 11482  0E8F  085B               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
 11483  0E90  1D03               	btfss	3,2
 11484  0E91  0008               	return
 11485                           
 11486                           ;usb_device.c: 1713: {
 11487                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 11488  0E92  3187  2794         	fcall	i1_USBCtrlEPAllowStatusStage
 11489                           
 11490                           ;usb_device.c: 1715: }
 11491                           ;usb_device.c: 1716: }
 11492  0E94  0008               	return
 11493  0E95                     i1l5568:	
 11494                           
 11495                           ;usb_device.c: 1717: else
 11496                           ;usb_device.c: 1718: {
 11497                           ;usb_device.c: 1729: controlTransferState = 2;
 11498  0E95  3002               	movlw	2
 11499  0E96  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 11500  0E97  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 11501  0E98  0023               	movlb	3	; select bank3
 11502  0E99  00E2               	movwf	_controlTransferState^(0+384)	;volatile
 11503                           
 11504                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
 11505  0E9A  0021               	movlb	1	; select bank1
 11506  0E9B  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 11507  0E9C  3E01               	addlw	1
 11508  0E9D  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 11509  0E9E  3000               	movlw	0
 11510  0E9F  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 11511  0EA0  00F6               	movwf	??i1_USBCtrlEPServiceComplete+1
 11512  0EA1  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 11513  0EA2  0086               	movwf	6
 11514  0EA3  0876               	movf	??i1_USBCtrlEPServiceComplete+1,w
 11515  0EA4  0087               	movwf	7
 11516  0EA5  3008               	movlw	8
 11517  0EA6  0081               	movwf	1
 11518                           
 11519                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 11520  0EA7  3050               	movlw	80
 11521  0EA8  00F5               	movwf	??i1_USBCtrlEPServiceComplete
 11522  0EA9  3000               	movlw	0
 11523  0EAA  00F6               	movwf	??i1_USBCtrlEPServiceComplete+1
 11524  0EAB  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 11525  0EAC  0086               	movwf	6
 11526  0EAD  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 11527  0EAE  0087               	movwf	7
 11528  0EAF  3142               	addfsr 1,2
 11529  0EB0  0875               	movf	??i1_USBCtrlEPServiceComplete,w
 11530  0EB1  3FC0               	movwi [0]fsr1
 11531  0EB2  0876               	movf	??i1_USBCtrlEPServiceComplete+1,w
 11532  0EB3  3FC1               	movwi [1]fsr1
 11533                           
 11534                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 11535  0EB4  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 11536  0EB5  0086               	movwf	6
 11537  0EB6  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 11538  0EB7  0087               	movwf	7
 11539  0EB8  3004               	movlw	4
 11540  0EB9  0081               	movwf	1
 11541                           
 11542                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 11543  0EBA  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 11544  0EBB  0086               	movwf	6
 11545  0EBC  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 11546  0EBD  0087               	movwf	7
 11547  0EBE  1781               	bsf	1,7
 11548                           
 11549                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 11550  0EBF  0023               	movlb	3	; select bank3
 11551  0EC0  01D9               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
 11552                           
 11553                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 11554  0EC1  01DA               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
 11555                           
 11556                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 11557  0EC2  085B               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
 11558  0EC3  1D03               	btfss	3,2
 11559  0EC4  0008               	return
 11560                           
 11561                           ;usb_device.c: 1741: {
 11562                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 11563  0EC5  3187  2794         	fcall	i1_USBCtrlEPAllowStatusStage
 11564  0EC7  0008               	return
 11565  0EC8                     __end_ofi1_USBCtrlEPServiceComplete:	
 11566                           
 11567                           	psect	text50
 11568  1570                     __ptext50:	
 11569 ;; *************** function i1_USBCtrlEPAllowDataStage *****************
 11570 ;; Defined at:
 11571 ;;		line 1488 in file "mcc_generated_files/usb/usb_device.c"
 11572 ;; Parameters:    Size  Location     Type
 11573 ;;		None
 11574 ;; Auto vars:     Size  Location     Type
 11575 ;;		None
 11576 ;; Return value:  Size  Location     Type
 11577 ;;                  1    wreg      void 
 11578 ;; Registers used:
 11579 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11580 ;; Tracked objects:
 11581 ;;		On entry : 0/0
 11582 ;;		On exit  : 0/0
 11583 ;;		Unchanged: 0/0
 11584 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11587 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11588 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11589 ;;Total ram usage:        2 bytes
 11590 ;; Hardware stack levels used:    1
 11591 ;; Hardware stack levels required when called:    1
 11592 ;; This function calls:
 11593 ;;		i1_USBCtrlTrfTxService
 11594 ;; This function is called by:
 11595 ;;		i1_USBCtrlEPServiceComplete
 11596 ;; This function uses a non-reentrant model
 11597 ;;
 11598                           
 11599                           
 11600                           ;psect for function i1_USBCtrlEPAllowDataStage
 11601  1570                     i1_USBCtrlEPAllowDataStage:	
 11602                           
 11603                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 11604                           
 11605                           ;incstack = 0
 11606                           ; Regs used in i1_USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11607  1570  0023               	movlb	3	; select bank3
 11608  1571  01D8               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
 11609                           
 11610                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 11611  1572  01D7               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
 11612                           
 11613                           ;usb_device.c: 1493: if(controlTransferState == 2)
 11614  1573  3002               	movlw	2
 11615  1574  0662               	xorwf	_controlTransferState^(0+384),w	;volatile
 11616  1575  1D03               	btfss	3,2
 11617  1576  2D9D               	goto	i1l5160
 11618                           
 11619                           ;usb_device.c: 1494: {
 11620                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
 11621  1577  0021               	movlb	1	; select bank1
 11622  1578  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 11623  1579  3E01               	addlw	1
 11624  157A  00F3               	movwf	??i1_USBCtrlEPAllowDataStage
 11625  157B  3000               	movlw	0
 11626  157C  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 11627  157D  00F4               	movwf	??i1_USBCtrlEPAllowDataStage+1
 11628  157E  0873               	movf	??i1_USBCtrlEPAllowDataStage,w
 11629  157F  0086               	movwf	6
 11630  1580  0874               	movf	??i1_USBCtrlEPAllowDataStage+1,w
 11631  1581  0087               	movwf	7
 11632  1582  3008               	movlw	8
 11633  1583  0081               	movwf	1
 11634                           
 11635                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
 11636  1584  3058               	movlw	88
 11637  1585  00F3               	movwf	??i1_USBCtrlEPAllowDataStage
 11638  1586  3000               	movlw	0
 11639  1587  00F4               	movwf	??i1_USBCtrlEPAllowDataStage+1
 11640  1588  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 11641  1589  0086               	movwf	6
 11642  158A  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 11643  158B  0087               	movwf	7
 11644  158C  3142               	addfsr 1,2
 11645  158D  0873               	movf	??i1_USBCtrlEPAllowDataStage,w
 11646  158E  3FC0               	movwi [0]fsr1
 11647  158F  0874               	movf	??i1_USBCtrlEPAllowDataStage+1,w
 11648  1590  3FC1               	movwi [1]fsr1
 11649                           
 11650                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 11651  1591  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 11652  1592  0086               	movwf	6
 11653  1593  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 11654  1594  0087               	movwf	7
 11655  1595  3048               	movlw	72
 11656  1596  0081               	movwf	1
 11657                           
 11658                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 11659  1597  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 11660  1598  0086               	movwf	6
 11661  1599  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 11662  159A  0087               	movwf	7
 11663  159B  1781               	bsf	1,7
 11664                           
 11665                           ;usb_device.c: 1500: }
 11666  159C  0008               	return
 11667  159D                     i1l5160:	
 11668                           
 11669                           ;usb_device.c: 1501: else
 11670                           ;usb_device.c: 1502: {
 11671                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 11672  159D  0021               	movlb	1	; select bank1
 11673  159E  0847               	movf	((_inPipes+1)^(0+128)+3),w	;volatile
 11674  159F  0020               	movlb	0	; select bank0
 11675  15A0  0257               	subwf	87,w	;volatile
 11676  15A1  1D03               	skipz
 11677  15A2  2DA7               	goto	u419_25
 11678  15A3  0021               	movlb	1	; select bank1
 11679  15A4  0846               	movf	(_inPipes^(0+128)+3),w	;volatile
 11680  15A5  0020               	movlb	0	; select bank0
 11681  15A6  0256               	subwf	86,w	;volatile
 11682  15A7                     u419_25:	
 11683  15A7  1803               	skipnc
 11684  15A8  2DB0               	goto	i1l5164
 11685                           
 11686                           ;usb_device.c: 1506: {
 11687                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 11688  15A9  0857               	movf	87,w	;volatile
 11689  15AA  0021               	movlb	1	; select bank1
 11690  15AB  00C7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
 11691  15AC  0020               	movlb	0	; select bank0
 11692  15AD  0856               	movf	86,w	;volatile
 11693  15AE  0021               	movlb	1	; select bank1
 11694  15AF  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
 11695  15B0                     i1l5164:	
 11696                           
 11697                           ;usb_device.c: 1508: }
 11698                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 11699  15B0  3189  21AC         	fcall	i1_USBCtrlTrfTxService
 11700                           
 11701                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
 11702  15B2  3058               	movlw	88
 11703  15B3  00F3               	movwf	??i1_USBCtrlEPAllowDataStage
 11704  15B4  3000               	movlw	0
 11705  15B5  00F4               	movwf	??i1_USBCtrlEPAllowDataStage+1
 11706  15B6  0023               	movlb	3	; select bank3
 11707  15B7  0837               	movf	_pBDTEntryIn^(0+384),w
 11708  15B8  0086               	movwf	6
 11709  15B9  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 11710  15BA  0087               	movwf	7
 11711  15BB  3142               	addfsr 1,2
 11712  15BC  0873               	movf	??i1_USBCtrlEPAllowDataStage,w
 11713  15BD  3FC0               	movwi [0]fsr1
 11714  15BE  0874               	movf	??i1_USBCtrlEPAllowDataStage+1,w
 11715  15BF  3FC1               	movwi [1]fsr1
 11716                           
 11717                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 11718  15C0  0837               	movf	_pBDTEntryIn^(0+384),w
 11719  15C1  0086               	movwf	6
 11720  15C2  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 11721  15C3  0087               	movwf	7
 11722  15C4  3048               	movlw	72
 11723  15C5  0081               	movwf	1
 11724                           
 11725                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 11726  15C6  0837               	movf	_pBDTEntryIn^(0+384),w
 11727  15C7  0086               	movwf	6
 11728  15C8  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 11729  15C9  0087               	movwf	7
 11730  15CA  1781               	bsf	1,7
 11731  15CB  0008               	return
 11732  15CC                     __end_ofi1_USBCtrlEPAllowDataStage:	
 11733                           
 11734                           	psect	text51
 11735  080E                     __ptext51:	
 11736 ;; *************** function i1_USBCheckStdRequest *****************
 11737 ;; Defined at:
 11738 ;;		line 2686 in file "mcc_generated_files/usb/usb_device.c"
 11739 ;; Parameters:    Size  Location     Type
 11740 ;;		None
 11741 ;; Auto vars:     Size  Location     Type
 11742 ;;		None
 11743 ;; Return value:  Size  Location     Type
 11744 ;;                  1    wreg      void 
 11745 ;; Registers used:
 11746 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11747 ;; Tracked objects:
 11748 ;;		On entry : 0/0
 11749 ;;		On exit  : 0/0
 11750 ;;		Unchanged: 0/0
 11751 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11754 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11755 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11756 ;;Total ram usage:        1 bytes
 11757 ;; Hardware stack levels used:    1
 11758 ;; Hardware stack levels required when called:    5
 11759 ;; This function calls:
 11760 ;;		i1_USBStdFeatureReqHandler
 11761 ;;		i1_USBStdGetDscHandler
 11762 ;;		i1_USBStdGetStatusHandler
 11763 ;;		i1_USBStdSetCfgHandler
 11764 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 11765 ;; This function is called by:
 11766 ;;		i1_USBCtrlTrfSetupHandler
 11767 ;; This function uses a non-reentrant model
 11768 ;;
 11769                           
 11770                           
 11771                           ;psect for function i1_USBCheckStdRequest
 11772  080E                     i1_USBCheckStdRequest:	
 11773                           
 11774                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
 11775                           
 11776                           ;incstack = 0
 11777 ;; hardware stack exceeded
 11778                           ; Regs used in i1_USBCheckStdRequest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11779  080E  0020               	movlb	0	; select bank0
 11780  080F  0E50               	swapf	80,w	;volatile
 11781  0810  0C89               	rrf	9,f
 11782  0811  3903               	andlw	3
 11783  0812  3A00               	xorlw	0
 11784  0813  1D03               	btfss	3,2
 11785  0814  0008               	return
 11786  0815  2864               	goto	i1l5662
 11787  0816                     i1l592:	
 11788                           ;usb_device.c: 2691: {
 11789                           ;usb_device.c: 2692: case 5:
 11790                           
 11791                           ;usb_device.c: 2690: switch(SetupPkt.bRequest)
 11792                           
 11793                           
 11794                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
 11795  0816  0021               	movlb	1	; select bank1
 11796  0817  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 11797                           
 11798                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
 11799  0818  3008               	movlw	8
 11800  0819  0020               	movlb	0	; select bank0
 11801  081A  00ED               	movwf	??i1_USBCheckStdRequest
 11802  081B  086D               	movf	??i1_USBCheckStdRequest,w
 11803  081C  0023               	movlb	3	; select bank3
 11804  081D  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
 11805                           
 11806                           ;usb_device.c: 2696: break;
 11807  081E  0008               	return
 11808  081F                     i1l5632:	
 11809                           ;usb_device.c: 2697: case 6:
 11810                           
 11811                           
 11812                           ;usb_device.c: 2698: USBStdGetDscHandler();
 11813  081F  318B  2314         	fcall	i1_USBStdGetDscHandler
 11814                           
 11815                           ;usb_device.c: 2699: break;
 11816  0821  0008               	return
 11817  0822                     i1l5634:	
 11818                           ;usb_device.c: 2700: case 9:
 11819                           
 11820                           
 11821                           ;usb_device.c: 2701: USBStdSetCfgHandler();
 11822  0822  318D  2519         	fcall	i1_USBStdSetCfgHandler
 11823                           
 11824                           ;usb_device.c: 2702: break;
 11825  0824  0008               	return
 11826  0825                     i1l5636:	
 11827                           ;usb_device.c: 2703: case 8:
 11828                           
 11829                           
 11830                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 11831  0825  30EE               	movlw	low _USBActiveConfiguration
 11832  0826  0021               	movlb	1	; select bank1
 11833  0827  00C3               	movwf	_inPipes^(0+128)	;volatile
 11834  0828  3001               	movlw	high _USBActiveConfiguration
 11835  0829  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
 11836                           
 11837                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11838  082A  1445               	bsf	(_inPipes^(0+128)+2),0	;volatile
 11839                           
 11840                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
 11841  082B  3001               	movlw	1
 11842  082C  0020               	movlb	0	; select bank0
 11843  082D  00ED               	movwf	??i1_USBCheckStdRequest
 11844  082E  086D               	movf	??i1_USBCheckStdRequest,w
 11845  082F  0021               	movlb	1	; select bank1
 11846  0830  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
 11847                           
 11848                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
 11849  0831  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 11850                           
 11851                           ;usb_device.c: 2708: break;
 11852  0832  0008               	return
 11853  0833                     i1l5644:	
 11854                           ;usb_device.c: 2709: case 0:
 11855                           
 11856                           
 11857                           ;usb_device.c: 2710: USBStdGetStatusHandler();
 11858  0833  3194  24C2         	fcall	i1_USBStdGetStatusHandler
 11859                           
 11860                           ;usb_device.c: 2711: break;
 11861  0835  0008               	return
 11862  0836                     i1l5646:	
 11863                           ;usb_device.c: 2712: case 1:
 11864                           
 11865                           
 11866                           ;usb_device.c: 2713: case 3:
 11867                           ;usb_device.c: 2714: USBStdFeatureReqHandler();
 11868  0836  3181  21B8         	fcall	i1_USBStdFeatureReqHandler
 11869                           
 11870                           ;usb_device.c: 2715: break;
 11871  0838  0008               	return
 11872  0839                     i1l5648:	
 11873                           ;usb_device.c: 2716: case 10:
 11874                           
 11875                           
 11876                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 11877  0839  0020               	movlb	0	; select bank0
 11878  083A  0854               	movf	84,w	;volatile
 11879  083B  3EEB               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
 11880  083C  0021               	movlb	1	; select bank1
 11881  083D  00C3               	movwf	_inPipes^(0+128)	;volatile
 11882  083E  3001               	movlw	1
 11883  083F  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
 11884                           
 11885                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11886  0840  1445               	bsf	(_inPipes^(0+128)+2),0	;volatile
 11887                           
 11888                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
 11889  0841  3001               	movlw	1
 11890  0842  0020               	movlb	0	; select bank0
 11891  0843  00ED               	movwf	??i1_USBCheckStdRequest
 11892  0844  086D               	movf	??i1_USBCheckStdRequest,w
 11893  0845  0021               	movlb	1	; select bank1
 11894  0846  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
 11895                           
 11896                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
 11897  0847  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 11898                           
 11899                           ;usb_device.c: 2721: break;
 11900  0848  0008               	return
 11901  0849                     i1l601:	
 11902                           ;usb_device.c: 2722: case 11:
 11903                           
 11904                           
 11905                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 11906  0849  0021               	movlb	1	; select bank1
 11907  084A  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 11908                           
 11909                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 11910  084B  0020               	movlb	0	; select bank0
 11911  084C  0852               	movf	82,w	;volatile
 11912  084D  00ED               	movwf	??i1_USBCheckStdRequest
 11913  084E  0854               	movf	84,w	;volatile
 11914  084F  3EEB               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
 11915  0850  0086               	movwf	6
 11916  0851  3001               	movlw	1	; select bank3/4
 11917  0852  0087               	movwf	7
 11918  0853  086D               	movf	??i1_USBCheckStdRequest,w
 11919  0854  0081               	movwf	1
 11920                           
 11921                           ;usb_device.c: 2725: break;
 11922  0855  0008               	return
 11923  0856                     i1l5658:	
 11924                           ;usb_device.c: 2726: case 7:
 11925                           
 11926                           
 11927                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 11928  0856  3000               	movlw	0
 11929  0857  00E1               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 11930  0858  3002               	movlw	2
 11931  0859  00E0               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 11932  085A  3000               	movlw	0
 11933  085B  00E2               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 11934  085C  3000               	movlw	0
 11935  085D  00E3               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 11936  085E  3000               	movlw	0
 11937  085F  00E4               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 11938  0860  00E5               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 11939  0861  3191  2115         	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 11940                           
 11941                           ;usb_device.c: 2732: }
 11942                           
 11943                           ;usb_device.c: 2731: break;
 11944                           
 11945                           ;usb_device.c: 2730: default:
 11946                           
 11947                           ;usb_device.c: 2729: case 12:
 11948                           
 11949                           ;usb_device.c: 2728: break;
 11950  0863  0008               	return
 11951  0864                     i1l5662:	
 11952  0864  0020               	movlb	0	; select bank0
 11953  0865  0851               	movf	81,w	;volatile
 11954                           
 11955                           ; Switch size 1, requested type "space"
 11956                           ; Number of cases is 11, Range of values is 0 to 12
 11957                           ; switch strategies available:
 11958                           ; Name         Instructions Cycles
 11959                           ; direct_byte           32     6 (fixed)
 11960                           ; simple_byte           34    18 (average)
 11961                           ; jumptable            260     6 (fixed)
 11962                           ;	Chosen strategy is direct_byte
 11963  0866  0084               	movwf	4
 11964  0867  300D               	movlw	13
 11965  0868  0204               	subwf	4,w
 11966  0869  1803               	skipnc
 11967  086A  0008               	return
 11968  086B  3198               	movlp	high i1S8488
 11969  086C  3504               	lslf	4,w
 11970  086D  3EAB               	addlw	low i1S8488
 11971  086E  0082               	movwf	2
 11972  086F                     i1l590:	
 11973  086F  0008               	return
 11974  0870                     __end_ofi1_USBCheckStdRequest:	
 11975                           
 11976                           	psect	swtext2
 11977  18AB                     __pswtext2:	
 11978  18AB                     i1S8488:	
 11979  18AB  3188  2833         	ljmp	i1l5644
 11980  18AD  3188  2836         	ljmp	i1l5646
 11981  18AF  3188  286F         	ljmp	i1l590
 11982  18B1  3188  2836         	ljmp	i1l5646
 11983  18B3  3188  286F         	ljmp	i1l590
 11984  18B5  3188  2816         	ljmp	i1l592
 11985  18B7  3188  281F         	ljmp	i1l5632
 11986  18B9  3188  2856         	ljmp	i1l5658
 11987  18BB  3188  2825         	ljmp	i1l5636
 11988  18BD  3188  2822         	ljmp	i1l5634
 11989  18BF  3188  2839         	ljmp	i1l5648
 11990  18C1  3188  2849         	ljmp	i1l601
 11991  18C3  3188  286F         	ljmp	i1l590
 11992                           
 11993                           	psect	text52
 11994  0D19                     __ptext52:	
 11995 ;; *************** function i1_USBStdSetCfgHandler *****************
 11996 ;; Defined at:
 11997 ;;		line 1968 in file "mcc_generated_files/usb/usb_device.c"
 11998 ;; Parameters:    Size  Location     Type
 11999 ;;		None
 12000 ;; Auto vars:     Size  Location     Type
 12001 ;;  USBStdSetCfg    2    7[BANK0h] PTR unsigned char 
 12002 ;;		 -> UEP1(1), 
 12003 ;;  USBStdSetCfg    1   10[BANK0h] unsigned char 
 12004 ;;  USBStdSetCfg    1    9[BANK0h] unsigned char 
 12005 ;; Return value:  Size  Location     Type
 12006 ;;                  1    wreg      void 
 12007 ;; Registers used:
 12008 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12009 ;; Tracked objects:
 12010 ;;		On entry : 0/0
 12011 ;;		On exit  : 0/0
 12012 ;;		Unchanged: 0/0
 12013 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12015 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12016 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12017 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12018 ;;Total ram usage:        5 bytes
 12019 ;; Hardware stack levels used:    1
 12020 ;; Hardware stack levels required when called:    4
 12021 ;; This function calls:
 12022 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 12023 ;;		i1_memset
 12024 ;; This function is called by:
 12025 ;;		i1_USBCheckStdRequest
 12026 ;; This function uses a non-reentrant model
 12027 ;;
 12028                           
 12029                           
 12030                           ;psect for function i1_USBStdSetCfgHandler
 12031  0D19                     i1_USBStdSetCfgHandler:	
 12032                           
 12033                           ;usb_device.c: 1970: uint8_t i;
 12034                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 12035                           
 12036                           ;incstack = 0
 12037 ;; hardware stack exceeded
 12038                           ; Regs used in i1_USBStdSetCfgHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12039  0D19  0021               	movlb	1	; select bank1
 12040  0D1A  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 12041                           
 12042                           ;usb_device.c: 1976: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 
      +                          0; };
 12043  0D1B  300E               	movlw	14
 12044  0D1C  0020               	movlb	0	; select bank0
 12045  0D1D  00E8               	movwf	i1USBStdSetCfgHandler@p+1
 12046  0D1E  3099               	movlw	153
 12047  0D1F  00E7               	movwf	i1USBStdSetCfgHandler@p
 12048  0D20  01E9               	clrf	i1USBStdSetCfgHandler@i_2163
 12049  0D21  3002               	movlw	2
 12050  0D22  0269               	subwf	i1USBStdSetCfgHandler@i_2163,w
 12051  0D23  1803               	btfsc	3,0
 12052  0D24  2D36               	goto	i1l5188
 12053  0D25                     i1l5180:	
 12054  0D25  0867               	movf	i1USBStdSetCfgHandler@p,w
 12055  0D26  0086               	movwf	6
 12056  0D27  0868               	movf	i1USBStdSetCfgHandler@p+1,w
 12057  0D28  0087               	movwf	7
 12058  0D29  0181               	clrf	1
 12059  0D2A  3001               	movlw	1
 12060  0D2B  07E7               	addwf	i1USBStdSetCfgHandler@p,f
 12061  0D2C  3000               	movlw	0
 12062  0D2D  3DE8               	addwfc	i1USBStdSetCfgHandler@p+1,f
 12063  0D2E  3001               	movlw	1
 12064  0D2F  00E6               	movwf	??i1_USBStdSetCfgHandler
 12065  0D30  0866               	movf	??i1_USBStdSetCfgHandler,w
 12066  0D31  07E9               	addwf	i1USBStdSetCfgHandler@i_2163,f
 12067  0D32  3002               	movlw	2
 12068  0D33  0269               	subwf	i1USBStdSetCfgHandler@i_2163,w
 12069  0D34  1C03               	skipc
 12070  0D35  2D25               	goto	i1l5180
 12071  0D36                     i1l5188:	
 12072                           
 12073                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 12074  0D36  3020               	movlw	32
 12075  0D37  00F0               	movwf	i1memset@p1
 12076  0D38  3000               	movlw	0
 12077  0D39  00F1               	movwf	i1memset@p1+1
 12078  0D3A  3000               	movlw	0
 12079  0D3B  00F2               	movwf	i1memset@c
 12080  0D3C  00F3               	movwf	i1memset@c+1
 12081  0D3D  3030               	movlw	48
 12082  0D3E  00F4               	movwf	i1memset@n
 12083  0D3F  3000               	movlw	0
 12084  0D40  00F5               	movwf	i1memset@n+1
 12085  0D41  319E  26A1  318D   	fcall	i1_memset
 12086                           
 12087                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 12088  0D44  003D               	movlb	29	; select bank29
 12089  0D45  170E               	bsf	14,6	;volatile
 12090                           
 12091                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
 12092  0D46  0020               	movlb	0	; select bank0
 12093  0D47  01EA               	clrf	i1USBStdSetCfgHandler@i
 12094  0D48  3003               	movlw	3
 12095  0D49  026A               	subwf	i1USBStdSetCfgHandler@i,w
 12096  0D4A  1803               	btfsc	3,0
 12097  0D4B  2D60               	goto	i1l5204
 12098  0D4C                     i1l5198:	
 12099                           
 12100                           ;usb_device.c: 1988: {
 12101                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 12102  0D4C  086A               	movf	i1USBStdSetCfgHandler@i,w
 12103  0D4D  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
 12104  0D4E  0086               	movwf	6
 12105  0D4F  3001               	movlw	1	; select bank3/4
 12106  0D50  0087               	movwf	7
 12107  0D51  0181               	clrf	1
 12108                           
 12109                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 12110  0D52  086A               	movf	i1USBStdSetCfgHandler@i,w
 12111  0D53  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
 12112  0D54  0086               	movwf	6
 12113  0D55  3001               	movlw	1	; select bank3/4
 12114  0D56  0087               	movwf	7
 12115  0D57  0181               	clrf	1
 12116  0D58  3001               	movlw	1
 12117  0D59  00E6               	movwf	??i1_USBStdSetCfgHandler
 12118  0D5A  0866               	movf	??i1_USBStdSetCfgHandler,w
 12119  0D5B  07EA               	addwf	i1USBStdSetCfgHandler@i,f
 12120  0D5C  3003               	movlw	3
 12121  0D5D  026A               	subwf	i1USBStdSetCfgHandler@i,w
 12122  0D5E  1C03               	skipc
 12123  0D5F  2D4C               	goto	i1l5198
 12124  0D60                     i1l5204:	
 12125                           
 12126                           ;usb_device.c: 1991: }
 12127                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 12128  0D60  30EB               	movlw	low _USBAlternateInterface
 12129  0D61  00F0               	movwf	i1memset@p1
 12130  0D62  3001               	movlw	high _USBAlternateInterface
 12131  0D63  00F1               	movwf	i1memset@p1+1
 12132  0D64  3000               	movlw	0
 12133  0D65  00F2               	movwf	i1memset@c
 12134  0D66  00F3               	movwf	i1memset@c+1
 12135  0D67  3002               	movlw	2
 12136  0D68  00F4               	movwf	i1memset@n
 12137  0D69  3000               	movlw	0
 12138  0D6A  00F5               	movwf	i1memset@n+1
 12139  0D6B  319E  26A1  318D   	fcall	i1_memset
 12140                           
 12141                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 12142  0D6E  003D               	movlb	29	; select bank29
 12143  0D6F  130E               	bcf	14,6	;volatile
 12144                           
 12145                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 12146  0D70  3028               	movlw	40
 12147  0D71  0023               	movlb	3	; select bank3
 12148  0D72  00B7               	movwf	_pBDTEntryIn^(0+384)
 12149  0D73  3000               	movlw	0
 12150  0D74  00B8               	movwf	(_pBDTEntryIn+1)^(0+384)
 12151                           
 12152                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 12153  0D75  3020               	movlw	32
 12154  0D76  0020               	movlb	0	; select bank0
 12155  0D77  00E6               	movwf	??i1_USBStdSetCfgHandler
 12156  0D78  0866               	movf	??i1_USBStdSetCfgHandler,w
 12157  0D79  0023               	movlb	3	; select bank3
 12158  0D7A  00E4               	movwf	_pBDTEntryEP0OutCurrent^(0+384)
 12159                           
 12160                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 12161  0D7B  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 12162  0D7C  0021               	movlb	1	; select bank1
 12163  0D7D  00C8               	movwf	_pBDTEntryEP0OutNext^(0+128)
 12164  0D7E  39FF               	andlw	255
 12165  0D7F  1D03               	skipz
 12166  0D80  3000               	movlw	0
 12167  0D81  00C9               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
 12168                           
 12169                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 12170  0D82  0020               	movlb	0	; select bank0
 12171  0D83  0852               	movf	82,w	;volatile
 12172  0D84  00E6               	movwf	??i1_USBStdSetCfgHandler
 12173  0D85  0866               	movf	??i1_USBStdSetCfgHandler,w
 12174  0D86  0023               	movlb	3	; select bank3
 12175  0D87  00EE               	movwf	_USBActiveConfiguration^(0+384)	;volatile
 12176                           
 12177                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 12178  0D88  086E               	movf	_USBActiveConfiguration^(0+384),w	;volatile
 12179  0D89  1D03               	btfss	3,2
 12180  0D8A  2D92               	goto	i1l5220
 12181                           
 12182                           ;usb_device.c: 2010: {
 12183                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 12184  0D8B  3010               	movlw	16
 12185  0D8C  0020               	movlb	0	; select bank0
 12186  0D8D  00E6               	movwf	??i1_USBStdSetCfgHandler
 12187  0D8E  0866               	movf	??i1_USBStdSetCfgHandler,w
 12188  0D8F  0023               	movlb	3	; select bank3
 12189  0D90  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
 12190                           
 12191                           ;usb_device.c: 2013: }
 12192  0D91  0008               	return
 12193  0D92                     i1l5220:	
 12194                           
 12195                           ;usb_device.c: 2014: else
 12196                           ;usb_device.c: 2015: {
 12197                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 12198  0D92  3000               	movlw	0
 12199  0D93  0020               	movlb	0	; select bank0
 12200  0D94  00E1               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 12201  0D95  3001               	movlw	1
 12202  0D96  00E0               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 12203  0D97  30EE               	movlw	low _USBActiveConfiguration
 12204  0D98  00E2               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 12205  0D99  3001               	movlw	high _USBActiveConfiguration
 12206  0D9A  00E3               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 12207  0D9B  3001               	movlw	1
 12208  0D9C  00E4               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 12209  0D9D  3000               	movlw	0
 12210  0D9E  00E5               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 12211  0D9F  3191  2115         	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 12212                           
 12213                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 12214  0DA1  3020               	movlw	32
 12215  0DA2  0020               	movlb	0	; select bank0
 12216  0DA3  00E6               	movwf	??i1_USBStdSetCfgHandler
 12217  0DA4  0866               	movf	??i1_USBStdSetCfgHandler,w
 12218  0DA5  0023               	movlb	3	; select bank3
 12219  0DA6  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
 12220  0DA7  0008               	return
 12221  0DA8                     __end_ofi1_USBStdSetCfgHandler:	
 12222                           
 12223                           	psect	text53
 12224  1EA1                     __ptext53:	
 12225 ;; *************** function i1_memset *****************
 12226 ;; Defined at:
 12227 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
 12228 ;; Parameters:    Size  Location     Type
 12229 ;;  p1              2    0[COMMON] PTR void 
 12230 ;;		 -> USBAlternateInterface(2), BDT(48), 
 12231 ;;  c               2    2[COMMON] int 
 12232 ;;  n               2    4[COMMON] unsigned int 
 12233 ;; Auto vars:     Size  Location     Type
 12234 ;;  memset          2    6[COMMON] PTR unsigned char 
 12235 ;;		 -> USBAlternateInterface(2), BDT(48), 
 12236 ;; Return value:  Size  Location     Type
 12237 ;;                  1    wreg      PTR void 
 12238 ;; Registers used:
 12239 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12240 ;; Tracked objects:
 12241 ;;		On entry : 0/0
 12242 ;;		On exit  : 0/0
 12243 ;;		Unchanged: 0/0
 12244 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12245 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12246 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12248 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12249 ;;Total ram usage:        8 bytes
 12250 ;; Hardware stack levels used:    1
 12251 ;; This function calls:
 12252 ;;		Nothing
 12253 ;; This function is called by:
 12254 ;;		i1_USBStdSetCfgHandler
 12255 ;; This function uses a non-reentrant model
 12256 ;;
 12257                           
 12258                           
 12259                           ;psect for function i1_memset
 12260  1EA1                     i1_memset:	
 12261                           
 12262                           ;incstack = 0
 12263                           ; Regs used in i1_memset: [wreg+fsr1l+fsr1h+status,2+status,0]
 12264  1EA1  0871               	movf	i1memset@p1+1,w
 12265  1EA2  00F7               	movwf	i1memset@p+1
 12266  1EA3  0870               	movf	i1memset@p1,w
 12267  1EA4  00F6               	movwf	i1memset@p
 12268  1EA5                     i1l4848:	
 12269  1EA5  3001               	movlw	1
 12270  1EA6  02F4               	subwf	i1memset@n,f
 12271  1EA7  3000               	movlw	0
 12272  1EA8  3BF5               	subwfb	i1memset@n+1,f
 12273  1EA9  0A74               	incf	i1memset@n,w
 12274  1EAA  1903               	btfsc	3,2
 12275  1EAB  0A75               	incf	i1memset@n+1,w
 12276  1EAC  1903               	btfsc	3,2
 12277  1EAD  0008               	return
 12278  1EAE  0876               	movf	i1memset@p,w
 12279  1EAF  0086               	movwf	6
 12280  1EB0  0877               	movf	i1memset@p+1,w
 12281  1EB1  0087               	movwf	7
 12282  1EB2  0872               	movf	i1memset@c,w
 12283  1EB3  0081               	movwf	1
 12284  1EB4  3001               	movlw	1
 12285  1EB5  07F6               	addwf	i1memset@p,f
 12286  1EB6  3000               	movlw	0
 12287  1EB7  3DF7               	addwfc	i1memset@p+1,f
 12288  1EB8  2EA5               	goto	i1l4848
 12289  1EB9                     __end_ofi1_memset:	
 12290                           ;	Return value of i1_memset is never used
 12291                           
 12292                           
 12293                           	psect	text54
 12294  14C2                     __ptext54:	
 12295 ;; *************** function i1_USBStdGetStatusHandler *****************
 12296 ;; Defined at:
 12297 ;;		line 2129 in file "mcc_generated_files/usb/usb_device.c"
 12298 ;; Parameters:    Size  Location     Type
 12299 ;;		None
 12300 ;; Auto vars:     Size  Location     Type
 12301 ;;  USBStdGetSta    2    1[COMMON] PTR struct __BDT
 12302 ;;		 -> RAM(4096), BDT(48), NULL(0), 
 12303 ;; Return value:  Size  Location     Type
 12304 ;;                  1    wreg      void 
 12305 ;; Registers used:
 12306 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 12307 ;; Tracked objects:
 12308 ;;		On entry : 0/0
 12309 ;;		On exit  : 0/0
 12310 ;;		Unchanged: 0/0
 12311 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12313 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12314 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12315 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12316 ;;Total ram usage:        3 bytes
 12317 ;; Hardware stack levels used:    1
 12318 ;; This function calls:
 12319 ;;		Nothing
 12320 ;; This function is called by:
 12321 ;;		i1_USBCheckStdRequest
 12322 ;; This function uses a non-reentrant model
 12323 ;;
 12324                           
 12325                           
 12326                           ;psect for function i1_USBStdGetStatusHandler
 12327  14C2                     i1_USBStdGetStatusHandler:	
 12328                           
 12329                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 12330                           
 12331                           ;incstack = 0
 12332                           ; Regs used in i1_USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
 12333  14C2  0020               	movlb	0	; select bank0
 12334  14C3  01D8               	clrf	88	;volatile
 12335                           
 12336                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 12337  14C4  01D9               	clrf	89	;volatile
 12338                           
 12339                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 12340  14C5  2CFE               	goto	i1l5276
 12341  14C6                     i1l530:	
 12342                           ;usb_device.c: 2135: {
 12343                           ;usb_device.c: 2136: case (0x00):
 12344                           
 12345                           
 12346                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 12347  14C6  0021               	movlb	1	; select bank1
 12348  14C7  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 12349                           
 12350                           ;usb_device.c: 2145: }
 12351                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 12352                           
 12353                           ;usb_device.c: 2143: {
 12354                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 12355                           
 12356                           ;usb_device.c: 2142: if(0 == 1)
 12357  14C8  0023               	movlb	3	; select bank3
 12358  14C9  0360               	decf	_RemoteWakeup^(0+384),w	;volatile
 12359  14CA  1D03               	btfss	3,2
 12360  14CB  2D0A               	goto	i1l533
 12361                           
 12362                           ;usb_device.c: 2148: {
 12363                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 12364  14CC  0020               	movlb	0	; select bank0
 12365  14CD  14D8               	bsf	88,1	;volatile
 12366                           
 12367                           ;usb_device.c: 2150: }
 12368                           ;usb_device.c: 2151: break;
 12369  14CE  2D0A               	goto	i1l533
 12370  14CF                     i1l534:	
 12371                           ;usb_device.c: 2152: case (0x01):
 12372                           
 12373                           
 12374                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 12375  14CF  0021               	movlb	1	; select bank1
 12376  14D0  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 12377                           
 12378                           ;usb_device.c: 2154: break;
 12379  14D1  2D0A               	goto	i1l533
 12380  14D2                     i1l535:	
 12381                           ;usb_device.c: 2155: case (0x02):
 12382                           
 12383                           
 12384                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 12385  14D2  0021               	movlb	1	; select bank1
 12386  14D3  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 12387                           
 12388                           ;usb_device.c: 2160: {
 12389                           ;usb_device.c: 2161: BDT_ENTRY *p;
 12390                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 12391  14D4  0020               	movlb	0	; select bank0
 12392  14D5  1BD4               	btfsc	84,7	;volatile
 12393  14D6  2CE2               	goto	i1l5266
 12394                           
 12395                           ;usb_device.c: 2164: {
 12396                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 12397  14D7  0854               	movf	84,w	;volatile
 12398  14D8  390F               	andlw	15
 12399  14D9  0709               	addwf	9,w
 12400  14DA  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 12401  14DB  0086               	movwf	6
 12402  14DC  3001               	movlw	1	; select bank3/4
 12403  14DD  0087               	movwf	7
 12404  14DE  3F40               	moviw [0]fsr1
 12405  14DF  00F1               	movwf	i1USBStdGetStatusHandler@p
 12406  14E0  3F41               	moviw [1]fsr1
 12407  14E1  2CEC               	goto	L13
 12408  14E2                     i1l5266:	
 12409                           ;usb_device.c: 2166: }
 12410                           
 12411                           
 12412                           ;usb_device.c: 2167: else
 12413                           ;usb_device.c: 2168: {
 12414                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 12415  14E2  0854               	movf	84,w	;volatile
 12416  14E3  390F               	andlw	15
 12417  14E4  0709               	addwf	9,w
 12418  14E5  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 12419  14E6  0086               	movwf	6
 12420  14E7  3001               	movlw	1	; select bank3/4
 12421  14E8  0087               	movwf	7
 12422  14E9  3F40               	moviw [0]fsr1
 12423  14EA  00F1               	movwf	i1USBStdGetStatusHandler@p
 12424  14EB  3F41               	moviw [1]fsr1
 12425  14EC                     L13:	
 12426  14EC  00F2               	movwf	i1USBStdGetStatusHandler@p+1
 12427                           
 12428                           ;usb_device.c: 2170: }
 12429                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 12430  14ED  0871               	movf	i1USBStdGetStatusHandler@p,w
 12431  14EE  0086               	movwf	6
 12432  14EF  0872               	movf	i1USBStdGetStatusHandler@p+1,w
 12433  14F0  0087               	movwf	7
 12434  14F1  1F81               	btfss	1,7
 12435  14F2  2D0A               	goto	i1l533
 12436  14F3  0871               	movf	i1USBStdGetStatusHandler@p,w
 12437  14F4  0086               	movwf	6
 12438  14F5  0872               	movf	i1USBStdGetStatusHandler@p+1,w
 12439  14F6  0087               	movwf	7
 12440  14F7  1D01               	btfss	1,2
 12441  14F8  2D0A               	goto	i1l533
 12442                           
 12443                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 12444  14F9  3001               	movlw	1
 12445  14FA  00F0               	movwf	??i1_USBStdGetStatusHandler
 12446  14FB  0870               	movf	??i1_USBStdGetStatusHandler,w
 12447  14FC  00D8               	movwf	88	;volatile
 12448                           
 12449                           ;usb_device.c: 2175: }
 12450                           ;usb_device.c: 2176: }
 12451                           
 12452                           ;usb_device.c: 2174: break;
 12453  14FD  2D0A               	goto	i1l533
 12454  14FE                     i1l5276:	
 12455  14FE  0850               	movf	80,w	;volatile
 12456  14FF  391F               	andlw	31
 12457                           
 12458                           ; Switch size 1, requested type "space"
 12459                           ; Number of cases is 3, Range of values is 0 to 2
 12460                           ; switch strategies available:
 12461                           ; Name         Instructions Cycles
 12462                           ; simple_byte           10     6 (average)
 12463                           ; direct_byte           12     6 (fixed)
 12464                           ; jumptable            260     6 (fixed)
 12465                           ;	Chosen strategy is simple_byte
 12466  1500  3A00               	xorlw	0	; case 0
 12467  1501  1903               	skipnz
 12468  1502  2CC6               	goto	i1l530
 12469  1503  3A01               	xorlw	1	; case 1
 12470  1504  1903               	skipnz
 12471  1505  2CCF               	goto	i1l534
 12472  1506  3A03               	xorlw	3	; case 2
 12473  1507  1903               	skipnz
 12474  1508  2CD2               	goto	i1l535
 12475  1509  2D0A               	goto	i1l533
 12476  150A                     i1l533:	
 12477                           
 12478                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 12479  150A  0021               	movlb	1	; select bank1
 12480  150B  1FC5               	btfss	(_inPipes^(0+128)+2),7	;volatile
 12481  150C  0008               	return
 12482                           
 12483                           ;usb_device.c: 2179: {
 12484                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 12485  150D  3058               	movlw	88
 12486  150E  00C3               	movwf	_inPipes^(0+128)	;volatile
 12487  150F  3000               	movlw	0
 12488  1510  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
 12489                           
 12490                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 12491  1511  1445               	bsf	(_inPipes^(0+128)+2),0	;volatile
 12492                           
 12493                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 12494  1512  3002               	movlw	2
 12495  1513  00F0               	movwf	??i1_USBStdGetStatusHandler
 12496  1514  0870               	movf	??i1_USBStdGetStatusHandler,w
 12497  1515  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
 12498  1516  0008               	return
 12499  1517                     __end_ofi1_USBStdGetStatusHandler:	
 12500                           
 12501                           	psect	text55
 12502  0B14                     __ptext55:	
 12503 ;; *************** function i1_USBStdGetDscHandler *****************
 12504 ;; Defined at:
 12505 ;;		line 2043 in file "mcc_generated_files/usb/usb_device.c"
 12506 ;; Parameters:    Size  Location     Type
 12507 ;;		None
 12508 ;; Auto vars:     Size  Location     Type
 12509 ;;		None
 12510 ;; Return value:  Size  Location     Type
 12511 ;;                  1    wreg      void 
 12512 ;; Registers used:
 12513 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 12514 ;; Tracked objects:
 12515 ;;		On entry : 0/0
 12516 ;;		On exit  : 0/0
 12517 ;;		Unchanged: 0/0
 12518 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12521 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12522 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12523 ;;Total ram usage:        3 bytes
 12524 ;; Hardware stack levels used:    1
 12525 ;; This function calls:
 12526 ;;		Nothing
 12527 ;; This function is called by:
 12528 ;;		i1_USBCheckStdRequest
 12529 ;; This function uses a non-reentrant model
 12530 ;;
 12531                           
 12532                           
 12533                           ;psect for function i1_USBStdGetDscHandler
 12534  0B14                     i1_USBStdGetDscHandler:	
 12535                           
 12536                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 12537                           
 12538                           ;incstack = 0
 12539                           ; Regs used in i1_USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
 12540  0B14  3080               	movlw	128
 12541  0B15  0020               	movlb	0	; select bank0
 12542  0B16  0650               	xorwf	80,w	;volatile
 12543  0B17  1D03               	btfss	3,2
 12544  0B18  0008               	return
 12545                           
 12546                           ;usb_device.c: 2046: {
 12547                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 12548  0B19  30C0               	movlw	192
 12549  0B1A  00F0               	movwf	??i1_USBStdGetDscHandler
 12550  0B1B  0870               	movf	??i1_USBStdGetDscHandler,w
 12551  0B1C  0021               	movlb	1	; select bank1
 12552  0B1D  00C5               	movwf	(_inPipes^(0+128)+2)	;volatile
 12553                           
 12554                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 12555  0B1E  2B86               	goto	i1l5254
 12556  0B1F                     i1l5228:	
 12557                           ;usb_device.c: 2050: {
 12558                           ;usb_device.c: 2051: case 0x01:
 12559                           
 12560                           
 12561                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 12562  0B1F  30C5               	movlw	low (_device_dsc| (0+32768))
 12563  0B20  0021               	movlb	1	; select bank1
 12564  0B21  00C3               	movwf	_inPipes^(0+128)	;volatile
 12565  0B22  3098               	movlw	high (_device_dsc| (0+32768))
 12566  0B23  00C4               	movwf	(_inPipes^(0+128)+1)	;volatile
 12567                           
 12568                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 12569  0B24  3000               	movlw	0
 12570  0B25  00C7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
 12571  0B26  3012               	movlw	18
 12572  0B27  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
 12573                           
 12574                           ;usb_device.c: 2058: break;
 12575  0B28  0008               	return
 12576  0B29                     i1l5232:	
 12577                           ;usb_device.c: 2059: case 0x02:
 12578                           
 12579                           
 12580                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 12581  0B29  0020               	movlb	0	; select bank0
 12582  0B2A  0852               	movf	82,w	;volatile
 12583  0B2B  1D03               	btfss	3,2
 12584  0B2C  2B5C               	goto	i1l5240
 12585                           
 12586                           ;usb_device.c: 2064: {
 12587                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 12588  0B2D  0852               	movf	82,w	;volatile
 12589  0B2E  00F0               	movwf	??i1_USBStdGetDscHandler
 12590  0B2F  01F1               	clrf	??i1_USBStdGetDscHandler+1
 12591  0B30  35F0               	lslf	??i1_USBStdGetDscHandler,f
 12592  0B31  0DF1               	rlf	??i1_USBStdGetDscHandler+1,f
 12593  0B32  30E8               	movlw	low (_USB_CD_Ptr| (0+32768))
 12594  0B33  0770               	addwf	??i1_USBStdGetDscHandler,w
 12595  0B34  0084               	movwf	4
 12596  0B35  3098               	movlw	high (_USB_CD_Ptr| (0+32768))
 12597  0B36  3D71               	addwfc	??i1_USBStdGetDscHandler+1,w
 12598  0B37  0085               	movwf	5
 12599  0B38  3F00               	moviw [0]fsr0
 12600  0B39  0021               	movlb	1	; select bank1
 12601  0B3A  00C3               	movwf	_inPipes^(0+128)	;volatile
 12602  0B3B  3F01               	moviw [1]fsr0
 12603  0B3C  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
 12604                           
 12605                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 12606  0B3D  0844               	movf	(_inPipes+1)^(0+128),w	;volatile
 12607  0B3E  00F1               	movwf	??i1_USBStdGetDscHandler+1
 12608  0B3F  0843               	movf	_inPipes^(0+128),w	;volatile
 12609  0B40  00F0               	movwf	??i1_USBStdGetDscHandler
 12610  0B41  3002               	movlw	2
 12611  0B42  0770               	addwf	??i1_USBStdGetDscHandler,w
 12612  0B43  0084               	movwf	4
 12613  0B44  0871               	movf	??i1_USBStdGetDscHandler+1,w
 12614  0B45  1803               	skipnc
 12615  0B46  0A71               	incf	??i1_USBStdGetDscHandler+1,w
 12616  0B47  0085               	movwf	5
 12617  0B48  0800               	movf	0,w	;code access
 12618  0B49  00F2               	movwf	??i1_USBStdGetDscHandler+2
 12619  0B4A  0872               	movf	??i1_USBStdGetDscHandler+2,w
 12620  0B4B  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
 12621                           
 12622                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 12623  0B4C  0844               	movf	(_inPipes+1)^(0+128),w	;volatile
 12624  0B4D  00F1               	movwf	??i1_USBStdGetDscHandler+1
 12625  0B4E  0843               	movf	_inPipes^(0+128),w	;volatile
 12626  0B4F  00F0               	movwf	??i1_USBStdGetDscHandler
 12627  0B50  3003               	movlw	3
 12628  0B51  0770               	addwf	??i1_USBStdGetDscHandler,w
 12629  0B52  0084               	movwf	4
 12630  0B53  0871               	movf	??i1_USBStdGetDscHandler+1,w
 12631  0B54  1803               	skipnc
 12632  0B55  0A71               	incf	??i1_USBStdGetDscHandler+1,w
 12633  0B56  0085               	movwf	5
 12634  0B57  0800               	movf	0,w	;code access
 12635  0B58  00F2               	movwf	??i1_USBStdGetDscHandler+2
 12636  0B59  0872               	movf	??i1_USBStdGetDscHandler+2,w
 12637  0B5A  00C7               	movwf	(_inPipes^(0+128)+4)	;volatile
 12638                           
 12639                           ;usb_device.c: 2076: }
 12640  0B5B  0008               	return
 12641  0B5C                     i1l5240:	
 12642                           
 12643                           ;usb_device.c: 2077: else
 12644                           ;usb_device.c: 2078: {
 12645                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 12646  0B5C  0021               	movlb	1	; select bank1
 12647  0B5D  01C5               	clrf	(_inPipes^(0+128)+2)	;volatile
 12648                           
 12649                           ;usb_device.c: 2080: }
 12650                           ;usb_device.c: 2081: break;
 12651  0B5E  0008               	return
 12652  0B5F                     i1l5242:	
 12653                           ;usb_device.c: 2082: case 0x03:
 12654                           
 12655                           
 12656                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 12657  0B5F  3003               	movlw	3
 12658  0B60  0020               	movlb	0	; select bank0
 12659  0B61  0252               	subwf	82,w	;volatile
 12660  0B62  1803               	skipnc
 12661  0B63  2B80               	goto	i1l5248
 12662                           
 12663                           ;usb_device.c: 2087: {
 12664                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 12665  0B64  0852               	movf	82,w	;volatile
 12666  0B65  00F0               	movwf	??i1_USBStdGetDscHandler
 12667  0B66  01F1               	clrf	??i1_USBStdGetDscHandler+1
 12668  0B67  35F0               	lslf	??i1_USBStdGetDscHandler,f
 12669  0B68  0DF1               	rlf	??i1_USBStdGetDscHandler+1,f
 12670  0B69  30DF               	movlw	low (_USB_SD_Ptr| (0+32768))
 12671  0B6A  0770               	addwf	??i1_USBStdGetDscHandler,w
 12672  0B6B  0084               	movwf	4
 12673  0B6C  3098               	movlw	high (_USB_SD_Ptr| (0+32768))
 12674  0B6D  3D71               	addwfc	??i1_USBStdGetDscHandler+1,w
 12675  0B6E  0085               	movwf	5
 12676  0B6F  3F00               	moviw [0]fsr0
 12677  0B70  0021               	movlb	1	; select bank1
 12678  0B71  00C3               	movwf	_inPipes^(0+128)	;volatile
 12679  0B72  3F01               	moviw [1]fsr0
 12680  0B73  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
 12681                           
 12682                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 12683  0B74  0843               	movf	_inPipes^(0+128),w	;volatile
 12684  0B75  0084               	movwf	4
 12685  0B76  0844               	movf	(_inPipes+1)^(0+128),w	;volatile
 12686  0B77  0085               	movwf	5
 12687  0B78  0800               	movf	0,w	;code access
 12688  0B79  00F0               	movwf	??i1_USBStdGetDscHandler
 12689  0B7A  01F1               	clrf	??i1_USBStdGetDscHandler+1
 12690  0B7B  0870               	movf	??i1_USBStdGetDscHandler,w
 12691  0B7C  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
 12692  0B7D  0871               	movf	??i1_USBStdGetDscHandler+1,w
 12693  0B7E  00C7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
 12694                           
 12695                           ;usb_device.c: 2092: }
 12696  0B7F  0008               	return
 12697  0B80                     i1l5248:	
 12698                           
 12699                           ;usb_device.c: 2102: else
 12700                           ;usb_device.c: 2103: {
 12701                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 12702  0B80  0021               	movlb	1	; select bank1
 12703  0B81  01C5               	clrf	(_inPipes^(0+128)+2)	;volatile
 12704                           
 12705                           ;usb_device.c: 2105: }
 12706                           ;usb_device.c: 2106: break;
 12707  0B82  0008               	return
 12708  0B83                     i1l5250:	
 12709                           ;usb_device.c: 2107: default:
 12710                           
 12711                           
 12712                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 12713  0B83  0021               	movlb	1	; select bank1
 12714  0B84  01C5               	clrf	(_inPipes^(0+128)+2)	;volatile
 12715                           
 12716                           ;usb_device.c: 2110: }
 12717                           
 12718                           ;usb_device.c: 2109: break;
 12719  0B85  0008               	return
 12720  0B86                     i1l5254:	
 12721  0B86  0020               	movlb	0	; select bank0
 12722  0B87  0853               	movf	83,w	;volatile
 12723                           
 12724                           ; Switch size 1, requested type "space"
 12725                           ; Number of cases is 3, Range of values is 1 to 3
 12726                           ; switch strategies available:
 12727                           ; Name         Instructions Cycles
 12728                           ; simple_byte           10     6 (average)
 12729                           ; direct_byte           15     9 (fixed)
 12730                           ; jumptable            263     9 (fixed)
 12731                           ;	Chosen strategy is simple_byte
 12732  0B88  3A01               	xorlw	1	; case 1
 12733  0B89  1903               	skipnz
 12734  0B8A  2B1F               	goto	i1l5228
 12735  0B8B  3A03               	xorlw	3	; case 2
 12736  0B8C  1903               	skipnz
 12737  0B8D  2B29               	goto	i1l5232
 12738  0B8E  3A01               	xorlw	1	; case 3
 12739  0B8F  1903               	skipnz
 12740  0B90  2B5F               	goto	i1l5242
 12741  0B91  2B83               	goto	i1l5250
 12742  0B92  0008               	return
 12743  0B93                     __end_ofi1_USBStdGetDscHandler:	
 12744                           
 12745                           	psect	text56
 12746  01B8                     __ptext56:	
 12747 ;; *************** function i1_USBStdFeatureReqHandler *****************
 12748 ;; Defined at:
 12749 ;;		line 2754 in file "mcc_generated_files/usb/usb_device.c"
 12750 ;; Parameters:    Size  Location     Type
 12751 ;;		None
 12752 ;; Auto vars:     Size  Location     Type
 12753 ;;  USBStdFeatur    2   11[BANK0h] PTR struct __BDT
 12754 ;;		 -> RAM(4096), BDT(48), NULL(0), 
 12755 ;;  USBStdFeatur    2    8[BANK0h] PTR unsigned char 
 12756 ;;		 -> UEP0(1), 
 12757 ;;  USBStdFeatur    1   10[BANK0h] struct .
 12758 ;; Return value:  Size  Location     Type
 12759 ;;                  1    wreg      void 
 12760 ;; Registers used:
 12761 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12762 ;; Tracked objects:
 12763 ;;		On entry : 0/0
 12764 ;;		On exit  : 0/0
 12765 ;;		Unchanged: 0/0
 12766 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12768 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12769 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12770 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12771 ;;Total ram usage:        7 bytes
 12772 ;; Hardware stack levels used:    1
 12773 ;; Hardware stack levels required when called:    4
 12774 ;; This function calls:
 12775 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 12776 ;; This function is called by:
 12777 ;;		i1_USBCheckStdRequest
 12778 ;; This function uses a non-reentrant model
 12779 ;;
 12780                           
 12781                           
 12782                           ;psect for function i1_USBStdFeatureReqHandler
 12783  01B8                     i1_USBStdFeatureReqHandler:	
 12784                           
 12785                           ;usb_device.c: 2756: BDT_ENTRY *p;
 12786                           ;usb_device.c: 2757: EP_STATUS current_ep_data;
 12787                           ;usb_device.c: 2761: unsigned char* pUEP;
 12788                           ;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&
 12789                           ;usb_device.c: 2800: (SetupPkt.Recipient == (0x00)))
 12790                           
 12791                           ;incstack = 0
 12792 ;; hardware stack exceeded
 12793                           ; Regs used in i1_USBStdFeatureReqHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12794  01B8  0020               	movlb	0	; select bank0
 12795  01B9  0352               	decf	82,w	;volatile
 12796  01BA  1D03               	btfss	3,2
 12797  01BB  29D0               	goto	i1l5296
 12798  01BC  0850               	movf	80,w	;volatile
 12799  01BD  391F               	andlw	31
 12800  01BE  3A00               	xorlw	0
 12801  01BF  1D03               	skipz
 12802  01C0  29D0               	goto	i1l5296
 12803                           
 12804                           ;usb_device.c: 2801: {
 12805                           ;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
 12806  01C1  0021               	movlb	1	; select bank1
 12807  01C2  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 12808                           
 12809                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
 12810  01C3  3003               	movlw	3
 12811  01C4  0020               	movlb	0	; select bank0
 12812  01C5  0651               	xorwf	81,w	;volatile
 12813  01C6  1D03               	btfss	3,2
 12814  01C7  29CE               	goto	i1l5294
 12815                           
 12816                           ;usb_device.c: 2804: RemoteWakeup = 1;
 12817  01C8  3001               	movlw	1
 12818  01C9  00E6               	movwf	??i1_USBStdFeatureReqHandler
 12819  01CA  0866               	movf	??i1_USBStdFeatureReqHandler,w
 12820  01CB  0023               	movlb	3	; select bank3
 12821  01CC  00E0               	movwf	_RemoteWakeup^(0+384)	;volatile
 12822  01CD  29D0               	goto	i1l5296
 12823  01CE                     i1l5294:	
 12824                           
 12825                           ;usb_device.c: 2805: else
 12826                           ;usb_device.c: 2806: RemoteWakeup = 0;
 12827  01CE  0023               	movlb	3	; select bank3
 12828  01CF  01E0               	clrf	_RemoteWakeup^(0+384)	;volatile
 12829  01D0                     i1l5296:	
 12830                           
 12831                           ;usb_device.c: 2807: }
 12832                           ;usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&
 12833                           ;usb_device.c: 2811: (SetupPkt.Recipient == (0x02))&&
 12834                           ;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 12835                           ;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
 12836  01D0  0020               	movlb	0	; select bank0
 12837  01D1  0852               	movf	82,w	;volatile
 12838  01D2  1D03               	btfss	3,2
 12839  01D3  0008               	return
 12840  01D4  0850               	movf	80,w	;volatile
 12841  01D5  391F               	andlw	31
 12842  01D6  3A02               	xorlw	2
 12843  01D7  1D03               	skipz
 12844  01D8  0008               	return
 12845  01D9  0854               	movf	84,w	;volatile
 12846  01DA  390F               	andlw	15
 12847  01DB  3A00               	xorlw	0
 12848  01DC  1903               	skipnz
 12849  01DD  0008               	return
 12850  01DE  0854               	movf	84,w	;volatile
 12851  01DF  390F               	andlw	15
 12852  01E0  00E6               	movwf	??i1_USBStdFeatureReqHandler
 12853  01E1  3003               	movlw	3
 12854  01E2  0266               	subwf	??i1_USBStdFeatureReqHandler,w
 12855  01E3  1803               	skipnc
 12856  01E4  0008               	return
 12857  01E5  3020               	movlw	32
 12858  01E6  0023               	movlb	3	; select bank3
 12859  01E7  0665               	xorwf	_USBDeviceState^(0+384),w	;volatile
 12860  01E8  1D03               	btfss	3,2
 12861  01E9  0008               	return
 12862                           
 12863                           ;usb_device.c: 2814: {
 12864                           ;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
 12865  01EA  0021               	movlb	1	; select bank1
 12866  01EB  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 12867                           
 12868                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
 12869  01EC  0020               	movlb	0	; select bank0
 12870  01ED  1BD4               	btfsc	84,7	;volatile
 12871  01EE  29FE               	goto	i1l5310
 12872                           
 12873                           ;usb_device.c: 2821: {
 12874                           ;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 12875  01EF  0854               	movf	84,w	;volatile
 12876  01F0  390F               	andlw	15
 12877  01F1  0709               	addwf	9,w
 12878  01F2  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 12879  01F3  0086               	movwf	6
 12880  01F4  3001               	movlw	1	; select bank3/4
 12881  01F5  0087               	movwf	7
 12882  01F6  3F40               	moviw [0]fsr1
 12883  01F7  00EB               	movwf	i1USBStdFeatureReqHandler@p
 12884  01F8  3F41               	moviw [1]fsr1
 12885  01F9  00EC               	movwf	i1USBStdFeatureReqHandler@p+1
 12886                           
 12887                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 12888  01FA  0854               	movf	84,w	;volatile
 12889  01FB  390F               	andlw	15
 12890  01FC  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
 12891  01FD  2A0C               	goto	L14
 12892  01FE                     i1l5310:	
 12893                           ;usb_device.c: 2824: }
 12894                           
 12895                           
 12896                           ;usb_device.c: 2825: else
 12897                           ;usb_device.c: 2826: {
 12898                           ;usb_device.c: 2827: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 12899  01FE  0854               	movf	84,w	;volatile
 12900  01FF  390F               	andlw	15
 12901  0200  0709               	addwf	9,w
 12902  0201  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 12903  0202  0086               	movwf	6
 12904  0203  3001               	movlw	1	; select bank3/4
 12905  0204  0087               	movwf	7
 12906  0205  3F40               	moviw [0]fsr1
 12907  0206  00EB               	movwf	i1USBStdFeatureReqHandler@p
 12908  0207  3F41               	moviw [1]fsr1
 12909  0208  00EC               	movwf	i1USBStdFeatureReqHandler@p+1
 12910                           
 12911                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 12912  0209  0854               	movf	84,w	;volatile
 12913  020A  390F               	andlw	15
 12914  020B  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
 12915  020C                     L14:	
 12916  020C  0086               	movwf	6
 12917  020D  3001               	movlw	1	; select bank3/4
 12918  020E  0087               	movwf	7
 12919  020F  0801               	movf	1,w
 12920  0210  00E6               	movwf	??i1_USBStdFeatureReqHandler
 12921  0211  0866               	movf	??i1_USBStdFeatureReqHandler,w
 12922  0212  00EA               	movwf	i1USBStdFeatureReqHandler@current_ep_data
 12923                           
 12924                           ;usb_device.c: 2829: }
 12925                           ;usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
 12926  0213  186A               	btfsc	i1USBStdFeatureReqHandler@current_ep_data,0
 12927  0214  2A1F               	goto	i1l5316
 12928                           
 12929                           ;usb_device.c: 2836: {
 12930                           ;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 12931  0215  30FB               	movlw	251
 12932  0216  00E6               	movwf	??i1_USBStdFeatureReqHandler
 12933  0217  30FF               	movlw	255
 12934  0218  00E7               	movwf	??i1_USBStdFeatureReqHandler+1
 12935  0219  086B               	movf	i1USBStdFeatureReqHandler@p,w
 12936  021A  0566               	andwf	??i1_USBStdFeatureReqHandler,w
 12937  021B  00EB               	movwf	i1USBStdFeatureReqHandler@p
 12938  021C  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 12939  021D  0567               	andwf	??i1_USBStdFeatureReqHandler+1,w
 12940  021E  2A24               	goto	L15
 12941  021F                     i1l5316:	
 12942                           ;usb_device.c: 2838: }
 12943                           
 12944                           
 12945                           ;usb_device.c: 2839: else
 12946                           ;usb_device.c: 2840: {
 12947                           ;usb_device.c: 2841: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
 12948  021F  3004               	movlw	4
 12949  0220  046B               	iorwf	i1USBStdFeatureReqHandler@p,w
 12950  0221  00EB               	movwf	i1USBStdFeatureReqHandler@p
 12951  0222  3000               	movlw	0
 12952  0223  046C               	iorwf	i1USBStdFeatureReqHandler@p+1,w
 12953  0224                     L15:	
 12954  0224  00EC               	movwf	i1USBStdFeatureReqHandler@p+1
 12955                           
 12956                           ;usb_device.c: 2842: }
 12957                           ;usb_device.c: 2847: if(SetupPkt.EPDir == 0)
 12958  0225  1BD4               	btfsc	84,7	;volatile
 12959  0226  2A33               	goto	i1l5322
 12960                           
 12961                           ;usb_device.c: 2848: {
 12962                           ;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 12963  0227  0854               	movf	84,w	;volatile
 12964  0228  390F               	andlw	15
 12965  0229  0709               	addwf	9,w
 12966  022A  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 12967  022B  0086               	movwf	6
 12968  022C  3001               	movlw	1	; select bank3/4
 12969  022D  0087               	movwf	7
 12970  022E  086B               	movf	i1USBStdFeatureReqHandler@p,w
 12971  022F  3FC0               	movwi [0]fsr1
 12972  0230  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 12973  0231  3FC1               	movwi [1]fsr1
 12974                           
 12975                           ;usb_device.c: 2850: }
 12976  0232  2A3E               	goto	i1l5324
 12977  0233                     i1l5322:	
 12978                           
 12979                           ;usb_device.c: 2851: else
 12980                           ;usb_device.c: 2852: {
 12981                           ;usb_device.c: 2853: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 12982  0233  0854               	movf	84,w	;volatile
 12983  0234  390F               	andlw	15
 12984  0235  0709               	addwf	9,w
 12985  0236  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 12986  0237  0086               	movwf	6
 12987  0238  3001               	movlw	1	; select bank3/4
 12988  0239  0087               	movwf	7
 12989  023A  086B               	movf	i1USBStdFeatureReqHandler@p,w
 12990  023B  3FC0               	movwi [0]fsr1
 12991  023C  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 12992  023D  3FC1               	movwi [1]fsr1
 12993  023E                     i1l5324:	
 12994                           
 12995                           ;usb_device.c: 2854: }
 12996                           ;usb_device.c: 2857: if(SetupPkt.bRequest == 3)
 12997  023E  3003               	movlw	3
 12998  023F  0651               	xorwf	81,w	;volatile
 12999  0240  1D03               	btfss	3,2
 13000  0241  2A60               	goto	i1l5338
 13001                           
 13002                           ;usb_device.c: 2858: {
 13003                           ;usb_device.c: 2859: if(p->STAT.UOWN == 1)
 13004  0242  086B               	movf	i1USBStdFeatureReqHandler@p,w
 13005  0243  0086               	movwf	6
 13006  0244  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 13007  0245  0087               	movwf	7
 13008  0246  1F81               	btfss	1,7
 13009  0247  2A55               	goto	i1l5334
 13010                           
 13011                           ;usb_device.c: 2860: {
 13012                           ;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
 13013  0248  1BD4               	btfsc	84,7	;volatile
 13014  0249  2A4E               	goto	i1l5332
 13015                           
 13016                           ;usb_device.c: 2864: {
 13017                           ;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 13018  024A  0854               	movf	84,w	;volatile
 13019  024B  390F               	andlw	15
 13020  024C  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
 13021  024D  2A51               	goto	L16
 13022  024E                     i1l5332:	
 13023                           ;usb_device.c: 2866: }
 13024                           
 13025                           
 13026                           ;usb_device.c: 2867: else
 13027                           ;usb_device.c: 2868: {
 13028                           ;usb_device.c: 2869: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 13029  024E  0854               	movf	84,w	;volatile
 13030  024F  390F               	andlw	15
 13031  0250  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
 13032  0251                     L16:	
 13033  0251  0086               	movwf	6
 13034  0252  3001               	movlw	1	; select bank3/4
 13035  0253  0087               	movwf	7
 13036  0254  1481               	bsf	1,1
 13037  0255                     i1l5334:	
 13038                           
 13039                           ;usb_device.c: 2870: }
 13040                           ;usb_device.c: 2871: }
 13041                           ;usb_device.c: 2874: p->STAT.Val |= 0x04;
 13042  0255  086B               	movf	i1USBStdFeatureReqHandler@p,w
 13043  0256  0086               	movwf	6
 13044  0257  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 13045  0258  0087               	movwf	7
 13046  0259  1501               	bsf	1,2
 13047                           
 13048                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
 13049  025A  086B               	movf	i1USBStdFeatureReqHandler@p,w
 13050  025B  0086               	movwf	6
 13051  025C  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 13052  025D  0087               	movwf	7
 13053  025E  1781               	bsf	1,7
 13054                           
 13055                           ;usb_device.c: 2876: }
 13056  025F  0008               	return
 13057  0260                     i1l5338:	
 13058                           
 13059                           ;usb_device.c: 2877: else
 13060                           ;usb_device.c: 2878: {
 13061                           ;usb_device.c: 2882: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 13062  0260  3004               	movlw	4
 13063  0261  066B               	xorwf	i1USBStdFeatureReqHandler@p,w
 13064  0262  00EB               	movwf	i1USBStdFeatureReqHandler@p
 13065  0263  3000               	movlw	0
 13066  0264  066C               	xorwf	i1USBStdFeatureReqHandler@p+1,w
 13067  0265  00EC               	movwf	i1USBStdFeatureReqHandler@p+1
 13068                           
 13069                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
 13070  0266  086B               	movf	i1USBStdFeatureReqHandler@p,w
 13071  0267  0086               	movwf	6
 13072  0268  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 13073  0269  0087               	movwf	7
 13074  026A  1F81               	btfss	1,7
 13075  026B  2A89               	goto	i1l5348
 13076                           
 13077                           ;usb_device.c: 2885: {
 13078                           ;usb_device.c: 2888: p->STAT.Val &= (~0x80);
 13079  026C  307F               	movlw	127
 13080  026D  00E6               	movwf	??i1_USBStdFeatureReqHandler
 13081  026E  086B               	movf	i1USBStdFeatureReqHandler@p,w
 13082  026F  0086               	movwf	6
 13083  0270  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 13084  0271  0087               	movwf	7
 13085  0272  0866               	movf	??i1_USBStdFeatureReqHandler,w
 13086  0273  0581               	andwf	1,f
 13087                           
 13088                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
 13089  0274  086B               	movf	i1USBStdFeatureReqHandler@p,w
 13090  0275  0086               	movwf	6
 13091  0276  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 13092  0277  0087               	movwf	7
 13093  0278  1701               	bsf	1,6
 13094                           
 13095                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 13096  0279  3000               	movlw	0
 13097  027A  00E1               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 13098  027B  3005               	movlw	5
 13099  027C  00E0               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 13100  027D  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 13101  027E  00E3               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 13102  027F  086B               	movf	i1USBStdFeatureReqHandler@p,w
 13103  0280  00E2               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 13104  0281  3002               	movlw	2
 13105  0282  00E4               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 13106  0283  3000               	movlw	0
 13107  0284  00E5               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 13108  0285  3191  2115  3181   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 13109                           
 13110                           ;usb_device.c: 2891: }
 13111  0288  2A8F               	goto	i1l5350
 13112  0289                     i1l5348:	
 13113                           
 13114                           ;usb_device.c: 2892: else
 13115                           ;usb_device.c: 2893: {
 13116                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
 13117  0289  0020               	movlb	0	; select bank0
 13118  028A  086B               	movf	i1USBStdFeatureReqHandler@p,w
 13119  028B  0086               	movwf	6
 13120  028C  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 13121  028D  0087               	movwf	7
 13122  028E  1701               	bsf	1,6
 13123  028F                     i1l5350:	
 13124                           
 13125                           ;usb_device.c: 2896: }
 13126                           ;usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 13127  028F  3004               	movlw	4
 13128  0290  0020               	movlb	0	; select bank0
 13129  0291  066B               	xorwf	i1USBStdFeatureReqHandler@p,w
 13130  0292  00EB               	movwf	i1USBStdFeatureReqHandler@p
 13131  0293  3000               	movlw	0
 13132  0294  066C               	xorwf	i1USBStdFeatureReqHandler@p+1,w
 13133  0295  00EC               	movwf	i1USBStdFeatureReqHandler@p+1
 13134                           
 13135                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 13136  0296  18EA               	btfsc	i1USBStdFeatureReqHandler@current_ep_data,1
 13137  0297  2A9E               	goto	i1l626
 13138  0298  086B               	movf	i1USBStdFeatureReqHandler@p,w
 13139  0299  0086               	movwf	6
 13140  029A  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 13141  029B  0087               	movwf	7
 13142  029C  1F81               	btfss	1,7
 13143  029D  2AC3               	goto	i1l5362
 13144  029E                     i1l626:	
 13145                           
 13146                           ;usb_device.c: 2907: {
 13147                           ;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
 13148  029E  1BD4               	btfsc	84,7	;volatile
 13149  029F  2AA4               	goto	i1l5358
 13150                           
 13151                           ;usb_device.c: 2909: {
 13152                           ;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 13153  02A0  0854               	movf	84,w	;volatile
 13154  02A1  390F               	andlw	15
 13155  02A2  3EC7               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
 13156  02A3  2AA7               	goto	L17
 13157  02A4                     i1l5358:	
 13158                           ;usb_device.c: 2911: }
 13159                           
 13160                           
 13161                           ;usb_device.c: 2912: else
 13162                           ;usb_device.c: 2913: {
 13163                           ;usb_device.c: 2914: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 13164  02A4  0854               	movf	84,w	;volatile
 13165  02A5  390F               	andlw	15
 13166  02A6  3ECA               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
 13167  02A7                     L17:	
 13168  02A7  0086               	movwf	6
 13169  02A8  3001               	movlw	1	; select bank3/4
 13170  02A9  0087               	movwf	7
 13171  02AA  1081               	bcf	1,1
 13172                           
 13173                           ;usb_device.c: 2915: }
 13174                           ;usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 13175  02AB  303B               	movlw	59
 13176  02AC  00E6               	movwf	??i1_USBStdFeatureReqHandler
 13177  02AD  086B               	movf	i1USBStdFeatureReqHandler@p,w
 13178  02AE  0086               	movwf	6
 13179  02AF  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 13180  02B0  0087               	movwf	7
 13181  02B1  0866               	movf	??i1_USBStdFeatureReqHandler,w
 13182  02B2  0581               	andwf	1,f
 13183                           
 13184                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 13185  02B3  3000               	movlw	0
 13186  02B4  00E1               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1
 13187  02B5  3005               	movlw	5
 13188  02B6  00E0               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@event
 13189  02B7  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 13190  02B8  00E3               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 13191  02B9  086B               	movf	i1USBStdFeatureReqHandler@p,w
 13192  02BA  00E2               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@pdata
 13193  02BB  3002               	movlw	2
 13194  02BC  00E4               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size
 13195  02BD  3000               	movlw	0
 13196  02BE  00E5               	movwf	i1USER_USB_CALLBACK_EVENT_HANDLER@size+1
 13197  02BF  3191  2115  3181   	fcall	i1_USER_USB_CALLBACK_EVENT_HANDLER
 13198                           
 13199                           ;usb_device.c: 2921: }
 13200  02C2  2ACC               	goto	i1l5364
 13201  02C3                     i1l5362:	
 13202                           
 13203                           ;usb_device.c: 2922: else
 13204                           ;usb_device.c: 2923: {
 13205                           ;usb_device.c: 2925: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 13206  02C3  303B               	movlw	59
 13207  02C4  0020               	movlb	0	; select bank0
 13208  02C5  00E6               	movwf	??i1_USBStdFeatureReqHandler
 13209  02C6  086B               	movf	i1USBStdFeatureReqHandler@p,w
 13210  02C7  0086               	movwf	6
 13211  02C8  086C               	movf	i1USBStdFeatureReqHandler@p+1,w
 13212  02C9  0087               	movwf	7
 13213  02CA  0866               	movf	??i1_USBStdFeatureReqHandler,w
 13214  02CB  0581               	andwf	1,f
 13215  02CC                     i1l5364:	
 13216                           
 13217                           ;usb_device.c: 2926: }
 13218                           ;usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 13219  02CC  0020               	movlb	0	; select bank0
 13220  02CD  0854               	movf	84,w	;volatile
 13221  02CE  390F               	andlw	15
 13222  02CF  3E98               	addlw	152
 13223  02D0  00E6               	movwf	??i1_USBStdFeatureReqHandler
 13224  02D1  01E7               	clrf	??i1_USBStdFeatureReqHandler+1
 13225  02D2  300E               	movlw	14
 13226  02D3  3DE7               	addwfc	??i1_USBStdFeatureReqHandler+1,f
 13227  02D4  0866               	movf	??i1_USBStdFeatureReqHandler,w
 13228  02D5  00E8               	movwf	i1USBStdFeatureReqHandler@pUEP
 13229  02D6  0867               	movf	??i1_USBStdFeatureReqHandler+1,w
 13230  02D7  00E9               	movwf	i1USBStdFeatureReqHandler@pUEP+1
 13231                           
 13232                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
 13233  02D8  30FE               	movlw	254
 13234  02D9  00E6               	movwf	??i1_USBStdFeatureReqHandler
 13235  02DA  0868               	movf	i1USBStdFeatureReqHandler@pUEP,w
 13236  02DB  0086               	movwf	6
 13237  02DC  0869               	movf	i1USBStdFeatureReqHandler@pUEP+1,w
 13238  02DD  0087               	movwf	7
 13239  02DE  0866               	movf	??i1_USBStdFeatureReqHandler,w
 13240  02DF  0581               	andwf	1,f
 13241  02E0  0008               	return
 13242  02E1                     __end_ofi1_USBStdFeatureReqHandler:	
 13243                           
 13244                           	psect	text57
 13245  1115                     __ptext57:	
 13246 ;; *************** function i1_USER_USB_CALLBACK_EVENT_HANDLER *****************
 13247 ;; Defined at:
 13248 ;;		line 49 in file "mcc_generated_files/usb/usb_device_events.c"
 13249 ;; Parameters:    Size  Location     Type
 13250 ;;  event           2    0[BANK0h] enum E40
 13251 ;;  pdata           2    2[BANK0h] PTR void 
 13252 ;;		 -> RAM(4096), USTATcopy(1), USBActiveConfiguration(1), BDT(48), 
 13253 ;;		 -> NULL(0), 
 13254 ;;  size            2    4[BANK0h] unsigned int 
 13255 ;; Auto vars:     Size  Location     Type
 13256 ;;		None
 13257 ;; Return value:  Size  Location     Type
 13258 ;;                  1    wreg      unsigned char 
 13259 ;; Registers used:
 13260 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13261 ;; Tracked objects:
 13262 ;;		On entry : 0/0
 13263 ;;		On exit  : 0/0
 13264 ;;		Unchanged: 0/0
 13265 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13266 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13269 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13270 ;;Total ram usage:        6 bytes
 13271 ;; Hardware stack levels used:    1
 13272 ;; Hardware stack levels required when called:    3
 13273 ;; This function calls:
 13274 ;;		i1_CDCInitEP
 13275 ;;		i1_USBCheckCDCRequest
 13276 ;; This function is called by:
 13277 ;;		i1_USBDeviceTasks
 13278 ;;		i1_USBStdSetCfgHandler
 13279 ;;		i1_USBSuspend
 13280 ;;		i1_USBWakeFromSuspend
 13281 ;;		i1_USBCtrlTrfSetupHandler
 13282 ;;		i1_USBCheckStdRequest
 13283 ;;		i1_USBStdFeatureReqHandler
 13284 ;; This function uses a non-reentrant model
 13285 ;;
 13286                           
 13287                           
 13288                           ;psect for function i1_USER_USB_CALLBACK_EVENT_HANDLER
 13289  1115                     i1_USER_USB_CALLBACK_EVENT_HANDLER:	
 13290                           
 13291                           ;usb_device_events.c: 51: switch( (int) event )
 13292                           
 13293                           ;incstack = 0
 13294                           ; Regs used in i1_USER_USB_CALLBACK_EVENT_HANDLER: [wreg-fsr1h+status,2+status,0+pclath+
      +                          cstack]
 13295  1115  291C               	goto	i1l4792
 13296  1116                     i1l4786:	
 13297                           ;usb_device_events.c: 75: case EVENT_CONFIGURED:
 13298                           
 13299                           ;usb_device_events.c: 73: break;
 13300                           
 13301                           ;usb_device_events.c: 68: case EVENT_RESUME:
 13302                           
 13303                           ;usb_device_events.c: 66: break;
 13304                           
 13305                           ;usb_device_events.c: 59: case EVENT_SUSPEND:
 13306                           
 13307                           ;usb_device_events.c: 57: break;
 13308                           
 13309                           ;usb_device_events.c: 56: case EVENT_SOF:
 13310                           
 13311                           ;usb_device_events.c: 54: break;
 13312                           
 13313                           ;usb_device_events.c: 52: {
 13314                           ;usb_device_events.c: 53: case EVENT_TRANSFER:
 13315                           
 13316                           
 13317                           ;usb_device_events.c: 76: CDCInitEP();
 13318  1116  3191  21AB         	fcall	i1_CDCInitEP
 13319                           
 13320                           ;usb_device_events.c: 80: break;
 13321                           
 13322                           ;usb_device_events.c: 79: case EVENT_SET_DESCRIPTOR:
 13323                           
 13324                           ;usb_device_events.c: 77: break;
 13325  1118  0008               	return
 13326  1119                     i1l4788:	
 13327                           ;usb_device_events.c: 82: case EVENT_EP0_REQUEST:
 13328                           
 13329                           
 13330                           ;usb_device_events.c: 85: USBCheckCDCRequest();
 13331  1119  3197  273F         	fcall	i1_USBCheckCDCRequest
 13332                           
 13333                           ;usb_device_events.c: 96: }
 13334                           
 13335                           ;usb_device_events.c: 95: break;
 13336                           
 13337                           ;usb_device_events.c: 94: default:
 13338                           
 13339                           ;usb_device_events.c: 92: break;
 13340                           
 13341                           ;usb_device_events.c: 91: case EVENT_TRANSFER_TERMINATED:
 13342                           
 13343                           ;usb_device_events.c: 89: break;
 13344                           
 13345                           ;usb_device_events.c: 88: case EVENT_BUS_ERROR:
 13346                           
 13347                           ;usb_device_events.c: 86: break;
 13348  111B  0008               	return
 13349  111C                     i1l4792:	
 13350                           
 13351                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 13352                           ; Switch size 1, requested type "space"
 13353                           ; Number of cases is 2, Range of values is 0 to 127
 13354                           ; switch strategies available:
 13355                           ; Name         Instructions Cycles
 13356                           ; simple_byte            7     4 (average)
 13357                           ; direct_byte          262     6 (fixed)
 13358                           ; jumptable            260     6 (fixed)
 13359                           ;	Chosen strategy is simple_byte
 13360  111C  0020               	movlb	0	; select bank0
 13361  111D  0861               	movf	i1USER_USB_CALLBACK_EVENT_HANDLER@event+1,w
 13362  111E  3A00               	xorlw	0	; case 0
 13363  111F  1903               	skipnz
 13364  1120  2925               	goto	i1l8490
 13365  1121  3A7F               	xorlw	127	; case 127
 13366  1122  1903               	skipnz
 13367  1123  293F               	goto	i1l8492
 13368  1124  2944               	goto	i1l242
 13369  1125                     i1l8490:	
 13370                           
 13371                           ; Switch size 1, requested type "space"
 13372                           ; Number of cases is 8, Range of values is 1 to 117
 13373                           ; switch strategies available:
 13374                           ; Name         Instructions Cycles
 13375                           ; simple_byte           25    13 (average)
 13376                           ; direct_byte          243     9 (fixed)
 13377                           ; jumptable            263     9 (fixed)
 13378                           ;	Chosen strategy is simple_byte
 13379  1125  0860               	movf	i1USER_USB_CALLBACK_EVENT_HANDLER@event,w
 13380  1126  3A01               	xorlw	1	; case 1
 13381  1127  1903               	skipnz
 13382  1128  2916               	goto	i1l4786
 13383  1129  3A03               	xorlw	3	; case 2
 13384  112A  1903               	skipnz
 13385  112B  2944               	goto	i1l242
 13386  112C  3A01               	xorlw	1	; case 3
 13387  112D  1903               	skipnz
 13388  112E  2919               	goto	i1l4788
 13389  112F  3A06               	xorlw	6	; case 5
 13390  1130  1903               	skipnz
 13391  1131  2944               	goto	i1l242
 13392  1132  3A77               	xorlw	119	; case 114
 13393  1133  1903               	skipnz
 13394  1134  2944               	goto	i1l242
 13395  1135  3A01               	xorlw	1	; case 115
 13396  1136  1903               	skipnz
 13397  1137  2944               	goto	i1l242
 13398  1138  3A07               	xorlw	7	; case 116
 13399  1139  1903               	skipnz
 13400  113A  2944               	goto	i1l242
 13401  113B  3A01               	xorlw	1	; case 117
 13402  113C  1903               	skipnz
 13403  113D  2944               	goto	i1l242
 13404  113E  2944               	goto	i1l242
 13405  113F                     i1l8492:	
 13406                           
 13407                           ; Switch size 1, requested type "space"
 13408                           ; Number of cases is 1, Range of values is 255 to 255
 13409                           ; switch strategies available:
 13410                           ; Name         Instructions Cycles
 13411                           ; simple_byte            4     3 (average)
 13412                           ; direct_byte            7     5 (fixed)
 13413                           ; jumptable            263     9 (fixed)
 13414                           ;	Chosen strategy is simple_byte
 13415  113F  0860               	movf	i1USER_USB_CALLBACK_EVENT_HANDLER@event,w
 13416  1140  3AFF               	xorlw	255	; case 255
 13417  1141  1903               	skipnz
 13418  1142  2944               	goto	i1l242
 13419  1143  2944               	goto	i1l242
 13420  1144                     i1l242:	
 13421                           ;usb_device_events.c: 97: return 1;
 13422                           ;	Return value of i1_USER_USB_CALLBACK_EVENT_HANDLER is never used
 13423                           
 13424  1144  0008               	return
 13425  1145                     __end_ofi1_USER_USB_CALLBACK_EVENT_HANDLER:	
 13426                           
 13427                           	psect	text58
 13428  173F                     __ptext58:	
 13429 ;; *************** function i1_USBCheckCDCRequest *****************
 13430 ;; Defined at:
 13431 ;;		line 146 in file "mcc_generated_files/usb/usb_device_cdc.c"
 13432 ;; Parameters:    Size  Location     Type
 13433 ;;		None
 13434 ;; Auto vars:     Size  Location     Type
 13435 ;;		None
 13436 ;; Return value:  Size  Location     Type
 13437 ;;                  1    wreg      void 
 13438 ;; Registers used:
 13439 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 13440 ;; Tracked objects:
 13441 ;;		On entry : 0/0
 13442 ;;		On exit  : 0/0
 13443 ;;		Unchanged: 0/0
 13444 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13447 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13448 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13449 ;;Total ram usage:        1 bytes
 13450 ;; Hardware stack levels used:    1
 13451 ;; This function calls:
 13452 ;;		Nothing
 13453 ;; This function is called by:
 13454 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 13455 ;; This function uses a non-reentrant model
 13456 ;;
 13457                           
 13458                           
 13459                           ;psect for function i1_USBCheckCDCRequest
 13460  173F                     i1_USBCheckCDCRequest:	
 13461                           
 13462                           ;usb_device_cdc.c: 151: if(SetupPkt.Recipient != (0x01)) return;
 13463                           
 13464                           ;incstack = 0
 13465                           ; Regs used in i1_USBCheckCDCRequest: [wreg-fsr0h+status,2+status,0]
 13466  173F  0020               	movlb	0	; select bank0
 13467  1740  0850               	movf	80,w	;volatile
 13468  1741  391F               	andlw	31
 13469  1742  3A01               	xorlw	1
 13470  1743  1D03               	btfss	3,2
 13471  1744  0008               	return
 13472                           
 13473                           ;usb_device_cdc.c: 156: if(SetupPkt.RequestType != (0x20>>5)) return;
 13474  1745  0E50               	swapf	80,w	;volatile
 13475  1746  0C89               	rrf	9,f
 13476  1747  3903               	andlw	3
 13477  1748  3A01               	xorlw	1
 13478  1749  1D03               	btfss	3,2
 13479  174A  0008               	return
 13480                           
 13481                           ;usb_device_cdc.c: 162: if((SetupPkt.bIntfID != 0x0)&&
 13482                           ;usb_device_cdc.c: 163: (SetupPkt.bIntfID != 0x01)) return;
 13483  174B  0854               	movf	84,w	;volatile
 13484  174C  1903               	btfsc	3,2
 13485  174D  2F8C               	goto	i1l4698
 13486  174E  0354               	decf	84,w	;volatile
 13487  174F  1D03               	btfss	3,2
 13488  1750  0008               	return
 13489  1751  2F8C               	goto	i1l4698
 13490  1752                     i1l4668:	
 13491                           ;usb_device_cdc.c: 166: {
 13492                           ;usb_device_cdc.c: 168: case 0x00:
 13493                           
 13494                           ;usb_device_cdc.c: 165: switch(SetupPkt.bRequest)
 13495                           
 13496                           
 13497                           ;usb_device_cdc.c: 170: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 13498  1752  304F               	movlw	low _dummy_encapsulated_cmd_response
 13499  1753  0021               	movlb	1	; select bank1
 13500  1754  00C3               	movwf	_inPipes^(0+128)	;volatile
 13501  1755  3002               	movlw	high _dummy_encapsulated_cmd_response
 13502  1756  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
 13503                           
 13504                           ;usb_device_cdc.c: 171: inPipes[0].wCount.Val = 0x08;
 13505  1757  3000               	movlw	0
 13506  1758  00C7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
 13507  1759  3008               	movlw	8
 13508  175A  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
 13509                           
 13510                           ;usb_device_cdc.c: 172: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 13511  175B  1445               	bsf	(_inPipes^(0+128)+2),0	;volatile
 13512                           
 13513                           ;usb_device_cdc.c: 173: inPipes[0].info.bits.busy = 1;
 13514  175C  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 13515                           
 13516                           ;usb_device_cdc.c: 174: break;
 13517  175D  0008               	return
 13518  175E                     i1l4676:	
 13519                           ;usb_device_cdc.c: 175: case 0x01:
 13520                           
 13521                           
 13522                           ;usb_device_cdc.c: 177: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 13523  175E  304F               	movlw	low _dummy_encapsulated_cmd_response
 13524  175F  0021               	movlb	1	; select bank1
 13525  1760  00C3               	movwf	_inPipes^(0+128)	;volatile
 13526  1761  3002               	movlw	high _dummy_encapsulated_cmd_response
 13527  1762  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
 13528                           
 13529                           ;usb_device_cdc.c: 178: inPipes[0].info.bits.busy = 1;
 13530  1763  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 13531                           
 13532                           ;usb_device_cdc.c: 179: break;
 13533  1764  0008               	return
 13534  1765                     i1l4680:	
 13535                           ;usb_device_cdc.c: 183: case 0x20:
 13536                           
 13537                           
 13538                           ;usb_device_cdc.c: 184: outPipes[0].wCount.Val = SetupPkt.wLength;
 13539  1765  0020               	movlb	0	; select bank0
 13540  1766  0857               	movf	87,w	;volatile
 13541  1767  0023               	movlb	3	; select bank3
 13542  1768  00B4               	movwf	((_outPipes+1)^(0+384)+3)	;volatile
 13543  1769  0020               	movlb	0	; select bank0
 13544  176A  0856               	movf	86,w	;volatile
 13545  176B  0023               	movlb	3	; select bank3
 13546  176C  00B3               	movwf	(_outPipes^(0+384)+3)	;volatile
 13547                           
 13548                           ;usb_device_cdc.c: 185: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 13549  176D  3057               	movlw	(low (_line_coding| (0+512)))& (0+255)
 13550  176E  00F0               	movwf	??i1_USBCheckCDCRequest
 13551  176F  0870               	movf	??i1_USBCheckCDCRequest,w
 13552  1770  00B0               	movwf	_outPipes^(0+384)	;volatile
 13553                           
 13554                           ;usb_device_cdc.c: 186: outPipes[0].pFunc = (0);
 13555  1771  01B5               	clrf	(low ((_outPipes| (0+256)+5)))^(0+128)	;volatile
 13556  1772  01B6               	clrf	((low ((_outPipes| (0+256)+5))+1))^(0+128)	;volatile
 13557                           
 13558                           ;usb_device_cdc.c: 187: outPipes[0].info.bits.busy = 1;
 13559  1773  17B2               	bsf	(_outPipes^(0+384)+2),7	;volatile
 13560                           
 13561                           ;usb_device_cdc.c: 188: break;
 13562  1774  0008               	return
 13563  1775                     i1l4686:	
 13564                           ;usb_device_cdc.c: 190: case 0x21:
 13565                           
 13566                           
 13567                           ;usb_device_cdc.c: 191: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 13568  1775  3057               	movlw	low _line_coding
 13569  1776  0021               	movlb	1	; select bank1
 13570  1777  00C3               	movwf	_inPipes^(0+128)	;volatile
 13571  1778  3002               	movlw	high _line_coding
 13572  1779  00C4               	movwf	(_inPipes+1)^(0+128)	;volatile
 13573  177A  3000               	movlw	0
 13574  177B  00C7               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
 13575  177C  3007               	movlw	7
 13576  177D  00C6               	movwf	(_inPipes^(0+128)+3)	;volatile
 13577  177E  30C1               	movlw	193
 13578  177F  00F0               	movwf	??i1_USBCheckCDCRequest
 13579  1780  0870               	movf	??i1_USBCheckCDCRequest,w
 13580  1781  00C5               	movwf	(_inPipes^(0+128)+2)	;volatile
 13581                           
 13582                           ;usb_device_cdc.c: 195: break;
 13583  1782  0008               	return
 13584  1783                     i1l4692:	
 13585                           ;usb_device_cdc.c: 197: case 0x22:
 13586                           
 13587                           
 13588                           ;usb_device_cdc.c: 198: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 13589  1783  0020               	movlb	0	; select bank0
 13590  1784  0852               	movf	82,w	;volatile
 13591  1785  00F0               	movwf	??i1_USBCheckCDCRequest
 13592  1786  0870               	movf	??i1_USBCheckCDCRequest,w
 13593  1787  0023               	movlb	3	; select bank3
 13594  1788  00E6               	movwf	_control_signal_bitmap^(0+384)
 13595                           
 13596                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.busy = 1;
 13597  1789  0021               	movlb	1	; select bank1
 13598  178A  17C5               	bsf	(_inPipes^(0+128)+2),7	;volatile
 13599                           
 13600                           ;usb_device_cdc.c: 257: }
 13601                           
 13602                           ;usb_device_cdc.c: 256: break;
 13603                           
 13604                           ;usb_device_cdc.c: 255: default:
 13605                           
 13606                           ;usb_device_cdc.c: 231: break;
 13607  178B  0008               	return
 13608  178C                     i1l4698:	
 13609  178C  0020               	movlb	0	; select bank0
 13610  178D  0851               	movf	81,w	;volatile
 13611                           
 13612                           ; Switch size 1, requested type "space"
 13613                           ; Number of cases is 5, Range of values is 0 to 34
 13614                           ; switch strategies available:
 13615                           ; Name         Instructions Cycles
 13616                           ; simple_byte           16     9 (average)
 13617                           ; direct_byte           76     6 (fixed)
 13618                           ; jumptable            260     6 (fixed)
 13619                           ;	Chosen strategy is simple_byte
 13620  178E  3A00               	xorlw	0	; case 0
 13621  178F  1903               	skipnz
 13622  1790  2F52               	goto	i1l4668
 13623  1791  3A01               	xorlw	1	; case 1
 13624  1792  1903               	skipnz
 13625  1793  2F5E               	goto	i1l4676
 13626  1794  3A21               	xorlw	33	; case 32
 13627  1795  1903               	skipnz
 13628  1796  2F65               	goto	i1l4680
 13629  1797  3A01               	xorlw	1	; case 33
 13630  1798  1903               	skipnz
 13631  1799  2F75               	goto	i1l4686
 13632  179A  3A03               	xorlw	3	; case 34
 13633  179B  1903               	skipnz
 13634  179C  2F83               	goto	i1l4692
 13635  179D  2F9E               	goto	i1l137
 13636  179E                     i1l137:	
 13637  179E  0008               	return
 13638  179F                     __end_ofi1_USBCheckCDCRequest:	
 13639                           
 13640                           	psect	text59
 13641  11AB                     __ptext59:	
 13642 ;; *************** function i1_CDCInitEP *****************
 13643 ;; Defined at:
 13644 ;;		line 293 in file "mcc_generated_files/usb/usb_device_cdc.c"
 13645 ;; Parameters:    Size  Location     Type
 13646 ;;		None
 13647 ;; Auto vars:     Size  Location     Type
 13648 ;;		None
 13649 ;; Return value:  Size  Location     Type
 13650 ;;                  1    wreg      void 
 13651 ;; Registers used:
 13652 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13653 ;; Tracked objects:
 13654 ;;		On entry : 0/0
 13655 ;;		On exit  : 0/0
 13656 ;;		Unchanged: 0/0
 13657 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13660 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13661 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13662 ;;Total ram usage:        1 bytes
 13663 ;; Hardware stack levels used:    1
 13664 ;; Hardware stack levels required when called:    2
 13665 ;; This function calls:
 13666 ;;		i1_USBEnableEndpoint
 13667 ;;		i1_USBTransferOnePacket
 13668 ;; This function is called by:
 13669 ;;		i1_USER_USB_CALLBACK_EVENT_HANDLER
 13670 ;; This function uses a non-reentrant model
 13671 ;;
 13672                           
 13673                           
 13674                           ;psect for function i1_CDCInitEP
 13675  11AB                     i1_CDCInitEP:	
 13676                           
 13677                           ;usb_device_cdc.c: 296: line_coding.dwDTERate = 19200;
 13678                           
 13679                           ;incstack = 0
 13680                           ; Regs used in i1_CDCInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13681  11AB  3000               	movlw	0
 13682  11AC  0024               	movlb	4	; select bank4
 13683  11AD  00DA               	movwf	(_line_coding+3)^(0+512)
 13684  11AE  3000               	movlw	0
 13685  11AF  00D9               	movwf	(_line_coding+2)^(0+512)
 13686  11B0  304B               	movlw	75
 13687  11B1  00D8               	movwf	(_line_coding+1)^(0+512)
 13688  11B2  3000               	movlw	0
 13689  11B3  00D7               	movwf	_line_coding^(0+512)
 13690                           
 13691                           ;usb_device_cdc.c: 297: line_coding.bCharFormat = 0x00;
 13692  11B4  01DB               	clrf	(_line_coding^(0+512)+4)
 13693                           
 13694                           ;usb_device_cdc.c: 298: line_coding.bParityType = 0x00;
 13695  11B5  01DC               	clrf	(_line_coding^(0+512)+5)
 13696                           
 13697                           ;usb_device_cdc.c: 299: line_coding.bDataBits = 0x08;
 13698  11B6  3008               	movlw	8
 13699  11B7  00FD               	movwf	??i1_CDCInitEP
 13700  11B8  087D               	movf	??i1_CDCInitEP,w
 13701  11B9  00DD               	movwf	(_line_coding^(0+512)+6)
 13702                           
 13703                           ;usb_device_cdc.c: 301: cdc_rx_len = 0;
 13704  11BA  0023               	movlb	3	; select bank3
 13705  11BB  01EA               	clrf	_cdc_rx_len^(0+384)
 13706                           
 13707                           ;usb_device_cdc.c: 314: USBEnableEndpoint(1,0x02|0x10|0x08);
 13708  11BC  301A               	movlw	26
 13709  11BD  00FD               	movwf	??i1_CDCInitEP
 13710  11BE  087D               	movf	??i1_CDCInitEP,w
 13711  11BF  00F7               	movwf	i1USBEnableEndpoint@options
 13712  11C0  3001               	movlw	1
 13713  11C1  319F  27A0  3191   	fcall	i1_USBEnableEndpoint
 13714                           
 13715                           ;usb_device_cdc.c: 315: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 13716  11C4  301E               	movlw	30
 13717  11C5  00FD               	movwf	??i1_CDCInitEP
 13718  11C6  087D               	movf	??i1_CDCInitEP,w
 13719  11C7  00F7               	movwf	i1USBEnableEndpoint@options
 13720  11C8  3002               	movlw	2
 13721  11C9  319F  27A0  3191   	fcall	i1_USBEnableEndpoint
 13722                           
 13723                           ;usb_device_cdc.c: 317: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 13724  11CC  01F0               	clrf	i1USBTransferOnePacket@dir
 13725  11CD  30C0               	movlw	192
 13726  11CE  00F1               	movwf	i1USBTransferOnePacket@data
 13727  11CF  3020               	movlw	32
 13728  11D0  00F2               	movwf	i1USBTransferOnePacket@data+1
 13729  11D1  3040               	movlw	64
 13730  11D2  00FD               	movwf	??i1_CDCInitEP
 13731  11D3  087D               	movf	??i1_CDCInitEP,w
 13732  11D4  00F3               	movwf	i1USBTransferOnePacket@len
 13733  11D5  3002               	movlw	2
 13734  11D6  318C  2412         	fcall	i1_USBTransferOnePacket
 13735  11D8  0871               	movf	?i1_USBTransferOnePacket+1,w
 13736  11D9  0023               	movlb	3	; select bank3
 13737  11DA  00D0               	movwf	(_CDCDataOutHandle+1)^(0+384)
 13738  11DB  0870               	movf	?i1_USBTransferOnePacket,w
 13739  11DC  00CF               	movwf	_CDCDataOutHandle^(0+384)
 13740                           
 13741                           ;usb_device_cdc.c: 318: CDCDataInHandle = (0);
 13742  11DD  01CD               	clrf	_CDCDataInHandle^(0+384)
 13743  11DE  01CE               	clrf	(_CDCDataInHandle+1)^(0+384)
 13744                           
 13745                           ;usb_device_cdc.c: 345: cdc_trf_state = 0;
 13746  11DF  01E9               	clrf	_cdc_trf_state^(0+384)
 13747  11E0  0008               	return
 13748  11E1                     __end_ofi1_CDCInitEP:	
 13749                           
 13750                           	psect	text60
 13751  0C12                     __ptext60:	
 13752 ;; *************** function i1_USBTransferOnePacket *****************
 13753 ;; Defined at:
 13754 ;;		line 995 in file "mcc_generated_files/usb/usb_device.c"
 13755 ;; Parameters:    Size  Location     Type
 13756 ;;  ep              1    wreg     unsigned char 
 13757 ;;  dir             1    0[COMMON] unsigned char 
 13758 ;;  data            2    1[COMMON] PTR unsigned char 
 13759 ;;		 -> cdc_data_tx(64), NULL(0), cdc_data_rx(64), 
 13760 ;;  len             1    3[COMMON] unsigned char 
 13761 ;; Auto vars:     Size  Location     Type
 13762 ;;  ep              1    8[COMMON] unsigned char 
 13763 ;;  USBTransferO    2    9[COMMON] PTR volatile struct __BD
 13764 ;;		 -> RAM(4096), BDT(48), NULL(0), 
 13765 ;; Return value:  Size  Location     Type
 13766 ;;                  2    0[COMMON] PTR void 
 13767 ;; Registers used:
 13768 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13769 ;; Tracked objects:
 13770 ;;		On entry : 0/0
 13771 ;;		On exit  : 0/0
 13772 ;;		Unchanged: 0/0
 13773 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13774 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13775 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13776 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13777 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13778 ;;Total ram usage:       11 bytes
 13779 ;; Hardware stack levels used:    1
 13780 ;; This function calls:
 13781 ;;		Nothing
 13782 ;; This function is called by:
 13783 ;;		i1_CDCInitEP
 13784 ;; This function uses a non-reentrant model
 13785 ;;
 13786                           
 13787                           
 13788                           ;psect for function i1_USBTransferOnePacket
 13789  0C12                     i1_USBTransferOnePacket:	
 13790                           
 13791                           ;incstack = 0
 13792                           ; Regs used in i1_USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
 13793                           ;i1USBTransferOnePacket@ep stored from wreg
 13794  0C12  00F8               	movwf	i1USBTransferOnePacket@ep
 13795                           
 13796                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 13797                           ;usb_device.c: 1000: if(dir != 0)
 13798  0C13  0870               	movf	i1USBTransferOnePacket@dir,w
 13799  0C14  1903               	btfsc	3,2
 13800  0C15  2C1F               	goto	i1l4566
 13801                           
 13802                           ;usb_device.c: 1001: {
 13803                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 13804  0C16  3578               	lslf	i1USBTransferOnePacket@ep,w
 13805  0C17  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 13806  0C18  0086               	movwf	6
 13807  0C19  3001               	movlw	1	; select bank3/4
 13808  0C1A  0087               	movwf	7
 13809  0C1B  3F40               	moviw [0]fsr1
 13810  0C1C  00F9               	movwf	i1USBTransferOnePacket@handle
 13811  0C1D  3F41               	moviw [1]fsr1
 13812  0C1E  2C27               	goto	L18
 13813  0C1F                     i1l4566:	
 13814                           ;usb_device.c: 1004: }
 13815                           
 13816                           
 13817                           ;usb_device.c: 1005: else
 13818                           ;usb_device.c: 1006: {
 13819                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 13820  0C1F  3578               	lslf	i1USBTransferOnePacket@ep,w
 13821  0C20  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 13822  0C21  0086               	movwf	6
 13823  0C22  3001               	movlw	1	; select bank3/4
 13824  0C23  0087               	movwf	7
 13825  0C24  3F40               	moviw [0]fsr1
 13826  0C25  00F9               	movwf	i1USBTransferOnePacket@handle
 13827  0C26  3F41               	moviw [1]fsr1
 13828  0C27                     L18:	
 13829  0C27  00FA               	movwf	i1USBTransferOnePacket@handle+1
 13830                           
 13831                           ;usb_device.c: 1009: }
 13832                           ;usb_device.c: 1013: if(handle == 0)
 13833  0C28  0879               	movf	i1USBTransferOnePacket@handle,w
 13834  0C29  047A               	iorwf	i1USBTransferOnePacket@handle+1,w
 13835  0C2A  1D03               	btfss	3,2
 13836  0C2B  2C2F               	goto	i1l4574
 13837                           
 13838                           ;usb_device.c: 1014: {
 13839                           ;usb_device.c: 1015: return 0;
 13840  0C2C  01F0               	clrf	?i1_USBTransferOnePacket
 13841  0C2D  01F1               	clrf	?i1_USBTransferOnePacket+1
 13842  0C2E  0008               	return
 13843  0C2F                     i1l4574:	
 13844                           
 13845                           ;usb_device.c: 1016: }
 13846                           ;usb_device.c: 1029: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
 13847  0C2F  30FF               	movlw	255
 13848  0C30  0571               	andwf	i1USBTransferOnePacket@data,w
 13849  0C31  00F4               	movwf	??i1_USBTransferOnePacket
 13850  0C32  307F               	movlw	127
 13851  0C33  0572               	andwf	i1USBTransferOnePacket@data+1,w
 13852  0C34  00F5               	movwf	??i1_USBTransferOnePacket+1
 13853  0C35  0879               	movf	i1USBTransferOnePacket@handle,w
 13854  0C36  0086               	movwf	6
 13855  0C37  087A               	movf	i1USBTransferOnePacket@handle+1,w
 13856  0C38  0087               	movwf	7
 13857  0C39  3142               	addfsr 1,2
 13858  0C3A  0874               	movf	??i1_USBTransferOnePacket,w
 13859  0C3B  3FC0               	movwi [0]fsr1
 13860  0C3C  0875               	movf	??i1_USBTransferOnePacket+1,w
 13861  0C3D  3FC1               	movwi [1]fsr1
 13862                           
 13863                           ;usb_device.c: 1030: handle->CNT = len;
 13864  0C3E  0879               	movf	i1USBTransferOnePacket@handle,w
 13865  0C3F  3E01               	addlw	1
 13866  0C40  00F4               	movwf	??i1_USBTransferOnePacket
 13867  0C41  3000               	movlw	0
 13868  0C42  3D7A               	addwfc	i1USBTransferOnePacket@handle+1,w
 13869  0C43  00F5               	movwf	??i1_USBTransferOnePacket+1
 13870  0C44  0874               	movf	??i1_USBTransferOnePacket,w
 13871  0C45  0086               	movwf	6
 13872  0C46  0875               	movf	??i1_USBTransferOnePacket+1,w
 13873  0C47  0087               	movwf	7
 13874  0C48  0873               	movf	i1USBTransferOnePacket@len,w
 13875  0C49  0081               	movwf	1
 13876                           
 13877                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 13878  0C4A  3040               	movlw	64
 13879  0C4B  00F4               	movwf	??i1_USBTransferOnePacket
 13880  0C4C  0879               	movf	i1USBTransferOnePacket@handle,w
 13881  0C4D  0086               	movwf	6
 13882  0C4E  087A               	movf	i1USBTransferOnePacket@handle+1,w
 13883  0C4F  0087               	movwf	7
 13884  0C50  0874               	movf	??i1_USBTransferOnePacket,w
 13885  0C51  0581               	andwf	1,f
 13886                           
 13887                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 13888  0C52  0879               	movf	i1USBTransferOnePacket@handle,w
 13889  0C53  0086               	movwf	6
 13890  0C54  087A               	movf	i1USBTransferOnePacket@handle+1,w
 13891  0C55  0087               	movwf	7
 13892  0C56  1581               	bsf	1,3
 13893                           
 13894                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 13895  0C57  0879               	movf	i1USBTransferOnePacket@handle,w
 13896  0C58  0086               	movwf	6
 13897  0C59  087A               	movf	i1USBTransferOnePacket@handle+1,w
 13898  0C5A  0087               	movwf	7
 13899  0C5B  1781               	bsf	1,7
 13900                           
 13901                           ;usb_device.c: 1036: if(dir != 0)
 13902  0C5C  0870               	movf	i1USBTransferOnePacket@dir,w
 13903  0C5D  1903               	btfsc	3,2
 13904  0C5E  2C78               	goto	i1l4584
 13905                           
 13906                           ;usb_device.c: 1037: {
 13907                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
 13908  0C5F  3578               	lslf	i1USBTransferOnePacket@ep,w
 13909  0C60  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 13910  0C61  0086               	movwf	6
 13911  0C62  3001               	movlw	1	; select bank3/4
 13912  0C63  0087               	movwf	7
 13913  0C64  3F40               	moviw [0]fsr1
 13914  0C65  00F4               	movwf	??i1_USBTransferOnePacket
 13915  0C66  3F41               	moviw [1]fsr1
 13916  0C67  00F5               	movwf	??i1_USBTransferOnePacket+1
 13917  0C68  3004               	movlw	4
 13918  0C69  0674               	xorwf	??i1_USBTransferOnePacket,w
 13919  0C6A  00F6               	movwf	??i1_USBTransferOnePacket+2
 13920  0C6B  3000               	movlw	0
 13921  0C6C  0675               	xorwf	??i1_USBTransferOnePacket+1,w
 13922  0C6D  00F7               	movwf	??i1_USBTransferOnePacket+3
 13923  0C6E  3578               	lslf	i1USBTransferOnePacket@ep,w
 13924  0C6F  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 13925  0C70  0086               	movwf	6
 13926  0C71  3001               	movlw	1	; select bank3/4
 13927  0C72  0087               	movwf	7
 13928  0C73  0876               	movf	??i1_USBTransferOnePacket+2,w
 13929  0C74  3FC0               	movwi [0]fsr1
 13930  0C75  0877               	movf	??i1_USBTransferOnePacket+3,w
 13931  0C76  3FC1               	movwi [1]fsr1
 13932                           
 13933                           ;usb_device.c: 1040: }
 13934  0C77  2C90               	goto	i1l4586
 13935  0C78                     i1l4584:	
 13936                           
 13937                           ;usb_device.c: 1041: else
 13938                           ;usb_device.c: 1042: {
 13939                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
 13940  0C78  3578               	lslf	i1USBTransferOnePacket@ep,w
 13941  0C79  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 13942  0C7A  0086               	movwf	6
 13943  0C7B  3001               	movlw	1	; select bank3/4
 13944  0C7C  0087               	movwf	7
 13945  0C7D  3F40               	moviw [0]fsr1
 13946  0C7E  00F4               	movwf	??i1_USBTransferOnePacket
 13947  0C7F  3F41               	moviw [1]fsr1
 13948  0C80  00F5               	movwf	??i1_USBTransferOnePacket+1
 13949  0C81  3004               	movlw	4
 13950  0C82  0674               	xorwf	??i1_USBTransferOnePacket,w
 13951  0C83  00F6               	movwf	??i1_USBTransferOnePacket+2
 13952  0C84  3000               	movlw	0
 13953  0C85  0675               	xorwf	??i1_USBTransferOnePacket+1,w
 13954  0C86  00F7               	movwf	??i1_USBTransferOnePacket+3
 13955  0C87  3578               	lslf	i1USBTransferOnePacket@ep,w
 13956  0C88  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 13957  0C89  0086               	movwf	6
 13958  0C8A  3001               	movlw	1	; select bank3/4
 13959  0C8B  0087               	movwf	7
 13960  0C8C  0876               	movf	??i1_USBTransferOnePacket+2,w
 13961  0C8D  3FC0               	movwi [0]fsr1
 13962  0C8E  0877               	movf	??i1_USBTransferOnePacket+3,w
 13963  0C8F  3FC1               	movwi [1]fsr1
 13964  0C90                     i1l4586:	
 13965                           
 13966                           ;usb_device.c: 1045: }
 13967                           ;usb_device.c: 1046: return (void*)handle;
 13968  0C90  087A               	movf	i1USBTransferOnePacket@handle+1,w
 13969  0C91  00F1               	movwf	?i1_USBTransferOnePacket+1
 13970  0C92  0879               	movf	i1USBTransferOnePacket@handle,w
 13971  0C93  00F0               	movwf	?i1_USBTransferOnePacket
 13972  0C94  0008               	return
 13973  0C95                     __end_ofi1_USBTransferOnePacket:	
 13974                           
 13975                           	psect	text61
 13976  1FA0                     __ptext61:	
 13977 ;; *************** function i1_USBEnableEndpoint *****************
 13978 ;; Defined at:
 13979 ;;		line 878 in file "mcc_generated_files/usb/usb_device.c"
 13980 ;; Parameters:    Size  Location     Type
 13981 ;;  ep              1    wreg     unsigned char 
 13982 ;;  options         1    7[COMMON] unsigned char 
 13983 ;; Auto vars:     Size  Location     Type
 13984 ;;  ep              1   12[COMMON] unsigned char 
 13985 ;;  USBEnableEnd    2   10[COMMON] PTR unsigned char 
 13986 ;;		 -> UEP0(1), 
 13987 ;; Return value:  Size  Location     Type
 13988 ;;                  1    wreg      void 
 13989 ;; Registers used:
 13990 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13991 ;; Tracked objects:
 13992 ;;		On entry : 0/0
 13993 ;;		On exit  : 0/0
 13994 ;;		Unchanged: 0/0
 13995 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13996 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13997 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13998 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13999 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14000 ;;Total ram usage:        6 bytes
 14001 ;; Hardware stack levels used:    1
 14002 ;; Hardware stack levels required when called:    1
 14003 ;; This function calls:
 14004 ;;		i1_USBConfigureEndpoint
 14005 ;; This function is called by:
 14006 ;;		i1_CDCInitEP
 14007 ;; This function uses a non-reentrant model
 14008 ;;
 14009                           
 14010                           
 14011                           ;psect for function i1_USBEnableEndpoint
 14012  1FA0                     i1_USBEnableEndpoint:	
 14013                           
 14014                           ;incstack = 0
 14015                           ; Regs used in i1_USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14016                           ;i1USBEnableEndpoint@ep stored from wreg
 14017  1FA0  00FC               	movwf	i1USBEnableEndpoint@ep
 14018                           
 14019                           ;usb_device.c: 880: unsigned char* p;
 14020                           ;usb_device.c: 884: if(options & 0x04)
 14021  1FA1  1D77               	btfss	i1USBEnableEndpoint@options,2
 14022  1FA2  2FA8               	goto	i1l4554
 14023                           
 14024                           ;usb_device.c: 885: {
 14025                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 14026  1FA3  01F0               	clrf	i1USBConfigureEndpoint@direction
 14027  1FA4  087C               	movf	i1USBEnableEndpoint@ep,w
 14028  1FA5  3193  230A  319F   	fcall	i1_USBConfigureEndpoint
 14029  1FA8                     i1l4554:	
 14030                           
 14031                           ;usb_device.c: 887: }
 14032                           ;usb_device.c: 888: if(options & 0x02)
 14033  1FA8  1CF7               	btfss	i1USBEnableEndpoint@options,1
 14034  1FA9  2FAF               	goto	i1l4558
 14035                           
 14036                           ;usb_device.c: 889: {
 14037                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 14038  1FAA  01F0               	clrf	i1USBConfigureEndpoint@direction
 14039  1FAB  0AF0               	incf	i1USBConfigureEndpoint@direction,f
 14040  1FAC  087C               	movf	i1USBEnableEndpoint@ep,w
 14041  1FAD  3193  230A         	fcall	i1_USBConfigureEndpoint
 14042  1FAF                     i1l4558:	
 14043                           
 14044                           ;usb_device.c: 891: }
 14045                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 14046  1FAF  087C               	movf	i1USBEnableEndpoint@ep,w
 14047  1FB0  3E98               	addlw	152
 14048  1FB1  00F8               	movwf	??i1_USBEnableEndpoint
 14049  1FB2  01F9               	clrf	??i1_USBEnableEndpoint+1
 14050  1FB3  300E               	movlw	14
 14051  1FB4  3DF9               	addwfc	??i1_USBEnableEndpoint+1,f
 14052  1FB5  0878               	movf	??i1_USBEnableEndpoint,w
 14053  1FB6  00FA               	movwf	i1USBEnableEndpoint@p
 14054  1FB7  0879               	movf	??i1_USBEnableEndpoint+1,w
 14055  1FB8  00FB               	movwf	i1USBEnableEndpoint@p+1
 14056                           
 14057                           ;usb_device.c: 901: *p = options;
 14058  1FB9  087A               	movf	i1USBEnableEndpoint@p,w
 14059  1FBA  0086               	movwf	6
 14060  1FBB  087B               	movf	i1USBEnableEndpoint@p+1,w
 14061  1FBC  0087               	movwf	7
 14062  1FBD  0877               	movf	i1USBEnableEndpoint@options,w
 14063  1FBE  0081               	movwf	1
 14064  1FBF  0008               	return
 14065  1FC0                     __end_ofi1_USBEnableEndpoint:	
 14066                           
 14067                           	psect	text62
 14068  130A                     __ptext62:	
 14069 ;; *************** function i1_USBConfigureEndpoint *****************
 14070 ;; Defined at:
 14071 ;;		line 1543 in file "mcc_generated_files/usb/usb_device.c"
 14072 ;; Parameters:    Size  Location     Type
 14073 ;;  EPNum           1    wreg     unsigned char 
 14074 ;;  direction       1    0[COMMON] unsigned char 
 14075 ;; Auto vars:     Size  Location     Type
 14076 ;;  EPNum           1    5[COMMON] unsigned char 
 14077 ;;  USBConfigure    1    6[COMMON] PTR volatile struct __BD
 14078 ;;		 -> BDT(48), 
 14079 ;; Return value:  Size  Location     Type
 14080 ;;                  1    wreg      void 
 14081 ;; Registers used:
 14082 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14083 ;; Tracked objects:
 14084 ;;		On entry : 0/0
 14085 ;;		On exit  : 0/0
 14086 ;;		Unchanged: 0/0
 14087 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14088 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14089 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14090 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14091 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14092 ;;Total ram usage:        7 bytes
 14093 ;; Hardware stack levels used:    1
 14094 ;; This function calls:
 14095 ;;		Nothing
 14096 ;; This function is called by:
 14097 ;;		i1_USBEnableEndpoint
 14098 ;; This function uses a non-reentrant model
 14099 ;;
 14100                           
 14101                           
 14102                           ;psect for function i1_USBConfigureEndpoint
 14103  130A                     i1_USBConfigureEndpoint:	
 14104                           
 14105                           ;incstack = 0
 14106                           ; Regs used in i1_USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
 14107                           ;i1USBConfigureEndpoint@EPNum stored from wreg
 14108  130A  00F5               	movwf	i1USBConfigureEndpoint@EPNum
 14109                           
 14110                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 14111                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 14112  130B  3020               	movlw	32
 14113  130C  00F1               	movwf	??i1_USBConfigureEndpoint
 14114  130D  0871               	movf	??i1_USBConfigureEndpoint,w
 14115  130E  00F6               	movwf	i1USBConfigureEndpoint@handle
 14116                           
 14117                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 14118  130F  0870               	movf	i1USBConfigureEndpoint@direction,w
 14119  1310  00F1               	movwf	??i1_USBConfigureEndpoint
 14120  1311  3001               	movlw	1
 14121  1312                     u340_25:	
 14122  1312  35F1               	lslf	??i1_USBConfigureEndpoint,f
 14123  1313  0B89               	decfsz	9,f
 14124  1314  2B12               	goto	u340_25
 14125  1315  0875               	movf	i1USBConfigureEndpoint@EPNum,w
 14126  1316  00F2               	movwf	??i1_USBConfigureEndpoint+1
 14127  1317  3001               	movlw	1
 14128  1318                     u341_25:	
 14129  1318  35F2               	lslf	??i1_USBConfigureEndpoint+1,f
 14130  1319  3EFF               	addlw	-1
 14131  131A  1D03               	skipz
 14132  131B  2B18               	goto	u341_25
 14133  131C  3572               	lslf	??i1_USBConfigureEndpoint+1,w
 14134  131D  0771               	addwf	??i1_USBConfigureEndpoint,w
 14135  131E  00F3               	movwf	??i1_USBConfigureEndpoint+2
 14136  131F  3001               	movlw	1
 14137  1320                     u342_25:	
 14138  1320  35F3               	lslf	??i1_USBConfigureEndpoint+2,f
 14139  1321  3EFF               	addlw	-1
 14140  1322  1D03               	skipz
 14141  1323  2B20               	goto	u342_25
 14142  1324  3573               	lslf	??i1_USBConfigureEndpoint+2,w
 14143  1325  00F4               	movwf	??i1_USBConfigureEndpoint+3
 14144  1326  0874               	movf	??i1_USBConfigureEndpoint+3,w
 14145  1327  07F6               	addwf	i1USBConfigureEndpoint@handle,f
 14146                           
 14147                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 14148  1328  0876               	movf	i1USBConfigureEndpoint@handle,w
 14149  1329  0086               	movwf	6
 14150  132A  0187               	clrf	7
 14151  132B  1381               	bcf	1,7
 14152                           
 14153                           ;usb_device.c: 1557: if(direction == 0)
 14154  132C  0870               	movf	i1USBConfigureEndpoint@direction,w
 14155  132D  1D03               	btfss	3,2
 14156  132E  2B39               	goto	i1l4504
 14157                           
 14158                           ;usb_device.c: 1558: {
 14159                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 14160  132F  3575               	lslf	i1USBConfigureEndpoint@EPNum,w
 14161  1330  3EBD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 14162  1331  0086               	movwf	6
 14163  1332  3001               	movlw	1	; select bank3/4
 14164  1333  0087               	movwf	7
 14165  1334  0876               	movf	i1USBConfigureEndpoint@handle,w
 14166  1335  3FC0               	movwi [0]fsr1
 14167  1336  3000               	movlw	0
 14168  1337  3FC1               	movwi [1]fsr1
 14169                           
 14170                           ;usb_device.c: 1560: }
 14171  1338  2B42               	goto	i1l4506
 14172  1339                     i1l4504:	
 14173                           
 14174                           ;usb_device.c: 1561: else
 14175                           ;usb_device.c: 1562: {
 14176                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 14177  1339  3575               	lslf	i1USBConfigureEndpoint@EPNum,w
 14178  133A  3EB7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 14179  133B  0086               	movwf	6
 14180  133C  3001               	movlw	1	; select bank3/4
 14181  133D  0087               	movwf	7
 14182  133E  0876               	movf	i1USBConfigureEndpoint@handle,w
 14183  133F  3FC0               	movwi [0]fsr1
 14184  1340  3000               	movlw	0
 14185  1341  3FC1               	movwi [1]fsr1
 14186  1342                     i1l4506:	
 14187                           
 14188                           ;usb_device.c: 1564: }
 14189                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 14190  1342  0876               	movf	i1USBConfigureEndpoint@handle,w
 14191  1343  0086               	movwf	6
 14192  1344  0187               	clrf	7
 14193  1345  1301               	bcf	1,6
 14194                           
 14195                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 14196  1346  0876               	movf	i1USBConfigureEndpoint@handle,w
 14197  1347  3E04               	addlw	4
 14198  1348  0086               	movwf	6
 14199  1349  0187               	clrf	7
 14200  134A  1701               	bsf	1,6
 14201  134B  0008               	return
 14202  134C                     __end_ofi1_USBConfigureEndpoint:	
 14203                           
 14204                           	psect	text63
 14205  1175                     __ptext63:	
 14206 ;; *************** function i1_USBCtrlTrfOutHandler *****************
 14207 ;; Defined at:
 14208 ;;		line 2538 in file "mcc_generated_files/usb/usb_device.c"
 14209 ;; Parameters:    Size  Location     Type
 14210 ;;		None
 14211 ;; Auto vars:     Size  Location     Type
 14212 ;;		None
 14213 ;; Return value:  Size  Location     Type
 14214 ;;                  1    wreg      void 
 14215 ;; Registers used:
 14216 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14217 ;; Tracked objects:
 14218 ;;		On entry : 0/0
 14219 ;;		On exit  : 0/0
 14220 ;;		Unchanged: 0/0
 14221 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14224 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14225 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14226 ;;Total ram usage:        2 bytes
 14227 ;; Hardware stack levels used:    1
 14228 ;; Hardware stack levels required when called:    2
 14229 ;; This function calls:
 14230 ;;		i1_USBCtrlTrfRxService
 14231 ;; This function is called by:
 14232 ;;		i1_USBCtrlEPService
 14233 ;; This function uses a non-reentrant model
 14234 ;;
 14235                           
 14236                           
 14237                           ;psect for function i1_USBCtrlTrfOutHandler
 14238  1175                     i1_USBCtrlTrfOutHandler:	
 14239                           
 14240                           ;usb_device.c: 2540: if(controlTransferState == 2)
 14241                           
 14242                           ;incstack = 0
 14243                           ; Regs used in i1_USBCtrlTrfOutHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 14244  1175  3002               	movlw	2
 14245  1176  0023               	movlb	3	; select bank3
 14246  1177  0662               	xorwf	_controlTransferState^(0+384),w	;volatile
 14247  1178  1D03               	btfss	3,2
 14248  1179  297D               	goto	i1l5934
 14249                           
 14250                           ;usb_device.c: 2541: {
 14251                           ;usb_device.c: 2542: USBCtrlTrfRxService();
 14252  117A  318F  275D         	fcall	i1_USBCtrlTrfRxService
 14253                           
 14254                           ;usb_device.c: 2543: }
 14255  117C  0008               	return
 14256  117D                     i1l5934:	
 14257                           
 14258                           ;usb_device.c: 2544: else
 14259                           ;usb_device.c: 2545: {
 14260                           ;usb_device.c: 2548: controlTransferState = 0;
 14261  117D  0023               	movlb	3	; select bank3
 14262  117E  01E2               	clrf	_controlTransferState^(0+384)	;volatile
 14263                           
 14264                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
 14265  117F  085D               	movf	_BothEP0OutUOWNsSet^(0+384),w	;volatile
 14266  1180  1D03               	btfss	3,2
 14267  1181  29A8               	goto	i1l5946
 14268                           
 14269                           ;usb_device.c: 2556: {
 14270                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 8;
 14271  1182  0021               	movlb	1	; select bank1
 14272  1183  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14273  1184  3E01               	addlw	1
 14274  1185  00F6               	movwf	??i1_USBCtrlTrfOutHandler
 14275  1186  3000               	movlw	0
 14276  1187  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14277  1188  00F7               	movwf	??i1_USBCtrlTrfOutHandler+1
 14278  1189  0876               	movf	??i1_USBCtrlTrfOutHandler,w
 14279  118A  0086               	movwf	6
 14280  118B  0877               	movf	??i1_USBCtrlTrfOutHandler+1,w
 14281  118C  0087               	movwf	7
 14282  118D  3008               	movlw	8
 14283  118E  0081               	movwf	1
 14284                           
 14285                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 14286  118F  3050               	movlw	80
 14287  1190  00F6               	movwf	??i1_USBCtrlTrfOutHandler
 14288  1191  3000               	movlw	0
 14289  1192  00F7               	movwf	??i1_USBCtrlTrfOutHandler+1
 14290  1193  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14291  1194  0086               	movwf	6
 14292  1195  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14293  1196  0087               	movwf	7
 14294  1197  3142               	addfsr 1,2
 14295  1198  0876               	movf	??i1_USBCtrlTrfOutHandler,w
 14296  1199  3FC0               	movwi [0]fsr1
 14297  119A  0877               	movf	??i1_USBCtrlTrfOutHandler+1,w
 14298  119B  3FC1               	movwi [1]fsr1
 14299                           
 14300                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 14301  119C  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14302  119D  0086               	movwf	6
 14303  119E  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14304  119F  0087               	movwf	7
 14305  11A0  300C               	movlw	12
 14306  11A1  0081               	movwf	1
 14307                           
 14308                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 14309  11A2  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14310  11A3  0086               	movwf	6
 14311  11A4  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14312  11A5  0087               	movwf	7
 14313  11A6  1781               	bsf	1,7
 14314                           
 14315                           ;usb_device.c: 2561: }
 14316  11A7  0008               	return
 14317  11A8                     i1l5946:	
 14318                           
 14319                           ;usb_device.c: 2562: else
 14320                           ;usb_device.c: 2563: {
 14321                           ;usb_device.c: 2564: BothEP0OutUOWNsSet = 0;
 14322  11A8  0023               	movlb	3	; select bank3
 14323  11A9  01DD               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
 14324  11AA  0008               	return
 14325  11AB                     __end_ofi1_USBCtrlTrfOutHandler:	
 14326                           
 14327                           	psect	text64
 14328  0F5D                     __ptext64:	
 14329 ;; *************** function i1_USBCtrlTrfRxService *****************
 14330 ;; Defined at:
 14331 ;;		line 1852 in file "mcc_generated_files/usb/usb_device.c"
 14332 ;; Parameters:    Size  Location     Type
 14333 ;;		None
 14334 ;; Auto vars:     Size  Location     Type
 14335 ;;  USBCtrlTrfRx    1    5[COMMON] unsigned char 
 14336 ;;  USBCtrlTrfRx    1    4[COMMON] unsigned char 
 14337 ;; Return value:  Size  Location     Type
 14338 ;;                  1    wreg      void 
 14339 ;; Registers used:
 14340 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14341 ;; Tracked objects:
 14342 ;;		On entry : 0/0
 14343 ;;		On exit  : 0/0
 14344 ;;		Unchanged: 0/0
 14345 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14347 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14348 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14349 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14350 ;;Total ram usage:        4 bytes
 14351 ;; Hardware stack levels used:    1
 14352 ;; Hardware stack levels required when called:    1
 14353 ;; This function calls:
 14354 ;;		i1_USBCtrlEPAllowStatusStage
 14355 ;; This function is called by:
 14356 ;;		i1_USBCtrlTrfOutHandler
 14357 ;; This function uses a non-reentrant model
 14358 ;;
 14359                           
 14360                           
 14361                           ;psect for function i1_USBCtrlTrfRxService
 14362  0F5D                     i1_USBCtrlTrfRxService:	
 14363                           
 14364                           ;usb_device.c: 1854: uint8_t byteToRead;
 14365                           ;usb_device.c: 1855: uint8_t i;
 14366                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 14367                           
 14368                           ;incstack = 0
 14369                           ; Regs used in i1_USBCtrlTrfRxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 14370  0F5D  0023               	movlb	3	; select bank3
 14371  0F5E  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 14372  0F5F  0086               	movwf	6
 14373  0F60  0187               	clrf	7
 14374  0F61  3F41               	moviw [1]fsr1
 14375  0F62  00F5               	movwf	i1USBCtrlTrfRxService@byteToRead
 14376                           
 14377                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 14378  0F63  0875               	movf	i1USBCtrlTrfRxService@byteToRead,w
 14379  0F64  00F2               	movwf	??i1_USBCtrlTrfRxService
 14380  0F65  01F3               	clrf	??i1_USBCtrlTrfRxService+1
 14381  0F66  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 14382  0F67  0234               	subwf	((_outPipes+1)^(0+384)+3),w	;volatile
 14383  0F68  1D03               	skipz
 14384  0F69  2F6C               	goto	u474_25
 14385  0F6A  0872               	movf	??i1_USBCtrlTrfRxService,w
 14386  0F6B  0233               	subwf	(_outPipes^(0+384)+3),w	;volatile
 14387  0F6C                     u474_25:	
 14388  0F6C  1803               	skipnc
 14389  0F6D  2F72               	goto	i1l493
 14390                           
 14391                           ;usb_device.c: 1866: {
 14392                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 14393  0F6E  0833               	movf	(_outPipes^(0+384)+3),w	;volatile
 14394  0F6F  00F2               	movwf	??i1_USBCtrlTrfRxService
 14395  0F70  0872               	movf	??i1_USBCtrlTrfRxService,w
 14396  0F71  00F5               	movwf	i1USBCtrlTrfRxService@byteToRead
 14397  0F72                     i1l493:	
 14398                           
 14399                           ;usb_device.c: 1868: }
 14400                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 14401  0F72  0875               	movf	i1USBCtrlTrfRxService@byteToRead,w
 14402  0F73  00F2               	movwf	??i1_USBCtrlTrfRxService
 14403  0F74  01F3               	clrf	??i1_USBCtrlTrfRxService+1
 14404  0F75  0872               	movf	??i1_USBCtrlTrfRxService,w
 14405  0F76  02B3               	subwf	(_outPipes^(0+384)+3),f	;volatile
 14406  0F77  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 14407  0F78  3BB4               	subwfb	((_outPipes+1)^(0+384)+3),f	;volatile
 14408                           
 14409                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 14410  0F79  01F4               	clrf	i1USBCtrlTrfRxService@i
 14411  0F7A                     i1l5598:	
 14412  0F7A  0875               	movf	i1USBCtrlTrfRxService@byteToRead,w
 14413  0F7B  0274               	subwf	i1USBCtrlTrfRxService@i,w
 14414  0F7C  1803               	btfsc	3,0
 14415  0F7D  2F93               	goto	i1l5600
 14416                           
 14417                           ;usb_device.c: 1875: {
 14418                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 14419  0F7E  0874               	movf	i1USBCtrlTrfRxService@i,w
 14420  0F7F  3E58               	addlw	88
 14421  0F80  0086               	movwf	6
 14422  0F81  0187               	clrf	7
 14423  0F82  0801               	movf	1,w
 14424  0F83  00F2               	movwf	??i1_USBCtrlTrfRxService
 14425  0F84  0830               	movf	_outPipes^(0+384),w	;volatile
 14426  0F85  0086               	movwf	6
 14427  0F86  3002               	movlw	2	; select bank4/5
 14428  0F87  0087               	movwf	7
 14429  0F88  0872               	movf	??i1_USBCtrlTrfRxService,w
 14430  0F89  0081               	movwf	1
 14431  0F8A  3001               	movlw	1
 14432  0F8B  00F2               	movwf	??i1_USBCtrlTrfRxService
 14433  0F8C  0872               	movf	??i1_USBCtrlTrfRxService,w
 14434  0F8D  07B0               	addwf	_outPipes^(0+384),f	;volatile
 14435  0F8E  3001               	movlw	1
 14436  0F8F  00F2               	movwf	??i1_USBCtrlTrfRxService
 14437  0F90  0872               	movf	??i1_USBCtrlTrfRxService,w
 14438  0F91  07F4               	addwf	i1USBCtrlTrfRxService@i,f
 14439  0F92  2F7A               	goto	i1l5598
 14440  0F93                     i1l5600:	
 14441                           
 14442                           ;usb_device.c: 1877: }
 14443                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 14444  0F93  0833               	movf	(_outPipes^(0+384)+3),w	;volatile
 14445  0F94  0434               	iorwf	((_outPipes+1)^(0+384)+3),w	;volatile
 14446  0F95  1903               	btfsc	3,2
 14447  0F96  2FD1               	goto	i1l5612
 14448                           
 14449                           ;usb_device.c: 1882: {
 14450                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 14451  0F97  0021               	movlb	1	; select bank1
 14452  0F98  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14453  0F99  3E01               	addlw	1
 14454  0F9A  00F2               	movwf	??i1_USBCtrlTrfRxService
 14455  0F9B  3000               	movlw	0
 14456  0F9C  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14457  0F9D  00F3               	movwf	??i1_USBCtrlTrfRxService+1
 14458  0F9E  0872               	movf	??i1_USBCtrlTrfRxService,w
 14459  0F9F  0086               	movwf	6
 14460  0FA0  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 14461  0FA1  0087               	movwf	7
 14462  0FA2  3008               	movlw	8
 14463  0FA3  0081               	movwf	1
 14464                           
 14465                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
 14466  0FA4  3058               	movlw	88
 14467  0FA5  00F2               	movwf	??i1_USBCtrlTrfRxService
 14468  0FA6  3000               	movlw	0
 14469  0FA7  00F3               	movwf	??i1_USBCtrlTrfRxService+1
 14470  0FA8  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14471  0FA9  0086               	movwf	6
 14472  0FAA  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14473  0FAB  0087               	movwf	7
 14474  0FAC  3142               	addfsr 1,2
 14475  0FAD  0872               	movf	??i1_USBCtrlTrfRxService,w
 14476  0FAE  3FC0               	movwi [0]fsr1
 14477  0FAF  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 14478  0FB0  3FC1               	movwi [1]fsr1
 14479                           
 14480                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 14481  0FB1  0023               	movlb	3	; select bank3
 14482  0FB2  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 14483  0FB3  0086               	movwf	6
 14484  0FB4  0187               	clrf	7
 14485  0FB5  1B01               	btfsc	1,6
 14486  0FB6  2FC4               	goto	i1l5610
 14487                           
 14488                           ;usb_device.c: 1886: {
 14489                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 14490  0FB7  0021               	movlb	1	; select bank1
 14491  0FB8  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14492  0FB9  0086               	movwf	6
 14493  0FBA  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14494  0FBB  0087               	movwf	7
 14495  0FBC  3048               	movlw	72
 14496  0FBD  0081               	movwf	1
 14497                           
 14498                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 14499  0FBE  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14500  0FBF  0086               	movwf	6
 14501  0FC0  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14502  0FC1  0087               	movwf	7
 14503  0FC2  1781               	bsf	1,7
 14504                           
 14505                           ;usb_device.c: 1889: }
 14506  0FC3  0008               	return
 14507  0FC4                     i1l5610:	
 14508                           
 14509                           ;usb_device.c: 1890: else
 14510                           ;usb_device.c: 1891: {
 14511                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 14512  0FC4  0021               	movlb	1	; select bank1
 14513  0FC5  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14514  0FC6  0086               	movwf	6
 14515  0FC7  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14516  0FC8  0087               	movwf	7
 14517  0FC9  3008               	movlw	8
 14518  0FCA  0081               	movwf	1
 14519                           
 14520                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 14521  0FCB  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14522  0FCC  0086               	movwf	6
 14523  0FCD  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14524  0FCE  0087               	movwf	7
 14525  0FCF  1781               	bsf	1,7
 14526                           
 14527                           ;usb_device.c: 1894: }
 14528                           ;usb_device.c: 1895: }
 14529  0FD0  0008               	return
 14530  0FD1                     i1l5612:	
 14531                           
 14532                           ;usb_device.c: 1896: else
 14533                           ;usb_device.c: 1897: {
 14534                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 14535  0FD1  0021               	movlb	1	; select bank1
 14536  0FD2  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14537  0FD3  3E01               	addlw	1
 14538  0FD4  00F2               	movwf	??i1_USBCtrlTrfRxService
 14539  0FD5  3000               	movlw	0
 14540  0FD6  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14541  0FD7  00F3               	movwf	??i1_USBCtrlTrfRxService+1
 14542  0FD8  0872               	movf	??i1_USBCtrlTrfRxService,w
 14543  0FD9  0086               	movwf	6
 14544  0FDA  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 14545  0FDB  0087               	movwf	7
 14546  0FDC  3008               	movlw	8
 14547  0FDD  0081               	movwf	1
 14548                           
 14549                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 14550  0FDE  3050               	movlw	80
 14551  0FDF  00F2               	movwf	??i1_USBCtrlTrfRxService
 14552  0FE0  3000               	movlw	0
 14553  0FE1  00F3               	movwf	??i1_USBCtrlTrfRxService+1
 14554  0FE2  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14555  0FE3  0086               	movwf	6
 14556  0FE4  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14557  0FE5  0087               	movwf	7
 14558  0FE6  3142               	addfsr 1,2
 14559  0FE7  0872               	movf	??i1_USBCtrlTrfRxService,w
 14560  0FE8  3FC0               	movwi [0]fsr1
 14561  0FE9  0873               	movf	??i1_USBCtrlTrfRxService+1,w
 14562  0FEA  3FC1               	movwi [1]fsr1
 14563                           
 14564                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 14565  0FEB  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14566  0FEC  0086               	movwf	6
 14567  0FED  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14568  0FEE  0087               	movwf	7
 14569  0FEF  3004               	movlw	4
 14570  0FF0  0081               	movwf	1
 14571                           
 14572                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 14573  0FF1  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14574  0FF2  0086               	movwf	6
 14575  0FF3  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14576  0FF4  0087               	movwf	7
 14577  0FF5  1781               	bsf	1,7
 14578                           
 14579                           ;usb_device.c: 1915: {
 14580                           ;usb_device.c: 1921: outPipes[0].pFunc();
 14581  0FF6  0023               	movlb	3	; select bank3
 14582  0FF7  0835               	movf	(low ((_outPipes| (0+256)+5)))^(0+128),w	;volatile
 14583  0FF8  0836               	movf	((low ((_outPipes| (0+256)+5))+1))^(0+128),w	;volatile
 14584                           
 14585                           ;usb_device.c: 1926: }
 14586                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 14587  0FF9  13B2               	bcf	(_outPipes^(0+384)+2),7	;volatile
 14588                           
 14589                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 14590  0FFA  085B               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
 14591  0FFB  1D03               	btfss	3,2
 14592  0FFC  0008               	return
 14593                           
 14594                           ;usb_device.c: 1942: {
 14595                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 14596  0FFD  3187  2794         	fcall	i1_USBCtrlEPAllowStatusStage
 14597  0FFF  0008               	return
 14598  1000                     __end_ofi1_USBCtrlTrfRxService:	
 14599                           
 14600                           	psect	text65
 14601  0794                     __ptext65:	
 14602 ;; *************** function i1_USBCtrlEPAllowStatusStage *****************
 14603 ;; Defined at:
 14604 ;;		line 1416 in file "mcc_generated_files/usb/usb_device.c"
 14605 ;; Parameters:    Size  Location     Type
 14606 ;;		None
 14607 ;; Auto vars:     Size  Location     Type
 14608 ;;		None
 14609 ;; Return value:  Size  Location     Type
 14610 ;;                  1    wreg      void 
 14611 ;; Registers used:
 14612 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14613 ;; Tracked objects:
 14614 ;;		On entry : 0/0
 14615 ;;		On exit  : 0/0
 14616 ;;		Unchanged: 0/0
 14617 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14620 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14621 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14622 ;;Total ram usage:        2 bytes
 14623 ;; Hardware stack levels used:    1
 14624 ;; This function calls:
 14625 ;;		Nothing
 14626 ;; This function is called by:
 14627 ;;		i1_USBDeviceTasks
 14628 ;;		i1_USBCtrlEPServiceComplete
 14629 ;;		i1_USBCtrlTrfRxService
 14630 ;; This function uses a non-reentrant model
 14631 ;;
 14632                           
 14633                           
 14634                           ;psect for function i1_USBCtrlEPAllowStatusStage
 14635  0794                     i1_USBCtrlEPAllowStatusStage:	
 14636                           
 14637                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 14638                           
 14639                           ;incstack = 0
 14640                           ; Regs used in i1_USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
 14641  0794  0023               	movlb	3	; select bank3
 14642  0795  085A               	movf	_USBStatusStageEnabledFlag1^(0+384),w	;volatile
 14643  0796  1D03               	btfss	3,2
 14644  0797  0008               	return
 14645                           
 14646                           ;usb_device.c: 1424: {
 14647                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 14648  0798  3001               	movlw	1
 14649  0799  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 14650  079A  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 14651  079B  00DA               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
 14652                           
 14653                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 14654  079C  0859               	movf	_USBStatusStageEnabledFlag2^(0+384),w	;volatile
 14655  079D  1D03               	btfss	3,2
 14656  079E  0008               	return
 14657                           
 14658                           ;usb_device.c: 1427: {
 14659                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 14660  079F  3001               	movlw	1
 14661  07A0  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 14662  07A1  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 14663  07A2  00D9               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
 14664                           
 14665                           ;usb_device.c: 1432: if(controlTransferState == 2)
 14666  07A3  3002               	movlw	2
 14667  07A4  0662               	xorwf	_controlTransferState^(0+384),w	;volatile
 14668  07A5  1D03               	btfss	3,2
 14669  07A6  2FB9               	goto	i1l5128
 14670                           
 14671                           ;usb_device.c: 1433: {
 14672                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 14673  07A7  0837               	movf	_pBDTEntryIn^(0+384),w
 14674  07A8  0086               	movwf	6
 14675  07A9  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 14676  07AA  0087               	movwf	7
 14677  07AB  3141               	addfsr 1,1
 14678  07AC  0181               	clrf	1
 14679                           
 14680                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 14681  07AD  0837               	movf	_pBDTEntryIn^(0+384),w
 14682  07AE  0086               	movwf	6
 14683  07AF  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 14684  07B0  0087               	movwf	7
 14685  07B1  3048               	movlw	72
 14686  07B2  0081               	movwf	1
 14687                           
 14688                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 14689  07B3  0837               	movf	_pBDTEntryIn^(0+384),w
 14690  07B4  0086               	movwf	6
 14691  07B5  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 14692  07B6  0087               	movwf	7
 14693  07B7  1781               	bsf	1,7
 14694                           
 14695                           ;usb_device.c: 1437: }
 14696  07B8  0008               	return
 14697  07B9                     i1l5128:	
 14698                           
 14699                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 14700  07B9  0362               	decf	_controlTransferState^(0+384),w	;volatile
 14701  07BA  1D03               	btfss	3,2
 14702  07BB  0008               	return
 14703                           
 14704                           ;usb_device.c: 1439: {
 14705                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 14706  07BC  01DD               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
 14707                           
 14708                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 14709  07BD  3008               	movlw	8
 14710  07BE  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 14711  07BF  0A64               	incf	_pBDTEntryEP0OutCurrent^(0+384),w
 14712  07C0  0086               	movwf	6
 14713  07C1  0187               	clrf	7
 14714  07C2  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 14715  07C3  0081               	movwf	1
 14716                           
 14717                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 14718  07C4  3050               	movlw	80
 14719  07C5  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 14720  07C6  3000               	movlw	0
 14721  07C7  00F1               	movwf	??i1_USBCtrlEPAllowStatusStage+1
 14722  07C8  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 14723  07C9  3E02               	addlw	2
 14724  07CA  0086               	movwf	6
 14725  07CB  0187               	clrf	7
 14726  07CC  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 14727  07CD  3FC0               	movwi [0]fsr1
 14728  07CE  0871               	movf	??i1_USBCtrlEPAllowStatusStage+1,w
 14729  07CF  3FC1               	movwi [1]fsr1
 14730                           
 14731                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 14732  07D0  3004               	movlw	4
 14733  07D1  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 14734  07D2  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 14735  07D3  0086               	movwf	6
 14736  07D4  0187               	clrf	7
 14737  07D5  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 14738  07D6  0081               	movwf	1
 14739                           
 14740                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 14741  07D7  0864               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 14742  07D8  0086               	movwf	6
 14743  07D9  0187               	clrf	7
 14744  07DA  1781               	bsf	1,7
 14745                           
 14746                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 14747  07DB  3001               	movlw	1
 14748  07DC  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 14749  07DD  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 14750  07DE  00DD               	movwf	_BothEP0OutUOWNsSet^(0+384)	;volatile
 14751                           
 14752                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 14753  07DF  0021               	movlb	1	; select bank1
 14754  07E0  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14755  07E1  3E01               	addlw	1
 14756  07E2  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 14757  07E3  3000               	movlw	0
 14758  07E4  3D49               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14759  07E5  00F1               	movwf	??i1_USBCtrlEPAllowStatusStage+1
 14760  07E6  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 14761  07E7  0086               	movwf	6
 14762  07E8  0871               	movf	??i1_USBCtrlEPAllowStatusStage+1,w
 14763  07E9  0087               	movwf	7
 14764  07EA  3008               	movlw	8
 14765  07EB  0081               	movwf	1
 14766                           
 14767                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 14768  07EC  3050               	movlw	80
 14769  07ED  00F0               	movwf	??i1_USBCtrlEPAllowStatusStage
 14770  07EE  3000               	movlw	0
 14771  07EF  00F1               	movwf	??i1_USBCtrlEPAllowStatusStage+1
 14772  07F0  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14773  07F1  0086               	movwf	6
 14774  07F2  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14775  07F3  0087               	movwf	7
 14776  07F4  3142               	addfsr 1,2
 14777  07F5  0870               	movf	??i1_USBCtrlEPAllowStatusStage,w
 14778  07F6  3FC0               	movwi [0]fsr1
 14779  07F7  0871               	movf	??i1_USBCtrlEPAllowStatusStage+1,w
 14780  07F8  3FC1               	movwi [1]fsr1
 14781                           
 14782                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 14783  07F9  0848               	movf	_pBDTEntryEP0OutNext^(0+128),w
 14784  07FA  0086               	movwf	6
 14785  07FB  0849               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
 14786  07FC  0087               	movwf	7
 14787  07FD  3080               	movlw	128
 14788  07FE  0081               	movwf	1
 14789  07FF  0008               	return
 14790  0800                     __end_ofi1_USBCtrlEPAllowStatusStage:	
 14791                           
 14792                           	psect	text66
 14793  08D3                     __ptext66:	
 14794 ;; *************** function i1_USBCtrlTrfInHandler *****************
 14795 ;; Defined at:
 14796 ;;		line 2592 in file "mcc_generated_files/usb/usb_device.c"
 14797 ;; Parameters:    Size  Location     Type
 14798 ;;		None
 14799 ;; Auto vars:     Size  Location     Type
 14800 ;;  USBCtrlTrfIn    1    5[COMMON] unsigned char 
 14801 ;; Return value:  Size  Location     Type
 14802 ;;                  1    wreg      void 
 14803 ;; Registers used:
 14804 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14805 ;; Tracked objects:
 14806 ;;		On entry : 0/0
 14807 ;;		On exit  : 0/0
 14808 ;;		Unchanged: 0/0
 14809 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14811 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14812 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14813 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14814 ;;Total ram usage:        3 bytes
 14815 ;; Hardware stack levels used:    1
 14816 ;; Hardware stack levels required when called:    1
 14817 ;; This function calls:
 14818 ;;		i1_USBCtrlTrfTxService
 14819 ;; This function is called by:
 14820 ;;		i1_USBCtrlEPService
 14821 ;; This function uses a non-reentrant model
 14822 ;;
 14823                           
 14824                           
 14825                           ;psect for function i1_USBCtrlTrfInHandler
 14826  08D3                     i1_USBCtrlTrfInHandler:	
 14827                           
 14828                           ;usb_device.c: 2594: uint8_t lastDTS;
 14829                           ;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 14830                           
 14831                           ;incstack = 0
 14832                           ; Regs used in i1_USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14833  08D3  0023               	movlb	3	; select bank3
 14834  08D4  0837               	movf	_pBDTEntryIn^(0+384),w
 14835  08D5  0086               	movwf	6
 14836  08D6  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 14837  08D7  0087               	movwf	7
 14838  08D8  3000               	movlw	0
 14839  08D9  1B01               	btfsc	1,6
 14840  08DA  3001               	movlw	1
 14841  08DB  00F5               	movwf	i1USBCtrlTrfInHandler@lastDTS
 14842                           
 14843                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 14844  08DC  3004               	movlw	4
 14845  08DD  0637               	xorwf	_pBDTEntryIn^(0+384),w
 14846  08DE  00B7               	movwf	_pBDTEntryIn^(0+384)
 14847  08DF  3000               	movlw	0
 14848  08E0  0638               	xorwf	(_pBDTEntryIn+1)^(0+384),w
 14849  08E1  00B8               	movwf	(_pBDTEntryIn+1)^(0+384)
 14850                           
 14851                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
 14852  08E2  3008               	movlw	8
 14853  08E3  0665               	xorwf	_USBDeviceState^(0+384),w	;volatile
 14854  08E4  1D03               	btfss	3,2
 14855  08E5  28F5               	goto	i1l5962
 14856                           
 14857                           ;usb_device.c: 2605: {
 14858                           ;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
 14859  08E6  0020               	movlb	0	; select bank0
 14860  08E7  0852               	movf	82,w	;volatile
 14861  08E8  397F               	andlw	127
 14862  08E9  003D               	movlb	29	; select bank29
 14863  08EA  0096               	movwf	22	;volatile
 14864                           
 14865                           ;usb_device.c: 2607: if(UADDR != 0u)
 14866  08EB  0816               	movf	22,w	;volatile
 14867  08EC  1903               	btfsc	3,2
 14868  08ED  28F0               	goto	i1l5960
 14869                           
 14870                           ;usb_device.c: 2608: {
 14871                           ;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
 14872  08EE  3010               	movlw	16
 14873  08EF  28F1               	goto	L19
 14874  08F0                     i1l5960:	
 14875                           ;usb_device.c: 2610: }
 14876                           
 14877                           
 14878                           ;usb_device.c: 2611: else
 14879                           ;usb_device.c: 2612: {
 14880                           ;usb_device.c: 2613: USBDeviceState=DEFAULT_STATE;
 14881  08F0  3004               	movlw	4
 14882  08F1                     L19:	
 14883  08F1  00F3               	movwf	??i1_USBCtrlTrfInHandler
 14884  08F2  0873               	movf	??i1_USBCtrlTrfInHandler,w
 14885  08F3  0023               	movlb	3	; select bank3
 14886  08F4  00E5               	movwf	_USBDeviceState^(0+384)	;volatile
 14887  08F5                     i1l5962:	
 14888                           
 14889                           ;usb_device.c: 2614: }
 14890                           ;usb_device.c: 2615: }
 14891                           ;usb_device.c: 2618: if(controlTransferState == 1)
 14892  08F5  0362               	decf	_controlTransferState^(0+384),w	;volatile
 14893  08F6  1D03               	btfss	3,2
 14894  08F7  2934               	goto	i1l578
 14895                           
 14896                           ;usb_device.c: 2619: {
 14897                           ;usb_device.c: 2620: pBDTEntryIn[0]->ADR = (((uint16_t)(CtrlTrfData)) & 0x7FFF);
 14898  08F8  3058               	movlw	88
 14899  08F9  00F3               	movwf	??i1_USBCtrlTrfInHandler
 14900  08FA  3000               	movlw	0
 14901  08FB  00F4               	movwf	??i1_USBCtrlTrfInHandler+1
 14902  08FC  0837               	movf	_pBDTEntryIn^(0+384),w
 14903  08FD  0086               	movwf	6
 14904  08FE  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 14905  08FF  0087               	movwf	7
 14906  0900  3142               	addfsr 1,2
 14907  0901  0873               	movf	??i1_USBCtrlTrfInHandler,w
 14908  0902  3FC0               	movwi [0]fsr1
 14909  0903  0874               	movf	??i1_USBCtrlTrfInHandler+1,w
 14910  0904  3FC1               	movwi [1]fsr1
 14911                           
 14912                           ;usb_device.c: 2621: USBCtrlTrfTxService();
 14913  0905  3189  21AC  3188   	fcall	i1_USBCtrlTrfTxService
 14914                           
 14915                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
 14916  0908  3002               	movlw	2
 14917  0909  0023               	movlb	3	; select bank3
 14918  090A  0663               	xorwf	_shortPacketStatus^(0+384),w	;volatile
 14919  090B  1D03               	btfss	3,2
 14920  090C  2919               	goto	i1l5972
 14921                           
 14922                           ;usb_device.c: 2628: {
 14923                           ;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
 14924  090D  0837               	movf	_pBDTEntryIn^(0+384),w
 14925  090E  0086               	movwf	6
 14926  090F  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 14927  0910  0087               	movwf	7
 14928  0911  3004               	movlw	4
 14929  0912  0081               	movwf	1
 14930                           
 14931                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
 14932  0913  0837               	movf	_pBDTEntryIn^(0+384),w
 14933  0914  0086               	movwf	6
 14934  0915  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 14935  0916  0087               	movwf	7
 14936  0917  1781               	bsf	1,7
 14937                           
 14938                           ;usb_device.c: 2633: }
 14939  0918  0008               	return
 14940  0919                     i1l5972:	
 14941                           
 14942                           ;usb_device.c: 2634: else
 14943                           ;usb_device.c: 2635: {
 14944                           ;usb_device.c: 2636: if(lastDTS == 0)
 14945  0919  0875               	movf	i1USBCtrlTrfInHandler@lastDTS,w
 14946  091A  1D03               	btfss	3,2
 14947  091B  2928               	goto	i1l5976
 14948                           
 14949                           ;usb_device.c: 2637: {
 14950                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 14951  091C  0837               	movf	_pBDTEntryIn^(0+384),w
 14952  091D  0086               	movwf	6
 14953  091E  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 14954  091F  0087               	movwf	7
 14955  0920  3048               	movlw	72
 14956  0921  0081               	movwf	1
 14957                           
 14958                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
 14959  0922  0837               	movf	_pBDTEntryIn^(0+384),w
 14960  0923  0086               	movwf	6
 14961  0924  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 14962  0925  0087               	movwf	7
 14963  0926  1781               	bsf	1,7
 14964                           
 14965                           ;usb_device.c: 2640: }
 14966  0927  0008               	return
 14967  0928                     i1l5976:	
 14968                           
 14969                           ;usb_device.c: 2641: else
 14970                           ;usb_device.c: 2642: {
 14971                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 14972  0928  0837               	movf	_pBDTEntryIn^(0+384),w
 14973  0929  0086               	movwf	6
 14974  092A  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 14975  092B  0087               	movwf	7
 14976  092C  3008               	movlw	8
 14977  092D  0081               	movwf	1
 14978                           
 14979                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
 14980  092E  0837               	movf	_pBDTEntryIn^(0+384),w
 14981  092F  0086               	movwf	6
 14982  0930  0838               	movf	(_pBDTEntryIn+1)^(0+384),w
 14983  0931  0087               	movwf	7
 14984  0932  1781               	bsf	1,7
 14985                           
 14986                           ;usb_device.c: 2645: }
 14987                           ;usb_device.c: 2646: }
 14988                           ;usb_device.c: 2647: }
 14989  0933  0008               	return
 14990  0934                     i1l578:	
 14991                           
 14992                           ;usb_device.c: 2648: else
 14993                           ;usb_device.c: 2649: {
 14994                           ;usb_device.c: 2653: if(outPipes[0].info.bits.busy == 1)
 14995  0934  1FB2               	btfss	(_outPipes^(0+384)+2),7	;volatile
 14996  0935  2939               	goto	i1l5980
 14997                           
 14998                           ;usb_device.c: 2656: {
 14999                           ;usb_device.c: 2657: outPipes[0].pFunc();
 15000  0936  0835               	movf	(low ((_outPipes| (0+256)+5)))^(0+128),w	;volatile
 15001  0937  0836               	movf	((low ((_outPipes| (0+256)+5))+1))^(0+128),w	;volatile
 15002                           
 15003                           ;usb_device.c: 2658: }
 15004                           ;usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
 15005  0938  13B2               	bcf	(_outPipes^(0+384)+2),7	;volatile
 15006  0939                     i1l5980:	
 15007                           
 15008                           ;usb_device.c: 2660: }
 15009                           ;usb_device.c: 2662: controlTransferState = 0;
 15010  0939  01E2               	clrf	_controlTransferState^(0+384)	;volatile
 15011  093A  0008               	return
 15012  093B                     __end_ofi1_USBCtrlTrfInHandler:	
 15013                           
 15014                           	psect	text67
 15015  09AC                     __ptext67:	
 15016 ;; *************** function i1_USBCtrlTrfTxService *****************
 15017 ;; Defined at:
 15018 ;;		line 1771 in file "mcc_generated_files/usb/usb_device.c"
 15019 ;; Parameters:    Size  Location     Type
 15020 ;;		None
 15021 ;; Auto vars:     Size  Location     Type
 15022 ;;  USBCtrlTrfTx    1    2[COMMON] unsigned char 
 15023 ;; Return value:  Size  Location     Type
 15024 ;;                  1    wreg      void 
 15025 ;; Registers used:
 15026 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 15027 ;; Tracked objects:
 15028 ;;		On entry : 0/0
 15029 ;;		On exit  : 0/0
 15030 ;;		Unchanged: 0/0
 15031 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15033 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15034 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15035 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15036 ;;Total ram usage:        3 bytes
 15037 ;; Hardware stack levels used:    1
 15038 ;; This function calls:
 15039 ;;		Nothing
 15040 ;; This function is called by:
 15041 ;;		i1_USBCtrlEPAllowDataStage
 15042 ;;		i1_USBCtrlTrfInHandler
 15043 ;; This function uses a non-reentrant model
 15044 ;;
 15045                           
 15046                           
 15047                           ;psect for function i1_USBCtrlTrfTxService
 15048  09AC                     i1_USBCtrlTrfTxService:	
 15049                           
 15050                           ;usb_device.c: 1773: uint8_t byteToSend;
 15051                           ;usb_device.c: 1777: byteToSend = 8;
 15052                           
 15053                           ;incstack = 0
 15054                           ; Regs used in i1_USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
 15055  09AC  3008               	movlw	8
 15056  09AD  00F0               	movwf	??i1_USBCtrlTrfTxService
 15057  09AE  0870               	movf	??i1_USBCtrlTrfTxService,w
 15058  09AF  00F2               	movwf	i1USBCtrlTrfTxService@byteToSend
 15059                           
 15060                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 15061  09B0  3000               	movlw	0
 15062  09B1  0021               	movlb	1	; select bank1
 15063  09B2  0247               	subwf	((_inPipes+1)^(0+128)+3),w	;volatile
 15064  09B3  3008               	movlw	8
 15065  09B4  1903               	skipnz
 15066  09B5  0246               	subwf	(_inPipes^(0+128)+3),w	;volatile
 15067  09B6  1803               	skipnc
 15068  09B7  29C9               	goto	i1l478
 15069                           
 15070                           ;usb_device.c: 1779: {
 15071                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 15072  09B8  0846               	movf	(_inPipes^(0+128)+3),w	;volatile
 15073  09B9  00F0               	movwf	??i1_USBCtrlTrfTxService
 15074  09BA  0870               	movf	??i1_USBCtrlTrfTxService,w
 15075  09BB  00F2               	movwf	i1USBCtrlTrfTxService@byteToSend
 15076                           
 15077                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 15078  09BC  0023               	movlb	3	; select bank3
 15079  09BD  0863               	movf	_shortPacketStatus^(0+384),w	;volatile
 15080  09BE  1D03               	btfss	3,2
 15081  09BF  29C2               	goto	i1l4810
 15082                           
 15083                           ;usb_device.c: 1788: {
 15084                           ;usb_device.c: 1789: shortPacketStatus = 1;
 15085  09C0  3001               	movlw	1
 15086  09C1  29C6               	goto	L20
 15087  09C2                     i1l4810:	
 15088                           ;usb_device.c: 1790: }
 15089                           
 15090                           
 15091                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 15092  09C2  0363               	decf	_shortPacketStatus^(0+384),w	;volatile
 15093  09C3  1D03               	btfss	3,2
 15094  09C4  29C9               	goto	i1l478
 15095                           
 15096                           ;usb_device.c: 1792: {
 15097                           ;usb_device.c: 1793: shortPacketStatus = 2;
 15098  09C5  3002               	movlw	2
 15099  09C6                     L20:	
 15100  09C6  00F0               	movwf	??i1_USBCtrlTrfTxService
 15101  09C7  0870               	movf	??i1_USBCtrlTrfTxService,w
 15102  09C8  00E3               	movwf	_shortPacketStatus^(0+384)	;volatile
 15103  09C9                     i1l478:	
 15104                           
 15105                           ;usb_device.c: 1794: }
 15106                           ;usb_device.c: 1795: }
 15107                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 15108  09C9  0872               	movf	i1USBCtrlTrfTxService@byteToSend,w
 15109  09CA  00F0               	movwf	??i1_USBCtrlTrfTxService
 15110  09CB  01F1               	clrf	??i1_USBCtrlTrfTxService+1
 15111  09CC  0870               	movf	??i1_USBCtrlTrfTxService,w
 15112  09CD  0021               	movlb	1	; select bank1
 15113  09CE  02C6               	subwf	(_inPipes^(0+128)+3),f	;volatile
 15114  09CF  0871               	movf	??i1_USBCtrlTrfTxService+1,w
 15115  09D0  3BC7               	subwfb	((_inPipes+1)^(0+128)+3),f	;volatile
 15116                           
 15117                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 15118  09D1  0023               	movlb	3	; select bank3
 15119  09D2  0837               	movf	_pBDTEntryIn^(0+384),w
 15120  09D3  3E01               	addlw	1
 15121  09D4  00F0               	movwf	??i1_USBCtrlTrfTxService
 15122  09D5  3000               	movlw	0
 15123  09D6  3D38               	addwfc	(_pBDTEntryIn+1)^(0+384),w
 15124  09D7  00F1               	movwf	??i1_USBCtrlTrfTxService+1
 15125  09D8  0870               	movf	??i1_USBCtrlTrfTxService,w
 15126  09D9  0086               	movwf	6
 15127  09DA  0871               	movf	??i1_USBCtrlTrfTxService+1,w
 15128  09DB  0087               	movwf	7
 15129  09DC  0872               	movf	i1USBCtrlTrfTxService@byteToSend,w
 15130  09DD  0081               	movwf	1
 15131                           
 15132                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 15133  09DE  3058               	movlw	88
 15134  09DF  00F0               	movwf	??i1_USBCtrlTrfTxService
 15135  09E0  0870               	movf	??i1_USBCtrlTrfTxService,w
 15136  09E1  00E1               	movwf	_pDst^(0+384)
 15137                           
 15138                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 15139  09E2  0021               	movlb	1	; select bank1
 15140  09E3  1C45               	btfss	(_inPipes^(0+128)+2),0	;volatile
 15141  09E4  29FF               	goto	i1l4830
 15142  09E5  2A1C               	goto	i1l4840
 15143  09E6                     i1l4822:	
 15144                           ;usb_device.c: 1810: {
 15145                           ;usb_device.c: 1811: while(byteToSend)
 15146                           
 15147                           
 15148                           ;usb_device.c: 1812: {
 15149                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 15150  09E6  0021               	movlb	1	; select bank1
 15151  09E7  0843               	movf	_inPipes^(0+128),w	;volatile
 15152  09E8  0084               	movwf	4
 15153  09E9  0844               	movf	(_inPipes+1)^(0+128),w	;volatile
 15154  09EA  0085               	movwf	5
 15155  09EB  0800               	movf	0,w	;code access
 15156  09EC  00F0               	movwf	??i1_USBCtrlTrfTxService
 15157  09ED  0023               	movlb	3	; select bank3
 15158  09EE  0861               	movf	_pDst^(0+384),w
 15159  09EF  0086               	movwf	6
 15160  09F0  0187               	clrf	7
 15161  09F1  0870               	movf	??i1_USBCtrlTrfTxService,w
 15162  09F2  0081               	movwf	1
 15163  09F3  3001               	movlw	1
 15164  09F4  0021               	movlb	1	; select bank1
 15165  09F5  07C3               	addwf	_inPipes^(0+128),f	;volatile
 15166  09F6  3000               	movlw	0
 15167  09F7  3DC4               	addwfc	(_inPipes+1)^(0+128),f	;volatile
 15168  09F8  3001               	movlw	1
 15169  09F9  00F0               	movwf	??i1_USBCtrlTrfTxService
 15170  09FA  0870               	movf	??i1_USBCtrlTrfTxService,w
 15171  09FB  0023               	movlb	3	; select bank3
 15172  09FC  07E1               	addwf	_pDst^(0+384),f
 15173                           
 15174                           ;usb_device.c: 1814: byteToSend--;
 15175  09FD  3001               	movlw	1
 15176  09FE  02F2               	subwf	i1USBCtrlTrfTxService@byteToSend,f
 15177  09FF                     i1l4830:	
 15178  09FF  0872               	movf	i1USBCtrlTrfTxService@byteToSend,w
 15179  0A00  1903               	btfsc	3,2
 15180  0A01  0008               	return
 15181  0A02  29E6               	goto	i1l4822
 15182  0A03                     i1l4832:	
 15183                           ;usb_device.c: 1817: else
 15184                           ;usb_device.c: 1818: {
 15185                           ;usb_device.c: 1819: while(byteToSend)
 15186                           
 15187                           ;usb_device.c: 1815: }
 15188                           ;usb_device.c: 1816: }
 15189                           
 15190                           
 15191                           ;usb_device.c: 1820: {
 15192                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 15193  0A03  0021               	movlb	1	; select bank1
 15194  0A04  0843               	movf	_inPipes^(0+128),w	;volatile
 15195  0A05  0084               	movwf	4
 15196  0A06  0844               	movf	(_inPipes+1)^(0+128),w	;volatile
 15197  0A07  0085               	movwf	5
 15198  0A08  0800               	movf	0,w	;code access
 15199  0A09  00F0               	movwf	??i1_USBCtrlTrfTxService
 15200  0A0A  0023               	movlb	3	; select bank3
 15201  0A0B  0861               	movf	_pDst^(0+384),w
 15202  0A0C  0086               	movwf	6
 15203  0A0D  0187               	clrf	7
 15204  0A0E  0870               	movf	??i1_USBCtrlTrfTxService,w
 15205  0A0F  0081               	movwf	1
 15206  0A10  3001               	movlw	1
 15207  0A11  0021               	movlb	1	; select bank1
 15208  0A12  07C3               	addwf	_inPipes^(0+128),f	;volatile
 15209  0A13  3000               	movlw	0
 15210  0A14  3DC4               	addwfc	(_inPipes+1)^(0+128),f	;volatile
 15211  0A15  3001               	movlw	1
 15212  0A16  00F0               	movwf	??i1_USBCtrlTrfTxService
 15213  0A17  0870               	movf	??i1_USBCtrlTrfTxService,w
 15214  0A18  0023               	movlb	3	; select bank3
 15215  0A19  07E1               	addwf	_pDst^(0+384),f
 15216                           
 15217                           ;usb_device.c: 1822: byteToSend--;
 15218  0A1A  3001               	movlw	1
 15219  0A1B  02F2               	subwf	i1USBCtrlTrfTxService@byteToSend,f
 15220  0A1C                     i1l4840:	
 15221  0A1C  0872               	movf	i1USBCtrlTrfTxService@byteToSend,w
 15222  0A1D  1903               	btfsc	3,2
 15223  0A1E  0008               	return
 15224  0A1F  2A03               	goto	i1l4832
 15225  0A20                     __end_ofi1_USBCtrlTrfTxService:	
 15226                           
 15227                           	psect	text68
 15228  1D7E                     __ptext68:	
 15229 ;; *************** function _i2c_busCollisionISR *****************
 15230 ;; Defined at:
 15231 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
 15232 ;; Parameters:    Size  Location     Type
 15233 ;;		None
 15234 ;; Auto vars:     Size  Location     Type
 15235 ;;		None
 15236 ;; Return value:  Size  Location     Type
 15237 ;;                  1    wreg      void 
 15238 ;; Registers used:
 15239 ;;		status,2, status,0, pclath, cstack
 15240 ;; Tracked objects:
 15241 ;;		On entry : 0/0
 15242 ;;		On exit  : 0/0
 15243 ;;		Unchanged: 0/0
 15244 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15249 ;;Total ram usage:        0 bytes
 15250 ;; Hardware stack levels used:    1
 15251 ;; Hardware stack levels required when called:    1
 15252 ;; This function calls:
 15253 ;;		_i2c_driver_clearBusCollision
 15254 ;; This function is called by:
 15255 ;;		_i2c_open
 15256 ;;		_INTERRUPT_InterruptManager
 15257 ;; This function uses a non-reentrant model
 15258 ;;
 15259                           
 15260                           
 15261                           ;psect for function _i2c_busCollisionISR
 15262  1D7E                     _i2c_busCollisionISR:	
 15263                           
 15264                           ;i2c_master.c: 437: i2c_driver_clearBusCollision();
 15265                           
 15266                           ;incstack = 0
 15267                           ; Regs used in _i2c_busCollisionISR: [status,2+status,0+pclath+cstack]
 15268  1D7E  319D  257B         	fcall	_i2c_driver_clearBusCollision
 15269  1D80  0008               	return
 15270  1D81                     __end_of_i2c_busCollisionISR:	
 15271                           
 15272                           	psect	text69
 15273  1D7B                     __ptext69:	
 15274 ;; *************** function _i2c_driver_clearBusCollision *****************
 15275 ;; Defined at:
 15276 ;;		line 253 in file "mcc_generated_files/i2c_driver.c"
 15277 ;; Parameters:    Size  Location     Type
 15278 ;;		None
 15279 ;; Auto vars:     Size  Location     Type
 15280 ;;		None
 15281 ;; Return value:  Size  Location     Type
 15282 ;;                  1    wreg      void 
 15283 ;; Registers used:
 15284 ;;		None
 15285 ;; Tracked objects:
 15286 ;;		On entry : 0/0
 15287 ;;		On exit  : 0/0
 15288 ;;		Unchanged: 0/0
 15289 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15294 ;;Total ram usage:        0 bytes
 15295 ;; Hardware stack levels used:    1
 15296 ;; This function calls:
 15297 ;;		Nothing
 15298 ;; This function is called by:
 15299 ;;		_i2c_busCollisionISR
 15300 ;; This function uses a non-reentrant model
 15301 ;;
 15302                           
 15303                           
 15304                           ;psect for function _i2c_driver_clearBusCollision
 15305  1D7B                     _i2c_driver_clearBusCollision:	
 15306                           
 15307                           ;i2c_driver.c: 255: PIR2bits.BCL1IF = 0;
 15308                           
 15309                           ;incstack = 0
 15310                           ; Regs used in _i2c_driver_clearBusCollision: []
 15311  1D7B  0020               	movlb	0	; select bank0
 15312  1D7C  1192               	bcf	18,3	;volatile
 15313  1D7D  0008               	return
 15314  1D7E                     __end_of_i2c_driver_clearBusCollision:	
 15315                           
 15316                           	psect	text70
 15317  1F80                     __ptext70:	
 15318 ;; *************** function _i2c_ISR *****************
 15319 ;; Defined at:
 15320 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 15321 ;; Parameters:    Size  Location     Type
 15322 ;;		None
 15323 ;; Auto vars:     Size  Location     Type
 15324 ;;		None
 15325 ;; Return value:  Size  Location     Type
 15326 ;;                  1    wreg      void 
 15327 ;; Registers used:
 15328 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15329 ;; Tracked objects:
 15330 ;;		On entry : 0/0
 15331 ;;		On exit  : 0/0
 15332 ;;		Unchanged: 0/0
 15333 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15336 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15337 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15338 ;;Total ram usage:        1 bytes
 15339 ;; Hardware stack levels used:    1
 15340 ;; Hardware stack levels required when called:    4
 15341 ;; This function calls:
 15342 ;;		_do_I2C_DO_ACK
 15343 ;;		_do_I2C_DO_ADDRESS_NACK
 15344 ;;		_do_I2C_DO_NACK_RESTART
 15345 ;;		_do_I2C_DO_NACK_STOP
 15346 ;;		_do_I2C_IDLE
 15347 ;;		_do_I2C_RCEN
 15348 ;;		_do_I2C_RESET
 15349 ;;		_do_I2C_RX
 15350 ;;		_do_I2C_SEND_ADR_READ
 15351 ;;		_do_I2C_SEND_ADR_WRITE
 15352 ;;		_do_I2C_SEND_RESTART
 15353 ;;		_do_I2C_SEND_RESTART_READ
 15354 ;;		_do_I2C_SEND_RESTART_WRITE
 15355 ;;		_do_I2C_SEND_STOP
 15356 ;;		_do_I2C_TX
 15357 ;;		_do_I2C_TX_EMPTY
 15358 ;;		_i2c_driver_isNACK
 15359 ;;		_mssp_clearIRQ
 15360 ;; This function is called by:
 15361 ;;		_i2c_open
 15362 ;;		_i2c_poller
 15363 ;;		_INTERRUPT_InterruptManager
 15364 ;; This function uses a non-reentrant model
 15365 ;;
 15366                           
 15367                           
 15368                           ;psect for function _i2c_ISR
 15369  1F80                     _i2c_ISR:	
 15370                           
 15371                           ;i2c_master.c: 421: mssp_clearIRQ();
 15372                           
 15373                           ;incstack = 0
 15374                           ; Regs used in _i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15375  1F80  319D  2578  319F   	fcall	_mssp_clearIRQ
 15376                           
 15377                           ;i2c_master.c: 427: if(i2c_status.addressNACKCheck && i2c_driver_isNACK())
 15378  1F83  0024               	movlb	4	; select bank4
 15379  1F84  1DA0               	btfss	_i2c_status^(0+512),3
 15380  1F85  2F90               	goto	i1l6816
 15381  1F86  319D  25DB  319F   	fcall	_i2c_driver_isNACK
 15382  1F89  1C03               	btfss	3,0
 15383  1F8A  2F90               	goto	i1l6816
 15384                           
 15385                           ;i2c_master.c: 428: {
 15386                           ;i2c_master.c: 429: i2c_status.state = I2C_ADDRESS_NACK;
 15387  1F8B  300F               	movlw	15
 15388  1F8C  00F4               	movwf	??_i2c_ISR
 15389  1F8D  0874               	movf	??_i2c_ISR,w
 15390  1F8E  0024               	movlb	4	; select bank4
 15391  1F8F  00A9               	movwf	(_i2c_status^(0+512)+9)
 15392  1F90                     i1l6816:	
 15393                           
 15394                           ;i2c_master.c: 430: }
 15395                           ;i2c_master.c: 432: i2c_status.state = fsmStateTable[i2c_status.state]();
 15396  1F90  0024               	movlb	4	; select bank4
 15397  1F91  3529               	lslf	(_i2c_status^(0+512)+9),w
 15398  1F92  3EA0               	addlw	(low (_fsmStateTable| (0+512)))& (0+255)
 15399  1F93  0086               	movwf	6
 15400  1F94  3002               	movlw	2	; select bank5/6
 15401  1F95  0087               	movwf	7
 15402  1F96  3F41               	moviw [1]fsr1
 15403  1F97  008A               	movwf	10
 15404  1F98  3F40               	moviw [0]fsr1
 15405  1F99  000A               	callw
 15406  1F9A  319F               	pagesel	$
 15407  1F9B  00F4               	movwf	??_i2c_ISR
 15408  1F9C  0874               	movf	??_i2c_ISR,w
 15409  1F9D  0024               	movlb	4	; select bank4
 15410  1F9E  00A9               	movwf	(_i2c_status^(0+512)+9)
 15411  1F9F  0008               	return
 15412  1FA0                     __end_of_i2c_ISR:	
 15413                           
 15414                           	psect	text71
 15415  1D78                     __ptext71:	
 15416 ;; *************** function _mssp_clearIRQ *****************
 15417 ;; Defined at:
 15418 ;;		line 53 in file "mcc_generated_files/i2c_driver.c"
 15419 ;; Parameters:    Size  Location     Type
 15420 ;;		None
 15421 ;; Auto vars:     Size  Location     Type
 15422 ;;		None
 15423 ;; Return value:  Size  Location     Type
 15424 ;;                  1    wreg      void 
 15425 ;; Registers used:
 15426 ;;		None
 15427 ;; Tracked objects:
 15428 ;;		On entry : 0/0
 15429 ;;		On exit  : 0/0
 15430 ;;		Unchanged: 0/0
 15431 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15436 ;;Total ram usage:        0 bytes
 15437 ;; Hardware stack levels used:    1
 15438 ;; This function calls:
 15439 ;;		Nothing
 15440 ;; This function is called by:
 15441 ;;		_i2c_ISR
 15442 ;;		_i2c_open
 15443 ;;		_i2c_close
 15444 ;; This function uses a non-reentrant model
 15445 ;;
 15446                           
 15447                           
 15448                           ;psect for function _mssp_clearIRQ
 15449  1D78                     _mssp_clearIRQ:	
 15450                           
 15451                           ;i2c_driver.c: 55: PIR1bits.SSP1IF = 0;
 15452                           
 15453                           ;incstack = 0
 15454                           ; Regs used in _mssp_clearIRQ: []
 15455  1D78  0020               	movlb	0	; select bank0
 15456  1D79  1191               	bcf	17,3	;volatile
 15457  1D7A  0008               	return
 15458  1D7B                     __end_of_mssp_clearIRQ:	
 15459                           
 15460                           	psect	text72
 15461  12CB                     __ptext72:	
 15462 ;; *************** function _do_I2C_RX *****************
 15463 ;; Defined at:
 15464 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 15465 ;; Parameters:    Size  Location     Type
 15466 ;;		None
 15467 ;; Auto vars:     Size  Location     Type
 15468 ;;		None
 15469 ;; Return value:  Size  Location     Type
 15470 ;;                  1    wreg      enum E2347
 15471 ;; Registers used:
 15472 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15473 ;; Tracked objects:
 15474 ;;		On entry : 0/0
 15475 ;;		On exit  : 0/0
 15476 ;;		Unchanged: 0/0
 15477 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15480 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15481 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15482 ;;Total ram usage:        1 bytes
 15483 ;; Hardware stack levels used:    1
 15484 ;; Hardware stack levels required when called:    3
 15485 ;; This function calls:
 15486 ;;		Absolute function
 15487 ;;		_do_I2C_DO_NACK_RESTART
 15488 ;;		_do_I2C_DO_NACK_STOP
 15489 ;;		_i2c_driver_getRXData
 15490 ;;		_i2c_driver_sendACK
 15491 ;;		_i2c_restartWrite
 15492 ;;		_rd1RegCompleteHandler
 15493 ;;		_rd2RegCompleteHandler
 15494 ;;		_rdBlkRegCompleteHandler
 15495 ;;		_returnReset
 15496 ;;		_returnStop
 15497 ;;		_wr1RegCompleteHandler
 15498 ;;		_wr2RegCompleteHandler
 15499 ;; This function is called by:
 15500 ;;		_i2c_ISR
 15501 ;; This function uses a non-reentrant model
 15502 ;;
 15503                           
 15504                           
 15505                           ;psect for function _do_I2C_RX
 15506  12CB                     _do_I2C_RX:	
 15507                           
 15508                           ;i2c_master.c: 359: *i2c_status.data_ptr++ = i2c_driver_getRXData();
 15509                           
 15510                           ;incstack = 0
 15511                           ; Regs used in _do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15512  12CB  319D  2572  3192   	fcall	_i2c_driver_getRXData
 15513  12CE  00F0               	movwf	??_do_I2C_RX
 15514  12CF  0024               	movlb	4	; select bank4
 15515  12D0  0822               	movf	(low ((_i2c_status| (0+512)+2)))^0,w
 15516  12D1  0086               	movwf	6
 15517  12D2  0187               	clrf	7
 15518  12D3  0870               	movf	??_do_I2C_RX,w
 15519  12D4  0081               	movwf	1
 15520  12D5  3001               	movlw	1
 15521  12D6  00F0               	movwf	??_do_I2C_RX
 15522  12D7  0870               	movf	??_do_I2C_RX,w
 15523  12D8  07A2               	addwf	(low ((_i2c_status| (0+512)+2)))^0,f
 15524                           
 15525                           ;i2c_master.c: 360: if(--i2c_status.data_length)
 15526  12D9  3001               	movlw	1
 15527  12DA  02A3               	subwf	(_i2c_status^(0+512)+3),f
 15528  12DB  3000               	movlw	0
 15529  12DC  3BA4               	subwfb	((_i2c_status+1)^(0+512)+3),f
 15530  12DD  0823               	movf	(_i2c_status^(0+512)+3),w
 15531  12DE  0424               	iorwf	((_i2c_status+1)^(0+512)+3),w
 15532  12DF  1903               	btfsc	3,2
 15533  12E0  2AE5               	goto	i1l863
 15534                           
 15535                           ;i2c_master.c: 361: {
 15536                           ;i2c_master.c: 362: i2c_driver_sendACK();
 15537  12E1  319D  2581         	fcall	_i2c_driver_sendACK
 15538                           
 15539                           ;i2c_master.c: 363: return I2C_RCEN;
 15540  12E3  3005               	movlw	5
 15541                           
 15542                           ;i2c_master.c: 364: }
 15543  12E4  0008               	return
 15544  12E5                     i1l863:	
 15545                           
 15546                           ;i2c_master.c: 365: else
 15547                           ;i2c_master.c: 366: {
 15548                           ;i2c_master.c: 367: i2c_status.bufferFree = 1;
 15549  12E5  1520               	bsf	_i2c_status^(0+512),2
 15550                           
 15551                           ;i2c_master.c: 368: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 15552  12E6  2AED               	goto	i1l6376
 15553  12E7                     i1l6366:	
 15554                           ;i2c_master.c: 369: {
 15555                           ;i2c_master.c: 370: case i2c_restart_write:
 15556                           
 15557                           
 15558                           ;i2c_master.c: 371: case i2c_restart_read:
 15559                           ;i2c_master.c: 372: return do_I2C_DO_NACK_RESTART();
 15560  12E7  319D  25A1         	fcall	_do_I2C_DO_NACK_RESTART
 15561  12E9  0008               	return
 15562  12EA                     i1l6370:	
 15563                           ;i2c_master.c: 374: case i2c_continue:
 15564                           
 15565                           ;i2c_master.c: 373: default:
 15566                           
 15567                           
 15568                           ;i2c_master.c: 375: case i2c_stop:
 15569                           ;i2c_master.c: 376: return do_I2C_DO_NACK_STOP();
 15570  12EA  319D  259D         	fcall	_do_I2C_DO_NACK_STOP
 15571                           
 15572                           ;i2c_master.c: 377: }
 15573  12EC  0008               	return
 15574  12ED                     i1l6376:	
 15575  12ED  0024               	movlb	4	; select bank4
 15576  12EE  0837               	movf	(low ((_i2c_status| (0+512)+23)))^0,w
 15577  12EF  00F0               	movwf	??_do_I2C_RX
 15578  12F0  0870               	movf	??_do_I2C_RX,w
 15579  12F1  00F9               	movwf	rdBlkRegCompleteHandler@p
 15580  12F2  300B               	movlw	11
 15581  12F3  3E20               	addlw	(low (_i2c_status| (0+512)))& (0+255)
 15582  12F4  0086               	movwf	6
 15583  12F5  3002               	movlw	2	; select bank4/5
 15584  12F6  0087               	movwf	7
 15585  12F7  3F41               	moviw [1]fsr1
 15586  12F8  008A               	movwf	10
 15587  12F9  3F40               	moviw [0]fsr1
 15588  12FA  000A               	callw
 15589  12FB  3192               	pagesel	$
 15590                           
 15591                           ; Switch size 1, requested type "space"
 15592                           ; Number of cases is 4, Range of values is 1 to 4
 15593                           ; switch strategies available:
 15594                           ; Name         Instructions Cycles
 15595                           ; simple_byte           13     7 (average)
 15596                           ; direct_byte           17     9 (fixed)
 15597                           ; jumptable            263     9 (fixed)
 15598                           ;	Chosen strategy is simple_byte
 15599  12FC  3A01               	xorlw	1	; case 1
 15600  12FD  1903               	skipnz
 15601  12FE  2AEA               	goto	i1l6370
 15602  12FF  3A03               	xorlw	3	; case 2
 15603  1300  1903               	skipnz
 15604  1301  2AE7               	goto	i1l6366
 15605  1302  3A01               	xorlw	1	; case 3
 15606  1303  1903               	skipnz
 15607  1304  2AE7               	goto	i1l6366
 15608  1305  3A07               	xorlw	7	; case 4
 15609  1306  1903               	skipnz
 15610  1307  2AEA               	goto	i1l6370
 15611  1308  2AEA               	goto	i1l6370
 15612  1309  0008               	return
 15613  130A                     __end_of_do_I2C_RX:	
 15614                           
 15615                           	psect	text73
 15616  13D3                     __ptext73:	
 15617 ;; *************** function _do_I2C_TX *****************
 15618 ;; Defined at:
 15619 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 15620 ;; Parameters:    Size  Location     Type
 15621 ;;		None
 15622 ;; Auto vars:     Size  Location     Type
 15623 ;;		None
 15624 ;; Return value:  Size  Location     Type
 15625 ;;                  1    wreg      enum E2347
 15626 ;; Registers used:
 15627 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15628 ;; Tracked objects:
 15629 ;;		On entry : 0/0
 15630 ;;		On exit  : 0/0
 15631 ;;		Unchanged: 0/0
 15632 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15634 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15635 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15636 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15637 ;;Total ram usage:        3 bytes
 15638 ;; Hardware stack levels used:    1
 15639 ;; Hardware stack levels required when called:    3
 15640 ;; This function calls:
 15641 ;;		Absolute function
 15642 ;;		_do_I2C_SEND_RESTART_READ
 15643 ;;		_do_I2C_SEND_RESTART_WRITE
 15644 ;;		_do_I2C_SEND_STOP
 15645 ;;		_i2c_driver_TXData
 15646 ;;		_i2c_driver_isNACK
 15647 ;;		_i2c_restartWrite
 15648 ;;		_rd1RegCompleteHandler
 15649 ;;		_rd2RegCompleteHandler
 15650 ;;		_rdBlkRegCompleteHandler
 15651 ;;		_returnReset
 15652 ;;		_returnStop
 15653 ;;		_wr1RegCompleteHandler
 15654 ;;		_wr2RegCompleteHandler
 15655 ;; This function is called by:
 15656 ;;		_i2c_ISR
 15657 ;; This function uses a non-reentrant model
 15658 ;;
 15659                           
 15660                           
 15661                           ;psect for function _do_I2C_TX
 15662  13D3                     _do_I2C_TX:	
 15663                           
 15664                           ;i2c_master.c: 335: if(i2c_driver_isNACK())
 15665                           
 15666                           ;incstack = 0
 15667                           ; Regs used in _do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15668  13D3  319D  25DB  3193   	fcall	_i2c_driver_isNACK
 15669  13D6  1803               	btfsc	3,0
 15670  13D7  2BE2               	goto	i1l6340
 15671  13D8  2BFF               	goto	i1l847
 15672  13D9                     i1l6326:	
 15673                           ;i2c_master.c: 338: {
 15674                           ;i2c_master.c: 339: case i2c_restart_read:
 15675                           
 15676                           ;i2c_master.c: 336: {
 15677                           ;i2c_master.c: 337: switch(i2c_status.callbackTable[i2c_dataNACK](i2c_status.callbackPay
      +                          load[i2c_dataNACK]))
 15678                           
 15679                           
 15680                           ;i2c_master.c: 340: return do_I2C_SEND_RESTART_READ();
 15681  13D9  319D  2589         	fcall	_do_I2C_SEND_RESTART_READ
 15682  13DB  0008               	return
 15683  13DC                     i1l6330:	
 15684                           ;i2c_master.c: 341: case i2c_restart_write:
 15685                           
 15686                           
 15687                           ;i2c_master.c: 342: return do_I2C_SEND_RESTART_WRITE();
 15688  13DC  319D  258D         	fcall	_do_I2C_SEND_RESTART_WRITE
 15689  13DE  0008               	return
 15690  13DF                     i1l6334:	
 15691                           ;i2c_master.c: 344: case i2c_continue:
 15692                           
 15693                           ;i2c_master.c: 343: default:
 15694                           
 15695                           
 15696                           ;i2c_master.c: 345: case i2c_stop:
 15697                           ;i2c_master.c: 346: return do_I2C_SEND_STOP();
 15698  13DF  319D  2595         	fcall	_do_I2C_SEND_STOP
 15699                           
 15700                           ;i2c_master.c: 347: }
 15701  13E1  0008               	return
 15702  13E2                     i1l6340:	
 15703  13E2  0024               	movlb	4	; select bank4
 15704  13E3  083A               	movf	(low ((_i2c_status| (0+512)+26)))^0,w
 15705  13E4  00F1               	movwf	??_do_I2C_TX
 15706  13E5  0871               	movf	??_do_I2C_TX,w
 15707  13E6  00F9               	movwf	rdBlkRegCompleteHandler@p
 15708  13E7  3011               	movlw	17
 15709  13E8  3E20               	addlw	(low (_i2c_status| (0+512)))& (0+255)
 15710  13E9  0086               	movwf	6
 15711  13EA  3002               	movlw	2	; select bank4/5
 15712  13EB  0087               	movwf	7
 15713  13EC  3F41               	moviw [1]fsr1
 15714  13ED  008A               	movwf	10
 15715  13EE  3F40               	moviw [0]fsr1
 15716  13EF  000A               	callw
 15717  13F0  3193               	pagesel	$
 15718                           
 15719                           ; Switch size 1, requested type "space"
 15720                           ; Number of cases is 4, Range of values is 1 to 4
 15721                           ; switch strategies available:
 15722                           ; Name         Instructions Cycles
 15723                           ; simple_byte           13     7 (average)
 15724                           ; direct_byte           17     9 (fixed)
 15725                           ; jumptable            263     9 (fixed)
 15726                           ;	Chosen strategy is simple_byte
 15727  13F1  3A01               	xorlw	1	; case 1
 15728  13F2  1903               	skipnz
 15729  13F3  2BDF               	goto	i1l6334
 15730  13F4  3A03               	xorlw	3	; case 2
 15731  13F5  1903               	skipnz
 15732  13F6  2BD9               	goto	i1l6326
 15733  13F7  3A01               	xorlw	1	; case 3
 15734  13F8  1903               	skipnz
 15735  13F9  2BDC               	goto	i1l6330
 15736  13FA  3A07               	xorlw	7	; case 4
 15737  13FB  1903               	skipnz
 15738  13FC  2BDF               	goto	i1l6334
 15739  13FD  2BDF               	goto	i1l6334
 15740                           
 15741                           ;i2c_master.c: 348: }
 15742  13FE  0008               	return
 15743  13FF                     i1l847:	
 15744                           
 15745                           ;i2c_master.c: 349: else
 15746                           ;i2c_master.c: 350: {
 15747                           ;i2c_master.c: 351: i2c_status.addressNACKCheck = 0;
 15748  13FF  0024               	movlb	4	; select bank4
 15749  1400  11A0               	bcf	_i2c_status^(0+512),3
 15750                           
 15751                           ;i2c_master.c: 352: i2c_driver_TXData(*i2c_status.data_ptr++);
 15752  1401  3002               	movlw	2
 15753  1402  3E20               	addlw	(low (_i2c_status| (0+512)))& (0+255)
 15754  1403  0086               	movwf	6
 15755  1404  3002               	movlw	2	; select bank4/5
 15756  1405  0087               	movwf	7
 15757  1406  3F40               	moviw [0]fsr1
 15758  1407  0084               	movwf	4
 15759  1408  0185               	clrf	5
 15760  1409  0A81               	incf	1,f
 15761  140A  0800               	movf	0,w
 15762  140B  319D  25A9  3193   	fcall	_i2c_driver_TXData
 15763                           
 15764                           ;i2c_master.c: 353: return (--i2c_status.data_length)?I2C_TX:I2C_TX_EMPTY;
 15765  140E  3001               	movlw	1
 15766  140F  0024               	movlb	4	; select bank4
 15767  1410  02A3               	subwf	(_i2c_status^(0+512)+3),f
 15768  1411  3000               	movlw	0
 15769  1412  3BA4               	subwfb	((_i2c_status+1)^(0+512)+3),f
 15770  1413  0823               	movf	(_i2c_status^(0+512)+3),w
 15771  1414  0424               	iorwf	((_i2c_status+1)^(0+512)+3),w
 15772  1415  1D03               	btfss	3,2
 15773  1416  2C19               	goto	i1l6348
 15774  1417  3006               	movlw	6
 15775  1418  2C1A               	goto	L21
 15776  1419                     i1l6348:	
 15777  1419  3003               	movlw	3
 15778  141A                     L21:	
 15779  141A  00F2               	movwf	_do_I2C_TX$2684
 15780  141B  3000               	movlw	0
 15781  141C  00F3               	movwf	_do_I2C_TX$2684+1
 15782  141D  0872               	movf	_do_I2C_TX$2684,w
 15783  141E  0008               	return
 15784  141F                     __end_of_do_I2C_TX:	
 15785                           
 15786                           	psect	text74
 15787  104F                     __ptext74:	
 15788 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
 15789 ;; Defined at:
 15790 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 15791 ;; Parameters:    Size  Location     Type
 15792 ;;		None
 15793 ;; Auto vars:     Size  Location     Type
 15794 ;;		None
 15795 ;; Return value:  Size  Location     Type
 15796 ;;                  1    wreg      enum E2347
 15797 ;; Registers used:
 15798 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15799 ;; Tracked objects:
 15800 ;;		On entry : 0/0
 15801 ;;		On exit  : 0/0
 15802 ;;		Unchanged: 0/0
 15803 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15806 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15807 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15808 ;;Total ram usage:        1 bytes
 15809 ;; Hardware stack levels used:    1
 15810 ;; Hardware stack levels required when called:    3
 15811 ;; This function calls:
 15812 ;;		Absolute function
 15813 ;;		_do_I2C_SEND_RESTART
 15814 ;;		_do_I2C_SEND_STOP
 15815 ;;		_i2c_restartWrite
 15816 ;;		_rd1RegCompleteHandler
 15817 ;;		_rd2RegCompleteHandler
 15818 ;;		_rdBlkRegCompleteHandler
 15819 ;;		_returnReset
 15820 ;;		_returnStop
 15821 ;;		_wr1RegCompleteHandler
 15822 ;;		_wr2RegCompleteHandler
 15823 ;; This function is called by:
 15824 ;;		_i2c_ISR
 15825 ;; This function uses a non-reentrant model
 15826 ;;
 15827                           
 15828                           
 15829                           ;psect for function _do_I2C_DO_ADDRESS_NACK
 15830  104F                     _do_I2C_DO_ADDRESS_NACK:	
 15831                           
 15832                           ;i2c_master.c: 321: i2c_status.addressNACKCheck = 0;
 15833                           
 15834                           ;incstack = 0
 15835                           ; Regs used in _do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15836  104F  0024               	movlb	4	; select bank4
 15837  1050  11A0               	bcf	_i2c_status^(0+512),3
 15838                           
 15839                           ;i2c_master.c: 322: i2c_status.error = I2C_FAIL;
 15840  1051  3002               	movlw	2
 15841  1052  00F0               	movwf	??_do_I2C_DO_ADDRESS_NACK
 15842  1053  0870               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 15843  1054  00AA               	movwf	(_i2c_status^(0+512)+10)
 15844                           
 15845                           ;i2c_master.c: 323: switch(i2c_status.callbackTable[i2c_addressNACK](i2c_status.callback
      +                          Payload[i2c_addressNACK]))
 15846  1055  285C               	goto	i1l6320
 15847  1056                     i1l6310:	
 15848                           ;i2c_master.c: 324: {
 15849                           ;i2c_master.c: 325: case i2c_restart_read:
 15850                           
 15851                           
 15852                           ;i2c_master.c: 326: case i2c_restart_write:
 15853                           ;i2c_master.c: 327: return do_I2C_SEND_RESTART();
 15854  1056  319D  2591         	fcall	_do_I2C_SEND_RESTART
 15855  1058  0008               	return
 15856  1059                     i1l6314:	
 15857                           ;i2c_master.c: 328: default:
 15858                           
 15859                           
 15860                           ;i2c_master.c: 329: return do_I2C_SEND_STOP();
 15861  1059  319D  2595         	fcall	_do_I2C_SEND_STOP
 15862                           
 15863                           ;i2c_master.c: 330: }
 15864  105B  0008               	return
 15865  105C                     i1l6320:	
 15866  105C  0024               	movlb	4	; select bank4
 15867  105D  0839               	movf	(low ((_i2c_status| (0+512)+25)))^0,w
 15868  105E  00F0               	movwf	??_do_I2C_DO_ADDRESS_NACK
 15869  105F  0870               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 15870  1060  00F9               	movwf	rdBlkRegCompleteHandler@p
 15871  1061  300F               	movlw	15
 15872  1062  3E20               	addlw	(low (_i2c_status| (0+512)))& (0+255)
 15873  1063  0086               	movwf	6
 15874  1064  3002               	movlw	2	; select bank4/5
 15875  1065  0087               	movwf	7
 15876  1066  3F41               	moviw [1]fsr1
 15877  1067  008A               	movwf	10
 15878  1068  3F40               	moviw [0]fsr1
 15879  1069  000A               	callw
 15880  106A  3190               	pagesel	$
 15881                           
 15882                           ; Switch size 1, requested type "space"
 15883                           ; Number of cases is 2, Range of values is 2 to 3
 15884                           ; switch strategies available:
 15885                           ; Name         Instructions Cycles
 15886                           ; simple_byte            7     4 (average)
 15887                           ; direct_byte           13     9 (fixed)
 15888                           ; jumptable            263     9 (fixed)
 15889                           ;	Chosen strategy is simple_byte
 15890  106B  3A02               	xorlw	2	; case 2
 15891  106C  1903               	skipnz
 15892  106D  2856               	goto	i1l6310
 15893  106E  3A01               	xorlw	1	; case 3
 15894  106F  1903               	skipnz
 15895  1070  2856               	goto	i1l6310
 15896  1071  2859               	goto	i1l6314
 15897  1072  0008               	return
 15898  1073                     __end_of_do_I2C_DO_ADDRESS_NACK:	
 15899                           
 15900                           	psect	text75
 15901  1DA1                     __ptext75:	
 15902 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
 15903 ;; Defined at:
 15904 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 15905 ;; Parameters:    Size  Location     Type
 15906 ;;		None
 15907 ;; Auto vars:     Size  Location     Type
 15908 ;;		None
 15909 ;; Return value:  Size  Location     Type
 15910 ;;                  1    wreg      enum E2347
 15911 ;; Registers used:
 15912 ;;		wreg, status,2, status,0, pclath, cstack
 15913 ;; Tracked objects:
 15914 ;;		On entry : 0/0
 15915 ;;		On exit  : 0/0
 15916 ;;		Unchanged: 0/0
 15917 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15922 ;;Total ram usage:        0 bytes
 15923 ;; Hardware stack levels used:    1
 15924 ;; Hardware stack levels required when called:    1
 15925 ;; This function calls:
 15926 ;;		_i2c_driver_sendNACK
 15927 ;; This function is called by:
 15928 ;;		_do_I2C_RX
 15929 ;;		_i2c_ISR
 15930 ;; This function uses a non-reentrant model
 15931 ;;
 15932                           
 15933                           
 15934                           ;psect for function _do_I2C_DO_NACK_RESTART
 15935  1DA1                     _do_I2C_DO_NACK_RESTART:	
 15936                           
 15937                           ;i2c_master.c: 313: i2c_driver_sendNACK();
 15938                           
 15939                           ;incstack = 0
 15940                           ; Regs used in _do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 15941  1DA1  319D  2585         	fcall	_i2c_driver_sendNACK
 15942                           
 15943                           ;i2c_master.c: 314: return I2C_SEND_RESTART;
 15944  1DA3  3009               	movlw	9
 15945  1DA4  0008               	return
 15946  1DA5                     __end_of_do_I2C_DO_NACK_RESTART:	
 15947                           
 15948                           	psect	text76
 15949  1D9D                     __ptext76:	
 15950 ;; *************** function _do_I2C_DO_NACK_STOP *****************
 15951 ;; Defined at:
 15952 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 15953 ;; Parameters:    Size  Location     Type
 15954 ;;		None
 15955 ;; Auto vars:     Size  Location     Type
 15956 ;;		None
 15957 ;; Return value:  Size  Location     Type
 15958 ;;                  1    wreg      enum E2347
 15959 ;; Registers used:
 15960 ;;		wreg, status,2, status,0, pclath, cstack
 15961 ;; Tracked objects:
 15962 ;;		On entry : 0/0
 15963 ;;		On exit  : 0/0
 15964 ;;		Unchanged: 0/0
 15965 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15970 ;;Total ram usage:        0 bytes
 15971 ;; Hardware stack levels used:    1
 15972 ;; Hardware stack levels required when called:    1
 15973 ;; This function calls:
 15974 ;;		_i2c_driver_sendNACK
 15975 ;; This function is called by:
 15976 ;;		_do_I2C_RX
 15977 ;;		_i2c_ISR
 15978 ;; This function uses a non-reentrant model
 15979 ;;
 15980                           
 15981                           
 15982                           ;psect for function _do_I2C_DO_NACK_STOP
 15983  1D9D                     _do_I2C_DO_NACK_STOP:	
 15984                           
 15985                           ;i2c_master.c: 307: i2c_driver_sendNACK();
 15986                           
 15987                           ;incstack = 0
 15988                           ; Regs used in _do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 15989  1D9D  319D  2585         	fcall	_i2c_driver_sendNACK
 15990                           
 15991                           ;i2c_master.c: 308: return I2C_SEND_STOP;
 15992  1D9F  300A               	movlw	10
 15993  1DA0  0008               	return
 15994  1DA1                     __end_of_do_I2C_DO_NACK_STOP:	
 15995                           
 15996                           	psect	text77
 15997  1D99                     __ptext77:	
 15998 ;; *************** function _do_I2C_DO_ACK *****************
 15999 ;; Defined at:
 16000 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 16001 ;; Parameters:    Size  Location     Type
 16002 ;;		None
 16003 ;; Auto vars:     Size  Location     Type
 16004 ;;		None
 16005 ;; Return value:  Size  Location     Type
 16006 ;;                  1    wreg      enum E2347
 16007 ;; Registers used:
 16008 ;;		wreg, status,2, status,0, pclath, cstack
 16009 ;; Tracked objects:
 16010 ;;		On entry : 0/0
 16011 ;;		On exit  : 0/0
 16012 ;;		Unchanged: 0/0
 16013 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16018 ;;Total ram usage:        0 bytes
 16019 ;; Hardware stack levels used:    1
 16020 ;; Hardware stack levels required when called:    1
 16021 ;; This function calls:
 16022 ;;		_i2c_driver_sendACK
 16023 ;; This function is called by:
 16024 ;;		_i2c_ISR
 16025 ;; This function uses a non-reentrant model
 16026 ;;
 16027                           
 16028                           
 16029                           ;psect for function _do_I2C_DO_ACK
 16030  1D99                     _do_I2C_DO_ACK:	
 16031                           
 16032                           ;i2c_master.c: 301: i2c_driver_sendACK();
 16033                           
 16034                           ;incstack = 0
 16035                           ; Regs used in _do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 16036  1D99  319D  2581         	fcall	_i2c_driver_sendACK
 16037                           
 16038                           ;i2c_master.c: 302: return I2C_RCEN;
 16039  1D9B  3005               	movlw	5
 16040  1D9C  0008               	return
 16041  1D9D                     __end_of_do_I2C_DO_ACK:	
 16042                           
 16043                           	psect	text78
 16044  1DB3                     __ptext78:	
 16045 ;; *************** function _do_I2C_RCEN *****************
 16046 ;; Defined at:
 16047 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 16048 ;; Parameters:    Size  Location     Type
 16049 ;;		None
 16050 ;; Auto vars:     Size  Location     Type
 16051 ;;		None
 16052 ;; Return value:  Size  Location     Type
 16053 ;;                  1    wreg      enum E2347
 16054 ;; Registers used:
 16055 ;;		wreg, status,2, status,0, pclath, cstack
 16056 ;; Tracked objects:
 16057 ;;		On entry : 0/0
 16058 ;;		On exit  : 0/0
 16059 ;;		Unchanged: 0/0
 16060 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16065 ;;Total ram usage:        0 bytes
 16066 ;; Hardware stack levels used:    1
 16067 ;; Hardware stack levels required when called:    1
 16068 ;; This function calls:
 16069 ;;		_i2c_driver_startRX
 16070 ;; This function is called by:
 16071 ;;		_i2c_ISR
 16072 ;; This function uses a non-reentrant model
 16073 ;;
 16074                           
 16075                           
 16076                           ;psect for function _do_I2C_RCEN
 16077  1DB3                     _do_I2C_RCEN:	
 16078                           
 16079                           ;i2c_master.c: 294: i2c_status.addressNACKCheck = 0;
 16080                           
 16081                           ;incstack = 0
 16082                           ; Regs used in _do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 16083  1DB3  0024               	movlb	4	; select bank4
 16084  1DB4  11A0               	bcf	_i2c_status^(0+512),3
 16085                           
 16086                           ;i2c_master.c: 295: i2c_driver_startRX();
 16087  1DB5  319D  256F         	fcall	_i2c_driver_startRX
 16088                           
 16089                           ;i2c_master.c: 296: return I2C_RX;
 16090  1DB7  3004               	movlw	4
 16091  1DB8  0008               	return
 16092  1DB9                     __end_of_do_I2C_RCEN:	
 16093                           
 16094                           	psect	text79
 16095  1DC0                     __ptext79:	
 16096 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
 16097 ;; Defined at:
 16098 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 16099 ;; Parameters:    Size  Location     Type
 16100 ;;		None
 16101 ;; Auto vars:     Size  Location     Type
 16102 ;;		None
 16103 ;; Return value:  Size  Location     Type
 16104 ;;                  1    wreg      enum E2347
 16105 ;; Registers used:
 16106 ;;		wreg, status,2, status,0, pclath, cstack
 16107 ;; Tracked objects:
 16108 ;;		On entry : 0/0
 16109 ;;		On exit  : 0/0
 16110 ;;		Unchanged: 0/0
 16111 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16116 ;;Total ram usage:        0 bytes
 16117 ;; Hardware stack levels used:    1
 16118 ;; Hardware stack levels required when called:    1
 16119 ;; This function calls:
 16120 ;;		_i2c_driver_TXData
 16121 ;; This function is called by:
 16122 ;;		_i2c_ISR
 16123 ;; This function uses a non-reentrant model
 16124 ;;
 16125                           
 16126                           
 16127                           ;psect for function _do_I2C_SEND_ADR_WRITE
 16128  1DC0                     _do_I2C_SEND_ADR_WRITE:	
 16129                           
 16130                           ;i2c_master.c: 287: i2c_status.addressNACKCheck = 1;
 16131                           
 16132                           ;incstack = 0
 16133                           ; Regs used in _do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 16134  1DC0  0024               	movlb	4	; select bank4
 16135  1DC1  15A0               	bsf	_i2c_status^(0+512),3
 16136                           
 16137                           ;i2c_master.c: 288: i2c_driver_TXData(i2c_status.address << 1);
 16138  1DC2  3521               	lslf	(_i2c_status^(0+512)+1),w
 16139  1DC3  319D  25A9         	fcall	_i2c_driver_TXData
 16140                           
 16141                           ;i2c_master.c: 289: return I2C_TX;
 16142  1DC5  3003               	movlw	3
 16143  1DC6  0008               	return
 16144  1DC7                     __end_of_do_I2C_SEND_ADR_WRITE:	
 16145                           
 16146                           	psect	text80
 16147  1DC7                     __ptext80:	
 16148 ;; *************** function _do_I2C_SEND_ADR_READ *****************
 16149 ;; Defined at:
 16150 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 16151 ;; Parameters:    Size  Location     Type
 16152 ;;		None
 16153 ;; Auto vars:     Size  Location     Type
 16154 ;;		None
 16155 ;; Return value:  Size  Location     Type
 16156 ;;                  1    wreg      enum E2347
 16157 ;; Registers used:
 16158 ;;		wreg, status,2, status,0, pclath, cstack
 16159 ;; Tracked objects:
 16160 ;;		On entry : 0/0
 16161 ;;		On exit  : 0/0
 16162 ;;		Unchanged: 0/0
 16163 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16168 ;;Total ram usage:        0 bytes
 16169 ;; Hardware stack levels used:    1
 16170 ;; Hardware stack levels required when called:    1
 16171 ;; This function calls:
 16172 ;;		_i2c_driver_TXData
 16173 ;; This function is called by:
 16174 ;;		_i2c_ISR
 16175 ;; This function uses a non-reentrant model
 16176 ;;
 16177                           
 16178                           
 16179                           ;psect for function _do_I2C_SEND_ADR_READ
 16180  1DC7                     _do_I2C_SEND_ADR_READ:	
 16181                           
 16182                           ;i2c_master.c: 280: i2c_status.addressNACKCheck = 1;
 16183                           
 16184                           ;incstack = 0
 16185                           ; Regs used in _do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 16186  1DC7  0024               	movlb	4	; select bank4
 16187  1DC8  15A0               	bsf	_i2c_status^(0+512),3
 16188                           
 16189                           ;i2c_master.c: 281: i2c_driver_TXData(i2c_status.address << 1 | 1);
 16190  1DC9  1403               	setc
 16191  1DCA  0D21               	rlf	(_i2c_status^(0+512)+1),w
 16192  1DCB  319D  25A9         	fcall	_i2c_driver_TXData
 16193                           
 16194                           ;i2c_master.c: 282: return I2C_RCEN;
 16195  1DCD  3005               	movlw	5
 16196  1DCE  0008               	return
 16197  1DCF                     __end_of_do_I2C_SEND_ADR_READ:	
 16198                           
 16199                           	psect	text81
 16200  1D95                     __ptext81:	
 16201 ;; *************** function _do_I2C_SEND_STOP *****************
 16202 ;; Defined at:
 16203 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 16204 ;; Parameters:    Size  Location     Type
 16205 ;;		None
 16206 ;; Auto vars:     Size  Location     Type
 16207 ;;		None
 16208 ;; Return value:  Size  Location     Type
 16209 ;;                  1    wreg      enum E2347
 16210 ;; Registers used:
 16211 ;;		wreg, status,2, status,0, pclath, cstack
 16212 ;; Tracked objects:
 16213 ;;		On entry : 0/0
 16214 ;;		On exit  : 0/0
 16215 ;;		Unchanged: 0/0
 16216 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16221 ;;Total ram usage:        0 bytes
 16222 ;; Hardware stack levels used:    1
 16223 ;; Hardware stack levels required when called:    1
 16224 ;; This function calls:
 16225 ;;		_i2c_driver_stop
 16226 ;; This function is called by:
 16227 ;;		_do_I2C_DO_ADDRESS_NACK
 16228 ;;		_do_I2C_TX
 16229 ;;		_do_I2C_TX_EMPTY
 16230 ;;		_i2c_ISR
 16231 ;; This function uses a non-reentrant model
 16232 ;;
 16233                           
 16234                           
 16235                           ;psect for function _do_I2C_SEND_STOP
 16236  1D95                     _do_I2C_SEND_STOP:	
 16237                           
 16238                           ;i2c_master.c: 274: i2c_driver_stop();
 16239                           
 16240                           ;incstack = 0
 16241                           ; Regs used in _do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 16242  1D95  319D  256C         	fcall	_i2c_driver_stop
 16243                           
 16244                           ;i2c_master.c: 275: return I2C_IDLE;
 16245  1D97  3000               	movlw	0
 16246  1D98  0008               	return
 16247  1D99                     __end_of_do_I2C_SEND_STOP:	
 16248                           
 16249                           	psect	text82
 16250  1D91                     __ptext82:	
 16251 ;; *************** function _do_I2C_SEND_RESTART *****************
 16252 ;; Defined at:
 16253 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 16254 ;; Parameters:    Size  Location     Type
 16255 ;;		None
 16256 ;; Auto vars:     Size  Location     Type
 16257 ;;		None
 16258 ;; Return value:  Size  Location     Type
 16259 ;;                  1    wreg      enum E2347
 16260 ;; Registers used:
 16261 ;;		wreg, status,2, status,0, pclath, cstack
 16262 ;; Tracked objects:
 16263 ;;		On entry : 0/0
 16264 ;;		On exit  : 0/0
 16265 ;;		Unchanged: 0/0
 16266 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16271 ;;Total ram usage:        0 bytes
 16272 ;; Hardware stack levels used:    1
 16273 ;; Hardware stack levels required when called:    1
 16274 ;; This function calls:
 16275 ;;		_i2c_driver_restart
 16276 ;; This function is called by:
 16277 ;;		_do_I2C_DO_ADDRESS_NACK
 16278 ;;		_do_I2C_TX_EMPTY
 16279 ;;		_i2c_ISR
 16280 ;; This function uses a non-reentrant model
 16281 ;;
 16282                           
 16283                           
 16284                           ;psect for function _do_I2C_SEND_RESTART
 16285  1D91                     _do_I2C_SEND_RESTART:	
 16286                           
 16287                           ;i2c_master.c: 268: i2c_driver_restart();
 16288                           
 16289                           ;incstack = 0
 16290                           ; Regs used in _do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 16291  1D91  319D  2569         	fcall	_i2c_driver_restart
 16292                           
 16293                           ;i2c_master.c: 269: return I2C_SEND_ADR_READ;
 16294  1D93  3001               	movlw	1
 16295  1D94  0008               	return
 16296  1D95                     __end_of_do_I2C_SEND_RESTART:	
 16297                           
 16298                           	psect	text83
 16299  1D8D                     __ptext83:	
 16300 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
 16301 ;; Defined at:
 16302 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 16303 ;; Parameters:    Size  Location     Type
 16304 ;;		None
 16305 ;; Auto vars:     Size  Location     Type
 16306 ;;		None
 16307 ;; Return value:  Size  Location     Type
 16308 ;;                  1    wreg      enum E2347
 16309 ;; Registers used:
 16310 ;;		wreg, status,2, status,0, pclath, cstack
 16311 ;; Tracked objects:
 16312 ;;		On entry : 0/0
 16313 ;;		On exit  : 0/0
 16314 ;;		Unchanged: 0/0
 16315 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16320 ;;Total ram usage:        0 bytes
 16321 ;; Hardware stack levels used:    1
 16322 ;; Hardware stack levels required when called:    1
 16323 ;; This function calls:
 16324 ;;		_i2c_driver_restart
 16325 ;; This function is called by:
 16326 ;;		_do_I2C_TX
 16327 ;;		_i2c_ISR
 16328 ;; This function uses a non-reentrant model
 16329 ;;
 16330                           
 16331                           
 16332                           ;psect for function _do_I2C_SEND_RESTART_WRITE
 16333  1D8D                     _do_I2C_SEND_RESTART_WRITE:	
 16334                           
 16335                           ;i2c_master.c: 262: i2c_driver_restart();
 16336                           
 16337                           ;incstack = 0
 16338                           ; Regs used in _do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 16339  1D8D  319D  2569         	fcall	_i2c_driver_restart
 16340                           
 16341                           ;i2c_master.c: 263: return I2C_SEND_ADR_WRITE;
 16342  1D8F  3002               	movlw	2
 16343  1D90  0008               	return
 16344  1D91                     __end_of_do_I2C_SEND_RESTART_WRITE:	
 16345                           
 16346                           	psect	text84
 16347  1D89                     __ptext84:	
 16348 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
 16349 ;; Defined at:
 16350 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 16351 ;; Parameters:    Size  Location     Type
 16352 ;;		None
 16353 ;; Auto vars:     Size  Location     Type
 16354 ;;		None
 16355 ;; Return value:  Size  Location     Type
 16356 ;;                  1    wreg      enum E2347
 16357 ;; Registers used:
 16358 ;;		wreg, status,2, status,0, pclath, cstack
 16359 ;; Tracked objects:
 16360 ;;		On entry : 0/0
 16361 ;;		On exit  : 0/0
 16362 ;;		Unchanged: 0/0
 16363 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16368 ;;Total ram usage:        0 bytes
 16369 ;; Hardware stack levels used:    1
 16370 ;; Hardware stack levels required when called:    1
 16371 ;; This function calls:
 16372 ;;		_i2c_driver_restart
 16373 ;; This function is called by:
 16374 ;;		_do_I2C_TX
 16375 ;;		_i2c_ISR
 16376 ;; This function uses a non-reentrant model
 16377 ;;
 16378                           
 16379                           
 16380                           ;psect for function _do_I2C_SEND_RESTART_READ
 16381  1D89                     _do_I2C_SEND_RESTART_READ:	
 16382                           
 16383                           ;i2c_master.c: 256: i2c_driver_restart();
 16384                           
 16385                           ;incstack = 0
 16386                           ; Regs used in _do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 16387  1D89  319D  2569         	fcall	_i2c_driver_restart
 16388                           
 16389                           ;i2c_master.c: 257: return I2C_SEND_ADR_READ;
 16390  1D8B  3001               	movlw	1
 16391  1D8C  0008               	return
 16392  1D8D                     __end_of_do_I2C_SEND_RESTART_READ:	
 16393                           
 16394                           	psect	text85
 16395  1DAE                     __ptext85:	
 16396 ;; *************** function _do_I2C_IDLE *****************
 16397 ;; Defined at:
 16398 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 16399 ;; Parameters:    Size  Location     Type
 16400 ;;		None
 16401 ;; Auto vars:     Size  Location     Type
 16402 ;;		None
 16403 ;; Return value:  Size  Location     Type
 16404 ;;                  1    wreg      enum E2347
 16405 ;; Registers used:
 16406 ;;		wreg, status,2
 16407 ;; Tracked objects:
 16408 ;;		On entry : 0/0
 16409 ;;		On exit  : 0/0
 16410 ;;		Unchanged: 0/0
 16411 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16416 ;;Total ram usage:        0 bytes
 16417 ;; Hardware stack levels used:    1
 16418 ;; This function calls:
 16419 ;;		Nothing
 16420 ;; This function is called by:
 16421 ;;		_i2c_ISR
 16422 ;; This function uses a non-reentrant model
 16423 ;;
 16424                           
 16425                           
 16426                           ;psect for function _do_I2C_IDLE
 16427  1DAE                     _do_I2C_IDLE:	
 16428                           
 16429                           ;i2c_master.c: 249: i2c_status.busy = 0;
 16430                           
 16431                           ;incstack = 0
 16432                           ; Regs used in _do_I2C_IDLE: [wreg+status,2]
 16433  1DAE  0024               	movlb	4	; select bank4
 16434  1DAF  1020               	bcf	_i2c_status^(0+512),0
 16435                           
 16436                           ;i2c_master.c: 250: i2c_status.error = I2C_NOERR;
 16437  1DB0  01AA               	clrf	(_i2c_status^(0+512)+10)
 16438                           
 16439                           ;i2c_master.c: 251: return I2C_RESET;
 16440  1DB1  300E               	movlw	14
 16441  1DB2  0008               	return
 16442  1DB3                     __end_of_do_I2C_IDLE:	
 16443                           
 16444                           	psect	text86
 16445  1DB9                     __ptext86:	
 16446 ;; *************** function _do_I2C_RESET *****************
 16447 ;; Defined at:
 16448 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 16449 ;; Parameters:    Size  Location     Type
 16450 ;;		None
 16451 ;; Auto vars:     Size  Location     Type
 16452 ;;		None
 16453 ;; Return value:  Size  Location     Type
 16454 ;;                  1    wreg      enum E2347
 16455 ;; Registers used:
 16456 ;;		wreg, status,2, status,0, pclath, cstack
 16457 ;; Tracked objects:
 16458 ;;		On entry : 0/0
 16459 ;;		On exit  : 0/0
 16460 ;;		Unchanged: 0/0
 16461 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16466 ;;Total ram usage:        0 bytes
 16467 ;; Hardware stack levels used:    1
 16468 ;; Hardware stack levels required when called:    1
 16469 ;; This function calls:
 16470 ;;		_i2c_driver_resetBus
 16471 ;; This function is called by:
 16472 ;;		_i2c_ISR
 16473 ;; This function uses a non-reentrant model
 16474 ;;
 16475                           
 16476                           
 16477                           ;psect for function _do_I2C_RESET
 16478  1DB9                     _do_I2C_RESET:	
 16479                           
 16480                           ;i2c_master.c: 241: i2c_driver_resetBus();
 16481                           
 16482                           ;incstack = 0
 16483                           ; Regs used in _do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 16484  1DB9  319D  2564         	fcall	_i2c_driver_resetBus
 16485                           
 16486                           ;i2c_master.c: 242: i2c_status.busy = 0;
 16487  1DBB  0024               	movlb	4	; select bank4
 16488  1DBC  1020               	bcf	_i2c_status^(0+512),0
 16489                           
 16490                           ;i2c_master.c: 243: i2c_status.error = I2C_NOERR;
 16491  1DBD  01AA               	clrf	(_i2c_status^(0+512)+10)
 16492                           
 16493                           ;i2c_master.c: 244: return I2C_RESET;
 16494  1DBE  300E               	movlw	14
 16495  1DBF  0008               	return
 16496  1DC0                     __end_of_do_I2C_RESET:	
 16497                           
 16498                           	psect	text87
 16499  10C0                     __ptext87:	
 16500 ;; *************** function _do_I2C_TX_EMPTY *****************
 16501 ;; Defined at:
 16502 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 16503 ;; Parameters:    Size  Location     Type
 16504 ;;		None
 16505 ;; Auto vars:     Size  Location     Type
 16506 ;;		None
 16507 ;; Return value:  Size  Location     Type
 16508 ;;                  1    wreg      enum E2347
 16509 ;; Registers used:
 16510 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16511 ;; Tracked objects:
 16512 ;;		On entry : 0/0
 16513 ;;		On exit  : 0/0
 16514 ;;		Unchanged: 0/0
 16515 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16518 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16519 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16520 ;;Total ram usage:        1 bytes
 16521 ;; Hardware stack levels used:    1
 16522 ;; Hardware stack levels required when called:    3
 16523 ;; This function calls:
 16524 ;;		Absolute function
 16525 ;;		_do_I2C_SEND_RESTART
 16526 ;;		_do_I2C_SEND_STOP
 16527 ;;		_i2c_restartWrite
 16528 ;;		_mssp_setIRQ
 16529 ;;		_rd1RegCompleteHandler
 16530 ;;		_rd2RegCompleteHandler
 16531 ;;		_rdBlkRegCompleteHandler
 16532 ;;		_returnReset
 16533 ;;		_returnStop
 16534 ;;		_wr1RegCompleteHandler
 16535 ;;		_wr2RegCompleteHandler
 16536 ;; This function is called by:
 16537 ;;		_i2c_ISR
 16538 ;; This function uses a non-reentrant model
 16539 ;;
 16540                           
 16541                           
 16542                           ;psect for function _do_I2C_TX_EMPTY
 16543  10C0                     _do_I2C_TX_EMPTY:	
 16544                           
 16545                           ;i2c_master.c: 384: i2c_status.bufferFree = 1;
 16546                           
 16547                           ;incstack = 0
 16548                           ; Regs used in _do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16549  10C0  0024               	movlb	4	; select bank4
 16550  10C1  1520               	bsf	_i2c_status^(0+512),2
 16551                           
 16552                           ;i2c_master.c: 385: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 16553  10C2  28CD               	goto	i1l6396
 16554  10C3                     i1l6380:	
 16555                           ;i2c_master.c: 386: {
 16556                           ;i2c_master.c: 387: case i2c_restart_read:
 16557                           
 16558                           
 16559                           ;i2c_master.c: 388: case i2c_restart_write:
 16560                           ;i2c_master.c: 389: return do_I2C_SEND_RESTART();
 16561  10C3  319D  2591         	fcall	_do_I2C_SEND_RESTART
 16562  10C5  0008               	return
 16563  10C6                     i1l6384:	
 16564                           ;i2c_master.c: 390: case i2c_continue:
 16565                           
 16566                           
 16567                           ;i2c_master.c: 391: mssp_setIRQ();
 16568  10C6  319D  2575         	fcall	_mssp_setIRQ
 16569                           
 16570                           ;i2c_master.c: 392: return I2C_TX;
 16571  10C8  3003               	movlw	3
 16572  10C9  0008               	return
 16573  10CA                     i1l6390:	
 16574                           ;i2c_master.c: 394: case i2c_stop:
 16575                           
 16576                           ;i2c_master.c: 393: default:
 16577                           
 16578                           
 16579                           ;i2c_master.c: 395: return do_I2C_SEND_STOP();
 16580  10CA  319D  2595         	fcall	_do_I2C_SEND_STOP
 16581                           
 16582                           ;i2c_master.c: 396: }
 16583  10CC  0008               	return
 16584  10CD                     i1l6396:	
 16585  10CD  0024               	movlb	4	; select bank4
 16586  10CE  0837               	movf	(low ((_i2c_status| (0+512)+23)))^0,w
 16587  10CF  00F0               	movwf	??_do_I2C_TX_EMPTY
 16588  10D0  0870               	movf	??_do_I2C_TX_EMPTY,w
 16589  10D1  00F9               	movwf	rdBlkRegCompleteHandler@p
 16590  10D2  300B               	movlw	11
 16591  10D3  3E20               	addlw	(low (_i2c_status| (0+512)))& (0+255)
 16592  10D4  0086               	movwf	6
 16593  10D5  3002               	movlw	2	; select bank4/5
 16594  10D6  0087               	movwf	7
 16595  10D7  3F41               	moviw [1]fsr1
 16596  10D8  008A               	movwf	10
 16597  10D9  3F40               	moviw [0]fsr1
 16598  10DA  000A               	callw
 16599  10DB  3190               	pagesel	$
 16600                           
 16601                           ; Switch size 1, requested type "space"
 16602                           ; Number of cases is 4, Range of values is 1 to 4
 16603                           ; switch strategies available:
 16604                           ; Name         Instructions Cycles
 16605                           ; simple_byte           13     7 (average)
 16606                           ; direct_byte           17     9 (fixed)
 16607                           ; jumptable            263     9 (fixed)
 16608                           ;	Chosen strategy is simple_byte
 16609  10DC  3A01               	xorlw	1	; case 1
 16610  10DD  1903               	skipnz
 16611  10DE  28CA               	goto	i1l6390
 16612  10DF  3A03               	xorlw	3	; case 2
 16613  10E0  1903               	skipnz
 16614  10E1  28C3               	goto	i1l6380
 16615  10E2  3A01               	xorlw	1	; case 3
 16616  10E3  1903               	skipnz
 16617  10E4  28C3               	goto	i1l6380
 16618  10E5  3A07               	xorlw	7	; case 4
 16619  10E6  1903               	skipnz
 16620  10E7  28C6               	goto	i1l6384
 16621  10E8  28CA               	goto	i1l6390
 16622  10E9  0008               	return
 16623  10EA                     __end_of_do_I2C_TX_EMPTY:	
 16624                           
 16625                           	psect	text88
 16626  1D75                     __ptext88:	
 16627 ;; *************** function _mssp_setIRQ *****************
 16628 ;; Defined at:
 16629 ;;		line 58 in file "mcc_generated_files/i2c_driver.c"
 16630 ;; Parameters:    Size  Location     Type
 16631 ;;		None
 16632 ;; Auto vars:     Size  Location     Type
 16633 ;;		None
 16634 ;; Return value:  Size  Location     Type
 16635 ;;                  1    wreg      void 
 16636 ;; Registers used:
 16637 ;;		None
 16638 ;; Tracked objects:
 16639 ;;		On entry : 0/0
 16640 ;;		On exit  : 0/0
 16641 ;;		Unchanged: 0/0
 16642 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16647 ;;Total ram usage:        0 bytes
 16648 ;; Hardware stack levels used:    1
 16649 ;; This function calls:
 16650 ;;		Nothing
 16651 ;; This function is called by:
 16652 ;;		_do_I2C_TX_EMPTY
 16653 ;; This function uses a non-reentrant model
 16654 ;;
 16655                           
 16656                           
 16657                           ;psect for function _mssp_setIRQ
 16658  1D75                     _mssp_setIRQ:	
 16659                           
 16660                           ;i2c_driver.c: 60: PIR1bits.SSP1IF = 1;
 16661                           
 16662                           ;incstack = 0
 16663                           ; Regs used in _mssp_setIRQ: []
 16664  1D75  0020               	movlb	0	; select bank0
 16665  1D76  1591               	bsf	17,3	;volatile
 16666  1D77  0008               	return
 16667  1D78                     __end_of_mssp_setIRQ:	
 16668                           
 16669                           	psect	text89
 16670  1DDB                     __ptext89:	
 16671 ;; *************** function _i2c_driver_isNACK *****************
 16672 ;; Defined at:
 16673 ;;		line 161 in file "mcc_generated_files/i2c_driver.c"
 16674 ;; Parameters:    Size  Location     Type
 16675 ;;		None
 16676 ;; Auto vars:     Size  Location     Type
 16677 ;;		None
 16678 ;; Return value:  Size  Location     Type
 16679 ;;		None               void
 16680 ;; Registers used:
 16681 ;;		wreg, status,2, status,0
 16682 ;; Tracked objects:
 16683 ;;		On entry : 0/0
 16684 ;;		On exit  : 0/0
 16685 ;;		Unchanged: 0/0
 16686 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16689 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16690 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16691 ;;Total ram usage:        1 bytes
 16692 ;; Hardware stack levels used:    1
 16693 ;; This function calls:
 16694 ;;		Nothing
 16695 ;; This function is called by:
 16696 ;;		_do_I2C_TX
 16697 ;;		_i2c_ISR
 16698 ;; This function uses a non-reentrant model
 16699 ;;
 16700                           
 16701                           
 16702                           ;psect for function _i2c_driver_isNACK
 16703  1DDB                     _i2c_driver_isNACK:	
 16704                           
 16705                           ;i2c_driver.c: 163: return SSP1CON2bits.ACKSTAT = 1;
 16706                           
 16707                           ;incstack = 0
 16708                           ; Regs used in _i2c_driver_isNACK: [wreg+status,2+status,0]
 16709  1DDB  0024               	movlb	4	; select bank4
 16710  1DDC  0816               	movf	22,w	;volatile
 16711  1DDD  39BF               	andlw	-65
 16712  1DDE  3840               	iorlw	64
 16713  1DDF  0096               	movwf	22	;volatile
 16714  1DE0  0E16               	swapf	22,w	;volatile
 16715  1DE1  0C89               	rrf	9,f
 16716  1DE2  0C89               	rrf	9,f
 16717  1DE3  3901               	andlw	1
 16718  1DE4  00F0               	movwf	??_i2c_driver_isNACK
 16719  1DE5  0C70               	rrf	??_i2c_driver_isNACK,w
 16720  1DE6  0008               	return
 16721  1DE7                     __end_of_i2c_driver_isNACK:	
 16722                           
 16723                           	psect	text90
 16724  1DA9                     __ptext90:	
 16725 ;; *************** function _i2c_driver_TXData *****************
 16726 ;; Defined at:
 16727 ;;		line 186 in file "mcc_generated_files/i2c_driver.c"
 16728 ;; Parameters:    Size  Location     Type
 16729 ;;  d               1    wreg     unsigned char 
 16730 ;; Auto vars:     Size  Location     Type
 16731 ;;  d               1    0[COMMON] unsigned char 
 16732 ;; Return value:  Size  Location     Type
 16733 ;;                  1    wreg      void 
 16734 ;; Registers used:
 16735 ;;		wreg
 16736 ;; Tracked objects:
 16737 ;;		On entry : 0/0
 16738 ;;		On exit  : 0/0
 16739 ;;		Unchanged: 0/0
 16740 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16742 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16744 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16745 ;;Total ram usage:        1 bytes
 16746 ;; Hardware stack levels used:    1
 16747 ;; This function calls:
 16748 ;;		Nothing
 16749 ;; This function is called by:
 16750 ;;		_do_I2C_SEND_ADR_READ
 16751 ;;		_do_I2C_SEND_ADR_WRITE
 16752 ;;		_do_I2C_TX
 16753 ;; This function uses a non-reentrant model
 16754 ;;
 16755                           
 16756                           
 16757                           ;psect for function _i2c_driver_TXData
 16758  1DA9                     _i2c_driver_TXData:	
 16759                           
 16760                           ;incstack = 0
 16761                           ; Regs used in _i2c_driver_TXData: [wreg]
 16762                           ;i2c_driver_TXData@d stored from wreg
 16763  1DA9  00F0               	movwf	i2c_driver_TXData@d
 16764                           
 16765                           ;i2c_driver.c: 188: SSP1BUF = d;
 16766  1DAA  0870               	movf	i2c_driver_TXData@d,w
 16767  1DAB  0024               	movlb	4	; select bank4
 16768  1DAC  0091               	movwf	17	;volatile
 16769  1DAD  0008               	return
 16770  1DAE                     __end_of_i2c_driver_TXData:	
 16771                           
 16772                           	psect	text91
 16773  1D72                     __ptext91:	
 16774 ;; *************** function _i2c_driver_getRXData *****************
 16775 ;; Defined at:
 16776 ;;		line 171 in file "mcc_generated_files/i2c_driver.c"
 16777 ;; Parameters:    Size  Location     Type
 16778 ;;		None
 16779 ;; Auto vars:     Size  Location     Type
 16780 ;;		None
 16781 ;; Return value:  Size  Location     Type
 16782 ;;                  1    wreg      unsigned char 
 16783 ;; Registers used:
 16784 ;;		wreg
 16785 ;; Tracked objects:
 16786 ;;		On entry : 0/0
 16787 ;;		On exit  : 0/0
 16788 ;;		Unchanged: 0/0
 16789 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16794 ;;Total ram usage:        0 bytes
 16795 ;; Hardware stack levels used:    1
 16796 ;; This function calls:
 16797 ;;		Nothing
 16798 ;; This function is called by:
 16799 ;;		_do_I2C_RX
 16800 ;; This function uses a non-reentrant model
 16801 ;;
 16802                           
 16803                           
 16804                           ;psect for function _i2c_driver_getRXData
 16805  1D72                     _i2c_driver_getRXData:	
 16806                           
 16807                           ;i2c_driver.c: 173: return SSP1BUF;
 16808                           
 16809                           ;incstack = 0
 16810                           ; Regs used in _i2c_driver_getRXData: [wreg]
 16811  1D72  0024               	movlb	4	; select bank4
 16812  1D73  0811               	movf	17,w	;volatile
 16813  1D74  0008               	return
 16814  1D75                     __end_of_i2c_driver_getRXData:	
 16815                           
 16816                           	psect	text92
 16817  1D85                     __ptext92:	
 16818 ;; *************** function _i2c_driver_sendNACK *****************
 16819 ;; Defined at:
 16820 ;;		line 202 in file "mcc_generated_files/i2c_driver.c"
 16821 ;; Parameters:    Size  Location     Type
 16822 ;;		None
 16823 ;; Auto vars:     Size  Location     Type
 16824 ;;		None
 16825 ;; Return value:  Size  Location     Type
 16826 ;;                  1    wreg      void 
 16827 ;; Registers used:
 16828 ;;		None
 16829 ;; Tracked objects:
 16830 ;;		On entry : 0/0
 16831 ;;		On exit  : 0/0
 16832 ;;		Unchanged: 0/0
 16833 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16838 ;;Total ram usage:        0 bytes
 16839 ;; Hardware stack levels used:    1
 16840 ;; This function calls:
 16841 ;;		Nothing
 16842 ;; This function is called by:
 16843 ;;		_do_I2C_DO_NACK_STOP
 16844 ;;		_do_I2C_DO_NACK_RESTART
 16845 ;; This function uses a non-reentrant model
 16846 ;;
 16847                           
 16848                           
 16849                           ;psect for function _i2c_driver_sendNACK
 16850  1D85                     _i2c_driver_sendNACK:	
 16851                           
 16852                           ;i2c_driver.c: 204: SSP1CON2bits.ACKDT = 1;
 16853                           
 16854                           ;incstack = 0
 16855                           ; Regs used in _i2c_driver_sendNACK: []
 16856  1D85  0024               	movlb	4	; select bank4
 16857  1D86  1696               	bsf	22,5	;volatile
 16858                           
 16859                           ;i2c_driver.c: 205: SSP1CON2bits.ACKEN = 1;
 16860  1D87  1616               	bsf	22,4	;volatile
 16861  1D88  0008               	return
 16862  1D89                     __end_of_i2c_driver_sendNACK:	
 16863                           
 16864                           	psect	text93
 16865  1D64                     __ptext93:	
 16866 ;; *************** function _i2c_driver_resetBus *****************
 16867 ;; Defined at:
 16868 ;;		line 141 in file "mcc_generated_files/i2c_driver.c"
 16869 ;; Parameters:    Size  Location     Type
 16870 ;;		None
 16871 ;; Auto vars:     Size  Location     Type
 16872 ;;		None
 16873 ;; Return value:  Size  Location     Type
 16874 ;;                  1    wreg      void 
 16875 ;; Registers used:
 16876 ;;		None
 16877 ;; Tracked objects:
 16878 ;;		On entry : 0/0
 16879 ;;		On exit  : 0/0
 16880 ;;		Unchanged: 0/0
 16881 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16886 ;;Total ram usage:        0 bytes
 16887 ;; Hardware stack levels used:    1
 16888 ;; This function calls:
 16889 ;;		Nothing
 16890 ;; This function is called by:
 16891 ;;		_do_I2C_RESET
 16892 ;; This function uses a non-reentrant model
 16893 ;;
 16894                           
 16895                           
 16896                           ;psect for function _i2c_driver_resetBus
 16897  1D64                     _i2c_driver_resetBus:	
 16898                           
 16899                           ;incstack = 0
 16900                           ; Regs used in _i2c_driver_resetBus: []
 16901  1D64  0008               	return
 16902  1D65                     __end_of_i2c_driver_resetBus:	
 16903                           
 16904                           	psect	text94
 16905  1D6F                     __ptext94:	
 16906 ;; *************** function _i2c_driver_startRX *****************
 16907 ;; Defined at:
 16908 ;;		line 166 in file "mcc_generated_files/i2c_driver.c"
 16909 ;; Parameters:    Size  Location     Type
 16910 ;;		None
 16911 ;; Auto vars:     Size  Location     Type
 16912 ;;		None
 16913 ;; Return value:  Size  Location     Type
 16914 ;;                  1    wreg      void 
 16915 ;; Registers used:
 16916 ;;		None
 16917 ;; Tracked objects:
 16918 ;;		On entry : 0/0
 16919 ;;		On exit  : 0/0
 16920 ;;		Unchanged: 0/0
 16921 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16926 ;;Total ram usage:        0 bytes
 16927 ;; Hardware stack levels used:    1
 16928 ;; This function calls:
 16929 ;;		Nothing
 16930 ;; This function is called by:
 16931 ;;		_do_I2C_RCEN
 16932 ;; This function uses a non-reentrant model
 16933 ;;
 16934                           
 16935                           
 16936                           ;psect for function _i2c_driver_startRX
 16937  1D6F                     _i2c_driver_startRX:	
 16938                           
 16939                           ;i2c_driver.c: 168: SSP1CON2bits.RCEN = 1;
 16940                           
 16941                           ;incstack = 0
 16942                           ; Regs used in _i2c_driver_startRX: []
 16943  1D6F  0024               	movlb	4	; select bank4
 16944  1D70  1596               	bsf	22,3	;volatile
 16945  1D71  0008               	return
 16946  1D72                     __end_of_i2c_driver_startRX:	
 16947                           
 16948                           	psect	text95
 16949  1E8A                     __ptext95:	
 16950 ;; *************** function _rdBlkRegCompleteHandler *****************
 16951 ;; Defined at:
 16952 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 16953 ;; Parameters:    Size  Location     Type
 16954 ;;  p               1    9[COMMON] PTR void 
 16955 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 16956 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 16957 ;; Auto vars:     Size  Location     Type
 16958 ;;		None
 16959 ;; Return value:  Size  Location     Type
 16960 ;;                  1    wreg      enum E97
 16961 ;; Registers used:
 16962 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16963 ;; Tracked objects:
 16964 ;;		On entry : 0/0
 16965 ;;		On exit  : 0/0
 16966 ;;		Unchanged: 0/0
 16967 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16968 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16971 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16972 ;;Total ram usage:        1 bytes
 16973 ;; Hardware stack levels used:    1
 16974 ;; Hardware stack levels required when called:    2
 16975 ;; This function calls:
 16976 ;;		_i2c_setBuffer
 16977 ;;		_i2c_setDataCompleteCallback
 16978 ;; This function is called by:
 16979 ;;		_i2c_readDataBlock
 16980 ;;		_do_I2C_DO_ADDRESS_NACK
 16981 ;;		_do_I2C_TX
 16982 ;;		_do_I2C_RX
 16983 ;;		_do_I2C_TX_EMPTY
 16984 ;; This function uses a non-reentrant model
 16985 ;;
 16986                           
 16987                           
 16988                           ;psect for function _rdBlkRegCompleteHandler
 16989  1E8A                     _rdBlkRegCompleteHandler:	
 16990                           
 16991                           ;i2c_simple_master.c: 136: i2c_setBuffer(((buf_t *)p)->data,((buf_t*)p)->len);
 16992                           
 16993                           ;incstack = 0
 16994                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 16995  1E8A  0879               	movf	rdBlkRegCompleteHandler@p,w
 16996  1E8B  0086               	movwf	6
 16997  1E8C  0187               	clrf	7
 16998  1E8D  3F40               	moviw [0]fsr1
 16999  1E8E  00F0               	movwf	i2c_setBuffer@bufferSize
 17000  1E8F  3F41               	moviw [1]fsr1
 17001  1E90  00F1               	movwf	i2c_setBuffer@bufferSize+1
 17002  1E91  0879               	movf	rdBlkRegCompleteHandler@p,w
 17003  1E92  3E02               	addlw	2
 17004  1E93  0086               	movwf	6
 17005  1E94  0187               	clrf	7
 17006  1E95  0801               	movf	1,w
 17007  1E96  3188  2000  319E   	fcall	_i2c_setBuffer
 17008                           
 17009                           ;i2c_simple_master.c: 137: i2c_setDataCompleteCallback((0),(0));
 17010  1E99  3000               	movlw	0
 17011  1E9A  00F5               	movwf	i2c_setDataCompleteCallback@cb
 17012  1E9B  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 17013  1E9C  01F7               	clrf	i2c_setDataCompleteCallback@p
 17014  1E9D  319D  25CF         	fcall	_i2c_setDataCompleteCallback
 17015                           
 17016                           ;i2c_simple_master.c: 138: return i2c_restart_read;
 17017  1E9F  3002               	movlw	2
 17018  1EA0  0008               	return
 17019  1EA1                     __end_of_rdBlkRegCompleteHandler:	
 17020                           
 17021                           	psect	text96
 17022  1E3E                     __ptext96:	
 17023 ;; *************** function _rd2RegCompleteHandler *****************
 17024 ;; Defined at:
 17025 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 17026 ;; Parameters:    Size  Location     Type
 17027 ;;  p               1    9[COMMON] PTR void 
 17028 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17029 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17030 ;; Auto vars:     Size  Location     Type
 17031 ;;		None
 17032 ;; Return value:  Size  Location     Type
 17033 ;;                  1    wreg      enum E97
 17034 ;; Registers used:
 17035 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17036 ;; Tracked objects:
 17037 ;;		On entry : 0/0
 17038 ;;		On exit  : 0/0
 17039 ;;		Unchanged: 0/0
 17040 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17041 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17044 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17045 ;;Total ram usage:        1 bytes
 17046 ;; Hardware stack levels used:    1
 17047 ;; Hardware stack levels required when called:    2
 17048 ;; This function calls:
 17049 ;;		_i2c_setBuffer
 17050 ;;		_i2c_setDataCompleteCallback
 17051 ;; This function is called by:
 17052 ;;		_i2c_read2ByteRegister
 17053 ;;		_do_I2C_DO_ADDRESS_NACK
 17054 ;;		_do_I2C_TX
 17055 ;;		_do_I2C_RX
 17056 ;;		_do_I2C_TX_EMPTY
 17057 ;; This function uses a non-reentrant model
 17058 ;;
 17059                           
 17060                           
 17061                           ;psect for function _rd2RegCompleteHandler
 17062  1E3E                     _rd2RegCompleteHandler:	
 17063                           
 17064                           ;i2c_simple_master.c: 89: i2c_setBuffer(p,2);
 17065                           
 17066                           ;incstack = 0
 17067                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 17068  1E3E  3002               	movlw	2
 17069  1E3F  00F0               	movwf	i2c_setBuffer@bufferSize
 17070  1E40  3000               	movlw	0
 17071  1E41  00F1               	movwf	i2c_setBuffer@bufferSize+1
 17072  1E42  0879               	movf	rd2RegCompleteHandler@p,w
 17073  1E43  3188  2000  319E   	fcall	_i2c_setBuffer
 17074                           
 17075                           ;i2c_simple_master.c: 90: i2c_setDataCompleteCallback((0),(0));
 17076  1E46  3000               	movlw	0
 17077  1E47  00F5               	movwf	i2c_setDataCompleteCallback@cb
 17078  1E48  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 17079  1E49  01F7               	clrf	i2c_setDataCompleteCallback@p
 17080  1E4A  319D  25CF         	fcall	_i2c_setDataCompleteCallback
 17081                           
 17082                           ;i2c_simple_master.c: 91: return i2c_restart_read;
 17083  1E4C  3002               	movlw	2
 17084  1E4D  0008               	return
 17085  1E4E                     __end_of_rd2RegCompleteHandler:	
 17086                           
 17087                           	psect	text97
 17088  1E2E                     __ptext97:	
 17089 ;; *************** function _rd1RegCompleteHandler *****************
 17090 ;; Defined at:
 17091 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 17092 ;; Parameters:    Size  Location     Type
 17093 ;;  p               1    9[COMMON] PTR void 
 17094 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17095 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17096 ;; Auto vars:     Size  Location     Type
 17097 ;;		None
 17098 ;; Return value:  Size  Location     Type
 17099 ;;                  1    wreg      enum E97
 17100 ;; Registers used:
 17101 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17102 ;; Tracked objects:
 17103 ;;		On entry : 0/0
 17104 ;;		On exit  : 0/0
 17105 ;;		Unchanged: 0/0
 17106 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17107 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17110 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17111 ;;Total ram usage:        1 bytes
 17112 ;; Hardware stack levels used:    1
 17113 ;; Hardware stack levels required when called:    2
 17114 ;; This function calls:
 17115 ;;		_i2c_setBuffer
 17116 ;;		_i2c_setDataCompleteCallback
 17117 ;; This function is called by:
 17118 ;;		_i2c_read1ByteRegister
 17119 ;;		_do_I2C_DO_ADDRESS_NACK
 17120 ;;		_do_I2C_TX
 17121 ;;		_do_I2C_RX
 17122 ;;		_do_I2C_TX_EMPTY
 17123 ;; This function uses a non-reentrant model
 17124 ;;
 17125                           
 17126                           
 17127                           ;psect for function _rd1RegCompleteHandler
 17128  1E2E                     _rd1RegCompleteHandler:	
 17129                           
 17130                           ;i2c_simple_master.c: 60: i2c_setBuffer(p,1);
 17131                           
 17132                           ;incstack = 0
 17133                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 17134  1E2E  3001               	movlw	1
 17135  1E2F  00F0               	movwf	i2c_setBuffer@bufferSize
 17136  1E30  3000               	movlw	0
 17137  1E31  00F1               	movwf	i2c_setBuffer@bufferSize+1
 17138  1E32  0879               	movf	rd1RegCompleteHandler@p,w
 17139  1E33  3188  2000  319E   	fcall	_i2c_setBuffer
 17140                           
 17141                           ;i2c_simple_master.c: 61: i2c_setDataCompleteCallback((0),(0));
 17142  1E36  3000               	movlw	0
 17143  1E37  00F5               	movwf	i2c_setDataCompleteCallback@cb
 17144  1E38  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 17145  1E39  01F7               	clrf	i2c_setDataCompleteCallback@p
 17146  1E3A  319D  25CF         	fcall	_i2c_setDataCompleteCallback
 17147                           
 17148                           ;i2c_simple_master.c: 62: return i2c_restart_read;
 17149  1E3C  3002               	movlw	2
 17150  1E3D  0008               	return
 17151  1E3E                     __end_of_rd1RegCompleteHandler:	
 17152                           
 17153                           	psect	text98
 17154  1E1E                     __ptext98:	
 17155 ;; *************** function _wr1RegCompleteHandler *****************
 17156 ;; Defined at:
 17157 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 17158 ;; Parameters:    Size  Location     Type
 17159 ;;  p               1    9[COMMON] PTR void 
 17160 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17161 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17162 ;; Auto vars:     Size  Location     Type
 17163 ;;		None
 17164 ;; Return value:  Size  Location     Type
 17165 ;;                  1    wreg      enum E97
 17166 ;; Registers used:
 17167 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17168 ;; Tracked objects:
 17169 ;;		On entry : 0/0
 17170 ;;		On exit  : 0/0
 17171 ;;		Unchanged: 0/0
 17172 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17173 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17176 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17177 ;;Total ram usage:        1 bytes
 17178 ;; Hardware stack levels used:    1
 17179 ;; Hardware stack levels required when called:    2
 17180 ;; This function calls:
 17181 ;;		_i2c_setBuffer
 17182 ;;		_i2c_setDataCompleteCallback
 17183 ;; This function is called by:
 17184 ;;		_i2c_write1ByteRegister
 17185 ;;		_do_I2C_DO_ADDRESS_NACK
 17186 ;;		_do_I2C_TX
 17187 ;;		_do_I2C_RX
 17188 ;;		_do_I2C_TX_EMPTY
 17189 ;; This function uses a non-reentrant model
 17190 ;;
 17191                           
 17192                           
 17193                           ;psect for function _wr1RegCompleteHandler
 17194  1E1E                     _wr1RegCompleteHandler:	
 17195                           
 17196                           ;i2c_simple_master.c: 33: i2c_setBuffer(p,1);
 17197                           
 17198                           ;incstack = 0
 17199                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 17200  1E1E  3001               	movlw	1
 17201  1E1F  00F0               	movwf	i2c_setBuffer@bufferSize
 17202  1E20  3000               	movlw	0
 17203  1E21  00F1               	movwf	i2c_setBuffer@bufferSize+1
 17204  1E22  0879               	movf	wr1RegCompleteHandler@p,w
 17205  1E23  3188  2000  319E   	fcall	_i2c_setBuffer
 17206                           
 17207                           ;i2c_simple_master.c: 34: i2c_setDataCompleteCallback((0),(0));
 17208  1E26  3000               	movlw	0
 17209  1E27  00F5               	movwf	i2c_setDataCompleteCallback@cb
 17210  1E28  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 17211  1E29  01F7               	clrf	i2c_setDataCompleteCallback@p
 17212  1E2A  319D  25CF         	fcall	_i2c_setDataCompleteCallback
 17213                           
 17214                           ;i2c_simple_master.c: 35: return i2c_continue;
 17215  1E2C  3004               	movlw	4
 17216  1E2D  0008               	return
 17217  1E2E                     __end_of_wr1RegCompleteHandler:	
 17218                           
 17219                           	psect	text99
 17220  0002                     __ptext99:	
 17221 ;; *************** function _i2c_restartWrite *****************
 17222 ;; Defined at:
 17223 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
 17224 ;; Parameters:    Size  Location     Type
 17225 ;;  p               1    9[COMMON] PTR void 
 17226 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17227 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17228 ;; Auto vars:     Size  Location     Type
 17229 ;;		None
 17230 ;; Return value:  Size  Location     Type
 17231 ;;                  1    wreg      enum E96
 17232 ;; Registers used:
 17233 ;;		wreg
 17234 ;; Tracked objects:
 17235 ;;		On entry : 0/0
 17236 ;;		On exit  : 0/0
 17237 ;;		Unchanged: 0/0
 17238 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17239 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17242 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17243 ;;Total ram usage:        1 bytes
 17244 ;; Hardware stack levels used:    1
 17245 ;; This function calls:
 17246 ;;		Nothing
 17247 ;; This function is called by:
 17248 ;;		_i2c_write1ByteRegister
 17249 ;;		_i2c_writeNBytes
 17250 ;;		_i2c_read1ByteRegister
 17251 ;;		_i2c_read2ByteRegister
 17252 ;;		_i2c_write2ByteRegister
 17253 ;;		_i2c_readDataBlock
 17254 ;;		_do_I2C_DO_ADDRESS_NACK
 17255 ;;		_do_I2C_TX
 17256 ;;		_do_I2C_RX
 17257 ;;		_do_I2C_TX_EMPTY
 17258 ;; This function uses a non-reentrant model
 17259 ;;
 17260                           
 17261                           
 17262                           ;psect for function _i2c_restartWrite
 17263  0002                     _i2c_restartWrite:	
 17264                           
 17265                           ;i2c_types.c: 37: return i2c_restart_write;
 17266                           
 17267                           ;incstack = 0
 17268                           ; Regs used in _i2c_restartWrite: [wreg]
 17269  0002  3003               	movlw	3
 17270  0003  0008               	return
 17271  0004                     __end_of_i2c_restartWrite:	
 17272                           
 17273                           	psect	text100
 17274  1D67                     __ptext100:	
 17275 ;; *************** function _returnReset *****************
 17276 ;; Defined at:
 17277 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 17278 ;; Parameters:    Size  Location     Type
 17279 ;;  p               1    9[COMMON] PTR void 
 17280 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17281 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17282 ;; Auto vars:     Size  Location     Type
 17283 ;;		None
 17284 ;; Return value:  Size  Location     Type
 17285 ;;                  1    wreg      enum E2181
 17286 ;; Registers used:
 17287 ;;		wreg
 17288 ;; Tracked objects:
 17289 ;;		On entry : 0/0
 17290 ;;		On exit  : 0/0
 17291 ;;		Unchanged: 0/0
 17292 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17293 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17296 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17297 ;;Total ram usage:        1 bytes
 17298 ;; Hardware stack levels used:    1
 17299 ;; This function calls:
 17300 ;;		Nothing
 17301 ;; This function is called by:
 17302 ;;		_i2c_open
 17303 ;;		_do_I2C_DO_ADDRESS_NACK
 17304 ;;		_do_I2C_TX
 17305 ;;		_do_I2C_RX
 17306 ;;		_do_I2C_TX_EMPTY
 17307 ;; This function uses a non-reentrant model
 17308 ;;
 17309                           
 17310                           
 17311                           ;psect for function _returnReset
 17312  1D67                     _returnReset:	
 17313                           
 17314                           ;i2c_master.c: 450: return i2c_reset_link;
 17315                           
 17316                           ;incstack = 0
 17317                           ; Regs used in _returnReset: [wreg]
 17318  1D67  3005               	movlw	5
 17319  1D68  0008               	return
 17320  1D69                     __end_of_returnReset:	
 17321                           
 17322                           	psect	text101
 17323  1D65                     __ptext101:	
 17324 ;; *************** function _returnStop *****************
 17325 ;; Defined at:
 17326 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 17327 ;; Parameters:    Size  Location     Type
 17328 ;;  p               1    9[COMMON] PTR void 
 17329 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17330 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17331 ;; Auto vars:     Size  Location     Type
 17332 ;;		None
 17333 ;; Return value:  Size  Location     Type
 17334 ;;                  1    wreg      enum E2181
 17335 ;; Registers used:
 17336 ;;		wreg
 17337 ;; Tracked objects:
 17338 ;;		On entry : 0/0
 17339 ;;		On exit  : 0/0
 17340 ;;		Unchanged: 0/0
 17341 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17342 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17345 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17346 ;;Total ram usage:        1 bytes
 17347 ;; Hardware stack levels used:    1
 17348 ;; This function calls:
 17349 ;;		Nothing
 17350 ;; This function is called by:
 17351 ;;		_setCallBack
 17352 ;;		_i2c_open
 17353 ;;		_do_I2C_DO_ADDRESS_NACK
 17354 ;;		_do_I2C_TX
 17355 ;;		_do_I2C_RX
 17356 ;;		_do_I2C_TX_EMPTY
 17357 ;; This function uses a non-reentrant model
 17358 ;;
 17359                           
 17360                           
 17361                           ;psect for function _returnStop
 17362  1D65                     _returnStop:	
 17363                           
 17364                           ;i2c_master.c: 445: return i2c_stop;
 17365                           
 17366                           ;incstack = 0
 17367                           ; Regs used in _returnStop: [wreg]
 17368  1D65  3001               	movlw	1
 17369  1D66  0008               	return
 17370  1D67                     __end_of_returnStop:	
 17371                           
 17372                           	psect	text102
 17373  1E0E                     __ptext102:	
 17374 ;; *************** function _wr2RegCompleteHandler *****************
 17375 ;; Defined at:
 17376 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 17377 ;; Parameters:    Size  Location     Type
 17378 ;;  p               1    9[COMMON] PTR void 
 17379 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17380 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17381 ;; Auto vars:     Size  Location     Type
 17382 ;;		None
 17383 ;; Return value:  Size  Location     Type
 17384 ;;                  1    wreg      enum E97
 17385 ;; Registers used:
 17386 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17387 ;; Tracked objects:
 17388 ;;		On entry : 0/0
 17389 ;;		On exit  : 0/0
 17390 ;;		Unchanged: 0/0
 17391 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17392 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17395 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17396 ;;Total ram usage:        1 bytes
 17397 ;; Hardware stack levels used:    1
 17398 ;; Hardware stack levels required when called:    2
 17399 ;; This function calls:
 17400 ;;		_i2c_setBuffer
 17401 ;;		_i2c_setDataCompleteCallback
 17402 ;; This function is called by:
 17403 ;;		_i2c_write2ByteRegister
 17404 ;;		_do_I2C_DO_ADDRESS_NACK
 17405 ;;		_do_I2C_TX
 17406 ;;		_do_I2C_RX
 17407 ;;		_do_I2C_TX_EMPTY
 17408 ;; This function uses a non-reentrant model
 17409 ;;
 17410                           
 17411                           
 17412                           ;psect for function _wr2RegCompleteHandler
 17413  1E0E                     _wr2RegCompleteHandler:	
 17414                           
 17415                           ;i2c_simple_master.c: 112: i2c_setBuffer(p,2);
 17416                           
 17417                           ;incstack = 0
 17418                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 17419  1E0E  3002               	movlw	2
 17420  1E0F  00F0               	movwf	i2c_setBuffer@bufferSize
 17421  1E10  3000               	movlw	0
 17422  1E11  00F1               	movwf	i2c_setBuffer@bufferSize+1
 17423  1E12  0879               	movf	wr2RegCompleteHandler@p,w
 17424  1E13  3188  2000  319E   	fcall	_i2c_setBuffer
 17425                           
 17426                           ;i2c_simple_master.c: 113: i2c_setDataCompleteCallback((0),(0));
 17427  1E16  3000               	movlw	0
 17428  1E17  00F5               	movwf	i2c_setDataCompleteCallback@cb
 17429  1E18  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 17430  1E19  01F7               	clrf	i2c_setDataCompleteCallback@p
 17431  1E1A  319D  25CF         	fcall	_i2c_setDataCompleteCallback
 17432                           
 17433                           ;i2c_simple_master.c: 114: return i2c_continue;
 17434  1E1C  3004               	movlw	4
 17435  1E1D  0008               	return
 17436  1E1E                     __end_of_wr2RegCompleteHandler:	
 17437                           
 17438                           	psect	text103
 17439  1DCF                     __ptext103:	
 17440 ;; *************** function _i2c_setDataCompleteCallback *****************
 17441 ;; Defined at:
 17442 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
 17443 ;; Parameters:    Size  Location     Type
 17444 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 17445 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 17446 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
 17447 ;;  p               1    7[COMMON] PTR void 
 17448 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17449 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17450 ;; Auto vars:     Size  Location     Type
 17451 ;;		None
 17452 ;; Return value:  Size  Location     Type
 17453 ;;                  1    wreg      void 
 17454 ;; Registers used:
 17455 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17456 ;; Tracked objects:
 17457 ;;		On entry : 0/0
 17458 ;;		On exit  : 0/0
 17459 ;;		Unchanged: 0/0
 17460 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17461 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17463 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17464 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17465 ;;Total ram usage:        4 bytes
 17466 ;; Hardware stack levels used:    1
 17467 ;; Hardware stack levels required when called:    1
 17468 ;; This function calls:
 17469 ;;		_setCallBack
 17470 ;; This function is called by:
 17471 ;;		_wr1RegCompleteHandler
 17472 ;;		_rd1RegCompleteHandler
 17473 ;;		_rd2RegCompleteHandler
 17474 ;;		_wr2RegCompleteHandler
 17475 ;;		_rdBlkRegCompleteHandler
 17476 ;;		_i2c_write1ByteRegister
 17477 ;;		_i2c_read1ByteRegister
 17478 ;;		_i2c_read2ByteRegister
 17479 ;;		_i2c_write2ByteRegister
 17480 ;;		_i2c_readDataBlock
 17481 ;; This function uses a non-reentrant model
 17482 ;;
 17483                           
 17484                           
 17485                           ;psect for function _i2c_setDataCompleteCallback
 17486  1DCF                     _i2c_setDataCompleteCallback:	
 17487                           
 17488                           ;i2c_master.c: 91: setCallBack(i2c_dataComplete,cb,p);
 17489                           
 17490                           ;incstack = 0
 17491                           ; Regs used in _i2c_setDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 17492  1DCF  0876               	movf	i2c_setDataCompleteCallback@cb+1,w
 17493  1DD0  00F1               	movwf	setCallBack@cb+1
 17494  1DD1  0875               	movf	i2c_setDataCompleteCallback@cb,w
 17495  1DD2  00F0               	movwf	setCallBack@cb
 17496  1DD3  0877               	movf	i2c_setDataCompleteCallback@p,w
 17497  1DD4  00F8               	movwf	??_i2c_setDataCompleteCallback
 17498  1DD5  0878               	movf	??_i2c_setDataCompleteCallback,w
 17499  1DD6  00F2               	movwf	setCallBack@p
 17500  1DD7  3000               	movlw	0
 17501  1DD8  3190  2098         	fcall	_setCallBack
 17502  1DDA  0008               	return
 17503  1DDB                     __end_of_i2c_setDataCompleteCallback:	
 17504                           
 17505                           	psect	text104
 17506  1098                     __ptext104:	
 17507 ;; *************** function _setCallBack *****************
 17508 ;; Defined at:
 17509 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
 17510 ;; Parameters:    Size  Location     Type
 17511 ;;  idx             1    wreg     enum E2365
 17512 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
 17513 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 17514 ;;		 -> wr1RegCompleteHandler(1), i2c_restartWrite(1), Absolute function(1), 
 17515 ;;  p               1    2[COMMON] PTR void 
 17516 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 17517 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 17518 ;; Auto vars:     Size  Location     Type
 17519 ;;  idx             1    4[COMMON] enum E2365
 17520 ;; Return value:  Size  Location     Type
 17521 ;;                  1    wreg      void 
 17522 ;; Registers used:
 17523 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17524 ;; Tracked objects:
 17525 ;;		On entry : 0/0
 17526 ;;		On exit  : 0/0
 17527 ;;		Unchanged: 0/0
 17528 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17529 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17530 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17531 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17532 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17533 ;;Total ram usage:        5 bytes
 17534 ;; Hardware stack levels used:    1
 17535 ;; This function calls:
 17536 ;;		Nothing
 17537 ;; This function is called by:
 17538 ;;		_i2c_setDataCompleteCallback
 17539 ;;		_i2c_setWriteCollisionCallback
 17540 ;;		_i2c_setAddressNACKCallback
 17541 ;;		_i2c_setDataNACKCallback
 17542 ;;		_i2c_setTimeOutCallback
 17543 ;; This function uses a non-reentrant model
 17544 ;;
 17545                           
 17546                           
 17547                           ;psect for function _setCallBack
 17548  1098                     _setCallBack:	
 17549                           
 17550                           ;incstack = 0
 17551                           ; Regs used in _setCallBack: [wreg+fsr1l+fsr1h+status,2+status,0]
 17552                           ;setCallBack@idx stored from wreg
 17553  1098  00F4               	movwf	setCallBack@idx
 17554                           
 17555                           ;i2c_master.c: 455: if(cb)
 17556  1099  0870               	movf	setCallBack@cb,w
 17557  109A  0471               	iorwf	setCallBack@cb+1,w
 17558  109B  1903               	btfsc	3,2
 17559  109C  28B0               	goto	i1l5110
 17560                           
 17561                           ;i2c_master.c: 456: {
 17562                           ;i2c_master.c: 457: i2c_status.callbackTable[idx] = cb;
 17563  109D  3574               	lslf	setCallBack@idx,w
 17564  109E  3E2B               	addlw	(low ((_i2c_status| (0+512)+11)))& (0+255)
 17565  109F  0086               	movwf	6
 17566  10A0  3002               	movlw	2	; select bank4/5
 17567  10A1  0087               	movwf	7
 17568  10A2  0870               	movf	setCallBack@cb,w
 17569  10A3  3FC0               	movwi [0]fsr1
 17570  10A4  0871               	movf	setCallBack@cb+1,w
 17571  10A5  3FC1               	movwi [1]fsr1
 17572                           
 17573                           ;i2c_master.c: 458: i2c_status.callbackPayload[idx] = p;
 17574  10A6  0872               	movf	setCallBack@p,w
 17575  10A7  00F3               	movwf	??_setCallBack
 17576  10A8  0874               	movf	setCallBack@idx,w
 17577  10A9  3E37               	addlw	(low ((_i2c_status| (0+512)+23)))& (0+255)
 17578  10AA  0086               	movwf	6
 17579  10AB  3002               	movlw	2	; select bank4/5
 17580  10AC  0087               	movwf	7
 17581  10AD  0873               	movf	??_setCallBack,w
 17582  10AE  0081               	movwf	1
 17583                           
 17584                           ;i2c_master.c: 459: }
 17585  10AF  0008               	return
 17586  10B0                     i1l5110:	
 17587                           
 17588                           ;i2c_master.c: 460: else
 17589                           ;i2c_master.c: 461: {
 17590                           ;i2c_master.c: 462: i2c_status.callbackTable[idx] = returnStop;
 17591  10B0  3574               	lslf	setCallBack@idx,w
 17592  10B1  3E2B               	addlw	(low ((_i2c_status| (0+512)+11)))& (0+255)
 17593  10B2  0086               	movwf	6
 17594  10B3  3002               	movlw	2	; select bank4/5
 17595  10B4  0087               	movwf	7
 17596  10B5  3065               	movlw	low _returnStop
 17597  10B6  3FC0               	movwi [0]fsr1
 17598  10B7  301D               	movlw	high _returnStop
 17599  10B8  3FC1               	movwi [1]fsr1
 17600                           
 17601                           ;i2c_master.c: 463: i2c_status.callbackPayload[idx] = (0);
 17602  10B9  0874               	movf	setCallBack@idx,w
 17603  10BA  3E37               	addlw	(low ((_i2c_status| (0+512)+23)))& (0+255)
 17604  10BB  0086               	movwf	6
 17605  10BC  3002               	movlw	2	; select bank4/5
 17606  10BD  0087               	movwf	7
 17607  10BE  0181               	clrf	1
 17608  10BF  0008               	return
 17609  10C0                     __end_of_setCallBack:	
 17610                           
 17611                           	psect	text105
 17612  0800                     __ptext105:	
 17613 ;; *************** function _i2c_setBuffer *****************
 17614 ;; Defined at:
 17615 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 17616 ;; Parameters:    Size  Location     Type
 17617 ;;  buffer          1    wreg     PTR void 
 17618 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 17619 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 17620 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 17621 ;;  bufferSize      2    0[COMMON] unsigned int 
 17622 ;; Auto vars:     Size  Location     Type
 17623 ;;  buffer          1    3[COMMON] PTR void 
 17624 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 17625 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 17626 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 17627 ;; Return value:  Size  Location     Type
 17628 ;;                  1    wreg      void 
 17629 ;; Registers used:
 17630 ;;		wreg
 17631 ;; Tracked objects:
 17632 ;;		On entry : 0/0
 17633 ;;		On exit  : 0/0
 17634 ;;		Unchanged: 0/0
 17635 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17636 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17637 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17638 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17639 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17640 ;;Total ram usage:        4 bytes
 17641 ;; Hardware stack levels used:    1
 17642 ;; This function calls:
 17643 ;;		Nothing
 17644 ;; This function is called by:
 17645 ;;		_wr1RegCompleteHandler
 17646 ;;		_rd1RegCompleteHandler
 17647 ;;		_rd2RegCompleteHandler
 17648 ;;		_wr2RegCompleteHandler
 17649 ;;		_rdBlkRegCompleteHandler
 17650 ;;		_i2c_write1ByteRegister
 17651 ;;		_i2c_writeNBytes
 17652 ;;		_i2c_read1ByteRegister
 17653 ;;		_i2c_read2ByteRegister
 17654 ;;		_i2c_write2ByteRegister
 17655 ;;		_i2c_readDataBlock
 17656 ;;		_i2c_readNBytes
 17657 ;; This function uses a non-reentrant model
 17658 ;;
 17659                           
 17660                           
 17661                           ;psect for function _i2c_setBuffer
 17662  0800                     _i2c_setBuffer:	
 17663                           
 17664                           ;incstack = 0
 17665                           ; Regs used in _i2c_setBuffer: [wreg]
 17666                           ;i2c_setBuffer@buffer stored from wreg
 17667  0800  00F3               	movwf	i2c_setBuffer@buffer
 17668                           
 17669                           ;i2c_master.c: 186: if(i2c_status.bufferFree)
 17670  0801  0024               	movlb	4	; select bank4
 17671  0802  1D20               	btfss	_i2c_status^(0+512),2
 17672  0803  0008               	return
 17673                           
 17674                           ;i2c_master.c: 187: {
 17675                           ;i2c_master.c: 188: i2c_status.data_ptr = buffer;
 17676  0804  0873               	movf	i2c_setBuffer@buffer,w
 17677  0805  00F2               	movwf	??_i2c_setBuffer
 17678  0806  0872               	movf	??_i2c_setBuffer,w
 17679  0807  00A2               	movwf	(low ((_i2c_status| (0+512)+2)))^0
 17680                           
 17681                           ;i2c_master.c: 189: i2c_status.data_length = bufferSize;
 17682  0808  0871               	movf	i2c_setBuffer@bufferSize+1,w
 17683  0809  00A4               	movwf	((_i2c_status+1)^(0+512)+3)
 17684  080A  0870               	movf	i2c_setBuffer@bufferSize,w
 17685  080B  00A3               	movwf	(_i2c_status^(0+512)+3)
 17686                           
 17687                           ;i2c_master.c: 190: i2c_status.bufferFree = 0;
 17688  080C  1120               	bcf	_i2c_status^(0+512),2
 17689  080D  0008               	return
 17690  080E                     __end_of_i2c_setBuffer:	
 17691                           
 17692                           	psect	text106
 17693  1D6C                     __ptext106:	
 17694 ;; *************** function _i2c_driver_stop *****************
 17695 ;; Defined at:
 17696 ;;		line 156 in file "mcc_generated_files/i2c_driver.c"
 17697 ;; Parameters:    Size  Location     Type
 17698 ;;		None
 17699 ;; Auto vars:     Size  Location     Type
 17700 ;;		None
 17701 ;; Return value:  Size  Location     Type
 17702 ;;                  1    wreg      void 
 17703 ;; Registers used:
 17704 ;;		None
 17705 ;; Tracked objects:
 17706 ;;		On entry : 0/0
 17707 ;;		On exit  : 0/0
 17708 ;;		Unchanged: 0/0
 17709 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17714 ;;Total ram usage:        0 bytes
 17715 ;; Hardware stack levels used:    1
 17716 ;; This function calls:
 17717 ;;		Nothing
 17718 ;; This function is called by:
 17719 ;;		_do_I2C_SEND_STOP
 17720 ;; This function uses a non-reentrant model
 17721 ;;
 17722                           
 17723                           
 17724                           ;psect for function _i2c_driver_stop
 17725  1D6C                     _i2c_driver_stop:	
 17726                           
 17727                           ;i2c_driver.c: 158: SSP1CON2bits.PEN = 1;
 17728                           
 17729                           ;incstack = 0
 17730                           ; Regs used in _i2c_driver_stop: []
 17731  1D6C  0024               	movlb	4	; select bank4
 17732  1D6D  1516               	bsf	22,2	;volatile
 17733  1D6E  0008               	return
 17734  1D6F                     __end_of_i2c_driver_stop:	
 17735                           
 17736                           	psect	text107
 17737  1D69                     __ptext107:	
 17738 ;; *************** function _i2c_driver_restart *****************
 17739 ;; Defined at:
 17740 ;;		line 151 in file "mcc_generated_files/i2c_driver.c"
 17741 ;; Parameters:    Size  Location     Type
 17742 ;;		None
 17743 ;; Auto vars:     Size  Location     Type
 17744 ;;		None
 17745 ;; Return value:  Size  Location     Type
 17746 ;;                  1    wreg      void 
 17747 ;; Registers used:
 17748 ;;		None
 17749 ;; Tracked objects:
 17750 ;;		On entry : 0/0
 17751 ;;		On exit  : 0/0
 17752 ;;		Unchanged: 0/0
 17753 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17758 ;;Total ram usage:        0 bytes
 17759 ;; Hardware stack levels used:    1
 17760 ;; This function calls:
 17761 ;;		Nothing
 17762 ;; This function is called by:
 17763 ;;		_do_I2C_SEND_RESTART_READ
 17764 ;;		_do_I2C_SEND_RESTART_WRITE
 17765 ;;		_do_I2C_SEND_RESTART
 17766 ;; This function uses a non-reentrant model
 17767 ;;
 17768                           
 17769                           
 17770                           ;psect for function _i2c_driver_restart
 17771  1D69                     _i2c_driver_restart:	
 17772                           
 17773                           ;i2c_driver.c: 153: SSP1CON2bits.RSEN = 1;
 17774                           
 17775                           ;incstack = 0
 17776                           ; Regs used in _i2c_driver_restart: []
 17777  1D69  0024               	movlb	4	; select bank4
 17778  1D6A  1496               	bsf	22,1	;volatile
 17779  1D6B  0008               	return
 17780  1D6C                     __end_of_i2c_driver_restart:	
 17781                           
 17782                           	psect	text108
 17783  1D81                     __ptext108:	
 17784 ;; *************** function _i2c_driver_sendACK *****************
 17785 ;; Defined at:
 17786 ;;		line 196 in file "mcc_generated_files/i2c_driver.c"
 17787 ;; Parameters:    Size  Location     Type
 17788 ;;		None
 17789 ;; Auto vars:     Size  Location     Type
 17790 ;;		None
 17791 ;; Return value:  Size  Location     Type
 17792 ;;                  1    wreg      void 
 17793 ;; Registers used:
 17794 ;;		None
 17795 ;; Tracked objects:
 17796 ;;		On entry : 0/0
 17797 ;;		On exit  : 0/0
 17798 ;;		Unchanged: 0/0
 17799 ;; Data sizes:     COMMON  BANK0h   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17804 ;;Total ram usage:        0 bytes
 17805 ;; Hardware stack levels used:    1
 17806 ;; This function calls:
 17807 ;;		Nothing
 17808 ;; This function is called by:
 17809 ;;		_do_I2C_DO_ACK
 17810 ;;		_do_I2C_RX
 17811 ;; This function uses a non-reentrant model
 17812 ;;
 17813                           
 17814                           
 17815                           ;psect for function _i2c_driver_sendACK
 17816  1D81                     _i2c_driver_sendACK:	
 17817                           
 17818                           ;i2c_driver.c: 198: SSP1CON2bits.ACKDT = 0;
 17819                           
 17820                           ;incstack = 0
 17821                           ; Regs used in _i2c_driver_sendACK: []
 17822  1D81  0024               	movlb	4	; select bank4
 17823  1D82  1296               	bcf	22,5	;volatile
 17824                           
 17825                           ;i2c_driver.c: 199: SSP1CON2bits.ACKEN = 1;
 17826  1D83  1616               	bsf	22,4	;volatile
 17827  1D84  0008               	return
 17828  1D85                     __end_of_i2c_driver_sendACK:	
 17829  007E                     btemp	set	126	;btemp
 17830  007E                     int$flags	set	126
 17831  007E                     wtemp0	set	126


Data Sizes:
    Strings     7
    Constant    175
    Data        32
    BSS         260
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0h           16     16      16
    BANK1            48     35      42
    BANK2             0      0       0
    BANK3            64      1      64
    BANK4            80      5      67
    BANK5            80      0      32
    BANK6            80      0      64
    BANK7            80      0      64
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(1) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    do_I2C_TX$3604$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    do_I2C_RX$3610$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    do_I2C_TX_EMPTY$3616$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_ISR$3622	PTR const FTN()enum E2347 size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    do_I2C_TX_EMPTY$3621	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    do_I2C_TX_EMPTY$3616	PTR FTN(PTR void ,)enum E2181 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), returnReset(), returnStop(), 
		 -> Absolute function(), 

    do_I2C_RX$3615	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    do_I2C_RX$3610	PTR FTN(PTR void ,)enum E2181 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), returnReset(), returnStop(), 
		 -> Absolute function(), 

    do_I2C_TX$3609	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    do_I2C_TX$3604	PTR FTN(PTR void ,)enum E2181 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), returnReset(), returnStop(), 
		 -> Absolute function(), 

    returnStop@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    returnReset@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_restartWrite@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S2435$11$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    __builtin_memcpy$1	PTR const void  size(2) Largest target is 4096
		 -> CtrlTrfData(BANK0h[8]), RAM(DATA[4096]), SetupPkt(ABS[8]), 

    __builtin_memcpy$0	PTR void  size(1) Largest target is 8
		 -> SetupPkt(ABS[8]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), USTATcopy(BANK3[1]), USBActiveConfiguration(BANK3[1]), BDT(ABS[48]), 
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[4]), STR_1(CODE[3]), 

    strncmp@s1	PTR const unsigned char  size(1) Largest target is 64
		 -> readBuffer(BANK6[64]), NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[4]), STR_1(CODE[3]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[4]), STR_1(CODE[3]), 

    strchr@ptr	PTR const unsigned char  size(1) Largest target is 64
		 -> readBuffer(BANK6[64]), NULL(NULL[0]), 

    sp__strchr	PTR unsigned char  size(1) Largest target is 64
		 -> readBuffer(BANK6[64]), NULL(NULL[0]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[4]), STR_1(CODE[3]), 

    strstr@s1	PTR const unsigned char  size(1) Largest target is 64
		 -> readBuffer(BANK6[64]), NULL(NULL[0]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(ABS[48]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(ABS[48]), 

    d.data	PTR unsigned char  size(1) Largest target is 0

    S2960$data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@cb	PTR FTN(PTR void ,)enum E2181 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), 

    fsmStateTable	PTR const FTN()enum E2347[16] size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E2181 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), 

    S2435$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S2435$callbackTable	PTR FTN(PTR void ,)enum E2181[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), returnReset(), returnStop(), 
		 -> Absolute function(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E2181[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), returnReset(), returnStop(), 
		 -> Absolute function(), 

    S2435$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    sp__strstr	PTR unsigned char  size(1) Largest target is 64
		 -> readBuffer(BANK6[64]), NULL(NULL[0]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    sp____builtin_memcpy	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(ABS[48]), 

    USBStdSetCfgHandler@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    pDst	PTR volatile unsigned char  size(1) Largest target is 8
		 -> CtrlTrfData(BANK0h[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(1) Largest target is 48
		 -> BDT(ABS[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(1) Largest target is 48
		 -> BDT(ABS[48]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAM[64]), NULL(NULL[0]), cdc_data_rx(BIGRAM[64]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    USBDeviceInit@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[26]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    getsUSBUSART@buffer	PTR unsigned char  size(1) Largest target is 64
		 -> readBuffer(BANK6[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), BDT(ABS[48]), NULL(NULL[0]), 

    S543$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S533$wRam	PTR unsigned int  size(1) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(1) Largest target is 0

    S533$bRam	PTR unsigned char  size(1) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S508$wRom	PTR const unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S508$wRam	PTR unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S508$bRom	PTR const unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S508$bRam	PTR unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S275_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S275_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S275_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S275_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    i2c_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_ISR(), Absolute function(), 

    i2c_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> i2c_busCollisionISR(), Absolute function(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    i1_USBCtrlEPServiceComplete->i1_USBCtrlEPAllowDataStage
    i1_USBCtrlEPAllowDataStage->i1_USBCtrlTrfTxService
    i1_USER_USB_CALLBACK_EVENT_HANDLER->i1_CDCInitEP
    i1_CDCInitEP->i1_USBEnableEndpoint
    i1_USBEnableEndpoint->i1_USBConfigureEndpoint
    i1_USBCtrlTrfOutHandler->i1_USBCtrlTrfRxService
    i1_USBCtrlTrfRxService->i1_USBCtrlEPAllowStatusStage
    i1_USBCtrlTrfInHandler->i1_USBCtrlTrfTxService
    _i2c_ISR->_do_I2C_TX
    _do_I2C_TX->_i2c_driver_TXData
    _do_I2C_TX->_i2c_driver_isNACK
    _do_I2C_SEND_ADR_WRITE->_i2c_driver_TXData
    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback
    _i2c_setDataCompleteCallback->_setCallBack

Critical Paths under _main in BANK0h

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0h

    _INTERRUPT_InterruptManager->i1_USBDeviceTasks
    i1_USBWakeFromSuspend->i1_USER_USB_CALLBACK_EVENT_HANDLER
    i1_USBSuspend->i1_USER_USB_CALLBACK_EVENT_HANDLER
    i1_USBCtrlEPService->i1_USBCtrlTrfSetupHandler
    i1_USBCtrlTrfSetupHandler->i1_USBCheckStdRequest
    i1_USBCheckStdRequest->i1_USBStdFeatureReqHandler
    i1_USBStdSetCfgHandler->i1_USER_USB_CALLBACK_EVENT_HANDLER
    i1_USBStdFeatureReqHandler->i1_USER_USB_CALLBACK_EVENT_HANDLER

Critical Paths under _main in BANK1

    _UserApplication->_strstr
    _strstr->_strncmp
    _strncmp->_strlen
    _getsUSBUSART->_USBTransferOnePacket
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPService->_USBCtrlTrfSetupHandler
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCtrlEPServiceComplete->_USBCtrlEPAllowDataStage
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_CDCInitEP
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USBCtrlEPAllowStatusStage
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _SYSTEM_Initialize->_USBDeviceInit
    _CDCTxService->_USBTransferOnePacket

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    _INTERRUPT_InterruptManager->i1_USBDeviceTasks
    i1_USBDeviceTasks->i1_USBCtrlEPService

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_USBDeviceTasks

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    _main->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   55197
                          _CDCInitEP
                       _CDCTxService
                  _SYSTEM_Initialize
                     _USBDeviceTasks
                    _UserApplication
 ---------------------------------------------------------------------------------
 (1) _UserApplication                                      4     4      0    3533
                                             25 BANK1      3     3      0
                       _getsUSBUSART
                             _strstr
 ---------------------------------------------------------------------------------
 (2) _strstr                                               6     4      2    1167
                                             19 BANK1      6     4      2
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              7     3      4     348
                                             12 BANK1      7     3      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) _strlen                                               6     4      2     179
                                              6 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (3) _strchr                                               3     1      2     213
                                              6 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (2) _getsUSBUSART                                         4     3      1    2332
                                             17 BANK1      4     3      1
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       3     3      0   45929
                                              0 BANK3      1     1      0
                                              3 BANK4      2     2      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   1     1      0    6196
                                             26 BANK1      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           1     1      0    6196
                                             26 BANK1      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      1     1      0       0
                                              6 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBIncrement1msInternalTimers                        1     1      0       0
                                              6 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     3     3      0   26877
                                              0 BANK4      3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               1     1      0   26540
                                             34 BANK1      1     1      0
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             2     2      0     136
                                             11 BANK1      2     2      0
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              2     2      0     136
                                              9 BANK1      2     2      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   1     1      0   20208
                                             33 BANK1      1     1      0
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  5     5      0    7070
                                             26 BANK1      5     5      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6     639
                                              6 BANK1      8     2      6
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               3     3      0      68
                                              6 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  3     3      0       0
                                              6 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              7     7      0    6874
                                             26 BANK1      7     7      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USER_USB_CALLBACK_EVENT_HANDLER                      6     0      6    6196
                                             20 BANK1      6     0      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (3) _USBCheckCDCRequest                                   1     1      0       0
                                              6 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (3) _CDCInitEP                                            1     1      0    3045
                                             19 BANK1      1     1      0
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBEnableEndpoint                                    6     5      1     952
                                             13 BANK1      6     5      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (5) _USBConfigureEndpoint                                 7     6      1     524
                                              6 BANK1      7     6      1
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 2     2      0     167
                                             12 BANK1      2     2      0
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  4     4      0     167
                                              8 BANK1      4     4      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            2     2      0       0
                                              6 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  3     3      0     170
                                              9 BANK1      3     3      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfTxService                                  3     3      0     136
                                              6 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     396
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        5     5      0     396
                                              6 BANK1      5     5      0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceAttach                                      1     1      0       0
                                              6 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CDCTxService                                         3     3      0    2294
                                             17 BANK1      3     3      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                11     7      4    2093
                                              6 BANK1     11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          1     1      0  103559
                                              5 BANK1      1     1      0
                   Absolute function *
                            _i2c_ISR *
                _i2c_busCollisionISR *
                   i1_USBDeviceTasks
 ---------------------------------------------------------------------------------
 (11) i1_USBDeviceTasks                                    3     3      0   13677
                                             15 BANK0h     1     1      0
                                              3 BANK1      2     2      0
        i1_USBCtrlEPAllowStatusStage
                 i1_USBCtrlEPService
                    i1_USBDeviceInit
    i1_USBIncrement1msInternalTimers
                  i1_USBStallHandler
                       i1_USBSuspend
               i1_USBWakeFromSuspend
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) i1_USBWakeFromSuspend                                1     1      0    1737
                                              6 BANK0h     1     1      0
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) i1_USBSuspend                                        1     1      0    1737
                                              6 BANK0h     1     1      0
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) i1_USBStallHandler                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) i1_USBIncrement1msInternalTimers                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) i1_USBDeviceInit                                     5     5      0     272
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (12) i1_USBCtrlEPService                                  3     3      0    8148
                                              0 BANK1      3     3      0
              i1_USBCtrlTrfInHandler
             i1_USBCtrlTrfOutHandler
           i1_USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (13) i1_USBCtrlTrfSetupHandler                            1     1      0    7919
                                             14 BANK0h     1     1      0
               i1_USBCheckStdRequest
         i1_USBCtrlEPServiceComplete
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (14) i1_USBCtrlEPServiceComplete                          2     2      0      92
                                              5 COMMON     2     2      0
          i1_USBCtrlEPAllowDataStage
        i1_USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) i1_USBCtrlEPAllowDataStage                           2     2      0      92
                                              3 COMMON     2     2      0
              i1_USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (14) i1_USBCheckStdRequest                                1     1      0    6090
                                             13 BANK0h     1     1      0
          i1_USBStdFeatureReqHandler
              i1_USBStdGetDscHandler
           i1_USBStdGetStatusHandler
              i1_USBStdSetCfgHandler
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) i1_USBStdSetCfgHandler                               5     5      0    2099
                                              6 BANK0h     5     5      0
  i1_USER_USB_CALLBACK_EVENT_HANDLER
                           i1_memset
 ---------------------------------------------------------------------------------
 (16) i1_memset                                            8     2      6     202
                                              0 COMMON     8     2      6
 ---------------------------------------------------------------------------------
 (15) i1_USBStdGetStatusHandler                            3     3      0      46
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (15) i1_USBStdGetDscHandler                               3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (15) i1_USBStdFeatureReqHandler                           7     7      0    2208
                                              6 BANK0h     7     7      0
  i1_USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) i1_USER_USB_CALLBACK_EVENT_HANDLER                   6     0      6    1737
                                              0 BANK0h     6     0      6
                        i1_CDCInitEP
               i1_USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (13) i1_USBCheckCDCRequest                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) i1_CDCInitEP                                         1     1      0     935
                                             13 COMMON     1     1      0
                i1_USBEnableEndpoint
             i1_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (14) i1_USBTransferOnePacket                             11     7      4     454
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (14) i1_USBEnableEndpoint                                 6     5      1     481
                                              7 COMMON     6     5      1
             i1_USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (15) i1_USBConfigureEndpoint                              7     6      1     274
                                              0 COMMON     7     6      1
 ---------------------------------------------------------------------------------
 (13) i1_USBCtrlTrfOutHandler                              2     2      0     114
                                              6 COMMON     2     2      0
              i1_USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (14) i1_USBCtrlTrfRxService                               4     4      0     114
                                              2 COMMON     4     4      0
        i1_USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) i1_USBCtrlEPAllowStatusStage                         2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (13) i1_USBCtrlTrfInHandler                               3     3      0     115
                                              3 COMMON     3     3      0
              i1_USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (16) i1_USBCtrlTrfTxService                               3     3      0      92
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (11) _i2c_busCollisionISR                                 0     0      0       0
       _i2c_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (12) _i2c_driver_clearBusCollision                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _i2c_ISR                                             1     1      0   89882
                                              4 COMMON     1     1      0
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                  _i2c_driver_isNACK
                      _mssp_clearIRQ
 ---------------------------------------------------------------------------------
 (12) _mssp_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _do_I2C_TX_EMPTY                                     1     1      0   22448
                                              0 COMMON     1     1      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
                        _mssp_setIRQ
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (13) _mssp_setIRQ                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _do_I2C_TX                                           3     3      0   22494
                                              1 COMMON     3     3      0
                   Absolute function *
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                  _i2c_driver_TXData
                  _i2c_driver_isNACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (12) _i2c_driver_isNACK                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _do_I2C_SEND_RESTART_WRITE                           0     0      0       0
                 _i2c_driver_restart
 ---------------------------------------------------------------------------------
 (13) _do_I2C_SEND_RESTART_READ                            0     0      0       0
                 _i2c_driver_restart
 ---------------------------------------------------------------------------------
 (12) _do_I2C_SEND_ADR_WRITE                               0     0      0      22
                  _i2c_driver_TXData
 ---------------------------------------------------------------------------------
 (12) _do_I2C_SEND_ADR_READ                                0     0      0      22
                  _i2c_driver_TXData
 ---------------------------------------------------------------------------------
 (13) _i2c_driver_TXData                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) _do_I2C_RX                                           1     1      0   22448
                                              0 COMMON     1     1      0
                   Absolute function *
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
               _i2c_driver_getRXData
                 _i2c_driver_sendACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (13) _i2c_driver_getRXData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _do_I2C_DO_NACK_STOP                                 0     0      0       0
                _i2c_driver_sendNACK
 ---------------------------------------------------------------------------------
 (13) _do_I2C_DO_NACK_RESTART                              0     0      0       0
                _i2c_driver_sendNACK
 ---------------------------------------------------------------------------------
 (14) _i2c_driver_sendNACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _do_I2C_RESET                                        0     0      0       0
                _i2c_driver_resetBus
 ---------------------------------------------------------------------------------
 (13) _i2c_driver_resetBus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _do_I2C_RCEN                                         0     0      0       0
                 _i2c_driver_startRX
 ---------------------------------------------------------------------------------
 (13) _i2c_driver_startRX                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _do_I2C_IDLE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _do_I2C_DO_ADDRESS_NACK                              1     1      0   22448
                                              0 COMMON     1     1      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (13) _wr2RegCompleteHandler                               1     0      1    4434
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (13) _wr1RegCompleteHandler                               1     0      1    4434
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (13) _returnStop                                          1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (13) _returnReset                                         1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (13) _rdBlkRegCompleteHandler                             1     0      1    4712
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (13) _rd2RegCompleteHandler                               1     0      1    4434
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (13) _rd1RegCompleteHandler                               1     0      1    4434
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) _i2c_setDataCompleteCallback                         4     1      3    2868
                                              5 COMMON     4     1      3
                        _setCallBack
 ---------------------------------------------------------------------------------
 (15) _setCallBack                                         5     2      3    1044
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (14) _i2c_setBuffer                                       4     2      2    1544
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (13) _i2c_restartWrite                                    1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (13) _do_I2C_SEND_STOP                                    0     0      0       0
                    _i2c_driver_stop
 ---------------------------------------------------------------------------------
 (14) _i2c_driver_stop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _do_I2C_SEND_RESTART                                 0     0      0       0
                 _i2c_driver_restart
 ---------------------------------------------------------------------------------
 (14) _i2c_driver_restart                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 (12) _do_I2C_DO_ACK                                       0     0      0       0
                 _i2c_driver_sendACK
 ---------------------------------------------------------------------------------
 (13) _i2c_driver_sendACK                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CDCInitEP
     _USBEnableEndpoint
       _USBConfigureEndpoint
     _USBTransferOnePacket
   _CDCTxService
     _USBTransferOnePacket
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _USBDeviceAttach
     _USBDeviceInit
     _WDT_Initialize
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _USBCheckCDCRequest
     _USBDeviceInit
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _USBCheckCDCRequest
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _USBCheckCDCRequest
     _USER_USB_CALLBACK_EVENT_HANDLER
       _CDCInitEP
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBTransferOnePacket
       _USBCheckCDCRequest
   _UserApplication
     _getsUSBUSART
       _USBTransferOnePacket
     _strstr
       _strchr
       _strlen
       _strncmp
         _strlen (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _i2c_ISR *
     _do_I2C_DO_ACK *
       _i2c_driver_sendACK
     _do_I2C_DO_ADDRESS_NACK *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c_driver_restart
       _do_I2C_SEND_STOP *
         _i2c_driver_stop
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_DO_NACK_RESTART *
       _i2c_driver_sendNACK
     _do_I2C_DO_NACK_STOP *
       _i2c_driver_sendNACK
     _do_I2C_IDLE *
     _do_I2C_RCEN *
       _i2c_driver_startRX
     _do_I2C_RESET *
       _i2c_driver_resetBus
     _do_I2C_RX *
       Absolute function(Fake) *
       _do_I2C_DO_NACK_RESTART *
         _i2c_driver_sendNACK
       _do_I2C_DO_NACK_STOP *
         _i2c_driver_sendNACK
       _i2c_driver_getRXData *
       _i2c_driver_sendACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_SEND_ADR_READ *
       _i2c_driver_TXData
     _do_I2C_SEND_ADR_WRITE *
       _i2c_driver_TXData
     _do_I2C_SEND_RESTART *
       _i2c_driver_restart
     _do_I2C_SEND_RESTART_READ *
       _i2c_driver_restart
     _do_I2C_SEND_RESTART_WRITE *
       _i2c_driver_restart
     _do_I2C_SEND_STOP *
       _i2c_driver_stop
     _do_I2C_TX *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART_READ *
         _i2c_driver_restart
       _do_I2C_SEND_RESTART_WRITE *
         _i2c_driver_restart
       _do_I2C_SEND_STOP *
         _i2c_driver_stop
       _i2c_driver_TXData *
       _i2c_driver_isNACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_TX_EMPTY *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c_driver_restart
       _do_I2C_SEND_STOP *
         _i2c_driver_stop
       _i2c_restartWrite *
       _mssp_setIRQ *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _i2c_driver_isNACK *
     _mssp_clearIRQ *
   _i2c_busCollisionISR *
     _i2c_driver_clearBusCollision
   i1_USBDeviceTasks *
     i1_USBCtrlEPAllowStatusStage
     i1_USBCtrlEPService
       i1_USBCtrlTrfInHandler
         i1_USBCtrlTrfTxService
       i1_USBCtrlTrfOutHandler
         i1_USBCtrlTrfRxService
           i1_USBCtrlEPAllowStatusStage
       i1_USBCtrlTrfSetupHandler
         i1_USBCheckStdRequest
           i1_USBStdFeatureReqHandler
             i1_USER_USB_CALLBACK_EVENT_HANDLER
               i1_CDCInitEP
                 i1_USBEnableEndpoint
                   i1_USBConfigureEndpoint
                 i1_USBTransferOnePacket
               i1_USBCheckCDCRequest
           i1_USBStdGetDscHandler
           i1_USBStdGetStatusHandler
           i1_USBStdSetCfgHandler
             i1_USER_USB_CALLBACK_EVENT_HANDLER
               i1_CDCInitEP
                 i1_USBEnableEndpoint
                   i1_USBConfigureEndpoint
                 i1_USBTransferOnePacket
               i1_USBCheckCDCRequest
             i1_memset
           i1_USER_USB_CALLBACK_EVENT_HANDLER
             i1_CDCInitEP
               i1_USBEnableEndpoint
                 i1_USBConfigureEndpoint
               i1_USBTransferOnePacket
             i1_USBCheckCDCRequest
         i1_USBCtrlEPServiceComplete
           i1_USBCtrlEPAllowDataStage
             i1_USBCtrlTrfTxService
           i1_USBCtrlEPAllowStatusStage
         i1_USER_USB_CALLBACK_EVENT_HANDLER
           i1_CDCInitEP
             i1_USBEnableEndpoint
               i1_USBConfigureEndpoint
             i1_USBTransferOnePacket
           i1_USBCheckCDCRequest
     i1_USBDeviceInit
     i1_USBIncrement1msInternalTimers
     i1_USBStallHandler
     i1_USBSuspend
       i1_USER_USB_CALLBACK_EVENT_HANDLER
         i1_CDCInitEP
           i1_USBEnableEndpoint
             i1_USBConfigureEndpoint
           i1_USBTransferOnePacket
         i1_USBCheckCDCRequest
     i1_USBWakeFromSuspend
       i1_USER_USB_CALLBACK_EVENT_HANDLER
         i1_CDCInitEP
           i1_USBEnableEndpoint
             i1_USBConfigureEndpoint
           i1_USBTransferOnePacket
         i1_USBCheckCDCRequest
     i1_USER_USB_CALLBACK_EVENT_HANDLER
       i1_CDCInitEP
         i1_USBEnableEndpoint
           i1_USBConfigureEndpoint
         i1_USBTransferOnePacket
       i1_USBCheckCDCRequest

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0h           10      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0h              10     10      10       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               30     23      2A       7       87.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2                0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               40      1      40      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      5      43      13       83.8%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      20      15       40.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0      40      17       80.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0      40      19       80.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     16B      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     16B      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Mar 17 16:48:31 2018

                __end_of_i2c_driver_restart 1D6C                                returnReset@p 0079  
                                _USB_SD_Ptr 18DF                  __end_of_i2c_driver_startRX 1D72  
                                         pc 0002                                 __CFG_CP$OFF 0000  
                                        l56 1DEF                        __size_of_do_I2C_IDLE 0005  
                       _do_I2C_SEND_RESTART 1D91                        __size_of_do_I2C_RCEN 0006  
                             _USBDeviceInit 057E                          __size_of_CDCInitEP 003E  
                               __CFG_LVP$ON 0000      i1USER_USB_CALLBACK_EVENT_HANDLER@event 0060  
      USER_USB_CALLBACK_EVENT_HANDLER@event 00B4      i1USER_USB_CALLBACK_EVENT_HANDLER@pdata 0062  
      USER_USB_CALLBACK_EVENT_HANDLER@pdata 00B6                                         l137 08D2  
                                       l401 036D                                         l242 1174  
                                       l402 03C7                                         l403 0376  
               __end_of_USBStdGetDscHandler 0C12                                         l440 1F17  
                                       l601 17D5                                         l530 151B  
                                       l380 05C5                                         l533 1563  
                                       l534 1524                                         l535 1527  
                                       l391 0304                                         l465 0F11  
                                       l626 0172                                         l493 064F  
                                       l397 0342                                         l478 0A3F  
                                       l590 17FF                                         l592 17A7  
                                       l578 09A5                                         _BDT 0020  
                                       _RC3 0073                                         _UIE 0E92  
                                       _UIR 0E90                    i1_USBStdGetStatusHandler 14C2  
                                _USBSuspend 1F42               i2c_setDataCompleteCallback@cb 0075  
                      USBStdSetCfgHandler@i 00BE                        USBStdSetCfgHandler@p 00BB  
                     __size_of_do_I2C_RESET 0007                                __CFG_BORV$LO 0000  
                                       wreg 0009                              _USBDeviceTasks 02E1  
                              __CFG_IESO$ON 0000                              _USBDeviceState 01E5  
                                      S8482 1891                       ??_USBCtrlTrfRxService 00A8  
                            ??_getsUSBUSART 00B2                    USBEnableEndpoint@options 00AD  
                   ??_rd2RegCompleteHandler 007A                                        l1536 1E76  
                USBConfigureEndpoint@handle 00AC                                        l6106 1F1C  
                                      l6202 1290                                        l6210 12BF  
                                      l6214 12C9                                        l8000 05CA  
                                      l6208 12AB                                        l8022 05EE  
                                      l7312 137C                                        l7314 1385  
                                      l7322 1035                                        l7402 08C0  
                                      l8114 110C                                        l8202 0348  
                                      l8028 0612                                        l8132 1672  
                                      l8116 110E                                        l7342 0CB3  
                                      l7334 0CA3                                        l7326 103D  
                                      l7430 114C                                        l8134 1675  
                                      l8054 1692                                        l7352 0CFC  
                                      l8312 055F                                        l8304 0550  
                                      l7504 0AC3                                        l7424 1146  
                                      l8136 1678                                        l8216 0365  
                                      l8208 034F                                        l8064 16A9  
                                      l7354 0D14                                        l8314 0565  
                                      l8306 0554                                        l7426 1149  
                                      l8082 1FF4                                        l8242 03AE  
                                      l8066 16C9                                        l8058 16A7  
                                      l8316 057B                                        l7460 0A60  
                                      l7380 088F                                        l7372 0883  
                                      l7700 010D                                        l7604 0B9E  
                                      l7540 1720                                        l8084 1FFD  
                                      l8244 03BD                                        l8236 0395  
                                      l8180 0318                                        l8068 16DE  
                                      l8332 1240                                        l8270 04ED  
                                      l7470 0A7D                                        l7390 08A8  
                                      l7710 0127                                        l7630 0C05  
                                      l8166 02FE                                        l8158 02F1  
                                      l8264 04CD                                        l8256 04C2  
                                      l7448 0A36                                        l7384 0896  
                                      l7624 0BFF                                        l7616 0BDB  
                                      l7608 0BA8                                        l7536 170D  
                                      l8192 0333                                        l7714 0133  
                                      l7626 0C02                                        l7618 0BDE  
                                      l7642 1538                                        l8186 031E  
                                      l5866 1F66                                        l5882 13C7  
                                      l8276 04F6                                        l7468 0A79  
                                      l7396 08B6                                        l7740 01A2  
                                      l7724 015D                                        l7708 0120  
                                      l7652 1557                                        l7580 0DEE  
                                      l7564 0DC4                                        l7556 0DB3  
                                      l5868 1F72                                        l8286 0513  
                                      l8294 052F                                        l7478 0A96  
                                      l7814 065C                                        l7734 0179  
                                      l7726 0163                                        l7670 0092  
                                      l7486 1ED6                                        l7574 0DDA  
                                      l5878 13AF                                        l5886 1391  
                                      l8358 1E56                                        l8296 0534  
                                      l7816 0679                                        l7672 0094  
                                      l5888 13D0                                        l7826 06AB  
                                      l7914 11E9                                        l7738 0199  
                                      l7850 17B2                                        l7754 0EDB  
                                      l5898 1E80                                        l7940 095A  
                                      l7828 06B8                                        l8484 1155  
                                      l7692 00EA                                        l7596 0E21  
                                      l7860 17C1                                        l7852 17B5  
                                      l7942 0960                                        l7926 1214  
                                      l8486 116F                                        l7686 00C5  
                                      l7862 17C4                                        l7758 0EDF  
                                      l7960 09AA                                        l7952 0987  
                                      l7864 17C7                                        l7848 17AF  
                                      l7776 0F20                                        l7784 0F29  
                                      l7698 0100                                        l7874 17E5  
                                      l7980 059F                                        l7972 058E  
                                      l7956 0998                                        l7878 17F4  
                                      l7988 05AC                                        STR_1 18E5  
                                      STR_2 18DB                                        _LATA 010C  
                                      _LATC 010E                                        i1l91 002E  
                                      i1l84 0015                                        i1l86 0022  
                     ??_USBCtrlTrfTxService 00A6                                        u7345 0648  
                                      u6705 1355                                        u7515 05AF  
                                      u6715 135B                                        u6725 1363  
                      ?_do_I2C_SEND_RESTART 0070                                        _UCFG 0E91  
                                      _UEP0 0E98                                        _UEP1 0E99  
                                      u6955 1717                                        u7675 1637  
                                      _UEIE 0E97                                        _UEIR 0E93  
                                      _UCON 0E8E                                ?i1_CDCInitEP 0070  
                                      _WPUA 020C             i1USBCtrlTrfTxService@byteToSend 0072  
                   ??_wr2RegCompleteHandler 007A                                __CFG_WRT$OFF 0000  
                             __CFG_FCMEN$ON 0000                             _CDCDataInHandle 01CD  
         __size_of_do_I2C_SEND_RESTART_READ 0004    i1USBStdFeatureReqHandler@current_ep_data 006A  
    USBStdFeatureReqHandler@current_ep_data 00BE                                        _pDst 01E1  
                 ?_do_I2C_SEND_RESTART_READ 0070                             ??_mssp_clearIRQ 0070  
                                      _main 1E4E                   __size_of_do_I2C_SEND_STOP 0004  
                    __size_of_do_I2C_DO_ACK 0004                                        fsr0h 0005  
                                      fsr1h 0007                                        indf0 0000  
                                      fsr0l 0004                                        indf1 0001  
                               _BaudRateGen 0247                                        fsr1l 0006  
                           _USBDeviceAttach 1F06                                        btemp 007E  
                             __CFG_BOREN$ON 0000                       ?_do_I2C_SEND_ADR_READ 0070  
                   ?i1_USBCtrlTrfOutHandler 0070                                        start 0034  
            __size_ofi1_USBCtrlTrfRxService 00A3                               _i2c_setBuffer 0800  
             __end_ofi1_USBCtrlTrfRxService 1000                  __end_of_USBCheckStdRequest 1800  
                    ??_USBCtrlTrfOutHandler 00AC                               __CFG_MCLRE$ON 0000  
                           __end_of_i2c_ISR 1FA0                         USBDeviceInit@i_1491 00A9  
                 ??_USBStdFeatureReqHandler 00BA              __size_ofi1_USBCtrlTrfTxService 0074  
          __size_of_rdBlkRegCompleteHandler 0017                       i1_USBStdGetDscHandler 0B14  
             __end_ofi1_USBCtrlTrfTxService 0A20                    ??_do_I2C_DO_NACK_RESTART 0070  
                  ??_USBStdGetStatusHandler 00A6                              ?_USBDeviceInit 0070  
                              _do_I2C_RESET 1DB9              __size_of_OSCILLATOR_Initialize 000C  
             __end_of_OSCILLATOR_Initialize 1DF3                                 _writeBuffer 03A0  
                                     ?_main 0070                  i1USBEnableEndpoint@options 0077  
                             __CFG_WDTE$OFF 0000           __size_of_USBCtrlEPServiceComplete 0095  
                    __end_of_USBDeviceTasks 03CA                   ?_USBCtrlEPServiceComplete 0070  
                      i1_USBCheckStdRequest 080E                                       i1l137 179E  
                                     i1l401 0455                                       i1l242 1144  
                                     i1l402 04AF                                       i1l403 045E  
                                     i1l601 0849                                       i1l530 14C6  
                                     i1l380 072C                                       i1l533 150A  
                                     i1l534 14CF                                       i1l535 14D2  
                                     i1l391 03ED                                       i1l465 0E7E  
                                     i1l626 029E                                       i1l493 0F72  
                                     i1l397 042A                                       i1l478 09C9  
                                     i1l590 086F                                       i1l592 0816  
                                     i1l578 0934                                       i1l847 13FF  
                                     i1l863 12E5                                       _UADDR 0E96  
                                     u769m0 166E                                       _TRISA 008C  
                                     _TRISC 008E                                       _USTAT 0E8F  
                                i1memset@p1 0070          __size_of_USBCtrlEPAllowStatusStage 007A  
           __end_of_USBCtrlEPAllowDataStage 173F                                       _sd000 18D7  
                                     _sd001 1843                                       _sd002 1877  
   __end_ofi1_USBIncrement1msInternalTimers 1ED1    __size_ofi1_USBIncrement1msInternalTimers 0018  
         ??i1_USBIncrement1msInternalTimers 0070            ?i1_USBIncrement1msInternalTimers 0070  
            ?_USBIncrement1msInternalTimers 0070             i1_USBIncrement1msInternalTimers 1EB9  
                            _WDT_Initialize 1DA5            __end_ofi1_USBCtrlTrfSetupHandler 14C2  
                      _i2c_driver_getRXData 1D72                  ?_do_I2C_SEND_RESTART_WRITE 0070  
                     ??_do_I2C_SEND_RESTART 0070                                       pclath 000A  
                _i2c_driver_busCollisionISR 024D                           __end_of_CDCInitEP 128D  
            __end_ofi1_USBCtrlTrfOutHandler 11AB                      ?_do_I2C_SEND_ADR_WRITE 0070  
                                     status 0003                                       wtemp0 007E  
               UserApplication@numBytesRead 00BB                            __end_ofi1_memset 1EB9  
                           __end_of_strncmp 13D3          __size_ofi1_USBCtrlEPAllowDataStage 005C  
                        i2c_driver_TXData@d 0070                              ?_i2c_setBuffer 0070  
                              ?_setCallBack 0070                   __size_ofi1_USBDeviceTasks 00E8  
                ?i1_USBCtrlEPAllowDataStage 0070                __size_of_USBStdSetCfgHandler 008F  
                             _fsmStateTable 02A0                             __initialization 0036  
                                _i2c_status 0220                                __end_of_main 1E60  
                     _control_signal_bitmap 01E6                              __CFG_LPBOR$OFF 0000  
               ?_INTERRUPT_InterruptManager 0070                   __size_of_USBCtrlEPService 005C  
                             setCallBack@cb 0070                               _do_I2C_DO_ACK 1D99  
                                    ??_main 00C3                       ?i1_USBCheckStdRequest 0070  
                         ?_i2c_restartWrite 0079                             ?_USBDeviceTasks 0070  
                               ?_USBSuspend 0070                         __CFG_USBLSCLK$48MHz 0000  
                           i1_USBDeviceInit 06E7                          ??_i2c_restartWrite 007A  
                           _i2c_driver_stop 1D6C                      __end_of_WDT_Initialize 1DA9  
                   ?_do_I2C_DO_ADDRESS_NACK 0070                                _cdc_mem_type 01E7  
                   __end_of_USBDeviceAttach 1F23                            _CDCDataOutHandle 01CF  
                     ?_i2c_driver_getRXData 0070                                      _ACTCON 039B  
                                    i1S8488 18AB                                      _APFCON 011D  
                                    _ANSELA 018C                                      _ANSELC 018E  
                           getsUSBUSART@len 00B1                                      _BORCON 0116  
                     __size_of_CDCTxService 00CC                                      i1l5110 10B0  
                                    i1l5220 0D92                                      i1l5204 0D60  
                                    i1l5310 01FE                                      i1l5128 07B9  
                                    i1l4504 1339                                      i1l5240 0B5C  
                                    i1l5232 0B29                                      i1l5160 159D  
                                    i1l4506 1342                                      i1l5322 0233  
                                    i1l5250 0B83                                      i1l5242 0B5F  
                                    i1l5332 024E                                      i1l5324 023E  
                                    i1l5316 021F                                      i1l5228 0B1F  
                                    i1l5180 0D25                                      i1l5164 15B0  
                                    i1l6310 1056                                      i1l5350 028F  
                                    i1l5334 0255                                      i1l5254 0B86  
                                    i1l6320 105C                                      i1l5600 0F93  
                                    i1l5248 0B80                                      i1l6314 1059  
                                    i1l6330 13DC                                      i1l4810 09C2  
                                    i1l5610 0FC4                                      i1l4554 1FA8  
                                    i1l5362 02C3                                      i1l5338 0260  
                                    i1l5266 14E2                                      i1l6410 06F6  
                                    i1l6340 13E2                                      i1l5612 0FD1  
                                    i1l5364 02CC                                      i1l5348 0289  
                                    i1l5276 14FE                                      i1l5188 0D36  
                                    i1l6334 13DF                                      i1l6326 13D9  
                                    i1l4822 09E6                                      i1l4830 09FF  
                                    i1l4558 1FAF                                      i1l4574 0C2F  
                                    i1l4566 0C1F                                      i1l5358 02A4  
                                    i1l5294 01CE                                      i1l5198 0D4C  
                                    i1l5542 0E4C                                      i1l4832 0A03  
                                    i1l4840 0A1C                                      i1l4584 0C78  
                                    i1l4680 1765                                      i1l5296 01D0  
                                    i1l5632 081F                                      i1l5560 0E8C  
                                    i1l6520 1FD4                                      i1l6370 12EA  
                                    i1l4586 0C90                                      i1l5634 0822  
                                    i1l5538 0E48                                      i1l6426 0713  
                                    i1l6418 0707                                      i1l6522 1FDD  
                                    i1l6380 10C3                                      i1l6348 1419  
                                    i1l4692 1783                                      i1l4676 175E  
                                    i1l4668 1752                                      i1l5644 0833  
                                    i1l5636 0825                                      i1l6540 1619  
                                    i1l6460 074F                                      i1l6390 10CA  
                                    i1l6366 12E7                                      i1l4686 1775  
                                    i1l5646 0836                                      i1l5662 0864  
                                    i1l6542 161C                                      i1l6438 0731  
                                    i1l6384 10C6                                      i1l6376 12ED  
                                    i1l4792 111C                                      i1l4848 1EA5  
                                    i1l5648 0839                                      i1l5568 0E95  
                                    i1l4698 178C                                      i1l4786 1116  
                                    i1l5658 0856                                      i1l6538 1616  
                                    i1l6466 0773                                      i1l6396 10CD  
                                    i1l4788 1119                                      i1l5598 0F7A  
                                    i1l5934 117D                                      i1l6494 1091  
                                    i1l6910 047D                                      i1l6816 1F90  
                                    i1l5960 08F0                                      i1l6496 1093  
                                    i1l6840 03E7                                      i1l6832 03DA  
                                    i1l5962 08F5                                      i1l5946 11A8  
                                    i1l5980 0939                                      i1l5972 0919  
                                    i1l6916 0496                                      i1l6860 0406  
                                    i1l6918 04A5                                      i1l6854 0400  
                                    i1l5976 0928                                      i1l8490 1125  
                                    i1l6890 044D                                      i1l6882 0437  
                                    i1l6866 041B                                      i1l8492 113F  
                                    i1l6876 0430                                      u340_25 1312  
                                    u341_25 1318                                      u342_25 1320  
                                    u419_25 15A7                                      u542_25 0716  
                                    u552_25 15DB                                      _OSCCON 0099  
                                    u474_25 0F6C                                      _PLLRDY 04D6  
                             CDCTxService@i 00B2                      ??_do_I2C_SEND_ADR_READ 0070  
                                    _WDTCON 0097                    rdBlkRegCompleteHandler@p 0079  
              i1USBTransferOnePacket@handle 0079                                   ??_i2c_ISR 0074  
                            __CFG_PWRTE$OFF 0000                           _shortPacketStatus 01E3  
         __end_ofi1_USBCtrlEPAllowDataStage 15CC                      ?i1_USBStdGetDscHandler 0070  
                           USBDeviceTasks@i 01EF                 USBStdFeatureReqHandler@pUEP 00BC  
                  USBTransferOnePacket@data 00A7                  USBCtrlTrfInHandler@lastDTS 00AB  
                           ??_USBDeviceInit 00A6                 __end_of_do_I2C_DO_NACK_STOP 1DA1  
       __end_of_i2c_setDataCompleteCallback 1DDB                 _i2c_setDataCompleteCallback 1DCF  
                            __CFG_STVREN$ON 0000                        __end_of_getsUSBUSART 16E0  
             __size_ofi1_USBWakeFromSuspend 0020             __size_of_do_I2C_DO_NACK_RESTART 0004  
                         _USBEnableEndpoint 102C             __size_of_USBStdGetStatusHandler 0059  
                   ??i1_USBStdSetCfgHandler 0066                                      _memset 1ED1  
             __size_ofi1_USBCheckCDCRequest 0060                              ?_do_I2C_DO_ACK 0070  
                      i1USBEnableEndpoint@p 007A                          ?_USBEnableEndpoint 00AD  
                                    _strchr 1E74                                      _strlen 1F61  
                                    _strstr 128D               __size_of_USBTransferOnePacket 0084  
            __end_of_do_I2C_DO_ADDRESS_NACK 1073                                _CDCTxService 04B2  
                           ?_WDT_Initialize 0070                                ?_returnReset 0079  
                       ??_USBEnableEndpoint 00AE                i1USBConfigureEndpoint@handle 0076  
                              ?_mssp_setIRQ 0070                  __end_ofi1_USBCtrlEPService 1628  
                               _CtrlTrfData 0058                                   ??_strncmp 00B0  
                         i1_USBStallHandler 1073                        _controlTransferState 01E2  
                         _SYSTEM_Initialize 1DFF                     __end_of__initialization 0077  
                i1USBTransferOnePacket@data 0071                             ??_i2c_setBuffer 0072  
                          _do_I2C_SEND_STOP 1D95                          ?i1_USBStallHandler 0070  
                        __size_of_do_I2C_RX 003F                          __size_of_do_I2C_TX 004C  
                  i1_USBCtrlTrfSetupHandler 146F                        __size_ofi1_CDCInitEP 0036  
                        ?_SYSTEM_Initialize 0070                    __size_of_USBStallHandler 002B  
                  __size_of_do_I2C_TX_EMPTY 002A                              __pcstackBANK0h 0060  
                    i1USBCtrlTrfRxService@i 0074                         __size_of_USBSuspend 001F  
                   _rdBlkRegCompleteHandler 1E8A                              __pcstackCOMMON 0070  
                 __end_of_USBEnableEndpoint 104F                         ??i1_USBStallHandler 0070  
                             __end_of_sd000 18DB                               __end_of_sd001 1877  
                             __end_of_sd002 1891                  ??i1_USBStdGetStatusHandler 0070  
                              __pidataBANK5 100C                         ??_SYSTEM_Initialize 00AB  
          __size_of_USBCtrlEPAllowDataStage 005F               __size_of_USBConfigureEndpoint 0043  
                   __end_ofi1_USBDeviceInit 0794                     __end_of_i2c_driver_stop 1D6F  
               __end_of_USBCtrlTrfInHandler 09AC                      ??i1_USBCheckStdRequest 006D  
                        _i2c_driver_sendACK 1D81                              _OPTION_REGbits 0095  
                                 ?i1_memset 0070                          _i2c_driver_restart 1D69  
                                _cdc_notice 023D                                  _cdc_rx_len 01EA  
                                _cdc_tx_len 01E8                          _i2c_driver_startRX 1D6F  
                    ??_i2c_driver_getRXData 0070                   __end_ofi1_USBStallHandler 1098  
                  ??_USBCtrlTrfSetupHandler 00C2                         ?_i2c_driver_sendACK 0070  
                   _USBTicksSinceSuspendEnd 01D6                              setCallBack@idx 0074  
                    _do_I2C_DO_NACK_RESTART 1DA1                            ?_USBDeviceAttach 0070  
                            _do_I2C_TX$2684 0072                   __end_of_SYSTEM_Initialize 1E0E  
                    _USBStdGetStatusHandler 1517                               _buttonPressed 01D5  
                       ?_i2c_driver_restart 0070                                  __pbssBANK1 00C3  
                                __pbssBANK3 01B0                                  __pbssBANK4 0220  
                                __pbssBANK6 0320                                  __pbssBANK7 03A0  
                       ?_i2c_driver_startRX 0070              __size_of_rd2RegCompleteHandler 0010  
             __end_of_rd2RegCompleteHandler 1E4E              __size_of_wr2RegCompleteHandler 0010  
             __end_of_wr2RegCompleteHandler 1E1E                       _rd1RegCompleteHandler 1E2E  
                          i1_USBDeviceTasks 03CA                 __size_of_USBWakeFromSuspend 0020  
                             ?i1_USBSuspend 0070                                 _pBDTEntryIn 01B7  
                  __size_of_UserApplication 0038            __end_of_USBCtrlEPServiceComplete 0F5D  
                     i1_USBCtrlTrfInHandler 08D3                ??i1_USBCtrlEPServiceComplete 0075  
                     _wr1RegCompleteHandler 1E1E                __size_of_i2c_busCollisionISR 0003  
               __size_of_USBCheckCDCRequest 0063                                  __pmaintext 1E4E  
                             ??_do_I2C_IDLE 0070                        USBCtrlTrfRxService@i 00AA  
                      __size_of_setCallBack 0028                               ??_do_I2C_RCEN 0070  
                      ??_i2c_driver_sendACK 0070                             __CFG_PLLMULT$3x 0000  
                           ??_do_I2C_DO_ACK 0070                                  __pintentry 0004  
                      ??_i2c_driver_restart 0070                __size_ofi1_USBEnableEndpoint 0020  
              __size_of_i2c_driver_sendNACK 0004                        ??_i2c_driver_startRX 0070  
                                   ?_memset 00A6                                  _device_dsc 18C5  
                       i2c_setBuffer@buffer 0073                            _USBCtrlEPService 1628  
                                _ep_data_in 01CA                __size_of_i2c_driver_resetBus 0001  
                                   ?_strchr 00A6                                     ?_strlen 00A6  
                                   ?_strstr 00B3                 __end_of_USBCtrlTrfRxService 06E7  
                         __end_of_do_I2C_RX 130A                           __end_of_do_I2C_TX 141F  
                        _USBCheckStdRequest 179F                           _configDescriptor1 1800  
                                ??i1_memset 0076                 __end_of_USBCtrlTrfTxService 0A9A  
                       _USBStdSetCfgHandler 0DA8                                     u554_2m0 1612  
                                   _OSCTUNE 0098                                     _SSP1ADD 0212  
                                   _SSP1BUF 0211                                     _SSP1MSK 0213  
                       ?_USBCheckStdRequest 0070                __size_of_USBStdGetDscHandler 007F  
                   ??_do_I2C_SEND_ADR_WRITE 0071                                     _UIEbits 0E92  
               ??_do_I2C_SEND_RESTART_WRITE 0070         __size_ofi1_USBCtrlEPServiceComplete 0091  
                                   _UIRbits 0E90                               _cdc_trf_state 01E9  
                  ??i1_USBTransferOnePacket 0074                                     _i2c_ISR 1F80  
                 ??_rdBlkRegCompleteHandler 007A                              ??i1_USBSuspend 0066  
                     __end_of_mssp_clearIRQ 1D7B                                     _pCDCDst 01D1  
                                   _pCDCSrc 01D3                       __size_of_getsUSBUSART 005C  
               ??i1_USBCtrlEPAllowDataStage 0073             ??_USBIncrement1msInternalTimers 00A6  
                      ?_USBStdSetCfgHandler 0070                                   _CDCInitEP 124F  
              i1USBCtrlTrfInHandler@lastDTS 0075                  __size_of_USBEnableEndpoint 0023  
                                _readBuffer 0320                        ??_USBCheckStdRequest 00C1  
                     i1_USBCtrlTrfRxService 0F5D               __size_of_USBCtrlTrfOutHandler 0036  
                          ??_USBDeviceTasks 0261                           ??_USBStallHandler 00A6  
                         ??_do_I2C_TX_EMPTY 0070                            ?i1_USBDeviceInit 0070  
                     i1_USBCtrlTrfTxService 09AC                            ?_i2c_driver_stop 0070  
                        getsUSBUSART@buffer 00B4                             __size_of_memset 0019  
                 __end_of_configDescriptor1 1843                                     __ptext1 1217  
                                   __ptext2 128D                                     __ptext3 138F  
                                   __ptext4 1F61                                     __ptext5 1E74  
                                   __ptext6 1684                                     __ptext7 02E1  
                                   __ptext8 1FE0                                     __ptext9 1F42  
                                   _inPipes 00C3                         __end_of_do_I2C_IDLE 1DB3  
               _USBDeferOUTDataStagePackets 01D7                         __end_of_do_I2C_RCEN 1DB9  
                           __size_of_strchr 0016                             __size_of_strlen 001F  
                           __size_of_strstr 003E                       _OSCILLATOR_Initialize 1DE7  
                              ??_USBSuspend 00BA                 __end_of_do_I2C_SEND_RESTART 1D95  
                  ??_PIN_MANAGER_Initialize 00A6                       i1USBEnableEndpoint@ep 007C  
                __size_ofi1_USBStallHandler 0025                          __end_of_USB_CD_Ptr 18EA  
                  _do_I2C_SEND_RESTART_READ 1D89                  __size_of_SYSTEM_Initialize 000F  
           __size_of_USBCtrlTrfSetupHandler 0050                                     clrloop0 1DF4  
                  ??i1_USBConfigureEndpoint 0071                                     _strncmp 138F  
                      __size_of_returnReset 0002                        end_of_initialization 0077  
                              _getsUSBUSART 1684                          __end_of_USB_SD_Ptr 18E5  
                      __size_of_mssp_setIRQ 0003                         _pBDTEntryEP0OutNext 00C8  
                 __size_of_i2c_restartWrite 0002                                     init_ram 1000  
                                   memset@c 00A8                                     memset@n 00AA  
                                   memset@p 00AC                      ?_rd1RegCompleteHandler 0079  
                                   initloop 1001                             _USB1msTickCount 01C3  
           _dummy_encapsulated_cmd_response 024F                     ??i1_USBStdGetDscHandler 0070  
                  ?_USBStdFeatureReqHandler 0070                      ?i1_USBCtrlTrfInHandler 0070  
                    ?_wr1RegCompleteHandler 0079                       ??_USBStdSetCfgHandler 00BA  
                                ?_CDCInitEP 0070                          __end_of_USBSuspend 1F61  
                   _USBCtrlEPAllowDataStage 16E0                   _do_I2C_SEND_RESTART_WRITE 1D8D  
                  _USBCtrlEPServiceComplete 0EC8                           ??_UserApplication 00B9  
                                   strlen@s 00A6                  _USBStatusStageEnabledFlag1 01DA  
                _USBStatusStageEnabledFlag2 01D9                            ??_WDT_Initialize 00A6  
                        USBEnableEndpoint@p 00B0                                  _returnStop 1D65  
            __size_ofi1_USBStdSetCfgHandler 008F             __end_of_rdBlkRegCompleteHandler 1EA1  
                  __end_of_do_I2C_SEND_STOP 1D99               __end_ofi1_USBStdSetCfgHandler 0DA8  
                 i1_USBCtrlEPAllowDataStage 1570                            __CFG_FOSC$INTOSC 0000  
      __size_of_i2c_setDataCompleteCallback 000C                          _BothEP0OutUOWNsSet 01DD  
                ??i1_USBCtrlTrfSetupHandler 006E                   USBStdSetCfgHandler@i_2163 00BD  
              __end_ofi1_USBWakeFromSuspend 1FE0                                 returnStop@p 0079  
                 USBConfigureEndpoint@EPNum 00AB                ?i1_USBCtrlEPAllowStatusStage 0070  
                ?_USBCtrlEPAllowStatusStage 0070                __end_ofi1_USBCheckCDCRequest 179F  
     i1USER_USB_CALLBACK_EVENT_HANDLER@size 0064         USER_USB_CALLBACK_EVENT_HANDLER@size 00B8  
                                 _USTATcopy 01ED                i2c_setDataCompleteCallback@p 0077  
                  i1USBTransferOnePacket@ep 0078                __end_of_USBTransferOnePacket 0D19  
           __size_ofi1_USBTransferOnePacket 0083          __end_ofi1_USBCtrlEPServiceComplete 0EC8  
                i1_USBCtrlEPServiceComplete 0E37               __size_of_do_I2C_SEND_ADR_READ 0008  
                        i1_USBCtrlEPService 15CC                          __CFG_PLLEN$ENABLED 0000  
                     i1USBDeviceInit@i_1491 0073                      ?i1_USBCtrlTrfRxService 0070  
                               _do_I2C_IDLE 1DAE                      _USBCtrlTrfSetupHandler 141F  
                               _do_I2C_RCEN 1DB3                      ?i1_USBCtrlTrfTxService 0070  
                     __end_of_USBDeviceInit 0635       __end_of_USBIncrement1msInternalTimers 1F06  
    __size_of_USBIncrement1msInternalTimers 001C               _USBIncrement1msInternalTimers 1EEA  
                                 i1memset@c 0072                                   i1memset@n 0074  
                                 i1memset@p 0076                         ?i1_USBCtrlEPService 0070  
      __end_of_i2c_driver_clearBusCollision 1D7E       __size_of_i2c_driver_clearBusCollision 0003  
              _i2c_driver_clearBusCollision 1D7B                      ?_OSCILLATOR_Initialize 0070  
                            __end_of_memset 1EEA                __size_of_do_I2C_DO_NACK_STOP 0004  
                         _USBBusIsSuspended 01DF                        __end_ofi1_USBSuspend 1F42  
                  __end_ofi1_USBDeviceTasks 04B2                              __end_of_strchr 1E8A  
                            __end_of_strlen 1F80                     ?_do_I2C_DO_NACK_RESTART 0070  
                            __end_of_strstr 12CB                         start_initialization 0036  
                   ?_USBStdGetStatusHandler 0070               USBCtrlTrfRxService@byteToRead 00AB  
                       _i2c_busCollisionISR 1D7E             __size_of_PIN_MANAGER_Initialize 0014  
                  ??i1_USBCtrlTrfOutHandler 0076                           __size_ofi1_memset 0018  
                               _cdc_data_rx 20C0                                 _cdc_data_tx 2080  
              __end_of_USBConfigureEndpoint 138F                                setCallBack@p 0072  
           __end_of_USBStdFeatureReqHandler 01B8                         i1_USBEnableEndpoint 1FA0  
           __size_ofi1_USBConfigureEndpoint 0042                         _i2c_driver_sendNACK 1D85  
                             ??i1_CDCInitEP 007D           __end_of_USBCtrlEPAllowStatusStage 0B14  
                      ??i1_USBCtrlEPService 00A0                     i2c_setBuffer@bufferSize 0070  
                    rd1RegCompleteHandler@p 0079               ??i1_USBCtrlEPAllowStatusStage 0070  
                  __end_of_USBCtrlEPService 1684                         _i2c_driver_resetBus 1D64  
             i1USBStdFeatureReqHandler@pUEP 0068                       __end_of_i2c_setBuffer 080E  
                 ??_USBCtrlEPAllowDataStage 00A9                                 ??_CDCInitEP 00B3  
                            USBDeviceInit@i 00AA                              USBDeviceInit@p 00A7  
                      ?_i2c_busCollisionISR 0070                 i1USBStdSetCfgHandler@i_2163 0069  
                    _pBDTEntryEP0OutCurrent 01E4          __size_ofi1_USBStdFeatureReqHandler 0129  
                   USBTransferOnePacket@dir 00A6                     USBTransferOnePacket@len 00A9  
                ?i1_USBStdFeatureReqHandler 0070                 i1USBConfigureEndpoint@EPNum 0075  
                       _USBStdGetDscHandler 0B93                      wr1RegCompleteHandler@p 0079  
                      ?i1_USBEnableEndpoint 0077                        ?_i2c_driver_sendNACK 0070  
                             ?_do_I2C_RESET 0070                                 __pdataBANK5 02A0  
                                  ??_memset 00AC                                 ?_returnStop 0079  
                      ?_i2c_driver_resetBus 0070                      i1_USBTransferOnePacket 0C12  
                                  ??_strchr 00A8                                    ??_strlen 00A8  
                         _i2c_driver_TXData 1DA9              __end_of_do_I2C_DO_NACK_RESTART 1DA5  
                                  ??_strstr 00B5               ?_i2c_driver_clearBusCollision 0070  
             __size_ofi1_USBCheckStdRequest 0062                           _i2c_driver_i2cISR 024B  
                    _USBActiveConfiguration 01EE              __end_of_USBStdGetStatusHandler 1570  
                 i1USBTransferOnePacket@dir 0070                   i1USBTransferOnePacket@len 0073  
                        ?_i2c_driver_TXData 0070                                   ___latbits 0002  
                             __pcstackBANK1 00A0                               __pcstackBANK3 01EF  
              __size_of_USBCtrlTrfInHandler 0071                               __pcstackBANK4 025E  
                                 _do_I2C_RX 12CB                                   _do_I2C_TX 13D3  
         __size_ofi1_USBStdGetStatusHandler 0055                           _i2c_driver_isNACK 1DDB  
                 ?i1_USBStdGetStatusHandler 0070                        ?_USBStdGetDscHandler 0070  
             __size_of_i2c_driver_getRXData 0003                          ?_i2c_driver_isNACK 0070  
                       ??_i2c_driver_TXData 0070              __size_of_do_I2C_SEND_ADR_WRITE 0007  
             __end_of_do_I2C_SEND_ADR_WRITE 1DC7                            _i2c_restartWrite 0002  
                __end_of_USBWakeFromSuspend 2000                             _USBStallHandler 10EA  
                                  ?_i2c_ISR 0070                                _pBDTEntryOut 01BD  
                           _do_I2C_TX_EMPTY 10C0                  __end_of_USBCheckCDCRequest 08D3  
                             ??_setCallBack 0073                       _rd2RegCompleteHandler 1E3E  
                  __size_of_USBDeviceAttach 001D                         ??_i2c_driver_isNACK 0070  
                     ??_i2c_busCollisionISR 0070                         __end_ofi1_CDCInitEP 11E1  
                    _PIN_MANAGER_Initialize 1E60                       _wr2RegCompleteHandler 1E0E  
               __size_of_i2c_driver_sendACK 0004                       ??i1_USBEnableEndpoint 0078  
                            ??_do_I2C_RESET 0070                                   __ptext100 1D67  
                                 __ptext101 1D65                                   __ptext102 1E0E  
                                 __ptext103 1DCF                                   __ptext104 1098  
                                 __ptext105 0800                                   __ptext106 1D6C  
                                 __ptext107 1D69                                   __ptext108 1D81  
                     ??_i2c_driver_sendNACK 0070                      i1_USBConfigureEndpoint 130A  
         __end_ofi1_USBStdFeatureReqHandler 02E1                        i1_USBWakeFromSuspend 1FC0  
                  ??_do_I2C_DO_ADDRESS_NACK 0070        __size_ofi1_USBCtrlEPAllowStatusStage 006C  
               __size_of_i2c_driver_restart 0003                   __end_of_i2c_driver_TXData 1DAE  
                      i1_USBCheckCDCRequest 173F                       __end_of_do_I2C_DO_ACK 1D9D  
                     ??_i2c_driver_resetBus 0070                 __size_of_i2c_driver_startRX 0003  
              ??_INTERRUPT_InterruptManager 00A5                                   __pswtext1 1891  
                                 __pswtext2 18AB                  ??_do_I2C_SEND_RESTART_READ 0070  
                      _USBTransferOnePacket 0C95                   __end_of_i2c_driver_isNACK 1DE7  
        __size_of_do_I2C_SEND_RESTART_WRITE 0004                                  ?_do_I2C_RX 0070  
                                ?_do_I2C_TX 0070                __end_of_USBCtrlTrfOutHandler 1217  
                     ??_USBStdGetDscHandler 00A6                                 _ep_data_out 01C7  
           __size_ofi1_USBCtrlTrfOutHandler 0036                __size_of_USBCtrlTrfRxService 00B2  
             USBConfigureEndpoint@direction 00A6                     ??_rd1RegCompleteHandler 007A  
                                  ?_strncmp 00AC             i1USBCtrlTrfRxService@byteToRead 0075  
                   ??i1_USBCtrlTrfInHandler 0073                     ??_wr1RegCompleteHandler 007A  
              __size_of_USBCtrlTrfTxService 007A                             _UserApplication 1217  
                       __size_of_returnStop 0002                  ??_USBCtrlEPServiceComplete 00AB  
                                 clear_ram0 1DF3                                    _PIE1bits 0091  
                                  _PIE2bits 0092              __size_ofi1_USBStdGetDscHandler 007F  
             __end_ofi1_USBStdGetDscHandler 0B93         __size_of_INTERRUPT_InterruptManager 0030  
                                  _PIR1bits 0011                                    _PIR2bits 0012  
                                  _UEP0bits 0E98                  _USBDeferINDataStagePackets 01D8  
                     ?i1_USBWakeFromSuspend 0070                                    _SSP1CON1 0215  
                                  _SSP1CON2 0216                 __size_of_USBCheckStdRequest 0061  
              ?_i2c_setDataCompleteCallback 0075                                    _SSP1STAT 0214  
                                  _UCONbits 0E8E                         __end_of_setCallBack 10C0  
                     ?i1_USBCheckCDCRequest 0070                        _USBConfigureEndpoint 134C  
                     __size_ofi1_USBSuspend 001F            __size_of_USBStdFeatureReqHandler 013D  
                     ?_USBTransferOnePacket 00A6                           ?_do_I2C_SEND_STOP 0070  
                             ?_CDCTxService 0070                                    i1_memset 1EA1  
                              _RemoteWakeup 01E0                               ??_returnReset 007A  
                        ??_do_I2C_SEND_STOP 0070                      __size_of_mssp_clearIRQ 0003  
                  __size_ofi1_USBDeviceInit 00AD                    __size_of_i2c_driver_stop 0003  
         __end_of_do_I2C_SEND_RESTART_WRITE 1D91                               ??_mssp_setIRQ 0070  
            ??_i2c_driver_clearBusCollision 0070                     __end_of_USBStallHandler 1115  
                   __end_of_do_I2C_TX_EMPTY 10EA                    ?_rdBlkRegCompleteHandler 0079  
               ??_USBCtrlEPAllowStatusStage 00A6                 __end_of_USBStdSetCfgHandler 0E37  
              __size_of_do_I2C_SEND_RESTART 0004                                 i1_CDCInitEP 11AB  
                    ?_rd2RegCompleteHandler 0079                          __end_of_device_dsc 18D7  
                   ??i1_USBCtrlTrfRxService 0072                         _do_I2C_DO_NACK_STOP 1D9D  
                         i1USBDeviceTasks@i 006F                            __size_of_i2c_ISR 0020  
                    ?_wr2RegCompleteHandler 0079                     ?_USBCtrlTrfSetupHandler 0070  
               ?i1_USBCtrlEPServiceComplete 0070                                i1_USBSuspend 1F23  
                   USBStdGetStatusHandler@p 00A7                     ??i1_USBCtrlTrfTxService 0070  
                    USBTransferOnePacket@ep 00AE                      i1_USBCtrlTrfOutHandler 1175  
                              ?_do_I2C_IDLE 0070                                    _SetupPkt 0050  
                              ?_do_I2C_RCEN 0070                     ??_OSCILLATOR_Initialize 00A6  
                     ?_USBConfigureEndpoint 00A6                           ??_USBDeviceAttach 00A6  
                __size_of_i2c_driver_TXData 0005             __size_of_do_I2C_DO_ADDRESS_NACK 0024  
             ??_i2c_setDataCompleteCallback 0078                   i1USBStdGetStatusHandler@p 0071  
                      ?_do_I2C_DO_NACK_STOP 0070                                 _line_coding 0257  
              __end_of_do_I2C_SEND_ADR_READ 1DCF                              ??_CDCTxService 00B1  
                __size_of_i2c_driver_isNACK 000C                       i1_USBStdSetCfgHandler 0D19  
                         ?i1_USBDeviceTasks 0070                     __size_of_USBDeviceTasks 00E9  
                               ??_do_I2C_RX 0070                                 ??_do_I2C_TX 0071  
                                  __ptext10 10EA                                    __ptext11 1EEA  
                                  __ptext20 0B93                                    __ptext12 1628  
                                  __ptext21 007B                                    __ptext13 141F  
                                  __ptext30 093B                                    __ptext22 1145  
                                  __ptext14 0EC8                                    __ptext31 0A20  
                                  __ptext23 0870                                    __ptext15 16E0  
                                  __ptext32 1DFF                                    __ptext24 124F  
                                  __ptext16 179F                                    __ptext41 03CA  
                                  __ptext33 1DA5                                    __ptext25 102C  
                                  __ptext17 0DA8                                    __ptext50 1570  
                                  __ptext42 1FC0                                    __ptext34 057E  
                                  __ptext26 134C                                    __ptext18 1ED1  
                                  __ptext51 080E                                    __ptext43 1F23  
                                  __ptext35 1F06                                    __ptext27 11E1  
                                  __ptext19 1517                                    __ptext60 0C12  
                                  __ptext52 0D19                                    __ptext44 1073  
                                  __ptext36 1E60                                    __ptext28 0635  
                                  __ptext61 1FA0                                    __ptext53 1EA1  
                                  __ptext45 1EB9                                    __ptext37 1DE7  
                                  __ptext29 0A9A                                    __ptext70 1F80  
                                  __ptext62 130A                                    __ptext54 14C2  
                                  __ptext46 06E7                                    __ptext38 04B2  
                                  __ptext71 1D78                                    __ptext63 1175  
                                  __ptext55 0B14                                    __ptext47 15CC  
                                  __ptext39 0C95                                    __ptext80 1DC7  
                                  __ptext72 12CB                                    __ptext64 0F5D  
                                  __ptext56 01B8                                    __ptext48 146F  
                                  __ptext81 1D95                                    __ptext73 13D3  
                                  __ptext65 0794                                    __ptext57 1115  
                                  __ptext49 0E37                                    __ptext90 1DA9  
                                  __ptext82 1D91                                    __ptext74 104F  
                                  __ptext66 08D3                                    __ptext58 173F  
                                  __ptext91 1D72                                    __ptext83 1D8D  
                                  __ptext75 1DA1                                    __ptext67 09AC  
                                  __ptext59 11AB                                    __ptext92 1D85  
                                  __ptext84 1D89                                    __ptext76 1D9D  
                                  __ptext68 1D7E                                    __ptext93 1D64  
                                  __ptext85 1DAE                                    __ptext77 1D99  
                                  __ptext69 1D7B                                    __ptext94 1D6F  
                                  __ptext86 1DB9                                    __ptext78 1DB3  
                                  __ptext95 1E8A                                    __ptext87 10C0  
                                  __ptext79 1DC0                                    __ptext96 1E3E  
                                  __ptext88 1D75                                    __ptext97 1E2E  
                                  __ptext89 1DDB                                    __ptext98 1E1E  
                                  __ptext99 0002                          ??i1_USBDeviceTasks 00A3  
                              _SSP1CON1bits 0215                                _SSP1CON2bits 0216  
                   __end_of_UserApplication 124F                        __end_of_do_I2C_RESET 1DC0  
                          __size_of_strncmp 0044                         __end_of_returnReset 1D69  
            __end_of_USBCtrlTrfSetupHandler 146F                               __size_of_main 0012  
                         ?_USBCtrlEPService 0070                         __end_of_mssp_setIRQ 1D78  
           i1USBConfigureEndpoint@direction 0070                                  strncmp@len 00AE  
                               _setCallBack 1098                          ??_USBCtrlEPService 025E  
                             _mssp_clearIRQ 1D78                         _USBCtrlTrfInHandler 093B  
         __size_ofi1_USBCtrlTrfSetupHandler 0053                      ??i1_USBWakeFromSuspend 0066  
                 ?i1_USBCtrlTrfSetupHandler 0070                                    _outPipes 01B0  
               ??i1_USBStdFeatureReqHandler 0066                      ??i1_USBCheckCDCRequest 0070  
                      _USBCtrlTrfOutHandler 11E1                                    int$flags 007E  
                   ?i1_USBTransferOnePacket 0070                   _USBCtrlEPAllowStatusStage 0A9A  
          __end_ofi1_USBStdGetStatusHandler 1517          __end_of_INTERRUPT_InterruptManager 0034  
                _INTERRUPT_InterruptManager 0004                                _SSP1STATbits 0214  
                    ??_USBTransferOnePacket 00AA            __end_of_do_I2C_SEND_RESTART_READ 1D8D  
                              ??_returnStop 007A                    __end_of_i2c_restartWrite 0004  
                     ??_do_I2C_DO_NACK_STOP 0070                   _USBDeferStatusStagePacket 01DB  
                  CDCTxService@byte_to_send 00B3                            i1USBDeviceInit@i 0074  
                          i1USBDeviceInit@p 0071                                  _INTCONbits 000B  
                      ?_USBCtrlTrfInHandler 0070               USBCtrlTrfTxService@byteToSend 00A8  
                                  memset@p1 00A6                            ?_USBStallHandler 0070  
                  USBStdFeatureReqHandler@p 00BF                            ?_do_I2C_TX_EMPTY 0070  
                   __size_of_WDT_Initialize 0004                      _do_I2C_DO_ADDRESS_NACK 104F  
                                  intlevel1 0000                      __size_of_USBDeviceInit 00B7  
               __size_ofi1_USBCtrlEPService 005C                      rd2RegCompleteHandler@p 0079  
 __end_ofi1_USER_USB_CALLBACK_EVENT_HANDLER 1145  __size_ofi1_USER_USB_CALLBACK_EVENT_HANDLER 0030  
   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 1175    __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0030  
        ?i1_USER_USB_CALLBACK_EVENT_HANDLER 0060         ??i1_USER_USB_CALLBACK_EVENT_HANDLER 007E  
         ??_USER_USB_CALLBACK_EVENT_HANDLER 00BA            ?_USER_USB_CALLBACK_EVENT_HANDLER 00B4  
         i1_USER_USB_CALLBACK_EVENT_HANDLER 1115             _USER_USB_CALLBACK_EVENT_HANDLER 1145  
                                 strchr@chr 00A6                           ??i1_USBDeviceInit 0070  
                                 strchr@ptr 00A8                __end_ofi1_USBCheckStdRequest 0870  
                         ??_i2c_driver_stop 0070                     ?_PIN_MANAGER_Initialize 0070  
                         i2c_restartWrite@p 0079                           __CFG_CLKOUTEN$OFF 0000  
                        __end_of_returnStop 1D67                              ?_mssp_clearIRQ 0070  
                                 strncmp@s1 00B2                                   strncmp@s2 00AC  
                   ?i1_USBConfigureEndpoint 0070              __end_ofi1_USBTransferOnePacket 0C95  
                    ??_USBConfigureEndpoint 00A7                       ?_USBCtrlTrfOutHandler 0070  
              __end_of_i2c_driver_getRXData 1D75                        __CFG_CPUDIV$NOCLKDIV 0000  
                    wr2RegCompleteHandler@p 0079                         _USBCtrlTrfRxService 0635  
                        _USBWakeFromSuspend 1FE0                     _USBStdFeatureReqHandler 007B  
                        _USBCheckCDCRequest 0870                         _USBCtrlTrfTxService 0A20  
                             __pstringtext1 18DF                               __pstringtext2 18E8  
                             __pstringtext3 1800                               __pstringtext4 1843  
                             __pstringtext5 1877                               __pstringtext6 18C5  
                             __pstringtext7 18D7                               __pstringtext8 18E5  
                             __pstringtext9 0000                  i1USBStdFeatureReqHandler@p 006B  
                    ?i1_USBStdSetCfgHandler 0070                      i1USBStdSetCfgHandler@i 006A  
                    i1USBStdSetCfgHandler@p 0067                         ?_USBWakeFromSuspend 0070  
                     ??_USBCtrlTrfInHandler 00A9                                    strlen@cp 00AA  
                     _USBAlternateInterface 01EB                      __size_of_i2c_setBuffer 000E  
                       ?_USBCheckCDCRequest 0070                                 _returnReset 1D67  
                       USBEnableEndpoint@ep 00B2                                    strstr@s1 00B8  
                                  strstr@s2 00B3                   i1_USBStdFeatureReqHandler 01B8  
                           _endpoint_number 01DE                                 _mssp_setIRQ 1D75  
       __end_ofi1_USBCtrlEPAllowStatusStage 0800                 i1_USBCtrlEPAllowStatusStage 0794  
                      ?_USBCtrlTrfRxService 0070                            ?_UserApplication 0070  
                             ?_getsUSBUSART 00B1              __end_of_PIN_MANAGER_Initialize 1E74  
               __end_of_i2c_busCollisionISR 1D81                    ?_USBCtrlEPAllowDataStage 0070  
                      ?_USBCtrlTrfTxService 0070              __size_of_rd1RegCompleteHandler 0010  
             __end_of_rd1RegCompleteHandler 1E3E              __size_ofi1_USBCtrlTrfInHandler 0068  
              _USBStatusStageTimeoutCounter 01DC               __end_ofi1_USBCtrlTrfInHandler 093B  
            __size_of_wr1RegCompleteHandler 0010               __end_of_wr1RegCompleteHandler 1E2E  
            __end_ofi1_USBConfigureEndpoint 134C                       _do_I2C_SEND_ADR_WRITE 1DC0  
                      ??_USBWakeFromSuspend 00BA                 __end_ofi1_USBEnableEndpoint 1FC0  
               __end_of_i2c_driver_sendNACK 1D89                  USBTransferOnePacket@handle 00AF  
                      __end_of_CDCTxService 057E                        _do_I2C_SEND_ADR_READ 1DC7  
                __end_of_i2c_driver_sendACK 1D85                        ??_USBCheckCDCRequest 00A6  
                                _USB_CD_Ptr 18E8                 __end_of_i2c_driver_resetBus 1D65  
